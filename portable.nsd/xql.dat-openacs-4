dbqd.contrib.obsolete-packages.acs-workflow.tcl.display-procs-oracle.wf_attribute_widget.party_with_at_least_one_member {dbqd.contrib.obsolete-packages.acs-workflow.tcl.display-procs-oracle.wf_attribute_widget.party_with_at_least_one_member {
      
			select p.party_id, 
			       acs_object.name(p.party_id) as name, 
			       case when p.email = '' then '' else '('||p.email||' end') as email
			from   parties p
			where  0 < (select count(*)
                                    from   users u, 
                                           party_approved_member_map m
			            where  m.party_id = p.party_id
			            and    u.user_id = m.member_id)
		    
      } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/tcl/display-procs-oracle.xql}
dbqd.contrib.obsolete-packages.acs-workflow.tcl.display-procs-oracle.wf_attribute_widget.party_with_at_least_one_member {dbqd.contrib.obsolete-packages.acs-workflow.tcl.display-procs-oracle.wf_attribute_widget.party_with_at_least_one_member {
      
			select p.party_id, 
			       acs_object.name(p.party_id) as name, 
			       case when p.email = '' then '' else '('||p.email||' end') as email
			from   parties p
			where  0 < (select count(*)
                                    from   users u, 
                                           party_approved_member_map m
			            where  m.party_id = p.party_id
			            and    u.user_id = m.member_id)
		    
      } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/tcl/display-procs-oracle.xql}
dbqd.contrib.obsolete-packages.acs-workflow.tcl.display-procs.wf_attribute_widget.party_with_at_least_one_member {dbqd.contrib.obsolete-packages.acs-workflow.tcl.display-procs.wf_attribute_widget.party_with_at_least_one_member {
      
			select p.party_id, 
			       acs_object__name(p.party_id) as name, 
			       case when p.email = '' then '' else '('||p.email||')' end as email
			from   parties p
			where  0 < (select count(*)
                                    from   users u, 
                                           party_approved_member_map m
			            where  m.party_id = p.party_id
			            and    u.user_id = m.member_id)
		    
      } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/tcl/display-procs-postgresql.xql}
dbqd.contrib.obsolete-packages.acs-workflow.tcl.display-procs.wf_assignment_widget.party_with_at_least_one_member {dbqd.contrib.obsolete-packages.acs-workflow.tcl.display-procs.wf_assignment_widget.party_with_at_least_one_member {
      
			select p.party_id, 
			       acs_object__name(p.party_id) as name, 
			       case when p.email = '' then '' else '('||p.email||')' end as email
			from   parties p
			where  0 < (select count(*)
                                    from   users u, 
                                           party_approved_member_map m
			            where  m.party_id = p.party_id
			            and    u.user_id = m.member_id)
		    
      } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/tcl/display-procs-postgresql.xql}
dbqd.contrib.obsolete-packages.acs-workflow.tcl.display-procs.wf_assignment_widget.assignment_select {dbqd.contrib.obsolete-packages.acs-workflow.tcl.display-procs.wf_assignment_widget.assignment_select {
      
	    select ca.party_id
	      from wf_case_assignments ca, wf_cases c
	     where c.case_id = :case_id
	       and ca.role_key = :role_key
	       and ca.workflow_key = c.workflow_key
	
      } {} {} {} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/tcl/display-procs.xql}
dbqd.contrib.obsolete-packages.acs-workflow.tcl.graph-procs.wf_get_workflow_net_internal.workflow_name {dbqd.contrib.obsolete-packages.acs-workflow.tcl.graph-procs.wf_get_workflow_net_internal.workflow_name {
       select pretty_name from acs_object_types where object_type = :workflow_key 
      } {} {} {} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/tcl/graph-procs.xql}
dbqd.contrib.obsolete-packages.acs-workflow.tcl.graph-procs.wf_get_workflow_net_internal.transition_def {dbqd.contrib.obsolete-packages.acs-workflow.tcl.graph-procs.wf_get_workflow_net_internal.transition_def {
      
	select transition_key,
	       transition_name,
	       sort_order,
	       trigger_type
	from   wf_transitions
	where  workflow_key = :workflow_key
	order  by sort_order
    
      } {} {} {} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/tcl/graph-procs.xql}
dbqd.contrib.obsolete-packages.acs-workflow.tcl.graph-procs.wf_get_workflow_net_internal.places_def {dbqd.contrib.obsolete-packages.acs-workflow.tcl.graph-procs.wf_get_workflow_net_internal.places_def {
      
	select p.place_key,
	       p.place_name,
	       p.sort_order
	from   wf_places p
	where  p.workflow_key = :workflow_key
	order  by p.sort_order
    
      } {} {} {} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/tcl/graph-procs.xql}
dbqd.contrib.obsolete-packages.acs-workflow.tcl.graph-procs.wf_get_workflow_net_internal.arcs_def {dbqd.contrib.obsolete-packages.acs-workflow.tcl.graph-procs.wf_get_workflow_net_internal.arcs_def {
      
	select transition_key,
	       place_key,
	       direction,
	       guard_callback,
	       guard_custom_arg,
	       guard_description
	from   wf_arcs
	where  workflow_key = :workflow_key
    
      } {} {} {} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/tcl/graph-procs.xql}
dbqd.contrib.obsolete-packages.acs-workflow.tcl.graph-procs.wf_generate_dot_representation.package_id {dbqd.contrib.obsolete-packages.acs-workflow.tcl.graph-procs.wf_generate_dot_representation.package_id {
      select package_id from apm_packages where package_key='acs-workflow'
      } {} {} {} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/tcl/graph-procs.xql}
dbqd.contrib.obsolete-packages.acs-workflow.tcl.graph-procs.wf_generate_dot_representation.package_id {dbqd.contrib.obsolete-packages.acs-workflow.tcl.graph-procs.wf_generate_dot_representation.package_id {
      select package_id from apm_packages where package_key='acs-workflow'
      } {} {} {} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/tcl/graph-procs.xql}
dbqd.contrib.obsolete-packages.acs-workflow.tcl.graph-procs.wf_generate_dot_representation.package_id {dbqd.contrib.obsolete-packages.acs-workflow.tcl.graph-procs.wf_generate_dot_representation.package_id {
      select package_id from apm_packages where package_key='acs-workflow'
      } {} {} {} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/tcl/graph-procs.xql}
dbqd.contrib.obsolete-packages.acs-workflow.tcl.workflow-procs-oracle.wf_case_info.case {dbqd.contrib.obsolete-packages.acs-workflow.tcl.workflow-procs-oracle.wf_case_info.case {
      
        select case_id,
               acs_object.name(object_id) as object_name,
        
               state
        from   wf_cases
        where  case_id = :case_id
    
      } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/tcl/workflow-procs-oracle.xql}
dbqd.contrib.obsolete-packages.acs-workflow.tcl.workflow-procs-oracle.wf_task_info.task {dbqd.contrib.obsolete-packages.acs-workflow.tcl.workflow-procs-oracle.wf_task_info.task {
      
        select t.task_id,
               t.case_id, 
               c.object_id,
               acs_object.name(c.object_id) as object_name,
               ot.pretty_name as object_type_pretty,
               c.workflow_key,
               tr.transition_name as task_name, 
               tr.instructions,
               t.state, 
               t.enabled_date,
               to_char(t.enabled_date, :date_format) as enabled_date_pretty,
               t.started_date,
               to_char(t.started_date, :date_format) as started_date_pretty,
               t.canceled_date,
               to_char(t.canceled_date, :date_format) as canceled_date_pretty,
               t.finished_date,
               to_char(t.finished_date, :date_format) as finished_date_pretty,
               t.overridden_date,
               to_char(t.overridden_date, :date_format) as overridden_date_pretty,
               t.holding_user, 
               acs_object.name(t.holding_user) as holding_user_name,
               p.email as holding_user_email,
               t.hold_timeout,
               to_char(t.hold_timeout, :date_format) as hold_timeout_pretty,
               t.deadline,
               to_char(t.deadline, :date_format) as deadline_pretty,
               t.deadline - sysdate as days_till_deadline,
               tr.estimated_minutes,
               sysdate
          from wf_tasks t, 
               wf_cases c, 
               wf_transition_info tr, 
               acs_objects o, 
               acs_object_types ot, 
               parties p
         where t.task_id = :task_id
           and c.case_id = t.case_id
           and tr.transition_key = t.transition_key
           and tr.workflow_key = t.workflow_key and tr.context_key = c.context_key
           and o.object_id = c.object_id
           and ot.object_type = o.object_type
           and p.party_id (+) = t.holding_user
    
      } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/tcl/workflow-procs-oracle.xql}
dbqd.contrib.obsolete-packages.acs-workflow.tcl.workflow-procs-oracle.wf_task_info.task_attributes_to_set {dbqd.contrib.obsolete-packages.acs-workflow.tcl.workflow-procs-oracle.wf_task_info.task_attributes_to_set {
      
        select a.attribute_id,
               a.attribute_name, 
               a.pretty_name, 
               a.datatype, 
               acs_object.get_attribute(t.case_id, a.attribute_name) as value,
               '' as attribute_widget
          from acs_attributes a, wf_transition_attribute_map m, wf_tasks t
         where t.task_id = :task_id
           and m.workflow_key = t.workflow_key and m.transition_key = t.transition_key
           and a.attribute_id = m.attribute_id
         order by m.sort_order
    
      } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/tcl/workflow-procs-oracle.xql}
dbqd.contrib.obsolete-packages.acs-workflow.tcl.workflow-procs-oracle.wf_task_info.task_assigned_users {dbqd.contrib.obsolete-packages.acs-workflow.tcl.workflow-procs-oracle.wf_task_info.task_assigned_users {
      
        select ut.user_id,
               acs_object.name(ut.user_id) as name,
               p.email as email
          from wf_user_tasks ut, parties p
         where ut.task_id = :task_id
           and p.party_id = ut.user_id
    
      } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/tcl/workflow-procs-oracle.xql}
dbqd.contrib.obsolete-packages.acs-workflow.tcl.workflow-procs-oracle.wf_journal.journal {dbqd.contrib.obsolete-packages.acs-workflow.tcl.workflow-procs-oracle.wf_journal.journal {
      
        select j.journal_id,
               j.action,
               j.action_pretty,
               o.creation_date,
               to_char(o.creation_date, :date_format) as creation_date_pretty,
               o.creation_user,
               acs_object.name(o.creation_user) as creation_user_name,
               p.email as creation_user_email, 
               o.creation_ip,
               j.msg
        from   journal_entries j, acs_objects o, parties p
        where  j.object_id = :case_id
          and  o.object_id = j.journal_id
          and  p.party_id (+) =  o.creation_user
        order  by o.creation_date $sql_order
    
      } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/tcl/workflow-procs-oracle.xql}
dbqd.contrib.obsolete-packages.acs-workflow.tcl.workflow-procs-oracle.wf_task_action.begin_task_action {dbqd.contrib.obsolete-packages.acs-workflow.tcl.workflow-procs-oracle.wf_task_action.begin_task_action {
      
            begin
                :1 := workflow_case.begin_task_action(
                    task_id => :task_id, 
                    action => :action, 
                    action_ip => :modifying_ip,
                    user_id => :user_id, 
                    msg => :msg);
            end;
        
      } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/tcl/workflow-procs-oracle.xql}
dbqd.contrib.obsolete-packages.acs-workflow.tcl.workflow-procs-oracle.wf_task_action.set_attribute_value {dbqd.contrib.obsolete-packages.acs-workflow.tcl.workflow-procs-oracle.wf_task_action.set_attribute_value {
      
                    begin
                        workflow_case.set_attribute_value(
                            journal_id => :journal_id, 
                            attribute_name => :attribute_name, 
                            value => :value
                        );
                    end;
                
      } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/tcl/workflow-procs-oracle.xql}
dbqd.contrib.obsolete-packages.acs-workflow.tcl.workflow-procs-oracle.wf_task_action.clear_assignments {dbqd.contrib.obsolete-packages.acs-workflow.tcl.workflow-procs-oracle.wf_task_action.clear_assignments {
       
                    begin 
                        workflow_case.clear_manual_assignments(
                            case_id => :case_id,
                            role_key => :role_key
                        );
                    end;
                
      } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/tcl/workflow-procs-oracle.xql}
dbqd.contrib.obsolete-packages.acs-workflow.tcl.workflow-procs-oracle.wf_task_action.add_manual_assignment {dbqd.contrib.obsolete-packages.acs-workflow.tcl.workflow-procs-oracle.wf_task_action.add_manual_assignment {
      
                        begin
                            workflow_case.add_manual_assignment(
                                case_id => :case_id,
                                role_key => :role_key,
                                party_id => :party_id
                            );
                        end;
                    
      } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/tcl/workflow-procs-oracle.xql}
dbqd.contrib.obsolete-packages.acs-workflow.tcl.workflow-procs-oracle.wf_task_action.end_task_action {dbqd.contrib.obsolete-packages.acs-workflow.tcl.workflow-procs-oracle.wf_task_action.end_task_action {
      
            begin
                workflow_case.end_task_action(
                    journal_id => :journal_id,
                    action => :action,
                    task_id => :task_id
                );
            end;
        
      } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/tcl/workflow-procs-oracle.xql}
dbqd.contrib.obsolete-packages.acs-workflow.tcl.workflow-procs-oracle.wf_message_transition_fire.transition_fire {dbqd.contrib.obsolete-packages.acs-workflow.tcl.workflow-procs-oracle.wf_message_transition_fire.transition_fire {
      
        begin
            workflow_case.fire_message_transition(
                task_id => :task_id
            );
        end;
    
      } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/tcl/workflow-procs-oracle.xql}
dbqd.contrib.obsolete-packages.acs-workflow.tcl.workflow-procs-oracle.wf_case_new.workflow_case_new {dbqd.contrib.obsolete-packages.acs-workflow.tcl.workflow-procs-oracle.wf_case_new.workflow_case_new {

      begin 
            :1 := workflow_case.new(case_id => :case_id,
                                    workflow_key => :workflow_key,
                                    context_key => :context_key,
                                    object_id => :object_id,
                                    creation_user => :user_id,
                                    creation_ip => :creation_ip
                                   ); 
      end;

      } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/tcl/workflow-procs-oracle.xql}
dbqd.contrib.obsolete-packages.acs-workflow.tcl.workflow-procs-oracle.wf_case_new.workflow_case_start_case {dbqd.contrib.obsolete-packages.acs-workflow.tcl.workflow-procs-oracle.wf_case_new.workflow_case_start_case {
      begin workflow_case.start_case(case_id => :case_id,
                                     creation_user => :user_id,
                                     creation_ip => :creation_ip
                                    ); end;

      } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/tcl/workflow-procs-oracle.xql}
dbqd.contrib.obsolete-packages.acs-workflow.tcl.workflow-procs-oracle.wf_case_suspend.case_suspend {dbqd.contrib.obsolete-packages.acs-workflow.tcl.workflow-procs-oracle.wf_case_suspend.case_suspend {
      
        begin
            workflow_case.suspend(
                case_id => :case_id, 
                user_id => :user_id,
                ip_address => :ip_address,
                msg => :msg
            );
        end;
    
      } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/tcl/workflow-procs-oracle.xql}
dbqd.contrib.obsolete-packages.acs-workflow.tcl.workflow-procs-oracle.wf_case_resume.case_resume {dbqd.contrib.obsolete-packages.acs-workflow.tcl.workflow-procs-oracle.wf_case_resume.case_resume {
      
        begin
            workflow_case.resume(
                case_id => :case_id, 
                user_id => :user_id,
                ip_address => :ip_address,
                msg => :msg
            );
        end;
    
      } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/tcl/workflow-procs-oracle.xql}
dbqd.contrib.obsolete-packages.acs-workflow.tcl.workflow-procs-oracle.wf_case_cancel.case_cancel {dbqd.contrib.obsolete-packages.acs-workflow.tcl.workflow-procs-oracle.wf_case_cancel.case_cancel {
      
        begin
            workflow_case.cancel(
                case_id => :case_id, 
                user_id => :user_id,
                ip_address => :ip_address,
                msg => :msg
            );
        end;
    
      } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/tcl/workflow-procs-oracle.xql}
dbqd.contrib.obsolete-packages.acs-workflow.tcl.workflow-procs-oracle.wf_case_comment.case_comment {dbqd.contrib.obsolete-packages.acs-workflow.tcl.workflow-procs-oracle.wf_case_comment.case_comment {
      
        begin
            :1 := journal_entry.new(
                object_id => :case_id,
                action => 'comment',
                creation_user => :user_id,
                creation_ip => :ip_address,
                msg => :msg
            );
        end;
    
      } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/tcl/workflow-procs-oracle.xql}
dbqd.contrib.obsolete-packages.acs-workflow.tcl.workflow-procs-oracle.wf_task_action.add_manual_assignment {dbqd.contrib.obsolete-packages.acs-workflow.tcl.workflow-procs-oracle.wf_task_action.add_manual_assignment {
      
                        begin
                            workflow_case.add_manual_assignment(
                                case_id => :case_id,
                                role_key => :role_key,
                                party_id => :party_id
                            );
                        end;
                    
      } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/tcl/workflow-procs-oracle.xql}
dbqd.contrib.obsolete-packages.acs-workflow.tcl.workflow-procs-oracle.wf_case_remove_manual_assignment.remove_manual_assignment {dbqd.contrib.obsolete-packages.acs-workflow.tcl.workflow-procs-oracle.wf_case_remove_manual_assignment.remove_manual_assignment {
      
	begin
            workflow_case.remove_manual_assignment(
                case_id  => :case_id,
                role_key => :role_key,
                party_id => :party_id
            );
        end;
    
      } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/tcl/workflow-procs-oracle.xql}
dbqd.contrib.obsolete-packages.acs-workflow.tcl.workflow-procs-oracle.wf_case_clear_manual_assignments.clear_manual_assignments {dbqd.contrib.obsolete-packages.acs-workflow.tcl.workflow-procs-oracle.wf_case_clear_manual_assignments.clear_manual_assignments {
      
	begin
            workflow_case.clear_manual_assignments(
                case_id  => :case_id,
                role_key => :role_key
            );
        end;
    
      } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/tcl/workflow-procs-oracle.xql}
dbqd.contrib.obsolete-packages.acs-workflow.tcl.workflow-procs-oracle.wf_case_add_task_assignment.add_task_assignment {dbqd.contrib.obsolete-packages.acs-workflow.tcl.workflow-procs-oracle.wf_case_add_task_assignment.add_task_assignment {
      
	begin
            workflow_case.add_task_assignment(
                task_id  => :task_id,
                party_id => :party_id,
                permanent_p => :permanent_value
            );
        end;
    
      } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/tcl/workflow-procs-oracle.xql}
dbqd.contrib.obsolete-packages.acs-workflow.tcl.workflow-procs-oracle.wf_case_remove_task_assignment.remove_task_assignment {dbqd.contrib.obsolete-packages.acs-workflow.tcl.workflow-procs-oracle.wf_case_remove_task_assignment.remove_task_assignment {
      
	begin
            workflow_case.remove_task_assignment(
                task_id  => :task_id,
                party_id => :party_id,
                permanent_p => :permanent_value
            );
        end;
    
      } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/tcl/workflow-procs-oracle.xql}
dbqd.contrib.obsolete-packages.acs-workflow.tcl.workflow-procs-oracle.wf_case_clear_task_assignments.clear_task_assignments {dbqd.contrib.obsolete-packages.acs-workflow.tcl.workflow-procs-oracle.wf_case_clear_task_assignments.clear_task_assignments {
      
	begin
            workflow_case.clear_task_assignments(
                task_id  => :task_id,
                permanent_p => :permanent_value
            );
        end;
    
      } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/tcl/workflow-procs-oracle.xql}
dbqd.contrib.obsolete-packages.acs-workflow.tcl.workflow-procs-oracle.wf_case_set_case_deadline.set_case_deadline {dbqd.contrib.obsolete-packages.acs-workflow.tcl.workflow-procs-oracle.wf_case_set_case_deadline.set_case_deadline {
      
	begin
            workflow_case.set_case_deadline(
	        case_id => :case_id,
                transition_key => :transition_key,
                deadline => :deadline
            );
        end;
    
      } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/tcl/workflow-procs-oracle.xql}
dbqd.contrib.obsolete-packages.acs-workflow.tcl.workflow-procs-oracle.wf_case_remove_case_deadline.remove_case_deadline {dbqd.contrib.obsolete-packages.acs-workflow.tcl.workflow-procs-oracle.wf_case_remove_case_deadline.remove_case_deadline {
      
	begin
            workflow_case.remove_case_deadline(
	        case_id => :case_id,
                transition_key => :transition_key
            );
        end;
    
      } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/tcl/workflow-procs-oracle.xql}
dbqd.contrib.obsolete-packages.acs-workflow.tcl.workflow-procs-oracle.wf_add_place.wf_add_place {dbqd.contrib.obsolete-packages.acs-workflow.tcl.workflow-procs-oracle.wf_add_place.wf_add_place {
      
        begin
            workflow.add_place(
                workflow_key => :workflow_key,
                place_key => :place_key,
                place_name => :place_name,
                sort_order => :sort_order
            );
        end;
    
      } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/tcl/workflow-procs-oracle.xql}
dbqd.contrib.obsolete-packages.acs-workflow.tcl.workflow-procs-oracle.wf_delete_place.wf_delete_place {dbqd.contrib.obsolete-packages.acs-workflow.tcl.workflow-procs-oracle.wf_delete_place.wf_delete_place {
      
        begin
            workflow.delete_place(
                workflow_key => :workflow_key,
                place_key => :place_key
            );
        end;
    
      } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/tcl/workflow-procs-oracle.xql}
dbqd.contrib.obsolete-packages.acs-workflow.tcl.workflow-procs-oracle.wf_add_role.wf_add_role {dbqd.contrib.obsolete-packages.acs-workflow.tcl.workflow-procs-oracle.wf_add_role.wf_add_role {
      
	begin
            workflow.add_role(
                workflow_key => :workflow_key,
                role_key => :role_key,
                role_name => :role_name,
                sort_order => :sort_order
            );
        end;
    
      } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/tcl/workflow-procs-oracle.xql}
dbqd.contrib.obsolete-packages.acs-workflow.tcl.workflow-procs-oracle.wf_move_role_up.move_role_up {dbqd.contrib.obsolete-packages.acs-workflow.tcl.workflow-procs-oracle.wf_move_role_up.move_role_up {
      
	begin
            workflow.move_role_up(
                workflow_key => :workflow_key,
                role_key => :role_key
            );
        end;
    
      } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/tcl/workflow-procs-oracle.xql}
dbqd.contrib.obsolete-packages.acs-workflow.tcl.workflow-procs-oracle.wf_move_role_down.move_role_down {dbqd.contrib.obsolete-packages.acs-workflow.tcl.workflow-procs-oracle.wf_move_role_down.move_role_down {
      
	begin
            workflow.move_role_down(
                workflow_key => :workflow_key,
                role_key => :role_key
            );
        end;
    
      } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/tcl/workflow-procs-oracle.xql}
dbqd.contrib.obsolete-packages.acs-workflow.tcl.workflow-procs-oracle.wf_delete_role.wf_delete_role {dbqd.contrib.obsolete-packages.acs-workflow.tcl.workflow-procs-oracle.wf_delete_role.wf_delete_role {
      
	begin
            workflow.delete_role(
                workflow_key => :workflow_key,
                role_key => :role_key
            );
        end;
    
      } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/tcl/workflow-procs-oracle.xql}
dbqd.contrib.obsolete-packages.acs-workflow.tcl.workflow-procs-oracle.wf_add_transition.wf_add_transition {dbqd.contrib.obsolete-packages.acs-workflow.tcl.workflow-procs-oracle.wf_add_transition.wf_add_transition {
      
	    begin
		workflow.add_transition(
		    workflow_key => :workflow_key,
		    transition_key => :transition_key,
		    transition_name => :transition_name,
		    role_key => :role_key,
		    sort_order => :sort_order,
		    trigger_type => :trigger_type
		);
	    end;
	
      } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/tcl/workflow-procs-oracle.xql}
dbqd.contrib.obsolete-packages.acs-workflow.tcl.workflow-procs-oracle.wf_delete_transition.wf_delete_transition {dbqd.contrib.obsolete-packages.acs-workflow.tcl.workflow-procs-oracle.wf_delete_transition.wf_delete_transition {
      
	begin
            workflow.delete_transition(
                workflow_key => :workflow_key,
                transition_key => :transition_key
            );
        end;
    
      } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/tcl/workflow-procs-oracle.xql}
dbqd.contrib.obsolete-packages.acs-workflow.tcl.workflow-procs-oracle.wf_add_arc.wf_add_arc {dbqd.contrib.obsolete-packages.acs-workflow.tcl.workflow-procs-oracle.wf_add_arc.wf_add_arc {
      
        begin
            workflow.add_arc(
                workflow_key => :workflow_key,
	        transition_key => :transition_key,
                place_key => :place_key,
                direction => :direction,
                guard_callback => :guard_callback,
                guard_custom_arg => :guard_custom_arg,
                guard_description => :guard_description
            );
        end;
    
      } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/tcl/workflow-procs-oracle.xql}
dbqd.contrib.obsolete-packages.acs-workflow.tcl.workflow-procs-oracle.wf_add_arc_out.wf_add_arc {dbqd.contrib.obsolete-packages.acs-workflow.tcl.workflow-procs-oracle.wf_add_arc_out.wf_add_arc {
      
        begin
            workflow.add_arc(
                workflow_key => :workflow_key,
	        transition_key => :from_transition_key,
                place_key => :to_place_key,
                guard_callback => :guard_callback,
                guard_custom_arg => :guard_custom_arg,
                guard_description => :guard_description
            );
        end;
    
      } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/tcl/workflow-procs-oracle.xql}
dbqd.contrib.obsolete-packages.acs-workflow.tcl.workflow-procs-oracle.wf_add_arc_in.wf_add_arc {dbqd.contrib.obsolete-packages.acs-workflow.tcl.workflow-procs-oracle.wf_add_arc_in.wf_add_arc {
      
        begin
            workflow.add_arc(
                workflow_key => :workflow_key,
	        transition_key => :to_transition_key,
                place_key => :from_place_key
            );
        end;
    
      } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/tcl/workflow-procs-oracle.xql}
dbqd.contrib.obsolete-packages.acs-workflow.tcl.workflow-procs-oracle.wf_delete_arc.wf_delete_arc {dbqd.contrib.obsolete-packages.acs-workflow.tcl.workflow-procs-oracle.wf_delete_arc.wf_delete_arc {
      
        begin
            workflow.delete_arc(
                workflow_key => :workflow_key,
                transition_key => :transition_key,
                place_key => :place_key,
                direction => :direction
            );
        end;
    
      } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/tcl/workflow-procs-oracle.xql}
dbqd.contrib.obsolete-packages.acs-workflow.tcl.workflow-procs-oracle.wf_add_trans_attribute_map.add_trans_attribute_map_attribute_id {dbqd.contrib.obsolete-packages.acs-workflow.tcl.workflow-procs-oracle.wf_add_trans_attribute_map.add_trans_attribute_map_attribute_id {
      
	    begin
	        workflow.add_trans_attribute_map(
                    workflow_key => :workflow_key,
	            transition_key => :transition_key,
	            attribute_id => :attribute_id,
	            sort_order => :sort_order
                );
	    end;
	
      } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/tcl/workflow-procs-oracle.xql}
dbqd.contrib.obsolete-packages.acs-workflow.tcl.workflow-procs-oracle.wf_add_trans_attribute_map.add_trans_attribute_map_attribute_name {dbqd.contrib.obsolete-packages.acs-workflow.tcl.workflow-procs-oracle.wf_add_trans_attribute_map.add_trans_attribute_map_attribute_name {
      
	    begin
	        workflow.add_trans_attribute_map(
                    workflow_key => :workflow_key,
	            transition_key => :transition_key,
	            attribute_name => :attribute_name,
	            sort_order => :sort_order
                );
	    end;
	
      } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/tcl/workflow-procs-oracle.xql}
dbqd.contrib.obsolete-packages.acs-workflow.tcl.workflow-procs-oracle.wf_delete_trans_attribute_map.delete_trans_attribute_map {dbqd.contrib.obsolete-packages.acs-workflow.tcl.workflow-procs-oracle.wf_delete_trans_attribute_map.delete_trans_attribute_map {
      
        begin
            workflow.delete_trans_attribute_map(
                workflow_key => :workflow_key,
                transition_key => :transition_key,
                attribute_id => :attribute_id
            );
        end;
    
      } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/tcl/workflow-procs-oracle.xql}
dbqd.contrib.obsolete-packages.acs-workflow.tcl.workflow-procs-oracle.wf_add_trans_role_assign_map.add_trans_role_assign_map {dbqd.contrib.obsolete-packages.acs-workflow.tcl.workflow-procs-oracle.wf_add_trans_role_assign_map.add_trans_role_assign_map {
      
        begin
            workflow.add_trans_role_assign_map(
                workflow_key => :workflow_key,
                transition_key => :transition_key,
                assign_role_key => :assign_role_key
            );
        end;
    
      } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/tcl/workflow-procs-oracle.xql}
dbqd.contrib.obsolete-packages.acs-workflow.tcl.workflow-procs-oracle.wf_delete_trans_role_assign_map.delete_trans_role_assign_map {dbqd.contrib.obsolete-packages.acs-workflow.tcl.workflow-procs-oracle.wf_delete_trans_role_assign_map.delete_trans_role_assign_map {
      
        begin
            workflow.delete_trans_role_assign_map(
                workflow_key => :workflow_key,
                transition_key => :transition_key,
                assign_role_key => :assign_role_key
            );
        end;
    
      } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/tcl/workflow-procs-oracle.xql}
dbqd.contrib.obsolete-packages.acs-workflow.tcl.workflow-procs-oracle.wf_simple_workflow_p.simple_workflow {dbqd.contrib.obsolete-packages.acs-workflow.tcl.workflow-procs-oracle.wf_simple_workflow_p.simple_workflow {
      begin :1 := workflow.simple_p(:workflow_key); end;
      } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/tcl/workflow-procs-oracle.xql}
dbqd.contrib.obsolete-packages.acs-workflow.tcl.workflow-procs-oracle.wf_export_workflow.declare_object_type {dbqd.contrib.obsolete-packages.acs-workflow.tcl.workflow-procs-oracle.wf_export_workflow.declare_object_type {
declare
    v_workflow_key varchar2(40);
begin
    v_workflow_key := workflow.create_workflow(
        workflow_key => '[db_quote $new_workflow_key]', 
        pretty_name => '[db_quote $new_workflow_pretty_name]', 
        pretty_plural => '[db_quote $new_workflow_pretty_plural]', 
        description => '[db_quote $description]', 
        table_name => '[db_quote $new_table_name]'
    );
end;
/
show errors

        } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/tcl/workflow-procs-oracle.xql}
dbqd.contrib.obsolete-packages.acs-workflow.tcl.workflow-procs-oracle.wf_export_workflow.add_place {dbqd.contrib.obsolete-packages.acs-workflow.tcl.workflow-procs-oracle.wf_export_workflow.add_place {
begin
    workflow.add_place(
        workflow_key => '[db_quote $new_workflow_key]',
        place_key    => '[db_quote $place_key]', 
        place_name   => '[db_quote $place_name]', 
        sort_order   => [ad_decode $sort_order "" "null" $sort_order]
    );
end;
/
show errors 
        } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/tcl/workflow-procs-oracle.xql}
dbqd.contrib.obsolete-packages.acs-workflow.tcl.workflow-procs-oracle.wf_export_workflow.add_role {dbqd.contrib.obsolete-packages.acs-workflow.tcl.workflow-procs-oracle.wf_export_workflow.add_role {
begin
    workflow.add_role(
        workflow_key => '[db_quote $new_workflow_key]',
        role_key     => '[db_quote $role_key]',
        role_name    => '[db_quote $role_name]',
        sort_order   => [ad_decode $sort_order "" "null" $sort_order]
    );
end;
/
show errors
        } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/tcl/workflow-procs-oracle.xql}
dbqd.contrib.obsolete-packages.acs-workflow.tcl.workflow-procs-oracle.wf_export_workflow.add_transition {dbqd.contrib.obsolete-packages.acs-workflow.tcl.workflow-procs-oracle.wf_export_workflow.add_transition {
begin
    workflow.add_transition(
        workflow_key    => '[db_quote $new_workflow_key]',
        transition_key  => '[db_quote $transition_key]',
        transition_name => '[db_quote $transition_name]',
        role_key        => '[db_quote $role_key]',
        sort_order      => [ad_decode $sort_order "" "null" $sort_order],
        trigger_type    => '[db_quote $trigger_type]'
    );
end;
/
show errors
        } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/tcl/workflow-procs-oracle.xql}
dbqd.contrib.obsolete-packages.acs-workflow.tcl.workflow-procs-oracle.wf_export_workflow.add_arc {dbqd.contrib.obsolete-packages.acs-workflow.tcl.workflow-procs-oracle.wf_export_workflow.add_arc {
begin
    workflow.add_arc(
        workflow_key          => '[db_quote $new_workflow_key]',
        transition_key        => '[db_quote $transition_key]',
        place_key             => '[db_quote $place_key]',
        direction             => '[db_quote $direction]',
        guard_callback        => '[db_quote $guard_callback]',
        guard_custom_arg      => '[db_quote $guard_custom_arg]',
        guard_description     => '[db_quote $guard_description]'
    );
end;
/
show errors
        } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/tcl/workflow-procs-oracle.xql}
dbqd.contrib.obsolete-packages.acs-workflow.tcl.workflow-procs-oracle.wf_export_workflow.create_attribute {dbqd.contrib.obsolete-packages.acs-workflow.tcl.workflow-procs-oracle.wf_export_workflow.create_attribute {
declare
    v_attribute_id number;
begin
    v_attribute_id := workflow.create_attribute(
        workflow_key => '[db_quote $new_workflow_key]',
        attribute_name => '[db_quote $attribute_name]',
        datatype => '[db_quote $datatype]',
        pretty_name => '[db_quote $pretty_name]',
        default_value => '[db_quote $default_value]'
    );
end;
/
show errors
        } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/tcl/workflow-procs-oracle.xql}
dbqd.contrib.obsolete-packages.acs-workflow.tcl.workflow-procs-oracle.wf_export_workflow.add_trans_attribute_map {dbqd.contrib.obsolete-packages.acs-workflow.tcl.workflow-procs-oracle.wf_export_workflow.add_trans_attribute_map {
begin
    workflow.add_trans_attribute_map(
        workflow_key   => '[db_quote $new_workflow_key]', 
        transition_key => '[db_quote $transition_key]',
        attribute_name => '[db_quote $attribute_name]',
        sort_order     => [ad_decode $sort_order "" "null" $sort_order]
    );
end;
/
show errors
        } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/tcl/workflow-procs-oracle.xql}
dbqd.contrib.obsolete-packages.acs-workflow.tcl.workflow-procs-oracle.wf_export_workflow.add_trans_role_assign_map {dbqd.contrib.obsolete-packages.acs-workflow.tcl.workflow-procs-oracle.wf_export_workflow.add_trans_role_assign_map {
begin
    workflow.add_trans_role_assign_map(
        workflow_key    => '[db_quote $new_workflow_key]',
        transition_key  => '[db_quote $transition_key]',
        assign_role_key => '[db_quote $assign_role_key]'
    );
end;
/
show errors;
        } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/tcl/workflow-procs-oracle.xql}
dbqd.contrib.obsolete-packages.acs-workflow.tcl.workflow-procs-oracle.wf_sweep_time_events.sweep_timed_transitions {dbqd.contrib.obsolete-packages.acs-workflow.tcl.workflow-procs-oracle.wf_sweep_time_events.sweep_timed_transitions {
         begin
           workflow_case.sweep_timed_transitions;
         end;
      } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/tcl/workflow-procs-oracle.xql}
dbqd.contrib.obsolete-packages.acs-workflow.tcl.workflow-procs-oracle.wf_sweep_time_events.sweep_hold_timeout {dbqd.contrib.obsolete-packages.acs-workflow.tcl.workflow-procs-oracle.wf_sweep_time_events.sweep_hold_timeout {
         begin
           workflow_case.sweep_hold_timeout;
         end;
      } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/tcl/workflow-procs-oracle.xql}
dbqd.contrib.obsolete-packages.acs-workflow.tcl.workflow-procs.wf_case_info.case {dbqd.contrib.obsolete-packages.acs-workflow.tcl.workflow-procs.wf_case_info.case {
      
        select case_id,
               acs_object__name(object_id) as object_name,
        
               state
        from   wf_cases
        where  case_id = :case_id
    
      } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/tcl/workflow-procs-postgresql.xql}
dbqd.contrib.obsolete-packages.acs-workflow.tcl.workflow-procs.wf_task_info.task {dbqd.contrib.obsolete-packages.acs-workflow.tcl.workflow-procs.wf_task_info.task {

        select t.task_id,
               t.case_id, 
               c.object_id,
               acs_object__name(c.object_id) as object_name,
               ot.pretty_name as object_type_pretty,
               c.workflow_key,
               tr.transition_name as task_name, 
               tr.instructions,
               t.state, 
               t.enabled_date,
               to_char(t.enabled_date, :date_format) as enabled_date_pretty,
               t.started_date,
               to_char(t.started_date, :date_format) as started_date_pretty,
               t.canceled_date,
               to_char(t.canceled_date, :date_format) as canceled_date_pretty,
               t.finished_date,
               to_char(t.finished_date, :date_format) as finished_date_pretty,
               t.overridden_date,
               to_char(t.overridden_date, :date_format) as overridden_date_pretty,
               t.holding_user, 
               acs_object__name(t.holding_user) as holding_user_name,
               p.email as holding_user_email,
               t.hold_timeout,
               to_char(t.hold_timeout, :date_format) as hold_timeout_pretty,
               t.deadline,
               to_char(t.deadline, :date_format) as deadline_pretty,
               t.deadline - current_timestamp as days_till_deadline,
               tr.estimated_minutes,
               current_timestamp
          from wf_tasks t left outer join parties p 
                on p.party_id = t.holding_user,
               wf_cases c, 
               wf_transition_info tr, 
               acs_objects o, 
               acs_object_types ot
         where t.task_id = :task_id
           and c.case_id = t.case_id
           and tr.transition_key = t.transition_key
           and tr.workflow_key = t.workflow_key and tr.context_key = c.context_key
           and o.object_id = c.object_id
           and ot.object_type = o.object_type
    
      } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/tcl/workflow-procs-postgresql.xql}
dbqd.contrib.obsolete-packages.acs-workflow.tcl.workflow-procs.wf_task_info.task_attributes_to_set {dbqd.contrib.obsolete-packages.acs-workflow.tcl.workflow-procs.wf_task_info.task_attributes_to_set {
      
        select a.attribute_id,
               a.attribute_name, 
               a.pretty_name, 
               a.datatype, 
               acs_object__get_attribute(t.case_id, a.attribute_name) as value,
               '' as attribute_widget
          from acs_attributes a, wf_transition_attribute_map m, wf_tasks t
         where t.task_id = :task_id
           and m.workflow_key = t.workflow_key and m.transition_key = t.transition_key
           and a.attribute_id = m.attribute_id
         order by m.sort_order
    
      } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/tcl/workflow-procs-postgresql.xql}
dbqd.contrib.obsolete-packages.acs-workflow.tcl.workflow-procs.wf_task_info.task_assigned_users {dbqd.contrib.obsolete-packages.acs-workflow.tcl.workflow-procs.wf_task_info.task_assigned_users {
      
        select ut.user_id,
               acs_object__name(ut.user_id) as name,
               p.email as email
          from wf_user_tasks ut, parties p
         where ut.task_id = :task_id
           and p.party_id = ut.user_id
    
      } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/tcl/workflow-procs-postgresql.xql}
dbqd.contrib.obsolete-packages.acs-workflow.tcl.workflow-procs.wf_journal.journal {dbqd.contrib.obsolete-packages.acs-workflow.tcl.workflow-procs.wf_journal.journal {

        select j.journal_id,
               j.action,
               j.action_pretty,
               o.creation_date,
               to_char(o.creation_date, :date_format) as creation_date_pretty,
               o.creation_user,
               acs_object__name(o.creation_user) as creation_user_name,
               p.email as creation_user_email, 
               o.creation_ip,
               j.msg
        from   journal_entries j, acs_objects o left outer join parties p
                on p.party_id =  o.creation_user
        where  j.object_id = :case_id
          and  o.object_id = j.journal_id
        order  by o.creation_date $sql_order
    
      } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/tcl/workflow-procs-postgresql.xql}
dbqd.contrib.obsolete-packages.acs-workflow.tcl.workflow-procs.wf_task_action.begin_task_action {dbqd.contrib.obsolete-packages.acs-workflow.tcl.workflow-procs.wf_task_action.begin_task_action {
 
                select workflow_case__begin_task_action (
                    :task_id, 
                    :action, 
                    :modifying_ip,
                    :user_id, 
                    :msg);
        
      } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/tcl/workflow-procs-postgresql.xql}
dbqd.contrib.obsolete-packages.acs-workflow.tcl.workflow-procs.wf_task_action.set_attribute_value {dbqd.contrib.obsolete-packages.acs-workflow.tcl.workflow-procs.wf_task_action.set_attribute_value {

		select workflow_case__set_attribute_value (
                            :journal_id, 
                            :attribute_name, 
                            :value
                        );
                
      } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/tcl/workflow-procs-postgresql.xql}
dbqd.contrib.obsolete-packages.acs-workflow.tcl.workflow-procs.wf_task_action.clear_assignments {dbqd.contrib.obsolete-packages.acs-workflow.tcl.workflow-procs.wf_task_action.clear_assignments {
		select workflow_case__clear_manual_assignments (
                            :case_id,
                            :role_key
                        );
                
      } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/tcl/workflow-procs-postgresql.xql}
dbqd.contrib.obsolete-packages.acs-workflow.tcl.workflow-procs.wf_task_action.add_manual_assignment {dbqd.contrib.obsolete-packages.acs-workflow.tcl.workflow-procs.wf_task_action.add_manual_assignment {

	select workflow_case__add_manual_assignment (
                                :case_id,
                                :role_key,
                                :party_id
                            );
                    
      } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/tcl/workflow-procs-postgresql.xql}
dbqd.contrib.obsolete-packages.acs-workflow.tcl.workflow-procs.wf_task_action.end_task_action {dbqd.contrib.obsolete-packages.acs-workflow.tcl.workflow-procs.wf_task_action.end_task_action {

		select workflow_case__end_task_action (
                    :journal_id,
                    :action,
                    :task_id
                );
        
      } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/tcl/workflow-procs-postgresql.xql}
dbqd.contrib.obsolete-packages.acs-workflow.tcl.workflow-procs.wf_message_transition_fire.transition_fire {dbqd.contrib.obsolete-packages.acs-workflow.tcl.workflow-procs.wf_message_transition_fire.transition_fire {

	select workflow_case__fire_message_transition (
                :task_id
            );
    
      } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/tcl/workflow-procs-postgresql.xql}
dbqd.contrib.obsolete-packages.acs-workflow.tcl.workflow-procs.wf_case_new.workflow_case_new {dbqd.contrib.obsolete-packages.acs-workflow.tcl.workflow-procs.wf_case_new.workflow_case_new {
      select workflow_case__new (
		:case_id,
                :workflow_key,
                :context_key,
                :object_id,
                now(),
                :user_id,
                :creation_ip
             );
      } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/tcl/workflow-procs-postgresql.xql}
dbqd.contrib.obsolete-packages.acs-workflow.tcl.workflow-procs.wf_case_new.workflow_case_start_case {dbqd.contrib.obsolete-packages.acs-workflow.tcl.workflow-procs.wf_case_new.workflow_case_start_case {
      select workflow_case__start_case (
		:case_id,
                :user_id,
                :creation_ip,
                null
             );

      } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/tcl/workflow-procs-postgresql.xql}
dbqd.contrib.obsolete-packages.acs-workflow.tcl.workflow-procs.wf_case_suspend.case_suspend {dbqd.contrib.obsolete-packages.acs-workflow.tcl.workflow-procs.wf_case_suspend.case_suspend {
      
        select workflow_case__suspend (
                :case_id, 
                :user_id,
                :ip_address,
                :msg
            );
        
      } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/tcl/workflow-procs-postgresql.xql}
dbqd.contrib.obsolete-packages.acs-workflow.tcl.workflow-procs.wf_case_resume.case_resume {dbqd.contrib.obsolete-packages.acs-workflow.tcl.workflow-procs.wf_case_resume.case_resume {
      
        select workflow_case__resume (
                :case_id, 
                :user_id,
                :ip_address,
                :msg
            );
    
      } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/tcl/workflow-procs-postgresql.xql}
dbqd.contrib.obsolete-packages.acs-workflow.tcl.workflow-procs.wf_case_cancel.case_cancel {dbqd.contrib.obsolete-packages.acs-workflow.tcl.workflow-procs.wf_case_cancel.case_cancel {
      
        select workflow_case__cancel (
                :case_id, 
                :user_id,
                :ip_address,
                :msg
            );
        
      } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/tcl/workflow-procs-postgresql.xql}
dbqd.contrib.obsolete-packages.acs-workflow.tcl.workflow-procs.wf_case_comment.case_comment {dbqd.contrib.obsolete-packages.acs-workflow.tcl.workflow-procs.wf_case_comment.case_comment {

            select journal_entry__new (
                null,
                :case_id,
                'comment',
                null,
                now(),
                :user_id,
                :ip_address,
                :msg
            )
    
      } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/tcl/workflow-procs-postgresql.xql}
dbqd.contrib.obsolete-packages.acs-workflow.tcl.workflow-procs.wf_case_add_manual_assignment.add_manual_assignment {dbqd.contrib.obsolete-packages.acs-workflow.tcl.workflow-procs.wf_case_add_manual_assignment.add_manual_assignment {
		select workflow_case__add_manual_assignment (
                                :case_id,
                                :role_key,
                                :party_id
                            );
                    
      } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/tcl/workflow-procs-postgresql.xql}
dbqd.contrib.obsolete-packages.acs-workflow.tcl.workflow-procs.wf_case_remove_manual_assignment.remove_manual_assignment {dbqd.contrib.obsolete-packages.acs-workflow.tcl.workflow-procs.wf_case_remove_manual_assignment.remove_manual_assignment {

	select workflow_case__remove_manual_assignment (
                :case_id,
                :role_key,
                :party_id
            );
    
      } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/tcl/workflow-procs-postgresql.xql}
dbqd.contrib.obsolete-packages.acs-workflow.tcl.workflow-procs.wf_case_clear_manual_assignments.clear_manual_assignments {dbqd.contrib.obsolete-packages.acs-workflow.tcl.workflow-procs.wf_case_clear_manual_assignments.clear_manual_assignments {

	select workflow_case__clear_manual_assignments (
                :case_id,
                :role_key
            );
    
      } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/tcl/workflow-procs-postgresql.xql}
dbqd.contrib.obsolete-packages.acs-workflow.tcl.workflow-procs.wf_case_add_task_assignment.add_task_assignment {dbqd.contrib.obsolete-packages.acs-workflow.tcl.workflow-procs.wf_case_add_task_assignment.add_task_assignment {

	select workflow_case__add_task_assignment (
                :task_id,
                :party_id,
                :permanent_value
            );
    
      } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/tcl/workflow-procs-postgresql.xql}
dbqd.contrib.obsolete-packages.acs-workflow.tcl.workflow-procs.wf_case_remove_task_assignment.remove_task_assignment {dbqd.contrib.obsolete-packages.acs-workflow.tcl.workflow-procs.wf_case_remove_task_assignment.remove_task_assignment {

	select workflow_case__remove_task_assignment (
                :task_id,
                :party_id,
                :permanent_value
            );
    
      } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/tcl/workflow-procs-postgresql.xql}
dbqd.contrib.obsolete-packages.acs-workflow.tcl.workflow-procs.wf_case_clear_task_assignments.clear_task_assignments {dbqd.contrib.obsolete-packages.acs-workflow.tcl.workflow-procs.wf_case_clear_task_assignments.clear_task_assignments {

	select workflow_case__clear_task_assignments (
                :task_id,
                :permanent_value
            );
    
      } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/tcl/workflow-procs-postgresql.xql}
dbqd.contrib.obsolete-packages.acs-workflow.tcl.workflow-procs.wf_case_set_case_deadline.set_case_deadline {dbqd.contrib.obsolete-packages.acs-workflow.tcl.workflow-procs.wf_case_set_case_deadline.set_case_deadline {

	select workflow_case__set_case_deadline (
	        :case_id,
                :transition_key,
                :deadline
            );
    
      } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/tcl/workflow-procs-postgresql.xql}
dbqd.contrib.obsolete-packages.acs-workflow.tcl.workflow-procs.wf_case_remove_case_deadline.remove_case_deadline {dbqd.contrib.obsolete-packages.acs-workflow.tcl.workflow-procs.wf_case_remove_case_deadline.remove_case_deadline {

	select workflow_case__remove_case_deadline (
	        :case_id,
                :transition_key
            );
    
      } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/tcl/workflow-procs-postgresql.xql}
dbqd.contrib.obsolete-packages.acs-workflow.tcl.workflow-procs.wf_add_place.wf_add_place {dbqd.contrib.obsolete-packages.acs-workflow.tcl.workflow-procs.wf_add_place.wf_add_place {

	select workflow__add_place (
                :workflow_key,
                :place_key,
                :place_name,
                :sort_order
            );
    
      } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/tcl/workflow-procs-postgresql.xql}
dbqd.contrib.obsolete-packages.acs-workflow.tcl.workflow-procs.wf_delete_place.wf_delete_place {dbqd.contrib.obsolete-packages.acs-workflow.tcl.workflow-procs.wf_delete_place.wf_delete_place {
 
	select workflow__delete_place (
                :workflow_key,
                :place_key
            );
    
      } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/tcl/workflow-procs-postgresql.xql}
dbqd.contrib.obsolete-packages.acs-workflow.tcl.workflow-procs.wf_add_role.wf_add_role {dbqd.contrib.obsolete-packages.acs-workflow.tcl.workflow-procs.wf_add_role.wf_add_role {

	select workflow__add_role (
                :workflow_key,
                :role_key,
                :role_name,
                :sort_order
            );
    
      } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/tcl/workflow-procs-postgresql.xql}
dbqd.contrib.obsolete-packages.acs-workflow.tcl.workflow-procs.wf_move_role_up.move_role_up {dbqd.contrib.obsolete-packages.acs-workflow.tcl.workflow-procs.wf_move_role_up.move_role_up {

	select workflow__move_role_up (
                :workflow_key,
                :role_key
            );
    
      } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/tcl/workflow-procs-postgresql.xql}
dbqd.contrib.obsolete-packages.acs-workflow.tcl.workflow-procs.wf_move_role_down.move_role_down {dbqd.contrib.obsolete-packages.acs-workflow.tcl.workflow-procs.wf_move_role_down.move_role_down {

	select workflow__move_role_down (
                :workflow_key,
                :role_key
            );
    
      } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/tcl/workflow-procs-postgresql.xql}
dbqd.contrib.obsolete-packages.acs-workflow.tcl.workflow-procs.wf_delete_role.wf_delete_role {dbqd.contrib.obsolete-packages.acs-workflow.tcl.workflow-procs.wf_delete_role.wf_delete_role {

	select workflow__delete_role (
                :workflow_key,
                :role_key
            );
    
      } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/tcl/workflow-procs-postgresql.xql}
dbqd.contrib.obsolete-packages.acs-workflow.tcl.workflow-procs.wf_add_transition.wf_add_transition {dbqd.contrib.obsolete-packages.acs-workflow.tcl.workflow-procs.wf_add_transition.wf_add_transition {

	select workflow__add_transition (
		    :workflow_key,
		    :transition_key,
		    :transition_name,
		    :role_key,
		    :sort_order,
		    :trigger_type
		);
	
      } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/tcl/workflow-procs-postgresql.xql}
dbqd.contrib.obsolete-packages.acs-workflow.tcl.workflow-procs.wf_delete_transition.wf_delete_transition {dbqd.contrib.obsolete-packages.acs-workflow.tcl.workflow-procs.wf_delete_transition.wf_delete_transition {

	select workflow__delete_transition (
                :workflow_key,
                :transition_key
            );
    
      } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/tcl/workflow-procs-postgresql.xql}
dbqd.contrib.obsolete-packages.acs-workflow.tcl.workflow-procs.wf_add_arc.wf_add_arc {dbqd.contrib.obsolete-packages.acs-workflow.tcl.workflow-procs.wf_add_arc.wf_add_arc {

	select workflow__add_arc (
                :workflow_key,
	        :transition_key,
                :place_key,
                :direction,
                :guard_callback,
                :guard_custom_arg,
                :guard_description
            );
    
      } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/tcl/workflow-procs-postgresql.xql}
dbqd.contrib.obsolete-packages.acs-workflow.tcl.workflow-procs.wf_add_arc_out.wf_add_arc {dbqd.contrib.obsolete-packages.acs-workflow.tcl.workflow-procs.wf_add_arc_out.wf_add_arc {

	select workflow__add_arc (
                :workflow_key,
	        :from_transition_key,
                :to_place_key,
                :guard_callback,
                :guard_custom_arg,
                :guard_description
            );
    
      } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/tcl/workflow-procs-postgresql.xql}
dbqd.contrib.obsolete-packages.acs-workflow.tcl.workflow-procs.wf_add_arc_in.wf_add_arc {dbqd.contrib.obsolete-packages.acs-workflow.tcl.workflow-procs.wf_add_arc_in.wf_add_arc {

	select workflow__add_arc (
                :workflow_key,
                :from_place_key,
	        :to_transition_key
            );

      } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/tcl/workflow-procs-postgresql.xql}
dbqd.contrib.obsolete-packages.acs-workflow.tcl.workflow-procs.wf_delete_arc.wf_delete_arc {dbqd.contrib.obsolete-packages.acs-workflow.tcl.workflow-procs.wf_delete_arc.wf_delete_arc {

	select workflow__delete_arc (
                :workflow_key,
                :transition_key,
                :place_key,
                :direction
            );
    
      } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/tcl/workflow-procs-postgresql.xql}
dbqd.contrib.obsolete-packages.acs-workflow.tcl.workflow-procs.wf_add_trans_attribute_map.add_trans_attribute_map_attribute_id {dbqd.contrib.obsolete-packages.acs-workflow.tcl.workflow-procs.wf_add_trans_attribute_map.add_trans_attribute_map_attribute_id {

	select workflow__add_trans_attribute_map (
                    :workflow_key,
	            :transition_key,
	            :attribute_id,
	            :sort_order
                );
	
      } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/tcl/workflow-procs-postgresql.xql}
dbqd.contrib.obsolete-packages.acs-workflow.tcl.workflow-procs.wf_add_trans_attribute_map.add_trans_attribute_map_attribute_name {dbqd.contrib.obsolete-packages.acs-workflow.tcl.workflow-procs.wf_add_trans_attribute_map.add_trans_attribute_map_attribute_name {

	select workflow__add_trans_attribute_map (
                    :workflow_key,
	            :transition_key,
	            :attribute_name,
	            :sort_order
                );
	
      } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/tcl/workflow-procs-postgresql.xql}
dbqd.contrib.obsolete-packages.acs-workflow.tcl.workflow-procs.wf_delete_trans_attribute_map.delete_trans_attribute_map {dbqd.contrib.obsolete-packages.acs-workflow.tcl.workflow-procs.wf_delete_trans_attribute_map.delete_trans_attribute_map {

	select workflow__delete_trans_attribute_map (
                :workflow_key,
                :transition_key,
                :attribute_id
            );
    
      } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/tcl/workflow-procs-postgresql.xql}
dbqd.contrib.obsolete-packages.acs-workflow.tcl.workflow-procs.wf_add_trans_role_assign_map.add_trans_role_assign_map {dbqd.contrib.obsolete-packages.acs-workflow.tcl.workflow-procs.wf_add_trans_role_assign_map.add_trans_role_assign_map {

	select workflow__add_trans_role_assign_map (
                :workflow_key,
                :transition_key,
                :assign_role_key
            );
    
      } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/tcl/workflow-procs-postgresql.xql}
dbqd.contrib.obsolete-packages.acs-workflow.tcl.workflow-procs.wf_delete_trans_role_assign_map.delete_trans_role_assign_map {dbqd.contrib.obsolete-packages.acs-workflow.tcl.workflow-procs.wf_delete_trans_role_assign_map.delete_trans_role_assign_map {

	select workflow__delete_trans_role_assign_map (
                :workflow_key,
                :transition_key,
                :assign_role_key
            );
    
      } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/tcl/workflow-procs-postgresql.xql}
dbqd.contrib.obsolete-packages.acs-workflow.tcl.workflow-procs.wf_simple_workflow_p.simple_workflow {dbqd.contrib.obsolete-packages.acs-workflow.tcl.workflow-procs.wf_simple_workflow_p.simple_workflow {
	select workflow__simple_p(:workflow_key);
      } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/tcl/workflow-procs-postgresql.xql}
dbqd.contrib.obsolete-packages.acs-workflow.tcl.workflow-procs.wf_export_workflow.declare_object_type {dbqd.contrib.obsolete-packages.acs-workflow.tcl.workflow-procs.wf_export_workflow.declare_object_type {

create function inline_0 () returns integer as '
begin
    PERFORM workflow__create_workflow (
        ''[db_quote [db_quote $new_workflow_key]]'', 
        ''[db_quote [db_quote $new_workflow_pretty_name]]'', 
        ''[db_quote [db_quote $new_workflow_pretty_plural]]'', 
        ''[db_quote [db_quote $description]]'', 
        ''[db_quote [db_quote $new_table_name]]'',
        ''case_id''
    );

    return null;

end;' language 'plpgsql';

select inline_0 ();
drop function inline_0 ();

        } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/tcl/workflow-procs-postgresql.xql}
dbqd.contrib.obsolete-packages.acs-workflow.tcl.workflow-procs.wf_export_workflow.add_place {dbqd.contrib.obsolete-packages.acs-workflow.tcl.workflow-procs.wf_export_workflow.add_place {

    select workflow__add_place(
        '[db_quote $new_workflow_key]',
        '[db_quote $place_key]', 
        '[db_quote $place_name]', 
        [ad_decode $sort_order "" "null" $sort_order]
    );

        } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/tcl/workflow-procs-postgresql.xql}
dbqd.contrib.obsolete-packages.acs-workflow.tcl.workflow-procs.wf_export_workflow.add_role {dbqd.contrib.obsolete-packages.acs-workflow.tcl.workflow-procs.wf_export_workflow.add_role {

	select workflow__add_role (
         '[db_quote $new_workflow_key]',
         '[db_quote $role_key]',
         '[db_quote $role_name]',
         [ad_decode $sort_order "" "null" $sort_order]
    );

        } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/tcl/workflow-procs-postgresql.xql}
dbqd.contrib.obsolete-packages.acs-workflow.tcl.workflow-procs.wf_export_workflow.add_transition {dbqd.contrib.obsolete-packages.acs-workflow.tcl.workflow-procs.wf_export_workflow.add_transition {

	select workflow__add_transition (
         '[db_quote $new_workflow_key]',
         '[db_quote $transition_key]',
         '[db_quote $transition_name]',
         [ad_decode $role_key "" null '[db_quote $role_key]'],
         [ad_decode $sort_order "" "null" $sort_order],
         '[db_quote $trigger_type]'
	);
	
        } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/tcl/workflow-procs-postgresql.xql}
dbqd.contrib.obsolete-packages.acs-workflow.tcl.workflow-procs.wf_export_workflow.add_arc {dbqd.contrib.obsolete-packages.acs-workflow.tcl.workflow-procs.wf_export_workflow.add_arc {

	select workflow__add_arc (
         '[db_quote $new_workflow_key]',
         '[db_quote $transition_key]',
         '[db_quote $place_key]',
         '[db_quote $direction]',
         '[db_quote $guard_callback]',
         '[db_quote $guard_custom_arg]',
         '[db_quote $guard_description]'
	);

        } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/tcl/workflow-procs-postgresql.xql}
dbqd.contrib.obsolete-packages.acs-workflow.tcl.workflow-procs.wf_export_workflow.create_attribute {dbqd.contrib.obsolete-packages.acs-workflow.tcl.workflow-procs.wf_export_workflow.create_attribute {

    select workflow__create_attribute(
        '[db_quote $new_workflow_key]',
        '[db_quote $attribute_name]',
        '[db_quote $datatype]',
        '[db_quote $pretty_name]',
	null,
	null,
	null,
        '[db_quote $default_value]',
	1,
	1,
	null,
	'generic'
    );

        } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/tcl/workflow-procs-postgresql.xql}
dbqd.contrib.obsolete-packages.acs-workflow.tcl.workflow-procs.wf_export_workflow.add_trans_attribute_map {dbqd.contrib.obsolete-packages.acs-workflow.tcl.workflow-procs.wf_export_workflow.add_trans_attribute_map {

	select workflow__add_trans_attribute_map(
        	'[db_quote $new_workflow_key]', 
        	'[db_quote $transition_key]',
        	'[db_quote $attribute_name]',
        	[ad_decode $sort_order "" "null" $sort_order]
    );

        } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/tcl/workflow-procs-postgresql.xql}
dbqd.contrib.obsolete-packages.acs-workflow.tcl.workflow-procs.wf_export_workflow.add_trans_role_assign_map {dbqd.contrib.obsolete-packages.acs-workflow.tcl.workflow-procs.wf_export_workflow.add_trans_role_assign_map {

    select workflow__add_trans_role_assign_map(
        '[db_quote $new_workflow_key]',
        '[db_quote $transition_key]',
        '[db_quote $assign_role_key]'
    );

        } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/tcl/workflow-procs-postgresql.xql}
dbqd.contrib.obsolete-packages.acs-workflow.tcl.workflow-procs.wf_sweep_time_events.sweep_timed_transitions {dbqd.contrib.obsolete-packages.acs-workflow.tcl.workflow-procs.wf_sweep_time_events.sweep_timed_transitions {
         select workflow_case__sweep_timed_transitions();
      } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/tcl/workflow-procs-postgresql.xql}
dbqd.contrib.obsolete-packages.acs-workflow.tcl.workflow-procs.wf_sweep_time_events.sweep_hold_timeout {dbqd.contrib.obsolete-packages.acs-workflow.tcl.workflow-procs.wf_sweep_time_events.sweep_hold_timeout {
         select workflow_case__sweep_hold_timeout();
      } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/tcl/workflow-procs-postgresql.xql}
dbqd.contrib.obsolete-packages.acs-workflow.tcl.workflow-procs.wf_task_info.task_roles_to_assign {dbqd.contrib.obsolete-packages.acs-workflow.tcl.workflow-procs.wf_task_info.task_roles_to_assign {
      
        select r.role_key, 
               r.role_name,
               '' as assignment_widget
          from wf_tasks t, wf_transition_role_assign_map tram, wf_roles r
         where t.task_id = :task_id
           and tram.workflow_key = t.workflow_key and tram.transition_key = t.transition_key
           and r.workflow_key = tram.workflow_key and r.role_key = tram.assign_role_key
        order by r.sort_order
    
      } {} {} {} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/tcl/workflow-procs.xql}
dbqd.contrib.obsolete-packages.acs-workflow.tcl.workflow-procs.wf_task_panels.action_panels {dbqd.contrib.obsolete-packages.acs-workflow.tcl.workflow-procs.wf_task_panels.action_panels {
      
    select tp.header, 
           tp.template_url
      from wf_context_task_panels tp, 
           wf_cases c,
           wf_tasks t
     where t.task_id = :task_id
       and c.case_id = t.case_id
       and tp.context_key = c.context_key
       and tp.workflow_key = c.workflow_key
       and tp.transition_key = t.transition_key
       and tp.overrides_action_p = 't'
       and (tp.only_display_when_started_p = 'f' or (t.state = 'started' and t.holding_user = :user_id))
    order by tp.overrides_action_p, tp.sort_order

      } {} {} {} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/tcl/workflow-procs.xql}
dbqd.contrib.obsolete-packages.acs-workflow.tcl.workflow-procs.wf_task_panels.all_panels {dbqd.contrib.obsolete-packages.acs-workflow.tcl.workflow-procs.wf_task_panels.all_panels {
      
    select tp.header, 
           tp.template_url
      from wf_context_task_panels tp, 
           wf_cases c,
           wf_tasks t
     where t.task_id = :task_id
       and c.case_id = t.case_id
       and tp.context_key = c.context_key
       and tp.workflow_key = c.workflow_key
       and tp.transition_key = t.transition_key
       and (tp.only_display_when_started_p = 'f' or (t.state = 'started' and t.holding_user = :user_id))
    order by tp.overrides_action_p, tp.sort_order

      } {} {} {} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/tcl/workflow-procs.xql}
dbqd.contrib.obsolete-packages.acs-workflow.tcl.workflow-procs.wf_task_info.this_user_is_assigned_p {dbqd.contrib.obsolete-packages.acs-workflow.tcl.workflow-procs.wf_task_info.this_user_is_assigned_p {
       
            select count(*) from wf_user_tasks  where task_id = :task_id and user_id = :user_id
        
      } {} {} {} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/tcl/workflow-procs.xql}
dbqd.contrib.obsolete-packages.acs-workflow.tcl.workflow-procs.wf_journal.attributes {dbqd.contrib.obsolete-packages.acs-workflow.tcl.workflow-procs.wf_journal.attributes {
      
            select a.attribute_name as name, 
                   a.pretty_name,
                   a.datatype, 
                   v.attr_value as value
            from   wf_attribute_value_audit v, acs_attributes a
            where  v.journal_id = :journal_id
            and    a.attribute_id = v.attribute_id
        
      } {} {} {} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/tcl/workflow-procs.xql}
dbqd.contrib.obsolete-packages.acs-workflow.tcl.workflow-procs.wf_workflow_info.workflow {dbqd.contrib.obsolete-packages.acs-workflow.tcl.workflow-procs.wf_workflow_info.workflow {
      
        select t.pretty_name,
               w.description
        from   wf_workflows w, acs_object_types t
        where  w.workflow_key = :workflow_key
        and    t.object_type = w.workflow_key
    
      } {} {} {} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/tcl/workflow-procs.xql}
dbqd.contrib.obsolete-packages.acs-workflow.tcl.workflow-procs.wf_workflow_info.transitions {dbqd.contrib.obsolete-packages.acs-workflow.tcl.workflow-procs.wf_workflow_info.transitions {
      
        select transition_key, transition_name, sort_order
        from wf_transitions 
        where workflow_key = :workflow_key 
        and trigger_type = 'user'
        order by sort_order asc
    
      } {} {} {} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/tcl/workflow-procs.xql}
dbqd.contrib.obsolete-packages.acs-workflow.tcl.workflow-procs.wf_journal.attributes {dbqd.contrib.obsolete-packages.acs-workflow.tcl.workflow-procs.wf_journal.attributes {
      
            select a.attribute_name as name, 
                   a.pretty_name,
                   a.datatype, 
                   v.attr_value as value
            from   wf_attribute_value_audit v, acs_attributes a
            where  v.journal_id = :journal_id
            and    a.attribute_id = v.attribute_id
        
      } {} {} {} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/tcl/workflow-procs.xql}
dbqd.contrib.obsolete-packages.acs-workflow.tcl.workflow-procs.wf_task_action.case_id_from_task {dbqd.contrib.obsolete-packages.acs-workflow.tcl.workflow-procs.wf_task_action.case_id_from_task {
       select case_id from wf_tasks where task_id = :task_id
      } {} {} {} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/tcl/workflow-procs.xql}
dbqd.contrib.obsolete-packages.acs-workflow.tcl.workflow-procs.wf_add_place.place_keys {dbqd.contrib.obsolete-packages.acs-workflow.tcl.workflow-procs.wf_add_place.place_keys {
      select place_key from wf_places where workflow_key = :workflow_key
      } {} {} {} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/tcl/workflow-procs.xql}
dbqd.contrib.obsolete-packages.acs-workflow.tcl.workflow-procs.wf_add_role.role_keys {dbqd.contrib.obsolete-packages.acs-workflow.tcl.workflow-procs.wf_add_role.role_keys {
      select role_key from wf_roles where workflow_key = :workflow_key
      } {} {} {} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/tcl/workflow-procs.xql}
dbqd.contrib.obsolete-packages.acs-workflow.tcl.workflow-procs.wf_add_transition.transition_keys {dbqd.contrib.obsolete-packages.acs-workflow.tcl.workflow-procs.wf_add_transition.transition_keys {
      select transition_key from wf_transitions where workflow_key = :workflow_key
      } {} {} {} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/tcl/workflow-procs.xql}
dbqd.contrib.obsolete-packages.acs-workflow.tcl.workflow-procs.wf_add_transition.estimated_minutes_and_instructions {dbqd.contrib.obsolete-packages.acs-workflow.tcl.workflow-procs.wf_add_transition.estimated_minutes_and_instructions {
      
		insert into wf_context_transition_info 
		(context_key, workflow_key, transition_key, estimated_minutes, instructions)
		values (:context_key, :workflow_key, :transition_key, :estimated_minutes, :instructions)
	    
      } {} {} {} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/tcl/workflow-procs.xql}
dbqd.contrib.obsolete-packages.acs-workflow.tcl.workflow-procs.wf_export_workflow.workflow_info {dbqd.contrib.obsolete-packages.acs-workflow.tcl.workflow-procs.wf_export_workflow.workflow_info {
      
        select wf.description,
        ot.pretty_name,
        ot.pretty_plural,
        ot.table_name
        from   wf_workflows wf,
        acs_object_types ot
        where  wf.workflow_key = :workflow_key
        and    ot.object_type = wf.workflow_key
    
      } {} {} {} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/tcl/workflow-procs.xql}
dbqd.contrib.obsolete-packages.acs-workflow.tcl.workflow-procs.wf_export_workflow.places {dbqd.contrib.obsolete-packages.acs-workflow.tcl.workflow-procs.wf_export_workflow.places {
      
        select place_key,
               place_name,
               sort_order
        from   wf_places
        where  workflow_key = :workflow_key
        order by sort_order asc
    
      } {} {} {} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/tcl/workflow-procs.xql}
dbqd.contrib.obsolete-packages.acs-workflow.tcl.workflow-procs.wf_export_workflow.roles {dbqd.contrib.obsolete-packages.acs-workflow.tcl.workflow-procs.wf_export_workflow.roles {
      
        select role_key,
               role_name,
               sort_order
	from   wf_roles
	where  workflow_key = :workflow_key
    
      } {} {} {} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/tcl/workflow-procs.xql}
dbqd.contrib.obsolete-packages.acs-workflow.tcl.workflow-procs.wf_workflow_info.transitions {dbqd.contrib.obsolete-packages.acs-workflow.tcl.workflow-procs.wf_workflow_info.transitions {
      
        select transition_key, transition_name, sort_order
        from wf_transitions 
        where workflow_key = :workflow_key 
        and trigger_type = 'user'
        order by sort_order asc
    
      } {} {} {} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/tcl/workflow-procs.xql}
dbqd.contrib.obsolete-packages.acs-workflow.tcl.workflow-procs.wf_export_workflow.arcs {dbqd.contrib.obsolete-packages.acs-workflow.tcl.workflow-procs.wf_export_workflow.arcs {
      
        select transition_key,
               place_key,
               direction,
               guard_callback,
               guard_custom_arg,
               guard_description
        from   wf_arcs
        where  workflow_key = :workflow_key
        order by transition_key asc
    
      } {} {} {} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/tcl/workflow-procs.xql}
dbqd.contrib.obsolete-packages.acs-workflow.tcl.workflow-procs.wf_journal.attributes {dbqd.contrib.obsolete-packages.acs-workflow.tcl.workflow-procs.wf_journal.attributes {
      
            select a.attribute_name as name, 
                   a.pretty_name,
                   a.datatype, 
                   v.attr_value as value
            from   wf_attribute_value_audit v, acs_attributes a
            where  v.journal_id = :journal_id
            and    a.attribute_id = v.attribute_id
        
      } {} {} {} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/tcl/workflow-procs.xql}
dbqd.contrib.obsolete-packages.acs-workflow.tcl.workflow-procs.wf_export_workflow.transition_attribute_map {dbqd.contrib.obsolete-packages.acs-workflow.tcl.workflow-procs.wf_export_workflow.transition_attribute_map {
      
            select transition_key,
                   sort_order
            from   wf_transition_attribute_map
            where  workflow_key = :workflow_key
            and    attribute_id = :attribute_id
        
      } {} {} {} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/tcl/workflow-procs.xql}
dbqd.contrib.obsolete-packages.acs-workflow.tcl.workflow-procs.wf_export_workflow.transition_role_assign_map {dbqd.contrib.obsolete-packages.acs-workflow.tcl.workflow-procs.wf_export_workflow.transition_role_assign_map {
      
        select transition_key,
               assign_role_key
          from wf_transition_role_assign_map
         where workflow_key = :workflow_key
         order by transition_key
    
      } {} {} {} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/tcl/workflow-procs.xql}
dbqd.contrib.obsolete-packages.acs-workflow.tcl.workflow-procs.wf_export_workflow.context_transition_info {dbqd.contrib.obsolete-packages.acs-workflow.tcl.workflow-procs.wf_export_workflow.context_transition_info {
      
        select transition_key,
               estimated_minutes,
               instructions,
               enable_callback,
               enable_custom_arg,
               fire_callback,
               fire_custom_arg,
               time_callback,
               time_custom_arg,
               deadline_callback,
               deadline_custom_arg,
               deadline_attribute_name,
               hold_timeout_callback,
               hold_timeout_custom_arg,
               notification_callback,
               notification_custom_arg,
               unassigned_callback,
               unassigned_custom_arg
        from   wf_context_transition_info
        where  workflow_key = :workflow_key
        and    context_key = :context_key
    
      } {} {} {} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/tcl/workflow-procs.xql}
dbqd.contrib.obsolete-packages.acs-workflow.tcl.workflow-procs.wf_export_workflow.context_role_info {dbqd.contrib.obsolete-packages.acs-workflow.tcl.workflow-procs.wf_export_workflow.context_role_info {
      
	select role_key,
	       assignment_callback,
	       assignment_custom_arg
	from   wf_context_role_info
	where  workflow_key = :workflow_key
	and    context_key = :context_key
    
      } {} {} {} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/tcl/workflow-procs.xql}
dbqd.contrib.obsolete-packages.acs-workflow.tcl.workflow-procs.wf_export_workflow.context_task_panels {dbqd.contrib.obsolete-packages.acs-workflow.tcl.workflow-procs.wf_export_workflow.context_task_panels {
      
        select transition_key,
               sort_order,
               header,
               template_url,
               overrides_action_p,
               only_display_when_started_p
        from   wf_context_task_panels
        where  context_key = :context_key
        and    workflow_key = :workflow_key
        order by transition_key asc, sort_order asc
    
      } {} {} {} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/tcl/workflow-procs.xql}
dbqd.contrib.obsolete-packages.acs-workflow.www.active-tasks-oracle.active_tasks {dbqd.contrib.obsolete-packages.acs-workflow.www.active-tasks-oracle.active_tasks {
      
    select t.task_id, 
           t.transition_key, 
           t.state, 
           t.case_id,
           tr.transition_name,
           to_char(t.enabled_date, :date_format) as enabled_date_pretty,
           to_char(t.started_date, :date_format) as started_date_pretty,
           to_char(t.deadline, :date_format) as deadline_pretty,
           p.party_id as assignee_party_id,
           p.email as assignee_email,
           acs_object.name(p.party_id) as assignee_name,
           '' as assignee_url,
           assignee_o.object_type as assignee_object_type,
           '' as reassign_url
      from wf_tasks t, wf_transitions tr, wf_task_assignments tasgn, parties p, acs_objects assignee_o
     where t.case_id = :case_id
       and t.state in ('enabled', 'started')
       and tr.workflow_key = t.workflow_key
       and tr.transition_key = t.transition_key
       and tasgn.task_id (+) = t.task_id
       and p.party_id (+) = tasgn.party_id
       and assignee_o.object_id (+) = p.party_id
    order by t.enabled_date desc

      } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/www/active-tasks-oracle.xql}
dbqd.contrib.obsolete-packages.acs-workflow.www.active-tasks.active_tasks {dbqd.contrib.obsolete-packages.acs-workflow.www.active-tasks.active_tasks {

    select t.task_id, 
           t.transition_key, 
           t.state, 
           t.case_id,
           tr.transition_name,
           to_char(t.enabled_date, :date_format) as enabled_date_pretty,
           to_char(t.started_date, :date_format) as started_date_pretty,
           to_char(t.deadline, :date_format) as deadline_pretty,
           p.party_id as assignee_party_id,
           p.email as assignee_email,
           acs_object__name(p.party_id) as assignee_name,
           '' as assignee_url,
           assignee_o.object_type as assignee_object_type,
           '' as reassign_url
      from (((wf_tasks t LEFT OUTER JOIN wf_task_assignments tasgn 
	     ON (t.task_id = tasgn.task_id)) LEFT OUTER JOIN parties p 
	       ON (tasgn.party_id = p.party_id)) LEFT OUTER JOIN acs_objects assignee_o 
		 ON (p.party_id = assignee_o.object_id)),
	   wf_transitions tr
     where t.case_id = :case_id
       and t.state in ('enabled', 'started')
       and tr.workflow_key = t.workflow_key
       and tr.transition_key = t.transition_key
    order by t.enabled_date desc

      } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/www/active-tasks-postgresql.xql}
dbqd.contrib.obsolete-packages.acs-workflow.www.admin.arc-add.num_arcs {dbqd.contrib.obsolete-packages.acs-workflow.www.admin.arc-add.num_arcs {
       
    select count(*) 
    from   wf_arcs 
    where  workflow_key = :workflow_key
    and    transition_key = :transition_key
    and    place_key = :place_key
    and    direction = :direction

      } {} {} {} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/www/admin/arc-add.xql}
dbqd.contrib.obsolete-packages.acs-workflow.www.admin.arc-add.insert_arc {dbqd.contrib.obsolete-packages.acs-workflow.www.admin.arc-add.insert_arc {
      
	insert into wf_arcs (workflow_key, transition_key, place_key, direction) 
	values (:workflow_key, :transition_key, :place_key, :direction)
    
      } {} {} {} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/www/admin/arc-add.xql}
dbqd.contrib.obsolete-packages.acs-workflow.www.admin.arc-delete.delete_arc {dbqd.contrib.obsolete-packages.acs-workflow.www.admin.arc-delete.delete_arc {
      
    delete from wf_arcs
    where  workflow_key = :workflow_key
    and    transition_key = :transition_key
    and    place_key = :place_key
    and    direction = :direction

      } {} {} {} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/www/admin/arc-delete.xql}
dbqd.contrib.obsolete-packages.acs-workflow.www.admin.arc-edit-2.arc_update {dbqd.contrib.obsolete-packages.acs-workflow.www.admin.arc-edit-2.arc_update {
      
    update wf_arcs
    set    guard_callback = :guard_callback,
           guard_custom_arg = :guard_custom_arg,
           guard_description = :guard_description
    where  workflow_key = :workflow_key
    and    transition_key = :transition_key
    and    place_key = :place_key
    and    direction = :direction

      } {} {} {} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/www/admin/arc-edit-2.xql}
dbqd.contrib.obsolete-packages.acs-workflow.www.admin.arc-edit-oracle.possible_guards {dbqd.contrib.obsolete-packages.acs-workflow.www.admin.arc-edit-oracle.possible_guards {
      
    select a0.package_name || '.' || a0.object_name
    from   user_arguments a0
    where  position = 0
    and    argument_name is null
    and    data_type = 'CHAR'
    and    in_out = 'OUT'
    and    exists (select 1 from user_arguments a1 where a1.package_name=a0.package_name and a1.object_name=a0.object_name 
                   and a1.position=1 and a1.data_type='NUMBER' and a1.in_out='IN')
    and    exists (select 1 from user_arguments a2 where a2.package_name=a0.package_name and a2.object_name=a0.object_name 
                   and a2.position=2 and a2.data_type='VARCHAR2' and a2.in_out='IN')
    and    exists (select 1 from user_arguments a3 where a3.package_name=a0.package_name and a3.object_name=a0.object_name 
                   and a3.position=3 and a3.data_type='VARCHAR2' and a3.in_out='IN')
    and    exists (select 1 from user_arguments a4 where a4.package_name=a0.package_name and a4.object_name=a0.object_name 
                   and a4.position=4 and a4.data_type='VARCHAR2' and a4.in_out='IN')
    and    exists (select 1 from user_arguments a5 where a5.package_name=a0.package_name and a5.object_name=a0.object_name 
                   and a5.position=5 and a5.data_type='VARCHAR2' and a5.in_out='IN')
    and    exists (select 1 from user_arguments a6 where a6.package_name=a0.package_name and a6.object_name=a0.object_name 
                   and a6.position=6 and a6.data_type='VARCHAR2' and a6.in_out='IN')

      } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/www/admin/arc-edit-oracle.xql}
dbqd.contrib.obsolete-packages.acs-workflow.www.admin.arc-edit.possible_guards {dbqd.contrib.obsolete-packages.acs-workflow.www.admin.arc-edit.possible_guards {
      
select proname 
  from pg_proc 
 where proargtypes = '23 1043 1043 1043 1043 1043'::oidvector
   and prorettype = 16::oid

      } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/www/admin/arc-edit-postgresql.xql}
dbqd.contrib.obsolete-packages.acs-workflow.www.admin.arc-edit.arc_info {dbqd.contrib.obsolete-packages.acs-workflow.www.admin.arc-edit.arc_info {
      
    select a.guard_callback,
           a.guard_custom_arg,
           a.guard_description
    from   wf_arcs a
    where  a.workflow_key = :workflow_key
    and    a.transition_key = :transition_key
    and    a.place_key = :place_key
    and    a.direction = :direction

      } {} {} {} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/www/admin/arc-edit.xql}
dbqd.contrib.obsolete-packages.acs-workflow.www.admin.arc-edit.possible_guards {dbqd.contrib.obsolete-packages.acs-workflow.www.admin.arc-edit.possible_guards {
      
select proname 
  from pg_proc 
 where proargtypes = '23 1043 1043 1043 1043 1043'::oidvector
   and prorettype = 16::oid

      } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/www/admin/arc-edit-postgresql.xql}
dbqd.contrib.obsolete-packages.acs-workflow.www.admin.assign-transition-role-2.workflow_exists {dbqd.contrib.obsolete-packages.acs-workflow.www.admin.assign-transition-role-2.workflow_exists {
      
	select count(*) from wf_workflows 
	where workflow_key = :workflow_key
      } {} {} {} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/www/admin/assign-transition-role-2.xql}
dbqd.contrib.obsolete-packages.acs-workflow.www.admin.assign-transition-role-2.role_exists {dbqd.contrib.obsolete-packages.acs-workflow.www.admin.assign-transition-role-2.role_exists {
      
	select count(*) from wf_roles 
	where workflow_key = :workflow_key
        and role_key = :role_key
      } {} {} {} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/www/admin/assign-transition-role-2.xql}
dbqd.contrib.obsolete-packages.acs-workflow.www.admin.assign-transition-role-2.assign_transition_role {dbqd.contrib.obsolete-packages.acs-workflow.www.admin.assign-transition-role-2.assign_transition_role {
      
    update wf_transitions set role_key = :role_key
    where workflow_key = :workflow_key
    and transition_key = :transition_key

      } {} {} {} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/www/admin/assign-transition-role-2.xql}
dbqd.contrib.obsolete-packages.acs-workflow.www.admin.assign-transition-role.workflow_exists {dbqd.contrib.obsolete-packages.acs-workflow.www.admin.assign-transition-role.workflow_exists {
      
	select count(*) from wf_workflows 
	where workflow_key = :workflow_key
      } {} {} {} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/www/admin/assign-transition-role.xql}
dbqd.contrib.obsolete-packages.acs-workflow.www.admin.assign-transition-role.role_exists {dbqd.contrib.obsolete-packages.acs-workflow.www.admin.assign-transition-role.role_exists {
      
	select count(*) from wf_roles 
	where workflow_key = :workflow_key
        and role_key = :role_key
      } {} {} {} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/www/admin/assign-transition-role.xql}
dbqd.contrib.obsolete-packages.acs-workflow.www.admin.assign-transition-role.workflow {dbqd.contrib.obsolete-packages.acs-workflow.www.admin.assign-transition-role.workflow {
      
    select w.workflow_key, 
           t.pretty_name
    from   wf_workflows w, 
           acs_object_types t 
    where  w.workflow_key = :workflow_key 
    and    w.workflow_key = t.object_type

      } {} {} {} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/www/admin/assign-transition-role.xql}
dbqd.contrib.obsolete-packages.acs-workflow.www.admin.assign-transition-role.role {dbqd.contrib.obsolete-packages.acs-workflow.www.admin.assign-transition-role.role {
      
    select role_name
    from wf_roles
    where workflow_key = :workflow_key
    and role_key = :role_key

      } {} {} {} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/www/admin/assign-transition-role.xql}
dbqd.contrib.obsolete-packages.acs-workflow.www.admin.assign-transition-role.workflow_transitions {dbqd.contrib.obsolete-packages.acs-workflow.www.admin.assign-transition-role.workflow_transitions {
      
    select transition_name,
           transition_key
    from wf_transitions
    where workflow_key = :workflow_key
    and role_key is null
    order by sort_order

      } {} {} {} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/www/admin/assign-transition-role.xql}
dbqd.contrib.obsolete-packages.acs-workflow.www.admin.attribute-add-2-oracle.create_attribute {dbqd.contrib.obsolete-packages.acs-workflow.www.admin.attribute-add-2-oracle.create_attribute {
      
    declare
      v_attribute_id integer;
    begin
      v_attribute_id := workflow.create_attribute(
          workflow_key => :workflow_key,
          attribute_name => :attribute_name,
          datatype => :datatype,
          pretty_name => :pretty_name,
          default_value => :default_value
      );
    end;

      } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/www/admin/attribute-add-2-oracle.xql}
dbqd.contrib.obsolete-packages.acs-workflow.www.admin.attribute-add-2.create_attribute {dbqd.contrib.obsolete-packages.acs-workflow.www.admin.attribute-add-2.create_attribute {

	select workflow__create_attribute(
          :workflow_key,
          :attribute_name,
          :datatype,
          :pretty_name,
	  null,
	  null,
	  null,
          :default_value,
	  1,
	  1,
	  null,
	  'generic'
      );

      } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/www/admin/attribute-add-2-postgresql.xql}
dbqd.contrib.obsolete-packages.acs-workflow.www.admin.attribute-add.workflow_name {dbqd.contrib.obsolete-packages.acs-workflow.www.admin.attribute-add.workflow_name {
      
    select ot.pretty_name as workflow_name
    from   acs_object_types ot
    where  ot.object_type = :workflow_key

      } {} {} {} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/www/admin/attribute-add.xql}
dbqd.contrib.obsolete-packages.acs-workflow.www.admin.attribute-add.datatype {dbqd.contrib.obsolete-packages.acs-workflow.www.admin.attribute-add.datatype {
      
    select datatype
    from acs_datatypes
    order by datatype

      } {} {} {} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/www/admin/attribute-add.xql}
dbqd.contrib.obsolete-packages.acs-workflow.www.admin.attribute-delete-oracle.drop_attribute {dbqd.contrib.obsolete-packages.acs-workflow.www.admin.attribute-delete-oracle.drop_attribute {
      
        begin
            workflow.drop_attribute(
                workflow_key => :workflow_key,
                attribute_name => :attribute_name
            );
	end;
    
      } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/www/admin/attribute-delete-oracle.xql}
dbqd.contrib.obsolete-packages.acs-workflow.www.admin.attribute-delete.drop_attribute {dbqd.contrib.obsolete-packages.acs-workflow.www.admin.attribute-delete.drop_attribute {

	select workflow__drop_attribute(
                :workflow_key,
                :attribute_name
            );
    
      } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/www/admin/attribute-delete-postgresql.xql}
dbqd.contrib.obsolete-packages.acs-workflow.www.admin.attribute-delete.drop_from_map {dbqd.contrib.obsolete-packages.acs-workflow.www.admin.attribute-delete.drop_from_map {
      
	delete from wf_transition_attribute_map 
	where  workflow_key = :workflow_key
	and    attribute_id = :attribute_id
    
      } {} {} {} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/www/admin/attribute-delete.xql}
dbqd.contrib.obsolete-packages.acs-workflow.www.admin.attributes-table.attributes {dbqd.contrib.obsolete-packages.acs-workflow.www.admin.attributes-table.attributes {
      
    select a.attribute_id,
           a.sort_order,
           a.attribute_name,
           a.pretty_name,
           a.datatype,
           '' as delete_url,
           (select count(*) from wf_transition_attribute_map m
            where  m.workflow_key = a.object_type
            and    m.attribute_id = a.attribute_id) as used_p
    from   acs_attributes a
    where  a.object_type = :workflow_key
    order by sort_order

      } {} {} {} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/www/admin/attributes-table.xql}
dbqd.contrib.obsolete-packages.acs-workflow.www.admin.attributes.workflow_exists {dbqd.contrib.obsolete-packages.acs-workflow.www.admin.attributes.workflow_exists {
      
	select 1 from wf_workflows 
	where workflow_key = :workflow_key
      } {} {} {} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/www/admin/attributes.xql}
dbqd.contrib.obsolete-packages.acs-workflow.www.admin.attributes.workflow_name {dbqd.contrib.obsolete-packages.acs-workflow.www.admin.attributes.workflow_name {
      
    select ot.pretty_name as workflow_name
    from   acs_object_types ot
    where  ot.object_type = :workflow_key

      } {} {} {} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/www/admin/attributes.xql}
dbqd.contrib.obsolete-packages.acs-workflow.www.admin.case-debug-oracle.case_info {dbqd.contrib.obsolete-packages.acs-workflow.www.admin.case-debug-oracle.case_info {
      
    select case_id, acs_object.name(object_id) as object_name, state as state from wf_cases where case_id = :case_id

      } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/www/admin/case-debug-oracle.xql}
dbqd.contrib.obsolete-packages.acs-workflow.www.admin.case-debug-oracle.attributes {dbqd.contrib.obsolete-packages.acs-workflow.www.admin.case-debug-oracle.attributes {
      
    select a.attribute_name as name, acs_object.get_attribute(c.case_id, a.attribute_name) as value
    from   acs_attributes a, wf_cases c
    where  a.object_type = c.workflow_key
    and    c.case_id = :case_id

      } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/www/admin/case-debug-oracle.xql}
dbqd.contrib.obsolete-packages.acs-workflow.www.admin.case-debug-oracle.dead_tokens {dbqd.contrib.obsolete-packages.acs-workflow.www.admin.case-debug-oracle.dead_tokens {
      
    select token_id, place_key, case_id, state, locked_task_id,
           to_char(produced_date, 'YYYY-MM-DD HH24:MI:SS') as produced_date_pretty,
           to_char(locked_date, 'YYYY-MM-DD HH24:MI:SS') as locked_date_pretty,
           to_char(consumed_date, 'YYYY-MM-DD HH24:MI:SS') as consumed_date_pretty,
           to_char(canceled_date, 'YYYY-MM-DD HH24:MI:SS') as canceled_date_pretty
    from   wf_tokens
    where  case_id = :case_id
    and    state in ('consumed', 'canceled')

      } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/www/admin/case-debug-oracle.xql}
dbqd.contrib.obsolete-packages.acs-workflow.www.admin.case-debug.case_info {dbqd.contrib.obsolete-packages.acs-workflow.www.admin.case-debug.case_info {
      
    select case_id, acs_object__name(object_id) as object_name, state as state from wf_cases where case_id = :case_id

      } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/www/admin/case-debug-postgresql.xql}
dbqd.contrib.obsolete-packages.acs-workflow.www.admin.case-debug.attributes {dbqd.contrib.obsolete-packages.acs-workflow.www.admin.case-debug.attributes {
      
    select a.attribute_name as name, acs_object__get_attribute(c.case_id, a.attribute_name) as value
    from   acs_attributes a, wf_cases c
    where  a.object_type = c.workflow_key
    and    c.case_id = :case_id

      } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/www/admin/case-debug-postgresql.xql}
dbqd.contrib.obsolete-packages.acs-workflow.www.admin.case-debug.dead_tokens {dbqd.contrib.obsolete-packages.acs-workflow.www.admin.case-debug.dead_tokens {
      
    select token_id, place_key, case_id, state, locked_task_id,
           to_char(produced_date, 'YYYY-MM-DD HH24:MI:SS') as produced_date_pretty,
           to_char(locked_date, 'YYYY-MM-DD HH24:MI:SS') as locked_date_pretty,
           to_char(consumed_date, 'YYYY-MM-DD HH24:MI:SS') as consumed_date_pretty,
           to_char(canceled_date, 'YYYY-MM-DD HH24:MI:SS') as canceled_date_pretty
    from   wf_tokens
    where  case_id = :case_id
    and    state in ('consumed', 'canceled')

      } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/www/admin/case-debug-postgresql.xql}
dbqd.contrib.obsolete-packages.acs-workflow.www.admin.case-debug.tasks {dbqd.contrib.obsolete-packages.acs-workflow.www.admin.case-debug.tasks {

    select task_id, transition_key, state, case_id
    from   wf_tasks
    where  case_id = :case_id
    order by case when state = 'started' then 1 when state = 'enabled' then 2 when state = 'finished' then 3 else 4 end

      } {} {} {} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/www/admin/case-debug.xql}
dbqd.contrib.obsolete-packages.acs-workflow.www.admin.case-debug.live_tokens {dbqd.contrib.obsolete-packages.acs-workflow.www.admin.case-debug.live_tokens {
      
    select token_id, place_key, case_id, state, locked_task_id
    from   wf_tokens
    where  case_id = :case_id
    and    state in ('free', 'locked')

      } {} {} {} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/www/admin/case-debug.xql}
dbqd.contrib.obsolete-packages.acs-workflow.www.admin.case-debug.enabled_transitions {dbqd.contrib.obsolete-packages.acs-workflow.www.admin.case-debug.enabled_transitions {
      
    select case_id, transition_key, transition_name, trigger_type
    from   wf_enabled_transitions
    where  case_id = :case_id

      } {} {} {} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/www/admin/case-debug.xql}
dbqd.contrib.obsolete-packages.acs-workflow.www.admin.cases-oracle.cases_table {dbqd.contrib.obsolete-packages.acs-workflow.www.admin.cases-oracle.cases_table {
      
    select c.case_id, 
           o.object_type,
           ot.pretty_name as object_type_pretty,
           acs_object.name(c.object_id) as object_name, 
           c.state,
           jeo.creation_date as started_date,
           to_char(jeo.creation_date, 'Mon fmDDfm, YYYY HH24:MI:SS') as started_date_pretty,
           round(sysdate - jeo.creation_date) as age
    from   wf_cases c, 
           acs_objects o,
           acs_object_types ot,
           journal_entries je,
           acs_objects jeo
    where  c.workflow_key = '[db_quote $workflow_key]'
    and    o.object_id = c.object_id
    and    ot.object_type = o.object_type
    and    je.object_id = c.case_id
    and    je.action = 'case start'
    and    jeo.object_id = je.journal_id
    [ad_dimensional_sql $dimensional_list where and]
    [ad_order_by_from_sort_spec $orderby $table_def]

      } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/www/admin/cases-oracle.xql}
dbqd.contrib.obsolete-packages.acs-workflow.www.admin.cases.cases_table {dbqd.contrib.obsolete-packages.acs-workflow.www.admin.cases.cases_table {
      
    select c.case_id, 
           o.object_type,
           ot.pretty_name as object_type_pretty,
           acs_object__name(c.object_id) as object_name, 
           c.state,
           jeo.creation_date as started_date,
           to_char(jeo.creation_date, 'Mon fmDDfm, YYYY HH24:MI:SS') as started_date_pretty,
           now() - jeo.creation_date as age
    from   wf_cases c, 
           acs_objects o,
           acs_object_types ot,
           journal_entries je,
           acs_objects jeo
    where  c.workflow_key = '[db_quote $workflow_key]'
    and    o.object_id = c.object_id
    and    ot.object_type = o.object_type
    and    je.object_id = c.case_id
    and    je.action = 'case start'
    and    jeo.object_id = je.journal_id
    [ad_dimensional_sql $dimensional_list where and]
    [ad_order_by_from_sort_spec $orderby $table_def]

      } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/www/admin/cases-postgresql.xql}
dbqd.contrib.obsolete-packages.acs-workflow.www.admin.cases.workflow_exists {dbqd.contrib.obsolete-packages.acs-workflow.www.admin.cases.workflow_exists {
      
	select 1 from wf_workflows 
	where workflow_key = :workflow_key
      } {} {} {} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/www/admin/cases.xql}
dbqd.contrib.obsolete-packages.acs-workflow.www.admin.cases.workflow_name {dbqd.contrib.obsolete-packages.acs-workflow.www.admin.cases.workflow_name {
      
    select pretty_name as workflow_name
    from   acs_object_types
    where  object_type = :workflow_key

      } {} {} {} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/www/admin/cases.xql}
dbqd.contrib.obsolete-packages.acs-workflow.www.admin.cases.transitions {dbqd.contrib.obsolete-packages.acs-workflow.www.admin.cases.transitions {
      
    select transition_key, transition_name 
    from   wf_transitions
    where  workflow_key = :workflow_key
    order by transition_name

      } {} {} {} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/www/admin/cases.xql}
dbqd.contrib.obsolete-packages.acs-workflow.www.admin.cases.places {dbqd.contrib.obsolete-packages.acs-workflow.www.admin.cases.places {
      
    select place_key, place_name
    from   wf_places
    where  workflow_key = :workflow_key
    order by place_name

      } {} {} {} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/www/admin/cases.xql}
dbqd.contrib.obsolete-packages.acs-workflow.www.admin.context-add-2.context_insert {dbqd.contrib.obsolete-packages.acs-workflow.www.admin.context-add-2.context_insert {
      
    insert into wf_contexts (context_key, context_name)
    values (:context_key, :context_name)

      } {} {} {} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/www/admin/context-add-2.xql}
dbqd.contrib.obsolete-packages.acs-workflow.www.admin.define.wf_exists {dbqd.contrib.obsolete-packages.acs-workflow.www.admin.define.wf_exists {
       select count(*) from wf_workflows where workflow_key = :workflow_key 
      } {} {} {} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/www/admin/define.xql}
dbqd.contrib.obsolete-packages.acs-workflow.www.admin.define.num_cases {dbqd.contrib.obsolete-packages.acs-workflow.www.admin.define.num_cases {
      
    select count(*) as num_cases from wf_cases where workflow_key = :workflow_key

      } {} {} {} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/www/admin/define.xql}
dbqd.contrib.obsolete-packages.acs-workflow.www.admin.export-2-oracle.package_id {dbqd.contrib.obsolete-packages.acs-workflow.www.admin.export-2-oracle.package_id {
      select package_id from apm_packages where package_key='acs-workflow' and rownum=1
      } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/www/admin/export-2-oracle.xql}
dbqd.contrib.obsolete-packages.acs-workflow.www.admin.export-2.package_id {dbqd.contrib.obsolete-packages.acs-workflow.www.admin.export-2.package_id {
	select package_id from apm_packages where package_key='acs-workflow' limit 1
      } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/www/admin/export-2-postgresql.xql}
dbqd.contrib.obsolete-packages.acs-workflow.www.admin.export-2.workflow_info {dbqd.contrib.obsolete-packages.acs-workflow.www.admin.export-2.workflow_info {
      
    select ot.pretty_name as workflow_name
    from   acs_object_types ot
    where  ot.object_type = :workflow_key

      } {} {} {} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/www/admin/export-2.xql}
dbqd.contrib.obsolete-packages.acs-workflow.www.admin.export.workflow_info {dbqd.contrib.obsolete-packages.acs-workflow.www.admin.export.workflow_info {
      
    select ot.pretty_name as workflow_name
    from   acs_object_types ot
    where  ot.object_type = :workflow_key

      } {} {} {} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/www/admin/export.xql}
dbqd.contrib.obsolete-packages.acs-workflow.www.admin.index-oracle.all_workflows {dbqd.contrib.obsolete-packages.acs-workflow.www.admin.index-oracle.all_workflows {
      
    select w.workflow_key, 
           t.pretty_name,
           w.description,
           count(c.case_id) as num_cases,
           0 as num_unassigned_tasks
    from   wf_workflows w, 
           acs_object_types t, 
           wf_cases c
    where  w.workflow_key = t.object_type
    and    c.workflow_key (+) = w.workflow_key
    and    c.state (+) = 'active'
    group  by w.workflow_key, t.pretty_name, w.description
    order  by t.pretty_name

      } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/www/admin/index-oracle.xql}
dbqd.contrib.obsolete-packages.acs-workflow.www.admin.index.all_workflows {dbqd.contrib.obsolete-packages.acs-workflow.www.admin.index.all_workflows {

    select w.workflow_key, 
           t.pretty_name,
           w.description,
           count(c.case_id) as num_cases,
           0 as num_unassigned_tasks
    from   wf_workflows w left outer join wf_cases c
             on (w.workflow_key = c.workflow_key and c.state = 'active'),
           acs_object_types t
    where  w.workflow_key = t.object_type
    group  by w.workflow_key, t.pretty_name, w.description
    order  by t.pretty_name

      } {} {} {} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/www/admin/index.xql}
dbqd.contrib.obsolete-packages.acs-workflow.www.admin.index.num_unassigned_tasks {dbqd.contrib.obsolete-packages.acs-workflow.www.admin.index.num_unassigned_tasks {
      
	select count(*) 
	from   wf_tasks t, wf_cases c
	where  t.workflow_key = :workflow_key
	and    t.state = 'enabled'
        and    c.case_id = t.case_id
        and    c.state = 'active'
	and    not exists (select 1 from wf_task_assignments ta where ta.task_id = t.task_id)
    
      } {} {} {} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/www/admin/index.xql}
dbqd.contrib.obsolete-packages.acs-workflow.www.admin.init-oracle.object {dbqd.contrib.obsolete-packages.acs-workflow.www.admin.init-oracle.object {
      
    select object_id, acs_object.name(object_id) as name from acs_objects order by name

      } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/www/admin/init-oracle.xql}
dbqd.contrib.obsolete-packages.acs-workflow.www.admin.init.object {dbqd.contrib.obsolete-packages.acs-workflow.www.admin.init.object {
      
    select object_id, acs_object__name(object_id) as name from acs_objects order by name

      } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/www/admin/init-postgresql.xql}
dbqd.contrib.obsolete-packages.acs-workflow.www.admin.init.context {dbqd.contrib.obsolete-packages.acs-workflow.www.admin.init.context {
      
    select context_key, context_name, '' as selected
    from wf_contexts 
    order by context_name 

      } {} {} {} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/www/admin/init.xql}
dbqd.contrib.obsolete-packages.acs-workflow.www.admin.init.workflow_name {dbqd.contrib.obsolete-packages.acs-workflow.www.admin.init.workflow_name {
      select pretty_name from acs_object_types where object_type = :workflow_key
      } {} {} {} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/www/admin/init.xql}
dbqd.contrib.obsolete-packages.acs-workflow.www.admin.name-edit-2.object_type_update {dbqd.contrib.obsolete-packages.acs-workflow.www.admin.name-edit-2.object_type_update {
      
	update acs_object_types
	set    pretty_name = :workflow_name,
	       pretty_plural = :workflow_name
	where  object_type = :workflow_key
    
      } {} {} {} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/www/admin/name-edit-2.xql}
dbqd.contrib.obsolete-packages.acs-workflow.www.admin.name-edit-2.workflow_update {dbqd.contrib.obsolete-packages.acs-workflow.www.admin.name-edit-2.workflow_update {
      
	update wf_workflows
	set    description = :description
	where  workflow_key = :workflow_key
    
      } {} {} {} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/www/admin/name-edit-2.xql}
dbqd.contrib.obsolete-packages.acs-workflow.www.admin.name-edit.workflow_info {dbqd.contrib.obsolete-packages.acs-workflow.www.admin.name-edit.workflow_info {
      
    select ot.pretty_name as workflow_name, w.description
    from   acs_object_types ot, wf_workflows w
    where  ot.object_type = w.workflow_key
    and    w.workflow_key = :workflow_key

      } {} {} {} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/www/admin/name-edit.xql}
dbqd.contrib.obsolete-packages.acs-workflow.www.admin.place-add-2.num_places {dbqd.contrib.obsolete-packages.acs-workflow.www.admin.place-add-2.num_places {
      
	    select count(*) 
	    from   wf_places
	    where  workflow_key = :workflow_key
	    and    place_name = :place_name
	
      } {} {} {} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/www/admin/place-add-2.xql}
dbqd.contrib.obsolete-packages.acs-workflow.www.admin.place-add-2.num_places {dbqd.contrib.obsolete-packages.acs-workflow.www.admin.place-add-2.num_places {
      
	    select count(*) 
	    from   wf_places
	    where  workflow_key = :workflow_key
	    and    place_name = :place_name
	
      } {} {} {} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/www/admin/place-add-2.xql}
dbqd.contrib.obsolete-packages.acs-workflow.www.admin.place-add-2.place_keys {dbqd.contrib.obsolete-packages.acs-workflow.www.admin.place-add-2.place_keys {
      select place_key from wf_places where workflow_key = :workflow_key
      } {} {} {} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/www/admin/place-add-2.xql}
dbqd.contrib.obsolete-packages.acs-workflow.www.admin.place-add-2.place_add {dbqd.contrib.obsolete-packages.acs-workflow.www.admin.place-add-2.place_add {
      
    insert into wf_places (place_key, place_name, workflow_key, sort_order)
    values (:place_key, :place_name, :workflow_key, :sort_order)

      } {} {} {} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/www/admin/place-add-2.xql}
dbqd.contrib.obsolete-packages.acs-workflow.www.admin.place-add.workflow_info {dbqd.contrib.obsolete-packages.acs-workflow.www.admin.place-add.workflow_info {
      
    select ot.pretty_name as workflow_name
    from   acs_object_types ot
    where  ot.object_type = :workflow_key

      } {} {} {} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/www/admin/place-add.xql}
dbqd.contrib.obsolete-packages.acs-workflow.www.admin.place-add.num_start_places {dbqd.contrib.obsolete-packages.acs-workflow.www.admin.place-add.num_start_places {
       
    select case when count(*) = 0 then 0 else 1 end from wf_places 
    where  workflow_key = :workflow_key
    and    place_key = 'start'

      } {} {} {} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/www/admin/place-add.xql}
dbqd.contrib.obsolete-packages.acs-workflow.www.admin.place-add.num_start_places {dbqd.contrib.obsolete-packages.acs-workflow.www.admin.place-add.num_start_places {
       
    select case when count(*) = 0 then 0 else 1 end from wf_places 
    where  workflow_key = :workflow_key
    and    place_key = 'start'

      } {} {} {} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/www/admin/place-add.xql}
dbqd.contrib.obsolete-packages.acs-workflow.www.admin.place-delete.arcs_delete {dbqd.contrib.obsolete-packages.acs-workflow.www.admin.place-delete.arcs_delete {
      
	delete from wf_arcs
	where  workflow_key = :workflow_key
	and    place_key = :place_key
    
      } {} {} {} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/www/admin/place-delete.xql}
dbqd.contrib.obsolete-packages.acs-workflow.www.admin.place-delete.place_delete {dbqd.contrib.obsolete-packages.acs-workflow.www.admin.place-delete.place_delete {
      
	delete from wf_places
	where  workflow_key = :workflow_key
	and    place_key = :place_key
    
      } {} {} {} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/www/admin/place-delete.xql}
dbqd.contrib.obsolete-packages.acs-workflow.www.admin.place-edit-2.place_update {dbqd.contrib.obsolete-packages.acs-workflow.www.admin.place-edit-2.place_update {
      
    update wf_places
    set    place_name = :place_name,
           sort_order = :sort_order
    where  workflow_key = :workflow_key
    and    place_key = :place_key

      } {} {} {} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/www/admin/place-edit-2.xql}
dbqd.contrib.obsolete-packages.acs-workflow.www.admin.place-edit.place_info {dbqd.contrib.obsolete-packages.acs-workflow.www.admin.place-edit.place_info {
      
    select p.place_name, p.sort_order,
           ot.pretty_name as workflow_name
    from   wf_places p, acs_object_types ot
    where  p.place_key = :place_key
    and    p.workflow_key = :workflow_key
    and    ot.object_type = p.workflow_key

      } {} {} {} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/www/admin/place-edit.xql}
dbqd.contrib.obsolete-packages.acs-workflow.www.admin.role-add-2.num_roles {dbqd.contrib.obsolete-packages.acs-workflow.www.admin.role-add-2.num_roles {
      
	    select count(*) 
	    from   wf_roles
	    where  workflow_key = :workflow_key
	    and    role_name = :role_name
	
      } {} {} {} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/www/admin/role-add-2.xql}
dbqd.contrib.obsolete-packages.acs-workflow.www.admin.role-add.workflow_info {dbqd.contrib.obsolete-packages.acs-workflow.www.admin.role-add.workflow_info {
      
    select ot.pretty_name as workflow_name
    from   acs_object_types ot
    where  ot.object_type = :workflow_key

      } {} {} {} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/www/admin/role-add.xql}
dbqd.contrib.obsolete-packages.acs-workflow.www.admin.role-edit-2.num_roles {dbqd.contrib.obsolete-packages.acs-workflow.www.admin.role-edit-2.num_roles {
      
	    select count(*) 
	    from   wf_roles
	    where  workflow_key = :workflow_key
	    and    role_name = :role_name
            and    role_key != :role_key
	
      } {} {} {} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/www/admin/role-edit-2.xql}
dbqd.contrib.obsolete-packages.acs-workflow.www.admin.role-edit-2.edit_role {dbqd.contrib.obsolete-packages.acs-workflow.www.admin.role-edit-2.edit_role {
      
	update wf_roles
	   set role_name = :role_name
	 where workflow_key = :workflow_key
	   and role_key = :role_key
    
      } {} {} {} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/www/admin/role-edit-2.xql}
dbqd.contrib.obsolete-packages.acs-workflow.www.admin.role-edit.workflow_info {dbqd.contrib.obsolete-packages.acs-workflow.www.admin.role-edit.workflow_info {
      
    select ot.pretty_name as workflow_name
    from   acs_object_types ot
    where  ot.object_type = :workflow_key

      } {} {} {} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/www/admin/role-edit.xql}
dbqd.contrib.obsolete-packages.acs-workflow.www.admin.role-edit.role_info {dbqd.contrib.obsolete-packages.acs-workflow.www.admin.role-edit.role_info {
      
    select role_key,
           role_name
      from wf_roles
     where workflow_key = :workflow_key
       and role_key = :role_key

      } {} {} {} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/www/admin/role-edit.xql}
dbqd.contrib.obsolete-packages.acs-workflow.www.admin.role-manual.workflow_info {dbqd.contrib.obsolete-packages.acs-workflow.www.admin.role-manual.workflow_info {
      
    select ot.pretty_name as workflow_name
    from   acs_object_types ot
    where  ot.object_type = :workflow_key

      } {} {} {} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/www/admin/role-manual.xql}
dbqd.contrib.obsolete-packages.acs-workflow.www.admin.role-manual.role_info {dbqd.contrib.obsolete-packages.acs-workflow.www.admin.role-manual.role_info {
      
    select role_name
      from wf_roles
     where workflow_key = :workflow_key
       and role_key = :role_key

      } {} {} {} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/www/admin/role-manual.xql}
dbqd.contrib.obsolete-packages.acs-workflow.www.admin.role-manual.transitions {dbqd.contrib.obsolete-packages.acs-workflow.www.admin.role-manual.transitions {
      
    select t.transition_key,
           t.transition_name
      from wf_transitions t
     where t.workflow_key = :workflow_key
       and not exists (select 1 
                         from wf_transition_role_assign_map m 
                        where m.workflow_key = t.workflow_key  
                          and m.transition_key = t.transition_key 
                          and m.assign_role_key = :role_key)
     order by t.sort_order

      } {} {} {} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/www/admin/role-manual.xql}
dbqd.contrib.obsolete-packages.acs-workflow.www.admin.roles-assignment-table-oracle.roles {dbqd.contrib.obsolete-packages.acs-workflow.www.admin.roles-assignment-table-oracle.roles {
      
    select r.sort_order, 
           r.role_key,
           r.role_name,
           '' as delete_url,
           '' as edit_url,
           '' as static_url,
           '' as manual_url,
           '' as programmatic_url,
           0 as is_static_p,
           cri.assignment_callback,
           cri.assignment_custom_arg,
           map.transition_key as assigning_transition_key,
           t.transition_name as assigning_transition_name
      from wf_roles r, wf_context_role_info cri, wf_transition_role_assign_map map, wf_transitions t
     where r.workflow_key = :workflow_key
       and cri.context_key (+) = :context_key
       and cri.workflow_key (+) = r.workflow_key
       and cri.role_key (+) = r.role_key
       and map.workflow_key (+) = r.workflow_key
       and map.assign_role_key (+) = r.role_key
       and t.workflow_key (+) = map.workflow_key
       and t.transition_key (+) = map.transition_key
     order by r.sort_order

      } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/www/admin/roles-assignment-table-oracle.xql}
dbqd.contrib.obsolete-packages.acs-workflow.www.admin.roles-assignment-table.roles {dbqd.contrib.obsolete-packages.acs-workflow.www.admin.roles-assignment-table.roles {

    select r.sort_order, 
           r.role_key,
           r.role_name,
           '' as delete_url,
           '' as edit_url,
           '' as static_url,
           '' as manual_url,
           '' as programmatic_url,
           0 as is_static_p,
           cri.assignment_callback,
           cri.assignment_custom_arg,
           map.transition_key as assigning_transition_key,
           t.transition_name as assigning_transition_name
      from ((wf_roles r LEFT OUTER JOIN wf_context_role_info cri
	     ON (r.workflow_key = cri.workflow_key and cri.context_key = :context_key and cri.role_key = r.role_key)) LEFT OUTER JOIN  wf_transition_role_assign_map map
	       ON (r.workflow_key = map.workflow_key and r.role_key = map.assign_role_key)) LEFT OUTER JOIN  wf_transitions t ON (map.workflow_key = t.workflow_key and map.transition_key = t.transition_key)
     where r.workflow_key = :workflow_key
     order by r.sort_order

      } {} {} {} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/www/admin/roles-assignment-table.xql}
dbqd.contrib.obsolete-packages.acs-workflow.www.admin.roles-table-oracle.roles {dbqd.contrib.obsolete-packages.acs-workflow.www.admin.roles-table-oracle.roles {
      
    select r.sort_order, 
           r.role_key,
           r.role_name,
           '' as delete_url,
           '' as edit_url,
           '' as move_up_url,
           '' as move_down_url,
           0 as role_no,
           t.transition_key,
           t.transition_name,
           '' as transition_edit_url
      from wf_roles r, wf_transitions t
     where r.workflow_key = :workflow_key
       and t.workflow_key (+) = r.workflow_key
       and t.role_key (+) = r.role_key
     order by r.sort_order, t.sort_order

      } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/www/admin/roles-table-oracle.xql}
dbqd.contrib.obsolete-packages.acs-workflow.www.admin.roles-table.roles {dbqd.contrib.obsolete-packages.acs-workflow.www.admin.roles-table.roles {

    select r.sort_order, 
           r.role_key,
           r.role_name,
           '' as delete_url,
           '' as edit_url,
           '' as move_up_url,
           '' as move_down_url,
           0 as role_no,
           t.transition_key,
           t.transition_name,
           '' as transition_edit_url
      from wf_roles r left outer join wf_transitions t on (t.workflow_key = r.workflow_key and t.role_key = r.role_key)
     where r.workflow_key = :workflow_key
     order by r.sort_order, t.sort_order

      } {} {} {} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/www/admin/roles-table.xql}
dbqd.contrib.obsolete-packages.acs-workflow.www.admin.static-assignment-add.static_assignment_add {dbqd.contrib.obsolete-packages.acs-workflow.www.admin.static-assignment-add.static_assignment_add {
      
    insert into wf_context_assignments
        (workflow_key, context_key, role_key, party_id)
    values
        (:workflow_key, :context_key, :role_key, :party_id)

      } {} {} {} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/www/admin/static-assignment-add.xql}
dbqd.contrib.obsolete-packages.acs-workflow.www.admin.static-assignment-delete.static_assignment_delete {dbqd.contrib.obsolete-packages.acs-workflow.www.admin.static-assignment-delete.static_assignment_delete {
      
    delete
    from   wf_context_assignments
    where  workflow_key = :workflow_key
    and    context_key = :context_key
    and    role_key = :role_key
    and    party_id = :party_id

      } {} {} {} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/www/admin/static-assignment-delete.xql}
dbqd.contrib.obsolete-packages.acs-workflow.www.admin.static-assignments-oracle.tasks {dbqd.contrib.obsolete-packages.acs-workflow.www.admin.static-assignments-oracle.tasks {

    select tr.transition_key, 
           tr.transition_name,
           p.party_id,
           acs_object.name(p.party_id) as party_name,
           p.email as party_email,
           '' as user_select_widget
    from   wf_transition_info tr,
           wf_context_assignments ca,
           parties p
    where  tr.workflow_key = :workflow_key
    and    tr.context_key = :context_key
    and    tr.trigger_type = 'user'
    and    tr.assignment_callback is null
    and    ca.context_key (+) = tr.context_key
    and    ca.transition_key (+) = tr.transition_key
    and    p.party_id (+) = ca.party_id
    and    not exists 
               (select 1 
                from   wf_transition_assignment_map 
                where  workflow_key = tr.workflow_key
                and    assign_transition_key = tr.transition_key)
    order by tr.sort_order, tr.transition_key

      } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/www/admin/static-assignments-oracle.xql}
dbqd.contrib.obsolete-packages.acs-workflow.www.admin.static-assignments-oracle.parties {dbqd.contrib.obsolete-packages.acs-workflow.www.admin.static-assignments-oracle.parties {
      
            select p.party_id as sel_party_id,
                   acs_object.name(p.party_id) as sel_name,
                   p.email as sel_email
            from   parties p
            where  p.party_id not in 
                  (select ca.party_id 
                   from   wf_context_assignments ca
                   where  ca.workflow_key = :workflow_key 
                   and    ca.context_key = :context_key 
                   and    ca.transition_key = :transition_key)
	
      } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/www/admin/static-assignments-oracle.xql}
dbqd.contrib.obsolete-packages.acs-workflow.www.admin.static-assignments.tasks {dbqd.contrib.obsolete-packages.acs-workflow.www.admin.static-assignments.tasks {

    select tr.transition_key, 
           tr.transition_name,
           p.party_id,
           acs_object__name(p.party_id) as party_name,
           p.email as party_email,
           '' as user_select_widget
    from   wf_transition_info tr 
             left outer join
           wf_context_assignments ca 
             on (tr.context_key = ca.context_key and 
                  tr.transition_key = ca.transition_key) 
             left outer join 
           parties p 
             using (party_id) 
    where  not exists 
               (select 1 
                from   wf_transition_assignment_map 
                where  workflow_key = tr.workflow_key
                and    assign_transition_key = tr.transition_key)
      and  tr.workflow_key = :workflow_key
      and  tr.context_key = :context_key
      and  tr.trigger_type = 'user'
      and  tr.assignment_callback is null
    order by tr.sort_order, tr.transition_key

      } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/www/admin/static-assignments-postgresql.xql}
dbqd.contrib.obsolete-packages.acs-workflow.www.admin.static-assignments.parties {dbqd.contrib.obsolete-packages.acs-workflow.www.admin.static-assignments.parties {
      
            select p.party_id as sel_party_id,
                   acs_object__name(p.party_id) as sel_name,
                   p.email as sel_email
            from   parties p
            where  p.party_id not in 
                  (select ca.party_id 
                   from   wf_context_assignments ca
                   where  ca.workflow_key = :workflow_key 
                   and    ca.context_key = :context_key 
                   and    ca.transition_key = :transition_key)
	
      } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/www/admin/static-assignments-postgresql.xql}
dbqd.contrib.obsolete-packages.acs-workflow.www.admin.static-assignments-table-oracle.roles {dbqd.contrib.obsolete-packages.acs-workflow.www.admin.static-assignments-table-oracle.roles {
      
    select r.role_key, 
           r.role_name,
           p.party_id,
           acs_object.name(p.party_id) as party_name,
           p.email as party_email,
           '' as user_select_widget,
           '' as add_export_vars,
           '' as remove_url
    from   wf_roles r,
           wf_context_assignments ca,
           parties p
    where  r.workflow_key = :workflow_key
    and    ca.context_key (+) = :context_key
    and    ca.role_key (+) = r.role_key
    and    p.party_id (+) = ca.party_id
    order by r.sort_order, r.role_key

      } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/www/admin/static-assignments-table-oracle.xql}
dbqd.contrib.obsolete-packages.acs-workflow.www.admin.static-assignments-table-oracle.parties {dbqd.contrib.obsolete-packages.acs-workflow.www.admin.static-assignments-table-oracle.parties {
      
            select p.party_id as sel_party_id,
                   acs_object.name(p.party_id) as sel_name,
                   p.email as sel_email
            from   parties p
            where  p.party_id not in 
                  (select ca.party_id 
                   from   wf_context_assignments ca
                   where  ca.workflow_key = :workflow_key 
                   and    ca.context_key = :context_key 
                   and    ca.role_key = :role_key)
	
      } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/www/admin/static-assignments-table-oracle.xql}
dbqd.contrib.obsolete-packages.acs-workflow.www.admin.static-assignments-table.roles {dbqd.contrib.obsolete-packages.acs-workflow.www.admin.static-assignments-table.roles {

    select r.role_key, 
           r.role_name,
           p.party_id,
           acs_object__name(p.party_id) as party_name,
           p.email as party_email,
           '' as user_select_widget,
           '' as add_export_vars,
           '' as remove_url
    from   wf_roles r 
	   left outer join
           wf_context_assignments ca 
	   on (ca.context_key = :context_key and ca.role_key = r.role_key)
	   left outer join
           parties p
	   using (party_id)
    where  r.workflow_key = :workflow_key
    order by r.sort_order, r.role_key

      } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/www/admin/static-assignments-table-postgresql.xql}
dbqd.contrib.obsolete-packages.acs-workflow.www.admin.static-assignments-table.parties {dbqd.contrib.obsolete-packages.acs-workflow.www.admin.static-assignments-table.parties {
      
            select p.party_id as sel_party_id,
                   acs_object__name(p.party_id) as sel_name,
                   p.email as sel_email
            from   parties p
            where  p.party_id not in 
                  (select ca.party_id 
                   from   wf_context_assignments ca
                   where  ca.workflow_key = :workflow_key 
                   and    ca.context_key = :context_key 
                   and    ca.role_key = :role_key)
	
      } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/www/admin/static-assignments-table-postgresql.xql}
dbqd.contrib.obsolete-packages.acs-workflow.www.admin.static-assignments.workflow_exists {dbqd.contrib.obsolete-packages.acs-workflow.www.admin.static-assignments.workflow_exists {
      
	select 1 from wf_workflows 
	where workflow_key = :workflow_key
      } {} {} {} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/www/admin/static-assignments.xql}
dbqd.contrib.obsolete-packages.acs-workflow.www.admin.static-assignments.workflow_name {dbqd.contrib.obsolete-packages.acs-workflow.www.admin.static-assignments.workflow_name {
      
    select pretty_name as workflow_name
    from   acs_object_types
    where  object_type = :workflow_key

      } {} {} {} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/www/admin/static-assignments.xql}
dbqd.contrib.obsolete-packages.acs-workflow.www.admin.static-assignments.context_slider {dbqd.contrib.obsolete-packages.acs-workflow.www.admin.static-assignments.context_slider {
      
    select context_key as context_key_from_db,
           context_name as title,
           '' as url,
           0 as selected_p
    from   wf_contexts
    order by context_name

      } {} {} {} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/www/admin/static-assignments.xql}
dbqd.contrib.obsolete-packages.acs-workflow.www.admin.task-actions-2.num_rows {dbqd.contrib.obsolete-packages.acs-workflow.www.admin.task-actions-2.num_rows {
      select count(*) from wf_context_transition_info where workflow_key = :workflow_key and transition_key = :transition_key and context_key = :context_key
      } {} {} {} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/www/admin/task-actions-2.xql}
dbqd.contrib.obsolete-packages.acs-workflow.www.admin.task-actions-2.insert_actions {dbqd.contrib.obsolete-packages.acs-workflow.www.admin.task-actions-2.insert_actions {
      
        insert into wf_context_transition_info
        (workflow_key, 
         transition_key, 
         context_key, 
         enable_callback,
         enable_custom_arg,
         fire_callback,
         fire_custom_arg,
         time_callback,
         time_custom_arg,
         deadline_callback,
         deadline_custom_arg,
         deadline_attribute_name,
         hold_timeout_callback,
         hold_timeout_custom_arg,
         notification_callback,
         notification_custom_arg,
         unassigned_callback,
         unassigned_custom_arg)
        values 
        (:workflow_key, 
         :transition_key, 
         :context_key, 
         :enable_callback,
         :enable_custom_arg,
         :fire_callback,
         :fire_custom_arg,
         :time_callback,
         :time_custom_arg,
         :deadline_callback,
         :deadline_custom_arg,
         :deadline_attribute_name,
         :hold_timeout_callback,
         :hold_timeout_custom_arg,
         :notification_callback,
         :notification_custom_arg,
         :unassigned_callback,
         :unassigned_custom_arg)
    
      } {} {} {} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/www/admin/task-actions-2.xql}
dbqd.contrib.obsolete-packages.acs-workflow.www.admin.task-actions-2.update_actions {dbqd.contrib.obsolete-packages.acs-workflow.www.admin.task-actions-2.update_actions {
      
        update wf_context_transition_info set 
        enable_callback = :enable_callback,
        enable_custom_arg = :enable_custom_arg,
        fire_callback = :fire_callback,
        fire_custom_arg = :fire_custom_arg,
        time_callback = :time_callback,
        time_custom_arg = :time_custom_arg,
        deadline_callback = :deadline_callback,
        deadline_custom_arg = :deadline_custom_arg,
        deadline_attribute_name = :deadline_attribute_name,
        hold_timeout_callback = :hold_timeout_callback,
        hold_timeout_custom_arg = :hold_timeout_custom_arg,
        notification_callback = :notification_callback,
        notification_custom_arg = :notification_custom_arg,
        unassigned_callback = :unassigned_callback,
        unassigned_custom_arg = :unassigned_custom_arg
        where workflow_key = :workflow_key and transition_key = :transition_key and context_key = :context_key
    
      } {} {} {} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/www/admin/task-actions-2.xql}
dbqd.contrib.obsolete-packages.acs-workflow.www.admin.task-actions.workflow_exists {dbqd.contrib.obsolete-packages.acs-workflow.www.admin.task-actions.workflow_exists {
      
	select 1 from wf_workflows 
	where workflow_key = :workflow_key
      } {} {} {} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/www/admin/task-actions.xql}
dbqd.contrib.obsolete-packages.acs-workflow.www.admin.task-actions.workflow_and_transition_name {dbqd.contrib.obsolete-packages.acs-workflow.www.admin.task-actions.workflow_and_transition_name {
      
    select ot.pretty_name as workflow_name,
           t.transition_name
    from   acs_object_types ot,
           wf_transitions t
    where  ot.object_type = :workflow_key
    and    t.workflow_key = ot.object_type
    and    t.transition_key = :transition_key

      } {} {} {} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/www/admin/task-actions.xql}
dbqd.contrib.obsolete-packages.acs-workflow.www.admin.task-add-2.num_transitions {dbqd.contrib.obsolete-packages.acs-workflow.www.admin.task-add-2.num_transitions {
      
	    select count(*) 
	    from   wf_transitions
	    where  workflow_key = :workflow_key
	    and    transition_name = :transition_name
	
      } {} {} {} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/www/admin/task-add-2.xql}
dbqd.contrib.obsolete-packages.acs-workflow.www.admin.task-add.workflow_info {dbqd.contrib.obsolete-packages.acs-workflow.www.admin.task-add.workflow_info {
      
    select ot.pretty_name as workflow_name
    from   acs_object_types ot
    where  ot.object_type = :workflow_key

      } {} {} {} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/www/admin/task-add.xql}
dbqd.contrib.obsolete-packages.acs-workflow.www.admin.task-add.roles {dbqd.contrib.obsolete-packages.acs-workflow.www.admin.task-add.roles {
      
    select r.role_key, 
           r.role_name 
      from wf_roles r
     where r.workflow_key = :workflow_key
     order by r.sort_order

      } {} {} {} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/www/admin/task-add.xql}
dbqd.contrib.obsolete-packages.acs-workflow.www.admin.task-assignment-add.num_rows {dbqd.contrib.obsolete-packages.acs-workflow.www.admin.task-assignment-add.num_rows {
      
	select count(*) as num_rows 
	  from wf_transition_role_assign_map 
         where workflow_key = :workflow_key
	   and transition_key = :transition_key
	   and assign_role_key = :role_key
    
      } {} {} {} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/www/admin/task-assignment-add.xql}
dbqd.contrib.obsolete-packages.acs-workflow.www.admin.task-assignment-add.make_manual {dbqd.contrib.obsolete-packages.acs-workflow.www.admin.task-assignment-add.make_manual {
      
	    insert into wf_transition_role_assign_map (workflow_key, transition_key, assign_role_key)
	    values (:workflow_key, :transition_key, :role_key)
	
      } {} {} {} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/www/admin/task-assignment-add.xql}
dbqd.contrib.obsolete-packages.acs-workflow.www.admin.task-assignment-delete.assignment_delete {dbqd.contrib.obsolete-packages.acs-workflow.www.admin.task-assignment-delete.assignment_delete {
      
	delete from wf_transition_role_assign_map
	 where workflow_key = :workflow_key
  	   and transition_key = :transition_key
	   and assign_role_key = :role_key
    
      } {} {} {} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/www/admin/task-assignment-delete.xql}
dbqd.contrib.obsolete-packages.acs-workflow.www.admin.task-assignment.workflow_exists {dbqd.contrib.obsolete-packages.acs-workflow.www.admin.task-assignment.workflow_exists {
      
	select 1 from wf_workflows 
	where workflow_key = :workflow_key
      } {} {} {} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/www/admin/task-assignment.xql}
dbqd.contrib.obsolete-packages.acs-workflow.www.admin.task-assignment.workflow_and_transition_name {dbqd.contrib.obsolete-packages.acs-workflow.www.admin.task-assignment.workflow_and_transition_name {
      
    select ot.pretty_name as workflow_name,
           t.transition_name
    from   acs_object_types ot,
           wf_transitions t
    where  ot.object_type = :workflow_key
    and    t.workflow_key = ot.object_type
    and    t.transition_key = :transition_key

      } {} {} {} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/www/admin/task-assignment.xql}
dbqd.contrib.obsolete-packages.acs-workflow.www.admin.task-assignment.assigned_by_this {dbqd.contrib.obsolete-packages.acs-workflow.www.admin.task-assignment.assigned_by_this {
      
    select r.role_name,
           r.role_key,
           '' as delete_url
    from   wf_transition_role_assign_map m, 
           wf_roles r
    where  m.workflow_key = :workflow_key
    and    m.transition_key = :transition_key
    and    r.workflow_key = m.workflow_key
    and    r.role_key = m.assign_role_key

      } {} {} {} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/www/admin/task-assignment.xql}
dbqd.contrib.obsolete-packages.acs-workflow.www.admin.task-assignment.to_be_assigned_by_this {dbqd.contrib.obsolete-packages.acs-workflow.www.admin.task-assignment.to_be_assigned_by_this {
      
    select r.role_name,
           r.role_key
    from   wf_roles r
    where  r.workflow_key = :workflow_key
    and    r.role_key != (select role_key from wf_transitions t where workflow_key = :workflow_key and transition_key = :transition_key)
    and    not exists (select 1 from wf_transition_role_assign_map m
                       where  m.workflow_key = :workflow_key
                       and    m.transition_key = :transition_key
                       and    m.assign_role_key = r.role_key)

      } {} {} {} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/www/admin/task-assignment.xql}
dbqd.contrib.obsolete-packages.acs-workflow.www.admin.task-attribute-add-oracle.transition_attribute_add {dbqd.contrib.obsolete-packages.acs-workflow.www.admin.task-attribute-add-oracle.transition_attribute_add {
      
    insert into wf_transition_attribute_map (workflow_key, transition_key, sort_order, attribute_id)
    select :workflow_key, :transition_key, nvl(max(sort_order)+1,1), :attribute_id
    from wf_transition_attribute_map
    where workflow_key = :workflow_key
    and   transition_key = :transition_key

      } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/www/admin/task-attribute-add-oracle.xql}
dbqd.contrib.obsolete-packages.acs-workflow.www.admin.task-attribute-add.transition_attribute_add {dbqd.contrib.obsolete-packages.acs-workflow.www.admin.task-attribute-add.transition_attribute_add {
      
    insert into wf_transition_attribute_map (workflow_key, transition_key, sort_order, attribute_id)
    select :workflow_key, :transition_key, coalesce(max(sort_order)+1,1), :attribute_id
    from wf_transition_attribute_map
    where workflow_key = :workflow_key
    and   transition_key = :transition_key

      } {} {} {} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/www/admin/task-attribute-add.xql}
dbqd.contrib.obsolete-packages.acs-workflow.www.admin.task-attribute-delete.panel_delete {dbqd.contrib.obsolete-packages.acs-workflow.www.admin.task-attribute-delete.panel_delete {
      
    delete from wf_transition_attribute_map
    where  workflow_key = :workflow_key
    and    transition_key = :transition_key
    and    attribute_id = :attribute_id

      } {} {} {} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/www/admin/task-attribute-delete.xql}
dbqd.contrib.obsolete-packages.acs-workflow.www.admin.task-attribute-move-up.attribute_move_up {dbqd.contrib.obsolete-packages.acs-workflow.www.admin.task-attribute-move-up.attribute_move_up {

	update wf_transition_attribute_map
	set    sort_order = case when sort_order = :sort_order then :prior_sort_order when sort_order = :prior_sort_order then :sort_order end
	where  workflow_key = :workflow_key
	and    transition_key = :transition_key
	and    sort_order in (:sort_order, :prior_sort_order)
    
      } {} {} {} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/www/admin/task-attribute-move-up.xql}
dbqd.contrib.obsolete-packages.acs-workflow.www.admin.task-attributes.workflow_exists {dbqd.contrib.obsolete-packages.acs-workflow.www.admin.task-attributes.workflow_exists {
      
	select 1 from wf_workflows 
	where workflow_key = :workflow_key
      } {} {} {} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/www/admin/task-attributes.xql}
dbqd.contrib.obsolete-packages.acs-workflow.www.admin.task-attributes.workflow_and_transition_name {dbqd.contrib.obsolete-packages.acs-workflow.www.admin.task-attributes.workflow_and_transition_name {
      
    select ot.pretty_name as workflow_name,
           t.transition_name
    from   acs_object_types ot,
           wf_transitions t
    where  ot.object_type = :workflow_key
    and    t.workflow_key = ot.object_type
    and    t.transition_key = :transition_key

      } {} {} {} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/www/admin/task-attributes.xql}
dbqd.contrib.obsolete-packages.acs-workflow.www.admin.task-attributes.attributes {dbqd.contrib.obsolete-packages.acs-workflow.www.admin.task-attributes.attributes {
      
    select ta.sort_order,
           a.attribute_id,
           a.attribute_name,
           a.pretty_name,
           a.datatype,
           '' as delete_url,
           '' as move_up_url
    from   wf_transition_attribute_map ta,
           acs_attributes a
    where  ta.workflow_key = :workflow_key
    and    ta.transition_key = :transition_key
    and    a.attribute_id = ta.attribute_id
    order by sort_order

      } {} {} {} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/www/admin/task-attributes.xql}
dbqd.contrib.obsolete-packages.acs-workflow.www.admin.task-attributes.attributes_not_set {dbqd.contrib.obsolete-packages.acs-workflow.www.admin.task-attributes.attributes_not_set {
      
    select a.attribute_id,
           a.sort_order,
           a.attribute_name,
           a.pretty_name,
           a.datatype
    from   acs_attributes a
    where  a.object_type = :workflow_key
    and not exists (select 1 from wf_transition_attribute_map m
                    where  m.workflow_key = :workflow_key
                    and    m.transition_key = :transition_key
                    and    m.attribute_id = a.attribute_id)
    order by sort_order

      } {} {} {} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/www/admin/task-attributes.xql}
dbqd.contrib.obsolete-packages.acs-workflow.www.admin.task-delete.arcs_delete {dbqd.contrib.obsolete-packages.acs-workflow.www.admin.task-delete.arcs_delete {
      
	delete from wf_arcs
	where  workflow_key = :workflow_key
	and    transition_key = :transition_key
    
      } {} {} {} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/www/admin/task-delete.xql}
dbqd.contrib.obsolete-packages.acs-workflow.www.admin.task-delete.transition_attribute_map_delete {dbqd.contrib.obsolete-packages.acs-workflow.www.admin.task-delete.transition_attribute_map_delete {
      
	delete from wf_transition_attribute_map
	where  workflow_key = :workflow_key
	and    transition_key = :transition_key
    
      } {} {} {} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/www/admin/task-delete.xql}
dbqd.contrib.obsolete-packages.acs-workflow.www.admin.task-delete.transition_assignment_map_delete {dbqd.contrib.obsolete-packages.acs-workflow.www.admin.task-delete.transition_assignment_map_delete {
      
	delete from wf_transition_assignment_map
	where  workflow_key = :workflow_key
	and    transition_key = :transition_key
    
      } {} {} {} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/www/admin/task-delete.xql}
dbqd.contrib.obsolete-packages.acs-workflow.www.admin.task-delete.wf_context_assignments_delete {dbqd.contrib.obsolete-packages.acs-workflow.www.admin.task-delete.wf_context_assignments_delete {
      
	delete from wf_context_assignments
	where  workflow_key = :workflow_key
	and    transition_key = :transition_key
    
      } {} {} {} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/www/admin/task-delete.xql}
dbqd.contrib.obsolete-packages.acs-workflow.www.admin.task-delete.wf_context_transition_info_delete {dbqd.contrib.obsolete-packages.acs-workflow.www.admin.task-delete.wf_context_transition_info_delete {
      
	delete from wf_context_transition_info
	where  workflow_key = :workflow_key
	and    transition_key = :transition_key
    
      } {} {} {} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/www/admin/task-delete.xql}
dbqd.contrib.obsolete-packages.acs-workflow.www.admin.task-delete.transition_delete {dbqd.contrib.obsolete-packages.acs-workflow.www.admin.task-delete.transition_delete {
      
	delete from wf_transitions
	where  workflow_key = :workflow_key
	and    transition_key = :transition_key
    
      } {} {} {} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/www/admin/task-delete.xql}
dbqd.contrib.obsolete-packages.acs-workflow.www.admin.task-edit-2.transition_update {dbqd.contrib.obsolete-packages.acs-workflow.www.admin.task-edit-2.transition_update {
      
	    update wf_transitions
	    set    transition_name = :transition_name,
		   trigger_type = :trigger_type,
		   role_key = :role_key
	    where  workflow_key = :workflow_key
	    and    transition_key = :transition_key
	
      } {} {} {} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/www/admin/task-edit-2.xql}
dbqd.contrib.obsolete-packages.acs-workflow.www.admin.task-edit-2.transition_update {dbqd.contrib.obsolete-packages.acs-workflow.www.admin.task-edit-2.transition_update {
      
	    update wf_transitions
	    set    transition_name = :transition_name,
		   trigger_type = :trigger_type,
		   role_key = :role_key
	    where  workflow_key = :workflow_key
	    and    transition_key = :transition_key
	
      } {} {} {} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/www/admin/task-edit-2.xql}
dbqd.contrib.obsolete-packages.acs-workflow.www.admin.task-edit-2.num_rows {dbqd.contrib.obsolete-packages.acs-workflow.www.admin.task-edit-2.num_rows {
      select count(*) from wf_context_transition_info where workflow_key = :workflow_key and transition_key = :transition_key and context_key = 'default'
      } {} {} {} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/www/admin/task-edit-2.xql}
dbqd.contrib.obsolete-packages.acs-workflow.www.admin.task-edit-2.insert_estimated_minmutes {dbqd.contrib.obsolete-packages.acs-workflow.www.admin.task-edit-2.insert_estimated_minmutes {
      
		insert into wf_context_transition_info
		(workflow_key, transition_key, context_key, estimated_minutes, instructions)
		values (:workflow_key, :transition_key, 'default', :estimated_minutes, :instructions)
	    
      } {} {} {} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/www/admin/task-edit-2.xql}
dbqd.contrib.obsolete-packages.acs-workflow.www.admin.task-edit-2.update_estimated_minutes {dbqd.contrib.obsolete-packages.acs-workflow.www.admin.task-edit-2.update_estimated_minutes {
      
		update wf_context_transition_info 
		   set estimated_minutes = :estimated_minutes,
		       instructions = :instructions
		 where workflow_key = :workflow_key  
		   and transition_key = :transition_key 
		   and context_key = 'default'
	    
      } {} {} {} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/www/admin/task-edit-2.xql}
dbqd.contrib.obsolete-packages.acs-workflow.www.admin.task-edit.workflow_info {dbqd.contrib.obsolete-packages.acs-workflow.www.admin.task-edit.workflow_info {
      
    select pretty_name as workflow_name
      from acs_object_types
     where object_type = :workflow_key

      } {} {} {} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/www/admin/task-edit.xql}
dbqd.contrib.obsolete-packages.acs-workflow.www.admin.task-edit.transition_info {dbqd.contrib.obsolete-packages.acs-workflow.www.admin.task-edit.transition_info {
      
    select transition_name,
           trigger_type,
           role_key as selected_role_key
    from   wf_transitions
    where  transition_key = :transition_key
    and    workflow_key = :workflow_key

      } {} {} {} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/www/admin/task-edit.xql}
dbqd.contrib.obsolete-packages.acs-workflow.www.admin.task-edit.roles {dbqd.contrib.obsolete-packages.acs-workflow.www.admin.task-edit.roles {
      
    select r.role_key, 
           r.role_name,
           case when role_key = :selected_role_key then 'SELECTED' else '' end as selected_string 
      from wf_roles r
     where r.workflow_key = :workflow_key
     order by r.sort_order

      } {} {} {} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/www/admin/task-edit.xql}
dbqd.contrib.obsolete-packages.acs-workflow.www.admin.task-edit.transition_context_info {dbqd.contrib.obsolete-packages.acs-workflow.www.admin.task-edit.transition_context_info {
      
    select estimated_minutes, instructions 
      from wf_context_transition_info 
     where workflow_key = :workflow_key 
       and transition_key = :transition_key 
       and context_key = :context_key

      } {} {} {} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/www/admin/task-edit.xql}
dbqd.contrib.obsolete-packages.acs-workflow.www.admin.task-panel-add-2-oracle.panel_add {dbqd.contrib.obsolete-packages.acs-workflow.www.admin.task-panel-add-2-oracle.panel_add {
      
	insert into wf_context_task_panels
	    (workflow_key, transition_key, context_key, sort_order, header, template_url)
	select :workflow_key, :transition_key, :context_key, nvl(max(sort_order)+1,1), :header, :template_url
	from   wf_context_task_panels
	where  workflow_key = :workflow_key
	and    transition_key = :transition_key
	and    context_key = :context_key
    
      } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/www/admin/task-panel-add-2-oracle.xql}
dbqd.contrib.obsolete-packages.acs-workflow.www.admin.task-panel-add-2.panel_add {dbqd.contrib.obsolete-packages.acs-workflow.www.admin.task-panel-add-2.panel_add {
      
	insert into wf_context_task_panels
	    (workflow_key, transition_key, context_key, sort_order, header, template_url)
	select :workflow_key, :transition_key, :context_key, coalesce(max(sort_order)+1,1), :header, :template_url
	from   wf_context_task_panels
	where  workflow_key = :workflow_key
	and    transition_key = :transition_key
	and    context_key = :context_key
    
      } {} {} {} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/www/admin/task-panel-add-2.xql}
dbqd.contrib.obsolete-packages.acs-workflow.www.admin.task-panel-add.workflow_and_transition_name {dbqd.contrib.obsolete-packages.acs-workflow.www.admin.task-panel-add.workflow_and_transition_name {
      
    select ot.pretty_name as workflow_name,
           t.transition_name
    from   acs_object_types ot,
           wf_transitions t
    where  ot.object_type = :workflow_key
    and    t.workflow_key = ot.object_type
    and    t.transition_key = :transition_key

      } {} {} {} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/www/admin/task-panel-add.xql}
dbqd.contrib.obsolete-packages.acs-workflow.www.admin.task-panel-delete.panel_delete {dbqd.contrib.obsolete-packages.acs-workflow.www.admin.task-panel-delete.panel_delete {
      
    delete from wf_context_task_panels
    where  workflow_key = :workflow_key
    and    transition_key = :transition_key
    and    context_key = :context_key
    and    sort_order = :sort_order

      } {} {} {} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/www/admin/task-panel-delete.xql}
dbqd.contrib.obsolete-packages.acs-workflow.www.admin.task-panel-edit-2.panel_update {dbqd.contrib.obsolete-packages.acs-workflow.www.admin.task-panel-edit-2.panel_update {
      
	update wf_context_task_panels
	set    header = :header,
	       template_url = :template_url,
               overrides_action_p = :overrides_action_p,
	       only_display_when_started_p = :only_display_when_started_p
	where  workflow_key = :workflow_key
	and    transition_key = :transition_key
	and    context_key = :context_key
	and    sort_order = :sort_order
    
      } {} {} {} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/www/admin/task-panel-edit-2.xql}
dbqd.contrib.obsolete-packages.acs-workflow.www.admin.task-panel-edit.workflow_and_transition_name {dbqd.contrib.obsolete-packages.acs-workflow.www.admin.task-panel-edit.workflow_and_transition_name {
      
    select ot.pretty_name as workflow_name,
           t.transition_name
    from   acs_object_types ot,
           wf_transitions t
    where  ot.object_type = :workflow_key
    and    t.workflow_key = ot.object_type
    and    t.transition_key = :transition_key

      } {} {} {} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/www/admin/task-panel-edit.xql}
dbqd.contrib.obsolete-packages.acs-workflow.www.admin.task-panel-edit.panel {dbqd.contrib.obsolete-packages.acs-workflow.www.admin.task-panel-edit.panel {
      
    select p.header,
           p.template_url,
           p.overrides_action_p,
           p.only_display_when_started_p
    from   wf_context_task_panels p
    where  p.workflow_key = :workflow_key
    and    p.transition_key = :transition_key
    and    p.context_key = :context_key
    and    p.sort_order = :sort_order

      } {} {} {} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/www/admin/task-panel-edit.xql}
dbqd.contrib.obsolete-packages.acs-workflow.www.admin.task-panel-move-up.prior_sort_key {dbqd.contrib.obsolete-packages.acs-workflow.www.admin.task-panel-move-up.prior_sort_key {
       
	select max(sort_key) 
	from   wf_context_task_panels
	where  workflow_key = :workflow_key
	and    transition_key = :transition_key
	and    context_key = :context_key
	and    sort_key < :sort_key
    
      } {} {} {} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/www/admin/task-panel-move-up.xql}
dbqd.contrib.obsolete-packages.acs-workflow.www.admin.task-panel-move-up.panel_move_up {dbqd.contrib.obsolete-packages.acs-workflow.www.admin.task-panel-move-up.panel_move_up {

	update wf_context_task_panels
	set    sort_key = case when sort_key = :sort_key then :prior_sort_key when sort_key = :prior_sort_key then :sort_key end
	where  workflow_key = :workflow_key
	and    transition_key = :transition_key
	and    context_key = :context_key
	and    sort_key in (:sort_key, :prior_sort_key)
    
      } {} {} {} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/www/admin/task-panel-move-up.xql}
dbqd.contrib.obsolete-packages.acs-workflow.www.admin.task-panels.workflow_exists {dbqd.contrib.obsolete-packages.acs-workflow.www.admin.task-panels.workflow_exists {
      
	select 1 from wf_workflows 
	where workflow_key = :workflow_key
      } {} {} {} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/www/admin/task-panels.xql}
dbqd.contrib.obsolete-packages.acs-workflow.www.admin.task-panels.workflow_and_transition_name {dbqd.contrib.obsolete-packages.acs-workflow.www.admin.task-panels.workflow_and_transition_name {
      
    select ot.pretty_name as workflow_name,
           t.transition_name
    from   acs_object_types ot,
           wf_transitions t
    where  ot.object_type = :workflow_key
    and    t.workflow_key = ot.object_type
    and    t.transition_key = :transition_key

      } {} {} {} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/www/admin/task-panels.xql}
dbqd.contrib.obsolete-packages.acs-workflow.www.admin.task-panels.context_slider {dbqd.contrib.obsolete-packages.acs-workflow.www.admin.task-panels.context_slider {
      
    select context_key as context_key_from_db,
           context_name as title,
           '' as url,
           0 as selected_p
    from   wf_contexts
    order by context_name

      } {} {} {} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/www/admin/task-panels.xql}
dbqd.contrib.obsolete-packages.acs-workflow.www.admin.task-panels.panels {dbqd.contrib.obsolete-packages.acs-workflow.www.admin.task-panels.panels {
      
    select tp.sort_order,
           tp.header, 
           tp.template_url,
           '' as edit_url,
           '' as delete_url,
           '' as move_up_url
    from   wf_context_task_panels tp
    where  tp.context_key = :context_key
    and    tp.workflow_key = :workflow_key
    and    tp.transition_key = :transition_key
    order by sort_order

      } {} {} {} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/www/admin/task-panels.xql}
dbqd.contrib.obsolete-packages.acs-workflow.www.admin.transition-panels-table-oracle.panels {dbqd.contrib.obsolete-packages.acs-workflow.www.admin.transition-panels-table-oracle.panels {
      
    select t.transition_key,
           t.transition_name,
           '' as transition_edit_url,
           '' as panel_add_url,
           pan.sort_order,
           0 as panel_no,
           pan.header,
           pan.template_url,
           pan.template_url as template_url_pretty,
           pan.overrides_action_p,
           pan.only_display_when_started_p,
           0 as rowspan,
           '' as panel_edit_url,
           '' as panel_delete_url
      from wf_transitions t, wf_context_task_panels pan
     where t.workflow_key = :workflow_key
       and pan.workflow_key (+) = t.workflow_key
       and pan.context_key (+) = :context_key
       and pan.transition_key (+) = t.transition_key
     order by t.sort_order, pan.sort_order

      } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/www/admin/transition-panels-table-oracle.xql}
dbqd.contrib.obsolete-packages.acs-workflow.www.admin.transition-panels-table.panels {dbqd.contrib.obsolete-packages.acs-workflow.www.admin.transition-panels-table.panels {

    select t.transition_key,
           t.transition_name,
           '' as transition_edit_url,
           '' as panel_add_url,
           pan.sort_order,
           0 as panel_no,
           pan.header,
           pan.template_url,
           pan.template_url as template_url_pretty,
           pan.overrides_action_p,
           pan.only_display_when_started_p,
           0 as rowspan,
           '' as panel_edit_url,
           '' as panel_delete_url
      from wf_transitions t left outer join wf_context_task_panels pan on
       (pan.workflow_key = t.workflow_key
       and pan.context_key = :context_key
       and pan.transition_key = t.transition_key)
     where t.workflow_key = :workflow_key
     order by t.sort_order, pan.sort_order

      } {} {} {} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/www/admin/transition-panels-table.xql}
dbqd.contrib.obsolete-packages.acs-workflow.www.admin.transitions-table-oracle.transtitions {dbqd.contrib.obsolete-packages.acs-workflow.www.admin.transitions-table-oracle.transtitions {
      
    select t.sort_order, 
           t.transition_key,
           t.transition_name,
           t.trigger_type,
           '' as trigger_type_pretty,
           t.role_key,
           r.role_name,
           '' as delete_url,
           '' as edit_url,
           '' as role_edit_url
      from wf_transitions t, wf_roles r
     where t.workflow_key = :workflow_key
       and r.workflow_key (+) = t.workflow_key
       and r.role_key (+) = t.role_key
     order by t.sort_order

      } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/www/admin/transitions-table-oracle.xql}
dbqd.contrib.obsolete-packages.acs-workflow.www.admin.transitions-table.transtitions {dbqd.contrib.obsolete-packages.acs-workflow.www.admin.transitions-table.transtitions {

    select t.sort_order, 
           t.transition_key,
           t.transition_name,
           t.trigger_type,
           '' as trigger_type_pretty,
           t.role_key,
           r.role_name,
           '' as delete_url,
           '' as edit_url,
           '' as role_edit_url
      from wf_transitions t left outer join wf_roles r on (r.workflow_key = t.workflow_key	and r.role_key = t.role_key)
     where t.workflow_key = :workflow_key
     order by t.sort_order

      } {} {} {} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/www/admin/transitions-table.xql}
dbqd.contrib.obsolete-packages.acs-workflow.www.admin.unassigned-tasks-oracle.unassigned_tasks {dbqd.contrib.obsolete-packages.acs-workflow.www.admin.unassigned-tasks-oracle.unassigned_tasks {
      
    select ta.task_id,
           ta.case_id,
           ta.workflow_key,
           ta.transition_key,
           tr.transition_name,
           ta.enabled_date,
           to_char(ta.enabled_date, :date_format) as enabled_date_pretty,
           ta.state,
           ta.deadline,
           to_char(ta.deadline, :date_format) as deadline_pretty,
           ta.estimated_minutes,
           c.object_id,
           acs_object.name(c.object_id) as object_name,
           o.object_type
    from   wf_tasks ta, wf_transitions tr, wf_cases c, acs_objects o
    where  ta.workflow_key = :workflow_key
    and    tr.workflow_key = ta.workflow_key
    and    tr.transition_key = ta.transition_key
    and    c.case_id = ta.case_id
    and    o.object_id = c.object_id
    and    ta.state = 'enabled'
    and    not exists (select 1 from wf_task_assignments tasgn where tasgn.task_id = ta.task_id)

      } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/www/admin/unassigned-tasks-oracle.xql}
dbqd.contrib.obsolete-packages.acs-workflow.www.admin.unassigned-tasks.unassigned_tasks {dbqd.contrib.obsolete-packages.acs-workflow.www.admin.unassigned-tasks.unassigned_tasks {
      
    select ta.task_id,
           ta.case_id,
           ta.workflow_key,
           ta.transition_key,             
           tr.transition_name,
           ta.enabled_date,
           to_char(ta.enabled_date, :date_format) as enabled_date_pretty,
           ta.state,
           ta.deadline,
           to_char(ta.deadline, :date_format) as deadline_pretty,
           ta.estimated_minutes,
           c.object_id,
           acs_object__name(c.object_id) as object_name,
           o.object_type
    from   wf_tasks ta, wf_transitions tr, wf_cases c, acs_objects o
    where  ta.workflow_key = :workflow_key
    and    tr.workflow_key = ta.workflow_key
    and    tr.transition_key = ta.transition_key
    and    c.case_id = ta.case_id
    and    o.object_id = c.object_id
    and    ta.state = 'enabled'
    and    not exists (select 1 from wf_task_assignments tasgn where tasgn.task_id = ta.task_id)

      } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/www/admin/unassigned-tasks-postgresql.xql}
dbqd.contrib.obsolete-packages.acs-workflow.www.admin.unassigned-tasks.workflow_info {dbqd.contrib.obsolete-packages.acs-workflow.www.admin.unassigned-tasks.workflow_info {
      
    select  ot.pretty_name
    from    wf_workflows wf, acs_object_types ot
    where   wf.workflow_key = :workflow_key
    and     ot.object_type = wf.workflow_key

      } {} {} {} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/www/admin/unassigned-tasks.xql}
dbqd.contrib.obsolete-packages.acs-workflow.www.admin.wizard.create-oracle.create_workflow {dbqd.contrib.obsolete-packages.acs-workflow.www.admin.wizard.create-oracle.create_workflow {
      
    declare
        v_workflow_key varchar(40);
    begin
        v_workflow_key := workflow.create_workflow(
            workflow_key => '[db_quote $workflow_key]',
            pretty_name => '[db_quote $workflow_name]', 
            pretty_plural => '[db_quote $workflow_name]', 
     	    description => '[db_quote $workflow_description]',
  	    table_name => '[db_quote $workflow_cases_table]'
        );
    end;
    
      } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/www/admin/wizard/create-oracle.xql}
dbqd.contrib.obsolete-packages.acs-workflow.www.admin.wizard.create-oracle.define_attribute {dbqd.contrib.obsolete-packages.acs-workflow.www.admin.wizard.create-oracle.define_attribute {
      
	    declare
	        v_attribute_id acs_attributes.attribute_id%TYPE;
	    begin
	        v_attribute_id := workflow.create_attribute(
	            workflow_key => '[db_quote $workflow_key]',
	            attribute_name => '[db_quote $task($transition_key,loop_attribute_name)]',
	            datatype => 'boolean',
	            pretty_name => '[db_quote "$task($transition_key,loop_question)"]',
      	            default_value => '[ad_decode $task($transition_key,loop_answer) "t" "f" "t"]'
	        );
	    
	    end;
      } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/www/admin/wizard/create-oracle.xql}
dbqd.contrib.obsolete-packages.acs-workflow.www.admin.wizard.create.create_workflow {dbqd.contrib.obsolete-packages.acs-workflow.www.admin.wizard.create.create_workflow {
        select workflow__create_workflow(
            '[db_quote $workflow_key]',
            '[db_quote $workflow_name]', 
            '[db_quote $workflow_name]', 
     	    '[db_quote $workflow_description]',
  	    '[db_quote $workflow_cases_table]',
	    'case_id'
        );
    
      } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/www/admin/wizard/create-postgresql.xql}
dbqd.contrib.obsolete-packages.acs-workflow.www.admin.wizard.create.define_attribute {dbqd.contrib.obsolete-packages.acs-workflow.www.admin.wizard.create.define_attribute {

	select workflow__create_attribute(
	            '[db_quote $workflow_key]',
	            '[db_quote $task($transition_key,loop_attribute_name)]',
	            'boolean',
	            '[db_quote "$task($transition_key,loop_question)"]',
		    null,
		    null,
		    null,
      	            '[ad_decode $task($transition_key,loop_answer) "t" "f" "t"]',
		    1,
		    1,
		    null,
		    'generic'
	        );
      } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/www/admin/wizard/create-postgresql.xql}
dbqd.contrib.obsolete-packages.acs-workflow.www.admin.wizard.create.constraints {dbqd.contrib.obsolete-packages.acs-workflow.www.admin.wizard.create.constraints {

        select tgconstrname::text from pg_trigger

      } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/www/admin/wizard/create-postgresql.xql}
dbqd.contrib.obsolete-packages.acs-workflow.www.admin.wizard.create.object_pretty_names {dbqd.contrib.obsolete-packages.acs-workflow.www.admin.wizard.create.object_pretty_names {
      select pretty_name from acs_object_types
      } {} {} {} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/www/admin/wizard/create.xql}
dbqd.contrib.obsolete-packages.acs-workflow.www.admin.wizard.create.object_types {dbqd.contrib.obsolete-packages.acs-workflow.www.admin.wizard.create.object_types {
      select object_type from acs_object_types
      } {} {} {} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/www/admin/wizard/create.xql}
dbqd.contrib.obsolete-packages.acs-workflow.www.admin.wizard.create.constraints {dbqd.contrib.obsolete-packages.acs-workflow.www.admin.wizard.create.constraints {

        select tgconstrname::text from pg_trigger

      } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/www/admin/wizard/create-postgresql.xql}
dbqd.contrib.obsolete-packages.acs-workflow.www.admin.wizard.create.create_cases_table {dbqd.contrib.obsolete-packages.acs-workflow.www.admin.wizard.create.create_cases_table {
      
create table $workflow_cases_table (
  case_id             integer primary key
                      constraint $workflow_cases_constraint
                      references wf_cases on delete cascade
)
      } {} {} {} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/www/admin/wizard/create.xql}
dbqd.contrib.obsolete-packages.acs-workflow.www.admin.wizard.create.drop_cases_table {dbqd.contrib.obsolete-packages.acs-workflow.www.admin.wizard.create.drop_cases_table {
      drop table $workflow_cases_table
      } {} {} {} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/www/admin/wizard/create.xql}
dbqd.contrib.obsolete-packages.acs-workflow.www.admin.workflow-add-2-oracle.create_workflow {dbqd.contrib.obsolete-packages.acs-workflow.www.admin.workflow-add-2-oracle.create_workflow {
      
    declare
        v_workflow_key varchar(40);
    begin
        v_workflow_key := workflow.create_workflow(
            workflow_key => :workflow_key,
            pretty_name => :workflow_name, 
            pretty_plural => :workflow_name, 
     	    description => :description,
  	    table_name => :workflow_cases_table
        );
    end;
    
      } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/www/admin/workflow-add-2-oracle.xql}
dbqd.contrib.obsolete-packages.acs-workflow.www.admin.workflow-add-2.create_workflow {dbqd.contrib.obsolete-packages.acs-workflow.www.admin.workflow-add-2.create_workflow {

	select workflow__create_workflow(
            :workflow_key,
            :workflow_name, 
            :workflow_name, 
     	    :description,
  	    :workflow_cases_table,
	    'case_id'
        );

      } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/www/admin/workflow-add-2-postgresql.xql}
dbqd.contrib.obsolete-packages.acs-workflow.www.admin.workflow-add-2.constraints {dbqd.contrib.obsolete-packages.acs-workflow.www.admin.workflow-add-2.constraints {

        select tgconstrname::text from pg_trigger

      } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/www/admin/workflow-add-2-postgresql.xql}
dbqd.contrib.obsolete-packages.acs-workflow.www.admin.workflow-add-2.num_object_types {dbqd.contrib.obsolete-packages.acs-workflow.www.admin.workflow-add-2.num_object_types {
       
	    select case when count(*) = 0 then 0 else 1 end from acs_object_types where pretty_name = :workflow_name 
	
      } {} {} {} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/www/admin/workflow-add-2.xql}
dbqd.contrib.obsolete-packages.acs-workflow.www.admin.workflow-add-2.object_types {dbqd.contrib.obsolete-packages.acs-workflow.www.admin.workflow-add-2.object_types {
      select object_type from acs_object_types
      } {} {} {} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/www/admin/workflow-add-2.xql}
dbqd.contrib.obsolete-packages.acs-workflow.www.admin.workflow-add-2.constraints {dbqd.contrib.obsolete-packages.acs-workflow.www.admin.workflow-add-2.constraints {

        select tgconstrname::text from pg_trigger

      } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/www/admin/workflow-add-2-postgresql.xql}
dbqd.contrib.obsolete-packages.acs-workflow.www.admin.workflow-add-2.create_cases_table {dbqd.contrib.obsolete-packages.acs-workflow.www.admin.workflow-add-2.create_cases_table {
      
    create table $workflow_cases_table (
    case_id             integer primary key
                        constraint $workflow_cases_constraint
                        references wf_cases
    )
      } {} {} {} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/www/admin/workflow-add-2.xql}
dbqd.contrib.obsolete-packages.acs-workflow.www.admin.workflow-add-2.start_place {dbqd.contrib.obsolete-packages.acs-workflow.www.admin.workflow-add-2.start_place {
      
        insert into wf_places (place_key, workflow_key, place_name, sort_order)
        values ('start', :workflow_key, 'Start place', 1)
    
      } {} {} {} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/www/admin/workflow-add-2.xql}
dbqd.contrib.obsolete-packages.acs-workflow.www.admin.workflow-add-2.end_place {dbqd.contrib.obsolete-packages.acs-workflow.www.admin.workflow-add-2.end_place {
      
        insert into wf_places (place_key, workflow_key, place_name, sort_order)
        values ('end', :workflow_key, 'End place', 999)
    
      } {} {} {} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/www/admin/workflow-add-2.xql}
dbqd.contrib.obsolete-packages.acs-workflow.www.admin.workflow-add-2.drop_cases_table {dbqd.contrib.obsolete-packages.acs-workflow.www.admin.workflow-add-2.drop_cases_table {
      drop table $workflow_cases_table
      } {} {} {} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/www/admin/workflow-add-2.xql}
dbqd.contrib.obsolete-packages.acs-workflow.www.admin.workflow-cases-delete-oracle.delete_cases {dbqd.contrib.obsolete-packages.acs-workflow.www.admin.workflow-cases-delete-oracle.delete_cases {
      
    begin 
        workflow.delete_cases(workflow_key => :workflow_key);
    end;

      } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/www/admin/workflow-cases-delete-oracle.xql}
dbqd.contrib.obsolete-packages.acs-workflow.www.admin.workflow-cases-delete.delete_cases {dbqd.contrib.obsolete-packages.acs-workflow.www.admin.workflow-cases-delete.delete_cases {

	select workflow__delete_cases(:workflow_key);

      } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/www/admin/workflow-cases-delete-postgresql.xql}
dbqd.contrib.obsolete-packages.acs-workflow.www.admin.workflow-cases-delete.workflow_exists {dbqd.contrib.obsolete-packages.acs-workflow.www.admin.workflow-cases-delete.workflow_exists {
      
	select 1 from wf_workflows 
	where workflow_key = :workflow_key
      } {} {} {} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/www/admin/workflow-cases-delete.xql}
dbqd.contrib.obsolete-packages.acs-workflow.www.admin.workflow-copy-2-oracle.package_id {dbqd.contrib.obsolete-packages.acs-workflow.www.admin.workflow-copy-2-oracle.package_id {
      select package_id from apm_packages where package_key='acs-workflow' and rownum=1
      } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/www/admin/workflow-copy-2-oracle.xql}
dbqd.contrib.obsolete-packages.acs-workflow.www.admin.workflow-copy-2.package_id {dbqd.contrib.obsolete-packages.acs-workflow.www.admin.workflow-copy-2.package_id {
	select package_id from apm_packages where package_key='acs-workflow' limit 1
      } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/www/admin/workflow-copy-2-postgresql.xql}
dbqd.contrib.obsolete-packages.acs-workflow.www.admin.workflow-copy-2.object_types {dbqd.contrib.obsolete-packages.acs-workflow.www.admin.workflow-copy-2.object_types {
      select object_type from acs_object_types
      } {} {} {} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/www/admin/workflow-copy-2.xql}
dbqd.contrib.obsolete-packages.acs-workflow.www.admin.workflow-copy-2.pretty_names {dbqd.contrib.obsolete-packages.acs-workflow.www.admin.workflow-copy-2.pretty_names {
      select pretty_name from acs_object_types
      } {} {} {} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/www/admin/workflow-copy-2.xql}
dbqd.contrib.obsolete-packages.acs-workflow.www.admin.workflow-copy-2.pretty_names {dbqd.contrib.obsolete-packages.acs-workflow.www.admin.workflow-copy-2.pretty_names {
      select pretty_name from acs_object_types
      } {} {} {} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/www/admin/workflow-copy-2.xql}
dbqd.contrib.obsolete-packages.acs-workflow.www.admin.workflow-copy-2.workflow_info {dbqd.contrib.obsolete-packages.acs-workflow.www.admin.workflow-copy-2.workflow_info {
      
    select ot.pretty_name as workflow_name
    from   acs_object_types ot
    where  ot.object_type = :workflow_key

      } {} {} {} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/www/admin/workflow-copy-2.xql}
dbqd.contrib.obsolete-packages.acs-workflow.www.admin.workflow-copy.workflow_info {dbqd.contrib.obsolete-packages.acs-workflow.www.admin.workflow-copy.workflow_info {
      
    select ot.pretty_name as workflow_name
    from   acs_object_types ot
    where  ot.object_type = :workflow_key

      } {} {} {} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/www/admin/workflow-copy.xql}
dbqd.contrib.obsolete-packages.acs-workflow.www.admin.workflow-copy.pretty_names {dbqd.contrib.obsolete-packages.acs-workflow.www.admin.workflow-copy.pretty_names {
      
    select pretty_name, pretty_plural
    from acs_object_types
    where object_type = :workflow_key

      } {} {} {} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/www/admin/workflow-copy.xql}
dbqd.contrib.obsolete-packages.acs-workflow.www.admin.workflow-copy.object_types {dbqd.contrib.obsolete-packages.acs-workflow.www.admin.workflow-copy.object_types {
      select object_type from acs_object_types
      } {} {} {} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/www/admin/workflow-copy.xql}
dbqd.contrib.obsolete-packages.acs-workflow.www.admin.workflow-copy.pretty_name {dbqd.contrib.obsolete-packages.acs-workflow.www.admin.workflow-copy.pretty_name {
      select pretty_name from acs_object_types
      } {} {} {} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/www/admin/workflow-copy.xql}
dbqd.contrib.obsolete-packages.acs-workflow.www.admin.workflow-copy.pretty_plural_names {dbqd.contrib.obsolete-packages.acs-workflow.www.admin.workflow-copy.pretty_plural_names {
      select pretty_plural from acs_object_types
      } {} {} {} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/www/admin/workflow-copy.xql}
dbqd.contrib.obsolete-packages.acs-workflow.www.admin.workflow-delete-oracle.delete_cases {dbqd.contrib.obsolete-packages.acs-workflow.www.admin.workflow-delete-oracle.delete_cases {
      
	begin 
	    workflow.delete_cases(workflow_key => :workflow_key);
	end;
    
      } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/www/admin/workflow-delete-oracle.xql}
dbqd.contrib.obsolete-packages.acs-workflow.www.admin.workflow-delete-oracle.delete_workflow {dbqd.contrib.obsolete-packages.acs-workflow.www.admin.workflow-delete-oracle.delete_workflow {
      
    begin
        workflow.drop_workflow(workflow_key => :workflow_key);
    end;

      } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/www/admin/workflow-delete-oracle.xql}
dbqd.contrib.obsolete-packages.acs-workflow.www.admin.workflow-delete.delete_cases {dbqd.contrib.obsolete-packages.acs-workflow.www.admin.workflow-delete.delete_cases {

	select workflow__delete_cases(:workflow_key);

      } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/www/admin/workflow-delete-postgresql.xql}
dbqd.contrib.obsolete-packages.acs-workflow.www.admin.workflow-delete.delete_workflow {dbqd.contrib.obsolete-packages.acs-workflow.www.admin.workflow-delete.delete_workflow {

	select workflow__drop_workflow(:workflow_key);

      } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/www/admin/workflow-delete-postgresql.xql}
dbqd.contrib.obsolete-packages.acs-workflow.www.admin.workflow-delete.workflow_exists {dbqd.contrib.obsolete-packages.acs-workflow.www.admin.workflow-delete.workflow_exists {
      
	select 1 from wf_workflows 
	where workflow_key = :workflow_key
      } {} {} {} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/www/admin/workflow-delete.xql}
dbqd.contrib.obsolete-packages.acs-workflow.www.admin.workflow-delete.cases_table {dbqd.contrib.obsolete-packages.acs-workflow.www.admin.workflow-delete.cases_table {
       select table_name from acs_object_types where object_type = :workflow_key 
      } {} {} {} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/www/admin/workflow-delete.xql}
dbqd.contrib.obsolete-packages.acs-workflow.www.admin.workflow-delete.drop_cases_table {dbqd.contrib.obsolete-packages.acs-workflow.www.admin.workflow-delete.drop_cases_table {
      
	drop table $cases_table
    
      } {} {} {} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/www/admin/workflow-delete.xql}
dbqd.contrib.obsolete-packages.acs-workflow.www.admin.workflow-oracle.workflow {dbqd.contrib.obsolete-packages.acs-workflow.www.admin.workflow-oracle.workflow {
      
    select w.workflow_key, 
           t.pretty_name,
           w.description,
           count(c.case_id) as num_cases,
           0 as num_unassigned_tasks
    from   wf_workflows w, 
           acs_object_types t, 
           wf_cases c
    where  w.workflow_key = :workflow_key 
    and    w.workflow_key = t.object_type
    and    c.workflow_key (+) = w.workflow_key
    group  by w.workflow_key, t.pretty_name, w.description

      } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/www/admin/workflow-oracle.xql}
dbqd.contrib.obsolete-packages.acs-workflow.www.admin.workflow-roles.workflow_exists {dbqd.contrib.obsolete-packages.acs-workflow.www.admin.workflow-roles.workflow_exists {
      
	select count(*) from wf_workflows 
	where workflow_key = :workflow_key
      } {} {} {} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/www/admin/workflow-roles.xql}
dbqd.contrib.obsolete-packages.acs-workflow.www.admin.workflow-roles.workflow {dbqd.contrib.obsolete-packages.acs-workflow.www.admin.workflow-roles.workflow {
      
    select w.workflow_key, 
           t.pretty_name
    from   wf_workflows w, 
           acs_object_types t 
    where  w.workflow_key = :workflow_key 
    and    w.workflow_key = t.object_type

      } {} {} {} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/www/admin/workflow-roles.xql}
dbqd.contrib.obsolete-packages.acs-workflow.www.admin.workflow-summary.workflow_exists {dbqd.contrib.obsolete-packages.acs-workflow.www.admin.workflow-summary.workflow_exists {
      
	select 1 from wf_workflows 
	where workflow_key = :workflow_key
      } {} {} {} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/www/admin/workflow-summary.xql}
dbqd.contrib.obsolete-packages.acs-workflow.www.admin.workflow-summary.workflow_name {dbqd.contrib.obsolete-packages.acs-workflow.www.admin.workflow-summary.workflow_name {
      
    select pretty_name as workflow_name
    from   acs_object_types
    where  object_type = :workflow_key

      } {} {} {} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/www/admin/workflow-summary.xql}
dbqd.contrib.obsolete-packages.acs-workflow.www.admin.workflow-summary.n_total {dbqd.contrib.obsolete-packages.acs-workflow.www.admin.workflow-summary.n_total {
      
    select count(*) 
    from   wf_cases
    where  workflow_key = :workflow_key

      } {} {} {} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/www/admin/workflow-summary.xql}
dbqd.contrib.obsolete-packages.acs-workflow.www.admin.workflow-summary.num_cases {dbqd.contrib.obsolete-packages.acs-workflow.www.admin.workflow-summary.num_cases {
      
    select state, count(case_id) as num
    from   wf_cases
    where  workflow_key = :workflow_key
    group by state

      } {} {} {} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/www/admin/workflow-summary.xql}
dbqd.contrib.obsolete-packages.acs-workflow.www.admin.workflow-summary.places {dbqd.contrib.obsolete-packages.acs-workflow.www.admin.workflow-summary.places {
      
    select p.place_key, 
           p.place_name,
          (select count(*)
           from   wf_tokens t, wf_cases c
           where  t.workflow_key = p.workflow_key
           and    t.place_key    = p.place_key
           and    t.state in ('free')
           and    c.case_id = t.case_id
           and    c.state = 'active') as num_cases,
           0 as num_pixels,
           '' as cases_url
    from   wf_places p
    where  p.workflow_key = :workflow_key
    order by p.sort_order

      } {} {} {} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/www/admin/workflow-summary.xql}
dbqd.contrib.obsolete-packages.acs-workflow.www.admin.workflow-summary.transitions {dbqd.contrib.obsolete-packages.acs-workflow.www.admin.workflow-summary.transitions {
      
    select tr.transition_key, 
           tr.transition_name,
	   (select count(*) 
            from   wf_tasks ta, wf_cases c
	    where  ta.workflow_key = tr.workflow_key
	    and    ta.transition_key = tr.transition_key
	    and    ta.state in ('started')
            and    c.case_id = ta.case_id
            and    c.state = 'active') as num_cases,
           0 as num_pixels,
           '' as cases_url
    from   wf_transitions tr
    where  tr.workflow_key = :workflow_key
    order by tr.sort_order

      } {} {} {} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/www/admin/workflow-summary.xql}
dbqd.contrib.obsolete-packages.acs-workflow.www.admin.workflow.workflow_exists {dbqd.contrib.obsolete-packages.acs-workflow.www.admin.workflow.workflow_exists {
      
	select count(*) from wf_workflows 
	where workflow_key = :workflow_key
      } {} {} {} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/www/admin/workflow.xql}
dbqd.contrib.obsolete-packages.acs-workflow.www.admin.workflow.workflow {dbqd.contrib.obsolete-packages.acs-workflow.www.admin.workflow.workflow {

    select w.workflow_key, 
           t.pretty_name,
           w.description,
           count(c.case_id) as num_cases,
           0 as num_unassigned_tasks
    from   wf_workflows w left outer join wf_cases c using (workflow_key),
           acs_object_types t
    where  w.workflow_key = :workflow_key 
    and    w.workflow_key = t.object_type
    group  by w.workflow_key, t.pretty_name, w.description

      } {} {} {} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/www/admin/workflow.xql}
dbqd.contrib.obsolete-packages.acs-workflow.www.admin.workflow.num_unassigned_tasks {dbqd.contrib.obsolete-packages.acs-workflow.www.admin.workflow.num_unassigned_tasks {
      
    select count(*) 
    from   wf_tasks t,
           wf_cases c
    where  t.workflow_key = :workflow_key
    and    t.state = 'enabled'
    and    c.case_id = t.case_id
    and    c.state = 'active'
    and    not exists (select 1 from wf_task_assignments ta where ta.task_id = t.task_id)

      } {} {} {} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/www/admin/workflow.xql}
dbqd.contrib.obsolete-packages.acs-workflow.www.admin.workflow.num_active_cases {dbqd.contrib.obsolete-packages.acs-workflow.www.admin.workflow.num_active_cases {
      
    select count(*) 
    from   wf_cases c
    where  c.workflow_key = :workflow_key
    and    c.state = 'active'

      } {} {} {} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/www/admin/workflow.xql}
dbqd.contrib.obsolete-packages.acs-workflow.www.assign-add.unassigned_parties {dbqd.contrib.obsolete-packages.acs-workflow.www.assign-add.unassigned_parties {
      
    select p.party_id,
           acs_object__name(p.party_id) as name,
           p.email
    from   parties p
    where  not exists (select 1 from wf_task_assignments ta where ta.task_id = :task_id and ta.party_id = p.party_id)

      } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/www/assign-add-postgresql.xql}
dbqd.contrib.obsolete-packages.acs-workflow.www.assign-yourself-oracle.add_self_case {dbqd.contrib.obsolete-packages.acs-workflow.www.assign-yourself-oracle.add_self_case {
      
    begin
        workflow_case.add_manual_assignment (
            case_id => :case_id,
            transition_key => :transition_key,
            party_id => :user_id
        );
    end;

      } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/www/assign-yourself-oracle.xql}
dbqd.contrib.obsolete-packages.acs-workflow.www.assign-yourself-oracle.add_self_task {dbqd.contrib.obsolete-packages.acs-workflow.www.assign-yourself-oracle.add_self_task {
      
    begin
        workflow_case.add_task_assignment (
            task_id => :task_id,
            party_id => :user_id
        );
    end;

      } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/www/assign-yourself-oracle.xql}
dbqd.contrib.obsolete-packages.acs-workflow.www.assign-yourself.add_self_case {dbqd.contrib.obsolete-packages.acs-workflow.www.assign-yourself.add_self_case {

    select workflow_case__add_manual_assignment (
            :case_id,
            :transition_key,
            :user_id
        );

      } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/www/assign-yourself-postgresql.xql}
dbqd.contrib.obsolete-packages.acs-workflow.www.assign-yourself.add_self_task {dbqd.contrib.obsolete-packages.acs-workflow.www.assign-yourself.add_self_task {

      select workflow_case__add_task_assignment (
            :task_id,
            :user_id,
			'f'
        );

      } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/www/assign-yourself-postgresql.xql}
dbqd.contrib.obsolete-packages.acs-workflow.www.assign-yourself.task_info {dbqd.contrib.obsolete-packages.acs-workflow.www.assign-yourself.task_info {
      
    select t.case_id, 
           t.workflow_key, 
           t.transition_key, 
           c.object_id, 
           wcti.access_privilege
    from   wf_tasks t, wf_cases c, wf_context_transition_info wcti
    where  wcti.context_key = c.context_key
    and    wcti.workflow_key = t.workflow_key
    and    wcti.transition_key = t.transition_key
    and    c.case_id = t.case_id
    and    t.task_id = :task_id

      } {} {} {} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/www/assign-yourself.xql}
dbqd.contrib.obsolete-packages.acs-workflow.www.assign-yourself.move_assignees {dbqd.contrib.obsolete-packages.acs-workflow.www.assign-yourself.move_assignees {
      
    insert into wf_case_assignments
    (case_id, transition_key, workflow_key, party_id)
    select :case_id, :transition_key, :workflow_key, ta.party_id
    from   wf_task_assignments ta
    where  task_id = :task_id
    and not exists (select 1 from wf_case_assignments ca
                    where ca.party_id = ta.party_id
                    and   ca.workflow_key = :workflow_key
                    and   ca.case_id = :case_id
                    and   ca.transition_key = :transition_key)

      } {} {} {} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/www/assign-yourself.xql}
dbqd.contrib.obsolete-packages.acs-workflow.www.assign-yourself.delete_self_case {dbqd.contrib.obsolete-packages.acs-workflow.www.assign-yourself.delete_self_case {
      
    delete from wf_case_assignments
    where  workflow_key   = :workflow_key
    and    case_id        = :case_id
    and    transition_key = :transition_key
    and    party_id       = :user_id

      } {} {} {} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/www/assign-yourself.xql}
dbqd.contrib.obsolete-packages.acs-workflow.www.assign-yourself.delete_self_task {dbqd.contrib.obsolete-packages.acs-workflow.www.assign-yourself.delete_self_task {
      
    delete from wf_task_assignments
    where  party_id = :user_id
    and    task_id  = :task_id

      } {} {} {} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/www/assign-yourself.xql}
dbqd.contrib.obsolete-packages.acs-workflow.www.assignee-add-2-oracle.add_assignee_task {dbqd.contrib.obsolete-packages.acs-workflow.www.assignee-add-2-oracle.add_assignee_task {
      
            begin
                workflow_case.add_task_assignment (
                    task_id => :task_id,
                    party_id => :party_id
                );
            end;
        
      } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/www/assignee-add-2-oracle.xql}
dbqd.contrib.obsolete-packages.acs-workflow.www.assignee-add-2-oracle.add_assignee_case {dbqd.contrib.obsolete-packages.acs-workflow.www.assignee-add-2-oracle.add_assignee_case {
      
            begin
                workflow_case.add_manual_assignment (
                    case_id => :case_id,
                    transition_key => :transition_key,
                    party_id => :party_id
                );
            end;
        
      } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/www/assignee-add-2-oracle.xql}
dbqd.contrib.obsolete-packages.acs-workflow.www.assignee-add-2.add_assignee_task {dbqd.contrib.obsolete-packages.acs-workflow.www.assignee-add-2.add_assignee_task {

        select workflow_case__add_task_assignment (
                    :task_id,
                    :party_id,
					'f'
                );
        
      } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/www/assignee-add-2-postgresql.xql}
dbqd.contrib.obsolete-packages.acs-workflow.www.assignee-add-2.add_assignee_case {dbqd.contrib.obsolete-packages.acs-workflow.www.assignee-add-2.add_assignee_case {

            select workflow_case__add_manual_assignment (
                    :case_id,
                    :transition_key,
                    :party_id
                );
        
      } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/www/assignee-add-2-postgresql.xql}
dbqd.contrib.obsolete-packages.acs-workflow.www.assignee-add-2.task_info {dbqd.contrib.obsolete-packages.acs-workflow.www.assignee-add-2.task_info {
      
    select t.case_id, 
           t.workflow_key, 
           t.transition_key, 
           c.object_id, 
           wcti.access_privilege
    from   wf_tasks t, wf_cases c, wf_context_transition_info wcti
    where  wcti.context_key = c.context_key
    and    wcti.workflow_key = t.workflow_key
    and    wcti.transition_key = t.transition_key
    and    c.case_id = t.case_id
    and    t.task_id = :task_id

      } {} {} {} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/www/assignee-add-2.xql}
dbqd.contrib.obsolete-packages.acs-workflow.www.assignee-add-2.this_user_is_assigned_p {dbqd.contrib.obsolete-packages.acs-workflow.www.assignee-add-2.this_user_is_assigned_p {
       
    select count(*) from wf_user_tasks  where task_id = :task_id and user_id = :user_id

      } {} {} {} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/www/assignee-add-2.xql}
dbqd.contrib.obsolete-packages.acs-workflow.www.assignee-add-2.already_assigned_task {dbqd.contrib.obsolete-packages.acs-workflow.www.assignee-add-2.already_assigned_task {
      
    select count(*) from wf_task_assignments 
    where task_id = :task_id and party_id = :party_id
      } {} {} {} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/www/assignee-add-2.xql}
dbqd.contrib.obsolete-packages.acs-workflow.www.assignee-add-2.already_assigned_case {dbqd.contrib.obsolete-packages.acs-workflow.www.assignee-add-2.already_assigned_case {
      
    select count(*) from wf_case_assignments
    where  workflow_key   = :workflow_key
    and    case_id        = :case_id
    and    transition_key = :transition_key
    and    party_id       = :party_id
      } {} {} {} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/www/assignee-add-2.xql}
dbqd.contrib.obsolete-packages.acs-workflow.www.assignee-add-oracle.unassigned_parties {dbqd.contrib.obsolete-packages.acs-workflow.www.assignee-add-oracle.unassigned_parties {
      
    select p.party_id,
           acs_object.name(p.party_id) as name,
           p.email
      from parties p
     where not exists (select 1 from wf_task_assignments ta where ta.task_id = :task_id and ta.party_id = p.party_id)
       and 0 < (select count(*)
                from   users u, party_approved_member_map m
                where  m.party_id = p.party_id
                and    u.user_id = m.member_id)


      } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/www/assignee-add-oracle.xql}
dbqd.contrib.obsolete-packages.acs-workflow.www.assignee-add.unassigned_parties {dbqd.contrib.obsolete-packages.acs-workflow.www.assignee-add.unassigned_parties {
      
    select p.party_id,
           acs_object__name(p.party_id) as name,
           p.email
      from parties p
     where not exists (select 1 from wf_task_assignments ta where ta.task_id = :task_id and ta.party_id = p.party_id)
       and 0 < (select count(*)
                from   users u, party_approved_member_map m
                where  m.party_id = p.party_id
                and    u.user_id = m.member_id)


      } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/www/assignee-add-postgresql.xql}
dbqd.contrib.obsolete-packages.acs-workflow.www.assignee-remove-2-oracle.remove_assignee_task {dbqd.contrib.obsolete-packages.acs-workflow.www.assignee-remove-2-oracle.remove_assignee_task {
      
        begin
            workflow_case.remove_task_assignment (
                task_id => :task_id,
                party_id => :party_id
            );

            workflow_case.remove_manual_assignment (
                case_id => :case_id,
                transition_key => :transition_key,
                party_id => :party_id
            );
        end;
    
      } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/www/assignee-remove-2-oracle.xql}
dbqd.contrib.obsolete-packages.acs-workflow.www.assignee-remove-2.remove_assignee_task {dbqd.contrib.obsolete-packages.acs-workflow.www.assignee-remove-2.remove_assignee_task {

        begin
            PERFORM workflow_case__remove_task_assignment (
                :task_id,
                :party_id
            );

            PERFORM workflow_case__remove_manual_assignment (
                :case_id,
                :transition_key,
                :party_id
            );

           return null;
        end;
    
      } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/www/assignee-remove-2-postgresql.xql}
dbqd.contrib.obsolete-packages.acs-workflow.www.assignee-remove-2.task_info {dbqd.contrib.obsolete-packages.acs-workflow.www.assignee-remove-2.task_info {
      
    select t.case_id, 
           t.transition_key, 
           c.object_id, 
           wcti.access_privilege
    from   wf_tasks t, wf_cases c, wf_context_transition_info wcti
    where  wcti.context_key = c.context_key
    and    wcti.workflow_key = t.workflow_key
    and    wcti.transition_key = t.transition_key
    and    c.case_id = t.case_id
    and    t.task_id = :task_id

      } {} {} {} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/www/assignee-remove-2.xql}
dbqd.contrib.obsolete-packages.acs-workflow.www.assignee-remove-2.this_user_is_assigned_p {dbqd.contrib.obsolete-packages.acs-workflow.www.assignee-remove-2.this_user_is_assigned_p {
       
    select count(*) from wf_user_tasks  where task_id = :task_id and user_id = :user_id

      } {} {} {} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/www/assignee-remove-2.xql}
dbqd.contrib.obsolete-packages.acs-workflow.www.case-assignment-set-oracle.case_info {dbqd.contrib.obsolete-packages.acs-workflow.www.case-assignment-set-oracle.case_info {
      
    select case_id, 
           acs_object.name(object_id) as object_name, 
           state,
           workflow_key
    from   wf_cases
    where  case_id = :case_id

      } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/www/case-assignment-set-oracle.xql}
dbqd.contrib.obsolete-packages.acs-workflow.www.case-assignment-set-oracle.party_with_at_least_one_member {dbqd.contrib.obsolete-packages.acs-workflow.www.case-assignment-set-oracle.party_with_at_least_one_member {
      
    select p.party_id,
           acs_object.name(p.party_id) as name, 
           case when p.email = '' then '' else '('||p.email||')' end as email
    from   parties p
    where  0 < (select count(*)
                from   users u, party_approved_member_map m
                where  m.party_id = p.party_id
                and    u.user_id = m.member_id)

      } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/www/case-assignment-set-oracle.xql}
dbqd.contrib.obsolete-packages.acs-workflow.www.case-assignment-set.case_info {dbqd.contrib.obsolete-packages.acs-workflow.www.case-assignment-set.case_info {
      
    select case_id, 
           acs_object__name(object_id) as object_name, 
           state,
           workflow_key
    from   wf_cases
    where  case_id = :case_id

      } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/www/case-assignment-set-postgresql.xql}
dbqd.contrib.obsolete-packages.acs-workflow.www.case-assignment-set.party_with_at_least_one_member {dbqd.contrib.obsolete-packages.acs-workflow.www.case-assignment-set.party_with_at_least_one_member {
      
    select p.party_id,
           acs_object__name(p.party_id) as name, 
           case when p.email = '' then '' else '('||p.email||')' end as email
    from   parties p
    where  0 < (select count(*)
                from   users u, party_approved_member_map m
                where  m.party_id = p.party_id
                and    u.user_id = m.member_id)

      } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/www/case-assignment-set-postgresql.xql}
dbqd.contrib.obsolete-packages.acs-workflow.www.case-assignment-set.role_name_select {dbqd.contrib.obsolete-packages.acs-workflow.www.case-assignment-set.role_name_select {
      
select role_name
from wf_roles
where role_key = :role_key
and workflow_key = :workflow_key
      } {} {} {} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/www/case-assignment-set.xql}
dbqd.contrib.obsolete-packages.acs-workflow.www.case-assignment-set.assignment_select {dbqd.contrib.obsolete-packages.acs-workflow.www.case-assignment-set.assignment_select {
      
    select party_id
      from wf_case_assignments
     where case_id = :case_id
       and role_key = :role_key
       and workflow_key = :workflow_key

      } {} {} {} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/www/case-assignment-set.xql}
dbqd.contrib.obsolete-packages.acs-workflow.www.case-assignments-oracle.case_info {dbqd.contrib.obsolete-packages.acs-workflow.www.case-assignments-oracle.case_info {
      
    select case_id, 
           acs_object.name(object_id) as object_name, 
           state,
           workflow_key
    from   wf_cases
    where  case_id = :case_id

      } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/www/case-assignments-oracle.xql}
dbqd.contrib.obsolete-packages.acs-workflow.www.case-assignments.case_info {dbqd.contrib.obsolete-packages.acs-workflow.www.case-assignments.case_info {
      
    select case_id, 
           acs_object__name(object_id) as object_name, 
           state,
           workflow_key
    from   wf_cases
    where  case_id = :case_id

      } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/www/case-assignments-postgresql.xql}
dbqd.contrib.obsolete-packages.acs-workflow.www.case-assignments-table-oracle.manual_assignments {dbqd.contrib.obsolete-packages.acs-workflow.www.case-assignments-table-oracle.manual_assignments {
      
    select p.party_id,
           acs_object.name(p.party_id) as name,
           p.email,
           '' as url,
           '' as remove_url,
           '' as edit_url,
           o.object_type,
           r.role_key,
           r.role_name
      from wf_cases c, wf_roles r, wf_case_assignments ca, parties p, acs_objects o
     where c.case_id = :case_id
       and r.workflow_key = c.workflow_key
       and ca.case_id (+) = :case_id
       and ca.role_key (+) = r.role_key 
       and p.party_id (+) = ca.party_id 
       and o.object_id (+) = p.party_id 
     order by r.sort_order, r.role_key, name

      } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/www/case-assignments-table-oracle.xql}
dbqd.contrib.obsolete-packages.acs-workflow.www.case-assignments-table.manual_assignments {dbqd.contrib.obsolete-packages.acs-workflow.www.case-assignments-table.manual_assignments {

    select p.party_id,
           acs_object__name(p.party_id) as name,
           p.email,
           '' as url,
           '' as remove_url,
           '' as edit_url,
           o.object_type,
           r.role_key,
           r.role_name
      from wf_cases c, 
	   ((wf_roles r LEFT OUTER JOIN wf_case_assignments ca
	     ON (r.role_key = ca.role_key and ca.case_id = :case_id)) LEFT OUTER JOIN parties p 
	       ON (ca.party_id = p.party_id)) LEFT OUTER JOIN acs_objects o
	         ON (p.party_id =  o.object_id)
     where c.case_id = :case_id
       and r.workflow_key = c.workflow_key
     order by r.sort_order, r.role_key, name

      } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/www/case-assignments-table-postgresql.xql}
dbqd.contrib.obsolete-packages.acs-workflow.www.case-attributes-table-oracle.attributes {dbqd.contrib.obsolete-packages.acs-workflow.www.case-attributes-table-oracle.attributes {
      
    select a.attribute_id,
           a.sort_order,
           a.attribute_name,
           a.pretty_name,
           a.datatype,
           '' as edit_url,
           workflow_case.get_attribute_value(:case_id, a.attribute_name) as value,
           '' as value_pretty
      from acs_attributes a, wf_cases c
     where c.case_id = :case_id
       and a.object_type = c.workflow_key
     order by a.sort_order

      } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/www/case-attributes-table-oracle.xql}
dbqd.contrib.obsolete-packages.acs-workflow.www.case-attributes-table.attributes {dbqd.contrib.obsolete-packages.acs-workflow.www.case-attributes-table.attributes {
      
    select a.attribute_id,
           a.sort_order,
           a.attribute_name,
           a.pretty_name,
           a.datatype,
           '' as edit_url,
           workflow_case__get_attribute_value (:case_id, a.attribute_name) as value,
           '' as value_pretty
      from acs_attributes a, wf_cases c
     where c.case_id = :case_id
       and a.object_type = c.workflow_key
     order by a.sort_order

      } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/www/case-attributes-table-postgresql.xql}
dbqd.contrib.obsolete-packages.acs-workflow.www.case-deadline-set-oracle.case_info {dbqd.contrib.obsolete-packages.acs-workflow.www.case-deadline-set-oracle.case_info {
      
    select case_id, 
           acs_object.name(object_id) as object_name, 
           state,
           workflow_key
    from   wf_cases
    where  case_id = :case_id

      } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/www/case-deadline-set-oracle.xql}
dbqd.contrib.obsolete-packages.acs-workflow.www.case-deadline-set-oracle.a_week_from_now {dbqd.contrib.obsolete-packages.acs-workflow.www.case-deadline-set-oracle.a_week_from_now {
      select sysdate+7 from dual
      } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/www/case-deadline-set-oracle.xql}
dbqd.contrib.obsolete-packages.acs-workflow.www.case-deadline-set.case_info {dbqd.contrib.obsolete-packages.acs-workflow.www.case-deadline-set.case_info {
      
    select case_id, 
           acs_object__name(object_id) as object_name, 
           state,
           workflow_key
    from   wf_cases
    where  case_id = :case_id

      } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/www/case-deadline-set-postgresql.xql}
dbqd.contrib.obsolete-packages.acs-workflow.www.case-deadline-set.a_week_from_now {dbqd.contrib.obsolete-packages.acs-workflow.www.case-deadline-set.a_week_from_now {
      select current_timestamp+7 
      } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/www/case-deadline-set-postgresql.xql}
dbqd.contrib.obsolete-packages.acs-workflow.www.case-deadline-set.transition_name_select {dbqd.contrib.obsolete-packages.acs-workflow.www.case-deadline-set.transition_name_select {
      
select transition_name
from wf_transitions
where transition_key = :transition_key
      and workflow_key = :workflow_key
      } {} {} {} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/www/case-deadline-set.xql}
dbqd.contrib.obsolete-packages.acs-workflow.www.case-deadline-set.deadline_select {dbqd.contrib.obsolete-packages.acs-workflow.www.case-deadline-set.deadline_select {
      
    select deadline
      from wf_case_deadlines
     where case_id = :case_id
       and transition_key = :transition_key
       and workflow_key = :workflow_key

      } {} {} {} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/www/case-deadline-set.xql}
dbqd.contrib.obsolete-packages.acs-workflow.www.case-deadlines-oracle.case_info {dbqd.contrib.obsolete-packages.acs-workflow.www.case-deadlines-oracle.case_info {
      
    select case_id, 
           acs_object.name(object_id) as object_name, 
           state,
           workflow_key
    from   wf_cases
    where  case_id = :case_id

      } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/www/case-deadlines-oracle.xql}
dbqd.contrib.obsolete-packages.acs-workflow.www.case-deadlines.case_info {dbqd.contrib.obsolete-packages.acs-workflow.www.case-deadlines.case_info {
      
    select case_id, 
           acs_object__name(object_id) as object_name, 
           state,
           workflow_key
    from   wf_cases
    where  case_id = :case_id

      } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/www/case-deadlines-postgresql.xql}
dbqd.contrib.obsolete-packages.acs-workflow.www.case-deadlines-table-oracle.deadlines {dbqd.contrib.obsolete-packages.acs-workflow.www.case-deadlines-table-oracle.deadlines {
      
    select tr.transition_name, 
           tr.transition_key, 
           to_char(cd.deadline, :date_format) as deadline_pretty,
           '' as edit_url,
           '' as remove_url
    from   (select c.case_id, tr.sort_order, tr.transition_name, tr.transition_key, tr.workflow_key from wf_cases c, wf_transitions tr
            where c.case_id = :case_id and c.workflow_key = tr.workflow_key) tr,
            wf_case_deadlines cd
    where  tr.case_id = cd.case_id(+)
    and    tr.transition_key = cd.transition_key(+)
    and    tr.workflow_key = cd.workflow_key(+)
    order by tr.sort_order

      } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/www/case-deadlines-table-oracle.xql}
dbqd.contrib.obsolete-packages.acs-workflow.www.case-deadlines-table.deadlines {dbqd.contrib.obsolete-packages.acs-workflow.www.case-deadlines-table.deadlines {

    select tr.transition_name, 
           tr.transition_key, 
           to_char(cd.deadline, :date_format) as deadline_pretty,
           '' as edit_url,
           '' as remove_url
    from   (select c.case_id, 
		   tr.sort_order, 
		   tr.transition_name, 
	           tr.transition_key, 
		   tr.workflow_key 
	    from wf_cases c, wf_transitions tr
            where c.case_id = :case_id 
	    and c.workflow_key = tr.workflow_key) tr LEFT OUTER JOIN wf_case_deadlines cd 
	      ON (tr.case_id = cd.case_id and 
		  tr.transition_key = cd.transition_key	and 
		  tr.workflow_key = cd.workflow_key)
    order by tr.sort_order

      } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/www/case-deadlines-table-postgresql.xql}
dbqd.contrib.obsolete-packages.acs-workflow.www.case-oracle.case_info {dbqd.contrib.obsolete-packages.acs-workflow.www.case-oracle.case_info {
      
    select case_id, 
           acs_object.name(object_id) as object_name, 
           state,
           workflow_key
    from   wf_cases
    where  case_id = :case_id

      } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/www/case-oracle.xql}
dbqd.contrib.obsolete-packages.acs-workflow.www.case.case_info {dbqd.contrib.obsolete-packages.acs-workflow.www.case.case_info {
      
    select case_id, 
           acs_object__name(object_id) as object_name, 
           state,
           workflow_key
    from   wf_cases
    where  case_id = :case_id

      } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/www/case-postgresql.xql}
dbqd.contrib.obsolete-packages.acs-workflow.www.case-state-graph-oracle.tokens {dbqd.contrib.obsolete-packages.acs-workflow.www.case-state-graph-oracle.tokens {
      
    select tok.token_id, 
           tok.place_key,
           tok.locked_task_id,
           ta.transition_key
    from   wf_tokens tok,
           wf_tasks ta
    where  tok.case_id = :case_id
    and    ta.task_id (+) = tok.locked_task_id
    and    tok.state in ('free', 'locked')

      } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/www/case-state-graph-oracle.xql}
dbqd.contrib.obsolete-packages.acs-workflow.www.case-state-graph.workflow_key_from_case_id {dbqd.contrib.obsolete-packages.acs-workflow.www.case-state-graph.workflow_key_from_case_id {
       select workflow_key from wf_cases where case_id = :case_id 
      } {} {} {} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/www/case-state-graph.xql}
dbqd.contrib.obsolete-packages.acs-workflow.www.case-state-graph.tokens {dbqd.contrib.obsolete-packages.acs-workflow.www.case-state-graph.tokens {

    select tok.token_id, 
           tok.place_key,
           tok.locked_task_id,
           ta.transition_key
    from   wf_tokens tok left outer join wf_tasks ta on (ta.task_id = tok.locked_task_id)
    where  tok.case_id = :case_id
    and    tok.state in ('free', 'locked')

      } {} {} {} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/www/case-state-graph.xql}
dbqd.contrib.obsolete-packages.acs-workflow.www.case.current_tasks {dbqd.contrib.obsolete-packages.acs-workflow.www.case.current_tasks {
      
    select t.task_id, 
           t.transition_key, 
           t.state, 
           t.case_id,
           tr.transition_name,
           to_char(t.enabled_date, :date_format) as enabled_date_pretty
    from   wf_tasks t, wf_transitions tr
    where  t.case_id = :case_id
    and    t.state in ('enabled', 'started')
    and    tr.workflow_key = t.workflow_key
    and    tr.transition_key = t.transition_key
    order by t.enabled_date desc

      } {} {} {} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/www/case.xql}
dbqd.contrib.obsolete-packages.acs-workflow.www.case.old_tasks {dbqd.contrib.obsolete-packages.acs-workflow.www.case.old_tasks {
      
    select t.task_id, 
           t.transition_key, 
           t.state, 
           t.case_id,
           tr.transition_name,
           to_char(t.enabled_date, :date_format) as enabled_date_pretty
    from   wf_tasks t, wf_transitions tr
    where  t.case_id = :case_id
    and    t.state not in ('enabled', 'started')
    and    tr.workflow_key = t.workflow_key
    and    tr.transition_key = t.transition_key
    order by t.enabled_date desc

      } {} {} {} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/www/case.xql}
dbqd.contrib.obsolete-packages.acs-workflow.www.comment-add-oracle.case {dbqd.contrib.obsolete-packages.acs-workflow.www.comment-add-oracle.case {
      
    select case_id,
           acs_object.name(object_id) as object_name,
           state
    from   wf_cases
    where  case_id = :case_id

      } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/www/comment-add-oracle.xql}
dbqd.contrib.obsolete-packages.acs-workflow.www.comment-add.case {dbqd.contrib.obsolete-packages.acs-workflow.www.comment-add.case {
      
    select case_id,
           acs_object__name(object_id) as object_name,
           state
    from   wf_cases
    where  case_id = :case_id

      } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/www/comment-add-postgresql.xql}
dbqd.contrib.obsolete-packages.acs-workflow.www.finished-tasks-oracle.finished_tasks {dbqd.contrib.obsolete-packages.acs-workflow.www.finished-tasks-oracle.finished_tasks {
      
    select t.task_id, 
           t.transition_key, 
           t.state, 
           t.case_id,
           tr.transition_name,
           to_char(t.enabled_date, :date_format) as enabled_date_pretty,
           to_char(t.started_date, :date_format) as started_date_pretty,
           to_char(t.canceled_date, :date_format) as canceled_date_pretty,
           to_char(t.overridden_date, :date_format) as overridden_date_pretty,
           to_char(t.finished_date, :date_format) as finished_date_pretty,
           to_char(nvl(t.finished_date, nvl(t.canceled_date, t.overridden_date)), :date_format) as done_date_pretty,
           p.party_id as done_by_party_id,
           '' as done_by_url,
           acs_object.name(p.party_id) as done_by_name,
           p.email as done_by_email
      from wf_tasks t, wf_transitions tr, parties p
     where t.case_id = :case_id
       and t.state not in ('enabled', 'started')
       and tr.workflow_key = t.workflow_key
       and tr.transition_key = t.transition_key
       and p.party_id (+) = t.holding_user
     order by t.enabled_date desc

      } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/www/finished-tasks-oracle.xql}
dbqd.contrib.obsolete-packages.acs-workflow.www.finished-tasks.finished_tasks {dbqd.contrib.obsolete-packages.acs-workflow.www.finished-tasks.finished_tasks {

    select t.task_id, 
           t.transition_key, 
           t.state, 
           t.case_id,
           tr.transition_name,
           to_char(t.enabled_date, :date_format) as enabled_date_pretty,
           to_char(t.started_date, :date_format) as started_date_pretty,
           to_char(t.canceled_date, :date_format) as canceled_date_pretty,
           to_char(t.overridden_date, :date_format) as overridden_date_pretty,
           to_char(t.finished_date, :date_format) as finished_date_pretty,
           to_char(coalesce(t.finished_date, coalesce(t.canceled_date, t.overridden_date)), :date_format) as done_date_pretty,
           p.party_id as done_by_party_id,
           '' as done_by_url,
           acs_object__name(p.party_id) as done_by_name,
           p.email as done_by_email
      from wf_transitions tr, wf_tasks t LEFT OUTER JOIN parties p ON (t.holding_user = p.party_id) 
     where t.case_id = :case_id
       and t.state not in ('enabled', 'started')
       and tr.workflow_key = t.workflow_key
       and tr.transition_key = t.transition_key
     order by t.enabled_date desc

      } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/www/finished-tasks-postgresql.xql}
dbqd.contrib.obsolete-packages.acs-workflow.www.journal-oracle.journal_select {dbqd.contrib.obsolete-packages.acs-workflow.www.journal-oracle.journal_select {
      
    select j.journal_id,
           j.action,
           j.action_pretty,
           o.creation_date,
           to_char(o.creation_date, :date_format) as creation_date_pretty,
           o.creation_user,
           acs_object.name(o.creation_user) as creation_user_name,
	   p.email as creation_user_email, 
	   o.creation_ip,
           j.msg,
           a.attribute_name as attribute_name, 
	   a.pretty_name as attribute_pretty_name,
	   a.datatype as attribute_datatype, 
	   v.attr_value as attribute_value
    from   journal_entries j, acs_objects o, parties p,
           wf_attribute_value_audit v, acs_attributes a
    where  j.object_id = :case_id
      and  o.object_id = j.journal_id
      and  p.party_id (+) =  o.creation_user
      and  v.journal_id (+) = j.journal_id
      and  a.attribute_id (+) = v.attribute_id
    order  by o.creation_date $sql_order, j.journal_id $sql_order

      } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/www/journal-oracle.xql}
dbqd.contrib.obsolete-packages.acs-workflow.www.journal.journal_select {dbqd.contrib.obsolete-packages.acs-workflow.www.journal.journal_select {

    select j.journal_id,
           j.action,
           j.action_pretty,
           o.creation_date,
           to_char(o.creation_date, :date_format) as creation_date_pretty,
           o.creation_user,
           acs_object__name(o.creation_user) as creation_user_name,
	   p.email as creation_user_email, 
	   o.creation_ip,
           j.msg,
           a.attribute_name as attribute_name, 
	   a.pretty_name as attribute_pretty_name,
	   a.datatype as attribute_datatype, 
	   v.attr_value as attribute_value
    from   (journal_entries j LEFT OUTER JOIN wf_attribute_value_audit v 
	     on (j.journal_id = v.journal_id)) LEFT OUTER JOIN acs_attributes a 
	       on (v.attribute_id = a.attribute_id), 
	   acs_objects o left outer join parties p on (o.creation_user = p.party_id)
    where  j.object_id = :case_id
      and  o.object_id = j.journal_id
    order  by o.creation_date $sql_order, j.journal_id $sql_order

      } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/www/journal-postgresql.xql}
dbqd.contrib.obsolete-packages.acs-workflow.www.task-assignees-oracle.assignees {dbqd.contrib.obsolete-packages.acs-workflow.www.task-assignees-oracle.assignees {
      
    select p.party_id,
           acs_object.name(p.party_id) as name,
           p.email,
           '' as remove_url,
           o.object_type
    from   wf_task_assignments ta,
           parties p,
           acs_objects o
    where  ta.task_id = :task_id
    and    p.party_id = ta.party_id
    and    o.object_id = p.party_id

      } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/www/task-assignees-oracle.xql}
dbqd.contrib.obsolete-packages.acs-workflow.www.task-assignees-oracle.effective_assignees {dbqd.contrib.obsolete-packages.acs-workflow.www.task-assignees-oracle.effective_assignees {
      
    select distinct u.user_id,
           acs_object.name(u.user_id) as name,
           p.email,
           '/shared/community-member?user_id=' || u.user_id as url
    from   wf_task_assignments ta,
           party_approved_member_map m,
           parties p,
           users u
    where  ta.task_id = :task_id
    and    m.party_id = ta.party_id
    and    p.party_id = m.member_id
    and    u.user_id = p.party_id

      } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/www/task-assignees-oracle.xql}
dbqd.contrib.obsolete-packages.acs-workflow.www.task-assignees.assignees {dbqd.contrib.obsolete-packages.acs-workflow.www.task-assignees.assignees {
      
    select p.party_id,
           acs_object__name(p.party_id) as name,
           p.email,
           '' as remove_url,
           o.object_type
    from   wf_task_assignments ta,
           parties p,
           acs_objects o
    where  ta.task_id = :task_id
    and    p.party_id = ta.party_id
    and    o.object_id = p.party_id

      } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/www/task-assignees-postgresql.xql}
dbqd.contrib.obsolete-packages.acs-workflow.www.task-assignees.effective_assignees {dbqd.contrib.obsolete-packages.acs-workflow.www.task-assignees.effective_assignees {
      
    select distinct u.user_id,
           acs_object__name(u.user_id) as name,
           p.email,
           '/shared/community-member?user_id=' || u.user_id as url
    from   wf_task_assignments ta,
           party_approved_member_map m,
           parties p,
           users u
    where  ta.task_id = :task_id
    and    m.party_id = ta.party_id
    and    p.party_id = m.member_id
    and    u.user_id = p.party_id

      } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/www/task-assignees-postgresql.xql}
dbqd.contrib.obsolete-packages.acs-workflow.www.task-deadline-set-2.deadline_update {dbqd.contrib.obsolete-packages.acs-workflow.www.task-deadline-set-2.deadline_update {
      
update wf_tasks set deadline = :deadline_date
where task_id = :task_id
      } {} {} {} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/www/task-deadline-set-2.xql}
dbqd.contrib.obsolete-packages.acs-workflow.www.task-deadline-set.deadline_select {dbqd.contrib.obsolete-packages.acs-workflow.www.task-deadline-set.deadline_select {
      
select deadline
from wf_tasks
where task_id = :task_id
      } {} {} {} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/www/task-deadline-set.xql}
dbqd.contrib.obsolete-packages.acs-workflow.www.task-list-oracle.select_list {dbqd.contrib.obsolete-packages.acs-workflow.www.task-list-oracle.select_list {
      

    "t.task_id, 
    t.case_id, 
    t.transition_key, 
    t.enabled_date, 
    to_char(t.enabled_date, :date_format) as enabled_date_pretty,
    t.started_date,
    to_char(t.started_date, :date_format) as started_date_pretty,
    t.deadline,
    to_char(t.deadline, :date_format) as deadline_pretty,
    t.deadline - sysdate as days_till_deadline,
    t.state, 
    c.object_id, 
    ot.object_type as object_type,
    ot.pretty_name as object_type_pretty, 
    acs_object.name(c.object_id) as object_name,
    c.workflow_key,
    wft.pretty_name as workflow_name,
    sysdate,
    t.estimated_minutes,
    '' as task_url"


      } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/www/task-list-oracle.xql}
dbqd.contrib.obsolete-packages.acs-workflow.www.task-list.select_list {dbqd.contrib.obsolete-packages.acs-workflow.www.task-list.select_list {
      

   "t.task_id, 
    t.case_id, 
    t.transition_key, 
    t.enabled_date, 
    to_char(t.enabled_date, :date_format) as enabled_date_pretty,
    t.started_date,
    to_char(t.started_date, :date_format) as started_date_pretty,
    t.deadline,
    to_char(t.deadline, :date_format) as deadline_pretty,
    t.deadline - now() as days_till_deadline,
    t.state, 
    c.object_id, 
    ot.object_type as object_type,
    ot.pretty_name as object_type_pretty, 
    acs_object__name(c.object_id) as object_name,
    c.workflow_key,
    wft.pretty_name as workflow_name,
    now(),
    t.estimated_minutes,
    '' as task_url"

      } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/www/task-list-postgresql.xql}
dbqd.contrib.obsolete-packages.acs-workflow.www.task.panels {dbqd.contrib.obsolete-packages.acs-workflow.www.task.panels {
      
    select tp.header, 
           tp.template_url,
           '' as bgcolor
      from wf_context_task_panels tp, 
           wf_cases c,
           wf_tasks t
     where t.task_id = :task_id
       and c.case_id = t.case_id
       and tp.context_key = c.context_key
       and tp.workflow_key = c.workflow_key
       and tp.transition_key = t.transition_key
       and (tp.only_display_when_started_p = 'f' or (t.state = 'started' and :this_user_is_assigned_p = 1))
       and tp.overrides_action_p = 'f'
    order by tp.sort_order

      } {} {} {} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/www/task.xql}
dbqd.contrib.obsolete-packages.acs-workflow.www.task.instruction_check {dbqd.contrib.obsolete-packages.acs-workflow.www.task.instruction_check {
      
    select count(*) 
    from wf_transition_info ti, wf_tasks t
    where t.task_id = :task_id
      and t.transition_key = ti.transition_key
      and t.workflow_key = ti.workflow_key
      and instructions is not null

      } {} {} {} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/www/task.xql}
dbqd.contrib.obsolete-packages.acs-workflow.www.task.action_panels {dbqd.contrib.obsolete-packages.acs-workflow.www.task.action_panels {
      
    select tp.header, 
           tp.template_url
      from wf_context_task_panels tp, 
           wf_cases c,
           wf_tasks t
     where t.task_id = :task_id
       and c.case_id = t.case_id
       and tp.context_key = c.context_key
       and tp.workflow_key = c.workflow_key
       and tp.transition_key = t.transition_key
       and (tp.only_display_when_started_p = 'f' or (t.state = 'started' and :this_user_is_assigned_p = 1))
       and tp.overrides_action_p = 't'
    order by tp.sort_order

      } {} {} {} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/www/task.xql}
dbqd.contrib.obsolete-packages.acs-workflow.www.task.case_state {dbqd.contrib.obsolete-packages.acs-workflow.www.task.case_state {
      select state from wf_cases where case_id = :case_id
      } {} {} {} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/www/task.xql}
dbqd.contrib.obsolete-packages.acs-workflow.www.test-display.workflow_key_from_case_id {dbqd.contrib.obsolete-packages.acs-workflow.www.test-display.workflow_key_from_case_id {
       select workflow_key from wf_cases where case_id = :case_id 
      } {} {} {} c:/web/openacs-4/contrib/obsolete-packages/acs-workflow/www/test-display.xql}
dbqd.contrib.obsolete-packages.bboard.tcl.bboard-procs-oracle.bboard_forum_p.bboard_forum_p {dbqd.contrib.obsolete-packages.bboard.tcl.bboard-procs-oracle.bboard_forum_p.bboard_forum_p {
      
        begin
            :1 := bboard_forum.forum_p(:forum_id);
        end;
    
      } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/obsolete-packages/bboard/tcl/bboard-procs-oracle.xql}
dbqd.contrib.obsolete-packages.bboard.tcl.bboard-procs-oracle.bboard_forum_new.create_forum {dbqd.contrib.obsolete-packages.bboard.tcl.bboard-procs-oracle.bboard_forum_new.create_forum {
      
        begin
            :1 := bboard_forum.new (
                forum_id => :forum_id,
                short_name => :short_name,
                charter => :charter,
                moderated_p => :moderated_p,
                bboard_id => :bboard_id,
                context_id => :context_id,
                creation_user => :creation_user,
                creation_ip => :creation_ip
            );
        end;
    
      } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/obsolete-packages/bboard/tcl/bboard-procs-oracle.xql}
dbqd.contrib.obsolete-packages.bboard.tcl.bboard-procs-oracle.bboard_forum_set.update_forum {dbqd.contrib.obsolete-packages.bboard.tcl.bboard-procs-oracle.bboard_forum_set.update_forum {
      
        begin
            bboard_forum.set_attrs (
                forum_id => :forum_id,
                short_name => :short_name,
                charter => :charter,
                moderated_p => :moderated_p,
                bboard_id => :bboard_id
            );
        end;
    
      } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/obsolete-packages/bboard/tcl/bboard-procs-oracle.xql}
dbqd.contrib.obsolete-packages.bboard.tcl.bboard-procs-oracle.bboard_category_p.bboard_category_p {dbqd.contrib.obsolete-packages.bboard.tcl.bboard-procs-oracle.bboard_category_p.bboard_category_p {
      
        begin
            :1 := bboard_category.category_p(:category_id);
        end;
    
      } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/obsolete-packages/bboard/tcl/bboard-procs-oracle.xql}
dbqd.contrib.obsolete-packages.bboard.tcl.bboard-procs-oracle.bboard_category_new.create_category {dbqd.contrib.obsolete-packages.bboard.tcl.bboard-procs-oracle.bboard_category_new.create_category {
      
	begin
	    :1 := bboard_category.new (
	        category_id => :category_id,
	        short_name => :short_name,
	        description => :description,
	        forum_id => :forum_id
	    );
	end;
    
      } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/obsolete-packages/bboard/tcl/bboard-procs-oracle.xql}
dbqd.contrib.obsolete-packages.bboard.tcl.bboard-procs-oracle.bboard_category_set.update_category {dbqd.contrib.obsolete-packages.bboard.tcl.bboard-procs-oracle.bboard_category_set.update_category {
      
        begin
            bboard_category.set_attrs (
                category_id => :category_id,
                short_name => :short_name,
                description => :description,
                forum_id => :forum_id
            );
        end;
    
      } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/obsolete-packages/bboard/tcl/bboard-procs-oracle.xql}
dbqd.contrib.obsolete-packages.bboard.tcl.bboard-procs-oracle.bboard_message_new.message_new {dbqd.contrib.obsolete-packages.bboard.tcl.bboard-procs-oracle.bboard_message_new.message_new {
      
        begin
            :1 := bboard_message.new (
                message_id => :message_id,
                reply_to => :reply_to,
                sent_date => :sent_date,
                sender => :sender,
                title => :title,
                mime_type => :mime_type,
                data => empty_blob(),
                context_id => :context_id,
                creation_user => :creation_user,
                creation_ip => :creation_ip
            );
        end;
    
      } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/obsolete-packages/bboard/tcl/bboard-procs-oracle.xql}
dbqd.contrib.obsolete-packages.bboard.tcl.bboard-procs-oracle.bboard_message_new.message_new_set_blob {dbqd.contrib.obsolete-packages.bboard.tcl.bboard-procs-oracle.bboard_message_new.message_new_set_blob {
      
        update cr_revisions
            set content = empty_blob()
            where revision_id = :revision_id
        returning content into :1
    
      } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/obsolete-packages/bboard/tcl/bboard-procs-oracle.xql}
dbqd.contrib.obsolete-packages.bboard.tcl.bboard-procs-oracle.bboard_message_set.message_set_attr {dbqd.contrib.obsolete-packages.bboard.tcl.bboard-procs-oracle.bboard_message_set.message_set_attr {
      
        begin
            bboard_message.set_attrs (
                message_id => :message_id,
                reply_to => :reply_to,
                sent_date => :sent_date,
                sender => :sender,
                title => :title,
                mime_type => :mime_type,
                context_id => :context_id
            );
        end;
    
      } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/obsolete-packages/bboard/tcl/bboard-procs-oracle.xql}
dbqd.contrib.obsolete-packages.bboard.tcl.bboard-procs-oracle.bboard_message_set.message_set_content {dbqd.contrib.obsolete-packages.bboard.tcl.bboard-procs-oracle.bboard_message_set.message_set_content {
      
        update cr_revisions
            set content = empty_blob()
            where revision_id = :revision_id
        returning content into :1
    
      } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/obsolete-packages/bboard/tcl/bboard-procs-oracle.xql}
dbqd.contrib.obsolete-packages.bboard.tcl.bboard-procs-oracle.bboard_message_clear_categories.bboard_message_clear_categories {dbqd.contrib.obsolete-packages.bboard.tcl.bboard-procs-oracle.bboard_message_clear_categories.bboard_message_clear_categories {
      
        begin
            bboard_message.clear_categories ( :message_id );
        end;
    
      } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/obsolete-packages/bboard/tcl/bboard-procs-oracle.xql}
dbqd.contrib.obsolete-packages.bboard.tcl.bboard-procs-oracle.bboard_message_add_category.bboard_message_add_category {dbqd.contrib.obsolete-packages.bboard.tcl.bboard-procs-oracle.bboard_message_add_category.bboard_message_add_category {
      
        begin
            bboard_message.add_category (
                message_id => :message_id,
                category_id => :category_id
            );
        end;
    
      } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/obsolete-packages/bboard/tcl/bboard-procs-oracle.xql}
dbqd.contrib.obsolete-packages.bboard.tcl.bboard-procs-oracle.bboard_message_remove_category.bboard_message_remove_category {dbqd.contrib.obsolete-packages.bboard.tcl.bboard-procs-oracle.bboard_message_remove_category.bboard_message_remove_category {
      
        begin
            bboard_message.remove_category (
                message_id => :message_id,
                category_id => :category_id
            );
        end;
    
      } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/obsolete-packages/bboard/tcl/bboard-procs-oracle.xql}
dbqd.contrib.obsolete-packages.bboard.tcl.bboard-procs-oracle.bboard_message_set_status.bboard_message_set_status {dbqd.contrib.obsolete-packages.bboard.tcl.bboard-procs-oracle.bboard_message_set_status.bboard_message_set_status {
      
        begin
            bboard_message.set_status (
                message_id => :message_id,
                forum_id => :forum_id,
                status => :status
            );
        end;
    
      } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/obsolete-packages/bboard/tcl/bboard-procs-oracle.xql}
dbqd.contrib.obsolete-packages.bboard.tcl.bboard-procs-oracle.bboard_subscribe_forum.forum_subscribe {dbqd.contrib.obsolete-packages.bboard.tcl.bboard-procs-oracle.bboard_subscribe_forum.forum_subscribe {
      
        begin
            bboard_forum.subscribe (
                forum_id => :forum_id,
                subscriber_id => :subscriber_id
            );
        end;
    
      } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/obsolete-packages/bboard/tcl/bboard-procs-oracle.xql}
dbqd.contrib.obsolete-packages.bboard.tcl.bboard-procs-oracle.bboard_subscribe_category.category_subscribe {dbqd.contrib.obsolete-packages.bboard.tcl.bboard-procs-oracle.bboard_subscribe_category.category_subscribe {
      
        begin
            bboard_category.subscribe (
                category_id => :category_id,
                subscriber_id => :subscriber_id
            );
        end;
    
      } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/obsolete-packages/bboard/tcl/bboard-procs-oracle.xql}
dbqd.contrib.obsolete-packages.bboard.tcl.bboard-procs-oracle.bboard_subscribe_thread.thread_subscribe {dbqd.contrib.obsolete-packages.bboard.tcl.bboard-procs-oracle.bboard_subscribe_thread.thread_subscribe {
      
        begin
            bboard_message.subscribe (
                thread_id => :thread_id,
                subscriber_id => :subscriber_id
            );
        end;
    
      } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/obsolete-packages/bboard/tcl/bboard-procs-oracle.xql}
dbqd.contrib.obsolete-packages.bboard.tcl.bboard-procs-oracle.bboard_message_subscribed_p.check_message_subscribed {dbqd.contrib.obsolete-packages.bboard.tcl.bboard-procs-oracle.bboard_message_subscribed_p.check_message_subscribed {
      
	select count(*) as subscribed_p from bboard_thread_subscribers
	where subscriber_id = :user_id
	      and thread_id in (select message_id
	                        from acs_messages b
	                        connect by b.message_id = prior b.reply_to 
	                        start with message_id = :message_id)

    
      } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/obsolete-packages/bboard/tcl/bboard-procs-oracle.xql}
dbqd.contrib.obsolete-packages.bboard.tcl.bboard-procs-oracle.bboard_message_forum.bboard_forum_containing_message {dbqd.contrib.obsolete-packages.bboard.tcl.bboard-procs-oracle.bboard_message_forum.bboard_forum_containing_message {
      
	select bboard_forum.forum_containing_message(:message_id) as forum_id
	  from dual
    
      } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/obsolete-packages/bboard/tcl/bboard-procs-oracle.xql}
dbqd.contrib.obsolete-packages.bboard.tcl.bboard-procs-oracle.bboard_message_url.first_ancestor {dbqd.contrib.obsolete-packages.bboard.tcl.bboard-procs-oracle.bboard_message_url.first_ancestor {
      
	select acs_message.first_ancestor(:message_id) as ancestor_id 
            from dual
    
      } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/obsolete-packages/bboard/tcl/bboard-procs-oracle.xql}
dbqd.contrib.obsolete-packages.bboard.tcl.bboard-procs-oracle.bboard_attach_image.insert_image {dbqd.contrib.obsolete-packages.bboard.tcl.bboard-procs-oracle.bboard_attach_image.insert_image {
      
             begin
                :1 := acs_message.new_image (
                    message_id     => :message_id,
                    image_id       => :file_id,
                    file_name      => :short_filename,
                    title          => :title,
                    mime_type      => :mime_type,
                    content        => empty_blob(),
                    width          => :width,
                    height         => :height,
                    creation_user  => :user_id,
                    creation_ip    => :creation_ip,
                    is_live        => 't'
            );
            end;
        
      } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/obsolete-packages/bboard/tcl/bboard-procs-oracle.xql}
dbqd.contrib.obsolete-packages.bboard.tcl.bboard-procs-oracle.bboard_attach_image.get_revision {dbqd.contrib.obsolete-packages.bboard.tcl.bboard-procs-oracle.bboard_attach_image.get_revision {
      
        select content_item.get_latest_revision(:file_id) as revision_id
        from dual
    
      } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/obsolete-packages/bboard/tcl/bboard-procs-oracle.xql}
dbqd.contrib.obsolete-packages.bboard.tcl.bboard-procs-oracle.bboard_attach_image.set_content_size {dbqd.contrib.obsolete-packages.bboard.tcl.bboard-procs-oracle.bboard_attach_image.set_content_size {
      
	update cr_revisions
 	set filename = :filename,
	    content_length = :file_size
	where revision_id = :revision_id
    
      } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/obsolete-packages/bboard/tcl/bboard-procs-oracle.xql}
dbqd.contrib.obsolete-packages.bboard.tcl.bboard-procs-oracle.bboard_attach_file.insert_file {dbqd.contrib.obsolete-packages.bboard.tcl.bboard-procs-oracle.bboard_attach_file.insert_file {
      
            begin
                :1 := acs_message.new_file (
                    message_id     => :message_id,
                    file_id        => :file_id,
                    file_name      => :short_filename,
                    title          => :title,
                    mime_type      => :mime_type,
                    content        => empty_blob(),
                    creation_user  => :user_id,
                    creation_ip    => :creation_ip,
                    is_live        => 't'
            );
            end;
        
      } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/obsolete-packages/bboard/tcl/bboard-procs-oracle.xql}
dbqd.contrib.obsolete-packages.bboard.tcl.bboard-procs-oracle.bboard_attach_file.get_revision {dbqd.contrib.obsolete-packages.bboard.tcl.bboard-procs-oracle.bboard_attach_file.get_revision {
      
        select content_item.get_latest_revision(:file_id) as revision_id
        from dual
    
      } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/obsolete-packages/bboard/tcl/bboard-procs-oracle.xql}
dbqd.contrib.obsolete-packages.bboard.tcl.bboard-procs-oracle.bboard_attach_file.set_content_size {dbqd.contrib.obsolete-packages.bboard.tcl.bboard-procs-oracle.bboard_attach_file.set_content_size {
      
	update cr_revisions
 	set filename = :filename,
	    content_length = :file_size
	where revision_id = :revision_id
      
      } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/obsolete-packages/bboard/tcl/bboard-procs-oracle.xql}
dbqd.contrib.obsolete-packages.bboard.tcl.bboard-procs-oracle.bboard_delete_attachment.is_file_image {dbqd.contrib.obsolete-packages.bboard.tcl.bboard-procs-oracle.bboard_delete_attachment.is_file_image {
      
	select image_id
            from images
            where image_id = content_item.get_latest_revision(:file_id)
    
      } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/obsolete-packages/bboard/tcl/bboard-procs-oracle.xql}
dbqd.contrib.obsolete-packages.bboard.tcl.bboard-procs-oracle.bboard_delete_attachment.delete_image {dbqd.contrib.obsolete-packages.bboard.tcl.bboard-procs-oracle.bboard_delete_attachment.delete_image {
      
	    begin
	        acs_message.delete_image(:file_id);
	    end;
	
      } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/obsolete-packages/bboard/tcl/bboard-procs-oracle.xql}
dbqd.contrib.obsolete-packages.bboard.tcl.bboard-procs-oracle.bboard_delete_attachment.delete_file {dbqd.contrib.obsolete-packages.bboard.tcl.bboard-procs-oracle.bboard_delete_attachment.delete_file {
      
	    begin
   	        acs_message.delete_file(:file_id);
	    end;
	
      } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/obsolete-packages/bboard/tcl/bboard-procs-oracle.xql}
dbqd.contrib.obsolete-packages.bboard.tcl.bboard-procs-oracle.bboard_garbage_collect.clear_revision_references {dbqd.contrib.obsolete-packages.bboard.tcl.bboard-procs-oracle.bboard_garbage_collect.clear_revision_references {

update cr_items 
   set latest_revision=null, live_revision=null
 where item_id = -1;

      } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/obsolete-packages/bboard/tcl/bboard-procs-oracle.xql}
dbqd.contrib.obsolete-packages.bboard.tcl.bboard-procs-oracle.bboard_garbage_collect.bboard_alert_clean {dbqd.contrib.obsolete-packages.bboard.tcl.bboard-procs-oracle.bboard_garbage_collect.bboard_alert_clean {
      
	declare
	    cursor alerts_cursor is
 
 	    select object_id
 	         from acs_objects
 	         where object_id in (select object_id
                                       from acs_objects
                                      where object_type = 'bboard_message'
                  	              start with context_id in (select forum_id
                                                                  from bboard_forums)
 	                              connect by prior object_id = context_id)
 	               and object_id not in (select message_id
 	                                       from bboard_forum_message_map)
             order by object_id desc;
	begin
  	    for alert_val in alerts_cursor loop
	        bboard_message.remove(alert_val.object_id);
	    end loop;
	end;
    
      } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/obsolete-packages/bboard/tcl/bboard-procs-oracle.xql}
dbqd.contrib.obsolete-packages.bboard.tcl.bboard-procs-oracle.bboard_schedule_sends.thread_subscribers {dbqd.contrib.obsolete-packages.bboard.tcl.bboard-procs-oracle.bboard_schedule_sends.thread_subscribers {
        select subscriber_id as recipient_id, thread_id as grouping_id,
               sysdate as wait_until
          from bboard_thread_subscribers s
          where s.thread_id in (select message_id 
                                  from acs_messages
                                 start with message_id = :message_id
                               connect by message_id = prior reply_to)
            and s.subscriber_id in (select party_id 
                                      from all_object_party_privilege_map 
                                     where object_id = :message_id 
                                       and privilege = 'bboard_read_message')
  } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/obsolete-packages/bboard/tcl/bboard-procs-oracle.xql}
dbqd.contrib.obsolete-packages.bboard.tcl.bboard-procs-oracle.bboard_schedule_sends.category_subscribers {dbqd.contrib.obsolete-packages.bboard.tcl.bboard-procs-oracle.bboard_schedule_sends.category_subscribers {
	select s.subscriber_id as recipient_id, s.category_id as grouping_id,
	       sysdate as wait_until
	  from bboard_category_subscribers s, bboard_category_message_map m
	  where m.message_id = :message_id
	    and s.category_id = m.category_id
            and s.subscriber_id in (select party_id 
                                      from acs_object_party_privilege_map 
                                     where object_id = :message_id 
                                       and privilege = 'bboard_read_message')
  } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/obsolete-packages/bboard/tcl/bboard-procs-oracle.xql}
dbqd.contrib.obsolete-packages.bboard.tcl.bboard-procs-oracle.bboard_schedule_sends.forum_subscribers {dbqd.contrib.obsolete-packages.bboard.tcl.bboard-procs-oracle.bboard_schedule_sends.forum_subscribers {
        select s.subscriber_id as recipient_id, s.forum_id as grouping_id,
               sysdate as wait_until
            from bboard_forum_subscribers s, bboard_forum_message_map m
            where m.message_id = :message_id
              and s.forum_id = m.forum_id
              and s.subscriber_id in (select party_id 
                                        from acs_object_party_privilege_map 
                                       where object_id = :message_id 
                                         and privilege = 'bboard_read_message')
  } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/obsolete-packages/bboard/tcl/bboard-procs-oracle.xql}
dbqd.contrib.obsolete-packages.bboard.tcl.bboard-procs.bboard_forum_p.bboard_forum_p {dbqd.contrib.obsolete-packages.bboard.tcl.bboard-procs.bboard_forum_p.bboard_forum_p {
            select bboard_forum__forum_p(:forum_id);
      } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/obsolete-packages/bboard/tcl/bboard-procs-postgresql.xql}
dbqd.contrib.obsolete-packages.bboard.tcl.bboard-procs.bboard_forum_new.create_forum {dbqd.contrib.obsolete-packages.bboard.tcl.bboard-procs.bboard_forum_new.create_forum {
            select bboard_forum__new (
                :forum_id,
                :short_name,
                :charter,
                :moderated_p,
                :bboard_id,
                :context_id,
                now(),
                :creation_user,
                :creation_ip,
                'bboard_forum'
            );
      } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/obsolete-packages/bboard/tcl/bboard-procs-postgresql.xql}
dbqd.contrib.obsolete-packages.bboard.tcl.bboard-procs.bboard_forum_set.update_forum {dbqd.contrib.obsolete-packages.bboard.tcl.bboard-procs.bboard_forum_set.update_forum {
         select bboard_forum__set_attrs (
                :forum_id,
                :short_name,
                :charter,
                :moderated_p,
                :bboard_id
            );
      } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/obsolete-packages/bboard/tcl/bboard-procs-postgresql.xql}
dbqd.contrib.obsolete-packages.bboard.tcl.bboard-procs.bboard_category_p.bboard_category_p {dbqd.contrib.obsolete-packages.bboard.tcl.bboard-procs.bboard_category_p.bboard_category_p {
        select bboard_category__category_p(:category_id);
      } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/obsolete-packages/bboard/tcl/bboard-procs-postgresql.xql}
dbqd.contrib.obsolete-packages.bboard.tcl.bboard-procs.bboard_category_new.create_category {dbqd.contrib.obsolete-packages.bboard.tcl.bboard-procs.bboard_category_new.create_category {
	    select bboard_category__new (
	        :category_id,
	        :short_name,
	        :description,
	        :forum_id,
                null,
                now(),
                null,
                null,
                'bboard_category'
	    );
      } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/obsolete-packages/bboard/tcl/bboard-procs-postgresql.xql}
dbqd.contrib.obsolete-packages.bboard.tcl.bboard-procs.bboard_category_set.update_category {dbqd.contrib.obsolete-packages.bboard.tcl.bboard-procs.bboard_category_set.update_category {
            select bboard_category__set_attrs (
                :category_id,
                :short_name,
                :description,
                :forum_id
            );
      } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/obsolete-packages/bboard/tcl/bboard-procs-postgresql.xql}
dbqd.contrib.obsolete-packages.bboard.tcl.bboard-procs.bboard_message_new.message_new {dbqd.contrib.obsolete-packages.bboard.tcl.bboard-procs.bboard_message_new.message_new {
            select bboard_message__new (
                :message_id,
                :reply_to,
                :sent_date,
                :sender,
                null,          -- rfc822_id
                :title,
                :mime_type,
                null,          -- text
	        null,          -- data
                :context_id,
                now(),
                :creation_user,
                :creation_ip,
                'bboard_message'
            );
      } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/obsolete-packages/bboard/tcl/bboard-procs-postgresql.xql}
dbqd.contrib.obsolete-packages.bboard.tcl.bboard-procs.bboard_message_new.message_new_set_blob {dbqd.contrib.obsolete-packages.bboard.tcl.bboard-procs.bboard_message_new.message_new_set_blob {

        update cr_revisions
            set content = :content
            where revision_id = :revision_id
    
      } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/obsolete-packages/bboard/tcl/bboard-procs-postgresql.xql}
dbqd.contrib.obsolete-packages.bboard.tcl.bboard-procs.bboard_message_set.message_set_attr {dbqd.contrib.obsolete-packages.bboard.tcl.bboard-procs.bboard_message_set.message_set_attr {

          select bboard_message__set_attrs (
                :message_id,
                :reply_to,
                :sent_date,
                :sender,
                :title,
                :mime_type,
                :context_id
            );
    
      } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/obsolete-packages/bboard/tcl/bboard-procs-postgresql.xql}
dbqd.contrib.obsolete-packages.bboard.tcl.bboard-procs.bboard_message_set.message_set_content {dbqd.contrib.obsolete-packages.bboard.tcl.bboard-procs.bboard_message_set.message_set_content {
	update cr_revisions
 	set content = :content
        where revision_id = :revision_id
      } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/obsolete-packages/bboard/tcl/bboard-procs-postgresql.xql}
dbqd.contrib.obsolete-packages.bboard.tcl.bboard-procs.bboard_message_clear_categories.bboard_message_clear_categories {dbqd.contrib.obsolete-packages.bboard.tcl.bboard-procs.bboard_message_clear_categories.bboard_message_clear_categories {

          select bboard_message__clear_categories ( :message_id );
    
      } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/obsolete-packages/bboard/tcl/bboard-procs-postgresql.xql}
dbqd.contrib.obsolete-packages.bboard.tcl.bboard-procs.bboard_message_add_category.bboard_message_add_category {dbqd.contrib.obsolete-packages.bboard.tcl.bboard-procs.bboard_message_add_category.bboard_message_add_category {

        select bboard_message__add_category (
                :message_id,
                :category_id
            );
    
      } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/obsolete-packages/bboard/tcl/bboard-procs-postgresql.xql}
dbqd.contrib.obsolete-packages.bboard.tcl.bboard-procs.bboard_message_remove_category.bboard_message_remove_category {dbqd.contrib.obsolete-packages.bboard.tcl.bboard-procs.bboard_message_remove_category.bboard_message_remove_category {

            select bboard_message__remove_category (
                :message_id,
                :category_id
            );
    
      } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/obsolete-packages/bboard/tcl/bboard-procs-postgresql.xql}
dbqd.contrib.obsolete-packages.bboard.tcl.bboard-procs.bboard_message_set_status.bboard_message_set_status {dbqd.contrib.obsolete-packages.bboard.tcl.bboard-procs.bboard_message_set_status.bboard_message_set_status {

            select bboard_message__set_status (
                :message_id,
                :forum_id,
                :status
            );
    
      } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/obsolete-packages/bboard/tcl/bboard-procs-postgresql.xql}
dbqd.contrib.obsolete-packages.bboard.tcl.bboard-procs.bboard_subscribe_forum.forum_subscribe {dbqd.contrib.obsolete-packages.bboard.tcl.bboard-procs.bboard_subscribe_forum.forum_subscribe {

            select bboard_forum__subscribe (
                :forum_id,
                :subscriber_id
            );
    
      } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/obsolete-packages/bboard/tcl/bboard-procs-postgresql.xql}
dbqd.contrib.obsolete-packages.bboard.tcl.bboard-procs.bboard_subscribe_category.category_subscribe {dbqd.contrib.obsolete-packages.bboard.tcl.bboard-procs.bboard_subscribe_category.category_subscribe {

            select bboard_category__subscribe (
                :category_id,
                :subscriber_id
            );
    
      } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/obsolete-packages/bboard/tcl/bboard-procs-postgresql.xql}
dbqd.contrib.obsolete-packages.bboard.tcl.bboard-procs.bboard_subscribe_thread.thread_subscribe {dbqd.contrib.obsolete-packages.bboard.tcl.bboard-procs.bboard_subscribe_thread.thread_subscribe {

            select bboard_message__subscribe (
                :thread_id,
                :subscriber_id
            );
    
      } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/obsolete-packages/bboard/tcl/bboard-procs-postgresql.xql}
dbqd.contrib.obsolete-packages.bboard.tcl.bboard-procs.bboard_message_subscribed_p.check_message_subscribed {dbqd.contrib.obsolete-packages.bboard.tcl.bboard-procs.bboard_message_subscribed_p.check_message_subscribed {

	select count(*) as subscribed_p
         from bboard_thread_subscribers bs, acs_messages m, acs_messages m2
	 where bs.subscriber_id = :user_id
	   and bs.thread_id = m.message_id 
           and m2.message_id = :message_id
           and m.tree_sortkey between m2.tree_sortkey and tree_right(m2.tree_sortkey)

      } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/obsolete-packages/bboard/tcl/bboard-procs-postgresql.xql}
dbqd.contrib.obsolete-packages.bboard.tcl.bboard-procs.bboard_message_forum.bboard_forum_containing_message {dbqd.contrib.obsolete-packages.bboard.tcl.bboard-procs.bboard_message_forum.bboard_forum_containing_message {
      
	select bboard_forum__forum_containing_message(:message_id) as forum_id
	  
    
      } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/obsolete-packages/bboard/tcl/bboard-procs-postgresql.xql}
dbqd.contrib.obsolete-packages.bboard.tcl.bboard-procs.bboard_message_url.first_ancestor {dbqd.contrib.obsolete-packages.bboard.tcl.bboard-procs.bboard_message_url.first_ancestor {
      
	select acs_message__first_ancestor(:message_id) as ancestor_id 
            
    
      } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/obsolete-packages/bboard/tcl/bboard-procs-postgresql.xql}
dbqd.contrib.obsolete-packages.bboard.tcl.bboard-procs.bboard_attach_image.insert_image {dbqd.contrib.obsolete-packages.bboard.tcl.bboard-procs.bboard_attach_image.insert_image {

                select acs_message__new_image (
                    :message_id,
                    :file_id,
                    :short_filename,
                    :title,
                    null,       -- description
                    :mime_type,
                    null,       -- data
                    :width,
                    :height,
                    now(),
                    :user_id,
                    :creation_ip,
                    't',        -- is_live
                    'file'
                );
        
      } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/obsolete-packages/bboard/tcl/bboard-procs-postgresql.xql}
dbqd.contrib.obsolete-packages.bboard.tcl.bboard-procs.bboard_attach_image.get_revision {dbqd.contrib.obsolete-packages.bboard.tcl.bboard-procs.bboard_attach_image.get_revision {
      
        select content_item__get_latest_revision(:file_id) as revision_id
        
    
      } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/obsolete-packages/bboard/tcl/bboard-procs-postgresql.xql}
dbqd.contrib.obsolete-packages.bboard.tcl.bboard-procs.bboard_attach_image.set_content_size {dbqd.contrib.obsolete-packages.bboard.tcl.bboard-procs.bboard_attach_image.set_content_size {
	update cr_revisions
 	set content = :filename,
	    content_length = :file_size
        where revision_id = :revision_id
      } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/obsolete-packages/bboard/tcl/bboard-procs-postgresql.xql}
dbqd.contrib.obsolete-packages.bboard.tcl.bboard-procs.bboard_attach_file.insert_file {dbqd.contrib.obsolete-packages.bboard.tcl.bboard-procs.bboard_attach_file.insert_file {
                select acs_message__new_file (
                    :message_id,
                    :file_id,
                    :short_filename,
                    :title,
                    null,           -- description
                    :mime_type,
                    null,           -- content
                    now(),
                    :user_id,
                    :creation_ip,
                    't',             -- is_live
                    'file'
                );
        
      } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/obsolete-packages/bboard/tcl/bboard-procs-postgresql.xql}
dbqd.contrib.obsolete-packages.bboard.tcl.bboard-procs.bboard_attach_file.get_revision {dbqd.contrib.obsolete-packages.bboard.tcl.bboard-procs.bboard_attach_file.get_revision {
      
        select content_item__get_latest_revision(:file_id) as revision_id
        
    
      } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/obsolete-packages/bboard/tcl/bboard-procs-postgresql.xql}
dbqd.contrib.obsolete-packages.bboard.tcl.bboard-procs.bboard_attach_file.set_content_size {dbqd.contrib.obsolete-packages.bboard.tcl.bboard-procs.bboard_attach_file.set_content_size {
	update cr_revisions
 	set content = :filename,
	    content_length = :file_size
        where revision_id = :revision_id
      } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/obsolete-packages/bboard/tcl/bboard-procs-postgresql.xql}
dbqd.contrib.obsolete-packages.bboard.tcl.bboard-procs.bboard_delete_attachment.is_file_image {dbqd.contrib.obsolete-packages.bboard.tcl.bboard-procs.bboard_delete_attachment.is_file_image {
      
	select image_id
            from images
            where image_id = content_item__get_latest_revision(:file_id)
    
      } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/obsolete-packages/bboard/tcl/bboard-procs-postgresql.xql}
dbqd.contrib.obsolete-packages.bboard.tcl.bboard-procs.bboard_delete_attachment.delete_image {dbqd.contrib.obsolete-packages.bboard.tcl.bboard-procs.bboard_delete_attachment.delete_image {

	    select acs_message__delete_image(:file_id);
	
      } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/obsolete-packages/bboard/tcl/bboard-procs-postgresql.xql}
dbqd.contrib.obsolete-packages.bboard.tcl.bboard-procs.bboard_delete_attachment.delete_file {dbqd.contrib.obsolete-packages.bboard.tcl.bboard-procs.bboard_delete_attachment.delete_file {

   	    select acs_message__delete_file(:file_id);
	
      } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/obsolete-packages/bboard/tcl/bboard-procs-postgresql.xql}
dbqd.contrib.obsolete-packages.bboard.tcl.bboard-procs.bboard_garbage_collect_postgresql.get_orphans {dbqd.contrib.obsolete-packages.bboard.tcl.bboard-procs.bboard_garbage_collect_postgresql.get_orphans {

          select object_id as message_id
          from acs_objects o
          where o.object_type = 'bboard_message'
            and not exists (select 1
                            from bboard_forum_message_map bfmm, acs_objects o2
                            where o2.object_id = bfmm.message_id and
                            o.tree_sortkey between o2.tree_sortkey and tree_right(o2.tree_sortkey))
    
      } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/obsolete-packages/bboard/tcl/bboard-procs-postgresql.xql}
dbqd.contrib.obsolete-packages.bboard.tcl.bboard-procs.bboard_garbage_collect_postgresql.clear_revision_references {dbqd.contrib.obsolete-packages.bboard.tcl.bboard-procs.bboard_garbage_collect_postgresql.clear_revision_references {

		update cr_items
          set latest_revision=null, live_revision=null
          where item_id = :message_id

      } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/obsolete-packages/bboard/tcl/bboard-procs-postgresql.xql}
dbqd.contrib.obsolete-packages.bboard.tcl.bboard-procs.bboard_garbage_collect_postgresql.delete_message {dbqd.contrib.obsolete-packages.bboard.tcl.bboard-procs.bboard_garbage_collect_postgresql.delete_message {

            select bboard_message__remove(:message_id);
    
      } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/obsolete-packages/bboard/tcl/bboard-procs-postgresql.xql}
dbqd.contrib.obsolete-packages.bboard.tcl.bboard-procs.bboard_schedule_sends.thread_subscribers {dbqd.contrib.obsolete-packages.bboard.tcl.bboard-procs.bboard_schedule_sends.thread_subscribers {
        select s.subscriber_id as recipient_id, s.thread_id as grouping_id,
               now() as wait_until
          from bboard_thread_subscribers s, acs_messages m,
            (select tree_ancestor_keys(acs_message_get_tree_sortkey(:message_id)) as tree_sortkey) parents
         where s.thread_id = m.message_id
           and m.tree_sortkey = parents.tree_sortkey
           and exists (select 1
                       from all_object_party_privilege_map map
                       where map.object_id = :message_id and
                           map.party_id = s.subscriber_id and
                           privilege = 'bboard_read_message')

  } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/obsolete-packages/bboard/tcl/bboard-procs-postgresql.xql}
dbqd.contrib.obsolete-packages.bboard.tcl.bboard-procs.bboard_schedule_sends.category_subscribers {dbqd.contrib.obsolete-packages.bboard.tcl.bboard-procs.bboard_schedule_sends.category_subscribers {
  
	select s.subscriber_id as recipient_id, s.category_id as grouping_id,
	       now() as wait_until
	  from bboard_category_subscribers s, bboard_category_message_map m
	  where m.message_id = :message_id
	    and s.category_id = m.category_id
            and exists (select 1
                        from all_object_party_privilege_map map
                        where map.object_id = :message_id and
                            map.party_id = s.subscriber_id and
                            privilege = 'bboard_read_message')

  } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/obsolete-packages/bboard/tcl/bboard-procs-postgresql.xql}
dbqd.contrib.obsolete-packages.bboard.tcl.bboard-procs.bboard_schedule_sends.forum_subscribers {dbqd.contrib.obsolete-packages.bboard.tcl.bboard-procs.bboard_schedule_sends.forum_subscribers {
        select s.subscriber_id as recipient_id, s.forum_id as grouping_id,
               now() as wait_until
            from bboard_forum_subscribers s, bboard_forum_message_map m
            where m.message_id = :message_id
              and s.forum_id = m.forum_id
              and exists (select 1
                          from all_object_party_privilege_map map
                          where map.object_id = :message_id and
                              map.party_id = s.subscriber_id and
                              privilege = 'bboard_read_message')
  } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/obsolete-packages/bboard/tcl/bboard-procs-postgresql.xql}
dbqd.contrib.obsolete-packages.bboard.tcl.bboard-procs.bboard_forum_get.forum_get {dbqd.contrib.obsolete-packages.bboard.tcl.bboard-procs.bboard_forum_get.forum_get {
      
        select * from bboard_forums where forum_id = :forum_id
    
      } {} {} {} c:/web/openacs-4/contrib/obsolete-packages/bboard/tcl/bboard-procs.xql}
dbqd.contrib.obsolete-packages.bboard.tcl.bboard-procs.bboard_category_get.category_get {dbqd.contrib.obsolete-packages.bboard.tcl.bboard-procs.bboard_category_get.category_get {
      
        select * from bboard_categories where category_id = :category_id
    
      } {} {} {} c:/web/openacs-4/contrib/obsolete-packages/bboard/tcl/bboard-procs.xql}
dbqd.contrib.obsolete-packages.bboard.tcl.bboard-procs.bboard_message_new.message_new_revision {dbqd.contrib.obsolete-packages.bboard.tcl.bboard-procs.bboard_message_new.message_new_revision {
      
        select live_revision as revision_id
            from cr_items
            where item_id = :message_id
        for update
    
      } {} {} {} c:/web/openacs-4/contrib/obsolete-packages/bboard/tcl/bboard-procs.xql}
dbqd.contrib.obsolete-packages.bboard.tcl.bboard-procs.bboard_message_set.message_revision {dbqd.contrib.obsolete-packages.bboard.tcl.bboard-procs.bboard_message_set.message_revision {
      
        select live_revision as revision_id from cr_items
            where item_id = :message_id
            for update
    
      } {} {} {} c:/web/openacs-4/contrib/obsolete-packages/bboard/tcl/bboard-procs.xql}
dbqd.contrib.obsolete-packages.bboard.tcl.bboard-procs.bboard_message_get.message_get {dbqd.contrib.obsolete-packages.bboard.tcl.bboard-procs.bboard_message_get.message_get {
      
        select * from acs_messages_all where message_id = :message_id
    
      } {} {} {} c:/web/openacs-4/contrib/obsolete-packages/bboard/tcl/bboard-procs.xql}
dbqd.contrib.obsolete-packages.bboard.tcl.bboard-procs.bboard_unsubscribe_forum.forum_unsubscribe {dbqd.contrib.obsolete-packages.bboard.tcl.bboard-procs.bboard_unsubscribe_forum.forum_unsubscribe {
      
        delete from bboard_forum_subscribers
            where forum_id = :forum_id
                and subscriber_id = :subscriber_id
    
      } {} {} {} c:/web/openacs-4/contrib/obsolete-packages/bboard/tcl/bboard-procs.xql}
dbqd.contrib.obsolete-packages.bboard.tcl.bboard-procs.bboard_unsubscribe_category.category_unsubscribe {dbqd.contrib.obsolete-packages.bboard.tcl.bboard-procs.bboard_unsubscribe_category.category_unsubscribe {
      
        delete from bboard_category_subscribers
            where category_id = :category_id
                and subscriber_id = :subscriber_id
    
      } {} {} {} c:/web/openacs-4/contrib/obsolete-packages/bboard/tcl/bboard-procs.xql}
dbqd.contrib.obsolete-packages.bboard.tcl.bboard-procs.bboard_unsubscribe_thread.thread_unsubscribe {dbqd.contrib.obsolete-packages.bboard.tcl.bboard-procs.bboard_unsubscribe_thread.thread_unsubscribe {
      
        delete from bboard_thread_subscribers
            where thread_id = :thread_id
                and subscriber_id = :subscriber_id
    
      } {} {} {} c:/web/openacs-4/contrib/obsolete-packages/bboard/tcl/bboard-procs.xql}
dbqd.contrib.obsolete-packages.bboard.tcl.bboard-procs.bboard_category_subscribed_p.check_category_subscribed {dbqd.contrib.obsolete-packages.bboard.tcl.bboard-procs.bboard_category_subscribed_p.check_category_subscribed {
      
        select count(*) as subscribed_p from bboard_category_subscribers
            where category_id = :category_id
                and subscriber_id = :user_id
    
      } {} {} {} c:/web/openacs-4/contrib/obsolete-packages/bboard/tcl/bboard-procs.xql}
dbqd.contrib.obsolete-packages.bboard.tcl.bboard-procs.bboard_category_subscribed_p.check_category_forums_subscribed {dbqd.contrib.obsolete-packages.bboard.tcl.bboard-procs.bboard_category_subscribed_p.check_category_forums_subscribed {
      
		select count(*) as subscribed_p from bboard_forum_subscribers
     	            where subscriber_id = :user_id
		        and forum_id in (select bc.forum_id
		                            from bboard_categories bc
  		                            where bc.category_id = 
                                                  :category_id)
	    
      } {} {} {} c:/web/openacs-4/contrib/obsolete-packages/bboard/tcl/bboard-procs.xql}
dbqd.contrib.obsolete-packages.bboard.tcl.bboard-procs.bboard_forum_subscribed_p.check_forum_subscribed {dbqd.contrib.obsolete-packages.bboard.tcl.bboard-procs.bboard_forum_subscribed_p.check_forum_subscribed {
      
        select count(*) as subscribed_p 
            from bboard_forum_subscribers
            where forum_id = :forum_id
                and subscriber_id = :user_id
    
      } {} {} {} c:/web/openacs-4/contrib/obsolete-packages/bboard/tcl/bboard-procs.xql}
dbqd.contrib.obsolete-packages.bboard.tcl.bboard-procs.bboard_message_subscribed_p.check_message_cats_subscribed {dbqd.contrib.obsolete-packages.bboard.tcl.bboard-procs.bboard_message_subscribed_p.check_message_cats_subscribed {
      
		select count(*) as subscribed_p 
		from bboard_category_subscribers
		where subscriber_id = :user_id
		      and category_id in (select bcmm.category_id
		                          from bboard_category_message_map bcmm
		                          where bcmm.message_id = :message_id)

	    
      } {} {} {} c:/web/openacs-4/contrib/obsolete-packages/bboard/tcl/bboard-procs.xql}
dbqd.contrib.obsolete-packages.bboard.tcl.bboard-procs.bboard_message_subscribed_p.check_message_forums_subscribed {dbqd.contrib.obsolete-packages.bboard.tcl.bboard-procs.bboard_message_subscribed_p.check_message_forums_subscribed {
      
		    select count(*) as subscribed_p 
		    from bboard_forum_subscribers
		    where subscriber_id = :user_id
		          and forum_id in (select bfmm.forum_id
   		                           from bboard_forum_message_map bfmm
		                           where bfmm.message_id = :message_id)
		
      } {} {} {} c:/web/openacs-4/contrib/obsolete-packages/bboard/tcl/bboard-procs.xql}
dbqd.contrib.obsolete-packages.bboard.tcl.bboard-procs.bboard_forum_moderated_p.forum_moderated_p {dbqd.contrib.obsolete-packages.bboard.tcl.bboard-procs.bboard_forum_moderated_p.forum_moderated_p {
      
	select moderated_p
  	  from bboard_forums
	  where forum_id = :forum_id
    
      } {} {} {} c:/web/openacs-4/contrib/obsolete-packages/bboard/tcl/bboard-procs.xql}
dbqd.contrib.obsolete-packages.bboard.tcl.bboard-procs.bboard_alert_message.forum_info {dbqd.contrib.obsolete-packages.bboard.tcl.bboard-procs.bboard_alert_message.forum_info {
      
	select short_name as forum_name
	    from bboard_forums
	    where forum_id = :forum_id
    
      } {} {} {} c:/web/openacs-4/contrib/obsolete-packages/bboard/tcl/bboard-procs.xql}
dbqd.contrib.obsolete-packages.bboard.tcl.bboard-procs.bboard_alert_one_mesg.bboard_mesg_info {dbqd.contrib.obsolete-packages.bboard.tcl.bboard-procs.bboard_alert_one_mesg.bboard_mesg_info {
      
	select reply_to, sender, title, mime_type, content, email,
               first_names||' '||last_name as full_name
            from acs_messages_all, persons, parties
            where message_id = :message_id
                  and person_id = sender
	          and party_id = person_id
    
      } {} {} {} c:/web/openacs-4/contrib/obsolete-packages/bboard/tcl/bboard-procs.xql}
dbqd.contrib.obsolete-packages.bboard.tcl.bboard-procs.bboard_alert_message.forum_info {dbqd.contrib.obsolete-packages.bboard.tcl.bboard-procs.bboard_alert_message.forum_info {
      
	select short_name as forum_name
	    from bboard_forums
	    where forum_id = :forum_id
    
      } {} {} {} c:/web/openacs-4/contrib/obsolete-packages/bboard/tcl/bboard-procs.xql}
dbqd.contrib.obsolete-packages.bboard.www.category-delete-2-oracle.delete_category {dbqd.contrib.obsolete-packages.bboard.www.category-delete-2-oracle.delete_category {
      
    begin
        bboard_category.del (:category_id);
    end;

      } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/obsolete-packages/bboard/www/category-delete-2-oracle.xql}
dbqd.contrib.obsolete-packages.bboard.www.category-delete-2.delete_category {dbqd.contrib.obsolete-packages.bboard.www.category-delete-2.delete_category {
        select bboard_category__delete (:category_id);
      } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/obsolete-packages/bboard/www/category-delete-2-postgresql.xql}
dbqd.contrib.obsolete-packages.bboard.www.category-delete-2.forum_id {dbqd.contrib.obsolete-packages.bboard.www.category-delete-2.forum_id {
      
    select forum_id from bboard_categories where category_id = :category_id

      } {} {} {} c:/web/openacs-4/contrib/obsolete-packages/bboard/www/category-delete-2.xql}
dbqd.contrib.obsolete-packages.bboard.www.category-delete.forum_short_name_id {dbqd.contrib.obsolete-packages.bboard.www.category-delete.forum_short_name_id {
      
    select f.short_name as forum_name, f.forum_id
        from bboard_forums f, bboard_categories c
        where c.category_id = :category_id
          and c.forum_id = f.forum_id

      } {} {} {} c:/web/openacs-4/contrib/obsolete-packages/bboard/www/category-delete.xql}
dbqd.contrib.obsolete-packages.bboard.www.category-delete.category_short_name {dbqd.contrib.obsolete-packages.bboard.www.category-delete.category_short_name {
      
    select short_name as category_name
        from bboard_categories
        where category_id = :category_id

      } {} {} {} c:/web/openacs-4/contrib/obsolete-packages/bboard/www/category-delete.xql}
dbqd.contrib.obsolete-packages.bboard.www.category-delete.category_message_count {dbqd.contrib.obsolete-packages.bboard.www.category-delete.category_message_count {
      
    select count(*) as message_count
        from bboard_category_message_map
        where category_id = :category_id

      } {} {} {} c:/web/openacs-4/contrib/obsolete-packages/bboard/www/category-delete.xql}
dbqd.contrib.obsolete-packages.bboard.www.category-edit.category_info {dbqd.contrib.obsolete-packages.bboard.www.category-edit.category_info {
      
    select f.short_name as forum_name, f.forum_id, c.short_name
      from bboard_forums f, bboard_categories c
      where c.category_id = :category_id
        and f.forum_id = c.forum_id

      } {} {} {} c:/web/openacs-4/contrib/obsolete-packages/bboard/www/category-edit.xql}
dbqd.contrib.obsolete-packages.bboard.www.category-new.forum_short_name {dbqd.contrib.obsolete-packages.bboard.www.category-new.forum_short_name {
      
    select short_name as forum_name from bboard_forums
      where forum_id = :forum_id

      } {} {} {} c:/web/openacs-4/contrib/obsolete-packages/bboard/www/category-new.xql}
dbqd.contrib.obsolete-packages.bboard.www.category-subscribe.category_forum {dbqd.contrib.obsolete-packages.bboard.www.category-subscribe.category_forum {
      
    select forum_id from bboard_categories where category_id = :category_id

      } {} {} {} c:/web/openacs-4/contrib/obsolete-packages/bboard/www/category-subscribe.xql}
dbqd.contrib.obsolete-packages.bboard.www.forum-by-category-oracle.categories_select_none {dbqd.contrib.obsolete-packages.bboard.www.forum-by-category-oracle.categories_select_none {
      
    select 1 from dual where 0 = 1

      } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/obsolete-packages/bboard/www/forum-by-category-oracle.xql}
dbqd.contrib.obsolete-packages.bboard.www.forum-by-category-oracle.messages_select_by_cat {dbqd.contrib.obsolete-packages.bboard.www.forum-by-category-oracle.messages_select_by_cat {
      
    select message_id, title, num_replies,
         first_names||' '||last_name as full_name,
  	 to_char(last_reply_date,'MM/DD/YY hh12:Mi am') as last_updated
    from bboard_messages_by_category b, persons
    where person_id = sender
        and reply_to is null
        and forum_id = :forum_id
  	$category_sql
        $moderated_sql
    order by sent_date desc
	
      } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/obsolete-packages/bboard/www/forum-by-category-oracle.xql}
dbqd.contrib.obsolete-packages.bboard.www.forum-by-category-oracle.unapproved_none {dbqd.contrib.obsolete-packages.bboard.www.forum-by-category-oracle.unapproved_none {
      
	select 1 from dual where 1 = 0
    
      } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/obsolete-packages/bboard/www/forum-by-category-oracle.xql}
dbqd.contrib.obsolete-packages.bboard.www.forum-by-category-oracle.rejected_none {dbqd.contrib.obsolete-packages.bboard.www.forum-by-category-oracle.rejected_none {
      
	select 1 from dual where 1 = 0
    
      } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/obsolete-packages/bboard/www/forum-by-category-oracle.xql}
dbqd.contrib.obsolete-packages.bboard.www.forum-by-category.categories_select_none {dbqd.contrib.obsolete-packages.bboard.www.forum-by-category.categories_select_none {
      
    select 1  where 0 = 1

      } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/obsolete-packages/bboard/www/forum-by-category-postgresql.xql}
dbqd.contrib.obsolete-packages.bboard.www.forum-by-category.messages_select_by_cat {dbqd.contrib.obsolete-packages.bboard.www.forum-by-category.messages_select_by_cat {
      
    select message_id, title, num_replies,
         first_names||' '||last_name as full_name,
  	 to_char(last_reply_date,'MM/DD/YY hh12:MI am') as last_updated
    from bboard_messages_by_category b, persons
    where person_id = sender
        and reply_to is null
        and forum_id = :forum_id
  	$category_sql
        $moderated_sql
    order by sent_date desc
	
      } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/obsolete-packages/bboard/www/forum-by-category-postgresql.xql}
dbqd.contrib.obsolete-packages.bboard.www.forum-by-category.unapproved_none {dbqd.contrib.obsolete-packages.bboard.www.forum-by-category.unapproved_none {
      
	select 1  where 1 = 0
    
      } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/obsolete-packages/bboard/www/forum-by-category-postgresql.xql}
dbqd.contrib.obsolete-packages.bboard.www.forum-by-category.rejected_none {dbqd.contrib.obsolete-packages.bboard.www.forum-by-category.rejected_none {
      
	select 1  where 1 = 0
    
      } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/obsolete-packages/bboard/www/forum-by-category-postgresql.xql}
dbqd.contrib.obsolete-packages.bboard.www.forum-by-category.forum_info {dbqd.contrib.obsolete-packages.bboard.www.forum-by-category.forum_info {
      
    select f.short_name as forum_name, f.moderated_p
        from bboard_forums f
        where f.forum_id = :forum_id

      } {} {} {} c:/web/openacs-4/contrib/obsolete-packages/bboard/www/forum-by-category.xql}
dbqd.contrib.obsolete-packages.bboard.www.forum-by-category.category_info {dbqd.contrib.obsolete-packages.bboard.www.forum-by-category.category_info {
      
        select f.forum_id, f.short_name as forum_name, f.moderated_p
            from bboard_categories c, bboard_forums f
            where c.category_id = :category_id
                and c.forum_id = f.forum_id
    
      } {} {} {} c:/web/openacs-4/contrib/obsolete-packages/bboard/www/forum-by-category.xql}
dbqd.contrib.obsolete-packages.bboard.www.forum-by-category.category_info {dbqd.contrib.obsolete-packages.bboard.www.forum-by-category.category_info {
        select short_name as category_name from bboard_categories
          where category_id = :category_id    
      } {} {} {} c:/web/openacs-4/contrib/obsolete-packages/bboard/www/forum-by-category.xql}
dbqd.contrib.obsolete-packages.bboard.www.forum-by-category.messages_select_unmoderated {dbqd.contrib.obsolete-packages.bboard.www.forum-by-category.messages_select_unmoderated {
      
	select message_id, title, num_replies,
               first_names||' '||last_name as full_name
	  from bboard_messages_by_category, persons
	  where category_id = :category_id
	    and person_id = sender
	    and reply_to is null
	    and status = 'unmoderated'
    
      } {} {} {} c:/web/openacs-4/contrib/obsolete-packages/bboard/www/forum-by-category.xql}
dbqd.contrib.obsolete-packages.bboard.www.forum-by-category.rejected_messages_select {dbqd.contrib.obsolete-packages.bboard.www.forum-by-category.rejected_messages_select {
      
	select message_id, title, num_replies,
               first_names||' '||last_name as full_name
	  from bboard_messages_by_category, persons
	  where category_id = :category_id
	    and person_id = sender
	    and reply_to is null
	    and status = 'rejected'
    
      } {} {} {} c:/web/openacs-4/contrib/obsolete-packages/bboard/www/forum-by-category.xql}
dbqd.contrib.obsolete-packages.bboard.www.forum-delete-2-oracle.categories_delete {dbqd.contrib.obsolete-packages.bboard.www.forum-delete-2-oracle.categories_delete {
      
	declare
	    cursor category_cursor is
	        select distinct category_id
                    from bboard_categories c
                    where c.forum_id = :forum_id;
        begin
	    for category_val in category_cursor loop
 
 	        delete from acs_permissions 
                   where object_id = category_val.category_id;

                bboard_category.del(category_val.category_id);
            end loop;
        end;
    
      } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/obsolete-packages/bboard/www/forum-delete-2-oracle.xql}
dbqd.contrib.obsolete-packages.bboard.www.forum-delete-2-oracle.forum_delete {dbqd.contrib.obsolete-packages.bboard.www.forum-delete-2-oracle.forum_delete {
      
	begin
	    bboard_forum.del (:forum_id);
	end;
    
      } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/obsolete-packages/bboard/www/forum-delete-2-oracle.xql}
dbqd.contrib.obsolete-packages.bboard.www.forum-delete-2.categories_delete {dbqd.contrib.obsolete-packages.bboard.www.forum-delete-2.categories_delete {
	declare
	    category_val record;
        begin
	    for category_val in select distinct category_id
                     from bboard_categories c
                    where c.forum_id = :forum_id 
            loop
 
 	        delete from acs_permissions 
                   where object_id = category_val.category_id;

                perform bboard_category__delete(category_val.category_id);
            end loop;
	    return 0;
        end;    
      } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/obsolete-packages/bboard/www/forum-delete-2-postgresql.xql}
dbqd.contrib.obsolete-packages.bboard.www.forum-delete-2.forum_delete {dbqd.contrib.obsolete-packages.bboard.www.forum-delete-2.forum_delete {
	select bboard_forum__delete (:forum_id);
      } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/obsolete-packages/bboard/www/forum-delete-2-postgresql.xql}
dbqd.contrib.obsolete-packages.bboard.www.forum-delete-2.messages_delete {dbqd.contrib.obsolete-packages.bboard.www.forum-delete-2.messages_delete {

        delete from bboard_forum_message_map 
         where forum_id = :forum_id

      } {} {} {} c:/web/openacs-4/contrib/obsolete-packages/bboard/www/forum-delete-2.xql}
dbqd.contrib.obsolete-packages.bboard.www.forum-delete-2.permissions_delete {dbqd.contrib.obsolete-packages.bboard.www.forum-delete-2.permissions_delete {
      
	delete from acs_permissions 
  	  where object_id = :forum_id

      } {} {} {} c:/web/openacs-4/contrib/obsolete-packages/bboard/www/forum-delete-2.xql}
dbqd.contrib.obsolete-packages.bboard.www.forum-delete.forum_info {dbqd.contrib.obsolete-packages.bboard.www.forum-delete.forum_info {
      
    select short_name as forum_name, charter as forum_charter
    from bboard_forums
    where forum_id = :forum_id

      } {} {} {} c:/web/openacs-4/contrib/obsolete-packages/bboard/www/forum-delete.xql}
dbqd.contrib.obsolete-packages.bboard.www.forum-delete.forum_message_count {dbqd.contrib.obsolete-packages.bboard.www.forum-delete.forum_message_count {
      
    select count(*) as message_count
    from bboard_forum_message_map bfmm
    where bfmm.forum_id = :forum_id

      } {} {} {} c:/web/openacs-4/contrib/obsolete-packages/bboard/www/forum-delete.xql}
dbqd.contrib.obsolete-packages.bboard.www.forum-edit.forum_info {dbqd.contrib.obsolete-packages.bboard.www.forum-edit.forum_info {
      
    select short_name, charter, moderated_p from bboard_forums
      where forum_id = :forum_id

      } {} {} {} c:/web/openacs-4/contrib/obsolete-packages/bboard/www/forum-edit.xql}
dbqd.contrib.obsolete-packages.bboard.www.forum-move-2.update_bboard_contexts {dbqd.contrib.obsolete-packages.bboard.www.forum-move-2.update_bboard_contexts {
      
	update acs_objects
	    set context_id = :dest_forum_id
	    where context_id = :forum_id
	          and (object_type = 'bboard_message' or
                       object_type = 'bboard_category')
    
      } {} {} {} c:/web/openacs-4/contrib/obsolete-packages/bboard/www/forum-move-2.xql}
dbqd.contrib.obsolete-packages.bboard.www.forum-move-2.move_bboard_messages {dbqd.contrib.obsolete-packages.bboard.www.forum-move-2.move_bboard_messages {
      
        update bboard_forum_message_map 
            set forum_id = :dest_forum_id
            where forum_id = :forum_id
    
      } {} {} {} c:/web/openacs-4/contrib/obsolete-packages/bboard/www/forum-move-2.xql}
dbqd.contrib.obsolete-packages.bboard.www.forum-move-2.move_bboard_categories {dbqd.contrib.obsolete-packages.bboard.www.forum-move-2.move_bboard_categories {
      
	update bboard_categories
	    set forum_id = :dest_forum_id
            where forum_id = :forum_id
    
      } {} {} {} c:/web/openacs-4/contrib/obsolete-packages/bboard/www/forum-move-2.xql}
dbqd.contrib.obsolete-packages.bboard.www.forum-move.forum_info {dbqd.contrib.obsolete-packages.bboard.www.forum-move.forum_info {
      
    select short_name as forum_name, charter, moderated_p from bboard_forums
      where forum_id = :forum_id

      } {} {} {} c:/web/openacs-4/contrib/obsolete-packages/bboard/www/forum-move.xql}
dbqd.contrib.obsolete-packages.bboard.www.forum-move.allowed_target_forums {dbqd.contrib.obsolete-packages.bboard.www.forum-move.allowed_target_forums {
      
    select forum_id, short_name
      from bboard_forums
      where not forum_id = :forum_id
        and exists (select 1 from all_object_party_privilege_map
                      where object_id = forum_id
                        and party_id in (:user_id, -1)
                        and privilege = 'admin')


      } {} {} {} c:/web/openacs-4/contrib/obsolete-packages/bboard/www/forum-move.xql}
dbqd.contrib.obsolete-packages.bboard.www.forum-oracle.forum_info {dbqd.contrib.obsolete-packages.bboard.www.forum-oracle.forum_info {
      
    select short_name as forum_name, moderated_p,
       acs_permission.permission_p(:forum_id, :user_id, 'admin') as admin_p,
       acs_permission.permission_p(:forum_id, :user_id, 'bboard_create_category') 
          as category_create_p
      from bboard_forums
     where forum_id = :forum_id

      } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/obsolete-packages/bboard/www/forum-oracle.xql}
dbqd.contrib.obsolete-packages.bboard.www.forum-oracle.messages_select {dbqd.contrib.obsolete-packages.bboard.www.forum-oracle.messages_select {
      
	select message_id, title, num_replies,
               first_names||' '||last_name as full_name,
	       to_char(last_reply_date,'MM/DD/YY hh12:Mi am') as last_updated
          from bboard_messages_all b, persons
          where forum_id = :forum_id
	    and sent_date > case when :last_n_days = 0 then '1976-01-01' else to_char(sysdate - :last_n_days) end
	    and person_id = sender
            and reply_to is null
	order by sent_date desc
    
      } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/obsolete-packages/bboard/www/forum-oracle.xql}
dbqd.contrib.obsolete-packages.bboard.www.forum-oracle.categories_select {dbqd.contrib.obsolete-packages.bboard.www.forum-oracle.categories_select {
      
	select c.category_id, c.short_name,
             count(m.message_id) as message_count
	  from bboard_categories c,
	       (select c.category_id, c.message_id
	          from bboard_category_message_map c,
	               bboard_forum_message_map f
	          where c.message_id = f.message_id
                    and f.forum_id = :forum_id) m
	  where c.forum_id = :forum_id
            and m.category_id(+) = c.category_id
	    and (m.message_id is null 
                or m.message_id in (select f.message_id
                                     from bboard_forum_message_map f
                                     where f.forum_id = :forum_id))
	  group by c.category_id, short_name
    
      } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/obsolete-packages/bboard/www/forum-oracle.xql}
dbqd.contrib.obsolete-packages.bboard.www.forum-oracle.messages_select_approved {dbqd.contrib.obsolete-packages.bboard.www.forum-oracle.messages_select_approved {
      
	select message_id, title, num_replies,
               first_names||' '||last_name as full_name,
	       to_char(last_reply_date,'MM/DD/YY hh12:Mi am') as last_updated
          from bboard_messages_all b, persons
          where forum_id = :forum_id
	    and sent_date > case when :last_n_days = 0 then '1976-01-01' else to_char(sysdate - :last_n_days) end
	    and person_id = sender
            and reply_to is null
	    and status = 'approved'
	order by sent_date desc
    
      } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/obsolete-packages/bboard/www/forum-oracle.xql}
dbqd.contrib.obsolete-packages.bboard.www.forum-oracle.categories_select_approved {dbqd.contrib.obsolete-packages.bboard.www.forum-oracle.categories_select_approved {
      
	select c.category_id, c.short_name,
             count(m.message_id) as message_count
	  from bboard_categories c,
	       (select c.category_id, c.message_id
	          from bboard_category_message_map c,
	               bboard_forum_message_map f
	          where c.message_id = f.message_id
                    and f.status = 'approved'
                    and f.forum_id = :forum_id) m
	  where c.forum_id = :forum_id
            and m.category_id(+) = c.category_id
	    and (m.message_id is null 
                or m.message_id in (select f.message_id
                                     from bboard_forum_message_map f
                                     where f.forum_id = :forum_id))
	  group by c.category_id, short_name
    
      } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/obsolete-packages/bboard/www/forum-oracle.xql}
dbqd.contrib.obsolete-packages.bboard.www.forum-oracle.unapproved_none {dbqd.contrib.obsolete-packages.bboard.www.forum-oracle.unapproved_none {
      
	select 1 from dual where 1 = 0
    
      } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/obsolete-packages/bboard/www/forum-oracle.xql}
dbqd.contrib.obsolete-packages.bboard.www.forum-oracle.rejected_none {dbqd.contrib.obsolete-packages.bboard.www.forum-oracle.rejected_none {
      
	select 1 from dual where 1 = 0
    
      } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/obsolete-packages/bboard/www/forum-oracle.xql}
dbqd.contrib.obsolete-packages.bboard.www.forum.forum_info {dbqd.contrib.obsolete-packages.bboard.www.forum.forum_info {
      
    select short_name as forum_name, moderated_p,
       acs_permission__permission_p(:forum_id, :user_id, 'admin') as admin_p,
       acs_permission__permission_p(:forum_id, :user_id, 'bboard_create_category') 
          as category_create_p
      from bboard_forums
     where forum_id = :forum_id

      } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/obsolete-packages/bboard/www/forum-postgresql.xql}
dbqd.contrib.obsolete-packages.bboard.www.forum.messages_select {dbqd.contrib.obsolete-packages.bboard.www.forum.messages_select {
      
	select message_id, title, num_replies,
               first_names||' '||last_name as full_name,
	       to_char(last_reply_date,'MM/DD/YY hh12:MI am') as last_updated
          from bboard_messages_all b, persons
          where forum_id = :forum_id
            and age(sent_date) < case when :last_n_days = 0 
                                 then interval '99 years'
                                 else interval '$last_n_days days'
                                 end
	    and person_id = sender
            and reply_to is null
	order by sent_date desc
    
      } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/obsolete-packages/bboard/www/forum-postgresql.xql}
dbqd.contrib.obsolete-packages.bboard.www.forum.categories_select {dbqd.contrib.obsolete-packages.bboard.www.forum.categories_select {
    
        select short_name, count(message_id) as message_count, category_id
        from bboard_forum_message_map f join
             (bboard_categories c left outer join bboard_category_message_map m using (category_id))
             using (message_id)
        where f.forum_id = :forum_id
        group by category_id, short_name
        order by category_id;
  
      } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/obsolete-packages/bboard/www/forum-postgresql.xql}
dbqd.contrib.obsolete-packages.bboard.www.forum.messages_select_approved {dbqd.contrib.obsolete-packages.bboard.www.forum.messages_select_approved {
      
	select message_id, title, num_replies,
               first_names||' '||last_name as full_name,
	       to_char(last_reply_date,'MM/DD/YY hh12:MI am') as last_updated
          from bboard_messages_all b, persons
          where forum_id = :forum_id
            and age(sent_date) < case when :last_n_days = 0 
                                 then interval '99 years'
                                 else interval '$last_n_days days'
                                 end
	    and person_id = sender
            and reply_to is null
	    and status = 'approved'
	order by sent_date desc
    
      } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/obsolete-packages/bboard/www/forum-postgresql.xql}
dbqd.contrib.obsolete-packages.bboard.www.forum.categories_select_approved {dbqd.contrib.obsolete-packages.bboard.www.forum.categories_select_approved {

        select short_name, count(message_id) as message_count, category_id
        from bboard_forum_message_map f join
             (bboard_categories c left outer join bboard_category_message_map m using (category_id))
             using (message_id)
        where f.forum_id = :forum_id
          and f.status = 'approved'
        group by category_id, short_name
        order by category_id;
    
      } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/obsolete-packages/bboard/www/forum-postgresql.xql}
dbqd.contrib.obsolete-packages.bboard.www.forum.unapproved_none {dbqd.contrib.obsolete-packages.bboard.www.forum.unapproved_none {
      
	select 1  where 1 = 0
    
      } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/obsolete-packages/bboard/www/forum-postgresql.xql}
dbqd.contrib.obsolete-packages.bboard.www.forum.rejected_none {dbqd.contrib.obsolete-packages.bboard.www.forum.rejected_none {
      
	select 1  where 1 = 0
    
      } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/obsolete-packages/bboard/www/forum-postgresql.xql}
dbqd.contrib.obsolete-packages.bboard.www.forum.uncategorized_count {dbqd.contrib.obsolete-packages.bboard.www.forum.uncategorized_count {
      
	select count(*) as uncategorized_count
            from bboard_forum_message_map msg
	    where forum_id = :forum_id
              and not exists (select 1
                              from bboard_category_message_map cat
                              where msg.message_id = cat.message_id)
    
      } {} {} {} c:/web/openacs-4/contrib/obsolete-packages/bboard/www/forum.xql}
dbqd.contrib.obsolete-packages.bboard.www.forum.uncategorized_approved_count {dbqd.contrib.obsolete-packages.bboard.www.forum.uncategorized_approved_count {
      
	select count(*) as uncategorized_count
            from bboard_forum_message_map msg
	    where forum_id = :forum_id
              and status = 'approved'
              and not exists (select 1
                              from bboard_category_message_map cat
                              where msg.message_id = cat.message_id)
    
      } {} {} {} c:/web/openacs-4/contrib/obsolete-packages/bboard/www/forum.xql}
dbqd.contrib.obsolete-packages.bboard.www.forum.messages_select_unmoderated {dbqd.contrib.obsolete-packages.bboard.www.forum.messages_select_unmoderated {
      
	select message_id, title, num_replies,
               first_names||' '||last_name as full_name
	  from bboard_messages_all, persons
	  where forum_id = :forum_id
	    and person_id = sender
	    and reply_to is null
	    and status = 'unmoderated'

      } {} {} {} c:/web/openacs-4/contrib/obsolete-packages/bboard/www/forum.xql}
dbqd.contrib.obsolete-packages.bboard.www.forum.rejected_messages_select {dbqd.contrib.obsolete-packages.bboard.www.forum.rejected_messages_select {
      
	select message_id, title, num_replies,
               first_names||' '||last_name as full_name
	  from bboard_messages_all, persons
	  where forum_id = :forum_id
	    and person_id = sender
	    and reply_to is null
	    and status = 'rejected'
    
      } {} {} {} c:/web/openacs-4/contrib/obsolete-packages/bboard/www/forum.xql}
dbqd.contrib.obsolete-packages.bboard.www.index-oracle.forums_select {dbqd.contrib.obsolete-packages.bboard.www.index-oracle.forums_select {
      
    select forum_id, short_name, moderated_p, charter 
      from bboard_forums f
      where bboard_id = :package_id
        and acs_permission.permission_p(forum_id,:user_id,'bboard_read_forum') = 't'
    order by short_name

      } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/obsolete-packages/bboard/www/index-oracle.xql}
dbqd.contrib.obsolete-packages.bboard.www.index.forums_select {dbqd.contrib.obsolete-packages.bboard.www.index.forums_select {
      
    select forum_id, short_name, moderated_p, charter
      from bboard_forums f
      where bboard_id = :package_id
        and acs_permission__permission_p(forum_id,:user_id,'bboard_read_forum') = 't'
    order by short_name

      } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/obsolete-packages/bboard/www/index-postgresql.xql}
dbqd.contrib.obsolete-packages.bboard.www.message-approve.sender_info {dbqd.contrib.obsolete-packages.bboard.www.message-approve.sender_info {
      
    select sender from acs_messages where message_id = :message_id

      } {} {} {} c:/web/openacs-4/contrib/obsolete-packages/bboard/www/message-approve.xql}
dbqd.contrib.obsolete-packages.bboard.www.message-delete-2-oracle.bboard_delete_threads {dbqd.contrib.obsolete-packages.bboard.www.message-delete-2-oracle.bboard_delete_threads {
      
	delete from bboard_forum_message_map bfm
	    where message_id in (select message_id
                                     from acs_messages m
                                     connect by prior message_id = reply_to
                                     start with message_id = :message_id)
                  and exists (select 1 from all_object_party_privilege_map
                                  where object_id = bfm.message_id
                                        and party_id in (:user_id, -1)
                                        and privilege = 'bboard_delete_message')

    
      } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/obsolete-packages/bboard/www/message-delete-2-oracle.xql}
dbqd.contrib.obsolete-packages.bboard.www.message-delete-2.bboard_delete_threads {dbqd.contrib.obsolete-packages.bboard.www.message-delete-2.bboard_delete_threads {

	delete from bboard_forum_message_map
        where message_id in
          (select m.message_id
           from acs_messages m, acs_messages m2
           where m2.message_id = :message_id
             and m.tree_sortkey between m2.tree_sortkey and tree_right(m2.tree_sortkey))
          and exists (select 1 from all_object_party_privilege_map
                      where object_id = message_id
                        and party_id = :user_id
                        and privilege = 'bboard_delete_message')

      } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/obsolete-packages/bboard/www/message-delete-2-postgresql.xql}
dbqd.contrib.obsolete-packages.bboard.www.message-delete.message_info {dbqd.contrib.obsolete-packages.bboard.www.message-delete.message_info {
      
        select m.message_id, m.reply_to, m.title,
               m.sent_date, m.mime_type, m.content, 
               p.first_names ||' '||p.last_name as full_name
            from acs_messages_all m, persons p, bboard_forum_message_map f
            where m.message_id = :message_id
                and f.message_id = :message_id
                and f.forum_id = :forum_id
                and p.person_id = m.sender
    
      } {} {} {} c:/web/openacs-4/contrib/obsolete-packages/bboard/www/message-delete.xql}
dbqd.contrib.obsolete-packages.bboard.www.message-delete.forum_short_name {dbqd.contrib.obsolete-packages.bboard.www.message-delete.forum_short_name {
      
    select short_name as forum_name from bboard_forums
      where forum_id = :forum_id

      } {} {} {} c:/web/openacs-4/contrib/obsolete-packages/bboard/www/message-delete.xql}
dbqd.contrib.obsolete-packages.bboard.www.message-edit-2.forum_short_name {dbqd.contrib.obsolete-packages.bboard.www.message-edit-2.forum_short_name {
      
    select short_name as forum_name from bboard_forums
      where forum_id = :forum_id

      } {} {} {} c:/web/openacs-4/contrib/obsolete-packages/bboard/www/message-edit-2.xql}
dbqd.contrib.obsolete-packages.bboard.www.message-edit-2.forum_short_name {dbqd.contrib.obsolete-packages.bboard.www.message-edit-2.forum_short_name {
      
    select short_name as forum_name from bboard_forums
      where forum_id = :forum_id

      } {} {} {} c:/web/openacs-4/contrib/obsolete-packages/bboard/www/message-edit-2.xql}
dbqd.contrib.obsolete-packages.bboard.www.message-edit.message_info {dbqd.contrib.obsolete-packages.bboard.www.message-edit.message_info {
      
    select message_id, reply_to, title, mime_type, content
        from acs_messages_all m
        where message_id = :message_id

      } {} {} {} c:/web/openacs-4/contrib/obsolete-packages/bboard/www/message-edit.xql}
dbqd.contrib.obsolete-packages.bboard.www.message-edit.first_category {dbqd.contrib.obsolete-packages.bboard.www.message-edit.first_category {
      
    select min(category_id) as category_id from bboard_category_message_map
        where message_id = :message_id
        group by message_id

      } {} {} {} c:/web/openacs-4/contrib/obsolete-packages/bboard/www/message-edit.xql}
dbqd.contrib.obsolete-packages.bboard.www.message-edit.forum_short_name {dbqd.contrib.obsolete-packages.bboard.www.message-edit.forum_short_name {
      
    select short_name as forum_name from bboard_forums
      where forum_id = :forum_id

      } {} {} {} c:/web/openacs-4/contrib/obsolete-packages/bboard/www/message-edit.xql}
dbqd.contrib.obsolete-packages.bboard.www.message-edit.quote_info {dbqd.contrib.obsolete-packages.bboard.www.message-edit.quote_info {
      
    select m.reply_to, m.title, m.sent_date,
           m.mime_type, m.content, 
           p.first_names||' '||p.last_name as full_name
      from acs_messages_all m, persons p
      where message_id = :reply_to
        and person_id = sender

      } {} {} {} c:/web/openacs-4/contrib/obsolete-packages/bboard/www/message-edit.xql}
dbqd.contrib.obsolete-packages.bboard.www.message-edit.category_list {dbqd.contrib.obsolete-packages.bboard.www.message-edit.category_list {
      
    select c.category_id, c.short_name
      from bboard_categories c
      where forum_id = :forum_id

      } {} {} {} c:/web/openacs-4/contrib/obsolete-packages/bboard/www/message-edit.xql}
dbqd.contrib.obsolete-packages.bboard.www.message-mail-2-oracle.forward_queue {dbqd.contrib.obsolete-packages.bboard.www.message-mail-2-oracle.forward_queue {
      
        begin
            acs_message.send (
                message_id => :new_message_id,
                to_address => :email,
                grouping_id => :new_message_id,
                wait_until => sysdate
            );
        end;
    
      } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/obsolete-packages/bboard/www/message-mail-2-oracle.xql}
dbqd.contrib.obsolete-packages.bboard.www.message-mail-2.forward_queue {dbqd.contrib.obsolete-packages.bboard.www.message-mail-2.forward_queue {

            select acs_message__send (
                :new_message_id,
                :email,
                :new_message_id,
                current_timestamp
            );
    
      } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/obsolete-packages/bboard/www/message-mail-2-postgresql.xql}
dbqd.contrib.obsolete-packages.bboard.www.message-mail-2.user_email {dbqd.contrib.obsolete-packages.bboard.www.message-mail-2.user_email {
      
        select email as user_email from parties where party_id = :user_id
    
      } {} {} {} c:/web/openacs-4/contrib/obsolete-packages/bboard/www/message-mail-2.xql}
dbqd.contrib.obsolete-packages.bboard.www.message-mail-2.message_info {dbqd.contrib.obsolete-packages.bboard.www.message-mail-2.message_info {
      
        select reply_to, sender, title, mime_type, content
            from acs_messages_all
            where message_id = :message_id
    
      } {} {} {} c:/web/openacs-4/contrib/obsolete-packages/bboard/www/message-mail-2.xql}
dbqd.contrib.obsolete-packages.bboard.www.message-mail.forum_short_name {dbqd.contrib.obsolete-packages.bboard.www.message-mail.forum_short_name {
      
    select short_name as forum_name from bboard_forums
      where forum_id = :forum_id

      } {} {} {} c:/web/openacs-4/contrib/obsolete-packages/bboard/www/message-mail.xql}
dbqd.contrib.obsolete-packages.bboard.www.message-mail.sender_email {dbqd.contrib.obsolete-packages.bboard.www.message-mail.sender_email {
      
    select email as sender_email from parties
        where party_id = :user_id

      } {} {} {} c:/web/openacs-4/contrib/obsolete-packages/bboard/www/message-mail.xql}
dbqd.contrib.obsolete-packages.bboard.www.message-mail.message_info {dbqd.contrib.obsolete-packages.bboard.www.message-mail.message_info {
      
    select reply_to, title, sent_date,
           mime_type, content, 
           first_names||' '||last_name as full_name
      from acs_messages_all m, persons p
      where message_id = :message_id
        and person_id = sender

      } {} {} {} c:/web/openacs-4/contrib/obsolete-packages/bboard/www/message-mail.xql}
dbqd.contrib.obsolete-packages.bboard.www.message-move-2-oracle.update_bboard_contexts {dbqd.contrib.obsolete-packages.bboard.www.message-move-2-oracle.update_bboard_contexts {
      
	update acs_objects
	    set context_id = :dest_forum_id
	    where context_id = :forum_id
	          and object_type = 'bboard_message'
                  and object_id in (select message_id
                                        from acs_messages m
                                        connect by prior message_id = reply_to
                                        start with message_id = :message_id) 
    
      } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/obsolete-packages/bboard/www/message-move-2-oracle.xql}
dbqd.contrib.obsolete-packages.bboard.www.message-move-2-oracle.move_bboard_messages {dbqd.contrib.obsolete-packages.bboard.www.message-move-2-oracle.move_bboard_messages {
      
        update bboard_forum_message_map 
            set forum_id = :dest_forum_id
            where forum_id = :forum_id
                  and message_id in (select message_id
                                         from acs_messages m
                                         connect by prior message_id = reply_to
                                         start with message_id = :message_id) 
    
      } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/obsolete-packages/bboard/www/message-move-2-oracle.xql}
dbqd.contrib.obsolete-packages.bboard.www.message-move-2.update_bboard_contexts {dbqd.contrib.obsolete-packages.bboard.www.message-move-2.update_bboard_contexts {

	update acs_objects
	    set context_id = :dest_forum_id
	    where context_id = :forum_id
              and object_type = 'bboard_message'
              and object_id in 
                  (select m.message_id
                     from acs_messages m, acs_messages m2
                    where m2.message_id = :message_id
                      and m.tree_sortkey between m2.tree_sortkey and tree_right(m2.tree_sortkey)) 
    
      } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/obsolete-packages/bboard/www/message-move-2-postgresql.xql}
dbqd.contrib.obsolete-packages.bboard.www.message-move-2.move_bboard_messages {dbqd.contrib.obsolete-packages.bboard.www.message-move-2.move_bboard_messages {

        update bboard_forum_message_map 
            set forum_id = :dest_forum_id
            where forum_id = :forum_id
              and message_id in 
                  (select m.message_id
                   from acs_messages m, acs_messages m2
                   where m2.message_id = :message_id
                     and m.tree_sortkey between m2.tree_sortkey and tree_right(m2.tree_sortkey))
    
      } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/obsolete-packages/bboard/www/message-move-2-postgresql.xql}
dbqd.contrib.obsolete-packages.bboard.www.message-move.message_info {dbqd.contrib.obsolete-packages.bboard.www.message-move.message_info {
      
    select p.first_names ||' '|| p.last_name as sender_name, b.title,
           b.mime_type as msg_mime_type, b.content
      from bboard_messages_all b, persons p
      where message_id = :message_id
            and b.sender = p.person_id

      } {} {} {} c:/web/openacs-4/contrib/obsolete-packages/bboard/www/message-move.xql}
dbqd.contrib.obsolete-packages.bboard.www.message-move.allowed_target_forums {dbqd.contrib.obsolete-packages.bboard.www.message-move.allowed_target_forums {
      
    select forum_id, short_name
      from bboard_forums
      where not forum_id = :forum_id
        and exists (select 1 from all_object_party_privilege_map
                      where object_id = forum_id
                        and party_id = :user_id
                        and privilege = 'admin')


      } {} {} {} c:/web/openacs-4/contrib/obsolete-packages/bboard/www/message-move.xql}
dbqd.contrib.obsolete-packages.bboard.www.message-new-2.forum_short_name {dbqd.contrib.obsolete-packages.bboard.www.message-new-2.forum_short_name {
      
    select short_name as forum_name from bboard_forums
      where forum_id = :forum_id

      } {} {} {} c:/web/openacs-4/contrib/obsolete-packages/bboard/www/message-new-2.xql}
dbqd.contrib.obsolete-packages.bboard.www.message-new-3-oracle.grant {dbqd.contrib.obsolete-packages.bboard.www.message-new-3-oracle.grant {
      
	    begin
	    acs_permission.grant_permission(:message_id, :user_id, 'bboard_write_message');
	    end;
	
      } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/obsolete-packages/bboard/www/message-new-3-oracle.xql}
dbqd.contrib.obsolete-packages.bboard.www.message-new-3.grant {dbqd.contrib.obsolete-packages.bboard.www.message-new-3.grant {

	    select acs_permission__grant_permission(:message_id, :user_id, 'bboard_write_message');
	
      } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/obsolete-packages/bboard/www/message-new-3-postgresql.xql}
dbqd.contrib.obsolete-packages.bboard.www.message-new.forum_short_name {dbqd.contrib.obsolete-packages.bboard.www.message-new.forum_short_name {
      
    select short_name as forum_name from bboard_forums
      where forum_id = :forum_id

      } {} {} {} c:/web/openacs-4/contrib/obsolete-packages/bboard/www/message-new.xql}
dbqd.contrib.obsolete-packages.bboard.www.message-new.quote_info {dbqd.contrib.obsolete-packages.bboard.www.message-new.quote_info {
      
    select reply_to, title, sent_date,
           mime_type, content, 
           first_names||' '||last_name as full_name
      from acs_messages_all m, persons p
      where message_id = :reply_to
        and person_id = sender

      } {} {} {} c:/web/openacs-4/contrib/obsolete-packages/bboard/www/message-new.xql}
dbqd.contrib.obsolete-packages.bboard.www.message-new.quote_first_category {dbqd.contrib.obsolete-packages.bboard.www.message-new.quote_first_category {
      
    select min(category_id) as category_id from bboard_category_message_map
      where message_id = :reply_to
      group by message_id

      } {} {} {} c:/web/openacs-4/contrib/obsolete-packages/bboard/www/message-new.xql}
dbqd.contrib.obsolete-packages.bboard.www.message-new.category_list {dbqd.contrib.obsolete-packages.bboard.www.message-new.category_list {
      
    select category_id, short_name
      from bboard_categories
      where forum_id = :forum_id

      } {} {} {} c:/web/openacs-4/contrib/obsolete-packages/bboard/www/message-new.xql}
dbqd.contrib.obsolete-packages.bboard.www.message-oracle.forum_short_name {dbqd.contrib.obsolete-packages.bboard.www.message-oracle.forum_short_name {
      
    select short_name as forum_name,
       acs_permission.permission_p(:forum_id, :user_id, 'admin') as admin_p,
       acs_permission.permission_p(:forum_id, :user_id, 'bboard_moderate_forum') 
         as moderate_p
      from bboard_forums
      where forum_id = :forum_id

      } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/obsolete-packages/bboard/www/message-oracle.xql}
dbqd.contrib.obsolete-packages.bboard.www.message-oracle.message_info {dbqd.contrib.obsolete-packages.bboard.www.message-oracle.message_info {
      
  select message_id, reply_to, title, 
      to_char(sent_date, 'Month DD, YYYY HH:Mi am') as pretty_date, sender as user_id,
      mime_type, content, first_names||' '||last_name as full_name,
      acs_permission.permission_p(message_id, :user_id,
                                  'bboard_write_message') as write_p
    from acs_messages_all m, persons p
    where message_id = :message_id
      and person_id = sender

      } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/obsolete-packages/bboard/www/message-oracle.xql}
dbqd.contrib.obsolete-packages.bboard.www.message-oracle.message_replies {dbqd.contrib.obsolete-packages.bboard.www.message-oracle.message_replies {
      
    select m.message_id, m.reply_to, m.title, m.mime_type, m.content, 
         to_char(m.sent_date,'Month DD, YYYY HH:Mi am') as pretty_date, sender as user_id,
         p.first_names||' '||p.last_name as full_name, 
         mt.depth - 1 as thread_depth, rownum,
         acs_permission.permission_p(m.message_id, :user_id,
                                  'bboard_write_message') as write_p
        from acs_messages_all m, persons p,
            (select message_id, level as depth, rownum as seqnum
                from acs_messages
                connect by prior message_id = reply_to
                start with message_id = :message_id) mt
        where m.message_id <> :message_id
            and p.person_id = m.sender
            and m.message_id = mt.message_id
            and m.message_id in (select bfmm.message_id 
                                     from bboard_forum_message_map bfmm
                                     where bfmm.forum_id = :forum_id)
    order by m.sent_date

      } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/obsolete-packages/bboard/www/message-oracle.xql}
dbqd.contrib.obsolete-packages.bboard.www.message.forum_short_name {dbqd.contrib.obsolete-packages.bboard.www.message.forum_short_name {
      
    select short_name as forum_name,
       acs_permission__permission_p(:forum_id, :user_id, 'admin') as admin_p,
       acs_permission__permission_p(:forum_id, :user_id, 'bboard_moderate_forum') 
         as moderate_p
      from bboard_forums
      where forum_id = :forum_id

      } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/obsolete-packages/bboard/www/message-postgresql.xql}
dbqd.contrib.obsolete-packages.bboard.www.message.message_info {dbqd.contrib.obsolete-packages.bboard.www.message.message_info {
      
  select message_id, reply_to, title, 
      to_char(sent_date, 'Month DD, YYYY HH:MI am') as pretty_date, sender as user_id,
      mime_type, content, first_names||' '||last_name as full_name,
      acs_permission__permission_p(message_id, :user_id,
                                  'bboard_write_message') as write_p
    from acs_messages_all m, persons p
    where message_id = :message_id
      and person_id = sender

      } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/obsolete-packages/bboard/www/message-postgresql.xql}
dbqd.contrib.obsolete-packages.bboard.www.message.message_replies {dbqd.contrib.obsolete-packages.bboard.www.message.message_replies {

    select m.message_id, m.reply_to, m.title, m.mime_type, m.content, 
           to_char(m.sent_date,'Month DD, YYYY HH:MI am') as pretty_date, m.sender as user_id,
           p.first_names||' '||p.last_name as full_name, 
           tree_level(m.tree_sortkey) - 1 as thread_depth, 
           acs_permission__permission_p(m.message_id, :user_id,
                                       'bboard_write_message') as write_p
      from acs_messages_all m, acs_messages m2, persons p, bboard_forum_message_map bfmm
     where m2.message_id = :message_id
       and m.message_id <> :message_id
       and bfmm.forum_id = :forum_id
       and m.tree_sortkey between m2.tree_sortkey and tree_right(m2.tree_sortkey) 
       and p.person_id = m.sender
       and m.message_id = bfmm.message_id 
     order by m.sent_date

      } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/obsolete-packages/bboard/www/message-postgresql.xql}
dbqd.contrib.obsolete-packages.bboard.www.message-threaded-oracle.forum_short_name {dbqd.contrib.obsolete-packages.bboard.www.message-threaded-oracle.forum_short_name {
      
    select short_name as forum_name,
       acs_permission.permission_p(:forum_id, :user_id, 'admin') as admin_p,
       acs_permission.permission_p(:forum_id, :user_id, 'bboard_moderate_forum') 
         as moderate_p
      from bboard_forums
      where forum_id = :forum_id

      } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/obsolete-packages/bboard/www/message-threaded-oracle.xql}
dbqd.contrib.obsolete-packages.bboard.www.message-threaded-oracle.messages_and_replies {dbqd.contrib.obsolete-packages.bboard.www.message-threaded-oracle.messages_and_replies {
      
  select m.message_id, m.reply_to, m.title, m.sent_date, m.mime_type,
         to_char(m.sent_date, 'Month DD, YYYY HH:Mi am') as pretty_date,
         m.content, p.first_names||' '||p.last_name as full_name, 
         p.person_id as user_id,
         mt.depth - 1 as thread_depth,
      acs_permission.permission_p(m.message_id, :user_id,
                                  'bboard_write_message') as write_p
    from acs_messages_all m, persons p, 
      (select message_id, level as depth, rownum as seqnum
         from acs_messages im
         connect by prior message_id = reply_to
         start with message_id = :message_id) mt
    where p.person_id = m.sender
      and m.message_id = mt.message_id
      and m.message_id in (select bfmm.message_id 
                               from bboard_forum_message_map bfmm
                               where bfmm.forum_id = :forum_id)
      order by seqnum

      } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/obsolete-packages/bboard/www/message-threaded-oracle.xql}
dbqd.contrib.obsolete-packages.bboard.www.message-threaded.forum_short_name {dbqd.contrib.obsolete-packages.bboard.www.message-threaded.forum_short_name {
      
    select short_name as forum_name,
       acs_permission__permission_p(:forum_id, :user_id, 'admin') as admin_p,
       acs_permission__permission_p(:forum_id, :user_id, 'bboard_moderate_forum') 
         as moderate_p
      from bboard_forums
      where forum_id = :forum_id

      } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/obsolete-packages/bboard/www/message-threaded-postgresql.xql}
dbqd.contrib.obsolete-packages.bboard.www.message-threaded.messages_and_replies {dbqd.contrib.obsolete-packages.bboard.www.message-threaded.messages_and_replies {

  select m.message_id, m.reply_to, m.title, m.sent_date, m.mime_type,
         to_char(m.sent_date, 'Month DD, YYYY HH:MI am') as pretty_date,
         m.content, p.first_names||' '||p.last_name as full_name, 
         p.person_id as user_id,
         tree_level(m.tree_sortkey) - 1 as thread_depth, 
      acs_permission__permission_p(m.message_id, :user_id,
                                  'bboard_write_message') as write_p
    from acs_messages_all m, persons p, acs_messages m2, bboard_forum_message_map bfmm
   where m2.message_id = :message_id
     and bfmm.forum_id = :forum_id
     and m.tree_sortkey between m2.tree_sortkey and tree_right(m2.tree_sortkey)
     and p.person_id = m.sender
     and m.message_id = bfmm.message_id 
   order by m.tree_sortkey

      } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/obsolete-packages/bboard/www/message-threaded-postgresql.xql}
dbqd.contrib.obsolete-packages.bboard.www.message-threaded.thread_title {dbqd.contrib.obsolete-packages.bboard.www.message-threaded.thread_title {
      
    select title
      from acs_messages_all
      where message_id = :message_id

      } {} {} {} c:/web/openacs-4/contrib/obsolete-packages/bboard/www/message-threaded.xql}
dbqd.contrib.obsolete-packages.bboard.www.messages-by-user.user_info {dbqd.contrib.obsolete-packages.bboard.www.messages-by-user.user_info {
      
    select first_names||' '||last_name as full_name
      from persons
      where person_id = :user_id

      } {} {} {} c:/web/openacs-4/contrib/obsolete-packages/bboard/www/messages-by-user.xql}
dbqd.contrib.obsolete-packages.bboard.www.messages-by-user.forum_info {dbqd.contrib.obsolete-packages.bboard.www.messages-by-user.forum_info {
      
    select short_name as forum_name, moderated_p from bboard_forums
      where forum_id = :forum_id

      } {} {} {} c:/web/openacs-4/contrib/obsolete-packages/bboard/www/messages-by-user.xql}
dbqd.contrib.obsolete-packages.bboard.www.messages-by-user.messages_select {dbqd.contrib.obsolete-packages.bboard.www.messages-by-user.messages_select {
      
        select title, num_replies, message_id,
               first_names||' '||last_name as full_name
        from bboard_messages_all, persons
        where sender = :user_id
              and forum_id = :forum_id
              and person_id = sender
    
      } {} {} {} c:/web/openacs-4/contrib/obsolete-packages/bboard/www/messages-by-user.xql}
dbqd.contrib.obsolete-packages.bboard.www.messages-by-user.messages_select {dbqd.contrib.obsolete-packages.bboard.www.messages-by-user.messages_select {
      
        select title, num_replies, message_id,
               first_names||' '||last_name as full_name
        from bboard_messages_all, persons
        where sender = :user_id
              and forum_id = :forum_id
              and person_id = sender
    
      } {} {} {} c:/web/openacs-4/contrib/obsolete-packages/bboard/www/messages-by-user.xql}
dbqd.contrib.obsolete-packages.bboard.www.messages-by-user.alt_forums_select {dbqd.contrib.obsolete-packages.bboard.www.messages-by-user.alt_forums_select {
      
    select forum_id, short_name
    from bboard_forums bf
    where not forum_id = :forum_id
          and bboard_id = :package_id
          and exists (select 1
                      from bboard_messages_all bma
                      where sender = :user_id 
                            and bma.forum_id = bf.forum_id)
          and exists (select 1 from all_object_party_privilege_map
                          where object_id = bf.forum_id
                            and party_id = :current_user_id
                            and privilege = 'bboard_read_forum')

      } {} {} {} c:/web/openacs-4/contrib/obsolete-packages/bboard/www/messages-by-user.xql}
dbqd.contrib.obsolete-packages.bboard.www.search-oracle.im_convert_query {dbqd.contrib.obsolete-packages.bboard.www.search-oracle.im_convert_query {
      
    select bboard_im_convert(:query) as query from dual

      } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/obsolete-packages/bboard/www/search-oracle.xql}
dbqd.contrib.obsolete-packages.bboard.www.search-oracle.bboard_search {dbqd.contrib.obsolete-packages.bboard.www.search-oracle.bboard_search {
      
	select score(10) as the_score, message_id,
            m.title, m.num_replies, to_char(m.sent_date,'MM/DD/YYYY') as sent_date,
	    p.first_names||' '||p.last_name as full_name
	  from bboard_messages_all m, persons p, bboard_forums f
	  where contains(content, :query, 10) > 0
	    and m.sender = p.person_id
	    and m.forum_id = :forum_id
	    and f.forum_id = m.forum_id
	    and f.bboard_id = :package_id
	  order by score(10) desc
    
      } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/obsolete-packages/bboard/www/search-oracle.xql}
dbqd.contrib.obsolete-packages.bboard.www.search.im_convert_query {dbqd.contrib.obsolete-packages.bboard.www.search.im_convert_query {
      
    select :query as query 

      } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/obsolete-packages/bboard/www/search-postgresql.xql}
dbqd.contrib.obsolete-packages.bboard.www.search.bboard_search {dbqd.contrib.obsolete-packages.bboard.www.search.bboard_search {
      
	select 10 as the_score, message_id,
            m.title, m.num_replies, to_char(m.sent_date,'MM/DD/YYYY') as sent_date,
	    p.first_names||' '||p.last_name as full_name
	  from bboard_messages_all m, persons p, bboard_forums f
          where content like '%' || :query || '%'
	    and m.sender = p.person_id
	    and m.forum_id = :forum_id
	    and f.forum_id = m.forum_id
	    and f.bboard_id = :package_id

      } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/obsolete-packages/bboard/www/search-postgresql.xql}
dbqd.contrib.obsolete-packages.bboard.www.simple-message-oracle.get_attachments {dbqd.contrib.obsolete-packages.bboard.www.simple-message-oracle.get_attachments {
      
	select object_id as file_id, cr.title, ci.name
            from acs_objects ao, cr_items ci, cr_revisions cr
            where object_id = ci.item_id and
                  live_revision = revision_id and
	          object_type = 'content_item' and
                  context_id = :id
    
      } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/obsolete-packages/bboard/www/simple-message-oracle.xql}
dbqd.contrib.obsolete-packages.bboard.www.simple-message.get_attachments {dbqd.contrib.obsolete-packages.bboard.www.simple-message.get_attachments {
      
	select object_id as file_id, cr.title, ci.name
            from acs_objects ao, cr_items ci, cr_revisions cr
            where object_id = ci.item_id and
                  live_revision = revision_id and
	          object_type = 'content_item' and
                  context_id = :id
    
      } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/obsolete-packages/bboard/www/simple-message-postgresql.xql}
dbqd.contrib.obsolete-packages.bboard.www.subscriptions.get_forum_subs {dbqd.contrib.obsolete-packages.bboard.www.subscriptions.get_forum_subs {
      
    select bfs.forum_id, short_name as name
      from bboard_forum_subscribers bfs, bboard_forums bf
      where bfs.forum_id = bf.forum_id
            and bfs.subscriber_id = :user_id
      order by forum_id asc

      } {} {} {} c:/web/openacs-4/contrib/obsolete-packages/bboard/www/subscriptions.xql}
dbqd.contrib.obsolete-packages.bboard.www.subscriptions.get_category_subs {dbqd.contrib.obsolete-packages.bboard.www.subscriptions.get_category_subs {
      
    select bcs.category_id, short_name as name, forum_id
      from bboard_category_subscribers bcs, bboard_categories bc
      where bcs.category_id = bc.category_id
            and bcs.subscriber_id = :user_id
      order by category_id asc

      } {} {} {} c:/web/openacs-4/contrib/obsolete-packages/bboard/www/subscriptions.xql}
dbqd.contrib.obsolete-packages.bboard.www.subscriptions.get_thread_subs {dbqd.contrib.obsolete-packages.bboard.www.subscriptions.get_thread_subs {
      
    select thread_id, title as name, forum_id
      from bboard_thread_subscribers bts, bboard_messages_all bma
      where bts.thread_id = bma.message_id
            and bts.subscriber_id = :user_id
      order by thread_id asc

      } {} {} {} c:/web/openacs-4/contrib/obsolete-packages/bboard/www/subscriptions.xql}
dbqd.contrib.obsolete-packages.bboard-portlets.www.summarize-oracle.select_bboard {dbqd.contrib.obsolete-packages.bboard-portlets.www.summarize-oracle.select_bboard {
      
    select b.forum_id,
           b.short_name,
           site_node.url(sn.node_id) as url,
           acs_object.name(sn.object_id) as bboard_name
      from bboard_forums b, 
           site_nodes sn, 
           apm_packages apm
     where sn.object_id = b.bboard_id(+)
       and sn.parent_id = :node_id
       and sn.object_id = apm.package_id
       and apm.package_key = 'bboard'
     order by lower(bboard_name)

      } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/obsolete-packages/bboard-portlets/www/summarize-oracle.xql}
dbqd.contrib.obsolete-packages.bboard-portlets.www.summarize.select_bboard {dbqd.contrib.obsolete-packages.bboard-portlets.www.summarize.select_bboard {

    select b.forum_id,
           b.short_name,
           site_node__url(sn.node_id) as url,
           acs_object__name(sn.object_id) as bboard_name
      from bboard_forums b left join site_nodes sn on (sn.object_id = b.bboard_id), 
           apm_packages apm
     where sn.parent_id = :node_id
       and sn.object_id = apm.package_id
       and apm.package_key = 'bboard'
     order by 4

      } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/obsolete-packages/bboard-portlets/www/summarize-postgresql.xql}
dbqd.contrib.obsolete-packages.mp3-jukebox.www.admin.file-search.mp3_search {dbqd.contrib.obsolete-packages.mp3-jukebox.www.admin.file-search.mp3_search {
      $select_sql
      } {} {} {} c:/web/openacs-4/contrib/obsolete-packages/mp3-jukebox/www/admin/file-search.xql}
dbqd.contrib.obsolete-packages.mp3-jukebox.www.admin.index-oracle.playlist_info {dbqd.contrib.obsolete-packages.mp3-jukebox.www.admin.index-oracle.playlist_info {
      
    select name, mp.playlist_id, nvl(sc.songs,0) as songs 
    from   acs_objects, mp3_playlists mp,
           mp3_playlist_song_count sc
    where object_id = mp.playlist_id
     and context_id = :package_id
     and mp.playlist_id = sc.playlist_id(+)
    order by name

      } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/obsolete-packages/mp3-jukebox/www/admin/index-oracle.xql}
dbqd.contrib.obsolete-packages.mp3-jukebox.www.admin.index-oracle.mp3_info {dbqd.contrib.obsolete-packages.mp3-jukebox.www.admin.index-oracle.mp3_info {
      
select title, mp3_id, creation_date
from   (select title, mp3_id, creation_date
        from   mp3_mp3s_not_deleted, acs_objects
        where  mp3_id = object_id
        and    creation_date > sysdate - 1
        order by creation_date desc)
where  rownum < 10

      } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/obsolete-packages/mp3-jukebox/www/admin/index-oracle.xql}
dbqd.contrib.obsolete-packages.mp3-jukebox.www.admin.index.mp3_info {dbqd.contrib.obsolete-packages.mp3-jukebox.www.admin.index.mp3_info {

select title, mp3_id, creation_date
from   (select title, mp3_id, creation_date
        from   mp3_mp3s_not_deleted, acs_objects
        where  mp3_id = object_id
        and    creation_date > current_timestamp - 1
        order by creation_date desc) nd
	limit 10

      } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/obsolete-packages/mp3-jukebox/www/admin/index-postgresql.xql}
dbqd.contrib.obsolete-packages.mp3-jukebox.www.admin.index.playlist_info {dbqd.contrib.obsolete-packages.mp3-jukebox.www.admin.index.playlist_info {

	    select name, mp.playlist_id, coalesce(sc.songs,0) as songs 
    from   acs_objects
		join
	mp3_playlists mp on (object_id = mp.playlist_id)
		left join
       	mp3_playlist_song_count sc using (playlist_id)
    where context_id = :package_id
    order by name

      } {} {} {} c:/web/openacs-4/contrib/obsolete-packages/mp3-jukebox/www/admin/index.xql}
dbqd.contrib.obsolete-packages.mp3-jukebox.www.admin.mp3-add-2-oracle.fix_creation {dbqd.contrib.obsolete-packages.mp3-jukebox.www.admin.mp3-add-2-oracle.fix_creation {

update acs_objects
set    creation_user = :creation_user,
       creation_ip = :creation_ip,
       creation_date = sysdate,
       context_id = :package_id
where object_id = :mp3_id

      } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/obsolete-packages/mp3-jukebox/www/admin/mp3-add-2-oracle.xql}
dbqd.contrib.obsolete-packages.mp3-jukebox.www.admin.mp3-add-2-oracle.add_mp3 {dbqd.contrib.obsolete-packages.mp3-jukebox.www.admin.mp3-add-2-oracle.add_mp3 {

begin
   :1 := mp3.new(
      mp3_id => :mp3_id,
      file_path => :client_filename,
      title => :mp3_title,
      $extra_vars
      creation_user => :creation_user,
      creation_ip => :creation_ip,
      creation_date => sysdate,
      context_id => :package_id
);
end;

      } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/obsolete-packages/mp3-jukebox/www/admin/mp3-add-2-oracle.xql}
dbqd.contrib.obsolete-packages.mp3-jukebox.www.admin.mp3-add-2-oracle.undelete_mp3 {dbqd.contrib.obsolete-packages.mp3-jukebox.www.admin.mp3-add-2-oracle.undelete_mp3 {

update mp3_mp3s
set    title = :mp3_title,
       $extra_vars
       deleted_p = 'f'
where  mp3_id = :mp3_id

      } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/obsolete-packages/mp3-jukebox/www/admin/mp3-add-2-oracle.xql}
dbqd.contrib.obsolete-packages.mp3-jukebox.www.admin.mp3-add-2-oracle.update_mp3_info {dbqd.contrib.obsolete-packages.mp3-jukebox.www.admin.mp3-add-2-oracle.update_mp3_info {} {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/obsolete-packages/mp3-jukebox/www/admin/mp3-add-2-oracle.xql}
dbqd.contrib.obsolete-packages.mp3-jukebox.www.admin.mp3-add-2.fix_creation {dbqd.contrib.obsolete-packages.mp3-jukebox.www.admin.mp3-add-2.fix_creation {

update acs_objects
set    creation_user = :creation_user,
       creation_ip = :creation_ip,
       creation_date = current_timestamp,
       context_id = :package_id
where object_id = :mp3_id

      } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/obsolete-packages/mp3-jukebox/www/admin/mp3-add-2-postgresql.xql}
dbqd.contrib.obsolete-packages.mp3-jukebox.www.admin.mp3-add-2.add_mp3 {dbqd.contrib.obsolete-packages.mp3-jukebox.www.admin.mp3-add-2.add_mp3 {

      select mp3__new(
	:mp3_id,
	:client_filename,
	:mp3_title

      );

      } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/obsolete-packages/mp3-jukebox/www/admin/mp3-add-2-postgresql.xql}
dbqd.contrib.obsolete-packages.mp3-jukebox.www.admin.mp3-add-2.update_mp3_info {dbqd.contrib.obsolete-packages.mp3-jukebox.www.admin.mp3-add-2.update_mp3_info {

update mp3_mp3s
set 	artist = :artist,
	bitrate = :bitrate,
	album = :album,
	tracknum = :tracknum,
	genre = :genre,
	year = :year,
	layer = :layer,
	copyright_p = :copyright_p,
	version = :version,
	mode_num = :mode_num,
	stereo_p = :stereo_p,
	frequency = :frequency,
	minutes = :minutes
where 	mp3_id = :mp3_id

      } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/obsolete-packages/mp3-jukebox/www/admin/mp3-add-2-postgresql.xql}
dbqd.contrib.obsolete-packages.mp3-jukebox.www.admin.mp3-add-2.undelete_mp3 {dbqd.contrib.obsolete-packages.mp3-jukebox.www.admin.mp3-add-2.undelete_mp3 {

update mp3_mp3s
set	file_path = :client_filename,
	title = :mp3_title,
	artist = :artist,
	bitrate = :bitrate,
	album = :album,
	tracknum = :tracknum,
	genre = :genre,
	year = :year,
	layer = :layer,
	copyright_p = :copyright_p,
	version = :version,
	mode_num = :mode_num,
	stereo_p = :stereo_p,
	frequency = :frequency,
	minutes = :minutes,
        deleted_p = 'f'
where  mp3_id = :mp3_id

      } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/obsolete-packages/mp3-jukebox/www/admin/mp3-add-2-postgresql.xql}
dbqd.contrib.obsolete-packages.mp3-jukebox.www.admin.mp3-add-2.check_file_name {dbqd.contrib.obsolete-packages.mp3-jukebox.www.admin.mp3-add-2.check_file_name {
      
        select deleted_p 
        from   mp3_mp3s
        where  file_path = :client_filename
      } {} {} {} c:/web/openacs-4/contrib/obsolete-packages/mp3-jukebox/www/admin/mp3-add-2.xql}
dbqd.contrib.obsolete-packages.mp3-jukebox.www.admin.mp3-add-2.get_mp3_id {dbqd.contrib.obsolete-packages.mp3-jukebox.www.admin.mp3-add-2.get_mp3_id {
      
select mp3_id 
from   mp3_mp3s 
where  file_path = :client_filename
      } {} {} {} c:/web/openacs-4/contrib/obsolete-packages/mp3-jukebox/www/admin/mp3-add-2.xql}
dbqd.contrib.obsolete-packages.mp3-jukebox.www.admin.mp3-delete-oracle.delete_mp3 {dbqd.contrib.obsolete-packages.mp3-jukebox.www.admin.mp3-delete-oracle.delete_mp3 {
      
	begin
	   mp3.mark_as_deleted (
		mp3_id => :mp3_id
		);
	end;
    
      } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/obsolete-packages/mp3-jukebox/www/admin/mp3-delete-oracle.xql}
dbqd.contrib.obsolete-packages.mp3-jukebox.www.admin.mp3-delete.delete_mp3 {dbqd.contrib.obsolete-packages.mp3-jukebox.www.admin.mp3-delete.delete_mp3 {

	   select mp3__mark_as_deleted (
		:mp3_id
		);
    
      } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/obsolete-packages/mp3-jukebox/www/admin/mp3-delete-postgresql.xql}
dbqd.contrib.obsolete-packages.mp3-jukebox.www.admin.mp3-edit-2.mp3_edit {dbqd.contrib.obsolete-packages.mp3-jukebox.www.admin.mp3-edit-2.mp3_edit {
      update mp3_mp3s
set 
     file_path = :file_path,
     title = :title,
     artist = :artist,
     bitrate = :bitrate,
     album = :album,
     genre = :genre,
     year = :year,
     tracknum = :tracknum,
     layer = :layer,
     copyright_p = :copyright_p,
     version = :version,
     mode_num = :mode_num,
     stereo_p = :stereo_p,
     frequency = :frequency,
     minutes = :minutes,
     seconds = :seconds,
     comments = :comments,
     vbr_p = :vbr_p
where mp3_id = :mp3_id

      } {} {} {} c:/web/openacs-4/contrib/obsolete-packages/mp3-jukebox/www/admin/mp3-edit-2.xql}
dbqd.contrib.obsolete-packages.mp3-jukebox.www.admin.mp3-edit.mp3_information {dbqd.contrib.obsolete-packages.mp3-jukebox.www.admin.mp3-edit.mp3_information {
      
        select * from mp3_mp3s where mp3_id=:mp3_id

      } {} {} {} c:/web/openacs-4/contrib/obsolete-packages/mp3-jukebox/www/admin/mp3-edit.xql}
dbqd.contrib.obsolete-packages.mp3-jukebox.www.admin.mp3-mark-as-deleted-oracle.mark_mp3_as_deleted {dbqd.contrib.obsolete-packages.mp3-jukebox.www.admin.mp3-mark-as-deleted-oracle.mark_mp3_as_deleted {
      
	begin
	   mp3_mp3s.mark_as_deleted (
		mp3_id => :mp3_id
		);
	end;
    
      } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/obsolete-packages/mp3-jukebox/www/admin/mp3-mark-as-deleted-oracle.xql}
dbqd.contrib.obsolete-packages.mp3-jukebox.www.admin.mp3-mark-as-deleted.mark_mp3_as_deleted {dbqd.contrib.obsolete-packages.mp3-jukebox.www.admin.mp3-mark-as-deleted.mark_mp3_as_deleted {

	   select mp3_mp3s__mark_as_deleted (
		:mp3_id
		);
    
      } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/obsolete-packages/mp3-jukebox/www/admin/mp3-mark-as-deleted-postgresql.xql}
dbqd.contrib.obsolete-packages.mp3-jukebox.www.admin.one-playlist-oracle.playlist_info {dbqd.contrib.obsolete-packages.mp3-jukebox.www.admin.one-playlist-oracle.playlist_info {
      
    select name, remove_threshold, nvl(sc.songs,0) as songs, mp.playlist_id
     from mp3_playlists mp,
          mp3_playlist_song_count sc
     where mp.playlist_id=:playlist_id
     and   sc.playlist_id(+) = mp.playlist_id

      } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/obsolete-packages/mp3-jukebox/www/admin/one-playlist-oracle.xql}
dbqd.contrib.obsolete-packages.mp3-jukebox.www.admin.one-playlist.playlist_info {dbqd.contrib.obsolete-packages.mp3-jukebox.www.admin.one-playlist.playlist_info {

    select name, remove_threshold, coalesce(sc.songs,0) as songs, mp.playlist_id
     from  mp3_playlist_song_count sc
	right join
	mp3_playlists mp using (playlist_id)
     where mp.playlist_id=:playlist_id

      } {} {} {} c:/web/openacs-4/contrib/obsolete-packages/mp3-jukebox/www/admin/one-playlist.xql}
dbqd.contrib.obsolete-packages.mp3-jukebox.www.admin.one-playlist.mp3_info {dbqd.contrib.obsolete-packages.mp3-jukebox.www.admin.one-playlist.mp3_info {
      
    select sort_key,
    mp.title as title, map.mp3_id as mp3_id, total,
    case when sign (total - :remove_threshold) = 1 then 't' else 'f' end as active_p
    from mp3_mp3_playlist_map_view map, 
    mp3_mp3s_not_deleted mp
    where playlist_id=:playlist_id
     and map.mp3_id=mp.mp3_id
    order by sort_key

      } {} {} {} c:/web/openacs-4/contrib/obsolete-packages/mp3-jukebox/www/admin/one-playlist.xql}
dbqd.contrib.obsolete-packages.mp3-jukebox.www.admin.one-playlist.order_maxkey_get {dbqd.contrib.obsolete-packages.mp3-jukebox.www.admin.one-playlist.order_maxkey_get {
      select max(sort_key)
	    from mp3_mp3_playlist_map 
            where playlist_id=:playlist_id
            
      } {} {} {} c:/web/openacs-4/contrib/obsolete-packages/mp3-jukebox/www/admin/one-playlist.xql}
dbqd.contrib.obsolete-packages.mp3-jukebox.www.admin.order-choose.playlist_name {dbqd.contrib.obsolete-packages.mp3-jukebox.www.admin.order-choose.playlist_name {
      select name from mp3_playlists where playlist_id=$playlist_id
      } {} {} {} c:/web/openacs-4/contrib/obsolete-packages/mp3-jukebox/www/admin/order-choose.xql}
dbqd.contrib.obsolete-packages.mp3-jukebox.www.admin.order-choose.mp3_name {dbqd.contrib.obsolete-packages.mp3-jukebox.www.admin.order-choose.mp3_name {
      select title from mp3_mp3s where mp3_id=:new_mp3
      } {} {} {} c:/web/openacs-4/contrib/obsolete-packages/mp3-jukebox/www/admin/order-choose.xql}
dbqd.contrib.obsolete-packages.mp3-jukebox.www.admin.order-choose.mp3_info {dbqd.contrib.obsolete-packages.mp3-jukebox.www.admin.order-choose.mp3_info {
      
    select sort_key,
    mp.title as title, map.mp3_id as mp3_id
    from mp3_mp3_playlist_map map, 
    mp3_mp3s mp
    where playlist_id=:playlist_id 
    and map.mp3_id=mp.mp3_id
    order by sort_key

      } {} {} {} c:/web/openacs-4/contrib/obsolete-packages/mp3-jukebox/www/admin/order-choose.xql}
dbqd.contrib.obsolete-packages.mp3-jukebox.www.admin.playlist-create-2-oracle.create_playlist {dbqd.contrib.obsolete-packages.mp3-jukebox.www.admin.playlist-create-2-oracle.create_playlist {
      
    begin
       :1 := mp3_playlist.new(
       playlist_id => :playlist_id,
       name => :playlist_name,
       remove_threshold => :neg_remove_threshold,
       creation_ip => :creation_ip,
       creation_user => :creation_user,
       creation_date => sysdate,
       context_id => :package_id
);
end;

      } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/obsolete-packages/mp3-jukebox/www/admin/playlist-create-2-oracle.xql}
dbqd.contrib.obsolete-packages.mp3-jukebox.www.admin.playlist-create-2.create_playlist {dbqd.contrib.obsolete-packages.mp3-jukebox.www.admin.playlist-create-2.create_playlist {

       select mp3_playlist__new(
       :playlist_id,		-- playlist_id
       :playlist_name,		-- name
	'f',			-- shuffle_p
       :neg_remove_threshold,	-- remove_threshold
	'mp3_playlist', 	-- object_type
       current_timestamp,	-- creation_date
       :creation_user,		-- creation_user
       :creation_ip,		-- creation_ip
       :package_id		-- context_id
	);

      } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/obsolete-packages/mp3-jukebox/www/admin/playlist-create-2-postgresql.xql}
dbqd.contrib.obsolete-packages.mp3-jukebox.www.admin.playlist-delete-2-oracle.delete_playlist {dbqd.contrib.obsolete-packages.mp3-jukebox.www.admin.playlist-delete-2-oracle.delete_playlist {
      
	begin
	   mp3_playlist.del (
		playlist_id => :playlist_id
		);
	end;
    
      } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/obsolete-packages/mp3-jukebox/www/admin/playlist-delete-2-oracle.xql}
dbqd.contrib.obsolete-packages.mp3-jukebox.www.admin.playlist-delete-2.delete_playlist {dbqd.contrib.obsolete-packages.mp3-jukebox.www.admin.playlist-delete-2.delete_playlist {

	   select mp3_playlist__delete (
		:playlist_id
		);
    
      } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/obsolete-packages/mp3-jukebox/www/admin/playlist-delete-2-postgresql.xql}
dbqd.contrib.obsolete-packages.mp3-jukebox.www.admin.playlist-delete.playlist_info {dbqd.contrib.obsolete-packages.mp3-jukebox.www.admin.playlist-delete.playlist_info {
      select name from mp3_playlists where playlist_id=:playlist_id
      } {} {} {} c:/web/openacs-4/contrib/obsolete-packages/mp3-jukebox/www/admin/playlist-delete.xql}
dbqd.contrib.obsolete-packages.mp3-jukebox.www.admin.playlist-edit-2.update_playlist {dbqd.contrib.obsolete-packages.mp3-jukebox.www.admin.playlist-edit-2.update_playlist {
      
    update mp3_playlists set 
    name=:playlist_name, 
    remove_threshold=:neg_remove_threshold
    where playlist_id=:playlist_id

      } {} {} {} c:/web/openacs-4/contrib/obsolete-packages/mp3-jukebox/www/admin/playlist-edit-2.xql}
dbqd.contrib.obsolete-packages.mp3-jukebox.www.admin.playlist-edit.playlist_info {dbqd.contrib.obsolete-packages.mp3-jukebox.www.admin.playlist-edit.playlist_info {
      
        select name, remove_threshold
        from mp3_playlists
        where playlist_id=:playlist_id

      } {} {} {} c:/web/openacs-4/contrib/obsolete-packages/mp3-jukebox/www/admin/playlist-edit.xql}
dbqd.contrib.obsolete-packages.mp3-jukebox.www.admin.playlist-item-add-2-oracle.add_item {dbqd.contrib.obsolete-packages.mp3-jukebox.www.admin.playlist-item-add-2-oracle.add_item {
      
	begin
	  mp3_playlist.item_add (
		mp3_id => :mp3_id,
		playlist_id   => :playlist_id,
		sort_key => :insert_after_sort_key
		);
	end;

      } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/obsolete-packages/mp3-jukebox/www/admin/playlist-item-add-2-oracle.xql}
dbqd.contrib.obsolete-packages.mp3-jukebox.www.admin.playlist-item-add-2.add_item {dbqd.contrib.obsolete-packages.mp3-jukebox.www.admin.playlist-item-add-2.add_item {

	  select mp3_playlist__item_add (
		:mp3_id,		-- mp3_id
		:playlist_id,		-- playlist_id
		:insert_after_sort_key	-- sort_key
		);

      } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/obsolete-packages/mp3-jukebox/www/admin/playlist-item-add-2-postgresql.xql}
dbqd.contrib.obsolete-packages.mp3-jukebox.www.admin.playlist-item-add-2.sort_key {dbqd.contrib.obsolete-packages.mp3-jukebox.www.admin.playlist-item-add-2.sort_key {
      select sort_key from mp3_mp3_playlist_map 
            where mp3_id=:insert_after_id
            and playlist_id=:playlist_id
      } {} {} {} c:/web/openacs-4/contrib/obsolete-packages/mp3-jukebox/www/admin/playlist-item-add-2.xql}
dbqd.contrib.obsolete-packages.mp3-jukebox.www.admin.playlist-item-add.playlist_name {dbqd.contrib.obsolete-packages.mp3-jukebox.www.admin.playlist-item-add.playlist_name {
      select name from mp3_playlists where playlist_id=:playlist_id
      } {} {} {} c:/web/openacs-4/contrib/obsolete-packages/mp3-jukebox/www/admin/playlist-item-add.xql}
dbqd.contrib.obsolete-packages.mp3-jukebox.www.admin.playlist-item-remove-oracle.remove_item {dbqd.contrib.obsolete-packages.mp3-jukebox.www.admin.playlist-item-remove-oracle.remove_item {
      
	begin
	  mp3_playlist.item_remove (
		mp3_id => :mp3_id,
		playlist_id => :playlist_id
		);
	end;
   
      } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/obsolete-packages/mp3-jukebox/www/admin/playlist-item-remove-oracle.xql}
dbqd.contrib.obsolete-packages.mp3-jukebox.www.admin.playlist-item-remove.remove_item {dbqd.contrib.obsolete-packages.mp3-jukebox.www.admin.playlist-item-remove.remove_item {

	  select mp3_playlist__item_remove (
		:mp3_id,
		:playlist_id
		);
   
      } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/obsolete-packages/mp3-jukebox/www/admin/playlist-item-remove-postgresql.xql}
dbqd.contrib.obsolete-packages.mp3-jukebox.www.admin.scanner-oracle.fix_creation {dbqd.contrib.obsolete-packages.mp3-jukebox.www.admin.scanner-oracle.fix_creation {
      
update acs_objects
set    creation_user = :creation_user,
       creation_ip = :creation_ip,
       creation_date = sysdate,
       context_id = :package_id
where object_id = :mp3_id
      } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/obsolete-packages/mp3-jukebox/www/admin/scanner-oracle.xql}
dbqd.contrib.obsolete-packages.mp3-jukebox.www.admin.scanner-oracle.add_mp3 {dbqd.contrib.obsolete-packages.mp3-jukebox.www.admin.scanner-oracle.add_mp3 {
      
begin
   :1 := mp3.new(
      file_path => :client_filename,
      $extra_vars
      creation_user => :creation_user,
      creation_ip => :creation_ip,
      creation_date => sysdate,
      context_id => :package_id
      );
end;

      } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/obsolete-packages/mp3-jukebox/www/admin/scanner-oracle.xql}
dbqd.contrib.obsolete-packages.mp3-jukebox.www.admin.scanner-oracle.update_mp3_info {dbqd.contrib.obsolete-packages.mp3-jukebox.www.admin.scanner-oracle.update_mp3_info {} {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/obsolete-packages/mp3-jukebox/www/admin/scanner-oracle.xql}
dbqd.contrib.obsolete-packages.mp3-jukebox.www.admin.scanner.add_mp3 {dbqd.contrib.obsolete-packages.mp3-jukebox.www.admin.scanner.add_mp3 {

      select mp3__new(
	:mp3_id,
	:client_filename,
	:mp3_title

      );

      } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/obsolete-packages/mp3-jukebox/www/admin/scanner-postgresql.xql}
dbqd.contrib.obsolete-packages.mp3-jukebox.www.admin.scanner.update_mp3_info {dbqd.contrib.obsolete-packages.mp3-jukebox.www.admin.scanner.update_mp3_info {

update mp3_mp3s
set 	artist = :artist,
	bitrate = :bitrate,
	album = :album,
	tracknum = :tracknum,
	genre = :genre,
	year = :year,
	layer = :layer,
	copyright_p = :copyright_p,
	version = :version,
	mode_num = :mode_num,
	stereo_p = :stereo_p,
	frequency = :frequency,
	minutes = :minutes
where 	mp3_id = :mp3_id

      } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/obsolete-packages/mp3-jukebox/www/admin/scanner-postgresql.xql}
dbqd.contrib.obsolete-packages.mp3-jukebox.www.admin.scanner.check_file_name {dbqd.contrib.obsolete-packages.mp3-jukebox.www.admin.scanner.check_file_name {
      
        select deleted_p 
        from   mp3_mp3s
        where  file_path = :client_filename
      } {} {} {} c:/web/openacs-4/contrib/obsolete-packages/mp3-jukebox/www/admin/scanner.xql}
dbqd.contrib.obsolete-packages.mp3-jukebox.www.admin.scanner.get_mp3_id {dbqd.contrib.obsolete-packages.mp3-jukebox.www.admin.scanner.get_mp3_id {
      
select mp3_id 
from   mp3_mp3s 
where  file_path = :client_filename
      } {} {} {} c:/web/openacs-4/contrib/obsolete-packages/mp3-jukebox/www/admin/scanner.xql}
dbqd.contrib.obsolete-packages.mp3-jukebox.www.admin.scanner.undelete_mp3 {dbqd.contrib.obsolete-packages.mp3-jukebox.www.admin.scanner.undelete_mp3 {
      
update mp3_mp3s
set	file_path = :client_filename,
	title = :mp3_title,
	artist = :artist,
	bitrate = :bitrate,
	album = :album,
	tracknum = :tracknum,
	genre = :genre,
	year = :year,
	layer = :layer,
	copyright_p = :copyright_p,
	version = :version,
	mode_num = :mode_num,
	stereo_p = :stereo_p,
	frequency = :frequency,
	minutes = :minutes,
        deleted_p = 'f'
where  mp3_id = :mp3_id

      } {} {} {} c:/web/openacs-4/contrib/obsolete-packages/mp3-jukebox/www/admin/scanner.xql}
dbqd.contrib.obsolete-packages.mp3-jukebox.www.admin.scanner.fix_creation {dbqd.contrib.obsolete-packages.mp3-jukebox.www.admin.scanner.fix_creation {
      
update acs_objects
set    creation_user = :creation_user,
       creation_ip = :creation_ip,
       creation_date = current_timestamp,
       context_id = :package_id
where object_id = :mp3_id

      } {} {} {} c:/web/openacs-4/contrib/obsolete-packages/mp3-jukebox/www/admin/scanner.xql}
dbqd.contrib.obsolete-packages.mp3-jukebox.www.admin.swap-oracle.swap_item {dbqd.contrib.obsolete-packages.mp3-jukebox.www.admin.swap-oracle.swap_item {
      
	begin
	  mp3_playlist.item_order_swap (
		playlist_id => :playlist_id,
		sort_key => :sort_key
		);
	end;
    
      } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/obsolete-packages/mp3-jukebox/www/admin/swap-oracle.xql}
dbqd.contrib.obsolete-packages.mp3-jukebox.www.admin.swap.swap_item {dbqd.contrib.obsolete-packages.mp3-jukebox.www.admin.swap.swap_item {

	  select mp3_playlist__item_order_swap (
		:playlist_id,
		:sort_key
		);
    
      } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/obsolete-packages/mp3-jukebox/www/admin/swap-postgresql.xql}
dbqd.contrib.obsolete-packages.mp3-jukebox.www.admin.swap.get_sort_key {dbqd.contrib.obsolete-packages.mp3-jukebox.www.admin.swap.get_sort_key {
      select sort_key from mp3_mp3_playlist_map 
where playlist_id=:playlist_id and mp3_id=:mp3_id
      } {} {} {} c:/web/openacs-4/contrib/obsolete-packages/mp3-jukebox/www/admin/swap.xql}
dbqd.contrib.obsolete-packages.mp3-jukebox.www.index-oracle.playlist_info {dbqd.contrib.obsolete-packages.mp3-jukebox.www.index-oracle.playlist_info {
      
    select name, mp.playlist_id, nvl(sc.songs,0) as songs 
    from   acs_objects, mp3_playlists mp,
           mp3_playlist_song_count sc
    where object_id = mp.playlist_id
     and context_id = :package_id
     and mp.playlist_id = sc.playlist_id(+)
    order by name

      } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/obsolete-packages/mp3-jukebox/www/index-oracle.xql}
dbqd.contrib.obsolete-packages.mp3-jukebox.www.index.playlist_info {dbqd.contrib.obsolete-packages.mp3-jukebox.www.index.playlist_info {

    select name, mp.playlist_id, coalesce(sc.songs,0) as songs 
    from   acs_objects 
		join
	   mp3_playlists mp on (object_id = mp.playlist_id)
		left join
           mp3_playlist_song_count sc using (playlist_id)
    where context_id = :package_id
    order by name

      } {} {} {} c:/web/openacs-4/contrib/obsolete-packages/mp3-jukebox/www/index.xql}
dbqd.contrib.obsolete-packages.mp3-jukebox.www.one-playlist-oracle.playlist_info {dbqd.contrib.obsolete-packages.mp3-jukebox.www.one-playlist-oracle.playlist_info {
      
    select name, remove_threshold, nvl(sc.songs,0) as songs, mp.playlist_id
     from mp3_playlists mp,
          mp3_playlist_song_count sc
     where mp.playlist_id=:playlist_id
     and   sc.playlist_id(+) = mp.playlist_id

      } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/obsolete-packages/mp3-jukebox/www/one-playlist-oracle.xql}
dbqd.contrib.obsolete-packages.mp3-jukebox.www.one-playlist.playlist_info {dbqd.contrib.obsolete-packages.mp3-jukebox.www.one-playlist.playlist_info {

    select name, remove_threshold, coalesce(sc.songs,0) as songs, mp.playlist_id
     from mp3_playlist_song_count sc
	right join
	mp3_playlists mp
	using (playlist_id)	 
     where mp.playlist_id=:playlist_id

      } {} {} {} c:/web/openacs-4/contrib/obsolete-packages/mp3-jukebox/www/one-playlist.xql}
dbqd.contrib.obsolete-packages.mp3-jukebox.www.one-playlist.vote_info {dbqd.contrib.obsolete-packages.mp3-jukebox.www.one-playlist.vote_info {
      
   select remove_threshold 
     from mp3_playlists
   where playlist_id=:playlist_id

      } {} {} {} c:/web/openacs-4/contrib/obsolete-packages/mp3-jukebox/www/one-playlist.xql}
dbqd.contrib.obsolete-packages.mp3-jukebox.www.one-playlist.mp3_info {dbqd.contrib.obsolete-packages.mp3-jukebox.www.one-playlist.mp3_info {
      
    select sort_key,
    mp.title as title, map.mp3_id as mp3_id, total, artist,
    case when sign (total - :remove_threshold) = 1 then 't' else 'f' end as active_p
    from mp3_mp3_playlist_map_view map, 
    mp3_mp3s_not_deleted mp
    where map.playlist_id = :playlist_id
    and   map.mp3_id=mp.mp3_id
    order by sort_key

      } {} {} {} c:/web/openacs-4/contrib/obsolete-packages/mp3-jukebox/www/one-playlist.xql}
dbqd.contrib.obsolete-packages.mp3-jukebox.www.vote-oracle.vote_cast {dbqd.contrib.obsolete-packages.mp3-jukebox.www.vote-oracle.vote_cast {
      
	begin
	  :1 := mp3_playlist.vote_cast (
		mp3_id => :mp3_id,
		playlist_id => :playlist_id,
		user_id => :user_id,
		vote_date => sysdate,
		vote => :vote_num
		);
	end;
    
      } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/obsolete-packages/mp3-jukebox/www/vote-oracle.xql}
dbqd.contrib.obsolete-packages.mp3-jukebox.www.vote.vote_cast {dbqd.contrib.obsolete-packages.mp3-jukebox.www.vote.vote_cast {

	select mp3_playlist__vote_cast (
		:user_id,
		:playlist_id,
		:mp3_id,
		:vote_num,
		current_timestamp
		);
    
      } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/obsolete-packages/mp3-jukebox/www/vote-postgresql.xql}
dbqd.contrib.obsolete-packages.mp3-jukebox.www.vote-thankyou.name_info {dbqd.contrib.obsolete-packages.mp3-jukebox.www.vote-thankyou.name_info {
      select title as mp3_title, name
 from mp3_mp3s, 
  mp3_playlists
   where playlist_id=:playlist_id and mp3_id=:mp3_id
      } {} {} {} c:/web/openacs-4/contrib/obsolete-packages/mp3-jukebox/www/vote-thankyou.xql}
dbqd.contrib.obsolete-packages.postcard.www.add-picture-2-oracle.add_picture {dbqd.contrib.obsolete-packages.postcard.www.add-picture-2-oracle.add_picture {
      
    insert into postcard_images (card_image_id, image, mime_type, title, description)
    values (postcard_image_seq.nextval, empty_blob(), :mime_type, :title, :description)
    returning image into :1

      } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/obsolete-packages/postcard/www/add-picture-2-oracle.xql}
dbqd.contrib.obsolete-packages.postcard.www.add-picture-2.add_picture {dbqd.contrib.obsolete-packages.postcard.www.add-picture-2.add_picture {

	insert into postcard_images (card_image_id, mime_type,
	title,	description)
	values (:image_id,  :mime_type, :title, :description )

      } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/obsolete-packages/postcard/www/add-picture-2-postgresql.xql}
dbqd.contrib.obsolete-packages.postcard.www.add-picture-2.upload_picture {dbqd.contrib.obsolete-packages.postcard.www.add-picture-2.upload_picture {

    update postcard_images
    set lob = [set __lob_id [db_string get_lob_id "select empty_lob()"]]
    where card_image_id = :image_id

    } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/obsolete-packages/postcard/www/add-picture-2-postgresql.xql}
dbqd.contrib.obsolete-packages.postcard.www.dump-cards.cards {dbqd.contrib.obsolete-packages.postcard.www.dump-cards.cards {
      
    select card_id, card_picture, recipient, sender, message
    from postcards
    order by card_id

      } {} {} {} c:/web/openacs-4/contrib/obsolete-packages/postcard/www/dump-cards.xql}
dbqd.contrib.obsolete-packages.postcard.www.index.get_all_images {dbqd.contrib.obsolete-packages.postcard.www.index.get_all_images {
    select card_image_id, mime_type, title, description
    from postcard_images
    order by card_image_id
      } {} {} {} c:/web/openacs-4/contrib/obsolete-packages/postcard/www/index.xql}
dbqd.contrib.obsolete-packages.postcard.www.postcard-picture-oracle.select_image {dbqd.contrib.obsolete-packages.postcard.www.postcard-picture-oracle.select_image {
      
select image
    from postcard_images
    where card_image_id = $image_id

      } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/obsolete-packages/postcard/www/postcard-picture-oracle.xql}
dbqd.contrib.obsolete-packages.postcard.www.postcard-picture.retrieve_image {dbqd.contrib.obsolete-packages.postcard.www.postcard-picture.retrieve_image {
        select lob
        from postcard_images
        where card_image_id = :image_id
      } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/obsolete-packages/postcard/www/postcard-picture-postgresql.xql}
dbqd.contrib.obsolete-packages.postcard.www.postcard-picture.mime_type {dbqd.contrib.obsolete-packages.postcard.www.postcard-picture.mime_type {
      
  select mime_type
    from postcard_images
   where card_image_id = :image_id
      } {} {} {} c:/web/openacs-4/contrib/obsolete-packages/postcard/www/postcard-picture.xql}
dbqd.contrib.obsolete-packages.postcard.www.send-card.add_message {dbqd.contrib.obsolete-packages.postcard.www.send-card.add_message {
      
    insert into postcards (card_id, pickup_code, card_picture, recipient, sender, message)
    values (:card_id, :pickup_code, :image_id, :recipient, :sender, :message)

      } {} {} {} c:/web/openacs-4/contrib/obsolete-packages/postcard/www/send-card.xql}
dbqd.contrib.obsolete-packages.postcard.www.send-card.select_card_id {dbqd.contrib.obsolete-packages.postcard.www.send-card.select_card_id {
      
    select max(card_id) as card_id from postcards

      } {} {} {} c:/web/openacs-4/contrib/obsolete-packages/postcard/www/send-card.xql}
dbqd.contrib.obsolete-packages.postcard.www.show-card-oracle.set_date {dbqd.contrib.obsolete-packages.postcard.www.show-card-oracle.set_date {
      
	update postcards
	set picked_up = sysdate
	where pickup_code = :pickup_code
    
      } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/obsolete-packages/postcard/www/show-card-oracle.xql}
dbqd.contrib.obsolete-packages.postcard.www.show-card.set_date {dbqd.contrib.obsolete-packages.postcard.www.show-card.set_date {
      
	update postcards
	set picked_up = now()
	where pickup_code = :pickup_code
    
      } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/obsolete-packages/postcard/www/show-card-postgresql.xql}
dbqd.contrib.obsolete-packages.postcard.www.show-card.select_card_id {dbqd.contrib.obsolete-packages.postcard.www.show-card.select_card_id {
      
    select card_id, card_picture as image_id, recipient, sender, message, picked_up
    from postcards
    where pickup_code = :pickup_code

      } {} {} {} c:/web/openacs-4/contrib/obsolete-packages/postcard/www/show-card.xql}
dbqd.contrib.obsolete-packages.ticket-tracker.tcl.ttracker-procs-oracle.ad_page_contract_filter_proc_ttracker_ticket_id.check_ticket_id {dbqd.contrib.obsolete-packages.ticket-tracker.tcl.ttracker-procs-oracle.ad_page_contract_filter_proc_ttracker_ticket_id.check_ticket_id {

select decode(ttracker_ticket.id_valid_p(:value, :package_id), 't', 1, 0) as id_valid_p from dual

} {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/obsolete-packages/ticket-tracker/tcl/ttracker-procs-oracle.xql}
dbqd.contrib.obsolete-packages.ticket-tracker.tcl.ttracker-procs-oracle.ttracker_workflow_url.get_url {dbqd.contrib.obsolete-packages.ticket-tracker.tcl.ttracker-procs-oracle.ttracker_workflow_url.get_url {
       select ttracker_util.workflow_url(:absolute_p) from dual 
      } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/obsolete-packages/ticket-tracker/tcl/ttracker-procs-oracle.xql}
dbqd.contrib.obsolete-packages.ticket-tracker.tcl.ttracker-procs-oracle.ttracker_install.install {dbqd.contrib.obsolete-packages.ticket-tracker.tcl.ttracker-procs-oracle.ttracker_install.install {
      
        begin
            ttracker_util.install(:package_id);
        end;
    
      } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/obsolete-packages/ticket-tracker/tcl/ttracker-procs-oracle.xql}
dbqd.contrib.obsolete-packages.ticket-tracker.tcl.ttracker-procs.ad_page_contract_filter_proc_ttracker_ticket_id.check_ticket_id {dbqd.contrib.obsolete-packages.ticket-tracker.tcl.ttracker-procs.ad_page_contract_filter_proc_ttracker_ticket_id.check_ticket_id {

select case when ttracker_ticket__id_valid_p(:value, :package_id) = 't' 
	then 1 else 0 end  as id_valid_p 

} {} {} {postgresql 7.1} c:/web/openacs-4/contrib/obsolete-packages/ticket-tracker/tcl/ttracker-procs-postgresql.xql}
dbqd.contrib.obsolete-packages.ticket-tracker.tcl.ttracker-procs.ttracker_workflow_url.get_url {dbqd.contrib.obsolete-packages.ticket-tracker.tcl.ttracker-procs.ttracker_workflow_url.get_url {

select ttracker_util__workflow_url(:absolute_p)  

} {} {} {postgresql 7.1} c:/web/openacs-4/contrib/obsolete-packages/ticket-tracker/tcl/ttracker-procs-postgresql.xql}
dbqd.contrib.obsolete-packages.ticket-tracker.tcl.ttracker-procs.ttracker_install.install {dbqd.contrib.obsolete-packages.ticket-tracker.tcl.ttracker-procs.ttracker_install.install {

select ttracker_util__install(:package_id)
    
} {} {} {postgresql 7.1} c:/web/openacs-4/contrib/obsolete-packages/ticket-tracker/tcl/ttracker-procs-postgresql.xql}
dbqd.contrib.obsolete-packages.ticket-tracker.tcl.ttracker-procs.ad_page_contract_filter_proc_ttracker_option_id.check_option_id {dbqd.contrib.obsolete-packages.ticket-tracker.tcl.ttracker-procs.ad_page_contract_filter_proc_ttracker_option_id.check_option_id {

select count(option_id) as id_valid_p
  from ttracker_options
  where option_id = :value and 
        package_id = :package_id
    
} {} {} {} c:/web/openacs-4/contrib/obsolete-packages/ticket-tracker/tcl/ttracker-procs.xql}
dbqd.contrib.obsolete-packages.ticket-tracker.tcl.ttracker-procs.ad_page_contract_filter_proc_ttracker_task_id.check_task_id {dbqd.contrib.obsolete-packages.ticket-tracker.tcl.ttracker-procs.ad_page_contract_filter_proc_ttracker_task_id.check_task_id {
      
select count(wt.task_id) as id_valid_p 
  from wf_tasks wt
  where exists (select wc.case_id
                  from wf_cases wc,
                       ttracker_tickets tt,
                       ttracker_categories tc 
                  where wt.case_id = wc.case_id
                    and wc.object_id = tt.ticket_id
                    and tt.category_id = tc.category_id
                    and tc.package_id = :package_id) 
    and wt.task_id = :value
    
} {} {} {} c:/web/openacs-4/contrib/obsolete-packages/ticket-tracker/tcl/ttracker-procs.xql}
dbqd.contrib.obsolete-packages.ticket-tracker.tcl.ttracker-procs.ttracker_category_exists_p.check_category {dbqd.contrib.obsolete-packages.ticket-tracker.tcl.ttracker-procs.ttracker_category_exists_p.check_category {
      
        select case when count(1) = 0 then 0 else 1 end
        from ttracker_categories
        where package_id = :package_id
    
      } {} {} {} c:/web/openacs-4/contrib/obsolete-packages/ticket-tracker/tcl/ttracker-procs.xql}
dbqd.contrib.obsolete-packages.ticket-tracker.wf-templates.ticket-info-oracle.ticket_info_select {dbqd.contrib.obsolete-packages.ticket-tracker.wf-templates.ticket-info-oracle.ticket_info_select {
      
  select tt.ticket_id,
         ttracker_option.option_name(tc.package_id, 'severity', tt.severity) as pretty_severity,
         ttracker_option.option_name(tc.package_id, 'priority', tt.priority) as pretty_priority,
         tt.subject,
         tc.name as category,
         cr.content as description,
         cr.mime_type
    from ttracker_tickets tt,
         ttracker_categories tc,
         cr_revisions cr
   where tt.ticket_id = :ticket_id
     and tt.category_id = tc.category_id
     and cr.revision_id = content_item.get_live_revision(:ticket_id)

      } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/obsolete-packages/ticket-tracker/wf-templates/ticket-info-oracle.xql}
dbqd.contrib.obsolete-packages.ticket-tracker.wf-templates.ticket-info.ticket_info_select {dbqd.contrib.obsolete-packages.ticket-tracker.wf-templates.ticket-info.ticket_info_select {
      
select tt.ticket_id,
       ttracker_option__option_name(tc.package_id, 'severity', tt.severity) 
			as pretty_severity,
       ttracker_option__option_name(tc.package_id, 'priority', tt.priority) 
			as pretty_priority,
       tt.subject,
       tc.name as category,
       cr.content as description,
       cr.mime_type
  from ttracker_tickets tt, ttracker_categories tc, cr_revisions cr
  where tt.ticket_id = :ticket_id and 
        tt.category_id = tc.category_id and 
        cr.revision_id = content_item__get_live_revision(:ticket_id)

} {} {} {postgresql 7.1} c:/web/openacs-4/contrib/obsolete-packages/ticket-tracker/wf-templates/ticket-info-postgresql.xql}
dbqd.contrib.obsolete-packages.ticket-tracker.www.admin.category-add-2-oracle.create_new_category {dbqd.contrib.obsolete-packages.ticket-tracker.www.admin.category-add-2-oracle.create_new_category {
      
    begin
    :1 := ttracker_category.new (
      context_id => :package_id,
      creation_user => :user_id,
      creation_ip => :creation_ip,
      package_id => :package_id,
      name => :name,
      default_assignee => :default_assignee,
      description => :description
    );
    end;

      } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/obsolete-packages/ticket-tracker/www/admin/category-add-2-oracle.xql}
dbqd.contrib.obsolete-packages.ticket-tracker.www.admin.category-add-2.create_new_category {dbqd.contrib.obsolete-packages.ticket-tracker.www.admin.category-add-2.create_new_category {

select ttracker_category__new (
	null,					-- category_id
    :package_id,			-- package_id 
	'ttracker_category',	-- object_type
	now(),					-- creation_date
    :user_id,				-- creation_user 
    :creation_ip,			-- creation_ip 
    :package_id,			-- context_id 
    :name,					-- name 
    :default_assignee,		-- default_assignee 
    :description			-- description 
)

} {} {} {postgresql 7.1} c:/web/openacs-4/contrib/obsolete-packages/ticket-tracker/www/admin/category-add-2-postgresql.xql}
dbqd.contrib.obsolete-packages.ticket-tracker.www.admin.category-add-2.check_duplicate {dbqd.contrib.obsolete-packages.ticket-tracker.www.admin.category-add-2.check_duplicate {
      
            select count(1) as duplicate
            from ttracker_categories 
            where upper(name) = upper(:name) and
                  package_id = :package_id
        
      } {} {} {} c:/web/openacs-4/contrib/obsolete-packages/ticket-tracker/www/admin/category-add-2.xql}
dbqd.contrib.obsolete-packages.ticket-tracker.www.admin.category-add-oracle.assignees_select {dbqd.contrib.obsolete-packages.ticket-tracker.www.admin.category-add-oracle.assignees_select {
      
    select 0 as party_id, 'Nobody' as party_name from dual
    UNION ALL
    select p.party_id, acs_object.name(p.party_id) as party_name
    from parties p

      } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/obsolete-packages/ticket-tracker/www/admin/category-add-oracle.xql}
dbqd.contrib.obsolete-packages.ticket-tracker.www.admin.category-add.assignees_select {dbqd.contrib.obsolete-packages.ticket-tracker.www.admin.category-add.assignees_select {
      
    select 0 as party_id, 'Nobody' as party_name 
    UNION ALL
    select p.party_id, acs_object__name(p.party_id) as party_name
    from parties p

      } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/obsolete-packages/ticket-tracker/www/admin/category-add-postgresql.xql}
dbqd.contrib.obsolete-packages.ticket-tracker.www.admin.category-delete-2.check_category {dbqd.contrib.obsolete-packages.ticket-tracker.www.admin.category-delete-2.check_category {
      
        select count(category_id) as num_categories
          from ttracker_categories
         where package_id = :package_id
    
      } {} {} {} c:/web/openacs-4/contrib/obsolete-packages/ticket-tracker/www/admin/category-delete-2.xql}
dbqd.contrib.obsolete-packages.ticket-tracker.www.admin.category-delete-2.transfer_tickets {dbqd.contrib.obsolete-packages.ticket-tracker.www.admin.category-delete-2.transfer_tickets {
      
                update ttracker_tickets
                   set category_id = :transfer_id
                 where category_id = :category_id
            
      } {} {} {} c:/web/openacs-4/contrib/obsolete-packages/ticket-tracker/www/admin/category-delete-2.xql}
dbqd.contrib.obsolete-packages.ticket-tracker.www.admin.category-delete-2.delete_category {dbqd.contrib.obsolete-packages.ticket-tracker.www.admin.category-delete-2.delete_category {
      
                delete from ttracker_categories
                 where category_id = :category_id
            
      } {} {} {} c:/web/openacs-4/contrib/obsolete-packages/ticket-tracker/www/admin/category-delete-2.xql}
dbqd.contrib.obsolete-packages.ticket-tracker.www.admin.category-delete-2.check_category_again {dbqd.contrib.obsolete-packages.ticket-tracker.www.admin.category-delete-2.check_category_again {
      
                      select count(category_id)
                        from ttracker_categories
                       where package_id = :package_id 
      } {} {} {} c:/web/openacs-4/contrib/obsolete-packages/ticket-tracker/www/admin/category-delete-2.xql}
dbqd.contrib.obsolete-packages.ticket-tracker.www.admin.category-delete.get_num_categories {dbqd.contrib.obsolete-packages.ticket-tracker.www.admin.category-delete.get_num_categories {
      
    select count(category_id)
      from ttracker_categories
     where package_id = :package_id

      } {} {} {} c:/web/openacs-4/contrib/obsolete-packages/ticket-tracker/www/admin/category-delete.xql}
dbqd.contrib.obsolete-packages.ticket-tracker.www.admin.category-delete.get_num_tickets {dbqd.contrib.obsolete-packages.ticket-tracker.www.admin.category-delete.get_num_tickets {
      
    select count(ticket_id)
      from ttracker_tickets
     where category_id = :category_id

      } {} {} {} c:/web/openacs-4/contrib/obsolete-packages/ticket-tracker/www/admin/category-delete.xql}
dbqd.contrib.obsolete-packages.ticket-tracker.www.admin.category-delete.category_select {dbqd.contrib.obsolete-packages.ticket-tracker.www.admin.category-delete.category_select {
      
    select name, category_id
      from ttracker_categories
     where package_id = :package_id
       and category_id <> :category_id

      } {} {} {} c:/web/openacs-4/contrib/obsolete-packages/ticket-tracker/www/admin/category-delete.xql}
dbqd.contrib.obsolete-packages.ticket-tracker.www.admin.category-edit-2.check_duplicate {dbqd.contrib.obsolete-packages.ticket-tracker.www.admin.category-edit-2.check_duplicate {
      
                  select category_id 
                    from ttracker_categories 
                   where upper(name) = upper(:name) and
                         package_id = :package_id and
                         category_id != :category_id
      } {} {} {} c:/web/openacs-4/contrib/obsolete-packages/ticket-tracker/www/admin/category-edit-2.xql}
dbqd.contrib.obsolete-packages.ticket-tracker.www.admin.category-edit-2.category_update {dbqd.contrib.obsolete-packages.ticket-tracker.www.admin.category-edit-2.category_update {
      
    update ttracker_categories 
       set name = :name, 
           description = :description, 
           default_assignee = :default_assignee
     where category_id = :category_id

      } {} {} {} c:/web/openacs-4/contrib/obsolete-packages/ticket-tracker/www/admin/category-edit-2.xql}
dbqd.contrib.obsolete-packages.ticket-tracker.www.admin.category-edit-oracle.assignees_select {dbqd.contrib.obsolete-packages.ticket-tracker.www.admin.category-edit-oracle.assignees_select {
      
    select 0 as party_id, 'Nobody' as party_name from dual
    UNION
    select p.party_id, acs_object.name(p.party_id) as party_name
    from parties p

      } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/obsolete-packages/ticket-tracker/www/admin/category-edit-oracle.xql}
dbqd.contrib.obsolete-packages.ticket-tracker.www.admin.category-edit.assignees_select {dbqd.contrib.obsolete-packages.ticket-tracker.www.admin.category-edit.assignees_select {
      
    select 0 as party_id, 'Nobody' as party_name 
    UNION
    select p.party_id, acs_object__name(p.party_id) as party_name
    from parties p

      } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/obsolete-packages/ticket-tracker/www/admin/category-edit-postgresql.xql}
dbqd.contrib.obsolete-packages.ticket-tracker.www.admin.category-edit.category_info_select {dbqd.contrib.obsolete-packages.ticket-tracker.www.admin.category-edit.category_info_select {
      
    select name, description, default_assignee
    from ttracker_categories
    where category_id = :category_id

      } {} {} {} c:/web/openacs-4/contrib/obsolete-packages/ticket-tracker/www/admin/category-edit.xql}
dbqd.contrib.obsolete-packages.ticket-tracker.www.admin.index.categories_select {dbqd.contrib.obsolete-packages.ticket-tracker.www.admin.index.categories_select {
      
    select name, category_id 
      from ttracker_categories
     where package_id = :package_id
     order by name

      } {} {} {} c:/web/openacs-4/contrib/obsolete-packages/ticket-tracker/www/admin/index.xql}
dbqd.contrib.obsolete-packages.ticket-tracker.www.admin.index.options_select {dbqd.contrib.obsolete-packages.ticket-tracker.www.admin.index.options_select {
      
    select name,
           value,
           function,
           option_id
      from ttracker_options
     where package_id = :package_id
     order by function,value

      } {} {} {} c:/web/openacs-4/contrib/obsolete-packages/ticket-tracker/www/admin/index.xql}
dbqd.contrib.obsolete-packages.ticket-tracker.www.admin.install.index.check_gc {dbqd.contrib.obsolete-packages.ticket-tracker.www.admin.install.index.check_gc {
      
    select count(*) as gc_mounted_p
      from site_nodes sn,
           apm_packages ap
     where ap.package_key = 'general-comments'
       and sn.object_id = ap.package_id

      } {} {} {} c:/web/openacs-4/contrib/obsolete-packages/ticket-tracker/www/admin/install/index.xql}
dbqd.contrib.obsolete-packages.ticket-tracker.www.admin.install.index.check_workflow {dbqd.contrib.obsolete-packages.ticket-tracker.www.admin.install.index.check_workflow {
      
    select count(*) as workflow_mounted_p
      from site_nodes sn,
           apm_packages ap
     where ap.package_key = 'acs-workflow'
       and sn.object_id = ap.package_id

      } {} {} {} c:/web/openacs-4/contrib/obsolete-packages/ticket-tracker/www/admin/install/index.xql}
dbqd.contrib.obsolete-packages.ticket-tracker.www.admin.install.index.default_url {dbqd.contrib.obsolete-packages.ticket-tracker.www.admin.install.index.default_url {
      
    select default_value from apm_parameters 
      where package_key = 'acs-kernel' and 
            parameter_name='SystemURL'

      } {} {} {} c:/web/openacs-4/contrib/obsolete-packages/ticket-tracker/www/admin/install/index.xql}
dbqd.contrib.obsolete-packages.ticket-tracker.www.admin.install.index.check_sender {dbqd.contrib.obsolete-packages.ticket-tracker.www.admin.install.index.check_sender {
      
	select email as good_email from parties 
	where party_id = :notification_sender 

      } {} {} {} c:/web/openacs-4/contrib/obsolete-packages/ticket-tracker/www/admin/install/index.xql}
dbqd.contrib.obsolete-packages.ticket-tracker.www.admin.option-add-2-oracle.duplicate_count {dbqd.contrib.obsolete-packages.ticket-tracker.www.admin.option-add-2-oracle.duplicate_count {
      
            select count(*) as duplicate
              from dual
             where exists (select option_id
                             from ttracker_options 
                            where package_id = :package_id
                              and function = :function
                              and (value = :value or upper(name) = upper(:name)))
        
      } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/obsolete-packages/ticket-tracker/www/admin/option-add-2-oracle.xql}
dbqd.contrib.obsolete-packages.ticket-tracker.www.admin.option-add-2-oracle.add_option {dbqd.contrib.obsolete-packages.ticket-tracker.www.admin.option-add-2-oracle.add_option {
      
    begin
        ttracker_option.add_option (
            package_id => :package_id,
            function => :function,
            name => :name,
            value => :value
        );
    end;

      } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/obsolete-packages/ticket-tracker/www/admin/option-add-2-oracle.xql}
dbqd.contrib.obsolete-packages.ticket-tracker.www.admin.option-add-2.duplicate_count {dbqd.contrib.obsolete-packages.ticket-tracker.www.admin.option-add-2.duplicate_count {
      
select count(*) as duplicate
  where exists (select option_id
                  from ttracker_options 
                  where package_id = :package_id and 
                        function = :function and (value = :value or 
                                                  upper(name) = upper(:name)))
        
} {} {} {postgresql 7.1} c:/web/openacs-4/contrib/obsolete-packages/ticket-tracker/www/admin/option-add-2-postgresql.xql}
dbqd.contrib.obsolete-packages.ticket-tracker.www.admin.option-add-2.add_option {dbqd.contrib.obsolete-packages.ticket-tracker.www.admin.option-add-2.add_option {

select ttracker_option__add_option (
	null,			-- option_id
	:package_id,	-- package_id
	:function,		-- function
	:name,			-- name
	:value			-- value
)

} {} {} {postgresql 7.1} c:/web/openacs-4/contrib/obsolete-packages/ticket-tracker/www/admin/option-add-2-postgresql.xql}
dbqd.contrib.obsolete-packages.ticket-tracker.www.admin.option-delete-oracle.ticket_count {dbqd.contrib.obsolete-packages.ticket-tracker.www.admin.option-delete-oracle.ticket_count {
      
	    select count(*) as in_use 
	      from dual
	     where exists (select tt.ticket_id
	                     from ttracker_options ts,
	                          ttracker_tickets tt,
	                          ttracker_categories tc
	                    where ts.option_id = :option_id
	                      and tt.category_id = tc.category_id
	                      and tc.package_id = ts.package_id
	                      and ((ts.function = 'severity' and ts.value = tt.severity) or
	                           (ts.function = 'priority' and ts.value = tt.priority)))
	
      } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/obsolete-packages/ticket-tracker/www/admin/option-delete-oracle.xql}
dbqd.contrib.obsolete-packages.ticket-tracker.www.admin.option-delete.ticket_count {dbqd.contrib.obsolete-packages.ticket-tracker.www.admin.option-delete.ticket_count {
      
	    select count(*) as in_use 
	      
	     where exists (select tt.ticket_id
	                     from ttracker_options ts,
	                          ttracker_tickets tt,
	                          ttracker_categories tc
	                    where ts.option_id = :option_id
	                      and tt.category_id = tc.category_id
	                      and tc.package_id = ts.package_id
	                      and ((ts.function = 'severity' and ts.value = tt.severity) or
	                           (ts.function = 'priority' and ts.value = tt.priority)))
	
      } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/obsolete-packages/ticket-tracker/www/admin/option-delete-postgresql.xql}
dbqd.contrib.obsolete-packages.ticket-tracker.www.admin.option-delete.delete_option {dbqd.contrib.obsolete-packages.ticket-tracker.www.admin.option-delete.delete_option {
      
    delete from ttracker_options 
     where option_id = :option_id
       and not exists (select tt.ticket_id
	                 from ttracker_options ts,
	                      ttracker_tickets tt,
	                      ttracker_categories tc
	                where ts.option_id = :option_id
	                  and tt.category_id = tc.category_id
	                  and tc.package_id = ts.package_id
	                  and ((ts.function = 'severity' and ts.value = tt.severity) or
	                       (ts.function = 'priority' and ts.value = tt.priority)))

      } {} {} {} c:/web/openacs-4/contrib/obsolete-packages/ticket-tracker/www/admin/option-delete.xql}
dbqd.contrib.obsolete-packages.ticket-tracker.www.admin.option-edit-2-oracle.duplicate_count {dbqd.contrib.obsolete-packages.ticket-tracker.www.admin.option-edit-2-oracle.duplicate_count {
      
            select count(*) as duplicate
              from dual
             where exists (select option_id
                             from ttracker_options 
                            where package_id = :package_id
                              and function = :function
                              and option_id <> :option_id
                              and (value = :value or upper(name) = upper(:name)))
        
      } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/obsolete-packages/ticket-tracker/www/admin/option-edit-2-oracle.xql}
dbqd.contrib.obsolete-packages.ticket-tracker.www.admin.option-edit-2.duplicate_count {dbqd.contrib.obsolete-packages.ticket-tracker.www.admin.option-edit-2.duplicate_count {
      
            select count(*) as duplicate
              
             where exists (select option_id
                             from ttracker_options 
                            where package_id = :package_id
                              and function = :function
                              and option_id <> :option_id
                              and (value = :value or upper(name) = upper(:name)))
        
      } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/obsolete-packages/ticket-tracker/www/admin/option-edit-2-postgresql.xql}
dbqd.contrib.obsolete-packages.ticket-tracker.www.admin.option-edit-2.update_option {dbqd.contrib.obsolete-packages.ticket-tracker.www.admin.option-edit-2.update_option {
      
    update ttracker_options
       set name = :name,
           value = :value
     where option_id = :option_id

      } {} {} {} c:/web/openacs-4/contrib/obsolete-packages/ticket-tracker/www/admin/option-edit-2.xql}
dbqd.contrib.obsolete-packages.ticket-tracker.www.admin.option-edit.option_select {dbqd.contrib.obsolete-packages.ticket-tracker.www.admin.option-edit.option_select {
      
    select name,
           value,
           function
      from ttracker_options
     where option_id = :option_id

      } {} {} {} c:/web/openacs-4/contrib/obsolete-packages/ticket-tracker/www/admin/option-edit.xql}
dbqd.contrib.obsolete-packages.ticket-tracker.www.admin.sender-designate-oracle.sender_select {dbqd.contrib.obsolete-packages.ticket-tracker.www.admin.sender-designate-oracle.sender_select {
      
      select ttracker_util.notification_sender(:package_id) as party_id,
             acs_object.name(ttracker_util.notification_sender(:package_id)) as name
        from dual

      } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/obsolete-packages/ticket-tracker/www/admin/sender-designate-oracle.xql}
dbqd.contrib.obsolete-packages.ticket-tracker.www.admin.sender-designate-oracle.parties_select {dbqd.contrib.obsolete-packages.ticket-tracker.www.admin.sender-designate-oracle.parties_select {
      
    select party_id, 
           acs_object.name(party_id) as name
      from parties 

      } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/obsolete-packages/ticket-tracker/www/admin/sender-designate-oracle.xql}
dbqd.contrib.obsolete-packages.ticket-tracker.www.admin.sender-designate.sender_select {dbqd.contrib.obsolete-packages.ticket-tracker.www.admin.sender-designate.sender_select {
      
select ttracker_util__notification_sender(:package_id) as party_id,
       acs_object__name(ttracker_util__notification_sender(:package_id)) as name

} {} {} {postgresql 7.1} c:/web/openacs-4/contrib/obsolete-packages/ticket-tracker/www/admin/sender-designate-postgresql.xql}
dbqd.contrib.obsolete-packages.ticket-tracker.www.admin.sender-designate.parties_select {dbqd.contrib.obsolete-packages.ticket-tracker.www.admin.sender-designate.parties_select {
      
select party_id, acs_object__name(party_id) as name from parties 

} {} {} {postgresql 7.1} c:/web/openacs-4/contrib/obsolete-packages/ticket-tracker/www/admin/sender-designate-postgresql.xql}
dbqd.contrib.obsolete-packages.ticket-tracker.www.category-oracle.category_info_select {dbqd.contrib.obsolete-packages.ticket-tracker.www.category-oracle.category_info_select {
      
    select name, 
           description, 
           nvl(acs_object.name(default_assignee), 'N/A') as assignee_name
      from ttracker_categories 
     where category_id = :category_id

      } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/obsolete-packages/ticket-tracker/www/category-oracle.xql}
dbqd.contrib.obsolete-packages.ticket-tracker.www.category-oracle.tasks_select {dbqd.contrib.obsolete-packages.ticket-tracker.www.category-oracle.tasks_select {
      
select ttracker_option.option_name(:package_id, 'severity', tt.severity) 
         as pretty_severity,
       ttracker_option.option_name(:package_id, 'priority', tt.priority) 
         as pretty_priority,
       tt.ticket_id,
       tt.subject,
       to_char(tt.creation_date, 'MM/DD/YYYY HH24:MI') as created,
       c.state,
       tt.creation_user as creator_id,
       acs_object.name(tt.creation_user) as creator_name
  from wf_cases c,
       ttracker_tickets tt
  where tt.category_id = :category_id and 
        c.object_id = tt.ticket_id
        [ad_dimensional_sql $dimensional]
  [ad_order_by_from_sort_spec $orderby $table_def]

} {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/obsolete-packages/ticket-tracker/www/category-oracle.xql}
dbqd.contrib.obsolete-packages.ticket-tracker.www.category-oracle.last_1_day {dbqd.contrib.obsolete-packages.ticket-tracker.www.category-oracle.last_1_day {

tt.creation_date + 1 > sysdate

} {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/obsolete-packages/ticket-tracker/www/category-oracle.xql}
dbqd.contrib.obsolete-packages.ticket-tracker.www.category-oracle.last_7_days {dbqd.contrib.obsolete-packages.ticket-tracker.www.category-oracle.last_7_days {

tt.creation_date + 7 > sysdate

} {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/obsolete-packages/ticket-tracker/www/category-oracle.xql}
dbqd.contrib.obsolete-packages.ticket-tracker.www.category-oracle.last_30_days {dbqd.contrib.obsolete-packages.ticket-tracker.www.category-oracle.last_30_days {

tt.creation_date + 30 > sysdate

} {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/obsolete-packages/ticket-tracker/www/category-oracle.xql}
dbqd.contrib.obsolete-packages.ticket-tracker.www.category.category_info_select {dbqd.contrib.obsolete-packages.ticket-tracker.www.category.category_info_select {
      
    select name, 
           description, 
           coalesce(acs_object__name(default_assignee), 'N/A') as assignee_name
      from ttracker_categories 
     where category_id = :category_id

      } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/obsolete-packages/ticket-tracker/www/category-postgresql.xql}
dbqd.contrib.obsolete-packages.ticket-tracker.www.category.tasks_select {dbqd.contrib.obsolete-packages.ticket-tracker.www.category.tasks_select {
      
select ttracker_option__option_name(:package_id, 'severity', tt.severity) 
         as pretty_severity,
       ttracker_option__option_name(:package_id, 'priority', tt.priority) 
         as pretty_priority,
       tt.ticket_id,
       tt.subject,
       to_char(tt.creation_date, 'MM/DD/YYYY HH24:MI') as created,
       c.state,
       tt.creation_user as creator_id,
       acs_object__name(tt.creation_user) as creator_name
  from wf_cases c,
       ttracker_tickets tt
  where tt.category_id = :category_id and 
        c.object_id = tt.ticket_id
        [ad_dimensional_sql $dimensional]
  [ad_order_by_from_sort_spec $orderby $table_def]

} {} {} {postgresql 7.1} c:/web/openacs-4/contrib/obsolete-packages/ticket-tracker/www/category-postgresql.xql}
dbqd.contrib.obsolete-packages.ticket-tracker.www.category.last_1_day {dbqd.contrib.obsolete-packages.ticket-tracker.www.category.last_1_day {

tt.creation_date + '1 days'::interval > now()

} {} {} {postgresql 7.1} c:/web/openacs-4/contrib/obsolete-packages/ticket-tracker/www/category-postgresql.xql}
dbqd.contrib.obsolete-packages.ticket-tracker.www.category.last_7_days {dbqd.contrib.obsolete-packages.ticket-tracker.www.category.last_7_days {

tt.creation_date + '7 days'::interval > now()

} {} {} {postgresql 7.1} c:/web/openacs-4/contrib/obsolete-packages/ticket-tracker/www/category-postgresql.xql}
dbqd.contrib.obsolete-packages.ticket-tracker.www.category.last_30_days {dbqd.contrib.obsolete-packages.ticket-tracker.www.category.last_30_days {

tt.creation_date + '30 days'::interval > now()

} {} {} {postgresql 7.1} c:/web/openacs-4/contrib/obsolete-packages/ticket-tracker/www/category-postgresql.xql}
dbqd.contrib.obsolete-packages.ticket-tracker.www.category-summary-oracle.tasks_select {dbqd.contrib.obsolete-packages.ticket-tracker.www.category-summary-oracle.tasks_select {
      
select * from 
  (select tc.category_id, 
          tc.name as category,
          count(tt.ticket_id) as total,
          sum(decode(lower(state),'active',1,0)) as active,
          sum(decode(lower(state),'suspended',1,0)) as suspended,
          sum(decode(lower(state),'canceled',1,0)) as canceled,
          sum(decode(lower(state),'finished',1,0)) as finished
     from ttracker_categories tc, ttracker_tickets tt, wf_cases wfc
     where tc.package_id = :package_id and
           tt.category_id = tc.category_id and
           tt.ticket_id = wfc.object_id
           [ad_dimensional_sql $dimensional]
     group by tc.category_id, tc.name                          
  union all
   select tc1.category_id, 
          tc1.name as category,
          0 as total,
          0 as active,
          0 as suspended,
          0 as canceled,
          0 as finished
     from ttracker_categories tc1
     where tc1.package_id = :package_id and 
           not exists (select tt1.ticket_id
                         from ttracker_tickets tt1 
                         where tt1.category_id = tc1.category_id
                         [ad_dimensional_sql $dimensional]))
[ad_order_by_from_sort_spec $orderby $table_def]    

} {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/obsolete-packages/ticket-tracker/www/category-summary-oracle.xql}
dbqd.contrib.obsolete-packages.ticket-tracker.www.category-summary-oracle.last_1_year {dbqd.contrib.obsolete-packages.ticket-tracker.www.category-summary-oracle.last_1_year {

creation_date + 365 > sysdate

} {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/obsolete-packages/ticket-tracker/www/category-summary-oracle.xql}
dbqd.contrib.obsolete-packages.ticket-tracker.www.category-summary-oracle.last_3_months {dbqd.contrib.obsolete-packages.ticket-tracker.www.category-summary-oracle.last_3_months {

creation_date + 90 > sysdate

} {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/obsolete-packages/ticket-tracker/www/category-summary-oracle.xql}
dbqd.contrib.obsolete-packages.ticket-tracker.www.category-summary-oracle.last_1_month {dbqd.contrib.obsolete-packages.ticket-tracker.www.category-summary-oracle.last_1_month {

creation_date + 30 > sysdate

} {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/obsolete-packages/ticket-tracker/www/category-summary-oracle.xql}
dbqd.contrib.obsolete-packages.ticket-tracker.www.category-summary.tasks_select {dbqd.contrib.obsolete-packages.ticket-tracker.www.category-summary.tasks_select {
      
select * from 
  (select tc.category_id, 
          tc.name as category,
          count(tt.ticket_id) as total,
          sum(case when lower(state)='active'    then 1 else 0 end) as active,
          sum(case when lower(state)='suspended' then 1 else 0 end) as suspended,
          sum(case when lower(state)='canceled'  then 1 else 0 end) as canceled,
          sum(case when lower(state)='finished'  then 1 else 0 end) as finished
     from ttracker_categories tc, ttracker_tickets tt, wf_cases wfc
     where tc.package_id = :package_id and
           tt.category_id = tc.category_id and
           tt.ticket_id = wfc.object_id
           [ad_dimensional_sql $dimensional]
     group by tc.category_id, tc.name                          
  union all
   select tc1.category_id, 
          tc1.name as category,
          0 as total,
          0 as active,
          0 as suspended,
          0 as canceled,
          0 as finished
     from ttracker_categories tc1
     where tc1.package_id = :package_id and 
           not exists (select tt1.ticket_id
                         from ttracker_tickets tt1 
                         where tt1.category_id = tc1.category_id
                         [ad_dimensional_sql $dimensional])) as tasks
[ad_order_by_from_sort_spec $orderby $table_def]    

} {} {} {postgresql 7.1} c:/web/openacs-4/contrib/obsolete-packages/ticket-tracker/www/category-summary-postgresql.xql}
dbqd.contrib.obsolete-packages.ticket-tracker.www.category-summary.last_1_year {dbqd.contrib.obsolete-packages.ticket-tracker.www.category-summary.last_1_year {

creation_date + '365 days'::interval > now()

} {} {} {postgresql 7.1} c:/web/openacs-4/contrib/obsolete-packages/ticket-tracker/www/category-summary-postgresql.xql}
dbqd.contrib.obsolete-packages.ticket-tracker.www.category-summary.last_3_months {dbqd.contrib.obsolete-packages.ticket-tracker.www.category-summary.last_3_months {

creation_date + '90 days'::interval > now()

} {} {} {postgresql 7.1} c:/web/openacs-4/contrib/obsolete-packages/ticket-tracker/www/category-summary-postgresql.xql}
dbqd.contrib.obsolete-packages.ticket-tracker.www.category-summary.last_1_month {dbqd.contrib.obsolete-packages.ticket-tracker.www.category-summary.last_1_month {

creation_date + '30 days'::interval > now()

} {} {} {postgresql 7.1} c:/web/openacs-4/contrib/obsolete-packages/ticket-tracker/www/category-summary-postgresql.xql}
dbqd.contrib.obsolete-packages.ticket-tracker.www.index-oracle.package_name {dbqd.contrib.obsolete-packages.ticket-tracker.www.index-oracle.package_name {
      select apm_package.name(:package_id) from dual
      } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/obsolete-packages/ticket-tracker/www/index-oracle.xql}
dbqd.contrib.obsolete-packages.ticket-tracker.www.index-oracle.tasks_select {dbqd.contrib.obsolete-packages.ticket-tracker.www.index-oracle.tasks_select {

             select tt.ticket_id, 
                    tt.subject, 
                    ttracker_option.option_name(:package_id, 'severity', tt.severity) as pretty_severity,
                    ttracker_option.option_name(:package_id, 'priority', tt.priority) as pretty_priority,
                    tt.creation_date as created, 
                    ca.case_id, 
                    tc.name as category, 
                    ta.task_id,
                    ta.transition_key as to_do
               from ttracker_tickets tt, 
                    wf_cases ca, 
                    ttracker_categories tc,
                    wf_task_assignments w, 
                    wf_tasks ta, party_approved_member_map map
              where ca.object_id = tt.ticket_id
	        and ca.state = 'active'
                and tt.category_id = tc.category_id
                and tc.package_id = :package_id
                and w.party_id = map.party_id
                and map.member_id = :user_id 
                and ta.case_id = ca.case_id 
                and ta.task_id = w.task_id
                and (ta.state='enabled' or (ta.state='started' and ta.holding_user=:user_id))
               [ad_order_by_from_sort_spec $orderby $table_def]      

} {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/obsolete-packages/ticket-tracker/www/index-oracle.xql}
dbqd.contrib.obsolete-packages.ticket-tracker.www.index-oracle.unassigned_tasks_select {dbqd.contrib.obsolete-packages.ticket-tracker.www.index-oracle.unassigned_tasks_select {

    select tt.ticket_id,
           ttracker_option.option_name(:package_id, 'severity', tt.severity) as pretty_severity,
           ttracker_option.option_name(:package_id, 'priority', tt.priority) as pretty_priority,
           tt.subject,
           to_char(tt.creation_date, 'MM/DD/YYYY HH24:MI') as created,
           tc.name as category,
           ta.task_id
      from ttracker_tickets tt,
           ttracker_categories tc,
           wf_cases ca,
           wf_tasks ta
     where tc.package_id = :package_id
       and tt.category_id = tc.category_id
       and ca.object_id = tt.ticket_id
       and ca.state = 'active'
       and ta.case_id = ca.case_id 
       and not exists (select tasn.task_id 
                         from wf_task_assignments tasn
                         where tasn.task_id = ta.task_id)           
    [ad_order_by_from_sort_spec $orderby $table_def]

} {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/obsolete-packages/ticket-tracker/www/index-oracle.xql}
dbqd.contrib.obsolete-packages.ticket-tracker.www.index.package_name {dbqd.contrib.obsolete-packages.ticket-tracker.www.index.package_name {

select apm_package__name(:package_id) 

} {} {} {postgresql 7.1} c:/web/openacs-4/contrib/obsolete-packages/ticket-tracker/www/index-postgresql.xql}
dbqd.contrib.obsolete-packages.ticket-tracker.www.index.tasks_select {dbqd.contrib.obsolete-packages.ticket-tracker.www.index.tasks_select {

select tt.ticket_id, 
       tt.subject, 
       ttracker_option__option_name(:package_id, 'severity', tt.severity)
         as pretty_severity,
       ttracker_option__option_name(:package_id, 'priority', tt.priority) 
         as pretty_priority,
       tt.creation_date as created, 
       ca.case_id, 
       tc.name as category, 
       ta.task_id,
       ta.transition_key as to_do
  from ttracker_tickets tt, 
       wf_cases ca, 
       ttracker_categories tc,
       wf_task_assignments w, 
       wf_tasks ta, party_approved_member_map map
  where ca.object_id = tt.ticket_id and 
        ca.state = 'active' and 
        tt.category_id = tc.category_id and 
        tc.package_id = :package_id and 
        w.party_id = map.party_id and 
        map.member_id = :user_id and 
        ta.case_id = ca.case_id and 
        ta.task_id = w.task_id and 
        (ta.state='enabled' or 
         (ta.state='started' and ta.holding_user=:user_id))
  [ad_order_by_from_sort_spec $orderby $table_def]      

} {} {} {postgresql 7.1} c:/web/openacs-4/contrib/obsolete-packages/ticket-tracker/www/index-postgresql.xql}
dbqd.contrib.obsolete-packages.ticket-tracker.www.index.unassigned_tasks_select {dbqd.contrib.obsolete-packages.ticket-tracker.www.index.unassigned_tasks_select {

select tt.ticket_id,
       ttracker_option__option_name(:package_id, 'severity', tt.severity) 
         as pretty_severity,
       ttracker_option__option_name(:package_id, 'priority', tt.priority) 
         as pretty_priority,
       tt.subject,
       to_char(tt.creation_date, 'MM/DD/YYYY HH24:MI') as created,
       tc.name as category,
       ta.task_id
  from ttracker_tickets tt,
       ttracker_categories tc,
       wf_cases ca,
       wf_tasks ta
  where tc.package_id = :package_id and 
        tt.category_id = tc.category_id and 
        ca.object_id = tt.ticket_id and 
        ca.state = 'active' and 
        ta.case_id = ca.case_id and 
        not exists (select tasn.task_id 
                      from wf_task_assignments tasn
                      where tasn.task_id = ta.task_id)           
  [ad_order_by_from_sort_spec $orderby $table_def]

} {} {} {postgresql 7.1} c:/web/openacs-4/contrib/obsolete-packages/ticket-tracker/www/index-postgresql.xql}
dbqd.contrib.obsolete-packages.ticket-tracker.www.index.categories_select {dbqd.contrib.obsolete-packages.ticket-tracker.www.index.categories_select {
      
    select category_id, name 
    from ttracker_categories
    where package_id = :package_id
    order by upper(name)

      } {} {} {} c:/web/openacs-4/contrib/obsolete-packages/ticket-tracker/www/index.xql}
dbqd.contrib.obsolete-packages.ticket-tracker.www.selection-bar.options_select {dbqd.contrib.obsolete-packages.ticket-tracker.www.selection-bar.options_select {
      
    select name, 
           function,
           value
      from ttracker_options
     where package_id = :package_id
     order by function,value

      } {} {} {} c:/web/openacs-4/contrib/obsolete-packages/ticket-tracker/www/selection-bar.xql}
dbqd.contrib.obsolete-packages.ticket-tracker.www.state-change.case_id_select {dbqd.contrib.obsolete-packages.ticket-tracker.www.state-change.case_id_select {
      
    select case_id, state
      from wf_cases
     where object_id = :ticket_id

      } {} {} {} c:/web/openacs-4/contrib/obsolete-packages/ticket-tracker/www/state-change.xql}
dbqd.contrib.obsolete-packages.ticket-tracker.www.ticket-add-2-oracle.insert_ticket {dbqd.contrib.obsolete-packages.ticket-tracker.www.ticket-add-2-oracle.insert_ticket {
      
    declare
        v_ticket_id  acs_objects.object_id%TYPE;
    begin
        v_ticket_id := ttracker_ticket.new (
            context_id    => :package_id,                      
            subject       => :subject,
            description   => :description,
            mime_type     => :mime_type,
            category_id   => :category_id,
            severity      => :severity,
            priority      => :priority,
            creation_user => :user_id,
            creation_ip   => :creation_ip
        );

        acs_permission.grant_permission(
            object_id  => v_ticket_id,
            grantee_id => :user_id,
            privilege  => 'write'
        );        
    end;

      } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/obsolete-packages/ticket-tracker/www/ticket-add-2-oracle.xql}
dbqd.contrib.obsolete-packages.ticket-tracker.www.ticket-add-2.insert_ticket {dbqd.contrib.obsolete-packages.ticket-tracker.www.ticket-add-2.insert_ticket {

select ttracker_ticket__new (
	null,				-- ticket_id
	'ttracker_ticket',	-- object_type
    :package_id,		-- context_id    
    :subject, 			-- subject      
    :description, 		-- description  
    :mime_type, 		-- mime_type    
    :category_id, 		-- category_id  
    :severity, 			-- severity     
    :priority, 			-- priority
	now(),				-- creation_date
    :user_id, 			-- creation_user
    :creation_ip 		-- creation_ip  
  );

} {} {} {postgresql 7.1} c:/web/openacs-4/contrib/obsolete-packages/ticket-tracker/www/ticket-add-2-postgresql.xql}
dbqd.contrib.obsolete-packages.ticket-tracker.www.ticket-add.get_categories {dbqd.contrib.obsolete-packages.ticket-tracker.www.ticket-add.get_categories {
      
  select category_id, name
    from ttracker_categories
   where package_id = :package_id
   order by upper(name) 

      } {} {} {} c:/web/openacs-4/contrib/obsolete-packages/ticket-tracker/www/ticket-add.xql}
dbqd.contrib.obsolete-packages.ticket-tracker.www.ticket-add.get_options {dbqd.contrib.obsolete-packages.ticket-tracker.www.ticket-add.get_options {
      
    select name, 
           value,
           function
      from ttracker_options
     where package_id = :package_id
     order by function, value
	 
      } {} {} {} c:/web/openacs-4/contrib/obsolete-packages/ticket-tracker/www/ticket-add.xql}
dbqd.contrib.obsolete-packages.ticket-tracker.www.ticket-edit-2-oracle.update_mime_subj_desc {dbqd.contrib.obsolete-packages.ticket-tracker.www.ticket-edit-2-oracle.update_mime_subj_desc {
      
        begin
            ttracker_ticket.update_mime_subj_desc (
                ticket_id => :ticket_id,
                mime_type => :mime_type,
	            subject => :subject,
                description => :description
            );
        end;
    
      } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/obsolete-packages/ticket-tracker/www/ticket-edit-2-oracle.xql}
dbqd.contrib.obsolete-packages.ticket-tracker.www.ticket-edit-2.update_mime_subj_desc {dbqd.contrib.obsolete-packages.ticket-tracker.www.ticket-edit-2.update_mime_subj_desc {

select ttracker_ticket__update_mime_subj_desc (
          :ticket_id,		-- ticket_id
          :mime_type,		-- mime_type
	      :subject,			-- subject
          :description		-- description
       );
    
} {} {} {postgresql 7.1} c:/web/openacs-4/contrib/obsolete-packages/ticket-tracker/www/ticket-edit-2-postgresql.xql}
dbqd.contrib.obsolete-packages.ticket-tracker.www.ticket-edit-2.update_ttracker_tickets {dbqd.contrib.obsolete-packages.ticket-tracker.www.ticket-edit-2.update_ttracker_tickets {
      
        update ttracker_tickets 
           set category_id = :category_id,
               subject = :subject,
               severity = :severity,
               priority = :priority
         where ticket_id = :ticket_id
    
      } {} {} {} c:/web/openacs-4/contrib/obsolete-packages/ticket-tracker/www/ticket-edit-2.xql}
dbqd.contrib.obsolete-packages.ticket-tracker.www.ticket-edit-oracle.ticket_info_select {dbqd.contrib.obsolete-packages.ticket-tracker.www.ticket-edit-oracle.ticket_info_select {
      
    select tt.ticket_id as id,
           tt.subject,
           tt.priority,
           tt.severity,
           tt.category_id,
           cr.mime_type,
           cr.content as description
      from ttracker_tickets tt,
           cr_revisions cr
     where tt.ticket_id = :ticket_id 
       and cr.revision_id = content_item.get_live_revision(:ticket_id)

      } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/obsolete-packages/ticket-tracker/www/ticket-edit-oracle.xql}
dbqd.contrib.obsolete-packages.ticket-tracker.www.ticket-edit.ticket_info_select {dbqd.contrib.obsolete-packages.ticket-tracker.www.ticket-edit.ticket_info_select {
      
    select tt.ticket_id as id,
           tt.subject,
           tt.priority,
           tt.severity,
           tt.category_id,
           cr.mime_type,
           cr.content as description
      from ttracker_tickets tt,
           cr_revisions cr
     where tt.ticket_id = :ticket_id 
       and cr.revision_id = content_item__get_live_revision(:ticket_id)

      } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/obsolete-packages/ticket-tracker/www/ticket-edit-postgresql.xql}
dbqd.contrib.obsolete-packages.ticket-tracker.www.ticket-edit.get_categories {dbqd.contrib.obsolete-packages.ticket-tracker.www.ticket-edit.get_categories {
      
  select category_id, name
    from ttracker_categories
   where package_id = :package_id

      } {} {} {} c:/web/openacs-4/contrib/obsolete-packages/ticket-tracker/www/ticket-edit.xql}
dbqd.contrib.obsolete-packages.ticket-tracker.www.ticket-edit.get_options {dbqd.contrib.obsolete-packages.ticket-tracker.www.ticket-edit.get_options {
      
    select name, 
           value,
           function
      from ttracker_options
     where package_id = :package_id

      } {} {} {} c:/web/openacs-4/contrib/obsolete-packages/ticket-tracker/www/ticket-edit.xql}
dbqd.contrib.obsolete-packages.ticket-tracker.www.ticket-view-oracle.get_permission {dbqd.contrib.obsolete-packages.ticket-tracker.www.ticket-view-oracle.get_permission {
      
    select decode(acs_permission.permission_p(:ticket_id, :user_id, 'write'), 't', 1, 0) as write_p,
           decode(acs_permission.permission_p(:ticket_id, :user_id, 'admin'), 't', 1, 0) as admin_p 
      from dual

      } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/obsolete-packages/ticket-tracker/www/ticket-view-oracle.xql}
dbqd.contrib.obsolete-packages.ticket-tracker.www.ticket-view-oracle.ticket_info_select {dbqd.contrib.obsolete-packages.ticket-tracker.www.ticket-view-oracle.ticket_info_select {
      
    select tt.subject,
           cr.content as description,
           cr.mime_type,
           ttracker_option.option_name(:package_id, 'severity', tt.severity) as pretty_severity,
           ttracker_option.option_name(:package_id, 'priority', tt.priority) as pretty_priority,
           to_char(tt.creation_date, 'MM/DD/YYYY HH24:MI') as created,
           tc.name as category,
           tc.category_id,
           acs_object.name(tt.creation_user) as submitted_by,
           wc.state, 
           wc.case_id    
      from ttracker_tickets tt,
           ttracker_categories tc,
           wf_cases wc,
           cr_revisions cr
     where tt.ticket_id = :ticket_id 
       and tc.category_id = tt.category_id
       and wc.object_id = :ticket_id
       and cr.revision_id = content_item.get_live_revision(tt.ticket_id)

      } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/obsolete-packages/ticket-tracker/www/ticket-view-oracle.xql}
dbqd.contrib.obsolete-packages.ticket-tracker.www.ticket-view-oracle.assignees_select {dbqd.contrib.obsolete-packages.ticket-tracker.www.ticket-view-oracle.assignees_select {
      
    select acs_object.name(wta.party_id) as name
      from wf_task_assignments wta
     where wta.task_id = (select max(wt.task_id) 
                            from wf_tasks wt,
                                 wf_cases wc
                           where wc.object_id = :ticket_id
                             and wt.case_id = wc.case_id
                             and wt.transition_key = 'resolve')

      } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/obsolete-packages/ticket-tracker/www/ticket-view-oracle.xql}
dbqd.contrib.obsolete-packages.ticket-tracker.www.ticket-view.get_permission {dbqd.contrib.obsolete-packages.ticket-tracker.www.ticket-view.get_permission {

select case when acs_permission__permission_p(:ticket_id, :user_id, 'write') = 't'
	then 1 else 0 end as write_p,
       case when acs_permission__permission_p(:ticket_id, :user_id, 'admin') = 't'
	then 1 else 0 end as admin_p 
      
} {} {} {postgresql 7.1} c:/web/openacs-4/contrib/obsolete-packages/ticket-tracker/www/ticket-view-postgresql.xql}
dbqd.contrib.obsolete-packages.ticket-tracker.www.ticket-view.ticket_info_select {dbqd.contrib.obsolete-packages.ticket-tracker.www.ticket-view.ticket_info_select {
      
select tt.subject,
       cr.content as description,
       cr.mime_type,
       ttracker_option__option_name(:package_id, 'severity', tt.severity) 
		as pretty_severity,
       ttracker_option__option_name(:package_id, 'priority', tt.priority) 
		as pretty_priority,
       to_char(tt.creation_date, 'MM/DD/YYYY HH24:MI') as created,
       tc.name as category,
       tc.category_id,
       acs_object__name(tt.creation_user) as submitted_by,
       wc.state, 
       wc.case_id    
  from ttracker_tickets tt,
       ttracker_categories tc,
       wf_cases wc,
       cr_revisions cr
  where tt.ticket_id = :ticket_id and 
        tc.category_id = tt.category_id and 
        wc.object_id = :ticket_id and 
        cr.revision_id = content_item__get_live_revision(tt.ticket_id)

} {} {} {postgresql 7.1} c:/web/openacs-4/contrib/obsolete-packages/ticket-tracker/www/ticket-view-postgresql.xql}
dbqd.contrib.obsolete-packages.ticket-tracker.www.ticket-view.assignees_select {dbqd.contrib.obsolete-packages.ticket-tracker.www.ticket-view.assignees_select {
      
select acs_object__name(wta.party_id) as name
  from wf_task_assignments wta
  where wta.task_id = (select max(wt.task_id) 
                            from wf_tasks wt,
                                 wf_cases wc
                           where wc.object_id = :ticket_id
                             and wt.case_id = wc.case_id
                             and wt.transition_key = 'resolve')

} {} {} {postgresql 7.1} c:/web/openacs-4/contrib/obsolete-packages/ticket-tracker/www/ticket-view-postgresql.xql}
dbqd.contrib.obsolete-packages.ticket-tracker.www.tickets-oracle.ticket_select_me {dbqd.contrib.obsolete-packages.ticket-tracker.www.tickets-oracle.ticket_select_me {
	  
select tt.ticket_id,
	   tt.severity,
	   ttracker_option.option_name(:package_id, 'severity', tt.severity) 
		 as pretty_severity,
	   tt.priority,
	   ttracker_option.option_name(:package_id, 'priority', tt.priority) 
		 as pretty_priority,
	   tt.subject,
	   to_char(tt.creation_date, 'MM/DD/YYYY HH24:MI') as created,
	   tc.category_id,
	   tc.name as category,
	   tt.creation_user as creator_id,
	   acs_object.name(tt.creation_user) as creator_name,
	   wc.state,
	   :user_id as assignee_id,
	   'me' as assignee_name
	   $view_select
  from ttracker_categories tc,
	   ttracker_tickets tt,
	   wf_cases wc
	   $view_from
  where tc.package_id = :package_id and
		tt.category_id = tc.category_id and
		wc.object_id = tt.ticket_id and 
		exists (select wt.task_id 
				  from wf_task_assignments wta,
					   wf_tasks wt,
					   party_approved_member_map m
				  where wt.transition_key = 'resolve' and 
						wt.task_id = wta.task_id and 
						wta.party_id = m.party_id and 
						m.member_id = :user_id and 
						wt.case_id = wc.case_id and 
						wt.task_id = (select max(wt1.task_id) 
										from wf_tasks wt1
										where wt1.case_id = wc.case_id and 
											  wt1.transition_key = 'resolve'))
		$view_where
		[ad_dimensional_sql $dimensional] 
  [ad_order_by_from_sort_spec $orderby $table_def]

} {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/obsolete-packages/ticket-tracker/www/tickets-oracle.xql}
dbqd.contrib.obsolete-packages.ticket-tracker.www.tickets-oracle.ticket_select_noass {dbqd.contrib.obsolete-packages.ticket-tracker.www.tickets-oracle.ticket_select_noass {
	  
select tt.ticket_id,
	   tt.severity,
	   ttracker_option.option_name(:package_id, 'severity', tt.severity) 
		 as pretty_severity,
	   tt.priority,
	   ttracker_option.option_name(:package_id, 'priority', tt.priority) 
		 as pretty_priority,
	   tt.subject,
	   to_char(tt.creation_date, 'MM/DD/YYYY HH24:MI') as created,
	   tc.category_id,
	   tc.name as category,
	   tt.creation_user as creator_id,
	   acs_object.name(tt.creation_user) as creator_name,
	   wc.state,
	   0 as assignee_id,
	   '' as assignee_name
	   $view_select
  from ttracker_categories tc,
	   ttracker_tickets tt,
	   wf_cases wc
	   $view_from
  where tc.package_id = :package_id and
		tt.category_id = tc.category_id and
		wc.object_id = tt.ticket_id and 
		not exists (select wta1.task_id 
					  from wf_task_assignments wta1 
					  where wta1.task_id = (select max(wt.task_id) 
											  from wf_tasks wt
											  where wt.case_id = wc.case_id and 
													wt.transition_key = 'resolve'))
		$view_where
		[ad_dimensional_sql $dimensional] 
  [ad_order_by_from_sort_spec $orderby $table_def]"

} {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/obsolete-packages/ticket-tracker/www/tickets-oracle.xql}
dbqd.contrib.obsolete-packages.ticket-tracker.www.tickets-oracle.ticket_select_all {dbqd.contrib.obsolete-packages.ticket-tracker.www.tickets-oracle.ticket_select_all {

select results.* from 
  (select tt.ticket_id,
		  tt.severity,
		  ttracker_option.option_name(:package_id, 'severity', tt.severity) 
			as pretty_severity,
		  tt.priority,
		  ttracker_option.option_name(:package_id, 'priority', tt.priority) 
			as pretty_priority,
		  tt.subject,
		  to_char(tt.creation_date, 'MM/DD/YYYY HH24:MI') as created,
		  tc.category_id,
		  tc.name as category,
		  tt.creation_user as creator_id,
		  acs_object.name(tt.creation_user) as creator_name,
		  wc.state,
		  wta.party_id as assignee_id, 
		  acs_object.name(wta.party_id) as assignee_name
		  $view_select
	 from ttracker_categories tc,
		  ttracker_tickets tt,
		  wf_cases wc,
		  wf_task_assignments wta
		  $view_from
	 where tc.package_id = :package_id and
		   tt.category_id = tc.category_id and
		   wc.object_id = tt.ticket_id and
		   wta.task_id = (select max(wt.task_id) 
							from wf_tasks wt
							where wt.case_id = wc.case_id and 
								  wt.transition_key = 'resolve')
		   $view_where
		   [ad_dimensional_sql $dimensional]					
  union all
   select tt.ticket_id,
		  tt.severity,
		  ttracker_option.option_name(:package_id, 'severity', tt.severity) 
			as pretty_severity,
		  tt.priority,
		  ttracker_option.option_name(:package_id, 'priority', tt.priority) 
			as pretty_priority,
		  tt.subject,
		  to_char(tt.creation_date, 'MM/DD/YYYY HH24:MI') as created,
		  tc.category_id,
		  tc.name as category,
		  tt.creation_user as creator_id,
		  acs_object.name(tt.creation_user) as creator_name,
		  wc.state,
		  0 as assignee_id,
		  '' as assignee_name
		  $view_select
	 from ttracker_categories tc,
		  ttracker_tickets tt,
		  wf_cases wc
		  $view_from
	 where tc.package_id = :package_id and
		   tt.category_id = tc.category_id and
		   wc.object_id = tt.ticket_id and
		   not exists (select wta1.task_id 
						 from wf_task_assignments wta1 
						 where wta1.task_id = (select max(wt.task_id) 
												 from wf_tasks wt
												 where wt.case_id = wc.case_id and 
													   wt.transition_key = 'resolve'))
		   $view_where
		   [ad_dimensional_sql $dimensional]) results
[ad_order_by_from_sort_spec $orderby $table_def]

} {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/obsolete-packages/ticket-tracker/www/tickets-oracle.xql}
dbqd.contrib.obsolete-packages.ticket-tracker.www.tickets-oracle.last_1_day {dbqd.contrib.obsolete-packages.ticket-tracker.www.tickets-oracle.last_1_day {

tt.creation_date + 1 > sysdate

} {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/obsolete-packages/ticket-tracker/www/tickets-oracle.xql}
dbqd.contrib.obsolete-packages.ticket-tracker.www.tickets-oracle.last_7_days {dbqd.contrib.obsolete-packages.ticket-tracker.www.tickets-oracle.last_7_days {

tt.creation_date + 7 > sysdate

} {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/obsolete-packages/ticket-tracker/www/tickets-oracle.xql}
dbqd.contrib.obsolete-packages.ticket-tracker.www.tickets-oracle.last_30_days {dbqd.contrib.obsolete-packages.ticket-tracker.www.tickets-oracle.last_30_days {

tt.creation_date + 30 > sysdate

} {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/obsolete-packages/ticket-tracker/www/tickets-oracle.xql}
dbqd.contrib.obsolete-packages.ticket-tracker.www.tickets-oracle.live_revision {dbqd.contrib.obsolete-packages.ticket-tracker.www.tickets-oracle.live_revision {

and cr.revision_id = content_item.get_live_revision(tt.ticket_id) 

} {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/obsolete-packages/ticket-tracker/www/tickets-oracle.xql}
dbqd.contrib.obsolete-packages.ticket-tracker.www.tickets.ticket_select_me {dbqd.contrib.obsolete-packages.ticket-tracker.www.tickets.ticket_select_me {
	  
select tt.ticket_id,
	   tt.severity,
	   ttracker_option__option_name(:package_id, 'severity', tt.severity) 
		 as pretty_severity,
	   tt.priority,
	   ttracker_option__option_name(:package_id, 'priority', tt.priority) 
		 as pretty_priority,
	   tt.subject,
	   to_char(tt.creation_date, 'MM/DD/YYYY HH24:MI') as created,
	   tc.category_id,
	   tc.name as category,
	   tt.creation_user as creator_id,
	   acs_object__name(tt.creation_user) as creator_name,
	   wc.state,
	   :user_id as assignee_id,
	   'me' as assignee_name
	   $view_select
  from ttracker_categories tc,
	   ttracker_tickets tt,
	   wf_cases wc
	   $view_from
  where tc.package_id = :package_id and
		tt.category_id = tc.category_id and
		wc.object_id = tt.ticket_id and 
		exists (select wt.task_id 
				  from wf_task_assignments wta,
					   wf_tasks wt,
					   party_approved_member_map m
				  where wt.transition_key = 'resolve' and 
						wt.task_id = wta.task_id and 
						wta.party_id = m.party_id and 
						m.member_id = :user_id and 
						wt.case_id = wc.case_id and 
						wt.task_id = (select max(wt1.task_id) 
										from wf_tasks wt1
										where wt1.case_id = wc.case_id and 
											  wt1.transition_key = 'resolve'))
		$view_where
		[ad_dimensional_sql $dimensional] 
  [ad_order_by_from_sort_spec $orderby $table_def]

} {} {} {postgresql 7.1} c:/web/openacs-4/contrib/obsolete-packages/ticket-tracker/www/tickets-postgresql.xql}
dbqd.contrib.obsolete-packages.ticket-tracker.www.tickets.ticket_select_noass {dbqd.contrib.obsolete-packages.ticket-tracker.www.tickets.ticket_select_noass {
	  
select tt.ticket_id,
	   tt.severity,
	   ttracker_option__option_name(:package_id, 'severity', tt.severity) 
		 as pretty_severity,
	   tt.priority,
	   ttracker_option__option_name(:package_id, 'priority', tt.priority) 
		 as pretty_priority,
	   tt.subject,
	   to_char(tt.creation_date, 'MM/DD/YYYY HH24:MI') as created,
	   tc.category_id,
	   tc.name as category,
	   tt.creation_user as creator_id,
	   acs_object__name(tt.creation_user) as creator_name,
	   wc.state,
	   0 as assignee_id,
	   '' as assignee_name
	   $view_select
  from ttracker_categories tc,
	   ttracker_tickets tt,
	   wf_cases wc
	   $view_from
  where tc.package_id = :package_id and
		tt.category_id = tc.category_id and
		wc.object_id = tt.ticket_id and 
		not exists (select wta1.task_id 
					  from wf_task_assignments wta1 
					  where wta1.task_id = (select max(wt.task_id) 
											  from wf_tasks wt
											  where wt.case_id = wc.case_id and 
													wt.transition_key = 'resolve'))
		$view_where
		[ad_dimensional_sql $dimensional] 
  [ad_order_by_from_sort_spec $orderby $table_def]

} {} {} {postgresql 7.1} c:/web/openacs-4/contrib/obsolete-packages/ticket-tracker/www/tickets-postgresql.xql}
dbqd.contrib.obsolete-packages.ticket-tracker.www.tickets.ticket_select_all {dbqd.contrib.obsolete-packages.ticket-tracker.www.tickets.ticket_select_all {

select results.* from 
  (select tt.ticket_id,
		  tt.severity,
		  ttracker_option__option_name(:package_id, 'severity', tt.severity) 
			as pretty_severity,
		  tt.priority,
		  ttracker_option__option_name(:package_id, 'priority', tt.priority) 
			as pretty_priority,
		  tt.subject,
		  to_char(tt.creation_date, 'MM/DD/YYYY HH24:MI') as created,
		  tc.category_id,
		  tc.name as category,
		  tt.creation_user as creator_id,
		  acs_object__name(tt.creation_user) as creator_name,
		  wc.state,
		  wta.party_id as assignee_id, 
		  acs_object__name(wta.party_id) as assignee_name
		  $view_select
	 from ttracker_categories tc,
		  ttracker_tickets tt,
		  wf_cases wc,
		  wf_task_assignments wta
		  $view_from
	 where tc.package_id = :package_id and
		   tt.category_id = tc.category_id and
		   wc.object_id = tt.ticket_id and
		   wta.task_id = (select max(wt.task_id) 
							from wf_tasks wt
							where wt.case_id = wc.case_id and 
								  wt.transition_key = 'resolve')
		   $view_where
		   [ad_dimensional_sql $dimensional]					
  union all
   select tt.ticket_id,
		  tt.severity,
		  ttracker_option__option_name(:package_id, 'severity', tt.severity) 
			as pretty_severity,
		  tt.priority,
		  ttracker_option__option_name(:package_id, 'priority', tt.priority) 
			as pretty_priority,
		  tt.subject,
		  to_char(tt.creation_date, 'MM/DD/YYYY HH24:MI') as created,
		  tc.category_id,
		  tc.name as category,
		  tt.creation_user as creator_id,
		  acs_object__name(tt.creation_user) as creator_name,
		  wc.state,
		  0 as assignee_id,
		  '' as assignee_name
		  $view_select
	 from ttracker_categories tc,
		  ttracker_tickets tt,
		  wf_cases wc
		  $view_from
	 where tc.package_id = :package_id and
		   tt.category_id = tc.category_id and
		   wc.object_id = tt.ticket_id and
		   not exists (select wta1.task_id 
						 from wf_task_assignments wta1 
						 where wta1.task_id = (select max(wt.task_id) 
												 from wf_tasks wt
												 where wt.case_id = wc.case_id and 
													   wt.transition_key = 'resolve'))
		   $view_where
		   [ad_dimensional_sql $dimensional]) results
[ad_order_by_from_sort_spec $orderby $table_def]

} {} {} {postgresql 7.1} c:/web/openacs-4/contrib/obsolete-packages/ticket-tracker/www/tickets-postgresql.xql}
dbqd.contrib.obsolete-packages.ticket-tracker.www.tickets.last_1_day {dbqd.contrib.obsolete-packages.ticket-tracker.www.tickets.last_1_day {

tt.creation_date + '1 days'::interval > now()

} {} {} {postgresql 7.1} c:/web/openacs-4/contrib/obsolete-packages/ticket-tracker/www/tickets-postgresql.xql}
dbqd.contrib.obsolete-packages.ticket-tracker.www.tickets.last_7_days {dbqd.contrib.obsolete-packages.ticket-tracker.www.tickets.last_7_days {

tt.creation_date + '7 days'::interval  > now()

} {} {} {postgresql 7.1} c:/web/openacs-4/contrib/obsolete-packages/ticket-tracker/www/tickets-postgresql.xql}
dbqd.contrib.obsolete-packages.ticket-tracker.www.tickets.last_30_days {dbqd.contrib.obsolete-packages.ticket-tracker.www.tickets.last_30_days {

tt.creation_date + '30 days'::interval > now()

} {} {} {postgresql 7.1} c:/web/openacs-4/contrib/obsolete-packages/ticket-tracker/www/tickets-postgresql.xql}
dbqd.contrib.obsolete-packages.ticket-tracker.www.tickets.live_revision {dbqd.contrib.obsolete-packages.ticket-tracker.www.tickets.live_revision {

and cr.revision_id = content_item__get_live_revision(tt.ticket_id) 

} {} {} {postgresql 7.1} c:/web/openacs-4/contrib/obsolete-packages/ticket-tracker/www/tickets-postgresql.xql}
dbqd.contrib.obsolete-packages.ticket-tracker.www.tickets.get_priorities {dbqd.contrib.obsolete-packages.ticket-tracker.www.tickets.get_priorities {
      
select name,
       value
  from ttracker_options
  where package_id = :package_id and 
        function = 'priority'

} {} {} {} c:/web/openacs-4/contrib/obsolete-packages/ticket-tracker/www/tickets.xql}
dbqd.contrib.obsolete-packages.ticket-tracker.www.tickets.get_severities {dbqd.contrib.obsolete-packages.ticket-tracker.www.tickets.get_severities {
      
select name,
       value
  from ttracker_options
  where package_id = :package_id and 
        function = 'severity'

} {} {} {} c:/web/openacs-4/contrib/obsolete-packages/ticket-tracker/www/tickets.xql}
dbqd.contrib.obsolete-packages.ticket-tracker.www.tickets.creation_user {dbqd.contrib.obsolete-packages.ticket-tracker.www.tickets.creation_user {

tt.creation_user = $user_id

} {} {} {} c:/web/openacs-4/contrib/obsolete-packages/ticket-tracker/www/tickets.xql}
dbqd.contrib.obsolete-packages.ticket-tracker.www.tickets.status_created {dbqd.contrib.obsolete-packages.ticket-tracker.www.tickets.status_created {

wc.state = 'created'

} {} {} {} c:/web/openacs-4/contrib/obsolete-packages/ticket-tracker/www/tickets.xql}
dbqd.contrib.obsolete-packages.ticket-tracker.www.tickets.status_active {dbqd.contrib.obsolete-packages.ticket-tracker.www.tickets.status_active {

wc.state = 'active'

} {} {} {} c:/web/openacs-4/contrib/obsolete-packages/ticket-tracker/www/tickets.xql}
dbqd.contrib.obsolete-packages.ticket-tracker.www.tickets.status_suspended {dbqd.contrib.obsolete-packages.ticket-tracker.www.tickets.status_suspended {

wc.state = 'suspended'

} {} {} {} c:/web/openacs-4/contrib/obsolete-packages/ticket-tracker/www/tickets.xql}
dbqd.contrib.obsolete-packages.ticket-tracker.www.tickets.status_canceled {dbqd.contrib.obsolete-packages.ticket-tracker.www.tickets.status_canceled {

wc.state = 'canceled'

} {} {} {} c:/web/openacs-4/contrib/obsolete-packages/ticket-tracker/www/tickets.xql}
dbqd.contrib.obsolete-packages.ticket-tracker.www.tickets.status_finished {dbqd.contrib.obsolete-packages.ticket-tracker.www.tickets.status_finished {

wc.state = 'finished'

} {} {} {} c:/web/openacs-4/contrib/obsolete-packages/ticket-tracker/www/tickets.xql}
dbqd.contrib.obsolete-packages.ticket-tracker.www.user-assign-summary-oracle.tasks_select {dbqd.contrib.obsolete-packages.ticket-tracker.www.user-assign-summary-oracle.tasks_select {

select wta.party_id, 
       acs_object.name(wta.party_id) as party_name,
       count(ticket_id) as total,
       sum(decode(lower(wc.state),'active',1,0)) as active,
       sum(decode(lower(wc.state),'suspended',1,0)) as suspended,
       sum(decode(lower(wc.state),'canceled',1,0)) as canceled,
       sum(decode(lower(wc.state),'finished',1,0)) as finished,
       max(tt.creation_date) as latest,
       min(tt.creation_date) as oldest
  from ttracker_tickets tt, 
       ttracker_categories tc, 
       wf_cases wc,
       wf_task_assignments wta
  where tc.package_id = :package_id and 
        tt.category_id = tc.category_id and 
        tt.ticket_id = wc.object_id and 
		wta.task_id = (select max(wt.task_id) 
                         from wf_tasks wt
                         where wt.case_id = wc.case_id and 
							   wt.transition_key = 'resolve')
        [ad_dimensional_sql $dimensional] 
   group by wta.party_id
   [ad_order_by_from_sort_spec $orderby $table_def]     
      
} {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/obsolete-packages/ticket-tracker/www/user-assign-summary-oracle.xql}
dbqd.contrib.obsolete-packages.ticket-tracker.www.user-assign-summary-oracle.posted_last_year {dbqd.contrib.obsolete-packages.ticket-tracker.www.user-assign-summary-oracle.posted_last_year {

tt.creation_date + 365 > sysdate

} {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/obsolete-packages/ticket-tracker/www/user-assign-summary-oracle.xql}
dbqd.contrib.obsolete-packages.ticket-tracker.www.user-assign-summary-oracle.posted_last_3mos {dbqd.contrib.obsolete-packages.ticket-tracker.www.user-assign-summary-oracle.posted_last_3mos {

tt.creation_date + 90 > sysdate

} {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/obsolete-packages/ticket-tracker/www/user-assign-summary-oracle.xql}
dbqd.contrib.obsolete-packages.ticket-tracker.www.user-assign-summary-oracle.posted_last_month {dbqd.contrib.obsolete-packages.ticket-tracker.www.user-assign-summary-oracle.posted_last_month {

tt.creation_date + 30 > sysdate

} {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/obsolete-packages/ticket-tracker/www/user-assign-summary-oracle.xql}
dbqd.contrib.obsolete-packages.ticket-tracker.www.user-assign-summary.tasks_select {dbqd.contrib.obsolete-packages.ticket-tracker.www.user-assign-summary.tasks_select {

select wta.party_id, 
       acs_object__name(wta.party_id) as party_name,
       count(ticket_id) as total,
       sum(case when lower(wc.state)='active' then 1 else 0 end) as active,
       sum(case when lower(wc.state)='suspended' then 1 else 0 end) as suspended,
       sum(case when lower(wc.state)='canceled' then 1 else 0 end) as canceled,
       sum(case when lower(wc.state)='finished' then 1 else 0 end) as finished,
       max(tt.creation_date) as latest,
       min(tt.creation_date) as oldest
  from ttracker_tickets tt, 
       ttracker_categories tc, 
       wf_cases wc,
       wf_task_assignments wta
  where tc.package_id = :package_id and 
        tt.category_id = tc.category_id and 
        tt.ticket_id = wc.object_id and 
		wta.task_id = (select max(wt.task_id) 
                         from wf_tasks wt
                         where wt.case_id = wc.case_id and 
							   wt.transition_key = 'resolve')
        [ad_dimensional_sql $dimensional] 
   group by wta.party_id
   [ad_order_by_from_sort_spec $orderby $table_def]     
      
} {} {} {postgresql 7.1} c:/web/openacs-4/contrib/obsolete-packages/ticket-tracker/www/user-assign-summary-postgresql.xql}
dbqd.contrib.obsolete-packages.ticket-tracker.www.user-assign-summary.posted_last_year {dbqd.contrib.obsolete-packages.ticket-tracker.www.user-assign-summary.posted_last_year {

tt.creation_date + '365 days'::interval > now()

} {} {} {postgresql 7.1} c:/web/openacs-4/contrib/obsolete-packages/ticket-tracker/www/user-assign-summary-postgresql.xql}
dbqd.contrib.obsolete-packages.ticket-tracker.www.user-assign-summary.posted_last_3mos {dbqd.contrib.obsolete-packages.ticket-tracker.www.user-assign-summary.posted_last_3mos {

tt.creation_date + '90 days'::interval > now()

} {} {} {postgresql 7.1} c:/web/openacs-4/contrib/obsolete-packages/ticket-tracker/www/user-assign-summary-postgresql.xql}
dbqd.contrib.obsolete-packages.ticket-tracker.www.user-assign-summary.posted_last_month {dbqd.contrib.obsolete-packages.ticket-tracker.www.user-assign-summary.posted_last_month {

tt.creation_date + '30 days'::interval > now()

} {} {} {postgresql 7.1} c:/web/openacs-4/contrib/obsolete-packages/ticket-tracker/www/user-assign-summary-postgresql.xql}
dbqd.contrib.obsolete-packages.ticket-tracker.www.user-summary-oracle.tasks_select {dbqd.contrib.obsolete-packages.ticket-tracker.www.user-summary-oracle.tasks_select {

    select tt.creation_user as user_id,
           acs_object.name(tt.creation_user) as user_name,
           count(ticket_id) as total,
           sum(decode(lower(wfc.state),'active',1,0)) as active,
           sum(decode(lower(wfc.state),'suspended',1,0)) as suspended,
           sum(decode(lower(wfc.state),'canceled',1,0)) as canceled,
           sum(decode(lower(wfc.state),'finished',1,0)) as finished,
           max(tt.creation_date) as latest,
           min(tt.creation_date) as earliest
      from ttracker_tickets tt, 
           ttracker_categories tc, 
           wf_cases wfc
     where tc.package_id = :package_id and
           tt.category_id = tc.category_id and
           tt.ticket_id = wfc.object_id 
           [ad_dimensional_sql $dimensional] 
     group by tt.creation_user
     [ad_order_by_from_sort_spec $orderby $table_def]     
      
} {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/obsolete-packages/ticket-tracker/www/user-summary-oracle.xql}
dbqd.contrib.obsolete-packages.ticket-tracker.www.user-summary-oracle.posted_last_year {dbqd.contrib.obsolete-packages.ticket-tracker.www.user-summary-oracle.posted_last_year {

tt.creation_date + 365 > sysdate

} {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/obsolete-packages/ticket-tracker/www/user-summary-oracle.xql}
dbqd.contrib.obsolete-packages.ticket-tracker.www.user-summary-oracle.posted_last_3mos {dbqd.contrib.obsolete-packages.ticket-tracker.www.user-summary-oracle.posted_last_3mos {

tt.creation_date + 90 > sysdate

} {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/obsolete-packages/ticket-tracker/www/user-summary-oracle.xql}
dbqd.contrib.obsolete-packages.ticket-tracker.www.user-summary-oracle.posted_last_month {dbqd.contrib.obsolete-packages.ticket-tracker.www.user-summary-oracle.posted_last_month {

tt.creation_date + 30 > sysdate

} {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/obsolete-packages/ticket-tracker/www/user-summary-oracle.xql}
dbqd.contrib.obsolete-packages.ticket-tracker.www.user-summary.tasks_select {dbqd.contrib.obsolete-packages.ticket-tracker.www.user-summary.tasks_select {

select tt.creation_user as user_id,
       acs_object__name(tt.creation_user) as user_name,
       count(ticket_id) as total,
       sum(case when lower(wfc.state)='active' then 1 else 0 end) as active,
       sum(case when lower(wfc.state)='suspended' then 1 else 0 end) as suspended,
       sum(case when lower(wfc.state)='canceled' then 1 else 0 end) as canceled,
       sum(case when lower(wfc.state)='finished' then 1 else 0 end) as finished,
       max(tt.creation_date) as latest,
       min(tt.creation_date) as earliest
  from ttracker_tickets tt, 
       ttracker_categories tc, 
       wf_cases wfc
  where tc.package_id = :package_id and
        tt.category_id = tc.category_id and
        tt.ticket_id = wfc.object_id 
        [ad_dimensional_sql $dimensional] 
  group by tt.creation_user
  [ad_order_by_from_sort_spec $orderby $table_def]     
      
} {} {} {postgresql 7.1} c:/web/openacs-4/contrib/obsolete-packages/ticket-tracker/www/user-summary-postgresql.xql}
dbqd.contrib.obsolete-packages.ticket-tracker.www.user-summary.posted_last_year {dbqd.contrib.obsolete-packages.ticket-tracker.www.user-summary.posted_last_year {

tt.creation_date + '365 days'::interval > now()

} {} {} {postgresql 7.1} c:/web/openacs-4/contrib/obsolete-packages/ticket-tracker/www/user-summary-postgresql.xql}
dbqd.contrib.obsolete-packages.ticket-tracker.www.user-summary.posted_last_3mos {dbqd.contrib.obsolete-packages.ticket-tracker.www.user-summary.posted_last_3mos {

tt.creation_date + '90 days'::interval > now()

} {} {} {postgresql 7.1} c:/web/openacs-4/contrib/obsolete-packages/ticket-tracker/www/user-summary-postgresql.xql}
dbqd.contrib.obsolete-packages.ticket-tracker.www.user-summary.posted_last_month {dbqd.contrib.obsolete-packages.ticket-tracker.www.user-summary.posted_last_month {

tt.creation_date + '30 days'::interval > now()

} {} {} {postgresql 7.1} c:/web/openacs-4/contrib/obsolete-packages/ticket-tracker/www/user-summary-postgresql.xql}
dbqd.contrib.obsolete-packages.ticket-tracker-lite.tcl.ticket-tracker-lite-procs-oracle.ttl_restrict_to_ttl_users.get_privilege {dbqd.contrib.obsolete-packages.ticket-tracker-lite.tcl.ticket-tracker-lite-procs-oracle.ttl_restrict_to_ttl_users.get_privilege {
      
select ttl_top_privilege_for_object(:package_id, :user_id) as privilege from dual
    
} {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/obsolete-packages/ticket-tracker-lite/tcl/ticket-tracker-lite-procs-oracle.xql}
dbqd.contrib.obsolete-packages.ticket-tracker-lite.tcl.ticket-tracker-lite-procs.ttl_restrict_to_ttl_users.get_privilege {dbqd.contrib.obsolete-packages.ticket-tracker-lite.tcl.ticket-tracker-lite-procs.ttl_restrict_to_ttl_users.get_privilege {
      
select ttl_top_privilege_for_object(:package_id, :user_id) as privilege 
    
} {} {} {postgresql 7.1} c:/web/openacs-4/contrib/obsolete-packages/ticket-tracker-lite/tcl/ticket-tracker-lite-procs-postgresql.xql}
dbqd.contrib.obsolete-packages.ticket-tracker-lite.www.admin.area-ae-2-oracle.new_area {dbqd.contrib.obsolete-packages.ticket-tracker-lite.www.admin.area-ae-2-oracle.new_area {
      
begin
  :1 := acs_object.new(
          object_type   => 'ticket_tracker_lite_area',
          creation_user => :caller_id,
          creation_ip   => :caller_ip,
          context_id    => :package_id
        );
end;
        
} {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/obsolete-packages/ticket-tracker-lite/www/admin/area-ae-2-oracle.xql}
dbqd.contrib.obsolete-packages.ticket-tracker-lite.www.admin.area-ae-2.new_area {dbqd.contrib.obsolete-packages.ticket-tracker-lite.www.admin.area-ae-2.new_area {

declare 
  area_id     integer;
begin
  select acs_object__new (
           null,
           'ticket_tracker_lite_area',
           now(),
           :caller_id,
           :caller_ip,
           :package_id
         ) into area_id;

  return area_id;
end;
        
} {} {} {postgresql 7.1} c:/web/openacs-4/contrib/obsolete-packages/ticket-tracker-lite/www/admin/area-ae-2-postgresql.xql}
dbqd.contrib.obsolete-packages.ticket-tracker-lite.www.admin.area-ae-2.insert_area {dbqd.contrib.obsolete-packages.ticket-tracker-lite.www.admin.area-ae-2.insert_area {
      
insert into ttl_areas (area_id, name) values (:area_id, :name)
        
} {} {} {} c:/web/openacs-4/contrib/obsolete-packages/ticket-tracker-lite/www/admin/area-ae-2.xql}
dbqd.contrib.obsolete-packages.ticket-tracker-lite.www.admin.area-ae-2.update_area {dbqd.contrib.obsolete-packages.ticket-tracker-lite.www.admin.area-ae-2.update_area {
      
update ttl_areas set name = :name where area_id = :area_id
 
} {} {} {} c:/web/openacs-4/contrib/obsolete-packages/ticket-tracker-lite/www/admin/area-ae-2.xql}
dbqd.contrib.obsolete-packages.ticket-tracker-lite.www.admin.area-ae.get_area {dbqd.contrib.obsolete-packages.ticket-tracker-lite.www.admin.area-ae.get_area {

select name from ttl_v_areas where area_id = :area_id

} {} {} {} c:/web/openacs-4/contrib/obsolete-packages/ticket-tracker-lite/www/admin/area-ae.xql}
dbqd.contrib.obsolete-packages.ticket-tracker-lite.www.admin.area-delete.activate_area {dbqd.contrib.obsolete-packages.ticket-tracker-lite.www.admin.area-delete.activate_area {

update ttl_areas set active_p = 't' where area_id = :area_id

} {} {} {} c:/web/openacs-4/contrib/obsolete-packages/ticket-tracker-lite/www/admin/area-delete.xql}
dbqd.contrib.obsolete-packages.ticket-tracker-lite.www.admin.area-delete.inactivate_area {dbqd.contrib.obsolete-packages.ticket-tracker-lite.www.admin.area-delete.inactivate_area {
      
update ttl_areas 
set active_p = 'f'
where area_id = :area_id and 
      exists (select 1 from ttl_v_tickets
                where area_id = :area_id)
    
} {} {} {} c:/web/openacs-4/contrib/obsolete-packages/ticket-tracker-lite/www/admin/area-delete.xql}
dbqd.contrib.obsolete-packages.ticket-tracker-lite.www.admin.area-delete.delete_assignment {dbqd.contrib.obsolete-packages.ticket-tracker-lite.www.admin.area-delete.delete_assignment {

delete from ttl_area_assignments where area_id = :area_id

} {} {} {} c:/web/openacs-4/contrib/obsolete-packages/ticket-tracker-lite/www/admin/area-delete.xql}
dbqd.contrib.obsolete-packages.ticket-tracker-lite.www.admin.area-delete.delete_area {dbqd.contrib.obsolete-packages.ticket-tracker-lite.www.admin.area-delete.delete_area {

delete from ttl_areas where area_id = :area_id

} {} {} {} c:/web/openacs-4/contrib/obsolete-packages/ticket-tracker-lite/www/admin/area-delete.xql}
dbqd.contrib.obsolete-packages.ticket-tracker-lite.www.admin.default-assignee-ae-oracle.add_assignee {dbqd.contrib.obsolete-packages.ticket-tracker-lite.www.admin.default-assignee-ae-oracle.add_assignee {
      
insert into ttl_area_assignments (area_id, user_id)
  select :area_id, :user_id from dual
    where not exists (select 1 from ttl_area_assignments
                        where user_id = :user_id and area_id = :area_id)
    
} {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/obsolete-packages/ticket-tracker-lite/www/admin/default-assignee-ae-oracle.xql}
dbqd.contrib.obsolete-packages.ticket-tracker-lite.www.admin.default-assignee-ae.add_assignee {dbqd.contrib.obsolete-packages.ticket-tracker-lite.www.admin.default-assignee-ae.add_assignee {

insert into ttl_area_assignments (area_id, user_id)
  select :area_id, :user_id where not exists (select 1 from ttl_area_assignments
                                                where user_id = :user_id and 
                                                      area_id = :area_id)
    
} {} {} {postgresql 7.1} c:/web/openacs-4/contrib/obsolete-packages/ticket-tracker-lite/www/admin/default-assignee-ae-postgresql.xql}
dbqd.contrib.obsolete-packages.ticket-tracker-lite.www.admin.default-assignee-ae.delete_assignee {dbqd.contrib.obsolete-packages.ticket-tracker-lite.www.admin.default-assignee-ae.delete_assignee {
      
delete from ttl_area_assignments
  where user_id = :user_id and area_id = :area_id

} {} {} {} c:/web/openacs-4/contrib/obsolete-packages/ticket-tracker-lite/www/admin/default-assignee-ae.xql}
dbqd.contrib.obsolete-packages.ticket-tracker-lite.www.admin.deleted.get_inactive_areas {dbqd.contrib.obsolete-packages.ticket-tracker-lite.www.admin.deleted.get_inactive_areas {

select area_id,
       name,
       'area-delete?area_id=' || area_id || '&action=restore' as restore_url
  from ttl_v_areas
  where context_id = :package_id and 
        active_p = 'f' 
  order by lower(name)

} {} {} {} c:/web/openacs-4/contrib/obsolete-packages/ticket-tracker-lite/www/admin/deleted.xql}
dbqd.contrib.obsolete-packages.ticket-tracker-lite.www.admin.index-oracle.get_users {dbqd.contrib.obsolete-packages.ticket-tracker-lite.www.admin.index-oracle.get_users {

select v.area_id,
       v.name,
       v.full_name,
       v.user_id,
       decode(a.user_id, null, 0, 1) as already_assigned_p
  from ttl_area_assignments a,
       (select ta.area_id, 
               ta.name,
               p.first_names || ' ' || p.last_name as full_name,
               tu.user_id
          from ttl_va_areas ta, ttl_v_users tu, persons p
          where ta.context_id = :package_id and 
                tu.package_id = :package_id and 
                tu.user_id = p.person_id) v
  where v.area_id = a.area_id(+) and 
        v.user_id = a.user_id(+)
  order by v.name, v.full_name      

} {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/obsolete-packages/ticket-tracker-lite/www/admin/index-oracle.xql}
dbqd.contrib.obsolete-packages.ticket-tracker-lite.www.admin.index.get_users {dbqd.contrib.obsolete-packages.ticket-tracker-lite.www.admin.index.get_users {

select v.area_id,
       v.name,
       v.full_name,
       v.user_id,
       case when a.user_id is null then 0 else 1 end as already_assigned_p
  from (select ta.area_id, 
               ta.name,
               p.first_names || ' ' || p.last_name as full_name,
               tu.user_id
         from ttl_va_areas ta, ttl_v_users tu, persons p
         where ta.context_id = :package_id and 
               tu.package_id = :package_id and 
               tu.user_id = p.person_id) v
       left join ttl_area_assignments a using (area_id, user_id)
  order by v.name, v.full_name

} {} {} {postgresql 7.1} c:/web/openacs-4/contrib/obsolete-packages/ticket-tracker-lite/www/admin/index-postgresql.xql}
dbqd.contrib.obsolete-packages.ticket-tracker-lite.www.admin.index.count_users {dbqd.contrib.obsolete-packages.ticket-tracker-lite.www.admin.index.count_users {
      
select count(*) as num_users from ttl_v_users where package_id = :package_id

} {} {} {} c:/web/openacs-4/contrib/obsolete-packages/ticket-tracker-lite/www/admin/index.xql}
dbqd.contrib.obsolete-packages.ticket-tracker-lite.www.admin.index.get_area {dbqd.contrib.obsolete-packages.ticket-tracker-lite.www.admin.index.get_area {
      
select ta.area_id,
       ta.name
  from ttl_va_areas ta
  where ta.context_id = :package_id 
  order by ta.name

} {} {} {} c:/web/openacs-4/contrib/obsolete-packages/ticket-tracker-lite/www/admin/index.xql}
dbqd.contrib.obsolete-packages.ticket-tracker-lite.www.admin.member-ae-oracle.set_permission {dbqd.contrib.obsolete-packages.ticket-tracker-lite.www.admin.member-ae-oracle.set_permission {
      
insert into acs_permissions (object_id, privilege, grantee_id) 
  select :package_id, 'write', :user_id from dual 
    where not exists (select 1 from ttl_v_users where user_id = :user_id and 
                                                      package_id = :package_id)

} {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/obsolete-packages/ticket-tracker-lite/www/admin/member-ae-oracle.xql}
dbqd.contrib.obsolete-packages.ticket-tracker-lite.www.admin.member-ae.set_permission {dbqd.contrib.obsolete-packages.ticket-tracker-lite.www.admin.member-ae.set_permission {
      
insert into acs_permissions (object_id, privilege, grantee_id) 
  select :package_id, 'write', :user_id
    where not exists (select 1 from ttl_v_users 
                        where user_id = :user_id and 
                              package_id = :package_id)
    
} {} {} {postgresql 7.1} c:/web/openacs-4/contrib/obsolete-packages/ticket-tracker-lite/www/admin/member-ae-postgresql.xql}
dbqd.contrib.obsolete-packages.ticket-tracker-lite.www.admin.member-ae.delete_users {dbqd.contrib.obsolete-packages.ticket-tracker-lite.www.admin.member-ae.delete_users {
      
delete from ttl_v_users where user_id = :user_id and package_id = :package_id
    
} {} {} {} c:/web/openacs-4/contrib/obsolete-packages/ticket-tracker-lite/www/admin/member-ae.xql}
dbqd.contrib.obsolete-packages.ticket-tracker-lite.www.admin.users.get_users {dbqd.contrib.obsolete-packages.ticket-tracker-lite.www.admin.users.get_users {
      
select t.user_id,
       p1.first_names || ' ' || p1.last_name as full_name,
       p2.email,
       null as remove_link
  from ttl_v_users t, persons p1, parties p2
  where t.package_id = :package_id and 
        t.user_id = p1.person_id and 
        p1.person_id = p2.party_id
  order by lower(p1.first_names), lower(p1. last_name)

} {} {} {} c:/web/openacs-4/contrib/obsolete-packages/ticket-tracker-lite/www/admin/users.xql}
dbqd.contrib.obsolete-packages.ticket-tracker-lite.www.admin.users.search_users {dbqd.contrib.obsolete-packages.ticket-tracker-lite.www.admin.users.search_users {
      
select u.user_id,
       p2.email,
       p1.first_names,
       p1.last_name,
       null as add_link
  from users u, persons p1, parties p2
  where u.user_id = p1.person_id and 
        p1.person_id = p2.party_id and 
        not exists (select 1 from ttl_v_users t
                      where t.package_id = :package_id and 
                            t.user_id = u.user_id) and 
        lower(last_name) like lower(:last_name_start) || '%'
  order by lower(last_name), lower(first_names)
    
} {} {} {} c:/web/openacs-4/contrib/obsolete-packages/ticket-tracker-lite/www/admin/users.xql}
dbqd.contrib.obsolete-packages.ticket-tracker-lite.www.assignment-ae-oracle.insert_assignment {dbqd.contrib.obsolete-packages.ticket-tracker-lite.www.assignment-ae-oracle.insert_assignment {
      
insert into ttl_assignments (user_id, ticket_id)
  select :user_id, :ticket_id from dual
    where not exists (select 1 from ttl_assignments
                        where user_id = :user_id and ticket_id = :ticket_id)
    
} {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/obsolete-packages/ticket-tracker-lite/www/assignment-ae-oracle.xql}
dbqd.contrib.obsolete-packages.ticket-tracker-lite.www.assignment-ae.insert_assignment {dbqd.contrib.obsolete-packages.ticket-tracker-lite.www.assignment-ae.insert_assignment {
      
insert into ttl_assignments (user_id, ticket_id)
  select :user_id, :ticket_id where not exists (select 1 from ttl_assignments
                                                  where user_id = :user_id and 
                                                        ticket_id = :ticket_id)

} {} {} {postgresql 7.1} c:/web/openacs-4/contrib/obsolete-packages/ticket-tracker-lite/www/assignment-ae-postgresql.xql}
dbqd.contrib.obsolete-packages.ticket-tracker-lite.www.assignment-ae.delete_assignment {dbqd.contrib.obsolete-packages.ticket-tracker-lite.www.assignment-ae.delete_assignment {
      
delete from ttl_assignments where user_id = :user_id and ticket_id = :ticket_id

} {} {} {} c:/web/openacs-4/contrib/obsolete-packages/ticket-tracker-lite/www/assignment-ae.xql}
dbqd.contrib.obsolete-packages.ticket-tracker-lite.www.attach-file-oracle.create_new_file {dbqd.contrib.obsolete-packages.ticket-tracker-lite.www.attach-file-oracle.create_new_file {

	begin
		:1 := ttl__create_file(:package_id, :caller_id, :upload_file, :ticket_id, :mime_type, :file_extension);
	end;

} {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/obsolete-packages/ticket-tracker-lite/www/attach-file-oracle.xql}
dbqd.contrib.obsolete-packages.ticket-tracker-lite.www.attach-file-oracle.file_size_mime_type {dbqd.contrib.obsolete-packages.ticket-tracker-lite.www.attach-file-oracle.file_size_mime_type {

	update cr_revisions 
	set content_length = :tmp_size, 
	    content = empty_blob()
	where revision_id = :revision_id
	returning content into :1

} {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/obsolete-packages/ticket-tracker-lite/www/attach-file-oracle.xql}
dbqd.contrib.obsolete-packages.ticket-tracker-lite.www.attach-file.create_new_file {dbqd.contrib.obsolete-packages.ticket-tracker-lite.www.attach-file.create_new_file {

	select ttl__create_file(:package_id, :caller_id, :upload_file, :ticket_id, :mime_type, :file_extension)

} {} {} {postgresql 7.1} c:/web/openacs-4/contrib/obsolete-packages/ticket-tracker-lite/www/attach-file-postgresql.xql}
dbqd.contrib.obsolete-packages.ticket-tracker-lite.www.attach-file.file_size_mime_type {dbqd.contrib.obsolete-packages.ticket-tracker-lite.www.attach-file.file_size_mime_type {

	update cr_revisions 
	set content_length = :tmp_size, 
	    content = :tmp_filename 
	where revision_id = :revision_id

} {} {} {postgresql 7.1} c:/web/openacs-4/contrib/obsolete-packages/ticket-tracker-lite/www/attach-file-postgresql.xql}
dbqd.contrib.obsolete-packages.ticket-tracker-lite.www.attach-file.get_item_id {dbqd.contrib.obsolete-packages.ticket-tracker-lite.www.attach-file.get_item_id {

	select item_id from cr_revisions where revision_id = :revision_id

} {} {} {} c:/web/openacs-4/contrib/obsolete-packages/ticket-tracker-lite/www/attach-file.xql}
dbqd.contrib.obsolete-packages.ticket-tracker-lite.www.comment-ae-2-oracle.get_recipient_info {dbqd.contrib.obsolete-packages.ticket-tracker-lite.www.comment-ae-2-oracle.get_recipient_info {
      
select name as ticket_name,
       person.name(:caller_id) as sender_fullname,
       (select email from parties
          where party_id = :caller_id) as sender_email
  from ttl_v_tickets where ticket_id = :ticket_id
        
} {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/obsolete-packages/ticket-tracker-lite/www/comment-ae-2-oracle.xql}
dbqd.contrib.obsolete-packages.ticket-tracker-lite.www.comment-ae-2.get_recipient_info {dbqd.contrib.obsolete-packages.ticket-tracker-lite.www.comment-ae-2.get_recipient_info {
      
select name as ticket_name,
       person__name(:caller_id) as sender_fullname,
       (select email from parties
          where party_id = :caller_id) as sender_email
          from ttl_v_tickets where ticket_id = :ticket_id
        
} {} {} {postgresql 7.1} c:/web/openacs-4/contrib/obsolete-packages/ticket-tracker-lite/www/comment-ae-2-postgresql.xql}
dbqd.contrib.obsolete-packages.ticket-tracker-lite.www.comment-ae-2.update_comment {dbqd.contrib.obsolete-packages.ticket-tracker-lite.www.comment-ae-2.update_comment {
      
update ttl_comments 
set message = :message,
    message_format = :message_format
where comment_id = :comment_id

} {} {} {} c:/web/openacs-4/contrib/obsolete-packages/ticket-tracker-lite/www/comment-ae-2.xql}
dbqd.contrib.obsolete-packages.ticket-tracker-lite.www.comment-ae-2.insert_comment {dbqd.contrib.obsolete-packages.ticket-tracker-lite.www.comment-ae-2.insert_comment {
      
insert into ttl_comments 
 (comment_id, ticket_id, creation_user, message, message_format) 
values 
 (:comment_id, :ticket_id, :caller_id, :message, :message_format)
    
} {} {} {} c:/web/openacs-4/contrib/obsolete-packages/ticket-tracker-lite/www/comment-ae-2.xql}
dbqd.contrib.obsolete-packages.ticket-tracker-lite.www.comment-ae-2.get_email {dbqd.contrib.obsolete-packages.ticket-tracker-lite.www.comment-ae-2.get_email {
      
select p.email
  from parties p, ttl_assignments ta
  where ta.ticket_id = :ticket_id and 
        ta.user_id = p.party_id
UNION
select p.email
  from ttl_v_tickets t, parties p
  where t.ticket_id = :ticket_id and 
        t.creation_user = p.party_id
    
} {} {} {} c:/web/openacs-4/contrib/obsolete-packages/ticket-tracker-lite/www/comment-ae-2.xql}
dbqd.contrib.obsolete-packages.ticket-tracker-lite.www.comment-ae-2.get_ticket {dbqd.contrib.obsolete-packages.ticket-tracker-lite.www.comment-ae-2.get_ticket {
      
select ticket_id from ttl_comments where comment_id = :comment_id
    
} {} {} {} c:/web/openacs-4/contrib/obsolete-packages/ticket-tracker-lite/www/comment-ae-2.xql}
dbqd.contrib.obsolete-packages.ticket-tracker-lite.www.comment-ae.get_comment {dbqd.contrib.obsolete-packages.ticket-tracker-lite.www.comment-ae.get_comment {
      
select c.message,
       c.message_format,
       t.ticket_id,
       t.name as ticket_name
  from ttl_comments c, ttl_v_tickets t
  where comment_id = :comment_id and 
        c.ticket_id = t.ticket_id
    
} {} {} {} c:/web/openacs-4/contrib/obsolete-packages/ticket-tracker-lite/www/comment-ae.xql}
dbqd.contrib.obsolete-packages.ticket-tracker-lite.www.comment-ae.get_ticket {dbqd.contrib.obsolete-packages.ticket-tracker-lite.www.comment-ae.get_ticket {
      
select acs_object_id_seq.nextval as comment_id,
       name as ticket_name
  from ttl_v_tickets t
  where ticket_id = :ticket_id
    
} {} {} {} c:/web/openacs-4/contrib/obsolete-packages/ticket-tracker-lite/www/comment-ae.xql}
dbqd.contrib.obsolete-packages.ticket-tracker-lite.www.comments.get_comments {dbqd.contrib.obsolete-packages.ticket-tracker-lite.www.comments.get_comments {
      
select r.comment_id,
       p.first_names || ' ' || p.last_name as comment_username,
       r.message,
       r.message_format,
       ttl_relative_date(r.creation_date) as comment_date,
       case when :caller_id = r.creation_user then 1 else 0 end as can_edit_p,
       null as edit_url
   from ttl_va_comments r, persons p
   where r.ticket_id = :ticket_id and 
         r.creation_user = p.person_id

} {} {} {} c:/web/openacs-4/contrib/obsolete-packages/ticket-tracker-lite/www/comments.xql}
dbqd.contrib.obsolete-packages.ticket-tracker-lite.www.delete-file-oracle.delete_file {dbqd.contrib.obsolete-packages.ticket-tracker-lite.www.delete-file-oracle.delete_file {

	begin
		content_item.del(:item_id);
	end;

} {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/obsolete-packages/ticket-tracker-lite/www/delete-file-oracle.xql}
dbqd.contrib.obsolete-packages.ticket-tracker-lite.www.delete-file.delete_file {dbqd.contrib.obsolete-packages.ticket-tracker-lite.www.delete-file.delete_file {

	select content_item__delete(:item_id)

} {} {} {postgresql 7.1} c:/web/openacs-4/contrib/obsolete-packages/ticket-tracker-lite/www/delete-file-postgresql.xql}
dbqd.contrib.obsolete-packages.ticket-tracker-lite.www.index-oracle.get_tickets {dbqd.contrib.obsolete-packages.ticket-tracker-lite.www.index-oracle.get_tickets {
      
select t.ticket_id,
       a.name as area_name,
       decode(t.priority, 1, 'High',
                          2, 'Medium',
                          3, 'Low',
                          t.priority) as ticket_priority,
       t.status,
       s.sort_key,
       t.name as ticket_name,
       ttl_relative_date(nvl(c.creation_date, t.last_modified)) as last_comment,
       decode(deadline, null, null, to_char(deadline, 'Mon DD')) as ticket_deadline
    from ttl_va_tickets t, ttl_status s, ttl_va_areas a, ttl_v_comments_latest c
    where a.context_id = :package_id and 
          a.area_id = t.area_id and 
          t.status = s.status and 
          t.ticket_id = c.ticket_id(+) 
          $user_id_clause 
          $status_clause 
          $area_clause
    $order_clause

} {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/obsolete-packages/ticket-tracker-lite/www/index-oracle.xql}
dbqd.contrib.obsolete-packages.ticket-tracker-lite.www.index-oracle.order_deadline {dbqd.contrib.obsolete-packages.ticket-tracker-lite.www.index-oracle.order_deadline {
      
order by deadline asc, nvl(c.creation_date, t.last_modified) desc

} {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/obsolete-packages/ticket-tracker-lite/www/index-oracle.xql}
dbqd.contrib.obsolete-packages.ticket-tracker-lite.www.index-oracle.order_activity {dbqd.contrib.obsolete-packages.ticket-tracker-lite.www.index-oracle.order_activity {
      
order by nvl(c.creation_date, t.last_modified) desc

} {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/obsolete-packages/ticket-tracker-lite/www/index-oracle.xql}
dbqd.contrib.obsolete-packages.ticket-tracker-lite.www.index-oracle.order_area {dbqd.contrib.obsolete-packages.ticket-tracker-lite.www.index-oracle.order_area {
      
order by lower(area_name) asc, priority asc, nvl(c.creation_date, t.last_modified) desc

} {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/obsolete-packages/ticket-tracker-lite/www/index-oracle.xql}
dbqd.contrib.obsolete-packages.ticket-tracker-lite.www.index-oracle.order_status {dbqd.contrib.obsolete-packages.ticket-tracker-lite.www.index-oracle.order_status {
      
order by lower(s.sort_key) asc, priority asc, nvl(c.creation_date, t.last_modified) desc

} {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/obsolete-packages/ticket-tracker-lite/www/index-oracle.xql}
dbqd.contrib.obsolete-packages.ticket-tracker-lite.www.index-oracle.order_default {dbqd.contrib.obsolete-packages.ticket-tracker-lite.www.index-oracle.order_default {
      
order by priority asc, nvl(c.creation_date, t.last_modified) desc

} {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/obsolete-packages/ticket-tracker-lite/www/index-oracle.xql}
dbqd.contrib.obsolete-packages.ticket-tracker-lite.www.index.get_tickets {dbqd.contrib.obsolete-packages.ticket-tracker-lite.www.index.get_tickets {

select t.ticket_id,
      a.name as area_name,
      case when t.priority=1 
        then 'High' else (case when t.priority=2 
        then 'Medium' else (case when t.priority=3 
        then 'Low' else t.priority::varchar end) end ) end as ticket_priority,
      t.status,
      s.sort_key,
      t.name as ticket_name,
      ttl_relative_date(coalesce(c.creation_date, t.last_modified)) as last_comment,
      case when deadline is null then null else to_char(deadline, 'Mon DD') end
       as ticket_deadline
 from ttl_va_tickets t left join ttl_v_comments_latest c using (ticket_id), 
      ttl_status s, 
      ttl_va_areas a
 where a.context_id = :package_id and 
       a.area_id = t.area_id and 
       t.status = s.status 
       $user_id_clause 
       $status_clause 
       $area_clause
  $order_clause

} {} {} {postgresql 7.1} c:/web/openacs-4/contrib/obsolete-packages/ticket-tracker-lite/www/index-postgresql.xql}
dbqd.contrib.obsolete-packages.ticket-tracker-lite.www.index.order_deadline {dbqd.contrib.obsolete-packages.ticket-tracker-lite.www.index.order_deadline {

order by deadline asc, coalesce(c.creation_date, t.last_modified) desc

} {} {} {postgresql 7.1} c:/web/openacs-4/contrib/obsolete-packages/ticket-tracker-lite/www/index-postgresql.xql}
dbqd.contrib.obsolete-packages.ticket-tracker-lite.www.index.order_activity {dbqd.contrib.obsolete-packages.ticket-tracker-lite.www.index.order_activity {

order by coalesce(c.creation_date, t.last_modified) desc

} {} {} {postgresql 7.1} c:/web/openacs-4/contrib/obsolete-packages/ticket-tracker-lite/www/index-postgresql.xql}
dbqd.contrib.obsolete-packages.ticket-tracker-lite.www.index.order_area {dbqd.contrib.obsolete-packages.ticket-tracker-lite.www.index.order_area {

order by lower(a.name) asc, priority asc, coalesce(c.creation_date, t.last_modified) desc

} {} {} {postgresql 7.1} c:/web/openacs-4/contrib/obsolete-packages/ticket-tracker-lite/www/index-postgresql.xql}
dbqd.contrib.obsolete-packages.ticket-tracker-lite.www.index.order_status {dbqd.contrib.obsolete-packages.ticket-tracker-lite.www.index.order_status {

order by lower(s.sort_key) asc, priority asc, coalesce(c.creation_date, t.last_modified) desc

} {} {} {postgresql 7.1} c:/web/openacs-4/contrib/obsolete-packages/ticket-tracker-lite/www/index-postgresql.xql}
dbqd.contrib.obsolete-packages.ticket-tracker-lite.www.index.order_default {dbqd.contrib.obsolete-packages.ticket-tracker-lite.www.index.order_default {

order by priority asc, coalesce(c.creation_date, t.last_modified) desc

} {} {} {postgresql 7.1} c:/web/openacs-4/contrib/obsolete-packages/ticket-tracker-lite/www/index-postgresql.xql}
dbqd.contrib.obsolete-packages.ticket-tracker-lite.www.index.get_prefs {dbqd.contrib.obsolete-packages.ticket-tracker-lite.www.index.get_prefs {
      
select sort, mine_p, status, area_id,
       (select name from ttl_va_areas a
         where a.area_id = p.area_id) as area_name
  from ttl_prefs p
  where user_id = :caller_id

} {} {} {} c:/web/openacs-4/contrib/obsolete-packages/ticket-tracker-lite/www/index.xql}
dbqd.contrib.obsolete-packages.ticket-tracker-lite.www.prefs-ae.update_prefs {dbqd.contrib.obsolete-packages.ticket-tracker-lite.www.prefs-ae.update_prefs {

update ttl_prefs set [string trimright $update_clause ,] where user_id = :caller_id

} {} {} {} c:/web/openacs-4/contrib/obsolete-packages/ticket-tracker-lite/www/prefs-ae.xql}
dbqd.contrib.obsolete-packages.ticket-tracker-lite.www.prefs-ae.insert_pref {dbqd.contrib.obsolete-packages.ticket-tracker-lite.www.prefs-ae.insert_pref {
      
insert into ttl_prefs 
  (user_id, sort, status, mine_p, area_id) 
values 
  (:caller_id, :sort, :status, :mine_p, :area_id)

} {} {} {} c:/web/openacs-4/contrib/obsolete-packages/ticket-tracker-lite/www/prefs-ae.xql}
dbqd.contrib.obsolete-packages.ticket-tracker-lite.www.ticket-add-2-oracle.add_ticket {dbqd.contrib.obsolete-packages.ticket-tracker-lite.www.ticket-add-2-oracle.add_ticket {
      
declare
  v_object_id     integer;
begin
  v_object_id := acs_object.new (
    object_id     => :ticket_id,
    object_type   => 'ticket_tracker_lite_ticket',
    creation_user => :caller_id,
    creation_ip   => :caller_ip,
    context_id    => :package_id
  );

  insert into ttl_tickets 
    (ticket_id, area_id, name, type, status, deadline, 
     message, message_format, priority) 
  values 
     (:ticket_id, :area_id, :name, :type, :status, :deadline_date, 
      :message, :message_format, :priority);
end;
    
} {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/obsolete-packages/ticket-tracker-lite/www/ticket-add-2-oracle.xql}
dbqd.contrib.obsolete-packages.ticket-tracker-lite.www.ticket-add-2.add_ticket {dbqd.contrib.obsolete-packages.ticket-tracker-lite.www.ticket-add-2.add_ticket {
      
  select acs_object__new (
    :ticket_id,
    'ticket_tracker_lite_ticket',
    now(),
    :caller_id,
    :caller_ip,
    :package_id
  );

  insert into ttl_tickets 
    (ticket_id, area_id, name, type, status, deadline, 
     message, message_format, priority) 
  values 
    (:ticket_id, :area_id, :name, :type, :status, :deadline_date, 
     :message, :message_format, :priority);
    
} {} {} {postgresql 7.1} c:/web/openacs-4/contrib/obsolete-packages/ticket-tracker-lite/www/ticket-add-2-postgresql.xql}
dbqd.contrib.obsolete-packages.ticket-tracker-lite.www.ticket-add-2.insert_assignment {dbqd.contrib.obsolete-packages.ticket-tracker-lite.www.ticket-add-2.insert_assignment {
      
insert into ttl_assignments (user_id, ticket_id)
  select user_id, :ticket_id
    from ttl_area_assignments
    where area_id = :area_id
    
} {} {} {} c:/web/openacs-4/contrib/obsolete-packages/ticket-tracker-lite/www/ticket-add-2.xql}
dbqd.contrib.obsolete-packages.ticket-tracker-lite.www.ticket-add-2.get_recipient_email {dbqd.contrib.obsolete-packages.ticket-tracker-lite.www.ticket-add-2.get_recipient_email {
      
select p.email 
  from parties p, ttl_assignments a
  where a.ticket_id = :ticket_id and 
        a.user_id = p.party_id

} {} {} {} c:/web/openacs-4/contrib/obsolete-packages/ticket-tracker-lite/www/ticket-add-2.xql}
dbqd.contrib.obsolete-packages.ticket-tracker-lite.www.ticket-add-2.get_sender_email {dbqd.contrib.obsolete-packages.ticket-tracker-lite.www.ticket-add-2.get_sender_email {
      
select p1.first_names || ' ' || p1.last_name as ticket_creator_name,
       p2.email as ticket_creator_email,
       (select name from ttl_va_areas where area_id = :area_id) as area_name
          from persons p1, parties p2
          where p1.person_id = p2.party_id and 
                p1.person_id = :caller_id
    
} {} {} {} c:/web/openacs-4/contrib/obsolete-packages/ticket-tracker-lite/www/ticket-add-2.xql}
dbqd.contrib.obsolete-packages.ticket-tracker-lite.www.ticket-add-oracle.get_ticket_id {dbqd.contrib.obsolete-packages.ticket-tracker-lite.www.ticket-add-oracle.get_ticket_id {

select acs_object_id_seq.nextval as ticket_id,
       (select count(*) from ttl_va_areas where context_id = :package_id) 
          as num_areas
  from dual

} {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/obsolete-packages/ticket-tracker-lite/www/ticket-add-oracle.xql}
dbqd.contrib.obsolete-packages.ticket-tracker-lite.www.ticket-add.get_ticket_id {dbqd.contrib.obsolete-packages.ticket-tracker-lite.www.ticket-add.get_ticket_id {

select acs_object_id_seq.nextval as ticket_id,
       (select count(*)
          from ttl_va_areas
          where context_id = :package_id) as num_areas

} {} {} {postgresql 7.1} c:/web/openacs-4/contrib/obsolete-packages/ticket-tracker-lite/www/ticket-add-postgresql.xql}
dbqd.contrib.obsolete-packages.ticket-tracker-lite.www.ticket-edit-2-oracle.edit_ticket {dbqd.contrib.obsolete-packages.ticket-tracker-lite.www.ticket-edit-2-oracle.edit_ticket {
      
begin
  update acs_objects 
  set last_modified = sysdate,
      modifying_user = :caller_id,
      modifying_ip = :caller_ip
      where object_id = :ticket_id;

  update ttl_tickets 
  set name = :name,
      message = :message,
      message_format = :message_format
  where ticket_id = :ticket_id;
end;

} {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/obsolete-packages/ticket-tracker-lite/www/ticket-edit-2-oracle.xql}
dbqd.contrib.obsolete-packages.ticket-tracker-lite.www.ticket-edit-2.edit_ticket {dbqd.contrib.obsolete-packages.ticket-tracker-lite.www.ticket-edit-2.edit_ticket {
      
  update acs_objects 
  set last_modified = current_timestamp,
      modifying_user = :caller_id,
      modifying_ip = :caller_ip
  where object_id = :ticket_id;

  update ttl_tickets 
  set name = :name,
      message = :message,
      message_format = :message_format
  where ticket_id = :ticket_id;

} {} {} {postgresql 7.1} c:/web/openacs-4/contrib/obsolete-packages/ticket-tracker-lite/www/ticket-edit-2-postgresql.xql}
dbqd.contrib.obsolete-packages.ticket-tracker-lite.www.ticket-edit.get_ticket_info {dbqd.contrib.obsolete-packages.ticket-tracker-lite.www.ticket-edit.get_ticket_info {
      
select t.name, t.message,t.message_format
  from ttl_v_tickets t, ttl_va_areas a
  where a.context_id = :package_id and 
        t.ticket_id = :ticket_id and 
        t.area_id = a.area_id

} {} {} {} c:/web/openacs-4/contrib/obsolete-packages/ticket-tracker-lite/www/ticket-edit.xql}
dbqd.contrib.obsolete-packages.ticket-tracker-lite.www.ticket-oracle.get_one_ticket {dbqd.contrib.obsolete-packages.ticket-tracker-lite.www.ticket-oracle.get_one_ticket {
      
select  t.area_id,
        a.name as area_name,
        t.name,
        t.type,
        t.status,
        t.message,
        t.message_format,
        t.priority,
        t.deadline,
        t.url,
        ttl_relative_date(t.creation_date) as posting_date,
        person.name(t.creation_user) as posting_name
    from ttl_v_tickets t, ttl_va_areas a
    where a.context_id = :package_id and 
          t.ticket_id = :ticket_id and 
          t.area_id = a.area_id

} {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/obsolete-packages/ticket-tracker-lite/www/ticket-oracle.xql}
dbqd.contrib.obsolete-packages.ticket-tracker-lite.www.ticket-oracle.get_people {dbqd.contrib.obsolete-packages.ticket-tracker-lite.www.ticket-oracle.get_people {
      
select * from (select p.first_names || ' ' || p.last_name as full_name,
                     t.user_id,
                     case when a.user_id = null then 0 else 1 end 
                       as already_assigned_p
                 from persons p, ttl_v_users t, (select user_id
                                                   from ttl_assignments
                                                   where ticket_id = :ticket_id) a
                 where t.package_id = :package_id and 
                       p.person_id = t.user_id and 
                       t.user_id = a.user_id(+)
                 order by upper(full_name)) 
  where rownum < 50

} {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/obsolete-packages/ticket-tracker-lite/www/ticket-oracle.xql}
dbqd.contrib.obsolete-packages.ticket-tracker-lite.www.ticket.get_one_ticket {dbqd.contrib.obsolete-packages.ticket-tracker-lite.www.ticket.get_one_ticket {
      
select  t.area_id,
        a.name as area_name,
        t.name,
        t.type,
        t.status,
        t.message,
        t.message_format,
        t.priority,
        to_char(t.deadline, 'YYYY-MM-DD') as deadline,
        t.url,
        ttl_relative_date(t.creation_date) as posting_date,
        person__name(t.creation_user) as posting_name
  from ttl_v_tickets t, ttl_va_areas a
  where a.context_id = :package_id and 
        t.ticket_id = :ticket_id and 
        t.area_id = a.area_id

} {} {} {postgresql 7.1} c:/web/openacs-4/contrib/obsolete-packages/ticket-tracker-lite/www/ticket-postgresql.xql}
dbqd.contrib.obsolete-packages.ticket-tracker-lite.www.ticket.get_people {dbqd.contrib.obsolete-packages.ticket-tracker-lite.www.ticket.get_people {

select * from (select p.first_names || ' ' || p.last_name as full_name,
                      t.user_id,
                      case when a.user_id is null then 0 else 1 end 
                        as already_assigned_p
                 from ttl_v_users t left join (select user_id 
                                        from ttl_assignments
                                        where ticket_id = :ticket_id) a 
                   using (user_id), persons p
                 where t.package_id = :package_id and 
                       p.person_id = t.user_id 
                 order by upper(p.first_names)) b
limit 50

} {} {} {postgresql 7.1} c:/web/openacs-4/contrib/obsolete-packages/ticket-tracker-lite/www/ticket-postgresql.xql}
dbqd.contrib.obsolete-packages.ticket-tracker-lite.www.ticket-update-oracle.update_ticket {dbqd.contrib.obsolete-packages.ticket-tracker-lite.www.ticket-update-oracle.update_ticket {
      
begin
  update ttl_tickets 
  set area_id = :area_id,
      type = :type,
      status = :status,
      deadline = :deadline_date,
      priority = :priority
   where ticket_id = :ticket_id;

   update acs_objects 
   set last_modified = sysdate,
       modifying_user = :caller_id,
       modifying_ip = :caller_ip
   where object_id = :ticket_id;
end;

} {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/obsolete-packages/ticket-tracker-lite/www/ticket-update-oracle.xql}
dbqd.contrib.obsolete-packages.ticket-tracker-lite.www.ticket-update.update_ticket {dbqd.contrib.obsolete-packages.ticket-tracker-lite.www.ticket-update.update_ticket {
      
  update ttl_tickets 
  set area_id = :area_id,
      type = :type,
      status = :status,
      deadline = :deadline_date,
      priority = :priority
  where ticket_id = :ticket_id;

  update acs_objects 
  set last_modified = current_timestamp,
      modifying_user = :caller_id,
      modifying_ip = :caller_ip
  where object_id = :ticket_id;

} {} {} {postgresql 7.1} c:/web/openacs-4/contrib/obsolete-packages/ticket-tracker-lite/www/ticket-update-postgresql.xql}
dbqd.contrib.obsolete-packages.wf-ticket-tracker.www.panel-ticket.ticket {dbqd.contrib.obsolete-packages.wf-ticket-tracker.www.panel-ticket.ticket {
      select subject, description, severity, priority from wf_tickets where ticket_id = :ticket_id
      } {} {} {} c:/web/openacs-4/contrib/obsolete-packages/wf-ticket-tracker/www/panel-ticket.xql}
dbqd.contrib.obsolete-packages.wf-ticket-tracker.www.ticket-new-2-oracle.new_ticket {dbqd.contrib.obsolete-packages.wf-ticket-tracker.www.ticket-new-2-oracle.new_ticket {
      
    begin
        :1 := wf_ticket.new(
            ticket_id => :ticket_id,
            subject => :subject,
            description => :description,
            severity => :severity,
            priority => :priority,
            creation_user => :user_id,
            creation_ip => :creation_ip
        );
    end;

      } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/obsolete-packages/wf-ticket-tracker/www/ticket-new-2-oracle.xql}
dbqd.contrib.obsolete-packages.wf-ticket-tracker.www.ticket-new-2.new_ticket {dbqd.contrib.obsolete-packages.wf-ticket-tracker.www.ticket-new-2.new_ticket {
        select wf_ticket__new(
            :ticket_id,
            :subject,
            :description,
            :severity,
            :priority,
	    null,	-- creation_date 
            :user_id,
            :creation_ip
        );
      } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/obsolete-packages/wf-ticket-tracker/www/ticket-new-2-postgresql.xql}
dbqd.contrib.packages.acs-mail-lite.tcl.acs-mail-lite-procs-oracle.acs_mail_lite::check_bounces.send_notification_to_bouncing_email {dbqd.contrib.packages.acs-mail-lite.tcl.acs-mail-lite-procs-oracle.acs_mail_lite::check_bounces.send_notification_to_bouncing_email {

       insert into acs_mail_lite_bounce_notif
       (select user_id, 0 as notification_count,
               trunc(sysdate-1-:notification_interval) as notification_time
        from acs_mail_lite_bounce
        where bounce_count >= :max_bounce_count)

     } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/packages/acs-mail-lite/tcl/acs-mail-lite-procs-oracle.xql}
dbqd.contrib.packages.acs-mail-lite.tcl.acs-mail-lite-procs-oracle.acs_mail_lite::check_bounces.get_recent_bouncing_users {dbqd.contrib.packages.acs-mail-lite.tcl.acs-mail-lite-procs-oracle.acs_mail_lite::check_bounces.get_recent_bouncing_users {

       select u.user_id, u.email, u.first_names || ' ' u.last_name as name
       from cc_users u, acs_mail_lite_bounce_notif n
       where u.user_id = n.user_id
       and u.email_bouncing_p = 't'
       and n.notification_time < sysdate - :notification_interval
       and n.notification_count < :max_notification_count

     } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/packages/acs-mail-lite/tcl/acs-mail-lite-procs-oracle.xql}
dbqd.contrib.packages.acs-mail-lite.tcl.acs-mail-lite-procs-oracle.acs_mail_lite::check_bounces.log_notication_sending {dbqd.contrib.packages.acs-mail-lite.tcl.acs-mail-lite-procs-oracle.acs_mail_lite::check_bounces.log_notication_sending {

       update acs_mail_lite_bounce_notif
       set notification_time = trunc(sysdate),
           notification_count = notification_count + 1
       where user_id = :user_id

     } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/packages/acs-mail-lite/tcl/acs-mail-lite-procs-oracle.xql}
dbqd.contrib.packages.acs-mail-lite.tcl.acs-mail-lite-procs-oracle.acs_mail_lite::check_bounces.delete_log_if_no_recent_bounce {dbqd.contrib.packages.acs-mail-lite.tcl.acs-mail-lite-procs-oracle.acs_mail_lite::check_bounces.delete_log_if_no_recent_bounce {

       delete from acs_mail_lite_bounce
       where user_id in (select user_id
                         from acs_mail_lite_mail_log
                         where last_mail_date < sysdate - :max_days_to_bounce)

     } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/packages/acs-mail-lite/tcl/acs-mail-lite-procs-oracle.xql}
dbqd.contrib.packages.acs-mail-lite.tcl.acs-mail-lite-procs-oracle.acs_mail_lite::send.create_queue_entry {dbqd.contrib.packages.acs-mail-lite.tcl.acs-mail-lite-procs-oracle.acs_mail_lite::send.create_queue_entry {
            insert into acs_mail_lite_queue 
            (message_id, to_addr, from_addr, subject, body, extra_headers, bcc,
             package_id, valid_email_p)
            values
            (acs_mail_lite_id_seq.nextval, :to_addr, :from_addr, :subject, :body,
             :eh_list, :bcc, :package_id, decode(:valid_email_p,'1','t','f'))
        } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/packages/acs-mail-lite/tcl/acs-mail-lite-procs-oracle.xql}
dbqd.contrib.packages.acs-mail-lite.tcl.acs-mail-lite-procs-oracle.acs_mail_lite::log_mail_sending.record_mail_sent {dbqd.contrib.packages.acs-mail-lite.tcl.acs-mail-lite-procs-oracle.acs_mail_lite::log_mail_sending.record_mail_sent {

       update acs_mail_lite_mail_log
       set last_mail_date = sysdate
       where user_id = :user_id

     } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/packages/acs-mail-lite/tcl/acs-mail-lite-procs-oracle.xql}
dbqd.contrib.packages.acs-mail-lite.tcl.acs-mail-lite-procs-oracle.acs_mail_lite::log_mail_sending.insert_log_entry {dbqd.contrib.packages.acs-mail-lite.tcl.acs-mail-lite-procs-oracle.acs_mail_lite::log_mail_sending.insert_log_entry {

       insert into acs_mail_lite_mail_log (user_id, last_mail_date)
       values (:user_id, sysdate)

     } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/packages/acs-mail-lite/tcl/acs-mail-lite-procs-oracle.xql}
dbqd.contrib.packages.acs-mail-lite.tcl.acs-mail-lite-procs-oracle.acs_mail_lite::sweeper.get_queued_messages {dbqd.contrib.packages.acs-mail-lite.tcl.acs-mail-lite-procs-oracle.acs_mail_lite::sweeper.get_queued_messages {
            select message_id,
                   to_addr,
                   from_addr,
                   subject,
                   body,
                   extra_headers,
                   bcc,
                   package_id,
                   decode(valid_email_p,'t',1,0) as valid_email_p
            from acs_mail_lite_queue
        } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/packages/acs-mail-lite/tcl/acs-mail-lite-procs-oracle.xql}
dbqd.contrib.packages.acs-mail-lite.tcl.acs-mail-lite-procs-oracle.acs_mail_lite::send_immediately.create_queue_entry {dbqd.contrib.packages.acs-mail-lite.tcl.acs-mail-lite-procs-oracle.acs_mail_lite::send_immediately.create_queue_entry {
            insert into acs_mail_lite_queue 
            (message_id, to_addr, from_addr, subject, body, extra_headers, bcc,
             package_id, valid_email_p)
            values
            (acs_mail_lite_id_seq.nextval, :to_addr, :from_addr, :subject, :body,
             :extraheaders, :bcc, :package_id, decode(:valid_email_p,'1','t','f'))
        } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/packages/acs-mail-lite/tcl/acs-mail-lite-procs-oracle.xql}
dbqd.contrib.packages.acs-mail-lite.tcl.acs-mail-lite-procs.acs_mail_lite::check_bounces.send_notification_to_bouncing_email {dbqd.contrib.packages.acs-mail-lite.tcl.acs-mail-lite-procs.acs_mail_lite::check_bounces.send_notification_to_bouncing_email {

       insert into acs_mail_lite_bounce_notif
       (select user_id, 0 as notification_count,
               date_trunc('day',current_timestamp-1-:notification_interval) as notification_time
        from acs_mail_lite_bounce
        where bounce_count >= :max_bounce_count)

     } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/packages/acs-mail-lite/tcl/acs-mail-lite-procs-postgresql.xql}
dbqd.contrib.packages.acs-mail-lite.tcl.acs-mail-lite-procs.acs_mail_lite::check_bounces.get_recent_bouncing_users {dbqd.contrib.packages.acs-mail-lite.tcl.acs-mail-lite-procs.acs_mail_lite::check_bounces.get_recent_bouncing_users {

       select u.user_id, u.email, u.first_names || ' ' u.last_name as name
       from cc_users u, acs_mail_lite_bounce_notif n
       where u.user_id = n.user_id
       and u.email_bouncing_p = 't'
       and n.notification_time < current_timestamp - :notification_interval
       and n.notification_count < :max_notification_count

     } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/packages/acs-mail-lite/tcl/acs-mail-lite-procs-postgresql.xql}
dbqd.contrib.packages.acs-mail-lite.tcl.acs-mail-lite-procs.acs_mail_lite::check_bounces.log_notication_sending {dbqd.contrib.packages.acs-mail-lite.tcl.acs-mail-lite-procs.acs_mail_lite::check_bounces.log_notication_sending {

       update acs_mail_lite_bounce_notif
       set notification_time = date_trunc('day',current_timestamp),
           notification_count = notification_count + 1
       where user_id = :user_id

     } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/packages/acs-mail-lite/tcl/acs-mail-lite-procs-postgresql.xql}
dbqd.contrib.packages.acs-mail-lite.tcl.acs-mail-lite-procs.acs_mail_lite::check_bounces.delete_log_if_no_recent_bounce {dbqd.contrib.packages.acs-mail-lite.tcl.acs-mail-lite-procs.acs_mail_lite::check_bounces.delete_log_if_no_recent_bounce {

       delete from acs_mail_lite_bounce
       where user_id in (select user_id
                         from acs_mail_lite_mail_log
                         where last_mail_date < current_timestamp - :max_days_to_bounce)

     } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/packages/acs-mail-lite/tcl/acs-mail-lite-procs-postgresql.xql}
dbqd.contrib.packages.acs-mail-lite.tcl.acs-mail-lite-procs.acs_mail_lite::send.create_queue_entry {dbqd.contrib.packages.acs-mail-lite.tcl.acs-mail-lite-procs.acs_mail_lite::send.create_queue_entry {
            insert into acs_mail_lite_queue 
            (message_id, to_addr, from_addr, subject, body, extra_headers, bcc, package_id, valid_email_p)
            values
            (nextval('acs_mail_lite_id_seq'), :to_addr, :from_addr, :subject, :body, :eh_list, :bcc, :package_id,
	    (case when :valid_email_p = '1' then TRUE else FALSE end))
        } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/packages/acs-mail-lite/tcl/acs-mail-lite-procs-postgresql.xql}
dbqd.contrib.packages.acs-mail-lite.tcl.acs-mail-lite-procs.acs_mail_lite::log_mail_sending.record_mail_sent {dbqd.contrib.packages.acs-mail-lite.tcl.acs-mail-lite-procs.acs_mail_lite::log_mail_sending.record_mail_sent {

       update acs_mail_lite_mail_log
       set last_mail_date = current_timestamp
       where user_id = :user_id

     } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/packages/acs-mail-lite/tcl/acs-mail-lite-procs-postgresql.xql}
dbqd.contrib.packages.acs-mail-lite.tcl.acs-mail-lite-procs.acs_mail_lite::log_mail_sending.insert_log_entry {dbqd.contrib.packages.acs-mail-lite.tcl.acs-mail-lite-procs.acs_mail_lite::log_mail_sending.insert_log_entry {

       insert into acs_mail_lite_mail_log (user_id, last_mail_date)
       values (:user_id, current_timestamp)

     } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/packages/acs-mail-lite/tcl/acs-mail-lite-procs-postgresql.xql}
dbqd.contrib.packages.acs-mail-lite.tcl.acs-mail-lite-procs.acs_mail_lite::sweeper.get_queued_messages {dbqd.contrib.packages.acs-mail-lite.tcl.acs-mail-lite-procs.acs_mail_lite::sweeper.get_queued_messages {
            select message_id,
                   to_addr,
                   from_addr,
                   subject,
                   body,
                   extra_headers,
                   bcc,
                   package_id,
		   (case when valid_email_p = TRUE then 1
		   	else 0
			end) as valid_email_p
            from acs_mail_lite_queue
        } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/packages/acs-mail-lite/tcl/acs-mail-lite-procs-postgresql.xql}
dbqd.contrib.packages.acs-mail-lite.tcl.acs-mail-lite-procs.acs_mail_lite::send_immediately.create_queue_entry {dbqd.contrib.packages.acs-mail-lite.tcl.acs-mail-lite-procs.acs_mail_lite::send_immediately.create_queue_entry {
            insert into acs_mail_lite_queue 
            (message_id, to_addr, from_addr, subject, body, extra_headers, bcc,
             package_id, valid_email_p)
            values
            (nextval('acs_mail_lite_id_seq'), :to_addr, :from_addr, :subject, :body,
             :extraheaders, :bcc, :package_id, 
	     (case when :valid_email_p = '1' then TRUE
	     	   else FALSE end))
        } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/packages/acs-mail-lite/tcl/acs-mail-lite-procs-postgresql.xql}
dbqd.contrib.packages.acs-mail-lite.tcl.acs-mail-lite-procs.acs_mail_lite::bouncing_email_p.can_send_p {dbqd.contrib.packages.acs-mail-lite.tcl.acs-mail-lite-procs.acs_mail_lite::bouncing_email_p.can_send_p {

    	select case when email_bouncing_p = 't' then 1 else 0 end 
	as send_p 
      	from cc_users 
     	where lower(email) = lower(:email)

      } {} {} {} c:/web/openacs-4/contrib/packages/acs-mail-lite/tcl/acs-mail-lite-procs.xql}
dbqd.contrib.packages.acs-mail-lite.tcl.acs-mail-lite-procs.acs_mail_lite::bouncing_user_p.can_send_p {dbqd.contrib.packages.acs-mail-lite.tcl.acs-mail-lite-procs.acs_mail_lite::bouncing_user_p.can_send_p {

    	select case when email_bouncing_p = 't' then 1 else 0 end 
	as send_p 
      	from cc_users 
     	where user_id = :user_id

      } {} {} {} c:/web/openacs-4/contrib/packages/acs-mail-lite/tcl/acs-mail-lite-procs.xql}
dbqd.contrib.packages.acs-mail-lite.tcl.acs-mail-lite-procs.acs_mail_lite::log_mail_sending.record_mail_sent {dbqd.contrib.packages.acs-mail-lite.tcl.acs-mail-lite-procs.acs_mail_lite::log_mail_sending.record_mail_sent {

       update acs_mail_lite_mail_log
       set last_mail_date = current_timestamp
       where user_id = :user_id

     } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/packages/acs-mail-lite/tcl/acs-mail-lite-procs-postgresql.xql}
dbqd.contrib.packages.acs-mail-lite.tcl.acs-mail-lite-procs.acs_mail_lite::log_mail_sending.insert_log_entry {dbqd.contrib.packages.acs-mail-lite.tcl.acs-mail-lite-procs.acs_mail_lite::log_mail_sending.insert_log_entry {

       insert into acs_mail_lite_mail_log (user_id, last_mail_date)
       values (:user_id, current_timestamp)

     } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/packages/acs-mail-lite/tcl/acs-mail-lite-procs-postgresql.xql}
dbqd.contrib.packages.acs-mail-lite.tcl.acs-mail-lite-procs.acs_mail_lite::load_mail_dir.record_bounce {dbqd.contrib.packages.acs-mail-lite.tcl.acs-mail-lite-procs.acs_mail_lite::load_mail_dir.record_bounce {

       update acs_mail_lite_bounce
       set bounce_count = bounce_count + 1
       where user_id = :user_id

     } {} {} {} c:/web/openacs-4/contrib/packages/acs-mail-lite/tcl/acs-mail-lite-procs.xql}
dbqd.contrib.packages.acs-mail-lite.tcl.acs-mail-lite-procs.acs_mail_lite::load_mail_dir.insert_bounce {dbqd.contrib.packages.acs-mail-lite.tcl.acs-mail-lite-procs.acs_mail_lite::load_mail_dir.insert_bounce {

       insert into acs_mail_lite_bounce (user_id, bounce_count)
       values (:user_id, 1)

     } {} {} {} c:/web/openacs-4/contrib/packages/acs-mail-lite/tcl/acs-mail-lite-procs.xql}
dbqd.contrib.packages.acs-mail-lite.tcl.acs-mail-lite-procs.acs_mail_lite::check_bounces.delete_log_if_no_recent_bounce {dbqd.contrib.packages.acs-mail-lite.tcl.acs-mail-lite-procs.acs_mail_lite::check_bounces.delete_log_if_no_recent_bounce {

       delete from acs_mail_lite_bounce
       where user_id in (select user_id
                         from acs_mail_lite_mail_log
                         where last_mail_date < current_timestamp - :max_days_to_bounce)

     } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/packages/acs-mail-lite/tcl/acs-mail-lite-procs-postgresql.xql}
dbqd.contrib.packages.acs-mail-lite.tcl.acs-mail-lite-procs.acs_mail_lite::check_bounces.disable_bouncing_email {dbqd.contrib.packages.acs-mail-lite.tcl.acs-mail-lite-procs.acs_mail_lite::check_bounces.disable_bouncing_email {

       update users
       set email_bouncing_p = 't'
       where user_id in (select user_id
                         from acs_mail_lite_bounce
                         where bounce_count >= :max_bounce_count)

     } {} {} {} c:/web/openacs-4/contrib/packages/acs-mail-lite/tcl/acs-mail-lite-procs.xql}
dbqd.contrib.packages.acs-mail-lite.tcl.acs-mail-lite-procs.acs_mail_lite::check_bounces.delete_bouncing_users_from_log {dbqd.contrib.packages.acs-mail-lite.tcl.acs-mail-lite-procs.acs_mail_lite::check_bounces.delete_bouncing_users_from_log {

       delete from acs_mail_lite_bounce
       where bounce_count >= :max_bounce_count

     } {} {} {} c:/web/openacs-4/contrib/packages/acs-mail-lite/tcl/acs-mail-lite-procs.xql}
dbqd.contrib.packages.acs-mail-lite.tcl.acs-mail-lite-procs.acs_mail_lite::get_address_array.get_user_name_and_id {dbqd.contrib.packages.acs-mail-lite.tcl.acs-mail-lite-procs.acs_mail_lite::get_address_array.get_user_name_and_id {

       select user_id, first_names || ' ' || last_name as user_name
       from cc_users
       where email = :email

     } {} {} {} c:/web/openacs-4/contrib/packages/acs-mail-lite/tcl/acs-mail-lite-procs.xql}
dbqd.contrib.packages.acs-mail-lite.tcl.acs-mail-lite-procs.acs_mail_lite::sweeper.delete_queue_entry {dbqd.contrib.packages.acs-mail-lite.tcl.acs-mail-lite-procs.acs_mail_lite::sweeper.delete_queue_entry {
            delete
            from acs_mail_lite_queue
            where message_id = :message_id
        } {} {} {} c:/web/openacs-4/contrib/packages/acs-mail-lite/tcl/acs-mail-lite-procs.xql}
dbqd.contrib.packages.bcds.tcl.bcds-procs.bcds::create_template.create_template {dbqd.contrib.packages.bcds.tcl.bcds-procs.bcds::create_template.create_template {
			select content_template__new(:template_name, :parent_id,
				null, now(), :creation_user_id, :creation_ip)
		} {} {} {postgresql 7.2} c:/web/openacs-4/contrib/packages/bcds/tcl/bcds-procs-postgresql.xql}
dbqd.contrib.packages.bcds.tcl.bcds-procs.bcds::delete_template.delete_template {dbqd.contrib.packages.bcds.tcl.bcds-procs.bcds::delete_template.delete_template {
			select content_template__delete(:template_id)
		} {} {} {postgresql 7.2} c:/web/openacs-4/contrib/packages/bcds/tcl/bcds-procs-postgresql.xql}
dbqd.contrib.packages.bcds.tcl.bcds-procs.bcds::get_cr_template_root.get_template_root {dbqd.contrib.packages.bcds.tcl.bcds-procs.bcds::get_cr_template_root.get_template_root {
			select content_template__get_root_folder()
		} {} {} {postgresql 7.2} c:/web/openacs-4/contrib/packages/bcds/tcl/bcds-procs-postgresql.xql}
dbqd.contrib.packages.bcds.tcl.bcds-procs.bcds::apply_template.apply_template {dbqd.contrib.packages.bcds.tcl.bcds-procs.bcds::apply_template.apply_template {
			select content_item__register_template(:item_id, :template_id, :context)
		} {} {} {postgresql 7.2} c:/web/openacs-4/contrib/packages/bcds/tcl/bcds-procs-postgresql.xql}
dbqd.contrib.packages.bcds.tcl.bcds-procs.bcds::unregister_template.unregister_template {dbqd.contrib.packages.bcds.tcl.bcds-procs.bcds::unregister_template.unregister_template {
			select content_item__unregister_template(:item_id, :template_id, :context)
		} {} {} {postgresql 7.2} c:/web/openacs-4/contrib/packages/bcds/tcl/bcds-procs-postgresql.xql}
dbqd.contrib.packages.bcds.tcl.bcds-procs.bcds::get_template.get_template {dbqd.contrib.packages.bcds.tcl.bcds-procs.bcds::get_template.get_template {
			select name, item_id from cr_items where item_id = content_item__get_template(:item_id, :context)
		} {} {} {postgresql 7.2} c:/web/openacs-4/contrib/packages/bcds/tcl/bcds-procs-postgresql.xql}
dbqd.contrib.packages.bcds.tcl.bcds-procs.bcds::get_content_item_id.get_item_id {dbqd.contrib.packages.bcds.tcl.bcds-procs.bcds::get_content_item_id.get_item_id {
			select content_item__get_id(:url, :root_id, 'true');
		} {} {} {postgresql 7.2} c:/web/openacs-4/contrib/packages/bcds/tcl/bcds-procs-postgresql.xql}
dbqd.contrib.packages.bcds.tcl.bcds-procs.bcds::get_template_name.get_template_name {dbqd.contrib.packages.bcds.tcl.bcds-procs.bcds::get_template_name.get_template_name {
			select name from cr_items where item_id = content_item__get_template(:item_id, :context)
		} {} {} {postgresql 7.2} c:/web/openacs-4/contrib/packages/bcds/tcl/bcds-procs-postgresql.xql}
dbqd.contrib.packages.bcds.tcl.bcds-procs.bcds::get_bcds_root_folder.get_bcds_folder {dbqd.contrib.packages.bcds.tcl.bcds-procs.bcds::get_bcds_root_folder.get_bcds_folder {
			select folder_id from cr_folders where package_id = :package_id
		} {} {} {postgresql 7.2} c:/web/openacs-4/contrib/packages/bcds/tcl/bcds-procs.xql}
dbqd.contrib.packages.bcms.tcl.bcms-category-procs.bcms::category::create_category.create_category {dbqd.contrib.packages.bcms.tcl.bcms-category-procs.bcms::category::create_category.create_category {

              select content_keyword__new (:heading,
                                           :description,
                                           :parent_id,
                                           null,
                                           now(),
                                           :creation_user_id,
                                           :creation_ip,
                                           'content_keyword')

        } {} {} {postgresql 7.2} c:/web/openacs-4/contrib/packages/bcms/tcl/bcms-category-procs-postgresql.xql}
dbqd.contrib.packages.bcms.tcl.bcms-category-procs.bcms::category::delete_category.delete_category {dbqd.contrib.packages.bcms.tcl.bcms-category-procs.bcms::category::delete_category.delete_category {

              select content_keyword__delete (:category_id)

        } {} {} {postgresql 7.2} c:/web/openacs-4/contrib/packages/bcms/tcl/bcms-category-procs-postgresql.xql}
dbqd.contrib.packages.bcms.tcl.bcms-category-procs.bcms::category::tree_categories.get_categories {dbqd.contrib.packages.bcms.tcl.bcms-category-procs.bcms::category::tree_categories.get_categories {

            select c.keyword_id as category_id, c.parent_id, c.heading, 
                c.description, content_keyword__get_path(c.keyword_id) as path
            from cr_keywords c,
                (select keyword_id, tree_sortkey from cr_keywords where keyword_id = :parent_id) p
            where
                c.tree_sortkey between p.tree_sortkey and tree_right(p.tree_sortkey)
                order by c.tree_sortkey;

        } {} {} {postgresql 7.2} c:/web/openacs-4/contrib/packages/bcms/tcl/bcms-category-procs-postgresql.xql}
dbqd.contrib.packages.bcms.tcl.bcms-category-procs.bcms::category::get_root.get_root {dbqd.contrib.packages.bcms.tcl.bcms-category-procs.bcms::category::get_root.get_root {

            select keyword_id as category_id, parent_id, heading, description, has_children
            from cr_keywords k, 
                (select tree_sortkey from cr_keywords where keyword_id = :category_id) c
            where k.tree_sortkey = tree_root_key(c.tree_sortkey);

        } {} {} {postgresql 7.2} c:/web/openacs-4/contrib/packages/bcms/tcl/bcms-category-procs-postgresql.xql}
dbqd.contrib.packages.bcms.tcl.bcms-category-procs.bcms::category::get_category_path.get_category_path {dbqd.contrib.packages.bcms.tcl.bcms-category-procs.bcms::category::get_category_path.get_category_path {
            (select keyword_id as category_id, heading, :prepend_path || content_keyword__get_path_id(keyword_id) as path
            from cr_keywords
            where keyword_id = :root_id)

            union

            (select keyword_id as category_id, heading, :prepend_path || content_keyword__get_path_id(keyword_id) as path
            from cr_keywords c,
                (select tree_sortkey from cr_keywords where keyword_id = :root_id) r,
                (select tree_ancestor_keys(tree_sortkey) as tree_sortkey from cr_keywords where keyword_id = :category_id) p
            where   
                c.tree_sortkey = p.tree_sortkey
                and c.tree_sortkey > r.tree_sortkey
            order by c.tree_sortkey)

        } {} {} {postgresql 7.2} c:/web/openacs-4/contrib/packages/bcms/tcl/bcms-category-procs-postgresql.xql}
dbqd.contrib.packages.bcms.tcl.bcms-category-procs.bcms::category::set_category.set_heading {dbqd.contrib.packages.bcms.tcl.bcms-category-procs.bcms::category::set_category.set_heading {
              update cr_keywords set heading = :heading where keyword_id = :category_id
        } {} {} {postgresql 7.2} c:/web/openacs-4/contrib/packages/bcms/tcl/bcms-category-procs.xql}
dbqd.contrib.packages.bcms.tcl.bcms-category-procs.bcms::category::set_category.set_description {dbqd.contrib.packages.bcms.tcl.bcms-category-procs.bcms::category::set_category.set_description {
              update cr_keywords set description = :description where keyword_id = :category_id
        } {} {} {postgresql 7.2} c:/web/openacs-4/contrib/packages/bcms/tcl/bcms-category-procs.xql}
dbqd.contrib.packages.bcms.tcl.bcms-category-procs.bcms::category::get_category.get_category {dbqd.contrib.packages.bcms.tcl.bcms-category-procs.bcms::category::get_category.get_category {
            select keyword_id as category_id, parent_id, heading, description, has_children
            from cr_keywords
            where keyword_id = :category_id
        } {} {} {postgresql 7.2} c:/web/openacs-4/contrib/packages/bcms/tcl/bcms-category-procs.xql}
dbqd.contrib.packages.bcms.tcl.bcms-category-procs.bcms::category::list_categories.get_categories {dbqd.contrib.packages.bcms.tcl.bcms-category-procs.bcms::category::list_categories.get_categories {
            select keyword_id as category_id, parent_id, heading, description, has_children
            from cr_keywords
            where $where_str
        } {} {} {postgresql 7.2} c:/web/openacs-4/contrib/packages/bcms/tcl/bcms-category-procs.xql}
dbqd.contrib.packages.bcms.tcl.bcms-folder-procs.bcms::folder::get_cr_root_folder.get_cr_root_folder {dbqd.contrib.packages.bcms.tcl.bcms-folder-procs.bcms::folder::get_cr_root_folder.get_cr_root_folder {
                        select content_item__get_root_folder(null);
                } {} {} {postgresql 7.2} c:/web/openacs-4/contrib/packages/bcms/tcl/bcms-folder-procs-postgresql.xql}
dbqd.contrib.packages.bcms.tcl.bcms-folder-procs.bcms::folder::list_folders.get_cr_folders {dbqd.contrib.packages.bcms.tcl.bcms-folder-procs.bcms::folder::list_folders.get_cr_folders {
                        select  f.folder_id, 
                                i.name, 
                                i.parent_id,
                                f.label, 
                                f.has_child_folders,
                                f.has_child_symlinks,
                                f.package_id
                        from cr_items i, cr_folders f
                        where f.folder_id = i.item_id
                            and i.parent_id = :parent_id
                        order by i.tree_sortkey
                } {} {} {postgresql 7.2} c:/web/openacs-4/contrib/packages/bcms/tcl/bcms-folder-procs-postgresql.xql}
dbqd.contrib.packages.bcms.tcl.bcms-folder-procs.bcms::folder::tree_folders.get_cr_folders {dbqd.contrib.packages.bcms.tcl.bcms-folder-procs.bcms::folder::tree_folders.get_cr_folders {
                    select f.folder_id,
                            i.name,
                            i.parent_id,
                            f.label,
                            f.has_child_folders,
                            f.has_child_symlinks,
                            f.package_id,
                            tree_level(i.tree_sortkey) as level,
                            tree_level(p.tree_sortkey) as parent_level,
                            :prepend_path || content_item__get_path(f.folder_id, p.item_id) as path
                    from cr_items i, cr_folders f,
                        (select item_id, tree_sortkey from cr_items where item_id = :parent_id) p
                    where
                        f.folder_id = i.item_id
                        and i.tree_sortkey between p.tree_sortkey and tree_right(p.tree_sortkey)
                        $addtnl_where
                    order by i.tree_sortkey
                } {} {} {postgresql 7.2} c:/web/openacs-4/contrib/packages/bcms/tcl/bcms-folder-procs-postgresql.xql}
dbqd.contrib.packages.bcms.tcl.bcms-folder-procs.bcms::folder::delete_folder.delete_folder {dbqd.contrib.packages.bcms.tcl.bcms-folder-procs.bcms::folder::delete_folder.delete_folder {
                        select content_folder__delete(:folder_id)
                } {} {} {postgresql 7.2} c:/web/openacs-4/contrib/packages/bcms/tcl/bcms-folder-procs-postgresql.xql}
dbqd.contrib.packages.bcms.tcl.bcms-folder-procs.bcms::folder::set_folder.edit_folder {dbqd.contrib.packages.bcms.tcl.bcms-folder-procs.bcms::folder::set_folder.edit_folder {
			update cr_items set $update_string
				where item_id = :folder_id
		} {} {} {} c:/web/openacs-4/contrib/packages/bcms/tcl/bcms-folder-procs.xql}
dbqd.contrib.packages.bcms.tcl.bcms-folder-procs.bcms::folder::set_folder.edit_folder_label {dbqd.contrib.packages.bcms.tcl.bcms-folder-procs.bcms::folder::set_folder.edit_folder_label {
			update cr_folders set label = :label
				where folder_id = :folder_id
		} {} {} {} c:/web/openacs-4/contrib/packages/bcms/tcl/bcms-folder-procs.xql}
dbqd.contrib.packages.bcms.tcl.bcms-folder-procs.bcms::folder::get_folder.get_1folder {dbqd.contrib.packages.bcms.tcl.bcms-folder-procs.bcms::folder::get_folder.get_1folder {
            select i.name, i.parent_id, f.label, f.description, f.has_child_folders,
                f.has_child_symlinks, f.package_id
            from cr_folders f, cr_items i
                where f.folder_id = :folder_id
                and i.item_id = f.folder_id
        } {} {} {} c:/web/openacs-4/contrib/packages/bcms/tcl/bcms-folder-procs.xql}
dbqd.contrib.packages.bcms.tcl.bcms-item-procs.bcms::item::create_item.create_item {dbqd.contrib.packages.bcms.tcl.bcms-item-procs.bcms::item::create_item.create_item {
                        select content_item__new (
                                :item_name,                             -- name
                                integer :parent_id,     -- parent_id  for some reason PG gets confused on this param, explicit typecasting was needed
                                null,                                   -- item_id
                                null,                                   -- locale
                                now(),                                  -- creation_date
                                :creation_user_id,              -- creation_user
                                :parent_id,                             -- context_id
                                :creation_ip,                   -- creation_ip
                                'content_revision',             -- item_subtype
                                :content_type,              -- content_type
                                null,                                   -- title
                                null,                           -- description
                                null,                                   -- mime_type
                                null,                                   -- nls_language
                                null,                                   -- data
                                :storage_type                   -- storage_type
                        )

                } {} {} {postgresql 7.2} c:/web/openacs-4/contrib/packages/bcms/tcl/bcms-item-procs-postgresql.xql}
dbqd.contrib.packages.bcms.tcl.bcms-item-procs.bcms::item::set_item.update_parent {dbqd.contrib.packages.bcms.tcl.bcms-item-procs.bcms::item::set_item.update_parent {
            select content_item__move(:item_id, :parent_id)
                } {} {} {postgresql 7.2} c:/web/openacs-4/contrib/packages/bcms/tcl/bcms-item-procs-postgresql.xql}
dbqd.contrib.packages.bcms.tcl.bcms-item-procs.bcms::item::list_items.get_items {dbqd.contrib.packages.bcms.tcl.bcms-item-procs.bcms::item::list_items.get_items {
                        select  i.item_id, 
                                i.name, 
                                i.live_revision, 
                                i.latest_revision, 
                                i.publish_status, 
                                i.content_type, 
                                i.storage_type,
                                i.tree_sortkey,
                                to_char(last_modified,'YYYY-MM-DD HH:MM AM') as last_modified
                                $addtnl_select
                        from cr_items i, cr_revisionsx r
                                $addtnl_from
                        where
                                i.parent_id = :parent_id
                                $addtnl_where

                        union

                        select  i.item_id, 
                                i.name, 
                                i.live_revision, 
                                i.latest_revision, 
                                i.publish_status, 
                                i.content_type, 
                                i.storage_type,
                                i.tree_sortkey,
                                null as last_modified,
                                f.label as title,
                                f.description
                                $addtnl_select_folder
                        from cr_items i, cr_folders f
                        where
                                i.parent_id = :parent_id
                                and i.item_id = f.folder_id
                                $addtnl_where_folder

                        order by $orderby
                } {} {} {postgresql 7.2} c:/web/openacs-4/contrib/packages/bcms/tcl/bcms-item-procs-postgresql.xql}
dbqd.contrib.packages.bcms.tcl.bcms-item-procs.bcms::item::tree_items.get_items {dbqd.contrib.packages.bcms.tcl.bcms-item-procs.bcms::item::tree_items.get_items {
            select a.item_id, o.name, o.live_revision, o.latest_revision, o.publish_status, 
                o.content_type, o.storage_type,
                                tree_level(o.tree_sortkey) as level,
                                tree_level(parent_sortkey) as parent_level
                $addtnl_select
            from cr_items o, 
                (select tree_ancestor_keys(i.tree_sortkey) as tree_sortkey_trail, p.tree_sortkey as parent_sortkey, i.item_id, i.tree_sortkey 
                $addtnl_inner_select
                    from cr_items i, 
                    (select tree_sortkey from cr_items where item_id = :parent_id) p 
                    $addtnl_from
                where 
                    tree_ancestor_p(p.tree_sortkey, i.tree_sortkey) 
                    $addtnl_where) a
            where 
                o.tree_sortkey = tree_sortkey_trail
                and tree_ancestor_p(parent_sortkey, o.tree_sortkey) 
            order by a.tree_sortkey
                } {} {} {postgresql 7.2} c:/web/openacs-4/contrib/packages/bcms/tcl/bcms-item-procs-postgresql.xql}
dbqd.contrib.packages.bcms.tcl.bcms-item-procs.bcms::item::list_related_items.get_related_items {dbqd.contrib.packages.bcms.tcl.bcms-item-procs.bcms::item::list_related_items.get_related_items {
            select i.item_id, i.name, i.live_revision, i.latest_revision, i.publish_status,
                i.content_type, i.storage_type, ir.rel_id, ir.order_n,
                content_item__get_path(i.item_id, ir.item_id) as path
                $addtnl_select
            from cr_items i, cr_item_rels ir
                    $addtnl_from
            where ir.item_id = :item_id
                and ir.related_object_id = i.item_id
                and ir.relation_tag = :relation_tag
                                $addtnl_where
            order by order_n
        } {} {} {postgresql 7.2} c:/web/openacs-4/contrib/packages/bcms/tcl/bcms-item-procs-postgresql.xql}
dbqd.contrib.packages.bcms.tcl.bcms-item-procs.bcms::item::delete_item.delete_item {dbqd.contrib.packages.bcms.tcl.bcms-item-procs.bcms::item::delete_item.delete_item {
                        select content_item__delete(:item_id)
                } {} {} {postgresql 7.2} c:/web/openacs-4/contrib/packages/bcms/tcl/bcms-item-procs-postgresql.xql}
dbqd.contrib.packages.bcms.tcl.bcms-item-procs.bcms::item::delete_item.delete_all_revisions {dbqd.contrib.packages.bcms.tcl.bcms-item-procs.bcms::item::delete_item.delete_all_revisions {
                       select content_revision__delete(revision_id)
                               from cr_revisions where item_id = :item_id
               } {} {} {postgresql 7.2} c:/web/openacs-4/contrib/packages/bcms/tcl/bcms-item-procs-postgresql.xql}
dbqd.contrib.packages.bcms.tcl.bcms-item-procs.bcms::item::create_link.create_link {dbqd.contrib.packages.bcms.tcl.bcms-item-procs.bcms::item::create_link.create_link {
            select content_symlink__new(
                            :name,              -- name
                            :label,             -- label
                            :target_id,         -- target_id
                            :parent_id,         -- parent_id
                            null,               -- symlink_id
                            now(),              -- creation_date
                            :creation_user_id,  -- creation_user_id
                            :creation_ip        -- creation_ip
            )
        } {} {} {postgresql 7.2} c:/web/openacs-4/contrib/packages/bcms/tcl/bcms-item-procs-postgresql.xql}
dbqd.contrib.packages.bcms.tcl.bcms-item-procs.bcms::item::relate_item.relate_item {dbqd.contrib.packages.bcms.tcl.bcms-item-procs.bcms::item::relate_item.relate_item {
            select content_item__relate(
                            :item_id,           -- item_id
                            :related_object_id, -- related_object_id
                            :relation_type,     -- relation_tag
                            null,               -- order_n
                            'cr_item_rel'       -- relation_type
            )
        } {} {} {postgresql 7.2} c:/web/openacs-4/contrib/packages/bcms/tcl/bcms-item-procs-postgresql.xql}
dbqd.contrib.packages.bcms.tcl.bcms-item-procs.bcms::item::unrelate_item.unrelate_item {dbqd.contrib.packages.bcms.tcl.bcms-item-procs.bcms::item::unrelate_item.unrelate_item {
            select content_item__unrelate(:rel_id)
        } {} {} {postgresql 7.2} c:/web/openacs-4/contrib/packages/bcms/tcl/bcms-item-procs-postgresql.xql}
dbqd.contrib.packages.bcms.tcl.bcms-item-procs.bcms::item::get_item_best.get_1item {dbqd.contrib.packages.bcms.tcl.bcms-item-procs.bcms::item::get_item_best.get_1item {
                        select name, parent_id, storage_type, content_type, storage_type, publish_status,
                        revision_id, title, content, description, publish_date, mime_type
                    from cr_items i, cr_revisions r where
                                i.item_id = r.item_id
                                and i.item_id = :item_id
                                and content_item__get_best_revision(:item_id) = r.revision_id
                } {} {} {postgresql 7.2} c:/web/openacs-4/contrib/packages/bcms/tcl/bcms-item-procs-postgresql.xql}
dbqd.contrib.packages.bcms.tcl.bcms-item-procs.bcms::item::list_pages.get_pages {dbqd.contrib.packages.bcms.tcl.bcms-item-procs.bcms::item::list_pages.get_pages {
            select i.item_id, i.name, i.publish_status, i.content_type, i.storage_type $addtnl_select
                from cr_items i
            where i.parent_id = :parent_id
            order by i.tree_sortkey
        } {} {} {postgresql 7.2} c:/web/openacs-4/contrib/packages/bcms/tcl/bcms-item-procs-postgresql.xql}
dbqd.contrib.packages.bcms.tcl.bcms-item-procs.bcms::item::get_item_by_url.get_item_id {dbqd.contrib.packages.bcms.tcl.bcms-item-procs.bcms::item::get_item_by_url.get_item_id {
                        select content_item__get_id(:url, :root_id, :resolve_index);
                } {} {} {postgresql 7.2} c:/web/openacs-4/contrib/packages/bcms/tcl/bcms-item-procs-postgresql.xql}
dbqd.contrib.packages.bcms.tcl.bcms-item-procs.bcms::item::get_sortkeys.get_currentkey {dbqd.contrib.packages.bcms.tcl.bcms-item-procs.bcms::item::get_sortkeys.get_currentkey {
            select tree_sortkey as current_sortkey, parent_id from cr_items where item_id = :item_id
        } {} {} {postgresql 7.2} c:/web/openacs-4/contrib/packages/bcms/tcl/bcms-item-procs-postgresql.xql}
dbqd.contrib.packages.bcms.tcl.bcms-item-procs.bcms::item::get_sortkeys.get_nextkey {dbqd.contrib.packages.bcms.tcl.bcms-item-procs.bcms::item::get_sortkeys.get_nextkey {
            select i.tree_sortkey as next_sortkey
                from cr_items i, (select tree_sortkey from cr_items where item_id = :item_id) c
            where i.parent_id = :parent_id 
                and i.tree_sortkey > c.tree_sortkey
            order by i.tree_sortkey
            limit 1
        } {} {} {postgresql 7.2} c:/web/openacs-4/contrib/packages/bcms/tcl/bcms-item-procs-postgresql.xql}
dbqd.contrib.packages.bcms.tcl.bcms-item-procs.bcms::item::get_sortkeys.get_prevkey {dbqd.contrib.packages.bcms.tcl.bcms-item-procs.bcms::item::get_sortkeys.get_prevkey {
            select i.tree_sortkey as prev_sortkey
                from cr_items i, (select tree_sortkey from cr_items where item_id = :item_id) c
            where i.parent_id = :parent_id 
                and i.tree_sortkey < c.tree_sortkey
            order by i.tree_sortkey desc
            limit 1
        } {} {} {postgresql 7.2} c:/web/openacs-4/contrib/packages/bcms/tcl/bcms-item-procs-postgresql.xql}
dbqd.contrib.packages.bcms.tcl.bcms-item-procs.bcms::item::get_item_path.get_item_path {dbqd.contrib.packages.bcms.tcl.bcms-item-procs.bcms::item::get_item_path.get_item_path {
            (select i.item_id, :prepend_path as path, 
                case when i.content_type = 'content_folder' then content_folder__get_label(i.item_id) else bcms__get_title(i.item_id, 'latest') end as title
            from cr_items i where item_id = :root_id)

            union

            (select i.item_id, :prepend_path || content_item__get_path(i.item_id, r.item_id) as path, 
                case when i.content_type = 'content_folder' then content_folder__get_label(i.item_id) else bcms__get_title(i.item_id, 'latest') end as title
            from cr_items i,
                (select tree_sortkey, item_id from cr_items where item_id = :root_id) r,
                (select tree_ancestor_keys(tree_sortkey) as tree_sortkey from cr_items where item_id = :item_id) p
            where   
                i.tree_sortkey = p.tree_sortkey
                and i.tree_sortkey > r.tree_sortkey
                $addtnl_where
            order by i.tree_sortkey)
        } {} {} {postgresql 7.2} c:/web/openacs-4/contrib/packages/bcms/tcl/bcms-item-procs-postgresql.xql}
dbqd.contrib.packages.bcms.tcl.bcms-item-procs.bcms::item::assign_category.assign_category {dbqd.contrib.packages.bcms.tcl.bcms-item-procs.bcms::item::assign_category.assign_category {
              select content_keyword__item_assign (:item_id,
                                                   :category_id,
                                                   null,
                                                   null,
                                                   null)
        } {} {} {postgresql 7.2} c:/web/openacs-4/contrib/packages/bcms/tcl/bcms-item-procs-postgresql.xql}
dbqd.contrib.packages.bcms.tcl.bcms-item-procs.bcms::item::unassign_category.unassign_category {dbqd.contrib.packages.bcms.tcl.bcms-item-procs.bcms::item::unassign_category.unassign_category {
              select content_keyword__item_unassign (:item_id,
                                                     :category_id)
        } {} {} {postgresql 7.2} c:/web/openacs-4/contrib/packages/bcms/tcl/bcms-item-procs-postgresql.xql}
dbqd.contrib.packages.bcms.tcl.bcms-item-procs.bcms::item::clear_categories.unassign_all_category {dbqd.contrib.packages.bcms.tcl.bcms-item-procs.bcms::item::clear_categories.unassign_all_category {
            select content_keyword__item_unassign (item_id, keyword_id)
            from cr_item_keyword_map where item_id = :item_id;
        } {} {} {postgresql 7.2} c:/web/openacs-4/contrib/packages/bcms/tcl/bcms-item-procs-postgresql.xql}
dbqd.contrib.packages.bcms.tcl.bcms-item-procs.bcms::item::get_item.get_1item {dbqd.contrib.packages.bcms.tcl.bcms-item-procs.bcms::item::get_item.get_1item {
			select i.name, i.parent_id, i.live_revision, i.latest_revision, 
				i.content_type, i.storage_type, i.publish_status
				$addtnl_select
		    	from cr_items i $addtnl_from
			where i.item_id = :item_id
				$addtnl_where
		} {} {} {} c:/web/openacs-4/contrib/packages/bcms/tcl/bcms-item-procs.xql}
dbqd.contrib.packages.bcms.tcl.bcms-item-procs.bcms::item::set_item.update_name {dbqd.contrib.packages.bcms.tcl.bcms-item-procs.bcms::item::set_item.update_name {
			update cr_items set name = :name
				where item_id = :item_id
		} {} {} {} c:/web/openacs-4/contrib/packages/bcms/tcl/bcms-item-procs.xql}
dbqd.contrib.packages.bcms.tcl.bcms-item-procs.bcms::item::get_content_type.get_content_type {dbqd.contrib.packages.bcms.tcl.bcms-item-procs.bcms::item::get_content_type.get_content_type {
			select content_type from cr_items where item_id = :item_id
		} {} {} {} c:/web/openacs-4/contrib/packages/bcms/tcl/bcms-item-procs.xql}
dbqd.contrib.packages.bcms.tcl.bcms-item-procs.bcms::item::list_items.get_table_name {dbqd.contrib.packages.bcms.tcl.bcms-item-procs.bcms::item::list_items.get_table_name {
            select table_name from acs_object_types where object_type = :content_type
        } {} {} {} c:/web/openacs-4/contrib/packages/bcms/tcl/bcms-item-procs.xql}
dbqd.contrib.packages.bcms.tcl.bcms-item-procs.bcms::item::get_categories.get_categories {dbqd.contrib.packages.bcms.tcl.bcms-item-procs.bcms::item::get_categories.get_categories {
            select keyword_id as category_id from cr_item_keyword_map where item_id = :item_id
        } {} {} {} c:/web/openacs-4/contrib/packages/bcms/tcl/bcms-item-procs.xql}
dbqd.contrib.packages.bcms.tcl.bcms-procs.bcms::get_next_objectid.get_next_objectid {dbqd.contrib.packages.bcms.tcl.bcms-procs.bcms::get_next_objectid.get_next_objectid {
			select nextval('t_acs_object_id_seq')
		} {} {} {postgresql 7.2} c:/web/openacs-4/contrib/packages/bcms/tcl/bcms-procs-postgresql.xql}
dbqd.contrib.packages.bcms.tcl.bcms-procs.bcms::init_bcms.update_package_id {dbqd.contrib.packages.bcms.tcl.bcms-procs.bcms::init_bcms.update_package_id {
            update cr_folders set package_id = :package_id where folder_id = :root_folder_id
        } {} {} {postgresql 7.2} c:/web/openacs-4/contrib/packages/bcms/tcl/bcms-procs-postgresql.xql}
dbqd.contrib.packages.bcms.tcl.bcms-procs.bcms::register_content_type.register_content_type {dbqd.contrib.packages.bcms.tcl.bcms-procs.bcms::register_content_type.register_content_type {
            select content_folder__register_content_type (:folder_id, :content_type, 't');
        } {} {} {postgresql 7.2} c:/web/openacs-4/contrib/packages/bcms/tcl/bcms-procs-postgresql.xql}
dbqd.contrib.packages.bcms.tcl.bcms-procs.bcms::is_registered_content_type.check_content_type {dbqd.contrib.packages.bcms.tcl.bcms-procs.bcms::is_registered_content_type.check_content_type {
            select content_folder__is_registered (:folder_id, :content_type, 'f');
        } {} {} {postgresql 7.2} c:/web/openacs-4/contrib/packages/bcms/tcl/bcms-procs-postgresql.xql}
dbqd.contrib.packages.bcms.tcl.bcms-procs.bcms::get_table_name.get_table_name {dbqd.contrib.packages.bcms.tcl.bcms-procs.bcms::get_table_name.get_table_name {
			select table_name from acs_object_types where object_type = :object_type
		} {} {} {} c:/web/openacs-4/contrib/packages/bcms/tcl/bcms-procs.xql}
dbqd.contrib.packages.bcms.tcl.bcms-revision-procs.bcms::revision::delete_revision.delete_revision {dbqd.contrib.packages.bcms.tcl.bcms-revision-procs.bcms::revision::delete_revision.delete_revision {
			select content_revision__delete(:revision_id);
		} {} {} {postgresql 7.2} c:/web/openacs-4/contrib/packages/bcms/tcl/bcms-revision-procs-postgresql.xql}
dbqd.contrib.packages.bcms.tcl.bcms-revision-procs.bcms::revision::delete_revision.get_revision_count {dbqd.contrib.packages.bcms.tcl.bcms-revision-procs.bcms::revision::delete_revision.get_revision_count {
            select count(*) from cr_revisions where item_id = (
                select item_id from cr_revisions where revision_id = :revision_id
            )
        } {} {} {postgresql 7.2} c:/web/openacs-4/contrib/packages/bcms/tcl/bcms-revision-procs-postgresql.xql}
dbqd.contrib.packages.bcms.tcl.bcms-revision-procs.bcms::revision::set_revision_status.set_live {dbqd.contrib.packages.bcms.tcl.bcms-revision-procs.bcms::revision::set_revision_status.set_live {
			select content_item__set_live_revision (:revision_id, 'live')
		} {} {} {postgresql 7.2} c:/web/openacs-4/contrib/packages/bcms/tcl/bcms-revision-procs-postgresql.xql}
dbqd.contrib.packages.bcms.tcl.bcms-revision-procs.bcms::revision::set_revision_status.unset_live {dbqd.contrib.packages.bcms.tcl.bcms-revision-procs.bcms::revision::set_revision_status.unset_live {
			select content_item__unset_live_revision (item_id) from cr_revisions 
				where revision_id = :revision_id
		} {} {} {postgresql 7.2} c:/web/openacs-4/contrib/packages/bcms/tcl/bcms-revision-procs-postgresql.xql}
dbqd.contrib.packages.bcms.tcl.bcms-revision-procs.bcms::revision::list_revisions.get_revisions {dbqd.contrib.packages.bcms.tcl.bcms-revision-procs.bcms::revision::list_revisions.get_revisions {
			select x.revision_id, x.name, x.title, x.description, p.first_names, p.last_name, 
				to_char(x.creation_date,'HH:MI AM MM/DD/YYYY') as creation_date, l.live_revision_id
				from ${table_name}x x, persons p, (select content_item__get_live_revision(:item_id) as live_revision_id) l
			where x.creation_user = p.person_id
			and x.item_id = :item_id;
		} {} {} {postgresql 7.2} c:/web/openacs-4/contrib/packages/bcms/tcl/bcms-revision-procs-postgresql.xql}
dbqd.contrib.packages.bcms.tcl.bcms-revision-procs.bcms::revision::copy_revision.copy_revision {dbqd.contrib.packages.bcms.tcl.bcms-revision-procs.bcms::revision::copy_revision.copy_revision {
            select content_revision__copy(:revision_id, null, null, :creation_user_id, :creation_ip)
        } {} {} {postgresql 7.2} c:/web/openacs-4/contrib/packages/bcms/tcl/bcms-revision-procs-postgresql.xql}
dbqd.contrib.packages.bcms.tcl.bcms-revision-procs.bcms::revision::add_revision.insert_revision {dbqd.contrib.packages.bcms.tcl.bcms-revision-procs.bcms::revision::add_revision.insert_revision {
			insert into ${table_name}i
                    (revision_id, object_type, creation_user, creation_date, creation_ip, title, description, item_id, text, mime_type $addtnl_properties)
            values (:revision_id, :content_type, :creation_user_id, now(), :creation_ip, :title, :description, :item_id, :content, :mime_type $addtnl_values)
		} {} {} {} c:/web/openacs-4/contrib/packages/bcms/tcl/bcms-revision-procs.xql}
dbqd.contrib.packages.bcms.tcl.bcms-revision-procs.bcms::revision::upload_file_revision.insert_revision {dbqd.contrib.packages.bcms.tcl.bcms-revision-procs.bcms::revision::upload_file_revision.insert_revision {
			insert into ${table_name}i
                    (object_type, creation_user, creation_date, creation_ip, title, description, item_id, revision_id, text, mime_type $addtnl_properties)
            values (:content_type, :creation_user_id, now(), :creation_ip, :title, :description, :item_id, :revision_id, :content, :mime_type $addtnl_values)
		} {} {} {} c:/web/openacs-4/contrib/packages/bcms/tcl/bcms-revision-procs.xql}
dbqd.contrib.packages.bcms.tcl.bcms-revision-procs.bcms::revision::upload_file_revision.check_mime {dbqd.contrib.packages.bcms.tcl.bcms-revision-procs.bcms::revision::upload_file_revision.check_mime {
 	        select 1
            from cr_mime_types
        	where mime_type = :mime_type
        } {} {} {} c:/web/openacs-4/contrib/packages/bcms/tcl/bcms-revision-procs.xql}
dbqd.contrib.packages.bcms.tcl.bcms-revision-procs.bcms::revision::upload_file_revision.new_mime_type {dbqd.contrib.packages.bcms.tcl.bcms-revision-procs.bcms::revision::upload_file_revision.new_mime_type {
            insert into cr_mime_types
            (mime_type, file_extension)
            values
            (:mime_type, :file_extension)
        } {} {} {} c:/web/openacs-4/contrib/packages/bcms/tcl/bcms-revision-procs.xql}
dbqd.contrib.packages.bcms.tcl.bcms-revision-procs.bcms::revision::upload_file_revision.update_file_size {dbqd.contrib.packages.bcms.tcl.bcms-revision-procs.bcms::revision::upload_file_revision.update_file_size {
			update cr_revisions
	    		set content_length = :tmp_filesize
			where revision_id = :revision_id
     	} {} {} {} c:/web/openacs-4/contrib/packages/bcms/tcl/bcms-revision-procs.xql}
dbqd.contrib.packages.bcms.tcl.bcms-revision-procs.bcms::revision::get_revision.get_1revision {dbqd.contrib.packages.bcms.tcl.bcms-revision-procs.bcms::revision::get_revision.get_1revision {
			select i.item_id, i.name, r.title, r.description, r.content, 
                i.content_type, i.publish_status, i.live_revision, i.latest_revision, i.storage_type $addtnl_select
		    	from cr_revisions r, cr_items i $addtnl_from
			where r.revision_id = :revision_id
                and i.item_id = r.item_id $addtnl_where
		} {} {} {} c:/web/openacs-4/contrib/packages/bcms/tcl/bcms-revision-procs.xql}
dbqd.contrib.packages.bcms.tcl.bcms-revision-procs.bcms::revision::set_revision.update_revision {dbqd.contrib.packages.bcms.tcl.bcms-revision-procs.bcms::revision::set_revision.update_revision {
			update cr_revisions set $update_string
				where revision_id = :revision_id
		} {} {} {} c:/web/openacs-4/contrib/packages/bcms/tcl/bcms-revision-procs.xql}
dbqd.contrib.packages.bcms.tcl.bcms-template-procs.bcms::template::create_template.create_template {dbqd.contrib.packages.bcms.tcl.bcms-template-procs.bcms::template::create_template.create_template {
			select content_template__new(:template_name, :parent_id,
				null, now(), :creation_user_id, :creation_ip)
		} {} {} {postgresql 7.2} c:/web/openacs-4/contrib/packages/bcms/tcl/bcms-template-procs-postgresql.xql}
dbqd.contrib.packages.bcms.tcl.bcms-template-procs.bcms::template::add_template.add_template {dbqd.contrib.packages.bcms.tcl.bcms-template-procs.bcms::template::add_template.add_template {
			select content_revision__new(:title, :description, now(), 'text/html', null, :content, :template_id, null, now(), :creation_user_id, :creation_ip)
		} {} {} {postgresql 7.2} c:/web/openacs-4/contrib/packages/bcms/tcl/bcms-template-procs-postgresql.xql}
dbqd.contrib.packages.bcms.tcl.bcms-template-procs.bcms::template::delete_template.delete_template {dbqd.contrib.packages.bcms.tcl.bcms-template-procs.bcms::template::delete_template.delete_template {
			select content_template__delete(:template_id)
		} {} {} {postgresql 7.2} c:/web/openacs-4/contrib/packages/bcms/tcl/bcms-template-procs-postgresql.xql}
dbqd.contrib.packages.bcms.tcl.bcms-template-procs.bcms::template::get_cr_root_template_folder.get_template_root {dbqd.contrib.packages.bcms.tcl.bcms-template-procs.bcms::template::get_cr_root_template_folder.get_template_root {
			select content_template__get_root_folder()
		} {} {} {postgresql 7.2} c:/web/openacs-4/contrib/packages/bcms/tcl/bcms-template-procs-postgresql.xql}
dbqd.contrib.packages.bcms.tcl.bcms-template-procs.bcms::template::apply_template.apply_template {dbqd.contrib.packages.bcms.tcl.bcms-template-procs.bcms::template::apply_template.apply_template {
			select content_item__register_template(:item_id, :template_id, :context)
		} {} {} {postgresql 7.2} c:/web/openacs-4/contrib/packages/bcms/tcl/bcms-template-procs-postgresql.xql}
dbqd.contrib.packages.bcms.tcl.bcms-template-procs.bcms::template::unregister_template.unregister_template {dbqd.contrib.packages.bcms.tcl.bcms-template-procs.bcms::template::unregister_template.unregister_template {
			select content_item__unregister_template(:item_id, :template_id, :context)
		} {} {} {postgresql 7.2} c:/web/openacs-4/contrib/packages/bcms/tcl/bcms-template-procs-postgresql.xql}
dbqd.contrib.packages.bcms.tcl.bcms-template-procs.bcms::template::get_template.get_template {dbqd.contrib.packages.bcms.tcl.bcms-template-procs.bcms::template::get_template.get_template {
			select name, item_id from cr_items where item_id = content_item__get_template(:item_id, :context)
		} {} {} {postgresql 7.2} c:/web/openacs-4/contrib/packages/bcms/tcl/bcms-template-procs-postgresql.xql}
dbqd.contrib.packages.bcms.tcl.bcms-template-procs.bcms::template::list_templates.list_templates {dbqd.contrib.packages.bcms.tcl.bcms-template-procs.bcms::template::list_templates.list_templates {
            select  i.item_id as template_id, i.name, i.live_revision, i.latest_revision, i.publish_status, i.content_type, i.storage_type, i.tree_sortkey,
                    r.title, r.description
            from cr_items i, cr_revisions r
            where
                    i.parent_id = :parent_id
                    and i.item_id = r.item_id
                    and r.revision_id = $revision
        } {} {} {postgresql 7.2} c:/web/openacs-4/contrib/packages/bcms/tcl/bcms-template-procs-postgresql.xql}
dbqd.contrib.packages.bcms.www.index.register_bcms_basic {dbqd.contrib.packages.bcms.www.index.register_bcms_basic {
			select content_folder__register_content_type (:bcms_folder_id, 'bcms_basic', 't');

		} {} {} {postgresql 7.2} c:/web/openacs-4/contrib/packages/bcms/www/index-postgresql.xql}
dbqd.contrib.packages.bcms.www.index.update_package_id {dbqd.contrib.packages.bcms.www.index.update_package_id {
			update cr_folders set package_id = :package_id where folder_id = :bcms_folder_id

		} {} {} {postgresql 7.2} c:/web/openacs-4/contrib/packages/bcms/www/index.xql}
dbqd.contrib.packages.bcms-ui-base.resources.search.get_results {dbqd.contrib.packages.bcms-ui-base.resources.search.get_results {

        select * from (
            select i.item_id, 
                i.name, 
                content_item__get_path(i.item_id, r.item_id) as path,
                i.parent_id,
                case when i.content_type = 'content_folder' then content_folder__get_label(i.item_id) else bcms__get_title(i.item_id, 'latest') end as title,
                i.live_revision,
                i.latest_revision,
                i.content_type,
                to_char(ao.last_modified,'YYYY-MM-DD HH:MM AM') as last_modified
            from cr_items i, acs_objects ao,
                (select tree_sortkey, item_id from cr_items where item_id = :root_folder_id) r $openfts_from
            where tree_ancestor_p(r.tree_sortkey, i.tree_sortkey) 
                and ao.object_id = i.item_id
                and i.item_id <> r.item_id
                $openfts_where
                [template::list::page_where_clause -key i.item_id -and -name search_results]
        ) results
            where 1 = 1
            [template::list::filter_where_clauses -and -name search_results]
            [template::list::orderby_clause -orderby -name search_results]
    } {} {} {postgresql 7.2} c:/web/openacs-4/contrib/packages/bcms-ui-base/resources/search-postgresql.xql}
dbqd.contrib.packages.bcms-ui-base.resources.search.get_results_page_query {dbqd.contrib.packages.bcms-ui-base.resources.search.get_results_page_query {

        select * from (
            select i.item_id, 
                i.name, 
                i.parent_id,
                case when i.content_type = 'content_folder' then content_folder__get_label(i.item_id) else bcms__get_title(i.item_id, 'latest') end as title,
                i.live_revision,
                i.content_type,
                to_char(ao.last_modified,'YYYY-MM-DD HH:MM AM') as last_modified
            from cr_items i, acs_objects ao,
                (select tree_sortkey, item_id from cr_items where item_id = :root_folder_id) r $openfts_from
            where tree_ancestor_p(r.tree_sortkey, i.tree_sortkey) 
                and ao.object_id = i.item_id
                and i.item_id <> r.item_id
                $openfts_where
        ) results
            where 1 = 1
            [template::list::filter_where_clauses -and -name search_results]
            [template::list::orderby_clause -orderby -name search_results]
    } {} {} {postgresql 7.2} c:/web/openacs-4/contrib/packages/bcms-ui-base/resources/search-postgresql.xql}
dbqd.contrib.packages.bcms-ui-base.tcl.bcms-ui-base-procs.bcms::ui::base::delete_url.can_delete {dbqd.contrib.packages.bcms-ui-base.tcl.bcms-ui-base-procs.bcms::ui::base::delete_url.can_delete {
                        select case when count(*) = 0 then true else false end 
                        from cr_items 
                        where content_type = 'content_folder' 
                        and item_id in ($item_ids)
                        and not content_folder__is_empty(item_id)
                } {} {} {postgresql 7.2} c:/web/openacs-4/contrib/packages/bcms-ui-base/tcl/bcms-ui-base-procs-postgresql.xql}
dbqd.contrib.packages.classified-ads.tcl.ads-procs.classified-ads::ads::delete.delete_ad {dbqd.contrib.packages.classified-ads.tcl.ads-procs.classified-ads::ads::delete.delete_ad {

            select ca_ad__delete (:ad_id)

        } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/packages/classified-ads/tcl/ads-procs-postgresql.xql}
dbqd.contrib.packages.classified-ads.tcl.ads-procs.classified-ads::ads::delete.delete_content {dbqd.contrib.packages.classified-ads.tcl.ads-procs.classified-ads::ads::delete.delete_content {

            select content_item__delete (:ad_id)

        } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/packages/classified-ads/tcl/ads-procs-postgresql.xql}
dbqd.contrib.packages.classified-ads.tcl.ads-procs.classified-ads::ads::get_assigned_ads_by_category.select_ads {dbqd.contrib.packages.classified-ads.tcl.ads-procs.classified-ads::ads::get_assigned_ads_by_category.select_ads {
    
            select cm.keyword_id,
                   ci.item_id,
                   cr.title,
		   to_char(cr.publish_date, 'Mon FMDD, YYYY') as pretty_publish_date
		   $custom_fields
            from cr_item_keyword_map cm,
                 cr_revisions cr,
                 cr_items ci,
		 cr_ca_ads ads
            where cm.item_id = cr.item_id and
                  ci.latest_revision = cr.revision_id and
                  ci.parent_id = :parent_id and
                  ci.content_type = 'ca_ad' and
		  cm.keyword_id = :category_id and
		  ci.item_id = ads.ad_id
            order by cm.keyword_id asc,
                     cr.title asc

        } {} {} {} c:/web/openacs-4/contrib/packages/classified-ads/tcl/ads-procs.xql}
dbqd.contrib.packages.classified-ads.tcl.ads-procs.classified-ads::ads::get_unassigned_ads_by_category.select_ads {dbqd.contrib.packages.classified-ads.tcl.ads-procs.classified-ads::ads::get_unassigned_ads_by_category.select_ads {
    
            select ci.item_id,
                   cr.title,
		   to_char(cr.publish_date, 'Mon FMDD, YYYY') as pretty_publish_date
            from cr_revisions cr,
                 cr_items ci
            where ci.item_id not in (select item_id
                                          from cr_item_keyword_map cm
                                          $condition_stub) and
                  ci.latest_revision = cr.revision_id and
                  ci.parent_id = :parent_id and
                  ci.content_type = 'ca_ad'
            order by cr.title asc

        } {} {} {} c:/web/openacs-4/contrib/packages/classified-ads/tcl/ads-procs.xql}
dbqd.contrib.packages.classified-ads.tcl.ads-procs.classified-ads::ads::get.select_data {dbqd.contrib.packages.classified-ads.tcl.ads-procs.classified-ads::ads::get.select_data {

            select *
            from cr_ca_adsx
            where revision_id = :revision_id

        } {} {} {} c:/web/openacs-4/contrib/packages/classified-ads/tcl/ads-procs.xql}
dbqd.contrib.packages.classified-ads.tcl.ads-procs.classified-ads::ads::get_category_id.get_category_id {dbqd.contrib.packages.classified-ads.tcl.ads-procs.classified-ads::ads::get_category_id.get_category_id {

            select keyword_id 
              from cr_item_keyword_map
             where item_id = :ad_id

        } {} {} {} c:/web/openacs-4/contrib/packages/classified-ads/tcl/ads-procs.xql}
dbqd.contrib.packages.classified-ads.tcl.categories-procs.classified-ads::categories::new.create_keyword {dbqd.contrib.packages.classified-ads.tcl.categories-procs.classified-ads::categories::new.create_keyword {

              select content_keyword__new (:heading,
                                           :description,
                                           :parent_id,
                                           :keyword_id,
                                           now(),
                                           :creation_user,
                                           :creation_ip,
                                           'content_keyword')

        } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/packages/classified-ads/tcl/categories-procs-postgresql.xql}
dbqd.contrib.packages.classified-ads.tcl.categories-procs.classified-ads::categories::delete.delete_category {dbqd.contrib.packages.classified-ads.tcl.categories-procs.classified-ads::categories::delete.delete_category {

              select content_keyword__delete (:keyword_id)

        } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/packages/classified-ads/tcl/categories-procs-postgresql.xql}
dbqd.contrib.packages.classified-ads.tcl.categories-procs.classified-ads::categories::get_heading.get_heading {dbqd.contrib.packages.classified-ads.tcl.categories-procs.classified-ads::categories::get_heading.get_heading {

              select content_keyword__get_heading (:keyword_id)

        } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/packages/classified-ads/tcl/categories-procs-postgresql.xql}
dbqd.contrib.packages.classified-ads.tcl.categories-procs.classified-ads::categories::set_heading.set_heading {dbqd.contrib.packages.classified-ads.tcl.categories-procs.classified-ads::categories::set_heading.set_heading {

              select content_keyword__set_heading (:keyword_id,
                                                   :heading)

        } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/packages/classified-ads/tcl/categories-procs-postgresql.xql}
dbqd.contrib.packages.classified-ads.tcl.categories-procs.classified-ads::categories::get_description.get_description {dbqd.contrib.packages.classified-ads.tcl.categories-procs.classified-ads::categories::get_description.get_description {

              select content_keyword__get_description (:keyword_id)

        } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/packages/classified-ads/tcl/categories-procs-postgresql.xql}
dbqd.contrib.packages.classified-ads.tcl.categories-procs.classified-ads::categories::set_description.set_description {dbqd.contrib.packages.classified-ads.tcl.categories-procs.classified-ads::categories::set_description.set_description {

              select content_keyword__set_description (:keyword_id,
                                                       :description)

        } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/packages/classified-ads/tcl/categories-procs-postgresql.xql}
dbqd.contrib.packages.classified-ads.tcl.categories-procs.classified-ads::categories::get_path.get_path {dbqd.contrib.packages.classified-ads.tcl.categories-procs.classified-ads::categories::get_path.get_path {

              select content_keyword__get_path (:keyword_id)

        } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/packages/classified-ads/tcl/categories-procs-postgresql.xql}
dbqd.contrib.packages.classified-ads.tcl.categories-procs.classified-ads::categories::item_assign.add_map {dbqd.contrib.packages.classified-ads.tcl.categories-procs.classified-ads::categories::item_assign.add_map {

              select content_keyword__item_assign (:item_id,
                                                   :keyword_id,
                                                   null,
                                                   null,
                                                   null)

        } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/packages/classified-ads/tcl/categories-procs-postgresql.xql}
dbqd.contrib.packages.classified-ads.tcl.categories-procs.classified-ads::categories::item_unassign.delete_map {dbqd.contrib.packages.classified-ads.tcl.categories-procs.classified-ads::categories::item_unassign.delete_map {

              select content_keyword__item_unassign (:item_id,
                                                     :keyword_id)

        } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/packages/classified-ads/tcl/categories-procs-postgresql.xql}
dbqd.contrib.packages.classified-ads.tcl.categories-procs.classified-ads::categories::get_custom_fields.get_fields {dbqd.contrib.packages.classified-ads.tcl.categories-procs.classified-ads::categories::get_custom_fields.get_fields {
            
	    SELECT 
	           attribute_name, pretty_name
	      FROM 
	           acs_attributes att,
		   ca_attributes ca,
		   (
		            select 
                		   subtree.keyword_id
		              from cr_keywords parent, cr_keywords subtree
		             where parent.keyword_id = :keyword_id 
			       and subtree.tree_sortkey between parent.tree_sortkey and tree_right(parent.tree_sortkey)
		   ) keywords
	    WHERE
	          att.attribute_id = ca.attribute_id
	      AND
	          ca.keyword_id = keywords.keyword_id
	           
        } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/packages/classified-ads/tcl/categories-procs-postgresql.xql}
dbqd.contrib.packages.classified-ads.tcl.categories-procs.classified-ads::categories::get_custom_fields_and_datatypes.get_fields {dbqd.contrib.packages.classified-ads.tcl.categories-procs.classified-ads::categories::get_custom_fields_and_datatypes.get_fields {
            
	    SELECT 
	           attribute_name, datatype 
	      FROM 
	           acs_attributes att,
		   ca_attributes ca,
		   (
		            select 
                		   subtree.keyword_id
		              from cr_keywords parent, cr_keywords subtree
		             where parent.keyword_id = :keyword_id 
			       and subtree.tree_sortkey between parent.tree_sortkey and tree_right(parent.tree_sortkey)
		   ) keywords
	    WHERE
	          att.attribute_id = ca.attribute_id
	      AND
	          ca.keyword_id = keywords.keyword_id
	           
        } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/packages/classified-ads/tcl/categories-procs-postgresql.xql}
dbqd.contrib.packages.classified-ads.tcl.categories-procs.classified-ads::categories::get_all_tree.get {dbqd.contrib.packages.classified-ads.tcl.categories-procs.classified-ads::categories::get_all_tree.get {
            
            select 
	           repeat(:indent_pattern, (tree_level(subtree.tree_sortkey) - 2) * :indent_factor::integer) || subtree.heading AS heading,
      		   subtree.keyword_id
              from 
	           cr_keywords parent, cr_keywords subtree
             where 
	           parent.keyword_id = :keyword_id 
	       and 
	           subtree.tree_sortkey between parent.tree_sortkey and tree_right(parent.tree_sortkey)
	           
        } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/packages/classified-ads/tcl/categories-procs-postgresql.xql}
dbqd.contrib.packages.classified-ads.tcl.categories-procs.classified-ads::categories::get_package_keyword_id.get_id {dbqd.contrib.packages.classified-ads.tcl.categories-procs.classified-ads::categories::get_package_keyword_id.get_id {

            select keyword_id
            from cr_keywords
            where heading = :heading and
                  parent_id = :main_keyword_id

        } {} {} {} c:/web/openacs-4/contrib/packages/classified-ads/tcl/categories-procs.xql}
dbqd.contrib.packages.classified-ads.tcl.categories-procs.classified-ads::categories::generate_trail.get_instance_name {dbqd.contrib.packages.classified-ads.tcl.categories-procs.classified-ads::categories::generate_trail.get_instance_name {

            select instance_name
            from apm_packages
            where package_id = :package_id

        } {} {} {} c:/web/openacs-4/contrib/packages/classified-ads/tcl/categories-procs.xql}
dbqd.contrib.packages.classified-ads.tcl.categories-procs.classified-ads::categories::generate_trail.get_trail {dbqd.contrib.packages.classified-ads.tcl.categories-procs.classified-ads::categories::generate_trail.get_trail {

            select keyword_id,
                   heading
            from (select ck2.keyword_id,
                         ck2.heading, 
                         tree_level(ck2.tree_sortkey) as tree_level
                  from cr_keywords ck1, cr_keywords ck2
                  where ck1.keyword_id = :keyword_id and
                        ck1.tree_sortkey between ck2.tree_sortkey and
                                                 tree_right(ck2.tree_sortkey)) k
            where tree_level > 1
            order by tree_level asc

        } {} {} {} c:/web/openacs-4/contrib/packages/classified-ads/tcl/categories-procs.xql}
dbqd.contrib.packages.classified-ads.tcl.classified-ads-procs.classified-ads::get_folder_id.select_folder_id {dbqd.contrib.packages.classified-ads.tcl.classified-ads-procs.classified-ads::get_folder_id.select_folder_id {

              select ca__get_folder_id (:package_id)

        } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/packages/classified-ads/tcl/classified-ads-procs-postgresql.xql}
dbqd.contrib.packages.classified-ads.tcl.classified-ads-procs.classified-ads::get_content_type.select_type {dbqd.contrib.packages.classified-ads.tcl.classified-ads-procs.classified-ads::get_content_type.select_type {

              select content_item__get_content_type (:item_id)

        } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/packages/classified-ads/tcl/classified-ads-procs-postgresql.xql}
dbqd.contrib.packages.classified-ads.tcl.classified-ads-procs.classified-ads::register_content_type.register_content_type {dbqd.contrib.packages.classified-ads.tcl.classified-ads-procs.classified-ads::register_content_type.register_content_type {

              select content_folder__register_content_type (:folder_id,
                                                            :content_type,
                                                            :include_subtypes)

        } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/packages/classified-ads/tcl/classified-ads-procs-postgresql.xql}
dbqd.contrib.packages.classified-ads.tcl.classified-ads-procs.classified-ads::create_package_folder.create_folder {dbqd.contrib.packages.classified-ads.tcl.classified-ads-procs.classified-ads::create_package_folder.create_folder {

            select content_folder__new (:name,
                                        :label,
                                        :description,
                                        :root_folder_id)

        } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/packages/classified-ads/tcl/classified-ads-procs-postgresql.xql}
dbqd.contrib.packages.classified-ads.tcl.classified-ads-procs.classified-ads::create_package_folder.associate_package {dbqd.contrib.packages.classified-ads.tcl.classified-ads-procs.classified-ads::create_package_folder.associate_package {

            select ca__set_package_folder (:new_folder_id,
                                           :package_id)

        } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/packages/classified-ads/tcl/classified-ads-procs-postgresql.xql}
dbqd.contrib.packages.classified-ads.tcl.classified-ads-procs.classified-ads::create_ca_item.insert_content_item {dbqd.contrib.packages.classified-ads.tcl.classified-ads-procs.classified-ads::create_ca_item.insert_content_item {

              select content_item__new (:name::varchar,
                                        :parent_id::int4,
                                        :item_id::int4,
                                        null,
                                        now(),
                                        :creation_user,
                                        null,
                                        :creation_ip,
                                        :content_item,
                                        :content_type,
                                        null,
                                        null,
                                        'text/plain',
                                        null,
                                        null,
                                        'text'::varchar)

        } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/packages/classified-ads/tcl/classified-ads-procs-postgresql.xql}
dbqd.contrib.packages.classified-ads.tcl.classified-ads-procs.classified-ads::create_ca_item.insert_content_revision {dbqd.contrib.packages.classified-ads.tcl.classified-ads-procs.classified-ads::create_ca_item.insert_content_revision {

              select content_revision__new (:title,
                                            :description,
                                            now(),
                                            null,
                                            null,
                                            :data,
                                            :item_id,
                                            null,
                                            now(),
                                            :creation_user,
                                            :creation_ip)

        } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/packages/classified-ads/tcl/classified-ads-procs-postgresql.xql}
dbqd.contrib.packages.classified-ads.tcl.classified-ads-procs.classified-ads::create_ca_item.insert_data {dbqd.contrib.packages.classified-ads.tcl.classified-ads-procs.classified-ads::create_ca_item.insert_data {

              $plsql_query

        } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/packages/classified-ads/tcl/classified-ads-procs-postgresql.xql}
dbqd.contrib.packages.classified-ads.tcl.classified-ads-procs.classified-ads::create_ca_item.assign_item_to_category {dbqd.contrib.packages.classified-ads.tcl.classified-ads-procs.classified-ads::create_ca_item.assign_item_to_category {

              select content_keyword__item_assign (:cr_item_id,
                                                   :category_id,
                                                   null,
                                                   null,
                                                   null)
        } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/packages/classified-ads/tcl/classified-ads-procs-postgresql.xql}
dbqd.contrib.packages.classified-ads.tcl.classified-ads-procs.classified-ads::edit_ca_item.insert_content_revision {dbqd.contrib.packages.classified-ads.tcl.classified-ads-procs.classified-ads::edit_ca_item.insert_content_revision {

              select content_revision__new (:title,
                                            :description,
                                            now(),
                                            null,
                                            null,
                                            :data,
                                            :item_id,
                                            null,
                                            now(),
                                            :creation_user,
                                            :creation_ip)

        } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/packages/classified-ads/tcl/classified-ads-procs-postgresql.xql}
dbqd.contrib.packages.classified-ads.tcl.classified-ads-procs.classified-ads::edit_ca_item.update_content_revision {dbqd.contrib.packages.classified-ads.tcl.classified-ads-procs.classified-ads::edit_ca_item.update_content_revision {

            update cr_revisions
            set title = :title,
                description = :description,
                content = :data
            where revision_id = :object_id

        } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/packages/classified-ads/tcl/classified-ads-procs-postgresql.xql}
dbqd.contrib.packages.classified-ads.tcl.classified-ads-procs.classified-ads::edit_ca_item.update_data {dbqd.contrib.packages.classified-ads.tcl.classified-ads-procs.classified-ads::edit_ca_item.update_data {

              $plsql_query

        } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/packages/classified-ads/tcl/classified-ads-procs-postgresql.xql}
dbqd.contrib.packages.classified-ads.tcl.classified-ads-procs.classified-ads::is_subclass.test_subclass {dbqd.contrib.packages.classified-ads.tcl.classified-ads-procs.classified-ads::is_subclass.test_subclass {

            select content_item__is_subclass (:content_type,
                                              :parent_type)

        } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/packages/classified-ads/tcl/classified-ads-procs-postgresql.xql}
dbqd.contrib.packages.classified-ads.tcl.classified-ads-procs.classified-ads::insert_generic_value.insert_value {dbqd.contrib.packages.classified-ads.tcl.classified-ads-procs.classified-ads::insert_generic_value.insert_value {

            select ca_attributes__add_generic_value (:object_id,
                                                     :attribute_id,
                                                     :attr_value)

        } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/packages/classified-ads/tcl/classified-ads-procs-postgresql.xql}
dbqd.contrib.packages.classified-ads.tcl.classified-ads-procs.classified-ads::update_generic_value.update_value {dbqd.contrib.packages.classified-ads.tcl.classified-ads-procs.classified-ads::update_generic_value.update_value {

            select ca_attributes__edit_generic_value (:object_id,
                                                      :attribute_id,
                                                      :attr_value)

        } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/packages/classified-ads/tcl/classified-ads-procs-postgresql.xql}
dbqd.contrib.packages.classified-ads.tcl.classified-ads-procs.classified-ads::get_latest_revision.get_revision {dbqd.contrib.packages.classified-ads.tcl.classified-ads-procs.classified-ads::get_latest_revision.get_revision {

            select content_item__get_latest_revision (:item_id)

        } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/packages/classified-ads/tcl/classified-ads-procs-postgresql.xql}
dbqd.contrib.packages.classified-ads.tcl.classified-ads-procs.classified-ads::get_content.select_content {dbqd.contrib.packages.classified-ads.tcl.classified-ads-procs.classified-ads::get_content.select_content {

            select content_revision__get_content (:revision_id)

        } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/packages/classified-ads/tcl/classified-ads-procs-postgresql.xql}
dbqd.contrib.packages.classified-ads.tcl.classified-ads-procs.classified-ads::context_bar.context {dbqd.contrib.packages.classified-ads.tcl.classified-ads-procs.classified-ads::context_bar.context {
      
            select site_node__url(n2.node_id) as url,
                   n2.object_id,
                   acs_object__name(n2.object_id) as object_name,
                   tree_level(n2.tree_sortkey) as level
            from (select tree_ancestor_keys(site_node_get_tree_sortkey(:node_id)) as tree_sortkey) parents,
                 site_nodes n2
            where n2.tree_sortkey = parents.tree_sortkey
                  and tree_level(n2.tree_sortkey) > 1
            order by level asc
  
        } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/packages/classified-ads/tcl/classified-ads-procs-postgresql.xql}
dbqd.contrib.packages.classified-ads.tcl.classified-ads-procs.classified-ads::install_sitewide_attributes.create_attribute {dbqd.contrib.packages.classified-ads.tcl.classified-ads-procs.classified-ads::install_sitewide_attributes.create_attribute {

    		SELECT ca_attributes__create_attribute (
		        'ca_ad',                      -- content_type
		         :attribute_name,             -- attribute_name
		         :datatype,                   -- datatype
		         :pretty_name,                -- pretty_name
		         :pretty_plural,              -- pretty_plural
		         null,                        -- sort_order
		         :default_value,              -- default_value
			 'type_specific',             -- storage
			 'cr_ca_ads',                 -- table_name
			 :column_spec,                -- column_spec
			 :main_keyword_id             -- keyword_id
		);

        } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/packages/classified-ads/tcl/classified-ads-procs-postgresql.xql}
dbqd.contrib.packages.classified-ads.tcl.classified-ads-procs.classified-ads::install_sitewide_attributes.register_widget {dbqd.contrib.packages.classified-ads.tcl.classified-ads-procs.classified-ads::install_sitewide_attributes.register_widget {

		SELECT ca_attributes__register_widget (
			:attribute_id,                  -- attribute_id
			:widget,                        -- widget
			:pretty_name,                   -- label
			:html_options,                  -- html_options
			:extra_options,                 -- extra_options
                        :select_options,                -- select_options
                        :validate,                      -- validate
			:optional_p,                    -- optional_p
			:enabled_p                      -- enabled_p
		);                                                                                                                                        

        } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/packages/classified-ads/tcl/classified-ads-procs-postgresql.xql}
dbqd.contrib.packages.classified-ads.tcl.classified-ads-procs.classified-ads::get_attributes.select_attributes {dbqd.contrib.packages.classified-ads.tcl.classified-ads-procs.classified-ads::get_attributes.select_attributes {

	    SELECT 
	           aa.attribute_id,
		   aa.attribute_name, 
		   aa.pretty_name,
		   aa.pretty_plural,
	           aa.default_value,
                   aa.storage,
                   aa.datatype,
		   aa.sort_order,
                   coalesce(aa.table_name, at.table_name) as table_name,
	           coalesce(aa.column_name, aa.attribute_name) as column_name,
		   cawv.widget,  cawv.label,  cawv.html_options, 
		   cawv.extra_options, cawv.select_options,
		   cawv.validate, cawv.optional_p, cawv.enabled_p,
		   keywords.heading AS category_heading
	      FROM 
	           acs_attributes aa,
		   ca_attributes ca,
		   ca_attribute_widget_values cawv,
                   acs_object_types at,
		   (
		            select 
                		   subtree.keyword_id,
				   subtree.heading
		              from cr_keywords parent, cr_keywords subtree
		             where parent.keyword_id = :keyword_id 
			       and parent.tree_sortkey between subtree.tree_sortkey and tree_right(subtree.tree_sortkey)
		   ) keywords 
	    WHERE
	          aa.attribute_id = ca.attribute_id
	      AND
	          ca.attribute_id = cawv.attribute_id
	      AND
	          ca.keyword_id = keywords.keyword_id
	      AND
                  aa.object_type = :content_type
	      AND
                  at.object_type = :content_type
              $storage_stub
         ORDER BY
	          aa.sort_order asc

        } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/packages/classified-ads/tcl/classified-ads-procs-postgresql.xql}
dbqd.contrib.packages.classified-ads.tcl.classified-ads-procs.classified-ads::get_main_keyword_id.get_main_keyword {dbqd.contrib.packages.classified-ads.tcl.classified-ads-procs.classified-ads::get_main_keyword_id.get_main_keyword {
    
            select keyword_id
            from cr_keywords
            where heading = :heading and
                  description = :description

        } {} {} {} c:/web/openacs-4/contrib/packages/classified-ads/tcl/classified-ads-procs.xql}
dbqd.contrib.packages.classified-ads.tcl.classified-ads-procs.classified-ads::root_folder_exists_p.get_root_folder {dbqd.contrib.packages.classified-ads.tcl.classified-ads-procs.classified-ads::root_folder_exists_p.get_root_folder {
    
            select folder_id
            from cr_folders f, cr_items i
            where i.name = :name and
                  f.label = :label and
                  f.description = :description

        } {} {} {} c:/web/openacs-4/contrib/packages/classified-ads/tcl/classified-ads-procs.xql}
dbqd.contrib.packages.classified-ads.tcl.classified-ads-procs.classified-ads::get_mounted_packages.select_packages {dbqd.contrib.packages.classified-ads.tcl.classified-ads-procs.classified-ads::get_mounted_packages.select_packages {
    
            select a.package_id
            from apm_packages a,
                 site_nodes s
            where package_key = :package_key and
                  a.package_id = s.object_id

        } {} {} {} c:/web/openacs-4/contrib/packages/classified-ads/tcl/classified-ads-procs.xql}
dbqd.contrib.packages.classified-ads.tcl.classified-ads-procs.classified-ads::get_table_name.select_table_name {dbqd.contrib.packages.classified-ads.tcl.classified-ads-procs.classified-ads::get_table_name.select_table_name {

              select table_name
              from acs_object_types
              where object_type = :content_type

        } {} {} {} c:/web/openacs-4/contrib/packages/classified-ads/tcl/classified-ads-procs.xql}
dbqd.contrib.packages.classified-ads.tcl.classified-ads-procs.classified-ads::get_attribute_names.select_names {dbqd.contrib.packages.classified-ads.tcl.classified-ads-procs.classified-ads::get_attribute_names.select_names {

            select coalesce(aa.column_name, aa.attribute_name) as column_name,
                   aa.datatype
	        from acs_attributes aa,
                 ca_attributes ca,
                 acs_object_types at
            where aa.attribute_id = ca.attribute_id and
                  (ca.package_id = :package_id or
                   ca.sitewide_p = 't') and
                  aa.object_type = :content_type and
                  at.object_type = :content_type
            $storage_stub

        } {} {} {} c:/web/openacs-4/contrib/packages/classified-ads/tcl/classified-ads-procs.xql}
dbqd.contrib.packages.classified-ads.tcl.classified-ads-procs.classified-ads::get_attribute_values.select_values {dbqd.contrib.packages.classified-ads.tcl.classified-ads-procs.classified-ads::get_attribute_values.select_values {

            $query_string

        } {} {} {} c:/web/openacs-4/contrib/packages/classified-ads/tcl/classified-ads-procs.xql}
dbqd.contrib.packages.classified-ads.tcl.classified-ads-procs.classified-ads::get_supertype.select_supertype {dbqd.contrib.packages.classified-ads.tcl.classified-ads-procs.classified-ads::get_supertype.select_supertype {

            select supertype
            from acs_object_types
            where object_type = :content_type

        } {} {} {} c:/web/openacs-4/contrib/packages/classified-ads/tcl/classified-ads-procs.xql}
dbqd.contrib.packages.classified-ads.tcl.classified-ads-procs.classified-ads::install_sitewide_attributes.count_attributes {dbqd.contrib.packages.classified-ads.tcl.classified-ads-procs.classified-ads::install_sitewide_attributes.count_attributes {

            SELECT COUNT(*)
	      FROM acs_attributes
	     WHERE object_type = 'ca_ad'
	       AND attribute_name = :attrib 

        } {} {} {} c:/web/openacs-4/contrib/packages/classified-ads/tcl/classified-ads-procs.xql}
dbqd.contrib.packages.classified-ads.tcl.containers-procs.classified-ads::containers::delete.delete_container {dbqd.contrib.packages.classified-ads.tcl.containers-procs.classified-ads::containers::delete.delete_container {

              select ca_container__delete (:container_id)

        } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/packages/classified-ads/tcl/containers-procs-postgresql.xql}
dbqd.contrib.packages.classified-ads.tcl.containers-procs.classified-ads::containers::get_title.get_title {dbqd.contrib.packages.classified-ads.tcl.containers-procs.classified-ads::containers::get_title.get_title {

              select ca_container__get_title (:container_id)

        } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/packages/classified-ads/tcl/containers-procs-postgresql.xql}
dbqd.contrib.packages.classified-ads.tcl.containers-procs.classified-ads::containers::set_title.set_title {dbqd.contrib.packages.classified-ads.tcl.containers-procs.classified-ads::containers::set_title.set_title {

              select ca_container__set_title (:container_id,
                                              :title)

        } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/packages/classified-ads/tcl/containers-procs-postgresql.xql}
dbqd.contrib.packages.classified-ads.tcl.containers-procs.classified-ads::containers::get_description.get_description {dbqd.contrib.packages.classified-ads.tcl.containers-procs.classified-ads::containers::get_description.get_description {

              select ca_container__get_description (:container_id)

        } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/packages/classified-ads/tcl/containers-procs-postgresql.xql}
dbqd.contrib.packages.classified-ads.tcl.containers-procs.classified-ads::containers::set_description.set_description {dbqd.contrib.packages.classified-ads.tcl.containers-procs.classified-ads::containers::set_description.set_description {

              select ca_container__set_description (:container_id,
                                                    :description)

        } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/packages/classified-ads/tcl/containers-procs-postgresql.xql}
dbqd.contrib.packages.classified-ads.tcl.widget-procs.classified-ads::widgets::get_widget_values.select_variables {dbqd.contrib.packages.classified-ads.tcl.widget-procs.classified-ads::widgets::get_widget_values.select_variables {

            select aa.attribute_name
            from acs_attributes aa,
                 ca_attribute_widget_values cawv,
                 ca_attributes ca
            where aa.attribute_id = cawv.attribute_id and
                  ca.attribute_id = aa.attribute_id and
                  aa.object_type = :content_type and
                  cawv.enabled_p = 't' and
                  (ca.sitewide_p = 't' or
                   ca.package_id = :package_id)
            order by aa.sort_order asc

        } {} {} {} c:/web/openacs-4/contrib/packages/classified-ads/tcl/widget-procs.xql}
dbqd.contrib.packages.classified-ads.www.admin.ads.select_ads {dbqd.contrib.packages.classified-ads.www.admin.ads.select_ads {

            select ci.item_id as ad_id,
                   cr.title
            from cr_items ci,
                 cr_revisions cr
            where ci.latest_revision = cr.revision_id and
                  content_type = 'ca_ad'
            $where_clause

        } {} {} {} c:/web/openacs-4/contrib/packages/classified-ads/www/admin/ads.xql}
dbqd.contrib.packages.classified-ads.www.admin.categories.select_categories {dbqd.contrib.packages.classified-ads.www.admin.categories.select_categories {

            select *,
                   (select count(*)
                    from cr_keywords
                    where parent_id = ck.keyword_id) as children_count
            from cr_keywords ck
            where parent_id = :keyword_id
            order by heading

        } {} {} {} c:/web/openacs-4/contrib/packages/classified-ads/www/admin/categories.xql}
dbqd.contrib.packages.classified-ads.www.admin.field-addedit.attribute_new {dbqd.contrib.packages.classified-ads.www.admin.field-addedit.attribute_new {

	    select ca_attributes__create_attribute ( 
	    	:content_type::varchar, 
		:attribute_name::varchar, 
		:datatype::varchar, 
		:pretty_name::varchar, 
		:pretty_plural::varchar, 
		:sort_order::int4, 
		:default_value::varchar, 
		'type_specific'::varchar, 
		'cr_ca_ads'::varchar, 
		:column_spec::varchar, 
		:keyword_id::int4
	    ) as attribute_id

	} {} {} {} c:/web/openacs-4/contrib/packages/classified-ads/www/admin/field-addedit-postgresql.xql}
dbqd.contrib.packages.classified-ads.www.admin.field-addedit.widget_new {dbqd.contrib.packages.classified-ads.www.admin.field-addedit.widget_new {

	    select ca_attributes__register_widget (
	    	:attribute_id, 
		:widget, 
		:label, 
		:html_options, 
		:extra_options,
		:select_options, 
		:validate, 
		:optional_p,
		:enabled_p
	    )
	    
	} {} {} {} c:/web/openacs-4/contrib/packages/classified-ads/www/admin/field-addedit-postgresql.xql}
dbqd.contrib.packages.classified-ads.www.admin.field-addedit.get_column_spec {dbqd.contrib.packages.classified-ads.www.admin.field-addedit.get_column_spec {

  SELECT pg_catalog.format_type(a.atttypid, a.atttypmod)
    FROM pg_catalog.pg_attribute a,
         (
		  SELECT c.oid
  		    FROM pg_catalog.pg_class c
         		 LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
	 	   WHERE pg_catalog.pg_table_is_visible(c.oid)
	       	     AND c.relname ~ '^cr_ca_ads$'
	 ) b
   WHERE a.attrelid = b.oid 
     AND a.attname = :attribute_name 
     AND NOT a.attisdropped

	} {} {} {} c:/web/openacs-4/contrib/packages/classified-ads/www/admin/field-addedit-postgresql.xql}
dbqd.contrib.packages.classified-ads.www.admin.field-addedit.field {dbqd.contrib.packages.classified-ads.www.admin.field-addedit.field {
	    SELECT 
                   aa.attribute_id, 
                   coalesce(aa.column_name, aa.attribute_name) AS column_name, 
                   aa.default_value, 
                   coalesce(aa.table_name,at.table_name) AS table_name, 
                   aa.storage, aa.datatype, aa.sort_order, aa.attribute_name, 
                   aa.pretty_name, aa.pretty_plural
	      FROM 
                   acs_attributes aa,
	           ca_attributes ca, acs_object_types at
	     WHERE 
                   aa.attribute_id = :attribute_id
	       AND
                   aa.attribute_id = ca.attribute_id
	       AND 
                   aa.object_type = :content_type
	       AND 
                   at.object_type = :content_type
        } {} {} {} c:/web/openacs-4/contrib/packages/classified-ads/www/admin/field-addedit.xql}
dbqd.contrib.packages.classified-ads.www.admin.field-addedit.widget_vars {dbqd.contrib.packages.classified-ads.www.admin.field-addedit.widget_vars {

	    select 
	           widget, label, html_options, select_options, 
		   validate, optional_p, enabled_p
	      from 
	           ca_attribute_widget_values
	     where 
	           attribute_id=:attribute_id
		   
	} {} {} {} c:/web/openacs-4/contrib/packages/classified-ads/www/admin/field-addedit.xql}
dbqd.contrib.packages.classified-ads.www.admin.field-addedit.datatypes {dbqd.contrib.packages.classified-ads.www.admin.field-addedit.datatypes {
	
	    select distinct datatype, datatype 
	      from acs_attributes 
	  order by datatype

	} {} {} {} c:/web/openacs-4/contrib/packages/classified-ads/www/admin/field-addedit.xql}
dbqd.contrib.packages.classified-ads.www.admin.field-addedit.max_sort_order {dbqd.contrib.packages.classified-ads.www.admin.field-addedit.max_sort_order {
	    select max(sort_order) as sort_order from acs_attributes
	} {} {} {} c:/web/openacs-4/contrib/packages/classified-ads/www/admin/field-addedit.xql}
dbqd.contrib.packages.classified-ads.www.admin.field-addedit.widgets {dbqd.contrib.packages.classified-ads.www.admin.field-addedit.widgets {
	
	    select widget, widget 
	      from ca_attribute_widgets 
	 order by widget

	} {} {} {} c:/web/openacs-4/contrib/packages/classified-ads/www/admin/field-addedit.xql}
dbqd.contrib.packages.classified-ads.www.admin.field-addedit.attribute_update {dbqd.contrib.packages.classified-ads.www.admin.field-addedit.attribute_update {

	    update acs_attributes 
	       set pretty_name = :pretty_name, 
	           pretty_plural = :pretty_plural, 
		   sort_order = :sort_order, 
		   default_value = :default_value 
             where 
	           attribute_id = :attribute_id

	} {} {} {} c:/web/openacs-4/contrib/packages/classified-ads/www/admin/field-addedit.xql}
dbqd.contrib.packages.classified-ads.www.admin.field-addedit.widget_update {dbqd.contrib.packages.classified-ads.www.admin.field-addedit.widget_update {
	`
	    update ca_attribute_widget_values 
	       set label = :label, 
	           html_options = :html_options, 
		   select_options = :select_options, 
		   keyword_id = :keyword_id,
		   extra_options = :extra_options,
		   validate = :validate, 
		   optional_p = :optional_p, 
		   enabled_p = :enabled_p 
	     where 
	           attribute_id = :attribute_id
		   
	} {} {} {} c:/web/openacs-4/contrib/packages/classified-ads/www/admin/field-addedit.xql}
dbqd.contrib.packages.classified-ads.www.admin.field-delete.one_field {dbqd.contrib.packages.classified-ads.www.admin.field-delete.one_field {
	    SELECT 
                   aa.attribute_id, 
                   coalesce(aa.column_name, aa.attribute_name) AS column_name, 
                   aa.default_value, 
                   coalesce(aa.table_name,at.table_name) AS table_name, 
                   aa.storage, aa.datatype, aa.sort_order, aa.attribute_name, 
                   aa.pretty_name, aa.pretty_plural
	      FROM 
                   acs_attributes aa,
	           ca_attributes ca, acs_object_types at
	     WHERE 
                   aa.attribute_id = :attribute_id
	       AND
                   aa.attribute_id = ca.attribute_id
	       AND 
                   aa.object_type = :content_type
	       AND 
                   at.object_type = :content_type
	   ORDER BY
	           sort_order
        } {} {} {} c:/web/openacs-4/contrib/packages/classified-ads/www/admin/field-delete.xql}
dbqd.contrib.packages.classified-ads.www.admin.field-delete.delete_attribute {dbqd.contrib.packages.classified-ads.www.admin.field-delete.delete_attribute {
	    select ca_attributes__drop_attribute(:content_type, :attribute_name);
        } {} {} {} c:/web/openacs-4/contrib/packages/classified-ads/www/admin/field-delete.xql}
dbqd.contrib.packages.classified-ads.www.categories.select_categories {dbqd.contrib.packages.classified-ads.www.categories.select_categories {

            select *,
                   (select count(*)
                    from cr_keywords
                    where parent_id = ck.keyword_id) as children_count
            from cr_keywords ck
            where parent_id = :keyword_id
            order by heading

        } {} {} {} c:/web/openacs-4/contrib/packages/classified-ads/www/categories.xql}
dbqd.contrib.packages.classified-ads.www.one-category.select_categories {dbqd.contrib.packages.classified-ads.www.one-category.select_categories {

            select *
            from cr_keywords ck
            where parent_id = :keyword_id
            order by heading

        } {} {} {} c:/web/openacs-4/contrib/packages/classified-ads/www/one-category.xql}
dbqd.contrib.packages.events.tcl.activities-procs-oracle.events::activity::get.select_activity_info {dbqd.contrib.packages.events.tcl.activities-procs-oracle.events::activity::get.select_activity_info {
	select a.name, a.description, ae.available_p, ae.detail_url,
	       ae.default_contact_user_id, u.email as default_contact_email,
	       u.first_names || ' ' || u.last_name as default_contact_name
	  from acs_activities a, events_activities ae, cc_users u
	 where a.activity_id = :activity_id
	       and a.activity_id = ae.activity_id
	       and ae.default_contact_user_id = u.user_id(+)
        } {} {} {} c:/web/openacs-4/contrib/packages/events/tcl/activities-procs-oracle.xql}
dbqd.contrib.packages.events.tcl.activities-procs-oracle.events::activity::delete.delete_activity {dbqd.contrib.packages.events.tcl.activities-procs-oracle.events::activity::delete.delete_activity {
	declare begin
		events_activity.del(:activity_id);
	end;
        } {} {} {} c:/web/openacs-4/contrib/packages/events/tcl/activities-procs-oracle.xql}
dbqd.contrib.packages.events.tcl.activities-procs.events::activity::get.select_activity_info {dbqd.contrib.packages.events.tcl.activities-procs.events::activity::get.select_activity_info {
        select a.name, a.description, ae.available_p, ae.detail_url,
               ae.default_contact_user_id, u.email as default_contact_email,
               u.first_names || ' ' || u.last_name as default_contact_name
          from acs_activities a, events_activities ae left join cc_users u on (ae.default_contact_user_id = u.user_id)
         where a.activity_id = :activity_id
               and a.activity_id = ae.activity_id
        } {} {} {} c:/web/openacs-4/contrib/packages/events/tcl/activities-procs-postgresql.xql}
dbqd.contrib.packages.events.tcl.activities-procs.events::activity::delete.delete_activity {dbqd.contrib.packages.events.tcl.activities-procs.events::activity::delete.delete_activity {
	select
		events_activity__del(:activity_id);
	} {} {} {} c:/web/openacs-4/contrib/packages/events/tcl/activities-procs-postgresql.xql}
dbqd.contrib.packages.events.tcl.activities-procs.events::activity::edit.update_acs_activities {dbqd.contrib.packages.events.tcl.activities-procs.events::activity::edit.update_acs_activities {
	update acs_activities
           set name= :name,
               description= :description,
               html_p= :html_p
         where activity_id = :activity_id
        } {} {} {} c:/web/openacs-4/contrib/packages/events/tcl/activities-procs.xql}
dbqd.contrib.packages.events.tcl.activities-procs.events::activity::edit.update_events_activities {dbqd.contrib.packages.events.tcl.activities-procs.events::activity::edit.update_events_activities {
	update events_activities
           set available_p = :available_p,
	       detail_url = :detail_url,
	       default_contact_user_id = :default_contact_user_id
         where activity_id = :activity_id
        } {} {} {} c:/web/openacs-4/contrib/packages/events/tcl/activities-procs.xql}
dbqd.contrib.packages.events.tcl.activities-procs.events::activity::get_creator.select_creator_info {dbqd.contrib.packages.events.tcl.activities-procs.events::activity::get_creator.select_creator_info {
	 select u.first_names || ' ' || u.last_name as name,
		u.email as email
	   from acs_objects ao, cc_users u
	  where ao.object_id = :activity_id
	    and ao.creation_user = u.user_id
	} {} {} {} c:/web/openacs-4/contrib/packages/events/tcl/activities-procs.xql}
dbqd.contrib.packages.events.tcl.activities-procs.events::activity::exists_p.exists_p_select {dbqd.contrib.packages.events.tcl.activities-procs.events::activity::exists_p.exists_p_select {
	select 1 
          from events_activities 
         where activity_id = :activity_id
           and package_id = :package_id
	} {} {} {} c:/web/openacs-4/contrib/packages/events/tcl/activities-procs.xql}
dbqd.contrib.packages.events.tcl.activities-procs.events::activity::get_stats.select_activity_stats {dbqd.contrib.packages.events.tcl.activities-procs.events::activity::get_stats.select_activity_stats {
     select a.count as approved,
            p.count as pending,
            w.count as waiting,
            c.count as canceled
       from (select count(*) as count 
              from events_registrations er, acs_events ae 
              where ae.activity_id = :activity_id and ae.event_id = er.event_id and er.reg_state = 'approved') a,  
            (select count(*) as count 
               from events_registrations er, acs_events ae 
              where ae.activity_id = :activity_id and ae.event_id = er.event_id and er.reg_state = 'pending') p,
            (select count(*) as count 
               from events_registrations er, acs_events ae 
              where ae.activity_id = :activity_id and ae.event_id = er.event_id and er.reg_state = 'waiting') w,
            (select count(*) as count 
               from events_registrations er, acs_events ae 
              where ae.activity_id = :activity_id and ae.event_id = er.event_id and er.reg_state = 'canceled') c
    	} {} {} {} c:/web/openacs-4/contrib/packages/events/tcl/activities-procs.xql}
dbqd.contrib.packages.events.tcl.events-procs-oracle.events::event::new.new_timespan {dbqd.contrib.packages.events.tcl.events-procs-oracle.events::event::new.new_timespan { 
	declare	begin 
	:1 := timespan.new (
		start_date => to_date(:sql_start_date,:date_format),
		end_date   => to_date(:sql_end_date,:date_format)
	);
	end;
        } {} {} {} c:/web/openacs-4/contrib/packages/events/tcl/events-procs-oracle.xql}
dbqd.contrib.packages.events.tcl.events-procs-oracle.events::event::new.new_acs_event {dbqd.contrib.packages.events.tcl.events-procs-oracle.events::event::new.new_acs_event { 
	declare	begin 
	:1 := acs_event.new (
		activity_id => :activity_id,
		timespan_id => :timespan_id,
		creation_user => :creation_user,
		creation_ip => :creation_ip,
		context_id => :context_id
	);
	end;
        } {} {} {} c:/web/openacs-4/contrib/packages/events/tcl/events-procs-oracle.xql}
dbqd.contrib.packages.events.tcl.events-procs-oracle.events::event::new.new_event {dbqd.contrib.packages.events.tcl.events-procs-oracle.events::event::new.new_event { 
	declare	begin 
	events_event.new (
		event_id => :event_id,
		venue_id => :venue_id,
		display_after => :display_after,
		max_people => :max_people,
		reg_deadline => to_date(:sql_reg_deadline,:date_format),
		available_p => :available_p,
		deleted_p => :deleted_p,
		reg_cancellable_p => :reg_cancellable_p,
		reg_needs_approval_p => :reg_needs_approval_p,
		contact_user_id => :contact_user_id,
		refreshments_note => :refreshments_note,
		av_note => :av_note,
		additional_note => :additional_note,
		alternative_reg => :alternative_reg,
		activity_id => :activity_id
	);
	end;
        } {} {} {} c:/web/openacs-4/contrib/packages/events/tcl/events-procs-oracle.xql}
dbqd.contrib.packages.events.tcl.events-procs-oracle.events::event::new.new_event_ {dbqd.contrib.packages.events.tcl.events-procs-oracle.events::event::new.new_event_ { 
	declare	begin 
	:1 := events_event.new (
		activity_id => :activity_id,
		venue_id => :venue_id,
		display_after => :display_after,
		max_people => :max_people,
		reg_deadline => to_date(:sql_reg_deadline,:date_format),
		available_p => :available_p,
		deleted_p => :deleted_p,
		reg_cancellable_p => :reg_cancellable_p,
		reg_needs_approval_p => :reg_needs_approval_p,
		refreshments_note => :refreshments_note,
		av_note => :av_note,
		additional_note => :additional_note,
		alternative_reg => :alternative_reg,
		timespan_id => :timespan_id,
		creation_user => :creation_user,
		creation_ip => :creation_ip
	);
	end;
        } {} {} {} c:/web/openacs-4/contrib/packages/events/tcl/events-procs-oracle.xql}
dbqd.contrib.packages.events.tcl.events-procs-oracle.events::event::get.select_event_info {dbqd.contrib.packages.events.tcl.events-procs-oracle.events::event::get.select_event_info {
	select a.activity_id, aa.name, aa.description, e.display_after, v.city, v.usps_abbrev,
	       v.venue_id, 
	       CASE WHEN to_char(t.start_date, 'YYYY-MM-DD') = to_char(t.end_date, 'YYYY-MM-DD') 
	            THEN to_char(t.start_date, :date_format) || ' from ' || to_char(t.start_date, :time_format) || ' to ' || to_char(t.end_date, :time_format)
	       ELSE to_char(t.start_date, :date_format) || ' ' || to_char(t.start_date, :time_format) || ' - ' || to_char(t.end_date, :date_format) || ' ' || to_char(t.end_date, :time_format)
	       END as timespan,
	       to_char(e.reg_deadline, :date_format) || ' ' || to_char(e.reg_deadline, :time_format) as reg_deadline,
	       e.available_p, e.max_people, e.refreshments_note, e.av_note,
	       e.additional_note, ae.timespan_id, a.detail_url,
	       decode(e.reg_cancellable_p,
	          't', 'Yes',
	          'f', 'No',
	          'No') as pretty_reg_cancellable_p,
	       decode (e.reg_needs_approval_p,
	          't', 'Yes',
	          'f', 'No',
	          'No') as pretty_reg_needs_approval_p,
	       e.reg_cancellable_p,
	       e.reg_needs_approval_p,
	       e.contact_user_id,
	       nvl (u.email, '') as contact_email,
               (select count(*)
                from   events_events ee2,
                       acs_events ae2, 
                       timespans ts2,
                       time_intervals ti2
                where  ee2.event_id != e.event_id 
                and    ee2.available_p = 't'
                and    ae2.event_id = ee2.event_id
                and    ae2.activity_id = a.activity_id 
                and    ts2.timespan_id = ae2.timespan_id
                and    ti2.interval_id = ts2.interval_id
                and    ti2.start_date > sysdate
               ) as num_other_times
	  from acs_events ae, 
	       acs_activities aa,
	       events_events e, 
	       events_activities a, 
	       events_venues v, 
	       timespans s, 
	       time_intervals t,
	       cc_users u
	 where e.event_id = :event_id
	   and ae.event_id = :event_id
	   and e.contact_user_id = u.user_id(+)
	   and ae.activity_id = a.activity_id
	   and a.activity_id = aa.activity_id
	   and v.venue_id = e.venue_id
	   and ae.timespan_id = s.timespan_id
	   and s.interval_id = t.interval_id
	} {} {} {} c:/web/openacs-4/contrib/packages/events/tcl/events-procs-oracle.xql}
dbqd.contrib.packages.events.tcl.events-procs-oracle.events::event::edit.update_event {dbqd.contrib.packages.events.tcl.events-procs-oracle.events::event::edit.update_event {
	update events_events
	   set venue_id = :venue_id,
	       max_people = :max_people,
	       reg_cancellable_p = :reg_cancellable_p,
	       reg_needs_approval_p = :reg_needs_approval_p,
	       contact_user_id = :contact_user_id,
	       display_after = :display_after,
	       reg_deadline = to_date(:sql_reg_deadline,:date_format)
	 where event_id = :event_id
	} {} {} {} c:/web/openacs-4/contrib/packages/events/tcl/events-procs-oracle.xql}
dbqd.contrib.packages.events.tcl.events-procs-oracle.events::event::edit.update_time_interval {dbqd.contrib.packages.events.tcl.events-procs-oracle.events::event::edit.update_time_interval {
	update time_intervals
	   set start_date = to_date(:sql_start_date,:date_format),
	       end_date = to_date(:sql_end_date,:date_format)
	 where interval_id = :interval_id 
	} {} {} {} c:/web/openacs-4/contrib/packages/events/tcl/events-procs-oracle.xql}
dbqd.contrib.packages.events.tcl.events-procs-oracle.events::events::delete.delete_event {dbqd.contrib.packages.events.tcl.events-procs-oracle.events::events::delete.delete_event {
	declare begin
		events_event.del(:event_id);
	end;
        } {} {} {} c:/web/openacs-4/contrib/packages/events/tcl/events-procs-oracle.xql}
dbqd.contrib.packages.events.tcl.events-procs-oracle.events::event::toggle_available_p.toggle {dbqd.contrib.packages.events.tcl.events-procs-oracle.events::event::toggle_available_p.toggle {
	update events_events 
           set available_p = util.logical_negation(available_p) 
         where event_id = :event_id
	} {} {} {} c:/web/openacs-4/contrib/packages/events/tcl/events-procs-oracle.xql}
dbqd.contrib.packages.events.tcl.events-procs-oracle.events::event::verify_bulk_mail_reminder.convert_to_timestamp_the_db_likes {dbqd.contrib.packages.events.tcl.events-procs-oracle.events::event::verify_bulk_mail_reminder.convert_to_timestamp_the_db_likes {
        select to_date(:bulk_mail_send_date, 'DDD YYYY HH24:MI:SS') as bulk_mail_send_date from dual
        } {} {} {} c:/web/openacs-4/contrib/packages/events/tcl/events-procs-oracle.xql}
dbqd.contrib.packages.events.tcl.events-procs-oracle.events::event::verify_bulk_mail_reminder.update_bulk_mail {dbqd.contrib.packages.events.tcl.events-procs-oracle.events::event::verify_bulk_mail_reminder.update_bulk_mail {
	        update bulk_mail_messages 
	           set send_date = to_date(:bulk_mail_send_date, :bulk_mail_date_format),
                       subject = :subject,
	               message = :message,
	               from_addr = :from_addr
	         where bulk_mail_id = :bulk_mail_id
		} {} {} {} c:/web/openacs-4/contrib/packages/events/tcl/events-procs-oracle.xql}
dbqd.contrib.packages.events.tcl.events-procs-oracle.events::event::verify_bulk_mail_reminder.check_emails {dbqd.contrib.packages.events.tcl.events-procs-oracle.events::event::verify_bulk_mail_reminder.check_emails {
	$query and rownum=1
 	} {} {} {} c:/web/openacs-4/contrib/packages/events/tcl/events-procs-oracle.xql}
dbqd.contrib.packages.events.tcl.events-procs-oracle.events::event::get_stats.select_event_stats {dbqd.contrib.packages.events.tcl.events-procs-oracle.events::event::get_stats.select_event_stats {
         select t.count as total_interested,
		ee.max_people,
                a.count as approved,
                p.count as pending,
                w.count as waiting,
                c.count as canceled, v.venue_id
           from (select count(*) as count from events_registrations where event_id = :event_id and reg_state = 'approved') a,  
                (select count(*) as count from events_registrations where event_id = :event_id and reg_state = 'pending') p,
                (select count(*) as count from events_registrations where event_id = :event_id and reg_state = 'waiting') w,
                (select count(*) as count from events_registrations where event_id = :event_id and reg_state = 'canceled') c,
                (select count(*) as count from events_registrations where event_id = :event_id and reg_state <> 'canceled') t,
                 events_events ee,
		 events_venues v
          where ee.event_id = :event_id and ee.venue_id = v.venue_id
		} {} {} {} c:/web/openacs-4/contrib/packages/events/tcl/events-procs-oracle.xql}
dbqd.contrib.packages.events.tcl.events-procs.events::event::new.new_timespan {dbqd.contrib.packages.events.tcl.events-procs.events::event::new.new_timespan { 
        select timespan__new (
                :sql_start_date::timestamp,
                :sql_end_date::timestamp
        )
        } {} {} {} c:/web/openacs-4/contrib/packages/events/tcl/events-procs-postgresql.xql}
dbqd.contrib.packages.events.tcl.events-procs.events::event::new.new_acs_event {dbqd.contrib.packages.events.tcl.events-procs.events::event::new.new_acs_event { 
	select acs_event__new (
                null,            
                null,            
                null,            
                null,            
                null,            
		:timespan_id,    
                :activity_id,     
		null,            
                'acs_event',     
                now(),           
                :creation_user,  
		:creation_ip,    
                :context_id             
	)
        } {} {} {} c:/web/openacs-4/contrib/packages/events/tcl/events-procs-postgresql.xql}
dbqd.contrib.packages.events.tcl.events-procs.events::event::new.new_event {dbqd.contrib.packages.events.tcl.events-procs.events::event::new.new_event { 
	select events_event__new (
		:event_id,
		:venue_id,
		:display_after,
		:max_people,
		:sql_reg_deadline::timestamp,
		:available_p,
		:deleted_p,
		:reg_cancellable_p,
		:reg_needs_approval_p,
		:contact_user_id,
		:refreshments_note,
		:av_note,
		:additional_note,
		:alternative_reg,
		:activity_id
	)
        } {} {} {} c:/web/openacs-4/contrib/packages/events/tcl/events-procs-postgresql.xql}
dbqd.contrib.packages.events.tcl.events-procs.events::event::get.select_event_info {dbqd.contrib.packages.events.tcl.events-procs.events::event::get.select_event_info {
	select a.activity_id, aa.name, aa.description, e.display_after, v.city, v.usps_abbrev,
	       v.venue_id, 
	               CASE WHEN to_char(t.start_date, 'YYYY-MM-DD') = to_char(t.end_date, 'YYYY-MM-DD') 
	                    THEN to_char(t.start_date, :date_format) || ' from ' || to_char(t.start_date, :time_format) || ' to ' || to_char(t.end_date, :time_format)
	                    ELSE to_char(t.start_date, :date_format) || ' ' || to_char(t.start_date, :time_format) || ' - ' || to_char(t.end_date, :date_format) || ' ' || to_char(t.end_date, :time_format)
	               END as timespan,
	       to_char(e.reg_deadline, :date_format) || ' ' || to_char(e.reg_deadline, :time_format) as reg_deadline,
	       e.available_p, e.max_people,
	       e.refreshments_note, e.av_note,
	       e.additional_note, ae.timespan_id, a.detail_url,
                       CASE WHEN e.reg_cancellable_p THEN 'Yes'
                            ELSE 'No'
                       END as pretty_reg_cancellable_p,
                       CASE WHEN e.reg_needs_approval_p THEN 'Yes'
                            ELSE 'No'
                       END as pretty_reg_needs_approval_p,
	       e.reg_cancellable_p,
	       e.reg_needs_approval_p,
	       e.contact_user_id,
	       coalesce(u.email, '') as contact_email,
               (select count(*)
                from   events_events ee2,
                       acs_events ae2, 
                       timespans ts2,
                       time_intervals ti2
                where  ee2.event_id != e.event_id 
                and    ee2.available_p = 't'
                and    ae2.event_id = ee2.event_id
                and    ae2.activity_id = a.activity_id 
                and    ts2.timespan_id = ae2.timespan_id
                and    ti2.interval_id = ts2.interval_id
                and    ti2.start_date > current_timestamp
               ) as num_other_times
	  from acs_events ae, 
	       acs_activities aa,
	       events_activities a, 
	       events_venues v, 
	       timespans s, 
	       time_intervals t,
	       events_events e left join cc_users u on (e.contact_user_id = u.user_id)
	 where e.event_id = :event_id
	   and ae.event_id = :event_id
	   and ae.activity_id = a.activity_id
	   and a.activity_id = aa.activity_id
	   and v.venue_id = e.venue_id
	   and ae.timespan_id = s.timespan_id
	   and s.interval_id = t.interval_id
	} {} {} {} c:/web/openacs-4/contrib/packages/events/tcl/events-procs-postgresql.xql}
dbqd.contrib.packages.events.tcl.events-procs.events::event::edit.update_event {dbqd.contrib.packages.events.tcl.events-procs.events::event::edit.update_event {
	update events_events
	   set venue_id = :venue_id,
	       max_people = :max_people,
	       reg_cancellable_p = :reg_cancellable_p,
	       reg_needs_approval_p = :reg_needs_approval_p,
	       contact_user_id = :contact_user_id,
	       display_after = :display_after,
	       reg_deadline = :sql_reg_deadline::timestamp
	 where event_id = :event_id
	} {} {} {} c:/web/openacs-4/contrib/packages/events/tcl/events-procs-postgresql.xql}
dbqd.contrib.packages.events.tcl.events-procs.events::event::edit.update_time_interval {dbqd.contrib.packages.events.tcl.events-procs.events::event::edit.update_time_interval {
	update time_intervals
	   set start_date = :sql_start_date::timestamp,
	       end_date = :sql_end_date::timestamp
	 where interval_id = :interval_id 
	} {} {} {} c:/web/openacs-4/contrib/packages/events/tcl/events-procs-postgresql.xql}
dbqd.contrib.packages.events.tcl.events-procs.events::events::delete.delete_event {dbqd.contrib.packages.events.tcl.events-procs.events::events::delete.delete_event {
	select
		events_event__del(:event_id);
        } {} {} {} c:/web/openacs-4/contrib/packages/events/tcl/events-procs-postgresql.xql}
dbqd.contrib.packages.events.tcl.events-procs.events::event::toggle_available_p.toggle {dbqd.contrib.packages.events.tcl.events-procs.events::event::toggle_available_p.toggle {
	update events_events 
           set available_p = util__logical_negation(available_p) 
         where event_id = :event_id
	} {} {} {} c:/web/openacs-4/contrib/packages/events/tcl/events-procs-postgresql.xql}
dbqd.contrib.packages.events.tcl.events-procs.events::event::verify_bulk_mail_reminder.convert_to_timestamp_the_db_likes {dbqd.contrib.packages.events.tcl.events-procs.events::event::verify_bulk_mail_reminder.convert_to_timestamp_the_db_likes {
        select to_timestamp(:bulk_mail_send_date, 'DDD YYYY HH24:MI:SS') as bulk_mail_send_date
        } {} {} {} c:/web/openacs-4/contrib/packages/events/tcl/events-procs-postgresql.xql}
dbqd.contrib.packages.events.tcl.events-procs.events::event::verify_bulk_mail_reminder.update_bulk_mail {dbqd.contrib.packages.events.tcl.events-procs.events::event::verify_bulk_mail_reminder.update_bulk_mail {
        update bulk_mail_messages 
           set send_date = to_timestamp(:bulk_mail_send_date, :bulk_mail_date_format),
               subject = :subject,
               message = :message,
               from_addr = :from_addr
         where bulk_mail_id = :bulk_mail_id
	} {} {} {} c:/web/openacs-4/contrib/packages/events/tcl/events-procs-postgresql.xql}
dbqd.contrib.packages.events.tcl.events-procs.events::event::verify_bulk_mail_reminder.check_emails {dbqd.contrib.packages.events.tcl.events-procs.events::event::verify_bulk_mail_reminder.check_emails {
	$query limit 1
 	} {} {} {} c:/web/openacs-4/contrib/packages/events/tcl/events-procs-postgresql.xql}
dbqd.contrib.packages.events.tcl.events-procs.events::event::get_stats.select_event_stats {dbqd.contrib.packages.events.tcl.events-procs.events::event::get_stats.select_event_stats {
         select t.count as total_interested, ee.max_people,
                ee.max_people as max_people,
                a.count as approved,
                p.count as pending,
                w.count as waiting,
                c.count as canceled, v.venue_id
           from (select count(*) as count from events_registrations where event_id = :event_id and reg_state = 'approved') a,  
                (select count(*) as count from events_registrations where event_id = :event_id and reg_state = 'pending') p,
                (select count(*) as count from events_registrations where event_id = :event_id and reg_state = 'waiting') w,
                (select count(*) as count from events_registrations where event_id = :event_id and reg_state = 'canceled') c,
                (select count(*) as count from events_registrations where event_id = :event_id and reg_state <> 'canceled') t,
                 events_events ee, events_venues v
          where ee.event_id = :event_id and ee.venue_id = v.venue_id
		} {} {} {} c:/web/openacs-4/contrib/packages/events/tcl/events-procs-postgresql.xql}
dbqd.contrib.packages.events.tcl.events-procs.events::event::get_creator.select_creator_info {dbqd.contrib.packages.events.tcl.events-procs.events::event::get_creator.select_creator_info {
		 select u.first_names || ' ' || u.last_name as name,
			u.email as email
		   from acs_objects ao, cc_users u
		  where ao.object_id = :event_id
		    and ao.creation_user = u.user_id
		} {} {} {} c:/web/openacs-4/contrib/packages/events/tcl/events-procs.xql}
dbqd.contrib.packages.events.tcl.events-procs.events::event::edit.select_interval_id {dbqd.contrib.packages.events.tcl.events-procs.events::event::edit.select_interval_id {
		select t.interval_id
	          from time_intervals t, timespans s, acs_events ae
	         where ae.event_id = :event_id
		   and ae.timespan_id = s.timespan_id
		   and s.interval_id = t.interval_id
		} {} {} {} c:/web/openacs-4/contrib/packages/events/tcl/events-procs.xql}
dbqd.contrib.packages.events.tcl.events-procs.events::event::make_event_date.select_event_date {dbqd.contrib.packages.events.tcl.events-procs.events::event::make_event_date.select_event_date {
		select to_char($which_date,'$date_format')
		  from time_intervals t, timespans s
		 where s.timespan_id = :timespan_id
		   and t.interval_id = s.interval_id
		} {} {} {} c:/web/openacs-4/contrib/packages/events/tcl/events-procs.xql}
dbqd.contrib.packages.events.tcl.events-procs.events::event::make_event_date.select_reg_deadline {dbqd.contrib.packages.events.tcl.events-procs.events::event::make_event_date.select_reg_deadline {
		select to_char(reg_deadline,'$date_format')
		  from events_events e
		 where event_id = :event_id
		} {} {} {} c:/web/openacs-4/contrib/packages/events/tcl/events-procs.xql}
dbqd.contrib.packages.events.tcl.events-procs.events::event::edit_event_notes.update_event_notes {dbqd.contrib.packages.events.tcl.events-procs.events::event::edit_event_notes.update_event_notes {
		update events_events
		   set refreshments_note = :refreshments_note,
		       av_note = :av_note,
		       additional_note = :additional_note
		 where event_id = :event_id
		} {} {} {} c:/web/openacs-4/contrib/packages/events/tcl/events-procs.xql}
dbqd.contrib.packages.events.tcl.events-procs.events::event::attachments_enabled_p.root_folder_exists_p {dbqd.contrib.packages.events.tcl.events-procs.events::event::attachments_enabled_p.root_folder_exists_p {
		select 1 from attachments_fs_root_folder_map
		 where package_id = :package_id
		} {} {} {} c:/web/openacs-4/contrib/packages/events/tcl/events-procs.xql}
dbqd.contrib.packages.events.tcl.events-procs.events::event::exists_p.exists_p_select {dbqd.contrib.packages.events.tcl.events-procs.events::event::exists_p.exists_p_select {
		select 1 
                  from events_events ee,
                       events_activities ea,
                       acs_events ae
                 where ee.event_id = :event_id
                   and ae.event_id = :event_id
                   and ae.activity_id = ea.activity_id
                   and ea.package_id = :package_id 
		} {} {} {} c:/web/openacs-4/contrib/packages/events/tcl/events-procs.xql}
dbqd.contrib.packages.events.tcl.events-procs.events::event::reg_deadline_elapsed_p.reg_deadline_elapsed_p_select {dbqd.contrib.packages.events.tcl.events-procs.events::event::reg_deadline_elapsed_p.reg_deadline_elapsed_p_select {
		select 1 
                  from events_events ee,
                       dual
                 where ee.event_id = :event_id
                   and ee.reg_deadline < sysdate
		} {} {} {} c:/web/openacs-4/contrib/packages/events/tcl/events-procs.xql}
dbqd.contrib.packages.events.tcl.events-procs.events::event::verify_bulk_mail_reminder.update_events_events_bulk_mail_id {dbqd.contrib.packages.events.tcl.events-procs.events::event::verify_bulk_mail_reminder.update_events_events_bulk_mail_id {
	        update events_events
	           set bulk_mail_id = :bulk_mail_id
	         where event_id = :event_id
	 	} {} {} {} c:/web/openacs-4/contrib/packages/events/tcl/events-procs.xql}
dbqd.contrib.packages.events.tcl.events-procs.events::event::verify_bulk_mail_reminder.select_startdate_and_bulk_mail_id {dbqd.contrib.packages.events.tcl.events-procs.events::event::verify_bulk_mail_reminder.select_startdate_and_bulk_mail_id {
	       select to_char(ti.start_date, 'DDD') as day_of_year, 
	              to_char(ti.start_date, 'YYYY') as year,
	              to_char(ti.start_date, 'HH24:MI:SS') as time,
	              ee.bulk_mail_id
	         from time_intervals ti, timespans ts, acs_events ae, events_events ee
	        where ti.interval_id = ts.interval_id
	          and ts.timespan_id = ae.timespan_id
	          and ae.event_id = :event_id 
	          and ee.event_id = :event_id
		} {} {} {} c:/web/openacs-4/contrib/packages/events/tcl/events-procs.xql}
dbqd.contrib.packages.events.tcl.events-procs.events::event::verify_bulk_mail_reminder.select_approved_registrants {dbqd.contrib.packages.events.tcl.events-procs.events::event::verify_bulk_mail_reminder.select_approved_registrants {
	        select pa.email
	          from parties pa, events_registrations er
	         where er.user_id = pa.party_id
	           and er.reg_state = 'approved'
	           and event_id = '$event_id'
	        } {} {} {} c:/web/openacs-4/contrib/packages/events/tcl/events-procs.xql}
dbqd.contrib.packages.events.tcl.organizers-procs-oracle.events::organizer::get_role.select_org_role_info {dbqd.contrib.packages.events.tcl.organizers-procs-oracle.events::organizer::get_role.select_org_role_info {
	select role, responsibilities, public_role_p, eom.user_id
	  from events_organizer_roles eor, events_organizers_map eom
	 where eor.role_id = :role_id
	   and eor.role_id = eom.role_id(+)
        } {} {} {} c:/web/openacs-4/contrib/packages/events/tcl/organizers-procs-oracle.xql}
dbqd.contrib.packages.events.tcl.organizers-procs.events::organizer::get_role.select_org_role_info {dbqd.contrib.packages.events.tcl.organizers-procs.events::organizer::get_role.select_org_role_info {
	select role, responsibilities, public_role_p, eom.user_id
	  from events_organizer_roles eor left join events_organizers_map eom using ( role_id )
	 where eor.role_id = :role_id
        } {} {} {} c:/web/openacs-4/contrib/packages/events/tcl/organizers-procs-postgresql.xql}
dbqd.contrib.packages.events.tcl.organizers-procs.events::organizer::new_role.new_org_role {dbqd.contrib.packages.events.tcl.organizers-procs.events::organizer::new_role.new_org_role {
	insert into events_organizer_roles
	(role_id, role, responsibilities, public_role_p)
	values
	(:role_id, :role, :responsibilities, :public_role_p)
        } {} {} {} c:/web/openacs-4/contrib/packages/events/tcl/organizers-procs.xql}
dbqd.contrib.packages.events.tcl.organizers-procs.events::organizer::map_role.insert_into_events_org_role_event_map {dbqd.contrib.packages.events.tcl.organizers-procs.events::organizer::map_role.insert_into_events_org_role_event_map {
	insert into events_org_role_event_map
	(role_id, event_id)
	values
	(:role_id, :event_id)
        } {} {} {} c:/web/openacs-4/contrib/packages/events/tcl/organizers-procs.xql}
dbqd.contrib.packages.events.tcl.organizers-procs.events::organizer::map_role.insert_into_events_org_role_activity_map {dbqd.contrib.packages.events.tcl.organizers-procs.events::organizer::map_role.insert_into_events_org_role_activity_map {
	insert into events_org_role_activity_map
	(role_id, activity_id)
	values
	(:role_id, :activity_id)
        } {} {} {} c:/web/openacs-4/contrib/packages/events/tcl/organizers-procs.xql}
dbqd.contrib.packages.events.tcl.organizers-procs.events::organizer::unmap_role.delete_from_events_org_role_event_map {dbqd.contrib.packages.events.tcl.organizers-procs.events::organizer::unmap_role.delete_from_events_org_role_event_map {
	delete from events_org_role_event_map
	 where role_id = :role_id
	   and event_id = :event_id
        } {} {} {} c:/web/openacs-4/contrib/packages/events/tcl/organizers-procs.xql}
dbqd.contrib.packages.events.tcl.organizers-procs.events::organizer::unmap_role.delete_from_events_organizers_map {dbqd.contrib.packages.events.tcl.organizers-procs.events::organizer::unmap_role.delete_from_events_organizers_map {
	delete from events_organizers_map
	 where role_id = :role_id
	   and event_id = :event_id
        } {} {} {} c:/web/openacs-4/contrib/packages/events/tcl/organizers-procs.xql}
dbqd.contrib.packages.events.tcl.organizers-procs.events::organizer::unmap_role.delete_from_events_org_role_activity_map {dbqd.contrib.packages.events.tcl.organizers-procs.events::organizer::unmap_role.delete_from_events_org_role_activity_map {
	delete from events_org_role_activity_map
	 where role_id = :role_id
	   and activity_id = :activity_id
        } {} {} {} c:/web/openacs-4/contrib/packages/events/tcl/organizers-procs.xql}
dbqd.contrib.packages.events.tcl.organizers-procs.events::organizer::edit_role.edit_org_role {dbqd.contrib.packages.events.tcl.organizers-procs.events::organizer::edit_role.edit_org_role {
	update events_organizer_roles
	   set role = :role,
	       responsibilities = :responsibilities,
	       public_role_p = :public_role_p
	 where role_id = :role_id
        } {} {} {} c:/web/openacs-4/contrib/packages/events/tcl/organizers-procs.xql}
dbqd.contrib.packages.events.tcl.organizers-procs.events::organizer::delete_role.delete_org_role {dbqd.contrib.packages.events.tcl.organizers-procs.events::organizer::delete_role.delete_org_role {
	delete from events_organizer_roles
	 where role_id = :role_id
        } {} {} {} c:/web/openacs-4/contrib/packages/events/tcl/organizers-procs.xql}
dbqd.contrib.packages.events.tcl.organizers-procs.events::organizer::add_organizer.insert_into_events_organizers_map {dbqd.contrib.packages.events.tcl.organizers-procs.events::organizer::add_organizer.insert_into_events_organizers_map {
	insert into events_organizers_map
	(role_id, event_id, user_id)
	values
	(:role_id, :event_id, :party_id)
        } {} {} {} c:/web/openacs-4/contrib/packages/events/tcl/organizers-procs.xql}
dbqd.contrib.packages.events.tcl.organizers-procs.events::organizer::edit_organizer.update_events_organizers_map {dbqd.contrib.packages.events.tcl.organizers-procs.events::organizer::edit_organizer.update_events_organizers_map {
	update events_organizers_map
	   set user_id = :party_id
	 where role_id = :role_id
	   and event_id = :event_id
        } {} {} {} c:/web/openacs-4/contrib/packages/events/tcl/organizers-procs.xql}
dbqd.contrib.packages.events.tcl.organizers-procs.events::organizer::delete_organizer.delete_from_events_organizers_map {dbqd.contrib.packages.events.tcl.organizers-procs.events::organizer::delete_organizer.delete_from_events_organizers_map {
	delete from events_organizers_map
	 where role_id = :role_id
	   and event_id = :event_id
        } {} {} {} c:/web/openacs-4/contrib/packages/events/tcl/organizers-procs.xql}
dbqd.contrib.packages.events.tcl.organizers-procs.events::organizer::users_get_options.users {dbqd.contrib.packages.events.tcl.organizers-procs.events::organizer::users_get_options.users {
         select distinct
                u.first_names || ' ' || u.last_name as name,
                u.user_id
	   from cc_users u	
	  order by name
	} {} {} {} c:/web/openacs-4/contrib/packages/events/tcl/organizers-procs.xql}
dbqd.contrib.packages.events.tcl.organizers-procs.events::organizer::organizer_exists_p.check_events_organizers_map {dbqd.contrib.packages.events.tcl.organizers-procs.events::organizer::organizer_exists_p.check_events_organizers_map {
	select * from events_organizers_map
	 where role_id = :role_id
	   and event_id = :event_id
        } {} {} {} c:/web/openacs-4/contrib/packages/events/tcl/organizers-procs.xql}
dbqd.contrib.packages.events.tcl.registrations-procs-oracle.events::registration::get.select_registration_info {dbqd.contrib.packages.events.tcl.registrations-procs-oracle.events::registration::get.select_registration_info {
             select er.event_id,
                    er.user_id,
                    person.name(er.user_id) as user_name,
                    pa.email as user_email,
                    er.reg_state,
                    to_char(ao.creation_date, :date_format) || ' ' || to_char(ao.creation_date, :time_format) as creation_date,
	            to_char(er.approval_date, :date_format) || ' ' || to_char(er.approval_date, :time_format) as approval_date,
                    er.comments,
                    :url || site_node.url(sn.node_id) as package_url
               from events_registrations er,
                    parties pa,
                    acs_objects ao,
                    site_nodes sn
              where er.reg_id = :reg_id
                and sn.object_id = :package_id
                and er.reg_id = ao.object_id
                and er.user_id = pa.party_id
        } {} {} {} c:/web/openacs-4/contrib/packages/events/tcl/registrations-procs-oracle.xql}
dbqd.contrib.packages.events.tcl.registrations-procs-oracle.events::registration::delete.delete_registration {dbqd.contrib.packages.events.tcl.registrations-procs-oracle.events::registration::delete.delete_registration {
	declare begin
		events_registration.del(:reg_id);
	end;
        } {} {} {} c:/web/openacs-4/contrib/packages/events/tcl/registrations-procs-oracle.xql}
dbqd.contrib.packages.events.tcl.registrations-procs-oracle.events::registration::new_attribute.create_reg_attribute {dbqd.contrib.packages.events.tcl.registrations-procs-oracle.events::registration::new_attribute.create_reg_attribute {
	declare	begin
	:1 := acs_attribute.create_attribute (
		object_type => 'events_registration',
		attribute_name => :attribute_name,
		datatype => :datatype,
		pretty_name => :pretty_name,
		pretty_plural => :pretty_plural,
		storage => 'generic',	
		sort_order => :sort_order
	);
	end;
        } {} {} {} c:/web/openacs-4/contrib/packages/events/tcl/registrations-procs-oracle.xql}
dbqd.contrib.packages.events.tcl.registrations-procs-oracle.events::registration::delete_attribute.drop_reg_attribute {dbqd.contrib.packages.events.tcl.registrations-procs-oracle.events::registration::delete_attribute.drop_reg_attribute {
	declare	begin
	acs_attribute.drop_attribute (
		object_type => 'events_registration',
		attribute_name => :attribute_name
	);
	end;
        } {} {} {} c:/web/openacs-4/contrib/packages/events/tcl/registrations-procs-oracle.xql}
dbqd.contrib.packages.events.tcl.registrations-procs.events::registration::get.select_registration_info {dbqd.contrib.packages.events.tcl.registrations-procs.events::registration::get.select_registration_info {
             select er.event_id,
                    er.user_id,
                    person__name(er.user_id) as user_name,
                    pa.email as user_email,
                    er.reg_state,
                    to_char(ao.creation_date, :date_format) || ' ' || to_char(ao.creation_date, :time_format) as creation_date,
	            to_char(er.approval_date, :date_format) || ' ' || to_char(er.approval_date, :time_format) as approval_date,
                    er.comments,
                    :url || site_node__url(sn.node_id) as package_url
               from events_registrations er,
                    parties pa,
                    acs_objects ao,
                    site_nodes sn
              where er.reg_id = :reg_id
                and sn.object_id = :package_id
                and er.reg_id = ao.object_id
                and er.user_id = pa.party_id
        } {} {} {} c:/web/openacs-4/contrib/packages/events/tcl/registrations-procs-postgresql.xql}
dbqd.contrib.packages.events.tcl.registrations-procs.events::registration::delete.delete_registration {dbqd.contrib.packages.events.tcl.registrations-procs.events::registration::delete.delete_registration {
	declare begin
		events_registration.del(:reg_id);
	end;
        } {} {} {} c:/web/openacs-4/contrib/packages/events/tcl/registrations-procs-postgresql.xql}
dbqd.contrib.packages.events.tcl.registrations-procs.events::registration::new_attribute.create_reg_attribute {dbqd.contrib.packages.events.tcl.registrations-procs.events::registration::new_attribute.create_reg_attribute {
                select acs_attribute__create_attribute (
                    'events_registration',
                    :attribute_name,
                    :datatype,
                    :pretty_name,
                    :pretty_plural,
                    null,
                    null,
                    null, 
                    1,
                    1,
                    :sort_order
                    'generic',
                    'f'
                );
        } {} {} {} c:/web/openacs-4/contrib/packages/events/tcl/registrations-procs-postgresql.xql}
dbqd.contrib.packages.events.tcl.registrations-procs.events::registration::delete_attribute.drop_reg_attribute {dbqd.contrib.packages.events.tcl.registrations-procs.events::registration::delete_attribute.drop_reg_attribute {
        select acs_attribute__drop_attribute('events_registration', :attribute_name)
        } {} {} {} c:/web/openacs-4/contrib/packages/events/tcl/registrations-procs-postgresql.xql}
dbqd.contrib.packages.events.tcl.registrations-procs.events::registration::edit_reg_comments.edit_reg_comments {dbqd.contrib.packages.events.tcl.registrations-procs.events::registration::edit_reg_comments.edit_reg_comments {
	update events_registrations
	   set comments = :comments
	 where reg_id = :reg_id
	} {} {} {} c:/web/openacs-4/contrib/packages/events/tcl/registrations-procs.xql}
dbqd.contrib.packages.events.tcl.registrations-procs.events::registration::exists_p.exists_p_select {dbqd.contrib.packages.events.tcl.registrations-procs.events::registration::exists_p.exists_p_select {
	select 1 
          from events_registrations er,
               events_activities ea,
               acs_events ae
         where er.reg_id = :reg_id
           and er.event_id = ae.event_id
           and ae.activity_id = ea.activity_id
           and ea.package_id = :package_id 
	} {} {} {} c:/web/openacs-4/contrib/packages/events/tcl/registrations-procs.xql}
dbqd.contrib.packages.events.tcl.registrations-procs.events::registration::waiting.waiting_registration {dbqd.contrib.packages.events.tcl.registrations-procs.events::registration::waiting.waiting_registration {
	update events_registrations
	   set reg_state = 'waiting'
	 where reg_id = :reg_id
        } {} {} {} c:/web/openacs-4/contrib/packages/events/tcl/registrations-procs.xql}
dbqd.contrib.packages.events.tcl.registrations-procs.events::registration::approve.approve_registration {dbqd.contrib.packages.events.tcl.registrations-procs.events::registration::approve.approve_registration {
	update events_registrations
	   set reg_state = 'approved'
	 where reg_id = :reg_id
        } {} {} {} c:/web/openacs-4/contrib/packages/events/tcl/registrations-procs.xql}
dbqd.contrib.packages.events.tcl.registrations-procs.events::registration::cancel.cancel_registration {dbqd.contrib.packages.events.tcl.registrations-procs.events::registration::cancel.cancel_registration {
	update events_registrations
	   set reg_state = 'canceled'
	 where reg_id = :reg_id
        } {} {} {} c:/web/openacs-4/contrib/packages/events/tcl/registrations-procs.xql}
dbqd.contrib.packages.events.tcl.registrations-procs.events::registration::edit.edit_registration {dbqd.contrib.packages.events.tcl.registrations-procs.events::registration::edit.edit_registration {
	update events_registrations
	   set reg_state = :reg_state,
	       user_id = :party_id
	  where reg_id = :reg_id
        } {} {} {} c:/web/openacs-4/contrib/packages/events/tcl/registrations-procs.xql}
dbqd.contrib.packages.events.tcl.registrations-procs.events::registration::new_attribute.insert_into_events_attr_category_map {dbqd.contrib.packages.events.tcl.registrations-procs.events::registration::new_attribute.insert_into_events_attr_category_map {
	insert into events_attr_category_map 
	(attribute_id, category_id)
	values
	(:attribute_id, :category_id)
        } {} {} {} c:/web/openacs-4/contrib/packages/events/tcl/registrations-procs.xql}
dbqd.contrib.packages.events.tcl.registrations-procs.events::registration::get_attribute.select_attribute_info {dbqd.contrib.packages.events.tcl.registrations-procs.events::registration::get_attribute.select_attribute_info {
	select aa.attribute_id, aa.attribute_name as name,
       	       aa.sort_order, aa.datatype, aa.pretty_name,
	       aa.pretty_plural, eac.category_name, eac.category_id
	  from acs_attributes aa, events_attr_categories eac, 
	       events_attr_category_map eacm
	 where aa.attribute_id = :attribute_id
	   and aa.attribute_id = eacm.attribute_id
	   and eacm.category_id = eac.category_id
        } {} {} {} c:/web/openacs-4/contrib/packages/events/tcl/registrations-procs.xql}
dbqd.contrib.packages.events.tcl.registrations-procs.events::registration::edit_attribute.edit_reg_attribute {dbqd.contrib.packages.events.tcl.registrations-procs.events::registration::edit_attribute.edit_reg_attribute {
	update acs_attributes
	   set attribute_name = :attribute_name,
	       pretty_name = :pretty_name,
	       pretty_plural = :pretty_plural,
	       datatype = :datatype
	 where attribute_id = :attribute_id
        } {} {} {} c:/web/openacs-4/contrib/packages/events/tcl/registrations-procs.xql}
dbqd.contrib.packages.events.tcl.registrations-procs.events::registration::edit_attribute.edit_reg_attr_category {dbqd.contrib.packages.events.tcl.registrations-procs.events::registration::edit_attribute.edit_reg_attr_category {
	update events_attr_category_map
	   set category_id = :category_id
	 where attribute_id = :attribute_id
        } {} {} {} c:/web/openacs-4/contrib/packages/events/tcl/registrations-procs.xql}
dbqd.contrib.packages.events.tcl.registrations-procs.events::registration::delete_attribute.del_from_events_attr_category_map {dbqd.contrib.packages.events.tcl.registrations-procs.events::registration::delete_attribute.del_from_events_attr_category_map {
	delete from events_attr_category_map
	 where attribute_id = :attribute_id
	} {} {} {} c:/web/openacs-4/contrib/packages/events/tcl/registrations-procs.xql}
dbqd.contrib.packages.events.tcl.registrations-procs.events::registration::map_attribute.insert_into_events_event_attr_map {dbqd.contrib.packages.events.tcl.registrations-procs.events::registration::map_attribute.insert_into_events_event_attr_map {
	insert into events_event_attr_map
	(event_id, attribute_id)
	values
	(:event_id, :attribute_id)
        } {} {} {} c:/web/openacs-4/contrib/packages/events/tcl/registrations-procs.xql}
dbqd.contrib.packages.events.tcl.registrations-procs.events::registration::map_attribute.insert_into_events_def_actvty_attr_map {dbqd.contrib.packages.events.tcl.registrations-procs.events::registration::map_attribute.insert_into_events_def_actvty_attr_map {
	insert into events_def_actvty_attr_map
	(activity_id, attribute_id)
	values
	(:activity_id, :attribute_id)
        } {} {} {} c:/web/openacs-4/contrib/packages/events/tcl/registrations-procs.xql}
dbqd.contrib.packages.events.tcl.registrations-procs.events::registration::unmap_attribute.delete_from_events_event_attr_map {dbqd.contrib.packages.events.tcl.registrations-procs.events::registration::unmap_attribute.delete_from_events_event_attr_map {	
	delete from events_event_attr_map
	 where attribute_id = :attribute_id
	} {} {} {} c:/web/openacs-4/contrib/packages/events/tcl/registrations-procs.xql}
dbqd.contrib.packages.events.tcl.registrations-procs.events::registration::unmap_attribute.delete_from_events_def_actvty_attr_map {dbqd.contrib.packages.events.tcl.registrations-procs.events::registration::unmap_attribute.delete_from_events_def_actvty_attr_map {	
	delete from events_def_actvty_attr_map
	 where attribute_id = :attribute_id
	} {} {} {} c:/web/openacs-4/contrib/packages/events/tcl/registrations-procs.xql}
dbqd.contrib.packages.events.tcl.registrations-procs.events::registration::get_sort_order.get_sort_order_max {dbqd.contrib.packages.events.tcl.registrations-procs.events::registration::get_sort_order.get_sort_order_max {
	select max(aa.sort_order) as sort_order_max
	  from acs_attributes aa, events_attr_category_map eacm
	 where category_id = :category_id
	   and aa.attribute_id = eacm.attribute_id
        } {} {} {} c:/web/openacs-4/contrib/packages/events/tcl/registrations-procs.xql}
dbqd.contrib.packages.events.tcl.venues-procs-oracle.events::venue::new.new_acs_venue {dbqd.contrib.packages.events.tcl.venues-procs-oracle.events::venue::new.new_acs_venue { 
	declare	begin 
	:1 := acs_object.new (
		object_type => 'events_venue',
		creation_user => :user_id,
		creation_ip => :creation_ip,
		context_id => :context_id
	);
	end;
        } {} {} {} c:/web/openacs-4/contrib/packages/events/tcl/venues-procs-oracle.xql}
dbqd.contrib.packages.events.tcl.venues-procs-oracle.events::venue::delete.delete_venue {dbqd.contrib.packages.events.tcl.venues-procs-oracle.events::venue::delete.delete_venue {
		declare begin
			events_venue.del(:venue_id);
		end;
		} {} {} {} c:/web/openacs-4/contrib/packages/events/tcl/venues-procs-oracle.xql}
dbqd.contrib.packages.events.tcl.venues-procs-oracle.events::venue::in_use_p.in_use_p_select {dbqd.contrib.packages.events.tcl.venues-procs-oracle.events::venue::in_use_p.in_use_p_select {
		select 1 from events_events
		 where venue_id = :venue_id
		   and rownum = 1
		} {} {} {} c:/web/openacs-4/contrib/packages/events/tcl/venues-procs-oracle.xql}
dbqd.contrib.packages.events.tcl.venues-procs-oracle.events::venue::child_of_p.select_parents {dbqd.contrib.packages.events.tcl.venues-procs-oracle.events::venue::child_of_p.select_parents {
		select 1 from events_venues where $parent_id in ([events::venue::all_parents_or_children -venue_id $child_id -package_id $package_id -sql_p "t" -parent_p "t"]) and rownum = 1
		} {} {} {} c:/web/openacs-4/contrib/packages/events/tcl/venues-procs-oracle.xql}
dbqd.contrib.packages.events.tcl.venues-procs.events::venue::new.new_acs_venue {dbqd.contrib.packages.events.tcl.venues-procs.events::venue::new.new_acs_venue { 
	select acs_object__new (
		null,
                'events_venue',
		now(),
                :user_id,
		:creation_ip,
                :context_id
        )
        } {} {} {} c:/web/openacs-4/contrib/packages/events/tcl/venues-procs-postgresql.xql}
dbqd.contrib.packages.events.tcl.venues-procs.events::venue::new.new {dbqd.contrib.packages.events.tcl.venues-procs.events::venue::new.new {
		select events_venue__new(
			:venue_id,
			'events_venue',
			:venue_name,
			:address1,
			:address2,
			:city,
			:phone_number,
			:fax_number,
			:email,
			:needs_reserve_p,
			:max_people,
			:description,
			:creation_date,
			null,
			null,
			null,
			)	
		} {} {} {} c:/web/openacs-4/contrib/packages/events/tcl/venues-procs-postgresql.xql}
dbqd.contrib.packages.events.tcl.venues-procs.events::venue::delete.delete_venue {dbqd.contrib.packages.events.tcl.venues-procs.events::venue::delete.delete_venue {
		select events_venue__delete(:venue_id);
		} {} {} {} c:/web/openacs-4/contrib/packages/events/tcl/venues-procs-postgresql.xql}
dbqd.contrib.packages.events.tcl.venues-procs.events::venue::in_use_p.in_use_p_select {dbqd.contrib.packages.events.tcl.venues-procs.events::venue::in_use_p.in_use_p_select {
		select 1 from events_events
		 where venue_id = :venue_id
		 limit 1
		} {} {} {} c:/web/openacs-4/contrib/packages/events/tcl/venues-procs-postgresql.xql}
dbqd.contrib.packages.events.tcl.venues-procs.events::venue::child_of_p.select_parents {dbqd.contrib.packages.events.tcl.venues-procs.events::venue::child_of_p.select_parents {
		select 1 from events_venues where $parent_id in ([events::venue::all_parents_or_children -venue_id $child_id -package_id $package_id -sql_p "t" -parent_p "t"]) limit 1
		} {} {} {} c:/web/openacs-4/contrib/packages/events/tcl/venues-procs-postgresql.xql}
dbqd.contrib.packages.events.tcl.venues-procs.events::venue::edit.update_events_venues {dbqd.contrib.packages.events.tcl.venues-procs.events::venue::edit.update_events_venues {
		update events_venues
		   set venue_name = :venue_name,
		       address1 = :address1,
		       address2 = :address2,
		       city = :city,
		       usps_abbrev = :usps_abbrev,
		       postal_code = :postal_code,
		       iso = :iso,
		       time_zone = :time_zone,
		       phone_number = :phone_number,
		       fax_number = :fax_number,
		       email = :email,
		       needs_reserve_p = :needs_reserve_p,
		       max_people = :max_people,
		       description = :description
		 where venue_id = :venue_id
		} {} {} {} c:/web/openacs-4/contrib/packages/events/tcl/venues-procs.xql}
dbqd.contrib.packages.events.tcl.venues-procs.events::venue::get.select_venue_info {dbqd.contrib.packages.events.tcl.venues-procs.events::venue::get.select_venue_info {
		select venue_name, address1, address2, city, usps_abbrev, postal_code, iso, 
                       time_zone, phone_number, fax_number, email, 
                       needs_reserve_p, max_people, description
		  from events_venues
		 where venue_id = :venue_id
		} {} {} {} c:/web/openacs-4/contrib/packages/events/tcl/venues-procs.xql}
dbqd.contrib.packages.events.tcl.venues-procs.events::venue::exists_p.exists_p_select {dbqd.contrib.packages.events.tcl.venues-procs.events::venue::exists_p.exists_p_select {
		select 1 from events_venues where venue_id = :venue_id
		} {} {} {} c:/web/openacs-4/contrib/packages/events/tcl/venues-procs.xql}
dbqd.contrib.packages.events.tcl.venues-procs.events::venue::venues_get_options.select_venues {dbqd.contrib.packages.events.tcl.venues-procs.events::venue::venues_get_options.select_venues {
		select venue_name, venue_id
		  from events_venues
		} {} {} {} c:/web/openacs-4/contrib/packages/events/tcl/venues-procs.xql}
dbqd.contrib.packages.events.tcl.venues-procs.events::venue::make_child_of.check_venue_one {dbqd.contrib.packages.events.tcl.venues-procs.events::venue::make_child_of.check_venue_one {
		select venue_id from events_venues where venue_id=:parent_id and package_id=:package_id
		} {} {} {} c:/web/openacs-4/contrib/packages/events/tcl/venues-procs.xql}
dbqd.contrib.packages.events.tcl.venues-procs.events::venue::make_child_of.check_venue_two {dbqd.contrib.packages.events.tcl.venues-procs.events::venue::make_child_of.check_venue_two {
		select venue_id from events_venues where venue_id=:child_id and package_id=:package_id
		} {} {} {} c:/web/openacs-4/contrib/packages/events/tcl/venues-procs.xql}
dbqd.contrib.packages.events.tcl.venues-procs.events::venue::make_child_of.insert_relationship {dbqd.contrib.packages.events.tcl.venues-procs.events::venue::make_child_of.insert_relationship {
		insert into events_venues_venues_map (parent_venue_id, child_venue_id, package_id) values (:parent_id, :child_id, :package_id)
        	} {} {} {} c:/web/openacs-4/contrib/packages/events/tcl/venues-procs.xql}
dbqd.contrib.packages.events.tcl.venues-procs.events::venue::right_of_p.select_starting_point {dbqd.contrib.packages.events.tcl.venues-procs.events::venue::right_of_p.select_starting_point {
		select right_venue_id from events_venues_connecting_map where right_venue_id=:right_id and left_venue_id=:left_id and package_id=:package_id
		} {} {} {} c:/web/openacs-4/contrib/packages/events/tcl/venues-procs.xql}
dbqd.contrib.packages.events.tcl.venues-procs.events::venue::connect.check_venue_one {dbqd.contrib.packages.events.tcl.venues-procs.events::venue::connect.check_venue_one {
		select venue_id from events_venues where venue_id=:left_id and package_id=:package_id
		} {} {} {} c:/web/openacs-4/contrib/packages/events/tcl/venues-procs.xql}
dbqd.contrib.packages.events.tcl.venues-procs.events::venue::connect.check_venue_two {dbqd.contrib.packages.events.tcl.venues-procs.events::venue::connect.check_venue_two {
		select venue_id from events_venues where venue_id=:right_id and package_id=:package_id
		} {} {} {} c:/web/openacs-4/contrib/packages/events/tcl/venues-procs.xql}
dbqd.contrib.packages.events.tcl.venues-procs.events::venue::connect.insert_relationship {dbqd.contrib.packages.events.tcl.venues-procs.events::venue::connect.insert_relationship {
		insert into events_venues_connecting_map (left_venue_id, right_venue_id, package_id) values (:left_id, :right_id, :package_id)
        	} {} {} {} c:/web/openacs-4/contrib/packages/events/tcl/venues-procs.xql}
dbqd.contrib.packages.events.tcl.venues-procs.events::venue::disconnect.check_venue_one {dbqd.contrib.packages.events.tcl.venues-procs.events::venue::disconnect.check_venue_one {
		select venue_id from events_venues where venue_id=:left_id and package_id=:package_id
		} {} {} {} c:/web/openacs-4/contrib/packages/events/tcl/venues-procs.xql}
dbqd.contrib.packages.events.tcl.venues-procs.events::venue::disconnect.check_venue_two {dbqd.contrib.packages.events.tcl.venues-procs.events::venue::disconnect.check_venue_two {
		select venue_id from events_venues where venue_id=:right_id and package_id=:package_id
		} {} {} {} c:/web/openacs-4/contrib/packages/events/tcl/venues-procs.xql}
dbqd.contrib.packages.events.tcl.venues-procs.events::venue::disconnect.delete_relationship {dbqd.contrib.packages.events.tcl.venues-procs.events::venue::disconnect.delete_relationship {
		delete from events_venues_connecting_map where package_id=:package_id and ((left_venue_id=:left_id and right_venue_id=:right_id) or (right_venue_id=:left_id and left_venue_id=:right_id))
        	} {} {} {} c:/web/openacs-4/contrib/packages/events/tcl/venues-procs.xql}
dbqd.contrib.packages.events.tcl.venues-procs.events::venue::connecting.select_venues {dbqd.contrib.packages.events.tcl.venues-procs.events::venue::connecting.select_venues {
		select venue_id as this_venue_id, venue_name from events_venues where package_id=:package_id and venue_id<>:venue_id order by venue_name, venue_id
        	} {} {} {} c:/web/openacs-4/contrib/packages/events/tcl/venues-procs.xql}
dbqd.contrib.packages.events.tcl.venues-procs.events::venue::parents_or_children.select_parents {dbqd.contrib.packages.events.tcl.venues-procs.events::venue::parents_or_children.select_parents {
		select parent_venue_id as venue_1, child_venue_id as venue_2 from events_venues_venues_map where child_venue_id=$venue_id and package_id=$package_id
        	} {} {} {} c:/web/openacs-4/contrib/packages/events/tcl/venues-procs.xql}
dbqd.contrib.packages.events.tcl.venues-procs.events::venue::parents_or_children.select_children {dbqd.contrib.packages.events.tcl.venues-procs.events::venue::parents_or_children.select_children {
		select child_venue_id as venue_1, parent_venue_id as venue_2 from events_venues_venues_map where parent_venue_id=$venue_id and package_id=$package_id
        	} {} {} {} c:/web/openacs-4/contrib/packages/events/tcl/venues-procs.xql}
dbqd.contrib.packages.events.tcl.venues-procs.events::venue::venues_get_connecting_options.select_venues {dbqd.contrib.packages.events.tcl.venues-procs.events::venue::venues_get_connecting_options.select_venues {
		select venue_id, venue_name from events_venues where package_id=:package_id
        	} {} {} {} c:/web/openacs-4/contrib/packages/events/tcl/venues-procs.xql}
dbqd.contrib.packages.events.tcl.venues-procs.events::venue::venues_get_hierarchy_options.select_venues {dbqd.contrib.packages.events.tcl.venues-procs.events::venue::venues_get_hierarchy_options.select_venues {
		select venue_id, venue_name from events_venues where venue_id<>:this_venue_id and package_id=:package_id
        	} {} {} {} c:/web/openacs-4/contrib/packages/events/tcl/venues-procs.xql}
dbqd.contrib.packages.events.tcl.venues-procs.events::venue::dechildize.delete_child {dbqd.contrib.packages.events.tcl.venues-procs.events::venue::dechildize.delete_child {
		delete from events_venues_venues_map where child_venue_id=:child_id and (parent_venue_id=:parent_id or parent_venue_id in ([events::venue::all_parents_or_children -venue_id $parent_id -parent_p "f" -sql_p "t"])) and package_id=:package_id
        	} {} {} {} c:/web/openacs-4/contrib/packages/events/tcl/venues-procs.xql}
dbqd.contrib.packages.events.tcl.venues-procs.events::venue::connected.select_connecting {dbqd.contrib.packages.events.tcl.venues-procs.events::venue::connected.select_connecting {
		select connected_venue_id, events_venues.venue_name as connected_venue_name from events_venues_conn_used_map, events_venues where events_venues_conn_used_map.event_id=:event_id and events_venues_conn_used_map.venue_id=:venue_id and events_venues_conn_used_map.package_id=:package_id and events_venues_conn_used_map.connected_venue_id=events_venues.venue_id
        	} {} {} {} c:/web/openacs-4/contrib/packages/events/tcl/venues-procs.xql}
dbqd.contrib.packages.events.tcl.venues-procs.events::venue::connecting_max.select_parents {dbqd.contrib.packages.events.tcl.venues-procs.events::venue::connecting_max.select_parents {
	        select min(max_people) as min from events_venues where venue_id in ([events::venue::all_parents_or_children -venue_id $venue_id -parent_p "t" -sql_p "t"])
	        } {} {} {} c:/web/openacs-4/contrib/packages/events/tcl/venues-procs.xql}
dbqd.contrib.packages.events.www.activity-oracle.select_upcoming_events {dbqd.contrib.packages.events.www.activity-oracle.select_upcoming_events {
	select e.event_id, v.city, t.start_date,
	       CASE WHEN to_char(t.start_date, 'YYYY-MM-DD') = to_char(t.end_date, 'YYYY-MM-DD') 
	            THEN to_char(t.start_date, :date_format) || ' (' || to_char(t.start_date, :time_format) || ' - ' || to_char(t.end_date, :time_format) || ')'
	            ELSE to_char(t.start_date, :date_format) || ' ' || to_char(t.start_date, :time_format) || ' - ' || to_char(t.end_date, :date_format) || ' ' || to_char(t.end_date, :time_format)
	       END as timespan
	  from acs_events ae, 
	       acs_activities aa,
               dual,
	       events_events e, 
	       events_activities a, 
	       events_venues v, 
	       timespans s, 
	       time_intervals t
	 where aa.activity_id = :activity_id
	   and aa.activity_id = a.activity_id
	   and a.activity_id = ae.activity_id
	   and ae.event_id = e.event_id
	   and e.available_p <> 'f'
	   and t.start_date > sysdate
	   and v.venue_id = e.venue_id
	   and ae.timespan_id = s.timespan_id
	   and s.interval_id = t.interval_id
           and acs_permission.permission_p(
                       e.event_id,
                       nvl(:user_id, acs.magic_object_id('the_public')),
                       'read') = 't'
	  order by t.start_date
        } {} {} {} c:/web/openacs-4/contrib/packages/events/www/activity-oracle.xql}
dbqd.contrib.packages.events.www.activity.select_upcoming_events {dbqd.contrib.packages.events.www.activity.select_upcoming_events {
	select e.event_id, v.city, t.start_date,
	       CASE WHEN to_char(t.start_date, 'YYYY-MM-DD') = to_char(t.end_date, 'YYYY-MM-DD') 
	            THEN to_char(t.start_date, :date_format) || ' (' || to_char(t.start_date, :time_format) || ' - ' || to_char(t.end_date, :time_format) || ')'
	            ELSE to_char(t.start_date, :date_format) || ' ' || to_char(t.start_date, :time_format) || ' - ' || to_char(t.end_date, :date_format) || ' ' || to_char(t.end_date, :time_format)
	       END as timespan
	  from acs_events ae, 
	       acs_activities aa,
               dual,
	       events_events e, 
	       events_activities a, 
	       events_venues v, 
	       timespans s, 
	       time_intervals t
	 where aa.activity_id = :activity_id
	   and aa.activity_id = a.activity_id
	   and a.activity_id = ae.activity_id
	   and ae.event_id = e.event_id
	   and e.available_p <> 'f'
	   and t.start_date > sysdate
	   and v.venue_id = e.venue_id
	   and ae.timespan_id = s.timespan_id
	   and s.interval_id = t.interval_id
           and acs_permission__permission_p(
                       e.event_id,
                       coalesce(:user_id, acs__magic_object_id('the_public')),
                       'read') = 't'
	  order by t.start_date
        } {} {} {} c:/web/openacs-4/contrib/packages/events/www/activity-postgresql.xql}
dbqd.contrib.packages.events.www.activity.activity_exists {dbqd.contrib.packages.events.www.activity.activity_exists {
		select 1
		  from events_activities
		 where activity_id = :activity_id
	        } {} {} {} c:/web/openacs-4/contrib/packages/events/www/activity.xql}
dbqd.contrib.packages.events.www.admin.activities.select_available_activities {dbqd.contrib.packages.events.www.admin.activities.select_available_activities {
  select a.activity_id, a.name, ea.available_p
    from events_activities ea, acs_activities a
   where ea.activity_id = a.activity_id
     and package_id = :package_id
     and ea.available_p = 't'
   order by name asc
        } {} {} {} c:/web/openacs-4/contrib/packages/events/www/admin/activities.xql}
dbqd.contrib.packages.events.www.admin.activities.select_unavailable_activities {dbqd.contrib.packages.events.www.admin.activities.select_unavailable_activities {
  select a.activity_id, a.name, ea.available_p
    from events_activities ea, acs_activities a
   where ea.activity_id = a.activity_id
     and package_id = :package_id
     and ea.available_p = 'f'
   order by name asc
        } {} {} {} c:/web/openacs-4/contrib/packages/events/www/admin/activities.xql}
dbqd.contrib.packages.events.www.admin.activity-edit.activity_exists {dbqd.contrib.packages.events.www.admin.activity-edit.activity_exists {
	select 1
	  from events_activities
	 where activity_id = :activity_id
        } {} {} {} c:/web/openacs-4/contrib/packages/events/www/admin/activity-edit.xql}
dbqd.contrib.packages.events.www.admin.activity-edit.select_activity_info {dbqd.contrib.packages.events.www.admin.activity-edit.select_activity_info {
		select a.name, 
		a.description, 
		ae.available_p,
		ae.detail_url,
		ae.default_contact_user_id
		from   acs_activities a, events_activities ae
		where  a.activity_id = :activity_id
		and a.activity_id = ae.activity_id
        } {} {} {} c:/web/openacs-4/contrib/packages/events/www/admin/activity-edit.xql}
dbqd.contrib.packages.events.www.admin.activity-oracle.select_org_roles {dbqd.contrib.packages.events.www.admin.activity-oracle.select_org_roles {
	select role, eor.role_id, 
	       decode(public_role_p, 't', ' (public role)', '') as public_role_p
	  from events_organizer_roles eor, events_org_role_activity_map eoram
	 where eoram.activity_id = :activity_id
	   and eoram.role_id = eor.role_id
	 order by role 
        } {} {} {} c:/web/openacs-4/contrib/packages/events/www/admin/activity-oracle.xql}
dbqd.contrib.packages.events.www.admin.activity-oracle.select_activity_events {dbqd.contrib.packages.events.www.admin.activity-oracle.select_activity_events {
	select CASE WHEN to_char(t.start_date, 'YYYY-MM-DD') = to_char(t.end_date, 'YYYY-MM-DD') 
	            THEN to_char(t.start_date, :date_format) || ' (' || to_char(t.start_date, :time_format) || ' - ' || to_char(t.end_date, :time_format) || ')'
	            ELSE to_char(t.start_date, :date_format) || ' ' || to_char(t.start_date, :time_format) || ' - ' || to_char(t.end_date, :date_format) || ' ' || to_char(t.end_date, :time_format)
	       END as timespan,
               nvl(e.name, a.name) as name,	 
               e.event_id,
               v.city,
	       v.usps_abbrev
	  from acs_activities a,
	       acs_events e,
	       events_activities ea,
	       events_events ee,
	       timespans s,
	       time_intervals t,
	       events_venues v
	 where e.timespan_id = s.timespan_id
	   and s.interval_id = t.interval_id
	   and e.activity_id = a.activity_id
	   and a.activity_id = ea.activity_id
	   and e.activity_id = :activity_id
	   and e.event_id = ee.event_id
	   and v.venue_id = ee.venue_id
	   and ee.available_p = 't'
	   and ea.package_id = :package_id
	 order by t.start_date
        } {} {} {} c:/web/openacs-4/contrib/packages/events/www/admin/activity-oracle.xql}
dbqd.contrib.packages.events.www.admin.activity-orders-oracle.select_activity_members {dbqd.contrib.packages.events.www.admin.activity-orders-oracle.select_activity_members {
                select er.reg_id,
                       person.name(er.user_id) as name,
                       er.user_id,
                       pa.email,
                       er.reg_state,
                       to_char(ao.creation_date, :date_format) || ' ' || to_char(ao.creation_date, :time_format) as creation_date,
                       ae.event_id,
                       ev.venue_name,
                       CASE WHEN to_char(t.start_date, 'YYYY-MM-DD') = to_char(t.end_date, 'YYYY-MM-DD') 
	                    THEN to_char(t.start_date, :date_format) || ' (' || to_char(t.start_date, :time_format) || ' - ' || to_char(t.end_date, :time_format) || ')'
	                    ELSE to_char(t.start_date, :date_format) || ' ' || to_char(t.start_date, :time_format) || ' - ' || to_char(t.end_date, :date_format) || ' ' || to_char(t.end_date, :time_format)
	               END as timespan
                  from events_registrations er,
                       parties pa,
                       acs_objects ao,
                       acs_events ae,
                       events_venues ev,
                       events_events ee,
 		       timespans s,
	 	       time_intervals t
                 where er.user_id = pa.party_id
                   and ae.activity_id = :activity_id
                   and ae.event_id = er.event_id
                   and ae.event_id = ee.event_id
                   and ee.venue_id = ev.venue_id
                   and er.reg_state <> 'canceled'
                   and er.reg_id = ao.object_id
                   and ae.timespan_id = s.timespan_id
		   and s.interval_id = t.interval_id
              order by creation_date
		} {} {} {} c:/web/openacs-4/contrib/packages/events/www/admin/activity-orders-oracle.xql}
dbqd.contrib.packages.events.www.admin.activity-orders-oracle.select_specific_reg_type {dbqd.contrib.packages.events.www.admin.activity-orders-oracle.select_specific_reg_type {
                select er.reg_id,
                       person.name(er.user_id) as name,
                       er.user_id,
                       pa.email,
                       er.reg_state,
                       to_char(ao.creation_date, :date_format) || ' ' || to_char(ao.creation_date, :time_format) as creation_date,
                       ae.event_id,
                       ev.venue_name,
                       CASE WHEN to_char(t.start_date, 'YYYY-MM-DD') = to_char(t.end_date, 'YYYY-MM-DD') 
	                    THEN to_char(t.start_date, :date_format) || ' (' || to_char(t.start_date, :time_format) || ' - ' || to_char(t.end_date, :time_format) || ')'
	                    ELSE to_char(t.start_date, :date_format) || ' ' || to_char(t.start_date, :time_format) || ' - ' || to_char(t.end_date, :date_format) || ' ' || to_char(t.end_date, :time_format)
	               END as timespan
                  from events_registrations er,
                       parties pa,
                       acs_objects ao,
                       acs_events ae,
                       events_venues ev,
                       events_events ee,
 		       timespans s,
	 	       time_intervals t
                 where er.user_id = pa.party_id
                   and ae.activity_id = :activity_id
                   and ae.event_id = er.event_id
                   and ae.event_id = ee.event_id
                   and ee.venue_id = ev.venue_id
                   and er.reg_state = :specific_reg_type
                   and er.reg_id = ao.object_id
                   and ae.timespan_id = s.timespan_id
		   and s.interval_id = t.interval_id
              order by creation_date
		} {} {} {} c:/web/openacs-4/contrib/packages/events/www/admin/activity-orders-oracle.xql}
dbqd.contrib.packages.events.www.admin.activity-orders.select_activity_members {dbqd.contrib.packages.events.www.admin.activity-orders.select_activity_members {
                select er.reg_id,
                       person__name(er.user_id) as name,
                       er.user_id,
                       pa.email,
                       er.reg_state,
                       to_char(ao.creation_date, :date_format) || ' ' || to_char(ao.creation_date, :time_format) as creation_date,
                       ae.event_id,
                       ev.venue_name,
                       CASE WHEN to_char(t.start_date, 'YYYY-MM-DD') = to_char(t.end_date, 'YYYY-MM-DD') 
	                    THEN to_char(t.start_date, :date_format) || ' (' || to_char(t.start_date, :time_format) || ' - ' || to_char(t.end_date, :time_format) || ')'
	                    ELSE to_char(t.start_date, :date_format) || ' ' || to_char(t.start_date, :time_format) || ' - ' || to_char(t.end_date, :date_format) || ' ' || to_char(t.end_date, :time_format)
	               END as timespan
                  from events_registrations er,
                       parties pa,
                       acs_objects ao,
                       acs_events ae,
                       events_venues ev,
                       events_events ee,
 		       timespans s,
	 	       time_intervals t
                 where er.user_id = pa.party_id
                   and ae.activity_id = :activity_id
                   and ae.event_id = er.event_id
                   and ae.event_id = ee.event_id
                   and ee.venue_id = ev.venue_id
                   and er.reg_state <> 'canceled'
                   and er.reg_id = ao.object_id
                   and ae.timespan_id = s.timespan_id
		   and s.interval_id = t.interval_id
              order by creation_date
		} {} {} {} c:/web/openacs-4/contrib/packages/events/www/admin/activity-orders-postgresql.xql}
dbqd.contrib.packages.events.www.admin.activity-orders.select_specific_reg_type {dbqd.contrib.packages.events.www.admin.activity-orders.select_specific_reg_type {
                select er.reg_id,
                       person__name(er.user_id) as name,
                       er.user_id,
                       pa.email,
                       er.reg_state,
                       to_char(ao.creation_date, :date_format) || ' ' || to_char(ao.creation_date, :time_format) as creation_date,
                       ae.event_id,
                       ev.venue_name,
                       CASE WHEN to_char(t.start_date, 'YYYY-MM-DD') = to_char(t.end_date, 'YYYY-MM-DD') 
	                    THEN to_char(t.start_date, :date_format) || ' (' || to_char(t.start_date, :time_format) || ' - ' || to_char(t.end_date, :time_format) || ')'
	                    ELSE to_char(t.start_date, :date_format) || ' ' || to_char(t.start_date, :time_format) || ' - ' || to_char(t.end_date, :date_format) || ' ' || to_char(t.end_date, :time_format)
	               END as timespan
                  from events_registrations er,
                       parties pa,
                       acs_objects ao,
                       acs_events ae,
                       events_venues ev,
                       events_events ee,
 		       timespans s,
	 	       time_intervals t
                 where er.user_id = pa.party_id
                   and ae.activity_id = :activity_id
                   and ae.event_id = er.event_id
                   and ae.event_id = ee.event_id
                   and ee.venue_id = ev.venue_id
                   and er.reg_state = :specific_reg_type
                   and er.reg_id = ao.object_id
                   and ae.timespan_id = s.timespan_id
		   and s.interval_id = t.interval_id
              order by creation_date
		} {} {} {} c:/web/openacs-4/contrib/packages/events/www/admin/activity-orders-postgresql.xql}
dbqd.contrib.packages.events.www.admin.activity.select_org_roles {dbqd.contrib.packages.events.www.admin.activity.select_org_roles {
	select role, eor.role_id, public_role_p,
                CASE when public_role_p = 't' then ' (public role)'
                        ELSE ''
                END 
	  from events_organizer_roles eor, events_org_role_activity_map eoram
	 where eoram.activity_id = :activity_id
	   and eoram.role_id = eor.role_id
	 order by role 
        } {} {} {} c:/web/openacs-4/contrib/packages/events/www/admin/activity-postgresql.xql}
dbqd.contrib.packages.events.www.admin.activity.select_activity_events {dbqd.contrib.packages.events.www.admin.activity.select_activity_events {
	select CASE WHEN to_char(t.start_date, 'YYYY-MM-DD') = to_char(t.end_date, 'YYYY-MM-DD') 
	            THEN to_char(t.start_date, :date_format) || ' (' || to_char(t.start_date, :time_format) || ' - ' || to_char(t.end_date, :time_format) || ')'
	            ELSE to_char(t.start_date, :date_format) || ' ' || to_char(t.start_date, :time_format) || ' - ' || to_char(t.end_date, :date_format) || ' ' || to_char(t.end_date, :time_format)
	       END as timespan,
               coalesce(e.name, a.name) as name,	 
               e.event_id,
               v.city,
               v.usps_abbrev
	  from acs_activities a,
	       acs_events e,
	       events_activities ea,
	       events_events ee,
	       timespans s,
	       time_intervals t,
	       events_venues v
	 where e.timespan_id = s.timespan_id
	   and s.interval_id = t.interval_id
	   and e.activity_id = a.activity_id
	   and a.activity_id = ea.activity_id
	   and e.activity_id = :activity_id
	   and e.event_id = ee.event_id
	   and v.venue_id = ee.venue_id
	   and ee.available_p = 't'
	   and ea.package_id = :package_id
	 order by t.start_date
        } {} {} {} c:/web/openacs-4/contrib/packages/events/www/admin/activity-postgresql.xql}
dbqd.contrib.packages.events.www.admin.activity.select_activity_properties {dbqd.contrib.packages.events.www.admin.activity.select_activity_properties {
	select a.name, 
	       a.description, 
	       ae.available_p,
	       ae.detail_url,
	       ae.default_contact_user_id
	  from acs_activities a, events_activities ae
	 where a.activity_id = :activity_id
	   and a.activity_id = ae.activity_id
        } {} {} {} c:/web/openacs-4/contrib/packages/events/www/admin/activity.xql}
dbqd.contrib.packages.events.www.admin.activity.custom_fields_old {dbqd.contrib.packages.events.www.admin.activity.custom_fields_old {
	select column_name, pretty_name, column_type, column_actual_type,
	       column_extra, sort_key
	  from events_activity_fields
	 where activity_id = :activity_id
	 order by sort_key
        } {} {} {} c:/web/openacs-4/contrib/packages/events/www/admin/activity.xql}
dbqd.contrib.packages.events.www.admin.activity.select_custom_fields {dbqd.contrib.packages.events.www.admin.activity.select_custom_fields {
	select edaam.attribute_id, aa.attribute_name as name,
	       aa.sort_order as after, aa.datatype, eac.category_name,
	       eac.category_id
	  from events_def_actvty_attr_map edaam, acs_attributes aa,
	       events_attr_categories eac, events_attr_category_map eacm
	 where edaam.activity_id = :activity_id
	   and edaam.attribute_id = aa.attribute_id
	   and eacm.attribute_id = aa.attribute_id
	   and eacm.category_id = eac.category_id
	 order by eac.category_name, aa.sort_order asc
        } {} {} {} c:/web/openacs-4/contrib/packages/events/www/admin/activity.xql}
dbqd.contrib.packages.events.www.admin.event-add-2-oracle.product_insert {dbqd.contrib.packages.events.www.admin.event-add-2-oracle.product_insert {

	    begin
	        :1 := ec_product.new(
		creation_user => :user_id,
		creation_ip => :peeraddr,
		context_id => :event_id,
		product_name => '$activity_info(name) $date_time',
		price => :event_price,
		sku => 'event_$event_id',
		one_line_description => '$activity_info(name); $date_time; $venue_info(city), $venue_info(usps_abbrev)',
		detailed_description => '$activity_info(description)', 
		search_keywords => '$activity_info(name), $venue_info(city), $venue_info(usps_abbrev), $venue_info(venue_name)', 
		present_p => 't', 
		stock_status => 'i',
		email_on_purchase_list => :email, 
		url => '$activity_info(detail_url)',
		no_shipping_avail_p => 't',
		active_p => 't'
	    );
	    end;
      
	} {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/packages/events/www/admin/event-add-2-oracle.xql}
dbqd.contrib.packages.events.www.admin.event-add-2-oracle.mapping_insert {dbqd.contrib.packages.events.www.admin.event-add-2-oracle.mapping_insert {
	insert into ec_category_product_map values (:product_id, :category_id, null, sysdate, :user_id, :peeraddr)
	} {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/packages/events/www/admin/event-add-2-oracle.xql}
dbqd.contrib.packages.events.www.admin.event-add-2.product_insert {dbqd.contrib.packages.events.www.admin.event-add-2.product_insert {

	select ec_product__new(
	null,
	:user_id,
	:event_id,
	'$activity_info(name) $date_time', 
	:event_price, 
	'event_$event_id',
	'$activity_info(name); $date_time; $venue_info(city), $venue_info(usps_abbrev)', 
	'$activity_info(description)', 
	'$activity_info(name), $venue_info(city), $venue_info(usps_abbrev), $venue_info(venue_name)', 
	't', 
	'i',
	null, 
	to_date(current_timestamp, 'YYYY-MM-DD'), 
	null,
	null,
	:peeraddr
	)

      } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/packages/events/www/admin/event-add-2-postgresql.xql}
dbqd.contrib.packages.events.www.admin.event-add-2.mapping_insert {dbqd.contrib.packages.events.www.admin.event-add-2.mapping_insert {
	insert into ec_category_product_map values (:product_id, :category_id, null, current_timestamp, :user_id, :peeraddr)
	} {} {} {postgresql 7.1} c:/web/openacs-4/contrib/packages/events/www/admin/event-add-2-postgresql.xql}
dbqd.contrib.packages.events.www.admin.event-add-2.select_time_now {dbqd.contrib.packages.events.www.admin.event-add-2.select_time_now {
	select to_char(sysdate, 'MONTH DD YYYY HH12:MI AM') from dual
	} {} {} {} c:/web/openacs-4/contrib/packages/events/www/admin/event-add-2.xql}
dbqd.contrib.packages.events.www.admin.event-add-2.select_email {dbqd.contrib.packages.events.www.admin.event-add-2.select_email {
	 select email from parties where party_id=:user_id
	} {} {} {} c:/web/openacs-4/contrib/packages/events/www/admin/event-add-2.xql}
dbqd.contrib.packages.events.www.admin.event-add-2.select_contact_email {dbqd.contrib.packages.events.www.admin.event-add-2.select_contact_email {
	select email as contact_email from parties where party_id=:contact_user_id
	} {} {} {} c:/web/openacs-4/contrib/packages/events/www/admin/event-add-2.xql}
dbqd.contrib.packages.events.www.admin.event-add-2.contact_update {dbqd.contrib.packages.events.www.admin.event-add-2.contact_update {
	update ec_products set email_on_purchase_list=:email, url='$activity_info(detail_url)',no_shipping_avail_p='t', active_p='t' where product_id=:product_id
	} {} {} {} c:/web/openacs-4/contrib/packages/events/www/admin/event-add-2.xql}
dbqd.contrib.packages.events.www.admin.event-add.select_venues {dbqd.contrib.packages.events.www.admin.event-add.select_venues {
	select venue_name, venue_id
	  from events_venues
        } {} {} {} c:/web/openacs-4/contrib/packages/events/www/admin/event-add.xql}
dbqd.contrib.packages.events.www.admin.event-edit-oracle.select_ecommerce_info {dbqd.contrib.packages.events.www.admin.event-edit-oracle.select_ecommerce_info {
	select ec_products.product_id, ec_products.price, ec_category_product_map.category_id, min(sale_price) as sale_price from acs_objects, ec_products, ec_category_product_map, ec_sale_prices_current where acs_objects.context_id=:event_id and acs_objects.object_id=ec_products.product_id and ec_category_product_map.product_id(+)=ec_products.product_id and ec_sale_prices_current.product_id(+)=ec_products.product_id group by ec_products.product_id, ec_products.price, ec_category_product_map.category_id
	} {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/packages/events/www/admin/event-edit-oracle.xql}
dbqd.contrib.packages.events.www.admin.event-edit-oracle.select_product_id {dbqd.contrib.packages.events.www.admin.event-edit-oracle.select_product_id {
	select ec_products.product_id from acs_objects, ec_products, ec_category_product_map where acs_objects.context_id=:event_id and acs_objects.object_id=ec_products.product_id and ec_category_product_map.product_id(+)=ec_products.product_id
	} {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/packages/events/www/admin/event-edit-oracle.xql}
dbqd.contrib.packages.events.www.admin.event-edit-oracle.product_update {dbqd.contrib.packages.events.www.admin.event-edit-oracle.product_update {
	update ec_products
	set product_name='$activity_info(name) $date_time',
	sku='event_$event_id',
	one_line_description='$activity_info(name); $date_time; $pretty_location',
	detailed_description='$activity_info(description)',
	email_on_purchase_list=:email,
	search_keywords='$activity_info(name), $venue_info(venue_name), $pretty_location',
	url='$activity_info(detail_url)',
	price=:event_price,
	no_shipping_avail_p='t',
	present_p='$event_info(available_p)',
	available_date=sysdate,
	$audit_update
	where product_id=:product_id
	} {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/packages/events/www/admin/event-edit-oracle.xql}
dbqd.contrib.packages.events.www.admin.event-edit-oracle.audit_update_sql {dbqd.contrib.packages.events.www.admin.event-edit-oracle.audit_update_sql {
	last_modified=sysdate, last_modifying_user=:user_id, modified_ip_address=:peeraddr
	} {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/packages/events/www/admin/event-edit-oracle.xql}
dbqd.contrib.packages.events.www.admin.event-edit-oracle.mapping_insert {dbqd.contrib.packages.events.www.admin.event-edit-oracle.mapping_insert {
	insert into ec_category_product_map values (:product_id, :category_id, null, sysdate, :user_id, :peeraddr)
	} {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/packages/events/www/admin/event-edit-oracle.xql}
dbqd.contrib.packages.events.www.admin.event-edit-oracle.product_insert {dbqd.contrib.packages.events.www.admin.event-edit-oracle.product_insert {

	    begin
	        :1 := ec_product.new(
		creation_user => :user_id,
		creation_ip => :peeraddr,
		context_id => :event_id,
		product_name => '$activity_info(name) $date_time',
		price => :event_price,
		sku => 'event_$event_id',
		one_line_description => '$activity_info(name); $date_time; $pretty_location',
		detailed_description => '$activity_info(description)', 
		search_keywords => '$activity_info(name), $venue_info(venue_name), $pretty_location', 
		present_p => 't', 
		stock_status => 'i',
		email_on_purchase_list => :email, 
		url => '$activity_info(detail_url)',
		no_shipping_avail_p => 't',
		active_p => 't'
	    );
	    end;
      
	} {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/packages/events/www/admin/event-edit-oracle.xql}
dbqd.contrib.packages.events.www.admin.event-edit-oracle.product_delete {dbqd.contrib.packages.events.www.admin.event-edit-oracle.product_delete {     
      begin
      ec_product.delete(:product_id);
      end;  
      } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/packages/events/www/admin/event-edit-oracle.xql}
dbqd.contrib.packages.events.www.admin.event-edit.select_ecommerce_info {dbqd.contrib.packages.events.www.admin.event-edit.select_ecommerce_info {
	select ec_products.product_id, ec_products.price, ec_category_product_map.category_id, min(sale_price) as sale_price from acs_objects, ec_products left join ec_category_product_map on ec_category_product_map.product_id=ec_products.product_id left join ec_sale_prices_current on ec_sale_prices_current.product_id=ec_products.product_id where acs_objects.context_id=:event_id and acs_objects.object_id=ec_products.product_id group by ec_products.product_id, ec_products.price, ec_category_product_map.category_id
	} {} {} {postgresql 7.1} c:/web/openacs-4/contrib/packages/events/www/admin/event-edit-postgresql.xql}
dbqd.contrib.packages.events.www.admin.event-edit.select_product_id {dbqd.contrib.packages.events.www.admin.event-edit.select_product_id {
	select ec_products.product_id from acs_objects, ec_products left join ec_category_product_map on ec_category_product_map.product_id=ec_products.product_id where acs_objects.context_id=:event_id and acs_objects.object_id=ec_products.product_id
	} {} {} {postgresql 7.1} c:/web/openacs-4/contrib/packages/events/www/admin/event-edit-postgresql.xql}
dbqd.contrib.packages.events.www.admin.event-edit.product_update {dbqd.contrib.packages.events.www.admin.event-edit.product_update {
	update ec_products
	set product_name='$activity_info(name) $date_time',
	sku='event_$event_id',
	one_line_description='$activity_info(name); $date_time; $pretty_location',
	detailed_description='$activity_info(description)',
	email_on_purchase_list=:email,
	search_keywords='$activity_info(name), $venue_info(venue_name), $pretty_location',
	url='$activity_info(detail_url)',
	price=:event_price,
	no_shipping_avail_p='t',
	present_p='$event_info(available_p)',
	available_date=now(),
	$audit_update
	where product_id=:product_id
	} {} {} {postgresql 7.1} c:/web/openacs-4/contrib/packages/events/www/admin/event-edit-postgresql.xql}
dbqd.contrib.packages.events.www.admin.event-edit.audit_update_sql {dbqd.contrib.packages.events.www.admin.event-edit.audit_update_sql {
	last_modified=current_timestamp, last_modifying_user=:user_id, modified_ip_address=:peeraddr
	} {} {} {postgresql 7.1} c:/web/openacs-4/contrib/packages/events/www/admin/event-edit-postgresql.xql}
dbqd.contrib.packages.events.www.admin.event-edit.mapping_insert {dbqd.contrib.packages.events.www.admin.event-edit.mapping_insert {
	insert into ec_category_product_map values (:product_id, :category_id, null, current_timestamp, :user_id, :peeraddr)
	} {} {} {postgresql 7.1} c:/web/openacs-4/contrib/packages/events/www/admin/event-edit-postgresql.xql}
dbqd.contrib.packages.events.www.admin.event-edit.product_insert {dbqd.contrib.packages.events.www.admin.event-edit.product_insert {

	select ec_product__new(
	null,
	:user_id,
	:event_id,
	'$activity_info(name) $date_time', 
	:event_price, 
	'event_$event_id',
	'$activity_info(name); $date_time; $pretty_location', 
	'$activity_info(description)', 
	'$activity_info(name), $venue_info(venue_name), $pretty_location', 
	't', 
	'i',
	null, 
	to_date(current_timestamp, 'YYYY-MM-DD'),
	null,
	null, 
	:peeraddr
	)

      } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/packages/events/www/admin/event-edit-postgresql.xql}
dbqd.contrib.packages.events.www.admin.event-edit.product_delete {dbqd.contrib.packages.events.www.admin.event-edit.product_delete {
      select ec_product__delete(:product_id)
      } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/packages/events/www/admin/event-edit-postgresql.xql}
dbqd.contrib.packages.events.www.admin.event-edit.event_exists {dbqd.contrib.packages.events.www.admin.event-edit.event_exists {
	select 1
	  from events_events
	 where event_id = :event_id
        } {} {} {} c:/web/openacs-4/contrib/packages/events/www/admin/event-edit.xql}
dbqd.contrib.packages.events.www.admin.event-edit.select_email {dbqd.contrib.packages.events.www.admin.event-edit.select_email {
	 select email from parties where party_id=:user_id
	} {} {} {} c:/web/openacs-4/contrib/packages/events/www/admin/event-edit.xql}
dbqd.contrib.packages.events.www.admin.event-edit.select_contact_email {dbqd.contrib.packages.events.www.admin.event-edit.select_contact_email {
	select email as contact_email from parties where party_id=:contact_user_id
	} {} {} {} c:/web/openacs-4/contrib/packages/events/www/admin/event-edit.xql}
dbqd.contrib.packages.events.www.admin.event-edit.contact_update {dbqd.contrib.packages.events.www.admin.event-edit.contact_update {
	update ec_products set email_on_purchase_list=:email, url='$activity_info(detail_url)',no_shipping_avail_p='t', active_p='t' where product_id=:product_id
	} {} {} {} c:/web/openacs-4/contrib/packages/events/www/admin/event-edit.xql}
dbqd.contrib.packages.events.www.admin.event-edit.mapping_remove {dbqd.contrib.packages.events.www.admin.event-edit.mapping_remove {
	delete from ec_category_product_map where product_id=:product_id
	} {} {} {} c:/web/openacs-4/contrib/packages/events/www/admin/event-edit.xql}
dbqd.contrib.packages.events.www.admin.event-edit.delete_connecting {dbqd.contrib.packages.events.www.admin.event-edit.delete_connecting {
	delete from events_venues_conn_used_map where event_id=:event_id and package_id=[ad_conn package_id]
	} {} {} {} c:/web/openacs-4/contrib/packages/events/www/admin/event-edit.xql}
dbqd.contrib.packages.events.www.admin.event-edit.insert_connecting {dbqd.contrib.packages.events.www.admin.event-edit.insert_connecting {
	insert into events_venues_conn_used_map values (:event_id, :venue_id, [lindex $event_connecting $i], [ad_conn package_id])
	} {} {} {} c:/web/openacs-4/contrib/packages/events/www/admin/event-edit.xql}
dbqd.contrib.packages.events.www.admin.event-edit.select_connecting {dbqd.contrib.packages.events.www.admin.event-edit.select_connecting {
	select connected_venue_id from events_venues_conn_used_map where event_id=:event_id and venue_id=$event_info(venue_id) and package_id=[ad_conn package_id] and connected_venue_id=:venue_id
	} {} {} {} c:/web/openacs-4/contrib/packages/events/www/admin/event-edit.xql}
dbqd.contrib.packages.events.www.admin.event-edit.valid_venue {dbqd.contrib.packages.events.www.admin.event-edit.valid_venue {
	select venue_id from events_venues where venue_id=:venue_id and $connecting_venue_id in ([events::venue::connecting -venue_id $venue_id -package_id [ad_conn package_id] -sql_p "t"])
	} {} {} {} c:/web/openacs-4/contrib/packages/events/www/admin/event-edit.xql}
dbqd.contrib.packages.events.www.admin.event-oracle.select_org_roles {dbqd.contrib.packages.events.www.admin.event-oracle.select_org_roles {
		select eo.role, eo.user_id, eo.role_id, eo.event_id,
		       decode(eo.public_role_p, 't', '(public role)', '') as public_role_p,
		       p.first_names || ' ' || p.last_name as organizer_name
		  from events_organizers eo, users u, persons p
		 where eo.user_id = u.user_id(+)
		   and p.person_id(+) = u.user_id
		   and eo.event_id = :event_id
		 order by role
		} {} {} {} c:/web/openacs-4/contrib/packages/events/www/admin/event-oracle.xql}
dbqd.contrib.packages.events.www.admin.event-orders-oracle.select_event_members {dbqd.contrib.packages.events.www.admin.event-orders-oracle.select_event_members {
                select er.reg_id, person.name(er.user_id) as name, er.user_id,
                       pa.email, er.reg_state, ao.creation_date
                  from events_registrations er, parties pa, acs_objects ao 
                 where er.user_id = pa.party_id
                   and er.event_id = :event_id
                   and reg_state <> 'canceled'
                   and er.reg_id = ao.object_id
		} {} {} {} c:/web/openacs-4/contrib/packages/events/www/admin/event-orders-oracle.xql}
dbqd.contrib.packages.events.www.admin.event-orders-oracle.select_specific_reg_type {dbqd.contrib.packages.events.www.admin.event-orders-oracle.select_specific_reg_type {
                select er.reg_id, person.name(er.user_id) as name, er.user_id,
                       pa.email, er.reg_state, ao.creation_date
                  from events_registrations er, parties pa, acs_objects ao
                 where er.user_id = pa.party_id
                   and er.event_id = :event_id
                   and reg_state = :specific_reg_type
                   and er.reg_id = ao.object_id
		} {} {} {} c:/web/openacs-4/contrib/packages/events/www/admin/event-orders-oracle.xql}
dbqd.contrib.packages.events.www.admin.event-orders.select_event_members {dbqd.contrib.packages.events.www.admin.event-orders.select_event_members {
                select er.reg_id, person__name(er.user_id) as name, er.user_id, 
                       pa.email, er.reg_state, ao.creation_date
                  from events_registrations er, parties pa, acs_objects ao 
                 where er.user_id = pa.party_id
                   and er.event_id = :event_id
                   and reg_state <> 'canceled'
                   and er.reg_id = ao.object_id
		} {} {} {} c:/web/openacs-4/contrib/packages/events/www/admin/event-orders-postgresql.xql}
dbqd.contrib.packages.events.www.admin.event-orders.select_specific_reg_type {dbqd.contrib.packages.events.www.admin.event-orders.select_specific_reg_type {
                select er.reg_id, person__name(er.user_id) as name, er.user_id,
                       pa.email, er.reg_state, ao.creation_date
                  from events_registrations er, parties pa, acs_objects ao
                 where er.user_id = pa.party_id
                   and er.event_id = :event_id
                   and reg_state = :specific_reg_type
                   and er.reg_id = ao.object_id
		} {} {} {} c:/web/openacs-4/contrib/packages/events/www/admin/event-orders-postgresql.xql}
dbqd.contrib.packages.events.www.admin.event.select_org_roles {dbqd.contrib.packages.events.www.admin.event.select_org_roles {
		 select eo.role, eo.user_id, eo.role_id, eo.event_id,
                                CASE WHEN eo.public_role_p THEN '(public role)'
                                     ELSE ''
                                END as public_role_p,
		       p.first_names || ' ' || p.last_name as organizer_name
		  from
		     events_organizers eo left join users u on (eo.user_id = u.user_id),
		     persons p
                 where eo.event_id = :event_id
                   and p.person_id = u.user_id
                 order by role
 		} {} {} {} c:/web/openacs-4/contrib/packages/events/www/admin/event-postgresql.xql}
dbqd.contrib.packages.events.www.admin.event-toggle-available-p-oracle.toggle_active_p_update {dbqd.contrib.packages.events.www.admin.event-toggle-available-p-oracle.toggle_active_p_update {
		update ec_products 
		set active_p = '$event_info(available_p)', last_modified = sysdate, last_modifying_user = :user_id, 
		modified_ip_address = :peeraddr
		where product_id = :product_id
		} {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/packages/events/www/admin/event-toggle-available-p-oracle.xql}
dbqd.contrib.packages.events.www.admin.event-toggle-available-p.toggle_active_p_update {dbqd.contrib.packages.events.www.admin.event-toggle-available-p.toggle_active_p_update {
		update ec_products 
		set active_p = '$event_info(available_p)',
		last_modified = current_timestamp,
		last_modifying_user = :user_id,
		modified_ip_address = :peeraddr
		where product_id = :product_id
		} {} {} {postgresql 7.1} c:/web/openacs-4/contrib/packages/events/www/admin/event-toggle-available-p-postgresql.xql}
dbqd.contrib.packages.events.www.admin.event-toggle-available-p.select_ecommerce_info {dbqd.contrib.packages.events.www.admin.event-toggle-available-p.select_ecommerce_info {
		select ec_products.product_id from acs_objects, ec_products where acs_objects.context_id=:event_id and acs_objects.object_id=ec_products.product_id
		} {} {} {} c:/web/openacs-4/contrib/packages/events/www/admin/event-toggle-available-p.xql}
dbqd.contrib.packages.events.www.admin.event.select_event_organizers_count {dbqd.contrib.packages.events.www.admin.event.select_event_organizers_count {
		select count(*)
		  from events_organizers
		 where event_id = :event_id
		   and user_id is not null
		} {} {} {} c:/web/openacs-4/contrib/packages/events/www/admin/event.xql}
dbqd.contrib.packages.events.www.admin.event.select_event_organizers_email {dbqd.contrib.packages.events.www.admin.event.select_event_organizers_email {
		select distinct users.priv_email, users.user_id
		  from users, events_organizers eo, events_org_role_event_map eorem
		 where eorem.event_id = :event_id
		   and eorem.role_id = eo.role_id
		   and users.user_id = eo.user_id
		 order by users.user_id
		} {} {} {} c:/web/openacs-4/contrib/packages/events/www/admin/event.xql}
dbqd.contrib.packages.events.www.admin.event.select_custom_fields {dbqd.contrib.packages.events.www.admin.event.select_custom_fields {
		select eaam.attribute_id, aa.attribute_name as name,
	       	       aa.sort_order as after, aa.datatype, 
		       eac.category_name, eac.category_id
		  from events_event_attr_map eaam, acs_attributes aa,
		       events_attr_categories eac, events_attr_category_map eacm
		 where eaam.event_id = :event_id
		   and eaam.attribute_id = aa.attribute_id
		   and eacm.attribute_id = aa.attribute_id
		   and eacm.category_id = eac.category_id
		 order by eac.category_name, aa.sort_order asc
	        } {} {} {} c:/web/openacs-4/contrib/packages/events/www/admin/event.xql}
dbqd.contrib.packages.events.www.admin.event.select_event_fields_old {dbqd.contrib.packages.events.www.admin.event.select_event_fields_old {
		select column_name, pretty_name, column_type, column_actual_type,
		       column_extra, sort_key
		  from events_event_fields
		 where event_id = :event_id
		 order by sort_key 
		} {} {} {} c:/web/openacs-4/contrib/packages/events/www/admin/event.xql}
dbqd.contrib.packages.events.www.admin.field-add.select_available_activity_fields {dbqd.contrib.packages.events.www.admin.field-add.select_available_activity_fields {
	select eac.category_name || ' >> ' || aa.attribute_name || ' ( datatype : ' || aa.datatype || ' )' as name,
	       aa.attribute_id
	  from acs_attributes aa, events_attr_categories eac, 
	       events_attr_category_map eacm
	 where eacm.attribute_id = aa.attribute_id
	   and eacm.category_id = eac.category_id
	   and aa.attribute_id not in (select attribute_id
				     from events_def_actvty_attr_map
				    where activity_id = :activity_id)
	 order by name asc
        } {} {} {} c:/web/openacs-4/contrib/packages/events/www/admin/field-add.xql}
dbqd.contrib.packages.events.www.admin.field-add.select_available_event_fields {dbqd.contrib.packages.events.www.admin.field-add.select_available_event_fields {
	select eac.category_name || ' >> ' || aa.attribute_name || ' ( datatype : ' || aa.datatype || ' )' as name,
	       aa.attribute_id
	  from acs_attributes aa, events_attr_categories eac, 
	       events_attr_category_map eacm
	 where eacm.attribute_id = aa.attribute_id
	   and eacm.category_id = eac.category_id
	   and aa.attribute_id not in (select attribute_id
				     from events_event_attr_map
				    where event_id = :event_id)
	 order by name asc
        } {} {} {} c:/web/openacs-4/contrib/packages/events/www/admin/field-add.xql}
dbqd.contrib.packages.events.www.admin.field-create.select_attribute_datatypes {dbqd.contrib.packages.events.www.admin.field-create.select_attribute_datatypes {
	select datatype, datatype
	  from acs_datatypes
        } {} {} {} c:/web/openacs-4/contrib/packages/events/www/admin/field-create.xql}
dbqd.contrib.packages.events.www.admin.field-create.select_categories {dbqd.contrib.packages.events.www.admin.field-create.select_categories {
	select  category_name, category_id
	  from events_attr_categories
        } {} {} {} c:/web/openacs-4/contrib/packages/events/www/admin/field-create.xql}
dbqd.contrib.packages.events.www.admin.field-edit.select_attribute_datatypes {dbqd.contrib.packages.events.www.admin.field-edit.select_attribute_datatypes {
	select datatype, datatype
	  from acs_datatypes
        } {} {} {} c:/web/openacs-4/contrib/packages/events/www/admin/field-edit.xql}
dbqd.contrib.packages.events.www.admin.field-edit.select_categories {dbqd.contrib.packages.events.www.admin.field-edit.select_categories {
	select  category_name, category_id
	  from events_attr_categories
        } {} {} {} c:/web/openacs-4/contrib/packages/events/www/admin/field-edit.xql}
dbqd.contrib.packages.events.www.admin.field.select_activity_custom_field_mappings {dbqd.contrib.packages.events.www.admin.field.select_activity_custom_field_mappings {
	select aa.activity_id, aa.name
          from events_activities ea, events_def_actvty_attr_map edaam,
		acs_activities aa
         where aa.activity_id = ea.activity_id
           and ea.activity_id = edaam.activity_id
           and edaam.attribute_id = :attribute_id
	 order by aa.name asc
        } {} {} {} c:/web/openacs-4/contrib/packages/events/www/admin/field.xql}
dbqd.contrib.packages.events.www.admin.field.select_event_custom_field_mappings {dbqd.contrib.packages.events.www.admin.field.select_event_custom_field_mappings {
	select ee.event_id, aa.name,
	       to_char(t.start_date, 'fmMonth DD, YYYY, HH12:MI PM') as pretty_start_date,
	       to_char(t.end_date, 'fmMonth DD, YYYY, HH12:MI PM') as pretty_end_date
          from events_events ee, events_event_attr_map eeam,
               acs_events ae, acs_activities aa, timespans s, time_intervals t
         where ee.event_id = eeam.event_id
           and eeam.event_id = ae.event_id
	   and aa.activity_id = ae.activity_id
	   and ae.timespan_id = s.timespan_id
	   and s.interval_id = t.interval_id
	   and eeam.attribute_id = :attribute_id
	 order by aa.name asc
        } {} {} {} c:/web/openacs-4/contrib/packages/events/www/admin/field.xql}
dbqd.contrib.packages.events.www.admin.fields.select_custom_fields {dbqd.contrib.packages.events.www.admin.fields.select_custom_fields {
		select aa.attribute_id, aa.attribute_name as name,
	       	       aa.sort_order as after, aa.datatype, 
		       eac.category_name, eac.category_id
		  from acs_attributes aa, events_attr_categories eac, 
		       events_attr_category_map eacm
		 where aa.attribute_id = eacm.attribute_id
		   and eacm.category_id = eac.category_id
		 order by eac.category_name, aa.sort_order asc
	        } {} {} {} c:/web/openacs-4/contrib/packages/events/www/admin/fields.xql}
dbqd.contrib.packages.events.www.admin.index-oracle.select_available_events_and_locations {dbqd.contrib.packages.events.www.admin.index-oracle.select_available_events_and_locations {
	       select CASE WHEN to_char(t.start_date, 'YYYY-MM-DD') = to_char(t.end_date, 'YYYY-MM-DD') 
	                   THEN to_char(t.start_date, :date_format) || ' (' || to_char(t.start_date, :time_format) || ' - ' || to_char(t.end_date, :time_format) || ')'
	                   ELSE to_char(t.start_date, :date_format) || ' ' || to_char(t.start_date, :time_format) || ' - ' || to_char(t.end_date, :date_format) || ' ' || to_char(t.end_date, :time_format)
	              END as timespan,
		      nvl(e.name, a.name) as name,
		      e.event_id,
		      v.city
		from  acs_activities a,
		      acs_events e,
		      events_activities ea,
		      events_events ee,
		      timespans s,
		      time_intervals t,
		      events_venues v
		where e.timespan_id = s.timespan_id
		  and s.interval_id = t.interval_id
		  and e.activity_id = a.activity_id
		  and a.activity_id = ea.activity_id
		  and e.event_id = ee.event_id
		  and v.venue_id = ee.venue_id
		  and ee.available_p = 't'
		  and ea.package_id = :package_id
        } {} {} {} c:/web/openacs-4/contrib/packages/events/www/admin/index-oracle.xql}
dbqd.contrib.packages.events.www.admin.index.select_available_events_and_locations {dbqd.contrib.packages.events.www.admin.index.select_available_events_and_locations {
	       select CASE WHEN to_char(t.start_date, 'YYYY-MM-DD') = to_char(t.end_date, 'YYYY-MM-DD') 
	                   THEN to_char(t.start_date, :date_format) || ' (' || to_char(t.start_date, :time_format) || ' - ' || to_char(t.end_date, :time_format) || ')'
	                   ELSE to_char(t.start_date, :date_format) || ' ' || to_char(t.start_date, :time_format) || ' - ' || to_char(t.end_date, :date_format) || ' ' || to_char(t.end_date, :time_format)
	              END as timespan,
		      coalesce(e.name, a.name) as name,
		      e.event_id,
		      v.city
		from  acs_activities a,
		      acs_events e,
		      events_activities ea,
		      events_events ee,
		      timespans s,
		      time_intervals t,
		      events_venues v
		where e.timespan_id = s.timespan_id
		  and s.interval_id = t.interval_id
		  and e.activity_id = a.activity_id
		  and a.activity_id = ea.activity_id
		  and e.event_id = ee.event_id
		  and v.venue_id = ee.venue_id
		  and ee.available_p = 't'
		  and ea.package_id = :package_id
        } {} {} {} c:/web/openacs-4/contrib/packages/events/www/admin/index-postgresql.xql}
dbqd.contrib.packages.events.www.admin.one-role.select_activity_role_mappings {dbqd.contrib.packages.events.www.admin.one-role.select_activity_role_mappings {
	select aa.activity_id, aa.name
          from events_activities ea, events_org_role_activity_map eoram,
		acs_activities aa
         where aa.activity_id = ea.activity_id
           and ea.activity_id = eoram.activity_id
           and eoram.role_id = :role_id
	 order by aa.name asc
        } {} {} {} c:/web/openacs-4/contrib/packages/events/www/admin/one-role.xql}
dbqd.contrib.packages.events.www.admin.one-role.select_event_role_mappings {dbqd.contrib.packages.events.www.admin.one-role.select_event_role_mappings {
	select ee.event_id, aa.name,
	       to_char(t.start_date, 'Month DD, YYYY HH12:MI PM') as pretty_start_date,
	       to_char(t.end_date, 'Month DD, YYYY HH12:MI PM') as pretty_end_date
          from events_events ee, events_org_role_event_map eorem,
               acs_events ae, acs_activities aa, timespans s, time_intervals t
         where ee.event_id = eorem.event_id
           and eorem.event_id = ae.event_id
	   and aa.activity_id = ae.activity_id
	   and ae.timespan_id = s.timespan_id
	   and s.interval_id = t.interval_id
	   and eorem.role_id = :role_id
	 order by aa.name asc
        } {} {} {} c:/web/openacs-4/contrib/packages/events/www/admin/one-role.xql}
dbqd.contrib.packages.events.www.admin.order-history-person.select_reg_history {dbqd.contrib.packages.events.www.admin.order-history-person.select_reg_history {
select CASE WHEN to_char(t.start_date, 'YYYY-MM-DD') = to_char(t.end_date, 'YYYY-MM-DD') 
	    THEN to_char(t.start_date, :date_format) || ' (' || to_char(t.start_date, :time_format) || ' - ' || to_char(t.end_date, :time_format) || ')'
	    ELSE to_char(t.start_date, :date_format) || ' ' || to_char(t.start_date, :time_format) || ' - ' || to_char(t.end_date, :date_format) || ' ' || to_char(t.end_date, :time_format)
       END as timespan,
       aa.name, ae.activity_id, ae.event_id, reg_id, ev.venue_name, er.reg_state
  from acs_events ae,
       acs_activities aa,
       events_registrations er,
       timespans s,
       time_intervals t,
       events_venues ev,
       events_events ee,
       events_activities ea
 where er.user_id = :user_id
   and er.event_id = ae.event_id
   and ae.activity_id = aa.activity_id
   and ae.timespan_id = s.timespan_id
   and s.interval_id = t.interval_id
   and ee.event_id = ae.event_id
   and ee.venue_id = ev.venue_id
   and aa.activity_id = ea.activity_id
   and ea.package_id = :package_id
		} {} {} {} c:/web/openacs-4/contrib/packages/events/www/admin/order-history-person.xql}
dbqd.contrib.packages.events.www.admin.order-history-person.select_user_info {dbqd.contrib.packages.events.www.admin.order-history-person.select_user_info {
                select first_names || ' ' || last_name as user_name, email as user_email
                  from persons, parties 
                 where person_id = :user_id 
                   and person_id = party_id
		} {} {} {} c:/web/openacs-4/contrib/packages/events/www/admin/order-history-person.xql}
dbqd.contrib.packages.events.www.admin.reg-cancel.reg_exists {dbqd.contrib.packages.events.www.admin.reg-cancel.reg_exists {
		select 1
		  from events_registrations
		 where reg_id = :reg_id
	        } {} {} {} c:/web/openacs-4/contrib/packages/events/www/admin/reg-cancel.xql}
dbqd.contrib.packages.events.www.admin.reg-view.reg_exists {dbqd.contrib.packages.events.www.admin.reg-view.reg_exists {
		select 1
		  from events_registrations
		 where reg_id = :reg_id
	        } {} {} {} c:/web/openacs-4/contrib/packages/events/www/admin/reg-view.xql}
dbqd.contrib.packages.events.www.admin.role-add-oracle.select_available_activity_roles {dbqd.contrib.packages.events.www.admin.role-add-oracle.select_available_activity_roles {
	select role || ' ' ||
	       decode(public_role_p, 't', ' (public role)', '') as public_role_p,
	       role_id
	  from events_organizer_roles
	 where role_id not in
	       (select role_id 
		  from events_org_role_activity_map 
		 where activity_id = :activity_id)
        } {} {} {} c:/web/openacs-4/contrib/packages/events/www/admin/role-add-oracle.xql}
dbqd.contrib.packages.events.www.admin.role-add-oracle.select_available_event_roles {dbqd.contrib.packages.events.www.admin.role-add-oracle.select_available_event_roles {
	select role || ' ' ||
	       decode(public_role_p, 't', ' (public role)', '') as public_role_p,
	       role_id
	  from events_organizer_roles
	 where role_id not in
	       (select role_id 
		  from events_org_role_event_map 
		 where event_id = :event_id)
        } {} {} {} c:/web/openacs-4/contrib/packages/events/www/admin/role-add-oracle.xql}
dbqd.contrib.packages.events.www.admin.role-add.select_available_activity_roles {dbqd.contrib.packages.events.www.admin.role-add.select_available_activity_roles {
	select role || '' || CASE WHEN public_role_p THEN '  (public role)' ELSE '' END,
	       role_id
	  from events_organizer_roles
	 where role_id not in
	       (select role_id 
		  from events_org_role_activity_map 
		 where activity_id = :activity_id)
        } {} {} {} c:/web/openacs-4/contrib/packages/events/www/admin/role-add-postgresql.xql}
dbqd.contrib.packages.events.www.admin.role-add.select_available_event_roles {dbqd.contrib.packages.events.www.admin.role-add.select_available_event_roles {
	select role || '' || CASE WHEN public_role_p = 't' THEN '  (public role)' ELSE '' END,
	       role_id
	  from events_organizer_roles
	 where role_id not in
	       (select role_id 
		  from events_org_role_event_map 
		 where event_id = :event_id)
        } {} {} {} c:/web/openacs-4/contrib/packages/events/www/admin/role-add-postgresql.xql}
dbqd.contrib.packages.events.www.admin.roles-oracle.select_roles {dbqd.contrib.packages.events.www.admin.roles-oracle.select_roles {
	select role, role_id, 
	       decode(public_role_p, 't', ' (public role)', '') as public_role_p
	  from events_organizer_roles
	 order by role asc
        } {} {} {} c:/web/openacs-4/contrib/packages/events/www/admin/roles-oracle.xql}
dbqd.contrib.packages.events.www.admin.roles.select_roles {dbqd.contrib.packages.events.www.admin.roles.select_roles {
	select role, role_id, public_role_p,
                CASE when public_role_p = 't' then ' (public role)'
                ELSE ''
                END
	  from events_organizer_roles
	 order by role asc
        } {} {} {} c:/web/openacs-4/contrib/packages/events/www/admin/roles-postgresql.xql}
dbqd.contrib.packages.events.www.admin.send-mail.select_activity_from_addr_count {dbqd.contrib.packages.events.www.admin.send-mail.select_activity_from_addr_count {
        select count(*) as from_addr_count 
          from parties pa,
               events_activities ea
         where ea.default_contact_user_id = pa.party_id
           and ea.activity_id = :activity_id
            or pa.party_id = :user_id
        } {} {} {} c:/web/openacs-4/contrib/packages/events/www/admin/send-mail.xql}
dbqd.contrib.packages.events.www.admin.send-mail.select_activity_from_addr {dbqd.contrib.packages.events.www.admin.send-mail.select_activity_from_addr {
        select CASE WHEN ea.default_contact_user_id = pa.party_id AND ea.default_contact_user_id <> :user_id THEN pa.email || ' (the default contact for this activity)'
               ELSE pa.email END as from_addr, pa.email 
          from parties pa,
               events_activities ea
         where ea.default_contact_user_id = pa.party_id
           and ea.activity_id = :activity_id
            or pa.party_id = :user_id
        } {} {} {} c:/web/openacs-4/contrib/packages/events/www/admin/send-mail.xql}
dbqd.contrib.packages.events.www.admin.send-mail.select_event_from_addr_count {dbqd.contrib.packages.events.www.admin.send-mail.select_event_from_addr_count {
        select count(*) as from_addr_count 
          from (select contact_user_id from events_events where event_id = :event_id) ee,
               parties pa
         where ee.contact_user_id = pa.party_id
            or pa.party_id = :user_id
        } {} {} {} c:/web/openacs-4/contrib/packages/events/www/admin/send-mail.xql}
dbqd.contrib.packages.events.www.admin.send-mail.select_event_from_addr {dbqd.contrib.packages.events.www.admin.send-mail.select_event_from_addr {
        select CASE WHEN ee.contact_user_id = pa.party_id AND ee.contact_user_id <> :user_id THEN pa.email || ' (the default contact for this event)'
               ELSE pa.email END as from_addr, pa.email 
          from (select contact_user_id from events_events where event_id = :event_id) ee,
               parties pa
         where ee.contact_user_id = pa.party_id
            or pa.party_id = :user_id
        } {} {} {} c:/web/openacs-4/contrib/packages/events/www/admin/send-mail.xql}
dbqd.contrib.packages.events.www.admin.send-mail.select_my_email_address {dbqd.contrib.packages.events.www.admin.send-mail.select_my_email_address {
        select email as from_addr
          from parties
         where party_id = :user_id
        } {} {} {} c:/web/openacs-4/contrib/packages/events/www/admin/send-mail.xql}
dbqd.contrib.packages.events.www.admin.send-mail.select_all_event_registrants {dbqd.contrib.packages.events.www.admin.send-mail.select_all_event_registrants {
        select pa.email
          from parties pa,
               events_registrations er
         where er.user_id = pa.party_id
           and er.reg_state <> 'canceled'
           and event_id = '$event_id'
        } {} {} {} c:/web/openacs-4/contrib/packages/events/www/admin/send-mail.xql}
dbqd.contrib.packages.events.www.admin.send-mail.select_event_reg_state_registrants {dbqd.contrib.packages.events.www.admin.send-mail.select_event_reg_state_registrants {
        select pa.email
          from parties pa,
               events_registrations er
         where er.user_id = pa.party_id
           and er.reg_state = '$to'
           and event_id = '$event_id'
        } {} {} {} c:/web/openacs-4/contrib/packages/events/www/admin/send-mail.xql}
dbqd.contrib.packages.events.www.admin.send-mail.select_event_organizers {dbqd.contrib.packages.events.www.admin.send-mail.select_event_organizers {
        select pa.email
          from parties pa,
               events_organizers eo
         where eo.user_id = pa.party_id
           and eo.event_id = '$event_id'
        } {} {} {} c:/web/openacs-4/contrib/packages/events/www/admin/send-mail.xql}
dbqd.contrib.packages.events.www.admin.send-mail.select_activity_reg_state_future {dbqd.contrib.packages.events.www.admin.send-mail.select_activity_reg_state_future {
        select pa.email
          from events_registrations er,
               parties pa,
               acs_events ae,
               timespans s,
               time_intervals t,
               dual
         where er.user_id = pa.party_id
           and ae.activity_id = '$activity_id'
           and ae.event_id = er.event_id
           and ae.timespan_id = s.timespan_id
           and s.interval_id = t.interval_id
           and er.reg_state = '$to'
           and t.start_date > sysdate 
         group by pa.email
        } {} {} {} c:/web/openacs-4/contrib/packages/events/www/admin/send-mail.xql}
dbqd.contrib.packages.events.www.admin.send-mail.select_activity_all_future {dbqd.contrib.packages.events.www.admin.send-mail.select_activity_all_future {
        select pa.email
          from events_registrations er,
               parties pa,
               acs_events ae,
               timespans s,
               time_intervals t,
               dual
         where er.user_id = pa.party_id
           and ae.activity_id = '$activity_id'
           and ae.event_id = er.event_id
           and ae.timespan_id = s.timespan_id
           and s.interval_id = t.interval_id
           and er.reg_state <> 'canceled'
           and t.start_date > sysdate 
         group by pa.email
        } {} {} {} c:/web/openacs-4/contrib/packages/events/www/admin/send-mail.xql}
dbqd.contrib.packages.events.www.admin.send-mail.select_activity_all_past {dbqd.contrib.packages.events.www.admin.send-mail.select_activity_all_past {
        select pa.email
          from events_registrations er,
               parties pa,
               acs_events ae,
               timespans s,
               time_intervals t,
               dual
         where er.user_id = pa.party_id
           and ae.activity_id = '$activity_id'
           and ae.event_id = er.event_id
           and ae.timespan_id = s.timespan_id
           and s.interval_id = t.interval_id
           and er.reg_state <> 'canceled'
           and t.start_date < sysdate 
         group by pa.email
        } {} {} {} c:/web/openacs-4/contrib/packages/events/www/admin/send-mail.xql}
dbqd.contrib.packages.events.www.admin.send-mail.select_activity_reg_state_past {dbqd.contrib.packages.events.www.admin.send-mail.select_activity_reg_state_past {
        select pa.email
          from events_registrations er,
               parties pa,
               acs_events ae,
               timespans s,
               time_intervals t,
               dual
         where er.user_id = pa.party_id
           and ae.activity_id = '$activity_id'
           and ae.event_id = er.event_id
           and ae.timespan_id = s.timespan_id
           and s.interval_id = t.interval_id
           and er.reg_state = '$to'
           and t.start_date < sysdate 
         group by pa.email
        } {} {} {} c:/web/openacs-4/contrib/packages/events/www/admin/send-mail.xql}
dbqd.contrib.packages.events.www.admin.send-mail.select_activity_reg_state_all {dbqd.contrib.packages.events.www.admin.send-mail.select_activity_reg_state_all {
        select pa.email
          from events_registrations er,
               parties pa,
               acs_events ae,
               timespans s,
               time_intervals t,
               dual
         where er.user_id = pa.party_id
           and ae.activity_id = '$activity_id'
           and ae.event_id = er.event_id
           and ae.timespan_id = s.timespan_id
           and s.interval_id = t.interval_id
           and er.reg_state = '$to'
         group by pa.email
        } {} {} {} c:/web/openacs-4/contrib/packages/events/www/admin/send-mail.xql}
dbqd.contrib.packages.events.www.admin.send-mail.select_activity_all_all {dbqd.contrib.packages.events.www.admin.send-mail.select_activity_all_all {
        select pa.email
          from events_registrations er,
               parties pa,
               acs_events ae,
               timespans s,
               time_intervals t,
               dual
         where er.user_id = pa.party_id
           and ae.activity_id = '$activity_id'
           and ae.event_id = er.event_id
           and ae.timespan_id = s.timespan_id
           and s.interval_id = t.interval_id
           and er.reg_state <> 'canceled'
         group by pa.email
        } {} {} {} c:/web/openacs-4/contrib/packages/events/www/admin/send-mail.xql}
dbqd.contrib.packages.events.www.admin.venues-ae.select_venue {dbqd.contrib.packages.events.www.admin.venues-ae.select_venue {
	select venue_name, address1, address2, city, usps_abbrev, postal_code, iso, 
                       time_zone, phone_number, fax_number, email, 
                       needs_reserve_p, max_people, description
		  from events_venues
		 where venue_id = :venue_id
   	} {} {} {} c:/web/openacs-4/contrib/packages/events/www/admin/venues-ae.xql}
dbqd.contrib.packages.events.www.event-info.get_reg_id {dbqd.contrib.packages.events.www.event-info.get_reg_id {
	select reg_id
	  from events_registrations
	 where event_id = :event_id
           and user_id = :user_id
           and reg_state <> 'canceled'
        } {} {} {} c:/web/openacs-4/contrib/packages/events/www/event-info.xql}
dbqd.contrib.packages.events.www.event-info.select_organizers {dbqd.contrib.packages.events.www.event-info.select_organizers {
	select eo.role, eo.user_id, eo.role_id,
	       u.first_names || ' ' || u.last_name as organizer_name
	  from events_organizers eo, cc_users u
	 where eo.event_id = :event_id
	   and eo.public_role_p = 't'
	   and u.user_id = eo.user_id
        } {} {} {} c:/web/openacs-4/contrib/packages/events/www/event-info.xql}
dbqd.contrib.packages.events.www.event-info.select_bio {dbqd.contrib.packages.events.www.event-info.select_bio {
	select attr_value
	  from acs_attribute_values
	 where object_id = :user_id
	   and attribute_id =
	       (select attribute_id
	          from acs_attributes
	         where object_type = 'person'
	           and attribute_name = 'bio')
	} {} {} {} c:/web/openacs-4/contrib/packages/events/www/event-info.xql}
dbqd.contrib.packages.events.www.index-oracle.select_event_info {dbqd.contrib.packages.events.www.index-oracle.select_event_info {
                select a.activity_id, 
                       e.event_id, 
                       aa.name, 
                       aa.description,
                       aa.html_p,
                       v.city, 
                       to_char(t.start_date,:date_format) as start_date_pretty,
	               CASE WHEN to_char(t.start_date, 'YYYY-MM-DD') = to_char(t.end_date, 'YYYY-MM-DD') 
	                    THEN to_char(t.start_date, :time_format) || ' - ' || to_char(t.end_date, :time_format)
	                    ELSE to_char(t.start_date, :date_format) || ' ' || to_char(t.start_date, :time_format) || ' - ' || to_char(t.end_date, :date_format) || ' ' || to_char(t.end_date, :time_format)
	               END as timespan
                  from acs_events ae, 
                       acs_activities aa, 
                       dual, 
                       events_events e, 
                       events_activities a, 
                       events_venues v, 
                       timespans s, 
                       time_intervals t 
                 where a.package_id = :package_id
                   and ae.event_id = e.event_id 
                   and ae.activity_id = a.activity_id 
                   and a.activity_id = aa.activity_id 
                   and e.reg_deadline > sysdate 
                   and e.available_p <> 'f' 
                   and v.venue_id = e.venue_id 
                   and ae.timespan_id = s.timespan_id 
                   and s.interval_id = t.interval_id 
                   and acs_permission.permission_p(
                       e.event_id,
                       nvl(:user_id, acs.magic_object_id('the_public')),
                       'read') = 't'
                 order by t.start_date
		} {} {} {} c:/web/openacs-4/contrib/packages/events/www/index-oracle.xql}
dbqd.contrib.packages.events.www.index.select_event_info {dbqd.contrib.packages.events.www.index.select_event_info {
                select a.activity_id, 
                       e.event_id, 
                       aa.name, 
                       aa.description,
                       aa.html_p,
                       v.city, 
                       to_char(t.start_date,:date_format) as start_date_pretty,
	               CASE WHEN to_char(t.start_date, 'YYYY-MM-DD') = to_char(t.end_date, 'YYYY-MM-DD') 
	                    THEN to_char(t.start_date, :time_format) || ' - ' || to_char(t.end_date, :time_format)
	                    ELSE to_char(t.start_date, :date_format) || ' ' || to_char(t.start_date, :time_format) || ' - ' || to_char(t.end_date, :date_format) || ' ' || to_char(t.end_date, :time_format)
	               END as timespan
                  from acs_events ae, 
                       acs_activities aa, 
                       dual, 
                       events_events e, 
                       events_activities a, 
                       events_venues v, 
                       timespans s, 
                       time_intervals t 
                 where a.package_id = :package_id
                   and ae.event_id = e.event_id 
                   and ae.activity_id = a.activity_id 
                   and a.activity_id = aa.activity_id 
                   and e.reg_deadline > sysdate 
                   and e.available_p <> 'f' 
                   and v.venue_id = e.venue_id 
                   and ae.timespan_id = s.timespan_id 
                   and s.interval_id = t.interval_id 
                   and acs_permission__permission_p(
                       e.event_id,
                       coalesce(:user_id, acs__magic_object_id('the_public')),
                       'read') = 't'
                 order by t.start_date
		} {} {} {} c:/web/openacs-4/contrib/packages/events/www/index-postgresql.xql}
dbqd.contrib.packages.events.www.order-cancel.reg_exists {dbqd.contrib.packages.events.www.order-cancel.reg_exists {
		select 1
		  from events_registrations
		 where reg_id = :reg_id
                   and user_id = :user_id
	        } {} {} {} c:/web/openacs-4/contrib/packages/events/www/order-cancel.xql}
dbqd.contrib.packages.events.www.order-check.reg_exists {dbqd.contrib.packages.events.www.order-check.reg_exists {
		select 1
		  from events_registrations
		 where reg_id = :reg_id
                   and user_id = :user_id
	        } {} {} {} c:/web/openacs-4/contrib/packages/events/www/order-check.xql}
dbqd.contrib.packages.events.www.order-one-oracle.select_user_name {dbqd.contrib.packages.events.www.order-one-oracle.select_user_name {
	declare begin
	 :1 := person.name(person_id => :user_id);
	end;
        } {} {} {} c:/web/openacs-4/contrib/packages/events/www/order-one-oracle.xql}
dbqd.contrib.packages.events.www.order-one.select_user_name {dbqd.contrib.packages.events.www.order-one.select_user_name {
          select person__name(:user_id) as user_name
        } {} {} {} c:/web/openacs-4/contrib/packages/events/www/order-one-postgresql.xql}
dbqd.contrib.packages.events.www.order-one.get_reg_id {dbqd.contrib.packages.events.www.order-one.get_reg_id {
	select reg_id
	  from events_registrations
	 where event_id = :event_id
           and user_id = :user_id
           and reg_state <> 'canceled'
	} {} {} {} c:/web/openacs-4/contrib/packages/events/www/order-one.xql}
dbqd.contrib.packages.events.www.order-one.select_custom_fields {dbqd.contrib.packages.events.www.order-one.select_custom_fields {
	select eaam.attribute_id, aa.attribute_name as name,
       	       aa.sort_order as after, aa.datatype, aa.pretty_name,
	       eac.category_name, eac.category_id
	  from events_event_attr_map eaam, acs_attributes aa,
	       events_attr_categories eac, events_attr_category_map eacm
	 where eaam.event_id = :event_id
	   and eaam.attribute_id = aa.attribute_id
	   and eacm.attribute_id = aa.attribute_id
	   and eacm.category_id = eac.category_id
	 order by eac.category_name, aa.sort_order asc
        } {} {} {} c:/web/openacs-4/contrib/packages/events/www/order-one.xql}
dbqd.contrib.packages.events.www.organizer.select_organizer_info {dbqd.contrib.packages.events.www.organizer.select_organizer_info {
	select eo.role, eo.user_id, eo.role_id, eo.event_id,
	       u.first_names || ' ' || u.last_name as organizer_name
	  from events_organizers eo, cc_users u
	 where eo.role_id = :role_id
	   and eo.public_role_p = 't'
	   and u.user_id = eo.user_id
	   and u.user_id = :user_id
        } {} {} {} c:/web/openacs-4/contrib/packages/events/www/organizer.xql}
dbqd.contrib.packages.events.www.organizer.select_bio {dbqd.contrib.packages.events.www.organizer.select_bio {
	select attr_value
	  from acs_attribute_values
	 where object_id = :user_id
	   and attribute_id =
	       (select attribute_id
	          from acs_attributes
	         where object_type = 'person'
	           and attribute_name = 'bio')
	} {} {} {} c:/web/openacs-4/contrib/packages/events/www/organizer.xql}
dbqd.contrib.packages.form-to-mail.www.admin.form-delete.do_delete {dbqd.contrib.packages.form-to-mail.www.admin.form-delete.do_delete {
      select formtomail__delete(:form_id)
    } {} {} {} c:/web/openacs-4/contrib/packages/form-to-mail/www/admin/form-delete.xql}
dbqd.contrib.packages.form-to-mail.www.admin.form-delete.get_name {dbqd.contrib.packages.form-to-mail.www.admin.form-delete.get_name {
      select formtomail__name(:form_id)
    } {} {} {} c:/web/openacs-4/contrib/packages/form-to-mail/www/admin/form-delete.xql}
dbqd.contrib.packages.form-to-mail.www.admin.form-edit.do_insert {dbqd.contrib.packages.form-to-mail.www.admin.form-edit.do_insert {
        select formtomail__new(
           null,
           :form_name,
           :form_pretty_name,
           :subject_prefix,
           :subject_default,
           cast(:requires_user_subject as integer),
           cast(:requires_user_comments as integer),
           :recipient,
           :sender,
           :confirm_msg,
           null,
           :user_id,
           :package_id
        )
    } {} {} {} c:/web/openacs-4/contrib/packages/form-to-mail/www/admin/form-edit.xql}
dbqd.contrib.packages.form-to-mail.www.admin.form-edit.do_update {dbqd.contrib.packages.form-to-mail.www.admin.form-edit.do_update {
       update formtomail
          set form_name = :form_name,
              form_pretty_name = :form_pretty_name,
              subject_prefix = :subject_prefix,
              subject_default = :subject_default,
              requires_user_subject = int4(int2(:requires_user_subject)),
              requires_user_comments = int4(int2(:requires_user_comments)),
              recipient = :recipient,
              sender = :sender,
              confirm_msg = :confirm_msg
        where form_id = :form_id
    } {} {} {} c:/web/openacs-4/contrib/packages/form-to-mail/www/admin/form-edit.xql}
dbqd.contrib.packages.form-to-mail.www.admin.form-edit.form_query {dbqd.contrib.packages.form-to-mail.www.admin.form-edit.form_query {
      select form_name,
             form_pretty_name,
             subject_prefix,
             subject_default,
             requires_user_subject,
             requires_user_comments,
             recipient,
             sender,
             confirm_msg
        from formtomail
       where form_id = :form_id
    } {} {} {} c:/web/openacs-4/contrib/packages/form-to-mail/www/admin/form-edit.xql}
dbqd.contrib.packages.form-to-mail.www.admin.index.form_query {dbqd.contrib.packages.form-to-mail.www.admin.index.form_query {
    select form_id,
           form_pretty_name,
           subject_prefix,
           subject_default,
           requires_user_subject,
           requires_user_comments,
           recipient,
           sender
      from formtomail where package_id = :package_id
    [ad_order_by_from_sort_spec $orderby $table_def]
    } {} {} {} c:/web/openacs-4/contrib/packages/form-to-mail/www/admin/index.xql}
dbqd.contrib.packages.form-to-mail.www.form-proc.get_form_details_query {dbqd.contrib.packages.form-to-mail.www.form-proc.get_form_details_query {
    select form_name,
           subject_prefix,
           recipient,
           sender
      from formtomail 
     where form_id = :form_id
    } {} {} {} c:/web/openacs-4/contrib/packages/form-to-mail/www/form-proc.xql}
dbqd.contrib.packages.form-to-mail.www.form.get_form_query {dbqd.contrib.packages.form-to-mail.www.form.get_form_query {
    select form_id,
           form_pretty_name,
           subject_default,
           requires_user_subject,
           requires_user_comments
      from formtomail 
     where form_name = :form_name
           and package_id = :package_id
    } {} {} {} c:/web/openacs-4/contrib/packages/form-to-mail/www/form.xql}
dbqd.contrib.packages.general-comments.tcl.general-comments-procs-oracle.general_comments_get_comments.get_comments {dbqd.contrib.packages.general-comments.tcl.general-comments-procs-oracle.general_comments_get_comments.get_comments {
      
             select g.comment_id,
                    r.title,
                    r.mime_type,
                    o.creation_user,
                    acs_object.name(o.creation_user) as author,
                    to_char(o.creation_date, 'MM-DD-YYYY') as pretty_date,
                    to_char(o.creation_date, 'Month DD, YYYY HH12:MI PM') as pretty_date2
                    $content_select
               from general_comments g,
                    cr_revisions r,
                    acs_objects o
              where g.object_id = :object_id and
                    r.revision_id = content_item.get_live_revision(g.comment_id) and
                    o.object_id = g.comment_id
              order by o.creation_date
      } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/packages/general-comments/tcl/general-comments-procs-oracle.xql}
dbqd.contrib.packages.general-comments.tcl.general-comments-procs-oracle.general_comments_package_url_not_cached.get_package_url {dbqd.contrib.packages.general-comments.tcl.general-comments-procs-oracle.general_comments_package_url_not_cached.get_package_url {
      
             select site_node.url(s.node_id) as package_url
               from site_nodes s, apm_packages a
              where s.object_id = a.package_id and
                    lower(a.package_key) = 'general-comments' and
                    RowNum = 1
      } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/packages/general-comments/tcl/general-comments-procs-oracle.xql}
dbqd.contrib.packages.general-comments.tcl.general-comments-procs-oracle.get_comments.get_package_url_deprecated {dbqd.contrib.packages.general-comments.tcl.general-comments-procs-oracle.get_comments.get_package_url_deprecated {
      
             select site_node.url(s.node_id)
               from site_nodes s, apm_packages a
              where s.object_id = a.package_id and
                    a.package_key = 'general-comments'
      } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/packages/general-comments/tcl/general-comments-procs-oracle.xql}
dbqd.contrib.packages.general-comments.tcl.general-comments-procs-oracle.get_comments.get_comments_deprecated {dbqd.contrib.packages.general-comments.tcl.general-comments-procs-oracle.get_comments.get_comments_deprecated {
      
             select g.comment_id,
                    r.title,
                    r.content,
                    r.mime_type,
                    o.creation_user,
                    to_char(o.creation_date, 'MM-DD-YYYY') as creation_date,
                    p.first_names || ' ' || p.last_name as author
               from general_comments g,
                    cr_items i,
                    cr_revisions r,
                    acs_objects o,
                    persons p
              where g.object_id = :object_id and
                    i.item_id = g.comment_id and
                    r.revision_id = i.live_revision and
                    o.object_id = g.comment_id and
                    p.person_id = o.creation_user
              order by creation_date
      } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/packages/general-comments/tcl/general-comments-procs-oracle.xql}
dbqd.contrib.packages.general-comments.tcl.general-comments-procs-oracle.get_comments.get_package_url_deprecated {dbqd.contrib.packages.general-comments.tcl.general-comments-procs-oracle.get_comments.get_package_url_deprecated {
      
             select site_node.url(s.node_id)
               from site_nodes s, apm_packages a
              where s.object_id = a.package_id and
                    a.package_key = 'general-comments'
      } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/packages/general-comments/tcl/general-comments-procs-oracle.xql}
dbqd.contrib.packages.general-comments.tcl.general-comments-procs.general_comments::general_comment::create.insert_comment {dbqd.contrib.packages.general-comments.tcl.general-comments-procs.general_comments::general_comment::create.insert_comment {
	select general_comment__new (
		:comment_id,
		:object_id,
		:package_id,
		:parent_id,
		:context_id,
		:title,
		:description,
		:content,
		:creation_user,	
		now(),
		:creation_ip,
		:comment_mime_type,
		:is_live
	)
    } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/packages/general-comments/tcl/general-comments-procs-postgresql.xql}
dbqd.contrib.packages.general-comments.tcl.general-comments-procs.general_comments::general_comment::create.get_revision {dbqd.contrib.packages.general-comments.tcl.general-comments-procs.general_comments::general_comment::create.get_revision {
	select content_item__get_latest_revision(:comment_id) as revision_id
    } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/packages/general-comments/tcl/general-comments-procs-postgresql.xql}
dbqd.contrib.packages.general-comments.tcl.general-comments-procs.general_comments::general_comment::create.set_content {dbqd.contrib.packages.general-comments.tcl.general-comments-procs.general_comments::general_comment::create.set_content {
	update cr_revisions
	set content = :content
	where revision_id = :revision_id
    } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/packages/general-comments/tcl/general-comments-procs-postgresql.xql}
dbqd.contrib.packages.general-comments.tcl.general-comments-procs.general_comments_get_comments.get_comments {dbqd.contrib.packages.general-comments.tcl.general-comments-procs.general_comments_get_comments.get_comments {
      
             select g.comment_id,
                    r.title,
                    r.mime_type,
                    o.creation_user,
                    u.full_name as author,
                    to_char(o.creation_date, 'MM-DD-YYYY') as pretty_date,
                    to_char(o.creation_date, 'Month DD, YYYY HH12:MI PM') as pretty_date2
                    $content_select
               from general_comments g,
                    cr_revisions r,
                    acs_objects o,
		    cc_users u,
	            cr_items i
              where g.object_id = :object_id and
                    r.revision_id = i.live_revision and
                    o.object_id = g.comment_id
              order by o.creation_date

      } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/packages/general-comments/tcl/general-comments-procs-postgresql.xql}
dbqd.contrib.packages.general-comments.tcl.general-comments-procs.general_comments_package_url_not_cached.get_package_url {dbqd.contrib.packages.general-comments.tcl.general-comments-procs.general_comments_package_url_not_cached.get_package_url {
      
             select site_node__url(s.node_id) as package_url
               from site_nodes s, apm_packages a
              where s.object_id = a.package_id and
                    lower(a.package_key) = 'general-comments'
                    LIMIT 1
      } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/packages/general-comments/tcl/general-comments-procs-postgresql.xql}
dbqd.contrib.packages.general-comments.tcl.general-comments-procs.get_comments.get_package_url_deprecated {dbqd.contrib.packages.general-comments.tcl.general-comments-procs.get_comments.get_package_url_deprecated {
      
             select site_node__url(s.node_id)
               from site_nodes s, apm_packages a
              where s.object_id = a.package_id and
                    a.package_key = 'general-comments'
      } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/packages/general-comments/tcl/general-comments-procs-postgresql.xql}
dbqd.contrib.packages.general-comments.tcl.general-comments-procs.get_comments.get_comments_deprecated {dbqd.contrib.packages.general-comments.tcl.general-comments-procs.get_comments.get_comments_deprecated {
      
             select g.comment_id,
                    r.title,
                    r.content,
                    r.mime_type,
                    o.creation_user,
                    to_char(o.creation_date, 'MM-DD-YYYY') as creation_date,
                    p.first_names || ' ' || p.last_name as author
               from general_comments g,
                    cr_items i,
                    cr_revisions r,
                    acs_objects o,
                    persons p
              where g.object_id = :object_id and
                    i.item_id = g.comment_id and
                    r.revision_id = i.live_revision and
                    o.object_id = g.comment_id and
                    p.person_id = o.creation_user
              order by creation_date
      } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/packages/general-comments/tcl/general-comments-procs-postgresql.xql}
dbqd.contrib.packages.general-comments.tcl.general-comments-procs.get_comments.get_package_url_deprecated {dbqd.contrib.packages.general-comments.tcl.general-comments-procs.get_comments.get_package_url_deprecated {
      
             select site_node__url(s.node_id)
               from site_nodes s, apm_packages a
              where s.object_id = a.package_id and
                    a.package_key = 'general-comments'
      } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/packages/general-comments/tcl/general-comments-procs-postgresql.xql}
dbqd.contrib.packages.general-comments.tcl.general-comments-procs.general_comments_get_comments.content_select {dbqd.contrib.packages.general-comments.tcl.general-comments-procs.general_comments_get_comments.content_select {

		, r.content

       } {} {} {} c:/web/openacs-4/contrib/packages/general-comments/tcl/general-comments-procs.xql}
dbqd.contrib.packages.general-comments.tcl.general-comments-procs.general_comments_print_comment.get_attachments {dbqd.contrib.packages.general-comments.tcl.general-comments-procs.general_comments_print_comment.get_attachments {
      
	                    select r.title, r.mime_type,  i.name, i.item_id
	                      from cr_items i, cr_revisions r
	                     where i.parent_id = :comment_id 
                               and r.revision_id = i.live_revision
      } {} {} {} c:/web/openacs-4/contrib/packages/general-comments/tcl/general-comments-procs.xql}
dbqd.contrib.packages.general-comments.tcl.general-comments-procs.general_comments_print_comment.get_links {dbqd.contrib.packages.general-comments.tcl.general-comments-procs.general_comments_print_comment.get_links {
      
	              select i.item_id, e.label, e.url
	                from cr_items i, cr_extlinks e
	               where i.parent_id = :comment_id and e.extlink_id = i.item_id
      } {} {} {} c:/web/openacs-4/contrib/packages/general-comments/tcl/general-comments-procs.xql}
dbqd.contrib.packages.general-comments.www.admin.delete-2-oracle.delete_comment {dbqd.contrib.packages.general-comments.www.admin.delete-2-oracle.delete_comment {
      
    begin
        acs_message.delete(:comment_id);
    end;

      } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/packages/general-comments/www/admin/delete-2-oracle.xql}
dbqd.contrib.packages.general-comments.www.admin.delete-2.delete_comment {dbqd.contrib.packages.general-comments.www.admin.delete-2.delete_comment {

    begin
        PERFORM acs_message__delete(:comment_id);
	return 1;
    end;

      } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/packages/general-comments/www/admin/delete-2-postgresql.xql}
dbqd.contrib.packages.general-comments.www.admin.delete-2.delete_image_attachments {dbqd.contrib.packages.general-comments.www.admin.delete-2.delete_image_attachments {
      
    delete from images
    where image_id in (select latest_revision
                         from cr_items
                        where parent_id = :comment_id)

      } {} {} {} c:/web/openacs-4/contrib/packages/general-comments/www/admin/delete-2.xql}
dbqd.contrib.packages.general-comments.www.admin.delete-oracle.get_comment {dbqd.contrib.packages.general-comments.www.admin.delete-oracle.get_comment {

    select r.title,
           r.content,
           r.mime_type,
           o.creation_user,
           to_char(o.creation_date, 'MM-DD-YYYY') as pretty_date,
           acs_object.name(o.creation_user) as author
      from acs_objects o, 
           cr_revisions r, 
	   general_comments g
     where g.comment_id = :comment_id and 	 
           g.comment_id = o.object_id and
	   r.revision_id = content_item.get_latest_revision(g.comment_id)

      } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/packages/general-comments/www/admin/delete-oracle.xql}
dbqd.contrib.packages.general-comments.www.admin.delete.get_comment {dbqd.contrib.packages.general-comments.www.admin.delete.get_comment {
 
     
      select r.title,
           r.content,
           r.mime_type,
           o.creation_user,
           to_char(o.creation_date, 'MM-DD-YYYY') as pretty_date,
           acs_object__name(o.creation_user) as author
      from acs_objects o, 
           cr_revisions r, 
	   general_comments g
     where g.comment_id = :comment_id and 	 
           g.comment_id = o.object_id and
	   r.revision_id = content_item__get_latest_revision(g.comment_id) 
      } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/packages/general-comments/www/admin/delete-postgresql.xql}
dbqd.contrib.packages.general-comments.www.admin.index-oracle.comments_select {dbqd.contrib.packages.general-comments.www.admin.index-oracle.comments_select {
      
    select g.comment_id,
           r.title, 
           acs_object.name(o.creation_user) as author,
           o.creation_user, 
           case when i.live_revision = null then 0 else 1 end as live_version_p,
           case when i.live_revision = r.revision_id then 1 else 0 end as approved_p, 
           to_char(o.creation_date, 'MM-DD-YYYY HH12:MI:AM') as pretty_date
      from general_comments g,
           cr_items i,
           cr_revisions r,
           acs_objects o
     where g.comment_id = i.item_id and
           r.revision_id = o.object_id and
           r.revision_id = content_item.get_latest_revision(g.comment_id)
          [ad_dimensional_sql $dimensional]
    [ad_order_by_from_sort_spec $orderby $table_def]

      } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/packages/general-comments/www/admin/index-oracle.xql}
dbqd.contrib.packages.general-comments.www.admin.index-oracle.modified_last_24hours {dbqd.contrib.packages.general-comments.www.admin.index-oracle.modified_last_24hours {

		creation_date + 1 > sysdate

      } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/packages/general-comments/www/admin/index-oracle.xql}
dbqd.contrib.packages.general-comments.www.admin.index-oracle.modified_last_week {dbqd.contrib.packages.general-comments.www.admin.index-oracle.modified_last_week {

		creation_date + 7 > sysdate

      } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/packages/general-comments/www/admin/index-oracle.xql}
dbqd.contrib.packages.general-comments.www.admin.index-oracle.modified_last_month {dbqd.contrib.packages.general-comments.www.admin.index-oracle.modified_last_month {

		creation_date + 30 > sysdate

      } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/packages/general-comments/www/admin/index-oracle.xql}
dbqd.contrib.packages.general-comments.www.admin.index.comments_select {dbqd.contrib.packages.general-comments.www.admin.index.comments_select {
    select * from (      
    select g.comment_id,
           r.title, 
           acs_object__name(o.creation_user) as author,
           o.creation_user, 
           case when i.live_revision = null then 0 else 1 end as live_version_p,
           case when i.live_revision = r.revision_id then 1 else 0 end as approved_p, 
           to_char(o.creation_date, 'MM-DD-YYYY HH12:MI:AM') as pretty_date,
           o.creation_date           
      from general_comments g,
           cr_items i,
           cr_revisions r,
           acs_objects o
     where g.comment_id = i.item_id and
           r.revision_id = o.object_id and
           r.revision_id = i.latest_revision
          [ad_dimensional_sql $dimensional]) as unordered
    [ad_order_by_from_sort_spec $orderby $table_def]

      } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/packages/general-comments/www/admin/index-postgresql.xql}
dbqd.contrib.packages.general-comments.www.admin.index.modified_last_24hours {dbqd.contrib.packages.general-comments.www.admin.index.modified_last_24hours {

		creation_date > now() - '1 days'::interval

      } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/packages/general-comments/www/admin/index-postgresql.xql}
dbqd.contrib.packages.general-comments.www.admin.index.modified_last_week {dbqd.contrib.packages.general-comments.www.admin.index.modified_last_week {

		creation_date > now() - '7 days'::interval 

      } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/packages/general-comments/www/admin/index-postgresql.xql}
dbqd.contrib.packages.general-comments.www.admin.index.modified_last_month {dbqd.contrib.packages.general-comments.www.admin.index.modified_last_month {

		creation_date > now() - '30 days'::interval 
      } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/packages/general-comments/www/admin/index-postgresql.xql}
dbqd.contrib.packages.general-comments.www.admin.index.status_approved {dbqd.contrib.packages.general-comments.www.admin.index.status_approved {

	      	i.live_revision is not null

      } {} {} {} c:/web/openacs-4/contrib/packages/general-comments/www/admin/index.xql}
dbqd.contrib.packages.general-comments.www.admin.index.status_unapproved {dbqd.contrib.packages.general-comments.www.admin.index.status_unapproved {

	      	i.live_revision is null

      } {} {} {} c:/web/openacs-4/contrib/packages/general-comments/www/admin/index.xql}
dbqd.contrib.packages.general-comments.www.admin.index.modified_show_all {dbqd.contrib.packages.general-comments.www.admin.index.modified_show_all {

		1 = 1

      } {} {} {} c:/web/openacs-4/contrib/packages/general-comments/www/admin/index.xql}
dbqd.contrib.packages.general-comments.www.admin.toggle-approval-oracle.get_live_revision {dbqd.contrib.packages.general-comments.www.admin.toggle-approval-oracle.get_live_revision {
      select content_item.get_live_revision(:comment_id) from dual
      } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/packages/general-comments/www/admin/toggle-approval-oracle.xql}
dbqd.contrib.packages.general-comments.www.admin.toggle-approval-oracle.get_latest_revision {dbqd.contrib.packages.general-comments.www.admin.toggle-approval-oracle.get_latest_revision {
      select content_item.get_latest_revision(:comment_id) from dual
      } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/packages/general-comments/www/admin/toggle-approval-oracle.xql}
dbqd.contrib.packages.general-comments.www.admin.toggle-approval-oracle.set_live_revisions {dbqd.contrib.packages.general-comments.www.admin.toggle-approval-oracle.set_live_revisions {
      
	begin
	  content_item.set_live_revision(:revision_id);
        end;
    
      } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/packages/general-comments/www/admin/toggle-approval-oracle.xql}
dbqd.contrib.packages.general-comments.www.admin.toggle-approval-oracle.unset_live_revisions {dbqd.contrib.packages.general-comments.www.admin.toggle-approval-oracle.unset_live_revisions {
      
	begin
	  content_item.unset_live_revision(:comment_id);
        end;
    
      } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/packages/general-comments/www/admin/toggle-approval-oracle.xql}
dbqd.contrib.packages.general-comments.www.admin.toggle-approval.get_live_revision {dbqd.contrib.packages.general-comments.www.admin.toggle-approval.get_live_revision {
      select content_item__get_live_revision(:comment_id) 
      } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/packages/general-comments/www/admin/toggle-approval-postgresql.xql}
dbqd.contrib.packages.general-comments.www.admin.toggle-approval.get_latest_revision {dbqd.contrib.packages.general-comments.www.admin.toggle-approval.get_latest_revision {
      select content_item__get_latest_revision(:comment_id) 
      } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/packages/general-comments/www/admin/toggle-approval-postgresql.xql}
dbqd.contrib.packages.general-comments.www.admin.toggle-approval.set_live_revisions {dbqd.contrib.packages.general-comments.www.admin.toggle-approval.set_live_revisions {

	begin
	  PERFORM content_item__set_live_revision(:revision_id);
	  return 0;
        end;
    
      } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/packages/general-comments/www/admin/toggle-approval-postgresql.xql}
dbqd.contrib.packages.general-comments.www.admin.toggle-approval.unset_live_revisions {dbqd.contrib.packages.general-comments.www.admin.toggle-approval.unset_live_revisions {

	begin
	  PERFORM content_item__unset_live_revision(:comment_id);
	  return 0;
        end;
    
      } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/packages/general-comments/www/admin/toggle-approval-postgresql.xql}
dbqd.contrib.packages.general-comments.www.comment-add-3-oracle.insert_comment {dbqd.contrib.packages.general-comments.www.comment-add-3-oracle.insert_comment {
      
        begin
            :1 := acs_message.new (
                message_id    => :comment_id,
                title         => :title,
                mime_type     => :comment_mime_type,
                data          => empty_blob(),
                context_id    => :context_id,
                creation_user => :user_id, 
                creation_ip   => :creation_ip,
                is_live       => :is_live
            );
        end;
    
      } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/packages/general-comments/www/comment-add-3-oracle.xql}
dbqd.contrib.packages.general-comments.www.comment-add-3-oracle.get_revision {dbqd.contrib.packages.general-comments.www.comment-add-3-oracle.get_revision {
      
        select content_item.get_latest_revision(:comment_id) as revision_id
        from dual
    
      } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/packages/general-comments/www/comment-add-3-oracle.xql}
dbqd.contrib.packages.general-comments.www.comment-add-3-oracle.set_content {dbqd.contrib.packages.general-comments.www.comment-add-3-oracle.set_content {
      
        update cr_revisions
           set content = empty_blob()
         where revision_id = :revision_id
     returning content into :1
    
      } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/packages/general-comments/www/comment-add-3-oracle.xql}
dbqd.contrib.packages.general-comments.www.comment-add-3-oracle.grant_permission {dbqd.contrib.packages.general-comments.www.comment-add-3-oracle.grant_permission {
      
        begin
            acs_permission.grant_permission (
                object_id  => :comment_id,
                grantee_id => :user_id,
                privilege  => 'read'
            );
            acs_permission.grant_permission (
                object_id  => :comment_id,
                grantee_id => :user_id,
                privilege  => 'write'
            );
        end;
    
      } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/packages/general-comments/www/comment-add-3-oracle.xql}
dbqd.contrib.packages.general-comments.www.comment-add-3.insert_comment {dbqd.contrib.packages.general-comments.www.comment-add-3.insert_comment {
	     select acs_message__new (
		:comment_id,		-- 1  p_message_id
		NULL, 			-- 2  p_reply_to
		current_timestamp,	-- 3  p_sent_date
		NULL, 			-- 4  p_sender
		NULL,			-- 5  p_rfc822_id
		:title,			-- 6  p_title
		NULL,			-- 7  p_description
		:comment_mime_type,	-- 8  p_mime_type
		NULL,			-- 9  p_text
		NULL, -- empty_blob(),		-- 10 p_data
		0,			-- 11 p_parent_id
		:context_id,		-- 12 p_context_id
		:user_id,		-- 13 p_creation_user
		:creation_ip,		-- 14 p_creation_ip
		'acs_message',		-- 15 p_object_type
		:is_live		-- 16 p_is_live
	    )
      } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/packages/general-comments/www/comment-add-3-postgresql.xql}
dbqd.contrib.packages.general-comments.www.comment-add-3.get_revision {dbqd.contrib.packages.general-comments.www.comment-add-3.get_revision {
      
        select content_item__get_latest_revision(:comment_id) as revision_id
        
    
      } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/packages/general-comments/www/comment-add-3-postgresql.xql}
dbqd.contrib.packages.general-comments.www.comment-add-3.set_content {dbqd.contrib.packages.general-comments.www.comment-add-3.set_content {
    
        update cr_revisions
           set content = :content
         where revision_id = :revision_id
       
      } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/packages/general-comments/www/comment-add-3-postgresql.xql}
dbqd.contrib.packages.general-comments.www.comment-add-3.grant_permission {dbqd.contrib.packages.general-comments.www.comment-add-3.grant_permission {

        begin
            perform acs_permission__grant_permission (
                /* object_id  => */ :comment_id,
                /* grantee_id => */ :user_id,
                /* privilege  => */ 'read'
            );
            perform acs_permission__grant_permission (
                /* object_id  => */ :comment_id,
                /* grantee_id => */ :user_id,
                /* privilege  => */ 'write'
            );
	    return 0;
        end;
	
    
      } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/packages/general-comments/www/comment-add-3-postgresql.xql}
dbqd.contrib.packages.general-comments.www.comment-add-3.add_entry {dbqd.contrib.packages.general-comments.www.comment-add-3.add_entry {
      
        insert into general_comments
            (comment_id,
             object_id,
             category)
        values
            (:comment_id,
             :object_id,
             :category)
    
      } {} {} {} c:/web/openacs-4/contrib/packages/general-comments/www/comment-add-3.xql}
dbqd.contrib.packages.general-comments.www.comment-add-edit-oracle.get_comment {dbqd.contrib.packages.general-comments.www.comment-add-edit-oracle.get_comment {
      
    select g.comment_id,
	   g.related_object_id as object_id,
           r.title,
           r.content,
           r.mime_type as comment_mime_type,
	   acs_object.name(g.related_object_id) as object_name
      from general_comments g,
           cr_revisions r
     where g.comment_id = :comment_id and
           r.revision_id = nvl(content_item.get_latest_revision(:comment_id),:revision_id)

      } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/packages/general-comments/www/comment-add-edit-oracle.xql}
dbqd.contrib.packages.general-comments.www.comment-add-edit.get_comment {dbqd.contrib.packages.general-comments.www.comment-add-edit.get_comment {
      
    select g.comment_id,
	   g.related_object_id as object_id,
           r.title,
           r.content,
           r.mime_type as comment_mime_type,
	   acs_object__name(g.related_object_id) as object_name
      from general_comments g,
           cr_revisions r
     where g.comment_id = :comment_id and
           r.revision_id = coalesce(content_item__get_latest_revision(:comment_id),:revision_id)

      } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/packages/general-comments/www/comment-add-edit-postgresql.xql}
dbqd.contrib.packages.general-comments.www.delete-attachment-2-oracle.get_mime_type {dbqd.contrib.packages.general-comments.www.delete-attachment-2-oracle.get_mime_type {
      
            select mime_type
              from cr_revisions
             where item_id = :attach_id
               and revision_id = content_item.get_latest_revision (:attach_id)
        
      } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/packages/general-comments/www/delete-attachment-2-oracle.xql}
dbqd.contrib.packages.general-comments.www.delete-attachment-2-oracle.delete_image_row {dbqd.contrib.packages.general-comments.www.delete-attachment-2-oracle.delete_image_row {
      
                delete from images
                 where image_id = content_item.get_latest_revision(:attach_id)
            
      } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/packages/general-comments/www/delete-attachment-2-oracle.xql}
dbqd.contrib.packages.general-comments.www.delete-attachment-2-oracle.delete_image {dbqd.contrib.packages.general-comments.www.delete-attachment-2-oracle.delete_image {
      
                begin
                    acs_message.delete_image(:attach_id);
                end;
            
      } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/packages/general-comments/www/delete-attachment-2-oracle.xql}
dbqd.contrib.packages.general-comments.www.delete-attachment-2-oracle.delete_attachment {dbqd.contrib.packages.general-comments.www.delete-attachment-2-oracle.delete_attachment {
      
                begin
                   acs_message.delete_file(:attach_id);
                end;
            
      } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/packages/general-comments/www/delete-attachment-2-oracle.xql}
dbqd.contrib.packages.general-comments.www.delete-attachment-2-oracle.delete_extlink {dbqd.contrib.packages.general-comments.www.delete-attachment-2-oracle.delete_extlink {
      
            begin
                content_extlink.delete(:attach_id);
            end;
        
      } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/packages/general-comments/www/delete-attachment-2-oracle.xql}
dbqd.contrib.packages.general-comments.www.delete-attachment-2.get_mime_type {dbqd.contrib.packages.general-comments.www.delete-attachment-2.get_mime_type {
      
            select mime_type
              from cr_revisions
             where item_id = :attach_id
               and revision_id = content_item__get_latest_revision (:attach_id)
        
      } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/packages/general-comments/www/delete-attachment-2-postgresql.xql}
dbqd.contrib.packages.general-comments.www.delete-attachment-2.delete_image_row {dbqd.contrib.packages.general-comments.www.delete-attachment-2.delete_image_row {
      
                delete from images
                 where image_id = content_item__get_latest_revision(:attach_id)
            
      } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/packages/general-comments/www/delete-attachment-2-postgresql.xql}
dbqd.contrib.packages.general-comments.www.delete-attachment-2.delete_image {dbqd.contrib.packages.general-comments.www.delete-attachment-2.delete_image {

         select acs_message__delete_image(:attach_id);
            
      } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/packages/general-comments/www/delete-attachment-2-postgresql.xql}
dbqd.contrib.packages.general-comments.www.delete-attachment-2.delete_attachment {dbqd.contrib.packages.general-comments.www.delete-attachment-2.delete_attachment {

         select acs_message__delete_file(:attach_id);
            
      } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/packages/general-comments/www/delete-attachment-2-postgresql.xql}
dbqd.contrib.packages.general-comments.www.delete-attachment-2.delete_extlink {dbqd.contrib.packages.general-comments.www.delete-attachment-2.delete_extlink {

            begin
                perform content_extlink__delete(:attach_id);
		return 0;
            end;
        
      } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/packages/general-comments/www/delete-attachment-2-postgresql.xql}
dbqd.contrib.packages.general-comments.www.delete-attachment-2.get_type {dbqd.contrib.packages.general-comments.www.delete-attachment-2.get_type {
      
        select content_type
          from cr_items
         where item_id = :attach_id
    
      } {} {} {} c:/web/openacs-4/contrib/packages/general-comments/www/delete-attachment-2.xql}
dbqd.contrib.packages.general-comments.www.file-add-2-oracle.insert_image {dbqd.contrib.packages.general-comments.www.file-add-2-oracle.insert_image {
      
             begin
                :1 := acs_message.new_image (
                    message_id     => :parent_id,
                    image_id       => :attach_id,
                    file_name      => :client_filename,
                    title          => :title,
                    mime_type      => :guessed_file_type,
                    content        => empty_blob(),
                    width          => :original_width,
                    height         => :original_height,
                    creation_user  => :user_id,
                    creation_ip    => :creation_ip,
                    is_live        => :is_live
            );
            end;
        
      } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/packages/general-comments/www/file-add-2-oracle.xql}
dbqd.contrib.packages.general-comments.www.file-add-2-oracle.insert_file {dbqd.contrib.packages.general-comments.www.file-add-2-oracle.insert_file {
      
            begin
                :1 := acs_message.new_file (
                    message_id     => :parent_id,
                    file_id        => :attach_id,
                    file_name      => :client_filename,
                    title          => :title,
                    mime_type      => :guessed_file_type,
                    content        => empty_blob(),
                    creation_user  => :user_id,
                    creation_ip    => :creation_ip,
                    is_live        => :is_live
            );
            end;
        
      } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/packages/general-comments/www/file-add-2-oracle.xql}
dbqd.contrib.packages.general-comments.www.file-add-2-oracle.get_revision {dbqd.contrib.packages.general-comments.www.file-add-2-oracle.get_revision {
      
        select content_item.get_latest_revision(:attach_id) as revision_id
        from dual
    
      } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/packages/general-comments/www/file-add-2-oracle.xql}
dbqd.contrib.packages.general-comments.www.file-add-2-oracle.set_content_size {dbqd.contrib.packages.general-comments.www.file-add-2-oracle.set_content_size {
      
	update cr_revisions
 	set filename = '$tmp_filename',
	    content_length = $tmp_size
	where revision_id = :revision_id

      } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/packages/general-comments/www/file-add-2-oracle.xql}
dbqd.contrib.packages.general-comments.www.file-add-2.insert_image {dbqd.contrib.packages.general-comments.www.file-add-2.insert_image {

             select acs_message__new_image (
                    /* message_id     => */ :parent_id,
                    /* image_id       => */ :attach_id,
                    /* file_name      => */ :client_filename,
                    /* title          => */ :title,
                    /* description    => */ NULL,
                    /* mime_type      => */ :guessed_file_type,
                    /* data           => */ NULL,
                    /* width          => */ :original_width,
                    /* height         => */ :original_height,
                    /* create_date    => */ current_timestamp,
                    /* creation_user  => */ :user_id,
                    /* creation_ip    => */ :creation_ip,
                    /* is_live        => */ :is_live,
                    /* storage_type   => */ 'file'
            );
        
      } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/packages/general-comments/www/file-add-2-postgresql.xql}
dbqd.contrib.packages.general-comments.www.file-add-2.insert_file {dbqd.contrib.packages.general-comments.www.file-add-2.insert_file {
            select acs_message__new_file (
                    /* message_id     => */ :parent_id,
                    /* file_id        => */ :attach_id,
                    /* file_name      => */ :client_filename,
                    /* title          => */ :title,
                    /* description    => */ NULL,
                    /* mime_type      => */ :guessed_file_type,
                    /* data           => */ NULL,
                    /* creation_date  => */ current_timestamp,
                    /* creation_user  => */ :user_id,
                    /* creation_ip    => */ :creation_ip,
                    /* is_live        => */ :is_live,
                    /* storage_type   => */ 'file'
            );
      } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/packages/general-comments/www/file-add-2-postgresql.xql}
dbqd.contrib.packages.general-comments.www.file-add-2.get_revision {dbqd.contrib.packages.general-comments.www.file-add-2.get_revision {
        select content_item__get_latest_revision(:attach_id) as revision_id
      } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/packages/general-comments/www/file-add-2-postgresql.xql}
dbqd.contrib.packages.general-comments.www.file-add-2.set_content_size {dbqd.contrib.packages.general-comments.www.file-add-2.set_content_size {
	update cr_revisions
 	set content = '$tmp_filename',
	    content_length = $tmp_size
        where revision_id = :revision_id
      } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/packages/general-comments/www/file-add-2-postgresql.xql}
dbqd.contrib.packages.general-comments.www.file-add-2.is_mime_type_valid {dbqd.contrib.packages.general-comments.www.file-add-2.is_mime_type_valid {
      
    select mime_type
      from cr_mime_types
    where mime_type = :guessed_file_type 
      } {} {} {} c:/web/openacs-4/contrib/packages/general-comments/www/file-add-2.xql}
dbqd.contrib.packages.general-comments.www.file-edit-2-oracle.get_revision_id {dbqd.contrib.packages.general-comments.www.file-edit-2-oracle.get_revision_id {
      
    select content_item.get_latest_revision(:attach_id) as revision_id from dual

      } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/packages/general-comments/www/file-edit-2-oracle.xql}
dbqd.contrib.packages.general-comments.www.file-edit-2.get_revision_id {dbqd.contrib.packages.general-comments.www.file-edit-2.get_revision_id {
      
    select content_item__get_latest_revision(:attach_id) as revision_id 

      } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/packages/general-comments/www/file-edit-2-postgresql.xql}
dbqd.contrib.packages.general-comments.www.file-edit-2.edit_title {dbqd.contrib.packages.general-comments.www.file-edit-2.edit_title {
      
    update cr_revisions
       set title = :title
     where revision_id = :revision_id

      } {} {} {} c:/web/openacs-4/contrib/packages/general-comments/www/file-edit-2.xql}
dbqd.contrib.packages.general-comments.www.file-edit-oracle.get_comment {dbqd.contrib.packages.general-comments.www.file-edit-oracle.get_comment {
      
  select r.title,
         i.name as file_name
    from cr_items i, cr_revisions r
   where i.item_id = :attach_id and
         r.revision_id = content_item.get_latest_revision(i.item_id)

      } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/packages/general-comments/www/file-edit-oracle.xql}
dbqd.contrib.packages.general-comments.www.file-edit.get_comment {dbqd.contrib.packages.general-comments.www.file-edit.get_comment {
      
  select r.title,
         i.name as file_name
    from cr_items i, cr_revisions r
   where i.item_id = :attach_id and
         r.revision_id = content_item__get_latest_revision(i.item_id)

      } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/packages/general-comments/www/file-edit-postgresql.xql}
dbqd.contrib.packages.general-comments.www.index-oracle.comments_select {dbqd.contrib.packages.general-comments.www.index-oracle.comments_select {

    select g.comment_id,
           r.title, 
           acs_object.name(o.creation_user) as author,
           o.creation_user, 
           decode(i.live_revision,null,0,1) as live_version_p,
           decode(i.live_revision,r.revision_id,1,0) as approved_p, 
           to_char(o.creation_date, 'MM-DD-YYYY HH12:MI:AM') as pretty_date
      from general_comments g,
           cr_items i,
           cr_revisions r,
           acs_objects o
     where g.comment_id = i.item_id and
           r.revision_id = o.object_id and
           r.revision_id = content_item.get_latest_revision(g.comment_id) and
           o.creation_user = :user_id
          [ad_dimensional_sql $dimensional]
    [ad_order_by_from_sort_spec $orderby $table_def]
     
      } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/packages/general-comments/www/index-oracle.xql}
dbqd.contrib.packages.general-comments.www.index-oracle.modified_last_24hours {dbqd.contrib.packages.general-comments.www.index-oracle.modified_last_24hours {

		creation_date + 1 > sysdate

      } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/packages/general-comments/www/index-oracle.xql}
dbqd.contrib.packages.general-comments.www.index-oracle.modified_last_week {dbqd.contrib.packages.general-comments.www.index-oracle.modified_last_week {

		creation_date + 7 > sysdate

      } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/packages/general-comments/www/index-oracle.xql}
dbqd.contrib.packages.general-comments.www.index-oracle.modified_last_month {dbqd.contrib.packages.general-comments.www.index-oracle.modified_last_month {

		creation_date + 30 > sysdate

      } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/packages/general-comments/www/index-oracle.xql}
dbqd.contrib.packages.general-comments.www.index.comments_select {dbqd.contrib.packages.general-comments.www.index.comments_select {
     select * from (
     select g.comment_id,
           r.title, 
           acs_object__name(o.creation_user) as author,
           o.creation_user, 
	   case when i.live_revision=null then 0 else 1 end as live_version_p,
	   case when i.live_revision=r.revision_id then 0 else 1 end as approved_p,
           to_char(o.creation_date, 'MM-DD-YYYY HH12:MI:AM') as pretty_date,
           o.creation_date    
      from general_comments g,
           cr_items i,
           cr_revisions r,
           acs_objects o
     where g.comment_id = i.item_id and
           r.revision_id = o.object_id and
           r.revision_id = i.latest_revision and 
           o.creation_user = :user_id
          [ad_dimensional_sql $dimensional]) as unordered
    [ad_order_by_from_sort_spec $orderby $table_def]

      } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/packages/general-comments/www/index-postgresql.xql}
dbqd.contrib.packages.general-comments.www.index.modified_last_24hours {dbqd.contrib.packages.general-comments.www.index.modified_last_24hours {

		creation_date > now() - '1 days'::interval 

      } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/packages/general-comments/www/index-postgresql.xql}
dbqd.contrib.packages.general-comments.www.index.modified_last_week {dbqd.contrib.packages.general-comments.www.index.modified_last_week {

		creation_date > now() - '7 days'::interval 

      } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/packages/general-comments/www/index-postgresql.xql}
dbqd.contrib.packages.general-comments.www.index.modified_last_month {dbqd.contrib.packages.general-comments.www.index.modified_last_month {

		creation_date > now() - '30 days'::interval

      } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/packages/general-comments/www/index-postgresql.xql}
dbqd.contrib.packages.general-comments.www.index.status_approved {dbqd.contrib.packages.general-comments.www.index.status_approved {

	      	i.live_revision is not null

      } {} {} {} c:/web/openacs-4/contrib/packages/general-comments/www/index.xql}
dbqd.contrib.packages.general-comments.www.index.status_unapproved {dbqd.contrib.packages.general-comments.www.index.status_unapproved {

	      	i.live_revision is null

      } {} {} {} c:/web/openacs-4/contrib/packages/general-comments/www/index.xql}
dbqd.contrib.packages.general-comments.www.url-add-edit-oracle.insert_extlink {dbqd.contrib.packages.general-comments.www.url-add-edit-oracle.insert_extlink {
      
    begin
        :1 := content_extlink.new (
                name            => :name,
                url             => :url,
                label           => :label,
                parent_id       => :parent_id,
                extlink_id      => :attach_id,
                creation_user   => :user_id,
                creation_ip     => :creation_ip
         );
    end;

      } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/packages/general-comments/www/url-add-edit-oracle.xql}
dbqd.contrib.packages.general-comments.www.url-add-edit.insert_extlink {dbqd.contrib.packages.general-comments.www.url-add-edit.insert_extlink {
    declare 
	v_extlink_id cr_extlinks.extlink_id%TYPE;
	
    begin
	select content_extlink__new (
                /* name            => */ :name,
                /* url             => */ :url,
                /* label           => */ :label,
		/* description        */ NULL,
                /* parent_id       => */ :parent_id,
                /* extlink_id      => */ :attach_id,
		/* creation_date      */ now(),
                /* creation_user   => */ :user_id,
                /* creation_ip     => */ :creation_ip
         ) into v_extlink_id;

	return v_extlink_id;
    end;

      } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/packages/general-comments/www/url-add-edit-postgresql.xql}
dbqd.contrib.packages.general-comments.www.url-add-edit.get_url {dbqd.contrib.packages.general-comments.www.url-add-edit.get_url {
	          select label,
        	         url
	          from cr_extlinks
        	  where extlink_id = :attach_id
		} {} {} {} c:/web/openacs-4/contrib/packages/general-comments/www/url-add-edit.xql}
dbqd.contrib.packages.general-comments.www.url-add-edit.edit_url {dbqd.contrib.packages.general-comments.www.url-add-edit.edit_url {
      
    	update cr_extlinks
       	    set label = :label,
            url = :url
         where extlink_id = :attach_id

         } {} {} {} c:/web/openacs-4/contrib/packages/general-comments/www/url-add-edit.xql}
dbqd.contrib.packages.general-comments.www.url-edit.get_comment {dbqd.contrib.packages.general-comments.www.url-edit.get_comment {
      
          select label,
                 url
            from cr_extlinks
           where extlink_id = :attach_id

      } {} {} {} c:/web/openacs-4/contrib/packages/general-comments/www/url-edit.xql}
dbqd.contrib.packages.general-comments.www.view-comment-oracle.get_latest_revision {dbqd.contrib.packages.general-comments.www.view-comment-oracle.get_latest_revision {
      
            select content_item.get_latest_revision(:comment_id) from dual
	
      } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/packages/general-comments/www/view-comment-oracle.xql}
dbqd.contrib.packages.general-comments.www.view-comment-oracle.get_revision_comment {dbqd.contrib.packages.general-comments.www.view-comment-oracle.get_revision_comment {
      
           select g.related_object_id,
	          g.comment_id,
	          content_item.get_live_revision(g.comment_id) as live_revision,
                  r.revision_id,
                  r.title,
	          r.content, 
	          r.mime_type, 
	          o.creation_user,
	          o.creation_date,
	          acs_object.name(o.creation_user) as author
             from general_comments g,
                  cr_revisions r,
                  acs_objects o
            where g.comment_id = o.object_id and
                  g.comment_id = r.item_id and
	          r.revision_id = :revision_id
    
      } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/packages/general-comments/www/view-comment-oracle.xql}
dbqd.contrib.packages.general-comments.www.view-comment-oracle.get_comment {dbqd.contrib.packages.general-comments.www.view-comment-oracle.get_comment {
      
           select g.related_object_id,
	          g.comment_id,
	          r.revision_id as live_revision,
	          r.revision_id,
                  r.title,
	          r.content, 
	          r.mime_type, 
	          o.creation_user,
	          o.creation_date,
	          acs_object.name(o.creation_user) as author
             from general_comments g,
                  acs_objects o, 
	          cr_revisions r
            where g.comment_id = :comment_id and
                  g.comment_id = o.object_id and
                  g.comment_id = r.item_id and
	          r.revision_id = content_item.get_live_revision(:comment_id)
    
      } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/packages/general-comments/www/view-comment-oracle.xql}
dbqd.contrib.packages.general-comments.www.view-comment-oracle.get_revisions {dbqd.contrib.packages.general-comments.www.view-comment-oracle.get_revisions {
      
    select r.revision_id,
           to_char(o.creation_date, 'MM-DD-YY HH24:MI:SS') as revision_date
      from cr_revisions r,
           acs_objects o
     where r.item_id = :comment_id and
           o.object_id = r.revision_id
     order by o.creation_date desc

      } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/packages/general-comments/www/view-comment-oracle.xql}
dbqd.contrib.packages.general-comments.www.view-comment.get_latest_revision {dbqd.contrib.packages.general-comments.www.view-comment.get_latest_revision {
      
            select content_item__get_latest_revision(:comment_id) 
	
      } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/packages/general-comments/www/view-comment-postgresql.xql}
dbqd.contrib.packages.general-comments.www.view-comment.get_revision_comment {dbqd.contrib.packages.general-comments.www.view-comment.get_revision_comment {
      
           select g.related_object_id as object_id,
	          g.comment_id,
	          content_item__get_live_revision(g.comment_id) as live_revision,
                  r.revision_id,
                  r.title,
	          r.content, 
	          r.mime_type, 
	          o.creation_user,
	          o.creation_date,
	          acs_object__name(o.creation_user) as author
             from general_comments g,
                  cr_revisions r,
                  acs_objects o
            where g.comment_id = o.object_id and
                  g.comment_id = r.item_id and
	          r.revision_id = :revision_id
    
      } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/packages/general-comments/www/view-comment-postgresql.xql}
dbqd.contrib.packages.general-comments.www.view-comment.get_comment {dbqd.contrib.packages.general-comments.www.view-comment.get_comment {
      
           select g.related_object_id as object_id,
	          g.comment_id,
	          r.revision_id as live_revision,
	          r.revision_id,
                  r.title,
	          r.content, 
	          r.mime_type, 
	          o.creation_user,
	          o.creation_date,
	          acs_object__name(o.creation_user) as author
             from general_comments g,
                  acs_objects o, 
	          cr_revisions r
            where g.comment_id = :comment_id and
                  g.comment_id = o.object_id and
                  g.comment_id = r.item_id and
	          r.revision_id = content_item__get_live_revision(:comment_id)
    
      } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/packages/general-comments/www/view-comment-postgresql.xql}
dbqd.contrib.packages.general-comments.www.view-comment.get_revisions {dbqd.contrib.packages.general-comments.www.view-comment.get_revisions {
      
    select r.revision_id,
           to_char(o.creation_date, 'MM-DD-YY HH24:MI:SS') as revision_date
      from cr_revisions r,
           acs_objects o
     where r.item_id = :comment_id and
           o.object_id = r.revision_id
     order by o.creation_date desc

      } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/packages/general-comments/www/view-comment-postgresql.xql}
dbqd.contrib.packages.general-comments.www.view-comment.get_attachments {dbqd.contrib.packages.general-comments.www.view-comment.get_attachments {
      
   select r.title,
          r.mime_type,
          i.name,
          i.item_id
     from cr_items i,
          cr_revisions r
    where i.parent_id = :comment_id and
          r.revision_id = i.live_revision

      } {} {} {} c:/web/openacs-4/contrib/packages/general-comments/www/view-comment.xql}
dbqd.contrib.packages.general-comments.www.view-comment.get_links {dbqd.contrib.packages.general-comments.www.view-comment.get_links {
      
    select i.item_id,
           e.label,
           e.url
      from cr_items i, cr_extlinks e
     where i.parent_id = :comment_id and
           e.extlink_id = i.item_id

      } {} {} {} c:/web/openacs-4/contrib/packages/general-comments/www/view-comment.xql}
dbqd.contrib.packages.general-comments.www.view-comment.get_object_id {dbqd.contrib.packages.general-comments.www.view-comment.get_object_id {
      select related_object_id from general_comments where comment_id = :comment_id
      } {} {} {} c:/web/openacs-4/contrib/packages/general-comments/www/view-comment.xql}
dbqd.contrib.packages.general-comments.www.view-image.get_image {dbqd.contrib.packages.general-comments.www.view-image.get_image {
      
    select i.name,
           r.title,
           m.width,
           m.height
      from cr_items i, 
           cr_revisions r, 
           images m
     where i.item_id = :image_id and
           r.revision_id = i.live_revision and
           r.revision_id = m.image_id

      } {} {} {} c:/web/openacs-4/contrib/packages/general-comments/www/view-image.xql}
dbqd.contrib.packages.irc-logger.tcl.irc-logger-init.get_mounted_loggers {dbqd.contrib.packages.irc-logger.tcl.irc-logger-init.get_mounted_loggers {
      select package_id 
      from apm_packages p, site_nodes n  
      where p.package_key = :package_key 
      and n.object_id = package_id
    } {} {} {} c:/web/openacs-4/contrib/packages/irc-logger/tcl/irc-logger-init.xql}
dbqd.contrib.packages.irc-logger.tcl.irc-logger-procs.irc::logger::rotate_logs.get_parent_id {dbqd.contrib.packages.irc-logger.tcl.irc-logger-procs.irc::logger::rotate_logs.get_parent_id {
      select etp__get_folder_id(:package_id)
    } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/packages/irc-logger/tcl/irc-logger-procs-postgresql.xql}
dbqd.contrib.packages.irc-logger.tcl.irc-logger-procs.irc::logger::rotate_logs.etp_logs {dbqd.contrib.packages.irc-logger.tcl.irc-logger-procs.irc::logger::rotate_logs.etp_logs {
      select i1.item_id, i1.tree_sortkey, coalesce((
      	select tree_sortkey 
      	from cr_items i2 
      	where i2.tree_sortkey > i1.tree_sortkey 
      	and i2.parent_id = :parent_id 
        and i2.name <> 'index'
        and $i2_select_criteria
      	order by i2.tree_sortkey limit 1), (
      	select i2.tree_sortkey 
      	from cr_items i2
      	where i2.parent_id = :parent_id
        and i2.name <> 'index'
        and $i2_select_criteria
      	order by i2.tree_sortkey limit 1)) as next_sortkey
      from cr_items i1
      where i1.parent_id = :parent_id 
      and i1.name <> 'index'
      and $i1_select_criteria
      order by i1.tree_sortkey;
    } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/packages/irc-logger/tcl/irc-logger-procs-postgresql.xql}
dbqd.contrib.packages.irc-logger.tcl.irc-logger-procs.irc::logger::update_log.page_create {dbqd.contrib.packages.irc-logger.tcl.irc-logger-procs.irc::logger::update_log.page_create {
      select etp__create_page(:parent_package_id, :date, :date, :content_type)
    } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/packages/irc-logger/tcl/irc-logger-procs-postgresql.xql}
dbqd.contrib.packages.irc-logger.tcl.irc-logger-procs.irc::logger::update_log.create_extlink {dbqd.contrib.packages.irc-logger.tcl.irc-logger-procs.irc::logger::update_log.create_extlink {
      select etp__create_extlink(:parent_package_id, :log_url, :link_label, :link_description);
    } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/packages/irc-logger/tcl/irc-logger-procs-postgresql.xql}
dbqd.contrib.packages.irc-logger.tcl.irc-logger-procs.dom::xpathFunc::irc::logger::user_link.get_user {dbqd.contrib.packages.irc-logger.tcl.irc-logger-procs.dom::xpathFunc::irc::logger::user_link.get_user {
      select u.user_id, p.first_names || ' ' || p.last_name as name 
      from users u, persons p 
      where u.screen_name = :nick
      and p.person_id = u.user_id
      limit 1
    } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/packages/irc-logger/tcl/irc-logger-procs-postgresql.xql}
dbqd.contrib.packages.irc-logger.tcl.irc-logger-procs.irc::logger::rotate_logs.i1_criteria {dbqd.contrib.packages.irc-logger.tcl.irc-logger-procs.irc::logger::rotate_logs.i1_criteria {
      (i1.content_type <> 'content_extlink' or
	i1.content_type is null)
    } {} {} {} c:/web/openacs-4/contrib/packages/irc-logger/tcl/irc-logger-procs.xql}
dbqd.contrib.packages.irc-logger.tcl.irc-logger-procs.irc::logger::rotate_logs.i2_criteria {dbqd.contrib.packages.irc-logger.tcl.irc-logger-procs.irc::logger::rotate_logs.i2_criteria {
      (i2.content_type <> 'content_extlink' or
	i2.content_type is null)
    } {} {} {} c:/web/openacs-4/contrib/packages/irc-logger/tcl/irc-logger-procs.xql}
dbqd.contrib.packages.irc-logger.tcl.irc-logger-procs.irc::logger::rotate_logs.shift {dbqd.contrib.packages.irc-logger.tcl.irc-logger-procs.irc::logger::rotate_logs.shift {
      update cr_items 
      set tree_sortkey = :next_sortkey
      where item_id = :item_id
    } {} {} {} c:/web/openacs-4/contrib/packages/irc-logger/tcl/irc-logger-procs.xql}
dbqd.contrib.packages.irc-logger.tcl.irc-logger-procs.irc::logger::update_log.get_extlink {dbqd.contrib.packages.irc-logger.tcl.irc-logger-procs.irc::logger::update_log.get_extlink {
      select extlink_id 
      from cr_extlinks e, cr_items i, cr_folders f
      where i.item_id = e.extlink_id
      and i.parent_id = f.folder_id
      and f.package_id = :parent_package_id
      and e.label = 'current'
    } {} {} {} c:/web/openacs-4/contrib/packages/irc-logger/tcl/irc-logger-procs.xql}
dbqd.contrib.packages.irc-logger.tcl.irc-logger-procs.irc::logger::update_log.update_extlink {dbqd.contrib.packages.irc-logger.tcl.irc-logger-procs.irc::logger::update_log.update_extlink {
      update cr_extlinks
      set url = :log_url
      where extlink_id = :extlink_id
    } {} {} {} c:/web/openacs-4/contrib/packages/irc-logger/tcl/irc-logger-procs.xql}
dbqd.contrib.packages.irc-logger.tcl.irc-logger-procs.irc::logger::update_log.update_revision {dbqd.contrib.packages.irc-logger.tcl.irc-logger-procs.irc::logger::update_log.update_revision {
      update cr_revisions 
      set description = :log_description, content = :irc_html_log, mime_type = 'text/html'
      where revision_id = :log_live_revision_id
    } {} {} {} c:/web/openacs-4/contrib/packages/irc-logger/tcl/irc-logger-procs.xql}
dbqd.contrib.packages.irc-logger.www.admin.index.get_package_name {dbqd.contrib.packages.irc-logger.www.admin.index.get_package_name {
      select p.instance_name 
      from apm_packages p, apm_package_versions v
      where p.package_id = :package_id
      and p.package_key = v.package_key
      and v.enabled_p = 't'
    } {} {} {} c:/web/openacs-4/contrib/packages/irc-logger/www/admin/index.xql}
dbqd.contrib.packages.irc-logger.www.index.get_package_name {dbqd.contrib.packages.irc-logger.www.index.get_package_name {
      select p.instance_name 
      from apm_packages p, apm_package_versions v
      where p.package_id = :package_id
      and p.package_key = v.package_key
      and v.enabled_p = 't'
    } {} {} {} c:/web/openacs-4/contrib/packages/irc-logger/www/index.xql}
dbqd.contrib.packages.mail-links.tcl.mail-links-procs-oracle.mail_link::add.insert_mail_link {dbqd.contrib.packages.mail-links.tcl.mail-links-procs-oracle.mail_link::add.insert_mail_link {
	    begin
	    :1 := mail_link.new (
			       mail_id => :mail_id,
			       url => :url
			       );
	    end;
} {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/packages/mail-links/tcl/mail-links-procs-oracle.xql}
dbqd.contrib.packages.mail-links.tcl.mail-links-procs.mail_link::add.insert_mail_link {dbqd.contrib.packages.mail-links.tcl.mail-links-procs.mail_link::add.insert_mail_link {
	    select mail_link__new(:mail_id, :url)
} {} {} {postgresql 7.3} c:/web/openacs-4/contrib/packages/mail-links/tcl/mail-links-procs-postgresql.xql}
dbqd.contrib.packages.mail-links.tcl.mail-links-procs.mail_link::click.insert_click {dbqd.contrib.packages.mail-links.tcl.mail-links-procs.mail_link::click.insert_click {
    insert into mail_link_clicks (mail_id, link_id, user_id)
    values (:mail_id, :link_id, :user_id)
} {} {} {} c:/web/openacs-4/contrib/packages/mail-links/tcl/mail-links-procs.xql}
dbqd.contrib.packages.mail-links.tcl.mail-links-procs.mail_link::get_link_url.get_link_url {dbqd.contrib.packages.mail-links.tcl.mail-links-procs.mail_link::get_link_url.get_link_url {
	select url
	from mail_links
	where link_id = :link_id
} {} {} {} c:/web/openacs-4/contrib/packages/mail-links/tcl/mail-links-procs.xql}
dbqd.contrib.packages.mailing-lists.tcl.email-procs-oracle.mail_job::sweeper.get_queued_mail_jobs {dbqd.contrib.packages.mailing-lists.tcl.email-procs-oracle.mail_job::sweeper.get_queued_mail_jobs {
      
		select mail_job_id
		from ml_mail_jobs
		where state = 'active'
		and scheduled_date <= sysdate
	    
      } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/packages/mailing-lists/tcl/email-procs-oracle.xql}
dbqd.contrib.packages.mailing-lists.tcl.email-procs-oracle.mail_job::send.start_mail_job {dbqd.contrib.packages.mailing-lists.tcl.email-procs-oracle.mail_job::send.start_mail_job {
      
	    update ml_mail_jobs
	    set state = 'started',
	        execution_date = sysdate
	    where mail_job_id = :mail_job_id
	
      } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/packages/mailing-lists/tcl/email-procs-oracle.xql}
dbqd.contrib.packages.mailing-lists.tcl.email-procs-oracle.mail_job::send.get_attachments {dbqd.contrib.packages.mailing-lists.tcl.email-procs-oracle.mail_job::send.get_attachments {
      
	    select r.mime_type, r.title, r.filename
	    from cr_revisions r
	    where r.revision_id = :css_revision_id
	    union
	    select r.mime_type, r.title, r.filename
	    from cr_items i, cr_revisions r
	    where r.item_id = i.item_id
	    and i.parent_id = :mail_job_id
	
      } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/packages/mailing-lists/tcl/email-procs-oracle.xql}
dbqd.contrib.packages.mailing-lists.tcl.email-procs-oracle.mail_job::send.log_users_latest_mail {dbqd.contrib.packages.mailing-lists.tcl.email-procs-oracle.mail_job::send.log_users_latest_mail {
      
		update ml_user_email_log
		set last_mail_date = sysdate
		where user_id = :user_id
	    
      } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/packages/mailing-lists/tcl/email-procs-oracle.xql}
dbqd.contrib.packages.mailing-lists.tcl.email-procs-oracle.mail_job::send.finish_mail_job {dbqd.contrib.packages.mailing-lists.tcl.email-procs-oracle.mail_job::send.finish_mail_job {
      
		update ml_mail_jobs
		set state = 'finished',
	            mails_sent = :mail_count,
	            track_links_p = (select case when count(*) = 0 then 'f' else 't' end
				     from mail_link_mail_map m
				     where mail_id = :mail_job_id)
		where mail_job_id = :mail_job_id
	    
      } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/packages/mailing-lists/tcl/email-procs-oracle.xql}
dbqd.contrib.packages.mailing-lists.tcl.email-procs-oracle.mail_job::mail_bounced.record_bounce_in_log {dbqd.contrib.packages.mailing-lists.tcl.email-procs-oracle.mail_job::mail_bounced.record_bounce_in_log {
      
			insert into ml_bounce_log (mail_job_id, user_id, sending_time,
						   bouncing_time)
			(select mail_job_id, user_id, send_date as sending_time,
			 sysdate as bouncing_time
			 from ml_email_log
			 where mail_job_id = :job_id
			 and user_id = :user_id)
		    
      } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/packages/mailing-lists/tcl/email-procs-oracle.xql}
dbqd.contrib.packages.mailing-lists.tcl.email-procs.mail_job::sweeper.get_queued_mail_jobs {dbqd.contrib.packages.mailing-lists.tcl.email-procs.mail_job::sweeper.get_queued_mail_jobs {
      
		select mail_job_id
		from ml_mail_jobs
		where state = 'active'
		and scheduled_date <= current_timestamp
	    
      } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/packages/mailing-lists/tcl/email-procs-postgresql.xql}
dbqd.contrib.packages.mailing-lists.tcl.email-procs.mail_job::send.start_mail_job {dbqd.contrib.packages.mailing-lists.tcl.email-procs.mail_job::send.start_mail_job {
      
	    update ml_mail_jobs
	    set state = 'started',
	        execution_date = current_timestamp
	    where mail_job_id = :mail_job_id
	
      } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/packages/mailing-lists/tcl/email-procs-postgresql.xql}
dbqd.contrib.packages.mailing-lists.tcl.email-procs.mail_job::send.get_attachments {dbqd.contrib.packages.mailing-lists.tcl.email-procs.mail_job::send.get_attachments {
      
	    select r.mime_type, r.title, r.content as filename
	    from cr_revisions r
	    where r.revision_id = :css_revision_id
	    union
	    select r.mime_type, r.title, r.content as filename
	    from cr_items i, cr_revisions r
	    where r.item_id = i.item_id
	    and i.parent_id = :mail_job_id
	
      } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/packages/mailing-lists/tcl/email-procs-postgresql.xql}
dbqd.contrib.packages.mailing-lists.tcl.email-procs.mail_job::send.log_users_latest_mail {dbqd.contrib.packages.mailing-lists.tcl.email-procs.mail_job::send.log_users_latest_mail {
      
		update ml_user_email_log
		set last_mail_date = current_timestamp
		where user_id = :user_id
	    
      } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/packages/mailing-lists/tcl/email-procs-postgresql.xql}
dbqd.contrib.packages.mailing-lists.tcl.email-procs.mail_job::send.finish_mail_job {dbqd.contrib.packages.mailing-lists.tcl.email-procs.mail_job::send.finish_mail_job {
      
		update ml_mail_jobs
		set state = 'finished',
	            mails_sent = :mail_count,
	            track_links_p = (select case when count(*) = 0 then FALSE else TRUE end
				     from mail_link_mail_map m
				     where mail_id = :mail_job_id)
		where mail_job_id = :mail_job_id
	    
      } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/packages/mailing-lists/tcl/email-procs-postgresql.xql}
dbqd.contrib.packages.mailing-lists.tcl.email-procs.mail_job::mail_bounced.record_bounce_in_log {dbqd.contrib.packages.mailing-lists.tcl.email-procs.mail_job::mail_bounced.record_bounce_in_log {
      
			insert into ml_bounce_log (mail_job_id, user_id, sending_time,
						   bouncing_time)
			(select mail_job_id, user_id, send_date as sending_time,
			 current_timestamp as bouncing_time
			 from ml_email_log
			 where mail_job_id = :job_id
			 and user_id = :user_id)
		    
      } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/packages/mailing-lists/tcl/email-procs-postgresql.xql}
dbqd.contrib.packages.mailing-lists.tcl.email-procs.mail_job::send.get_data {dbqd.contrib.packages.mailing-lists.tcl.email-procs.mail_job::send.get_data {
      
	    select j.subject, j.text_body, j.text_header, j.text_footer,
	           j.html_body, j.html_header, j.html_footer, j.locale,
	           j.mime_type as mail_mime_type, l.mime_charset,
	           j.sender_email, j.track_links_p, template_p,
	           j.css_revision_id, j.list_id, j.selection_id,
	           j.sql_query, j.bind_vars, j.package_id
	    from ml_mail_jobs j, ad_locales l
	    where j.mail_job_id = :mail_job_id
	    and j.state = 'active'
	    and l.locale = j.locale
	
      } {} {} {} c:/web/openacs-4/contrib/packages/mailing-lists/tcl/email-procs.xql}
dbqd.contrib.packages.mailing-lists.tcl.email-procs.mail_job::send.get_list_users_to_mail {dbqd.contrib.packages.mailing-lists.tcl.email-procs.mail_job::send.get_list_users_to_mail {
      
		    select u.user_id, p.first_names as user_first_names,
		           p.last_name as user_last_name, i.email as user_email
		    from ml_mailing_list_user_map m, users u, parties i, persons p
		    where u.user_id = m.user_id
		    and u.email_bouncing_p = 'f'
		    and m.list_id = :list_id
		    and m.subscribed_p = 't'
		    and i.party_id = u.user_id
		    and p.person_id = u.user_id
		    and u.email_verified_p = 't'
		    and u.email_bouncing_p = 'f'
	    
      } {} {} {} c:/web/openacs-4/contrib/packages/mailing-lists/tcl/email-procs.xql}
dbqd.contrib.packages.mailing-lists.tcl.email-procs.mail_job::send.log_mail_sending {dbqd.contrib.packages.mailing-lists.tcl.email-procs.mail_job::send.log_mail_sending {
      
		insert into ml_email_log (user_id, mail_job_id)
		values (:user_id, :mail_job_id)
	    
      } {} {} {} c:/web/openacs-4/contrib/packages/mailing-lists/tcl/email-procs.xql}
dbqd.contrib.packages.mailing-lists.tcl.email-procs.mail_job::send.finish_mail_job {dbqd.contrib.packages.mailing-lists.tcl.email-procs.mail_job::send.finish_mail_job {
      
		update ml_mail_jobs
		set state = 'finished',
	            mails_sent = :mail_count,
	            track_links_p = (select case when count(*) = 0 then FALSE else TRUE end
				     from mail_link_mail_map m
				     where mail_id = :mail_job_id)
		where mail_job_id = :mail_job_id
	    
      } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/packages/mailing-lists/tcl/email-procs-postgresql.xql}
dbqd.contrib.packages.mailing-lists.tcl.email-procs.mail_job::mail_bounced.increment_bounce_count {dbqd.contrib.packages.mailing-lists.tcl.email-procs.mail_job::mail_bounced.increment_bounce_count {
      
			    update ml_mail_jobs
			    set mails_bounced = mails_bounced + 1
			    where mail_job_id = :job_id
			
      } {} {} {} c:/web/openacs-4/contrib/packages/mailing-lists/tcl/email-procs.xql}
dbqd.contrib.packages.mailing-lists.tcl.mailing-lists-procs-oracle.mailing_list::add.insert_mailing_list {dbqd.contrib.packages.mailing-lists.tcl.mailing-lists-procs-oracle.mailing_list::add.insert_mailing_list {
		begin
		:1 := ml_mailing_list.new (
					   list_id => :list_id,
					   package_id => :package_id,
					   name => :name,
					   locale => :locale,
					   sender_email => :sender_email,
					   confirm_subject => :confirm_subject,
					   confirm_mime_type => :confirm_mime_type,
					   welcome_subject => :welcome_subject,
					   welcome_mime_type => :welcome_mime_type,
					   remind_subject => :remind_subject,
					   remind_mime_type => :remind_mime_type,
					   expiration_date => $expiration_date,
					   first_reminder => :first_reminder,
					   second_reminder => :second_reminder,
					   context_id => :package_id,
					   creation_user => :user_id,
					   creation_ip => :creation_ip);
		end;
      } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/packages/mailing-lists/tcl/mailing-lists-procs-oracle.xql}
dbqd.contrib.packages.mailing-lists.tcl.mailing-lists-procs-oracle.mailing_list::edit.update_mailing_list {dbqd.contrib.packages.mailing-lists.tcl.mailing-lists-procs-oracle.mailing_list::edit.update_mailing_list {
		begin
		ml_mailing_list.edit (
				      list_id => :list_id,
				      name => :name,
				      locale => :locale,
				      sender_email => :sender_email,
				      confirm_subject => :confirm_subject,
				      confirm_mime_type => :confirm_mime_type,
				      welcome_subject => :welcome_subject,
				      welcome_mime_type => :welcome_mime_type,
				      remind_subject => :remind_subject,
				      remind_mime_type => :remind_mime_type,
				      expiration_date => $expiration_date,
				      first_reminder => :first_reminder,
				      second_reminder => :second_reminder,
				      modifying_user => :user_id,
				      modifying_ip => :modifying_ip);
		end;
      } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/packages/mailing-lists/tcl/mailing-lists-procs-oracle.xql}
dbqd.contrib.packages.mailing-lists.tcl.mailing-lists-procs-oracle.mailing_list::add_user.add_user_entry {dbqd.contrib.packages.mailing-lists.tcl.mailing-lists-procs-oracle.mailing_list::add_user.add_user_entry {
      
		insert into ml_mailing_list_user_map
		(list_id, user_id, confirmed_p, subscribed_p, subscription_date)
		values (:list_id, :user_id, :confirmed_p, :confirmed_p, sysdate)
	    
      } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/packages/mailing-lists/tcl/mailing-lists-procs-oracle.xql}
dbqd.contrib.packages.mailing-lists.tcl.mailing-lists-procs-oracle.mailing_list::send_reminder.get_unconfirmed_subscriptions {dbqd.contrib.packages.mailing-lists.tcl.mailing-lists-procs-oracle.mailing_list::send_reminder.get_unconfirmed_subscriptions {
      
	    select m.user_id, ml.sender_email, ml.remind_subject,
		   ml.remind_body, ml.remind_mime_type, l.mime_charset,
		   ml.list_id, n.node_id
	    from ml_mailing_lists ml, ml_mailing_list_user_map_user_map m,
		 ad_locales l, site_nodes n
	    where m.list_id = ml.list_id
	    and ml.locale = l.locale
	    and m.confirmed_p = 'f'
	    and n.object_id = r.package_id
	    and ((m.reminder_count = 0
		  and ml.first_reminder > 0
		  and m.subscription_date < sysdate - ml.first_reminder)
		 or (m.reminder_count = 1
		     and ml.second_reminder > 0
		     and m.subscription_date < sysdate - ml.second_reminder))
	
      } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/packages/mailing-lists/tcl/mailing-lists-procs-oracle.xql}
dbqd.contrib.packages.mailing-lists.tcl.mailing-lists-procs-oracle.mail_class::add.insert_mail_class {dbqd.contrib.packages.mailing-lists.tcl.mailing-lists-procs-oracle.mail_class::add.insert_mail_class {
      
		begin
		:1 := ml_mail_class.new (
					 mail_class_id => :mail_class_id,
					 package_id => :package_id,
					 name => :name,
					 locale => :locale,
					 sender_email => :sender_email,
					 subject => :subject,
					 subject_change_p => :subject_change_p,
					 text_header_change_p => :text_header_change_p,
					 text_body_change_p => :text_body_change_p,
					 text_footer_change_p => :text_footer_change_p,
					 html_header_change_p => :html_header_change_p,
					 html_body_change_p => :html_body_change_p,
					 html_footer_change_p => :html_footer_change_p,
					 mime_type => :mime_type,
					 context_id => :package_id,
					 creation_user => :user_id,
					 creation_ip => :creation_ip);
		end;
	    
      } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/packages/mailing-lists/tcl/mailing-lists-procs-oracle.xql}
dbqd.contrib.packages.mailing-lists.tcl.mailing-lists-procs-oracle.mail_class::edit.update_mail_class {dbqd.contrib.packages.mailing-lists.tcl.mailing-lists-procs-oracle.mail_class::edit.update_mail_class {
      
		begin
		ml_mail_class.edit (
				    mail_class_id => :mail_class_id,
				    name => :name,
				    locale => :locale,
				    sender_email => :sender_email,
				    subject => :subject,
				    subject_change_p => :subject_change_p,
				    text_header_change_p => :text_header_change_p,
				    text_body_change_p => :text_body_change_p,
				    text_footer_change_p => :text_footer_change_p,
				    html_header_change_p => :html_header_change_p,
				    html_body_change_p => :html_body_change_p,
				    html_footer_change_p => :html_footer_change_p,
				    mime_type => :mime_type,
				    modifying_user => :user_id,
				    modifying_ip => :modifying_ip);
		end;
	    
      } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/packages/mailing-lists/tcl/mailing-lists-procs-oracle.xql}
dbqd.contrib.packages.mailing-lists.tcl.mailing-lists-procs-oracle.mail_job::add.insert_mail_job {dbqd.contrib.packages.mailing-lists.tcl.mailing-lists-procs-oracle.mail_job::add.insert_mail_job {
		begin
		:1 := ml_mail_job.new (
				       mail_class_id => :class_id,
				       list_id => :list_id,
				       selection_id => :selection_id,
				       package_id => :package_id,
				       locale => :locale,
				       sender_email => :sender_email,
				       track_links_p => :track_links_p,
				       subject => :subject,
				       template_p => :template_p,
				       mime_type => :mime_type,
				       state => :state,
				       scheduled_date => $scheduled_date,
				       bind_vars => :bind_vars,
				       context_id => :class_id,
				       creation_user => :user_id,
				       creation_ip => :creation_ip);
		end;
      } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/packages/mailing-lists/tcl/mailing-lists-procs-oracle.xql}
dbqd.contrib.packages.mailing-lists.tcl.mailing-lists-procs-oracle.mail_job::edit.update_mail_job {dbqd.contrib.packages.mailing-lists.tcl.mailing-lists-procs-oracle.mail_job::edit.update_mail_job {
		begin
		ml_mail_job.edit (
				  mail_job_id => :mail_job_id,
				  locale => :locale,
				  sender_email => :sender_email,
				  track_links_p => :track_links_p,
				  subject => :subject,
				  template_p => :template_p,
				  mime_type => :mime_type,
				  state => :state,
				  scheduled_date => $scheduled_date,
				  bind_vars => :bind_vars,
				  modifying_user => :user_id,
				  modifying_ip => :modifying_ip);
		end;
      } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/packages/mailing-lists/tcl/mailing-lists-procs-oracle.xql}
dbqd.contrib.packages.mailing-lists.tcl.mailing-lists-procs.mailing_list::add.insert_mailing_list {dbqd.contrib.packages.mailing-lists.tcl.mailing-lists-procs.mailing_list::add.insert_mailing_list {
      select ml_mailing_list__new (
      	     :list_id,
	     :package_id,
	     :name,
	     :locale,
	     :teaser,
	     :sender_email,
	     :confirm_subject,
	     :confirm_body,
	     :confirm_mime_type,
	     :welcome_subject,
	     :welcome_body,
	     :welcome_mime_type,
	     :remind_subject,
	     :remind_body,
	     :remind_mime_type,
	     $expiration_date,
	     :first_reminder,
	     :second_reminder,
	     :comments,
	     :package_id,
	     :user_id,
	     current_timestamp,
	     :creation_ip
      );
      } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/packages/mailing-lists/tcl/mailing-lists-procs-postgresql.xql}
dbqd.contrib.packages.mailing-lists.tcl.mailing-lists-procs.mailing_list::edit.update_mailing_list {dbqd.contrib.packages.mailing-lists.tcl.mailing-lists-procs.mailing_list::edit.update_mailing_list {
      select ml_mailing_list__edit (
      	     :list_id,
	     :name,
	     :locale,
	     :teaser,
	     :sender_email,
	     :confirm_subject,
	     :confirm_body,
	     :confirm_mime_type,
	     :welcome_subject,
	     :welcome_body,		
	     :welcome_mime_type,
	     :remind_subject,
	     :remind_body,		
	     :remind_mime_type,
	     $expiration_date,
	     :first_reminder,
	     :second_reminder,
	     :comments,
	     :user_id,
	     :modifying_ip
      );
      } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/packages/mailing-lists/tcl/mailing-lists-procs-postgresql.xql}
dbqd.contrib.packages.mailing-lists.tcl.mailing-lists-procs.mailing_list::add_user.add_user_entry {dbqd.contrib.packages.mailing-lists.tcl.mailing-lists-procs.mailing_list::add_user.add_user_entry {
 
		insert into ml_mailing_list_user_map
		(list_id, user_id, confirmed_p, subscribed_p, subscription_date)
		values (:list_id, :user_id, :confirmed_p, :confirmed_p, current_timestamp)
	    
      } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/packages/mailing-lists/tcl/mailing-lists-procs-postgresql.xql}
dbqd.contrib.packages.mailing-lists.tcl.mailing-lists-procs.mailing_list::send_reminder.get_unconfirmed_subscriptions {dbqd.contrib.packages.mailing-lists.tcl.mailing-lists-procs.mailing_list::send_reminder.get_unconfirmed_subscriptions {
      
	    select m.user_id, ml.sender_email, ml.remind_subject,
		   ml.remind_body, ml.remind_mime_type, l.mime_charset,
		   ml.list_id, n.node_id
	    from ml_mailing_lists ml, ml_mailing_list_user_map_user_map m,
		 ad_locales l, site_nodes n
	    where m.list_id = ml.list_id
	    and ml.locale = l.locale
	    and m.confirmed_p = 'f'
	    and n.object_id = r.package_id
	    and ((m.reminder_count = 0
		  and ml.first_reminder > 0
		  and m.subscription_date < (current_timestamp - 
		  (cast (ml.first_reminder || ' days' as interval))
		  ))
		 or (m.reminder_count = 1
		     and ml.second_reminder > 0
		     and m.subscription_date < (current_timestamp -
		     (cast (ml.second_reminder || ' days' as interval)))
		    )
		)

	
      } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/packages/mailing-lists/tcl/mailing-lists-procs-postgresql.xql}
dbqd.contrib.packages.mailing-lists.tcl.mailing-lists-procs.mail_class::add.insert_mail_class {dbqd.contrib.packages.mailing-lists.tcl.mailing-lists-procs.mail_class::add.insert_mail_class {
      select ml_mail_class__new (
      	     :mail_class_id,
	     :package_id,
	     :name,
	     :locale,
	     :sender_email,
	     :subject,
	     :subject_change_p,
	     null,
	     :text_header_change_p,
	     null,
	     :text_body_change_p,
	     null,
	     :text_footer_change_p,
	     null,
	     :html_header_change_p,
	     null,
	     :html_body_change_p,
	     null,
	     :html_footer_change_p,
	     :mime_type,
	     null,
	     :package_id,
	     :user_id,
	     current_timestamp,
	     :creation_ip
      );
      } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/packages/mailing-lists/tcl/mailing-lists-procs-postgresql.xql}
dbqd.contrib.packages.mailing-lists.tcl.mailing-lists-procs.mail_class::edit.update_mail_class {dbqd.contrib.packages.mailing-lists.tcl.mailing-lists-procs.mail_class::edit.update_mail_class {
      select ml_mail_class__edit (
      	     :mail_class_id,
	     :name,
	     :locale,
	     :sender_email,
	     :subject,
	     :subject_change_p,
	     null,
	     :text_header_change_p,
	     null,
	     :text_body_change_p,
	     null,
	     :text_footer_change_p,
	     null,
	     :html_header_change_p,
	     null,
	     :html_body_change_p,
	     null,
	     :html_footer_change_p,
	     :mime_type,
	     null,
	     :user_id,
	     :modifying_ip);
      } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/packages/mailing-lists/tcl/mailing-lists-procs-postgresql.xql}
dbqd.contrib.packages.mailing-lists.tcl.mailing-lists-procs.mail_job::add.insert_mail_job {dbqd.contrib.packages.mailing-lists.tcl.mailing-lists-procs.mail_job::add.insert_mail_job {
      select ml_mail_job__new (
      	     null,
      	     :class_id,
	     :list_id,
	     :selection_id,
	     :package_id,
	     :locale,
	     :sender_email,
	     :track_links_p,
	     :subject,
	     null,
	     null,
	     null,
	     null,
	     null,
	     null,
	     :template_p,
	     :mime_type,
	     :state,
	     $scheduled_date,
	     :bind_vars,
	     :class_id,
	     :user_id,
	     current_timestamp,
	     :creation_ip);
      } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/packages/mailing-lists/tcl/mailing-lists-procs-postgresql.xql}
dbqd.contrib.packages.mailing-lists.tcl.mailing-lists-procs.mail_job::edit.update_mail_job {dbqd.contrib.packages.mailing-lists.tcl.mailing-lists-procs.mail_job::edit.update_mail_job {
      select ml_mail_job__edit (
      	     :mail_job_id,
	     :locale,
	     :sender_email,
	     :track_links_p,
	     :subject,
	     null,
	     null,
	     null,
	     null,
	     null,
	     null,
	     :template_p,
	     :mime_type,
	     :state,
	     $scheduled_date,
	     :bind_vars,
	     :user_id,
	     :modifying_ip);
      } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/packages/mailing-lists/tcl/mailing-lists-procs-postgresql.xql}
dbqd.contrib.packages.mailing-lists.tcl.mailing-lists-procs.mailing_list::add.set_mailing_list_clobs {dbqd.contrib.packages.mailing-lists.tcl.mailing-lists-procs.mailing_list::add.set_mailing_list_clobs {
      
		update ml_mailing_lists
		set teaser = :teaser,
		    confirm_body = :confirm_body,
		    welcome_body = :welcome_body,
		    remind_body = :remind_body,
	            comments = :comments
		where list_id = :list_id
	    
      } {} {} {} c:/web/openacs-4/contrib/packages/mailing-lists/tcl/mailing-lists-procs.xql}
dbqd.contrib.packages.mailing-lists.tcl.mailing-lists-procs.mailing_list::edit.set_mailing_list_clobs {dbqd.contrib.packages.mailing-lists.tcl.mailing-lists-procs.mailing_list::edit.set_mailing_list_clobs {
      
		update ml_mailing_lists
		set teaser = :teaser,
		    confirm_body = :confirm_body,
		    welcome_body = :welcome_body,
		    remind_body = :remind_body,
	            comments = :comments
		where list_id = :list_id
	    
      } {} {} {} c:/web/openacs-4/contrib/packages/mailing-lists/tcl/mailing-lists-procs.xql}
dbqd.contrib.packages.mailing-lists.tcl.mailing-lists-procs.mailing_list::add_user.add_user_log_entry {dbqd.contrib.packages.mailing-lists.tcl.mailing-lists-procs.mailing_list::add_user.add_user_log_entry {
      
		insert into ml_user_email_log (user_id, last_mail_date)
		(select :user_id as user_id, null as last_mail_date
		from dual
		where not exists (select 1 from ml_user_email_log
				  where user_id = :user_id))
	    
      } {} {} {} c:/web/openacs-4/contrib/packages/mailing-lists/tcl/mailing-lists-procs.xql}
dbqd.contrib.packages.mailing-lists.tcl.mailing-lists-procs.mailing_list::send_reminder.log_reminder_sending {dbqd.contrib.packages.mailing-lists.tcl.mailing-lists-procs.mailing_list::send_reminder.log_reminder_sending {
      
		update ml_mailing_list_user_map
		set reminder_count = reminder_count + 1
		where user_id = :user_id
	    
      } {} {} {} c:/web/openacs-4/contrib/packages/mailing-lists/tcl/mailing-lists-procs.xql}
dbqd.contrib.packages.mailing-lists.tcl.mailing-lists-procs.mailing_list::user_subscribed_p.check_user_entry_exists {dbqd.contrib.packages.mailing-lists.tcl.mailing-lists-procs.mailing_list::user_subscribed_p.check_user_entry_exists {
      
	    select 1
	    from ml_mailing_list_user_map
	    where list_id = :list_id
	    and user_id = :user_id
	
      } {} {} {} c:/web/openacs-4/contrib/packages/mailing-lists/tcl/mailing-lists-procs.xql}
dbqd.contrib.packages.mailing-lists.tcl.mailing-lists-procs.mail_class::add.set_mail_class_clobs {dbqd.contrib.packages.mailing-lists.tcl.mailing-lists-procs.mail_class::add.set_mail_class_clobs {
      
		update ml_mail_classes
		set text_header = :text_header,
	            text_body = :text_body,
	            text_footer = :text_footer,
	            html_header = :html_header,
	            html_body = :html_body,
	            html_footer = :html_footer,
	            comments = :comments
		where mail_class_id = :mail_class_id
	    
      } {} {} {} c:/web/openacs-4/contrib/packages/mailing-lists/tcl/mailing-lists-procs.xql}
dbqd.contrib.packages.mailing-lists.tcl.mailing-lists-procs.mail_class::edit.set_mail_class_clobs {dbqd.contrib.packages.mailing-lists.tcl.mailing-lists-procs.mail_class::edit.set_mail_class_clobs {
      
		update ml_mail_classes
		set text_header = :text_header,
	            text_body = :text_body,
	            text_footer = :text_footer,
	            html_header = :html_header,
	            html_body = :html_body,
	            html_footer = :html_footer,
	            comments = :comments
		where mail_class_id = :mail_class_id
	    
      } {} {} {} c:/web/openacs-4/contrib/packages/mailing-lists/tcl/mailing-lists-procs.xql}
dbqd.contrib.packages.mailing-lists.tcl.mailing-lists-procs.mail_job::add.set_email_clobs {dbqd.contrib.packages.mailing-lists.tcl.mailing-lists-procs.mail_job::add.set_email_clobs {
      
		update ml_mail_jobs
		set text_header = :text_header,
	            text_body = :text_body,
	            text_footer = :text_footer,
	            html_header = :html_header,
	            html_body = :html_body,
	            html_footer = :html_footer
		where mail_job_id = :mail_job_id
	    
      } {} {} {} c:/web/openacs-4/contrib/packages/mailing-lists/tcl/mailing-lists-procs.xql}
dbqd.contrib.packages.mailing-lists.tcl.mailing-lists-procs.mail_job::add.get_users_selection_query {dbqd.contrib.packages.mailing-lists.tcl.mailing-lists-procs.mail_job::add.get_users_selection_query {
      
		    select full_sql
		    from us_selections
		    where selection_id = :selection_id
		
      } {} {} {} c:/web/openacs-4/contrib/packages/mailing-lists/tcl/mailing-lists-procs.xql}
dbqd.contrib.packages.mailing-lists.tcl.mailing-lists-procs.mail_job::add.set_selection_query {dbqd.contrib.packages.mailing-lists.tcl.mailing-lists-procs.mail_job::add.set_selection_query {
      
		    update ml_mail_jobs
		    set sql_query = :full_sql
		    where mail_job_id = :mail_job_id
		
      } {} {} {} c:/web/openacs-4/contrib/packages/mailing-lists/tcl/mailing-lists-procs.xql}
dbqd.contrib.packages.mailing-lists.tcl.mailing-lists-procs.mail_job::edit.set_email_clobs {dbqd.contrib.packages.mailing-lists.tcl.mailing-lists-procs.mail_job::edit.set_email_clobs {
      
		update ml_mail_jobs
		set text_header = :text_header,
	            text_body = :text_body,
	            text_footer = :text_footer,
	            html_header = :html_header,
	            html_body = :html_body,
	            html_footer = :html_footer
		where mail_job_id = :mail_job_id
	    
      } {} {} {} c:/web/openacs-4/contrib/packages/mailing-lists/tcl/mailing-lists-procs.xql}
dbqd.contrib.packages.mailing-lists.tcl.util-procs-oracle.mailing_list::util::reset_cached_package_urls.get_site_wide_package_urls {dbqd.contrib.packages.mailing-lists.tcl.util-procs-oracle.mailing_list::util::reset_cached_package_urls.get_site_wide_package_urls {
      
	    select site_node.url(n.node_id) as package_url, p.package_key
	    from site_nodes n, site_nodes top, apm_packages p
	    where top.parent_id is null
	    and n.parent_id = top.node_id
	    and p.package_id = n.object_id
	    and p.package_key in ('users-selection', 'categories', 'mail-links', 'mailing-lists')
	
      } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/packages/mailing-lists/tcl/util-procs-oracle.xql}
dbqd.contrib.packages.mailing-lists.tcl.util-procs.mailing_list::util::reset_cached_package_urls.get_site_wide_package_urls {dbqd.contrib.packages.mailing-lists.tcl.util-procs.mailing_list::util::reset_cached_package_urls.get_site_wide_package_urls {
      
	    select site_node__url(n.node_id) as package_url, p.package_key
	    from site_nodes n, site_nodes top, apm_packages p
	    where top.parent_id is null
	    and n.parent_id = top.node_id
	    and p.package_id = n.object_id
	    and p.package_key in ('users-selection', 'categories', 'mail-links', 'mailing-lists')
	
      } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/packages/mailing-lists/tcl/util-procs-postgresql.xql}
dbqd.contrib.packages.mailing-lists.tcl.util-procs.mailing_list::util::send_mail.get_user_data {dbqd.contrib.packages.mailing-lists.tcl.util-procs.mailing_list::util::send_mail.get_user_data {
      
	    select u.password as user_password, u.salt as user_salt,
	           p.first_names || ' ' || p.last_name as user_name,
	           y.email as user_email
	    from users u, persons p, parties y
	    where u.user_id = :user_id
	    and p.person_id = u.user_id
	    and y.party_id = u.user_id
	
      } {} {} {} c:/web/openacs-4/contrib/packages/mailing-lists/tcl/util-procs.xql}
dbqd.contrib.packages.mailing-lists.tcl.util-procs.mailing_list::util::valid_x_field_p.get_user_data {dbqd.contrib.packages.mailing-lists.tcl.util-procs.mailing_list::util::valid_x_field_p.get_user_data {
      
	    select u.password as user_password, u.salt as user_salt,
	           p.first_names || ' ' || p.last_name as user_name,
	           y.email as user_email
	    from users u, persons p, parties y
	    where u.user_id = :user_id
	    and p.person_id = u.user_id
	    and y.party_id = u.user_id
	
      } {} {} {} c:/web/openacs-4/contrib/packages/mailing-lists/tcl/util-procs.xql}
dbqd.contrib.packages.mailing-lists.tcl.util-procs.mailing_list::util::check_valid_country_codes.get_country_codes {dbqd.contrib.packages.mailing-lists.tcl.util-procs.mailing_list::util::check_valid_country_codes.get_country_codes {
      
	select country_code, category_id
	from ml_country_codes
    
      } {} {} {} c:/web/openacs-4/contrib/packages/mailing-lists/tcl/util-procs.xql}
dbqd.contrib.packages.mailing-lists.www.confirm-oracle.confirm_list_subscribtion {dbqd.contrib.packages.mailing-lists.www.confirm-oracle.confirm_list_subscribtion {
      
	    update ml_mailing_list_user_map
	    set confirmed_p = 't',
	        subscribed_p = 't',
	        subscription_date = sysdate
	    where user_id = :user_id
	    and list_id = :list_id
	
      } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/packages/mailing-lists/www/confirm-oracle.xql}
dbqd.contrib.packages.mailing-lists.www.confirm.confirm_list_subscribtion {dbqd.contrib.packages.mailing-lists.www.confirm.confirm_list_subscribtion {
      
	    update ml_mailing_list_user_map
	    set confirmed_p = 't',
	        subscribed_p = 't',
	        subscription_date = current_timestamp
	    where user_id = :user_id
	    and list_id = :list_id
	
      } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/packages/mailing-lists/www/confirm-postgresql.xql}
dbqd.contrib.packages.mailing-lists.www.confirm.confirm_email_address {dbqd.contrib.packages.mailing-lists.www.confirm.confirm_email_address {
      
	    update users
	    set email_verified_p = 't'
	    where user_id = :user_id
	
      } {} {} {} c:/web/openacs-4/contrib/packages/mailing-lists/www/confirm.xql}
dbqd.contrib.packages.mailing-lists.www.confirm.get_list_name {dbqd.contrib.packages.mailing-lists.www.confirm.get_list_name {
      
	    select name
	    from ml_mailing_lists
	    where list_id = :list_id
	
      } {} {} {} c:/web/openacs-4/contrib/packages/mailing-lists/www/confirm.xql}
dbqd.contrib.packages.mailing-lists.www.index-oracle.get_lists_user_is_subscribed {dbqd.contrib.packages.mailing-lists.www.index-oracle.get_lists_user_is_subscribed {
      
    select l.list_id, l.name
    from ml_mailing_lists l, ml_mailing_list_user_map m
    where l.package_id = :package_id
    and l.list_id = m.list_id
    and l.expiration_date > sysdate
    and m.user_id = :user_id
    and m.subscribed_p = 't'
    order by lower(l.name)

      } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/packages/mailing-lists/www/index-oracle.xql}
dbqd.contrib.packages.mailing-lists.www.index-oracle.get_lists_by_language {dbqd.contrib.packages.mailing-lists.www.index-oracle.get_lists_by_language {

     select l.list_id, l.name, l.teaser, c.tree_id, c.category_id,
            nvl(m.subscribed_p, 'f') as subscribed_p
     from ml_mailing_lists l, ml_mailing_list_user_map m,
          category_object_map cm, categories c, ml_category_trees_visible v
     where l.package_id = :package_id
     and l.list_id = m.list_id(+)
     and m.user_id(+) = :user_id
     and l.public_p = 't'
     and l.locale = :locale
     and l.expiration_date > sysdate
     and cm.object_id = l.list_id
     and cm.category_id = c.category_id
     and v.package_id = :package_id
     and v.tree_id = c.tree_id
     order by c.tree_id, c.category_id, lower(l.name)

      } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/packages/mailing-lists/www/index-oracle.xql}
dbqd.contrib.packages.mailing-lists.www.index.get_lists_user_is_subscribed {dbqd.contrib.packages.mailing-lists.www.index.get_lists_user_is_subscribed {
      
    select l.list_id, l.name
    from ml_mailing_lists l, ml_mailing_list_user_map m
    where l.package_id = :package_id
    and l.list_id = m.list_id
    and l.expiration_date > current_timestamp
    and m.user_id = :user_id
    and m.subscribed_p = 't'
    order by lower(l.name)

      } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/packages/mailing-lists/www/index-postgresql.xql}
dbqd.contrib.packages.mailing-lists.www.index.get_lists_by_language {dbqd.contrib.packages.mailing-lists.www.index.get_lists_by_language {

     select l.list_id, l.name, l.teaser, c.tree_id, c.category_id,
            coalesce(m.subscribed_p, 'f') as subscribed_p
     from ml_mailing_lists l
	  left outer join ml_mailing_list_user_map m
	       on (l.list_id = m.list_id and m.user_id = :user_id)
	  inner join category_object_map cm
		on (cm.object_id = l.list_id)
          inner join categories c using (category_id)
	  inner join ml_category_trees_visible v using (tree_id)
     where l.package_id = :package_id
     and l.public_p = 't'
     and l.locale = :locale
     and l.expiration_date > current_timestamp
     and v.package_id = :package_id
     order by c.tree_id, c.category_id, lower(l.name)

      } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/packages/mailing-lists/www/index-postgresql.xql}
dbqd.contrib.packages.mailing-lists.www.index.get_languages {dbqd.contrib.packages.mailing-lists.www.index.get_languages {
      
    select label, locale
    from ad_locales

      } {} {} {} c:/web/openacs-4/contrib/packages/mailing-lists/www/index.xql}
dbqd.contrib.packages.mailing-lists.www.list-toggle-subscribe-oracle.unsubscribe_user {dbqd.contrib.packages.mailing-lists.www.list-toggle-subscribe-oracle.unsubscribe_user {
      
		update ml_mailing_list_user_map
		set subscribed_p = 'f',
	            unsubscription_date = sysdate
		where list_id = :list_id
		and user_id = :user_id
	    
      } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/packages/mailing-lists/www/list-toggle-subscribe-oracle.xql}
dbqd.contrib.packages.mailing-lists.www.list-toggle-subscribe-oracle.add_user_entry {dbqd.contrib.packages.mailing-lists.www.list-toggle-subscribe-oracle.add_user_entry {
      
		    insert into ml_mailing_list_user_map
		    (list_id, user_id, subscribed_p, subscription_date)
		    values (:list_id, :user_id, 't', sysdate)
		
      } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/packages/mailing-lists/www/list-toggle-subscribe-oracle.xql}
dbqd.contrib.packages.mailing-lists.www.list-toggle-subscribe-oracle.subscribe_user {dbqd.contrib.packages.mailing-lists.www.list-toggle-subscribe-oracle.subscribe_user {
      
		    update ml_mailing_list_user_map
		    set subscribed_p = 't',
		        subscription_date = sysdate
		    where list_id = :list_id
		    and user_id = :user_id
		
      } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/packages/mailing-lists/www/list-toggle-subscribe-oracle.xql}
dbqd.contrib.packages.mailing-lists.www.list-toggle-subscribe.unsubscribe_user {dbqd.contrib.packages.mailing-lists.www.list-toggle-subscribe.unsubscribe_user {
      
		update ml_mailing_list_user_map
		set subscribed_p = 'f',
	            unsubscription_date = current_timestamp
		where list_id = :list_id
		and user_id = :user_id
	    
      } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/packages/mailing-lists/www/list-toggle-subscribe-postgresql.xql}
dbqd.contrib.packages.mailing-lists.www.list-toggle-subscribe.add_user_entry {dbqd.contrib.packages.mailing-lists.www.list-toggle-subscribe.add_user_entry {
      
		    insert into ml_mailing_list_user_map
		    (list_id, user_id, subscribed_p, subscription_date)
		    values (:list_id, :user_id, 't', current_timestamp)
		
      } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/packages/mailing-lists/www/list-toggle-subscribe-postgresql.xql}
dbqd.contrib.packages.mailing-lists.www.list-toggle-subscribe.subscribe_user {dbqd.contrib.packages.mailing-lists.www.list-toggle-subscribe.subscribe_user {
      
		    update ml_mailing_list_user_map
		    set subscribed_p = 't',
		        subscription_date = current_timestamp
		    where list_id = :list_id
		    and user_id = :user_id
		
      } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/packages/mailing-lists/www/list-toggle-subscribe-postgresql.xql}
dbqd.contrib.packages.mailing-lists.www.list-toggle-subscribe.check_user_entry_exists {dbqd.contrib.packages.mailing-lists.www.list-toggle-subscribe.check_user_entry_exists {
      
		select 1
		from ml_mailing_list_user_map
		where list_id = :list_id
		and user_id = :user_id
	    
      } {} {} {} c:/web/openacs-4/contrib/packages/mailing-lists/www/list-toggle-subscribe.xql}
dbqd.contrib.packages.mailing-lists.www.list-toggle-subscribe.get_welcome_text {dbqd.contrib.packages.mailing-lists.www.list-toggle-subscribe.get_welcome_text {
      
		select l.sender_email, l.welcome_subject, l.welcome_body,
		       l.welcome_mime_type, p.email as user_email, o.mime_charset
		from ml_mailing_lists l, ad_locales o, parties p
		where l.list_id = :list_id
		and o.locale = l.locale
		and p.party_id = :user_id
	    
      } {} {} {} c:/web/openacs-4/contrib/packages/mailing-lists/www/list-toggle-subscribe.xql}
dbqd.contrib.packages.mailing-lists.www.madmin.categories-country-code-2.delete_old_country_codes {dbqd.contrib.packages.mailing-lists.www.madmin.categories-country-code-2.delete_old_country_codes {
      
	delete from ml_country_codes
    
      } {} {} {} c:/web/openacs-4/contrib/packages/mailing-lists/www/madmin/categories-country-code-2.xql}
dbqd.contrib.packages.mailing-lists.www.madmin.categories-country-code-2.insert_country_code {dbqd.contrib.packages.mailing-lists.www.madmin.categories-country-code-2.insert_country_code {
      
		insert into ml_country_codes (country_code, category_id)
		values (:country_code, :category_id)
	    
      } {} {} {} c:/web/openacs-4/contrib/packages/mailing-lists/www/madmin/categories-country-code-2.xql}
dbqd.contrib.packages.mailing-lists.www.madmin.categories-country-code.get_current_country_category_tree {dbqd.contrib.packages.mailing-lists.www.madmin.categories-country-code.get_current_country_category_tree {
      
    select tree_id
    from ml_country_category_tree
    where package_id = :package_id

      } {} {} {} c:/web/openacs-4/contrib/packages/mailing-lists/www/madmin/categories-country-code.xql}
dbqd.contrib.packages.mailing-lists.www.madmin.categories-country-code.get_country_codes {dbqd.contrib.packages.mailing-lists.www.madmin.categories-country-code.get_country_codes {
      
    select category_id, country_code
    from ml_country_codes

      } {} {} {} c:/web/openacs-4/contrib/packages/mailing-lists/www/madmin/categories-country-code.xql}
dbqd.contrib.packages.mailing-lists.www.madmin.categories-country.get_mapped_category_trees {dbqd.contrib.packages.mailing-lists.www.madmin.categories-country.get_mapped_category_trees {
      
    select tree_id
    from category_tree_map
    where object_id = :package_id

      } {} {} {} c:/web/openacs-4/contrib/packages/mailing-lists/www/madmin/categories-country.xql}
dbqd.contrib.packages.mailing-lists.www.madmin.categories-country.get_current_country_category_tree {dbqd.contrib.packages.mailing-lists.www.madmin.categories-country.get_current_country_category_tree {
      
    select tree_id
    from ml_country_category_tree
    where package_id = :package_id

      } {} {} {} c:/web/openacs-4/contrib/packages/mailing-lists/www/madmin/categories-country.xql}
dbqd.contrib.packages.mailing-lists.www.madmin.categories-country.delete_country_category_tree {dbqd.contrib.packages.mailing-lists.www.madmin.categories-country.delete_country_category_tree {
      
	    delete from ml_country_category_tree
	    where package_id = :package_id
	
      } {} {} {} c:/web/openacs-4/contrib/packages/mailing-lists/www/madmin/categories-country.xql}
dbqd.contrib.packages.mailing-lists.www.madmin.categories-country.insert_country_category_tree {dbqd.contrib.packages.mailing-lists.www.madmin.categories-country.insert_country_category_tree {
      
	    insert into ml_country_category_tree (tree_id, package_id)
	    values (:country_tree_id, :package_id)
	
      } {} {} {} c:/web/openacs-4/contrib/packages/mailing-lists/www/madmin/categories-country.xql}
dbqd.contrib.packages.mailing-lists.www.madmin.categories-show.get_mapped_category_trees {dbqd.contrib.packages.mailing-lists.www.madmin.categories-show.get_mapped_category_trees {
      
    select tree_id
    from category_tree_map
    where object_id = :package_id

      } {} {} {} c:/web/openacs-4/contrib/packages/mailing-lists/www/madmin/categories-show.xql}
dbqd.contrib.packages.mailing-lists.www.madmin.categories-show.get_category_trees_currently_shown {dbqd.contrib.packages.mailing-lists.www.madmin.categories-show.get_category_trees_currently_shown {
      
    select tree_id
    from ml_category_trees_visible
    where package_id = :package_id

      } {} {} {} c:/web/openacs-4/contrib/packages/mailing-lists/www/madmin/categories-show.xql}
dbqd.contrib.packages.mailing-lists.www.madmin.categories-show.delete_shown_category_trees {dbqd.contrib.packages.mailing-lists.www.madmin.categories-show.delete_shown_category_trees {
      
	    delete from ml_category_trees_visible
	    where package_id = :package_id
	
      } {} {} {} c:/web/openacs-4/contrib/packages/mailing-lists/www/madmin/categories-show.xql}
dbqd.contrib.packages.mailing-lists.www.madmin.categories-show.show_category_tree {dbqd.contrib.packages.mailing-lists.www.madmin.categories-show.show_category_tree {
      
		insert into ml_category_trees_visible (tree_id, package_id)
		values (:tree_id, :package_id)
	    
      } {} {} {} c:/web/openacs-4/contrib/packages/mailing-lists/www/madmin/categories-show.xql}
dbqd.contrib.packages.mailing-lists.www.madmin.class-delete-2-oracle.delete_mail_class {dbqd.contrib.packages.mailing-lists.www.madmin.class-delete-2-oracle.delete_mail_class {
      
    begin
       ml_mail_class.delete(:class_id);
    end;

      } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/packages/mailing-lists/www/madmin/class-delete-2-oracle.xql}
dbqd.contrib.packages.mailing-lists.www.madmin.class-delete-2.delete_mail_class {dbqd.contrib.packages.mailing-lists.www.madmin.class-delete-2.delete_mail_class {
      select ml_mail_class__delete(:class_id);
      } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/packages/mailing-lists/www/madmin/class-delete-2-postgresql.xql}
dbqd.contrib.packages.mailing-lists.www.madmin.class-delete-2.check_for_pending_jobs {dbqd.contrib.packages.mailing-lists.www.madmin.class-delete-2.check_for_pending_jobs {
      
    select count(*)
    from ml_mail_jobs
    where mail_class_id = :class_id
    and state = 'pending'

      } {} {} {} c:/web/openacs-4/contrib/packages/mailing-lists/www/madmin/class-delete-2.xql}
dbqd.contrib.packages.mailing-lists.www.madmin.class-delete.get_class_info {dbqd.contrib.packages.mailing-lists.www.madmin.class-delete.get_class_info {
      
    select name
    from ml_mail_classes
    where mail_class_id = :class_id
    and package_id = :package_id

      } {} {} {} c:/web/openacs-4/contrib/packages/mailing-lists/www/madmin/class-delete.xql}
dbqd.contrib.packages.mailing-lists.www.madmin.class-delete.check_for_pending_jobs {dbqd.contrib.packages.mailing-lists.www.madmin.class-delete.check_for_pending_jobs {
      
    select count(*)
    from ml_mail_jobs
    where mail_class_id = :class_id
    and state = 'pending'

      } {} {} {} c:/web/openacs-4/contrib/packages/mailing-lists/www/madmin/class-delete.xql}
dbqd.contrib.packages.mailing-lists.www.madmin.class-permissions-2-oracle.grant_user_class_read_privilege {dbqd.contrib.packages.mailing-lists.www.madmin.class-permissions-2-oracle.grant_user_class_read_privilege {
      
		begin
		  acs_permission.grant_permission (
						   object_id => :class_id,
						   grantee_id => :the_public_id,
						   privilege => 'read'
						   );
		end;
	    
      } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/packages/mailing-lists/www/madmin/class-permissions-2-oracle.xql}
dbqd.contrib.packages.mailing-lists.www.madmin.class-permissions-2-oracle.revoke_user_class_read_privilege {dbqd.contrib.packages.mailing-lists.www.madmin.class-permissions-2-oracle.revoke_user_class_read_privilege {
      
		begin
		  acs_permission.revoke_permission (
						    object_id => :class_id,
						    grantee_id => :the_public_id,
						    privilege => 'read'
						    );
		end;
	    
      } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/packages/mailing-lists/www/madmin/class-permissions-2-oracle.xql}
dbqd.contrib.packages.mailing-lists.www.madmin.class-permissions-2-oracle.get_all_mailing_list_admins {dbqd.contrib.packages.mailing-lists.www.madmin.class-permissions-2-oracle.get_all_mailing_list_admins {
      
	select acs_permission.permission_p(:class_id, oppm.party_id, :privilege) as permission_p,
	       oppm.party_id
	from acs_object_party_privilege_map oppm
	where oppm.object_id = :package_id
	and oppm.privilege = 'mailing_list_admin'
	and oppm.party_id <> :user_id
	and acs_permission.permission_p(:package_id, oppm.party_id, 'admin') = 'f'
    
      } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/packages/mailing-lists/www/madmin/class-permissions-2-oracle.xql}
dbqd.contrib.packages.mailing-lists.www.madmin.class-permissions-2-oracle.grant_user_class_privilege {dbqd.contrib.packages.mailing-lists.www.madmin.class-permissions-2-oracle.grant_user_class_privilege {
      
		begin
		  acs_permission.grant_permission (
						   object_id => :class_id,
						   grantee_id => :users_id,
						   privilege => :privilege
						   );
		end;
	    
      } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/packages/mailing-lists/www/madmin/class-permissions-2-oracle.xql}
dbqd.contrib.packages.mailing-lists.www.madmin.class-permissions-2-oracle.revoke_user_class_privilege {dbqd.contrib.packages.mailing-lists.www.madmin.class-permissions-2-oracle.revoke_user_class_privilege {
      
		begin
		  acs_permission.revoke_permission (
						    object_id => :class_id,
						    grantee_id => :users_id,
						    privilege => :privilege
						    );
		end;
	    
      } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/packages/mailing-lists/www/madmin/class-permissions-2-oracle.xql}
dbqd.contrib.packages.mailing-lists.www.madmin.class-permissions-2.grant_user_class_read_privilege {dbqd.contrib.packages.mailing-lists.www.madmin.class-permissions-2.grant_user_class_read_privilege {
      select acs_permission__grant_permission (
      	     :class_id,
	     :the_public_id,
	     'read'
      );
      } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/packages/mailing-lists/www/madmin/class-permissions-2-postgresql.xql}
dbqd.contrib.packages.mailing-lists.www.madmin.class-permissions-2.revoke_user_class_read_privilege {dbqd.contrib.packages.mailing-lists.www.madmin.class-permissions-2.revoke_user_class_read_privilege {
      select acs_permission__revoke_permission (
      	     :class_id,
	     :the_public_id,
	     'read'
      );
      } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/packages/mailing-lists/www/madmin/class-permissions-2-postgresql.xql}
dbqd.contrib.packages.mailing-lists.www.madmin.class-permissions-2.get_all_mailing_list_admins {dbqd.contrib.packages.mailing-lists.www.madmin.class-permissions-2.get_all_mailing_list_admins {
      
	select acs_permission__permission_p(:class_id, oppm.party_id, :privilege) as permission_p,
	       oppm.party_id
	from acs_object_party_privilege_map oppm
	where oppm.object_id = :package_id
	and oppm.privilege = 'mailing_list_admin'
	and oppm.party_id <> :user_id
	and acs_permission__permission_p(:package_id, oppm.party_id, 'admin') = 'f'
    
      } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/packages/mailing-lists/www/madmin/class-permissions-2-postgresql.xql}
dbqd.contrib.packages.mailing-lists.www.madmin.class-permissions-2.grant_user_class_privilege {dbqd.contrib.packages.mailing-lists.www.madmin.class-permissions-2.grant_user_class_privilege {
      select acs_permission__grant_permission (
      	     :class_id,
	     :users_id,
	     :privilege
      );
      } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/packages/mailing-lists/www/madmin/class-permissions-2-postgresql.xql}
dbqd.contrib.packages.mailing-lists.www.madmin.class-permissions-2.revoke_user_class_privilege {dbqd.contrib.packages.mailing-lists.www.madmin.class-permissions-2.revoke_user_class_privilege {
      select acs_permission__revoke_permission (
      	     :class_id,
	     :users_id,
	     :privilege
      );
      } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/packages/mailing-lists/www/madmin/class-permissions-2-postgresql.xql}
dbqd.contrib.packages.mailing-lists.www.madmin.class-permissions-2.update_public_p {dbqd.contrib.packages.mailing-lists.www.madmin.class-permissions-2.update_public_p {
      
	    update ml_mail_classes
	    set public_p = :public_p
	    where mail_class_id = :class_id
	
      } {} {} {} c:/web/openacs-4/contrib/packages/mailing-lists/www/madmin/class-permissions-2.xql}
dbqd.contrib.packages.mailing-lists.www.madmin.class-permissions-oracle.get_all_mailing_list_admins {dbqd.contrib.packages.mailing-lists.www.madmin.class-permissions-oracle.get_all_mailing_list_admins {
      
    select p.person_id as admin_id, p.first_names, p.last_name,
           acs_permission.permission_p(:class_id, p.person_id, 'admin') as admin_p,
           acs_permission.permission_p(:class_id, p.person_id, 'read') as read_p,
           acs_permission.permission_p(:package_id, p.person_id, 'admin') as package_admin_p
    from acs_object_party_privilege_map oppm, persons p
    where oppm.party_id = p.person_id
    and oppm.object_id = :package_id
    and oppm.privilege = 'mailing_list_admin'
    and p.person_id <> :user_id

      } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/packages/mailing-lists/www/madmin/class-permissions-oracle.xql}
dbqd.contrib.packages.mailing-lists.www.madmin.class-permissions.get_all_mailing_list_admins {dbqd.contrib.packages.mailing-lists.www.madmin.class-permissions.get_all_mailing_list_admins {
      
    select p.person_id as admin_id, p.first_names, p.last_name,
           acs_permission__permission_p(:class_id, p.person_id, 'admin') as admin_p,
           acs_permission__permission_p(:class_id, p.person_id, 'read') as read_p,
           acs_permission__permission_p(:package_id, p.person_id, 'admin') as package_admin_p
    from acs_object_party_privilege_map oppm, persons p
    where oppm.party_id = p.person_id
    and oppm.object_id = :package_id
    and oppm.privilege = 'mailing_list_admin'
    and p.person_id <> :user_id

      } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/packages/mailing-lists/www/madmin/class-permissions-postgresql.xql}
dbqd.contrib.packages.mailing-lists.www.madmin.class-permissions.get_class_info {dbqd.contrib.packages.mailing-lists.www.madmin.class-permissions.get_class_info {
      
    select name, public_p
    from ml_mail_classes
    where mail_class_id = :class_id
    and package_id = :package_id

      } {} {} {} c:/web/openacs-4/contrib/packages/mailing-lists/www/madmin/class-permissions.xql}
dbqd.contrib.packages.mailing-lists.www.madmin.classes.get_old_class_mime_type {dbqd.contrib.packages.mailing-lists.www.madmin.classes.get_old_class_mime_type {
      
	select mime_type
	from ml_mail_classes
	where mail_class_id = :class_or_copy_id
    
      } {} {} {} c:/web/openacs-4/contrib/packages/mailing-lists/www/madmin/classes.xql}
dbqd.contrib.packages.mailing-lists.www.madmin.classes.get_css_file {dbqd.contrib.packages.mailing-lists.www.madmin.classes.get_css_file {
      
	    select r.title || ' (' || r.content_length || ' bytes)', r.revision_id,
	           c.mime_type as old_mime_type
	    from cr_items i, cr_revisions r, ml_mail_classes c
	    where c.mail_class_id = :class_or_copy_id
	    and i.parent_id = c.mail_class_id
	    and r.revision_id = i.live_revision
	
      } {} {} {} c:/web/openacs-4/contrib/packages/mailing-lists/www/madmin/classes.xql}
dbqd.contrib.packages.mailing-lists.www.madmin.classes.get_ad_locales {dbqd.contrib.packages.mailing-lists.www.madmin.classes.get_ad_locales {
      
    select label as name, locale as value
    from ad_locales

      } {} {} {} c:/web/openacs-4/contrib/packages/mailing-lists/www/madmin/classes.xql}
dbqd.contrib.packages.mailing-lists.www.madmin.classes.get_copy_class_data {dbqd.contrib.packages.mailing-lists.www.madmin.classes.get_copy_class_data {
      
	    select name, locale, sender_email, subject, subject_change_p,
	           text_header, text_header_change_p, text_body, text_body_change_p,
	           text_footer, text_footer_change_p, html_header, html_header_change_p,
	           html_body, html_body_change_p, html_footer, html_footer_change_p,
	           mime_type, comments
	    from ml_mail_classes
	    where mail_class_id = :copy_class_id
	
      } {} {} {} c:/web/openacs-4/contrib/packages/mailing-lists/www/madmin/classes.xql}
dbqd.contrib.packages.mailing-lists.www.madmin.classes.get_class_data {dbqd.contrib.packages.mailing-lists.www.madmin.classes.get_class_data {
      
	select name, locale, sender_email, subject, subject_change_p,
	       text_header, text_header_change_p, text_body, text_body_change_p,
	       text_footer, text_footer_change_p, html_header, html_header_change_p,
	       html_body, html_body_change_p, html_footer, html_footer_change_p,
	       mime_type, comments
	from ml_mail_classes
	where mail_class_id = :class_id
    
      } {} {} {} c:/web/openacs-4/contrib/packages/mailing-lists/www/madmin/classes.xql}
dbqd.contrib.packages.mailing-lists.www.madmin.classes.delete_css_file {dbqd.contrib.packages.mailing-lists.www.madmin.classes.delete_css_file {
      
		update cr_items
		set live_revision = null
		where parent_id = :class_id
		and live_revision = :delete_css
	    
      } {} {} {} c:/web/openacs-4/contrib/packages/mailing-lists/www/madmin/classes.xql}
dbqd.contrib.packages.mailing-lists.www.madmin.classes.check_css_file_exists {dbqd.contrib.packages.mailing-lists.www.madmin.classes.check_css_file_exists {
      
		select item_id
		from cr_items
		where parent_id = :class_id
	    
      } {} {} {} c:/web/openacs-4/contrib/packages/mailing-lists/www/madmin/classes.xql}
dbqd.contrib.packages.mailing-lists.www.madmin.classes.make_latest_revision_live_revision {dbqd.contrib.packages.mailing-lists.www.madmin.classes.make_latest_revision_live_revision {
      
		update cr_items
		set live_revision = latest_revision
		where parent_id = :class_id
	    
      } {} {} {} c:/web/openacs-4/contrib/packages/mailing-lists/www/madmin/classes.xql}
dbqd.contrib.packages.mailing-lists.www.madmin.classes.get_file_data_for_copy {dbqd.contrib.packages.mailing-lists.www.madmin.classes.get_file_data_for_copy {
      
		select r.title as filename, r.content_length, r.mime_type as file_mimetype,
		       r.revision_id, i.item_id
		from cr_revisions r, cr_items i
		where i.parent_id = :copy_class_id
		and r.revision_id = i.live_revision
	    
      } {} {} {} c:/web/openacs-4/contrib/packages/mailing-lists/www/madmin/classes.xql}
dbqd.contrib.packages.mailing-lists.www.madmin.index-oracle.ml_list {dbqd.contrib.packages.mailing-lists.www.madmin.index-oracle.ml_list {
      
    select l.list_id, l.name, nvl(su.user_count,0) as user_count,
	   nvl(uu.users_need_confirmation,0) as users_need_confirmation,
	   nvl(ue.users_need_email_confirmation,0) as users_need_email_confirmation,
           (case when l.expiration_date > sysdate then 'f' else 't' end) as expired_p,
           acs_permission.permission_p(l.list_id, :user_id, 'admin') as admin_p
    from ml_mailing_lists l,
         (select count(*) as user_count, m.list_id
		    from ml_mailing_list_user_map m
		    where m.subscribed_p = 't'
		    group by m.list_id) su,
         (select count(*) as users_need_confirmation,
			    m2.list_id
		    from ml_mailing_list_user_map m2
		    where m2.confirmed_p = 'f'
		    group by m2.list_id) uu,
         (select count(*) as users_need_email_confirmation,
			    m2.list_id
		    from ml_mailing_list_user_map m2, users u
		    where m2.subscribed_p = 'f'
		    and m2.user_id = u.user_id
		    and u.email_verified_p = 'f'
		    group by m2.list_id) ue
    where l.package_id = :package_id
    and su.list_id(+) = l.list_id
    and uu.list_id (+) = l.list_id
    and ue.list_id (+) = l.list_id
    and acs_permission.permission_p (l.list_id, :user_id, 'read') = 't'
    order by lower(l.name)

      } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/packages/mailing-lists/www/madmin/index-oracle.xql}
dbqd.contrib.packages.mailing-lists.www.madmin.index-oracle.ml_class {dbqd.contrib.packages.mailing-lists.www.madmin.index-oracle.ml_class {
      
    select mail_class_id, name,
           acs_permission.permission_p(mail_class_id, :user_id, 'admin') as admin_p
    from ml_mail_classes
    where package_id = :package_id
    and acs_permission.permission_p (mail_class_id, :user_id, 'read') = 't'
    order by lower(name)

      } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/packages/mailing-lists/www/madmin/index-oracle.xql}
dbqd.contrib.packages.mailing-lists.www.madmin.index.ml_list {dbqd.contrib.packages.mailing-lists.www.madmin.index.ml_list {
    select l.list_id, l.name, coalesce(su.user_count,0) as user_count,
           coalesce(uu.users_need_confirmation,0) as users_need_confirmation,
           coalesce(ue.users_need_email_confirmation,0) as users_need_email_confirmation,
           (case when l.expiration_date > current_timestamp then 'f' else 't' end) as expired_p,
           acs_permission__permission_p(l.list_id, :user_id, 'admin') as admin_p
    from ml_mailing_lists l
    left outer join (select count(*) as user_count, m.list_id
		    from ml_mailing_list_user_map m
		    where m.subscribed_p = 't'
		    group by m.list_id) su
         on (su.list_id = l.list_id)
    left outer join (select count(*) as users_need_confirmation,
			    m2.list_id
		    from ml_mailing_list_user_map m2
		    where m2.confirmed_p = 'f'
		    group by m2.list_id) uu
         on (uu.list_id = l.list_id)
     left outer join (select count(*) as users_need_email_confirmation,
		    m2.list_id
		    from ml_mailing_list_user_map m2, users u
		    where m2.subscribed_p = 'f'
  	            and m2.user_id =  u.user_id
		    and u.email_verified_p = 'f'
	       group by m2.list_id) ue
          on (ue.list_id = l.list_id)
    where l.package_id = :package_id
    and acs_permission__permission_p (l.list_id, :user_id, 'read') = 't'
    order by lower(l.name)
      } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/packages/mailing-lists/www/madmin/index-postgresql.xql}
dbqd.contrib.packages.mailing-lists.www.madmin.index.ml_class {dbqd.contrib.packages.mailing-lists.www.madmin.index.ml_class {
      
    select mail_class_id, name,
           acs_permission__permission_p(mail_class_id, :user_id, 'admin') as admin_p
    from ml_mail_classes
    where package_id = :package_id
    and acs_permission__permission_p (mail_class_id, :user_id, 'read') = 't'
    order by lower(name)

      } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/packages/mailing-lists/www/madmin/index-postgresql.xql}
dbqd.contrib.packages.mailing-lists.www.madmin.job-add-oracle.get_mail_classes {dbqd.contrib.packages.mailing-lists.www.madmin.job-add-oracle.get_mail_classes {
      
    select mail_class_id, name
    from ml_mail_classes
    where acs_permission.permission_p(mail_class_id, :user_id, 'read') = 't'

      } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/packages/mailing-lists/www/madmin/job-add-oracle.xql}
dbqd.contrib.packages.mailing-lists.www.madmin.job-add-oracle.get_mailing_lists {dbqd.contrib.packages.mailing-lists.www.madmin.job-add-oracle.get_mailing_lists {
      
    select list_id, name
    from ml_mailing_lists
    where acs_permission.permission_p(list_id, :user_id, 'read') = 't'
    and expiration_date > sysdate

      } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/packages/mailing-lists/www/madmin/job-add-oracle.xql}
dbqd.contrib.packages.mailing-lists.www.madmin.job-add-oracle.get_users_selections {dbqd.contrib.packages.mailing-lists.www.madmin.job-add-oracle.get_users_selections {
      
    select selection_id, title
    from us_selections
    where acs_permission.permission_p(selection_id, :user_id, 'read') = 't'

      } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/packages/mailing-lists/www/madmin/job-add-oracle.xql}
dbqd.contrib.packages.mailing-lists.www.madmin.job-add.get_mail_classes {dbqd.contrib.packages.mailing-lists.www.madmin.job-add.get_mail_classes {
      
    select mail_class_id, name
    from ml_mail_classes
    where acs_permission__permission_p(mail_class_id, :user_id, 'read') = 't'

      } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/packages/mailing-lists/www/madmin/job-add-postgresql.xql}
dbqd.contrib.packages.mailing-lists.www.madmin.job-add.get_mailing_lists {dbqd.contrib.packages.mailing-lists.www.madmin.job-add.get_mailing_lists {
      
    select list_id, name
    from ml_mailing_lists
    where acs_permission__permission_p(list_id, :user_id, 'read') = 't'
    and expiration_date > current_timestamp

      } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/packages/mailing-lists/www/madmin/job-add-postgresql.xql}
dbqd.contrib.packages.mailing-lists.www.madmin.job-add.get_users_selections {dbqd.contrib.packages.mailing-lists.www.madmin.job-add.get_users_selections {
      
    select selection_id, title
    from us_selections
    where acs_permission__permission_p(selection_id, :user_id, 'read') = 't'

      } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/packages/mailing-lists/www/madmin/job-add-postgresql.xql}
dbqd.contrib.packages.mailing-lists.www.madmin.job-delete-2-oracle.delete_mail_job {dbqd.contrib.packages.mailing-lists.www.madmin.job-delete-2-oracle.delete_mail_job {
      
    begin
       ml_mail_job.delete(:mail_job_id);
    end;

      } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/packages/mailing-lists/www/madmin/job-delete-2-oracle.xql}
dbqd.contrib.packages.mailing-lists.www.madmin.job-delete-2.delete_mail_job {dbqd.contrib.packages.mailing-lists.www.madmin.job-delete-2.delete_mail_job {
      select ml_mail_job__delete(:mail_job_id);
      } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/packages/mailing-lists/www/madmin/job-delete-2-postgresql.xql}
dbqd.contrib.packages.mailing-lists.www.madmin.job-delete-oracle.get_list_info {dbqd.contrib.packages.mailing-lists.www.madmin.job-delete-oracle.get_list_info {
      
    select to_char(scheduled_date, 'YYYY-MM-DD HH24:MI') as execution_date,
           subject
    from ml_mail_jobs
    where mail_job_id=:mail_job_id

      } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/packages/mailing-lists/www/madmin/job-delete-oracle.xql}
dbqd.contrib.packages.mailing-lists.www.madmin.job-delete.get_list_info {dbqd.contrib.packages.mailing-lists.www.madmin.job-delete.get_list_info {
      
    select to_char(scheduled_date, 'YYYY-MM-DD HH24:MI') as execution_date,
           subject
    from ml_mail_jobs
    where mail_job_id=:mail_job_id

      } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/packages/mailing-lists/www/madmin/job-delete-postgresql.xql}
dbqd.contrib.packages.mailing-lists.www.madmin.job-detail-oracle.get_job_data {dbqd.contrib.packages.mailing-lists.www.madmin.job-detail-oracle.get_job_data {
      
    select j.subject, j.text_header, j.text_body, j.text_footer, j.html_header,
           j.html_body, j.html_footer, j.mails_sent, j.mails_bounced, j.state,
           j.track_links_p, p.first_names || ' ' || p.last_name as user_name,
           to_char(j.execution_date, 'YYYY-MM-DD HH24:MI') as execution_date,
           r.title as css_filename, r.content_length as css_file_length,
           j.sender_email, c.name as class_name, j.template_p, j.mime_type,
           j.selection_id, j.list_id
    from ml_mail_jobs j, ml_mail_classes c, acs_objects o, persons p,
         cr_revisions r
    where j.mail_job_id = :mail_job_id
    and c.mail_class_id = j.mail_class_id
    and o.object_id = j.mail_job_id
    and p.person_id = o.creation_user
    and r.revision_id (+) = j.css_revision_id

      } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/packages/mailing-lists/www/madmin/job-detail-oracle.xql}
dbqd.contrib.packages.mailing-lists.www.madmin.job-detail.get_job_data {dbqd.contrib.packages.mailing-lists.www.madmin.job-detail.get_job_data {

    select j.subject, j.text_header, j.text_body, j.text_footer, j.html_header,
           j.html_body, j.html_footer, j.mails_sent, j.mails_bounced, j.state,
           j.track_links_p, p.first_names || ' ' || p.last_name as user_name,
           to_char(j.execution_date, 'YYYY-MM-DD HH24:MI') as execution_date,
           r.title as css_filename, r.content_length as css_file_length,
           j.sender_email, c.name as class_name, j.template_p, j.mime_type,
           j.selection_id, j.list_id
    from ml_mail_classes c 
    	 inner join ml_mail_jobs j using (mail_class_id)
	 inner join acs_objects o on
	       (o.object_id = j.mail_job_id)	            
	 inner join persons p on
	       (p.person_id = o.creation_user)
	 left outer join cr_revisions r on
	       (r.revision_id = j.css_revision_id)
    where j.mail_job_id = :mail_job_id

      } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/packages/mailing-lists/www/madmin/job-detail-postgresql.xql}
dbqd.contrib.packages.mailing-lists.www.madmin.job-detail.get_mail_attachments {dbqd.contrib.packages.mailing-lists.www.madmin.job-detail.get_mail_attachments {
      
    select i.name as filename, r.content_length as file_length
    from cr_items i, cr_revisions r
    where i.parent_id = :mail_job_id
    and r.item_id = i.item_id

      } {} {} {} c:/web/openacs-4/contrib/packages/mailing-lists/www/madmin/job-detail.xql}
dbqd.contrib.packages.mailing-lists.www.madmin.job-detail.get_selection_title {dbqd.contrib.packages.mailing-lists.www.madmin.job-detail.get_selection_title {
   select title as selection_name
   from us_selections
   where selection_id = :selection_id
} {} {} {} c:/web/openacs-4/contrib/packages/mailing-lists/www/madmin/job-detail.xql}
dbqd.contrib.packages.mailing-lists.www.madmin.job-detail.get_list_name {dbqd.contrib.packages.mailing-lists.www.madmin.job-detail.get_list_name {
   select name as list_name
   from ml_mailing_lists
   where list_id = :list_id
} {} {} {} c:/web/openacs-4/contrib/packages/mailing-lists/www/madmin/job-detail.xql}
dbqd.contrib.packages.mailing-lists.www.madmin.job-history-2-oracle.get_week_dates {dbqd.contrib.packages.mailing-lists.www.madmin.job-history-2-oracle.get_week_dates {
      
		select to_char(next_day(to_date(:start_date, 'YYYY-MM-DD'), 'sunday')-7, 'YYYY-MM-DD') as start_date,
		       to_char(next_day(to_date(:start_date, 'YYYY-MM-DD'), 'sunday')-1, 'YYYY-MM-DD') as end_date
		from dual
	    
      } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/packages/mailing-lists/www/madmin/job-history-2-oracle.xql}
dbqd.contrib.packages.mailing-lists.www.madmin.job-history-2-oracle.get_end_of_month {dbqd.contrib.packages.mailing-lists.www.madmin.job-history-2-oracle.get_end_of_month {
      
		select to_char(last_day(to_date(:start_date, 'YYYY-MM-DD')), 'YYYY-MM-DD') as end_date
		from dual
	    
      } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/packages/mailing-lists/www/madmin/job-history-2-oracle.xql}
dbqd.contrib.packages.mailing-lists.www.madmin.job-history-2-oracle.ml_mail_job_history {dbqd.contrib.packages.mailing-lists.www.madmin.job-history-2-oracle.ml_mail_job_history {
      
    select j.mail_job_id, j.mail_class_id, j.subject, j.mails_sent, j.state,
           j.track_links_p, p.first_names || ' ' || p.last_name as user_name,
           to_char(j.execution_date, 'YYYY-MM-DD HH24:MI') as execution_date
    from ml_mail_jobs j, acs_objects o, persons p
    where j.state <> 'suspended'
    and j.scheduled_date >= to_date(:start_date, 'YYYY-MM-DD')
    and j.scheduled_date < to_date(:end_date, 'YYYY-MM-DD') + 1
    and acs_permission.permission_p(j.mail_job_id, :user_id, 'read') = 't'
    and o.object_id = j.mail_job_id
    and p.person_id = o.creation_user
    order by j.execution_date desc, lower(j.subject)

      } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/packages/mailing-lists/www/madmin/job-history-2-oracle.xql}
dbqd.contrib.packages.mailing-lists.www.madmin.job-history-2.get_week_dates {dbqd.contrib.packages.mailing-lists.www.madmin.job-history-2.get_week_dates {
      
		select to_char(next_day(to_date(:start_date, 'YYYY-MM-DD'),
		       'sunday')-(cast ('7 days' as interval)), 'YYYY-MM-DD') as start_date,
		       to_char(next_day(to_date(:start_date, 'YYYY-MM-DD'),
		       'sunday')-(cast ('1 day' as interval)), 'YYYY-MM-DD') as end_date
		
	    
      } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/packages/mailing-lists/www/madmin/job-history-2-postgresql.xql}
dbqd.contrib.packages.mailing-lists.www.madmin.job-history-2.get_end_of_month {dbqd.contrib.packages.mailing-lists.www.madmin.job-history-2.get_end_of_month {
      
		select to_char(to_date(to_date(:start_date,'YYYY-MM') + '1 month'::interval - '1 day'::interval , 'YYYY-MM-DD'), 'YYYY-MM-DD') as end_date
	    
      } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/packages/mailing-lists/www/madmin/job-history-2-postgresql.xql}
dbqd.contrib.packages.mailing-lists.www.madmin.job-history-2.ml_mail_job_history {dbqd.contrib.packages.mailing-lists.www.madmin.job-history-2.ml_mail_job_history {
      
    select j.mail_job_id, j.mail_class_id, j.subject, j.mails_sent, j.state,
           j.track_links_p, p.first_names || ' ' || p.last_name as user_name,
           to_char(j.execution_date, 'YYYY-MM-DD HH24:MI') as execution_date
    from ml_mail_jobs j, acs_objects o, persons p
    where j.state <> 'suspended'
    and j.scheduled_date >= to_timestamp(:start_date, 'YYYY-MM-DD')
    and j.scheduled_date < (to_timestamp(:end_date, 'YYYY-MM-DD') + '1 day'::interval)
    and acs_permission__permission_p(j.mail_job_id, :user_id, 'read') = 't'
    and o.object_id = j.mail_job_id
    and p.person_id = o.creation_user
    order by j.execution_date desc, lower(j.subject)

      } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/packages/mailing-lists/www/madmin/job-history-2-postgresql.xql}
dbqd.contrib.packages.mailing-lists.www.madmin.job-pending-oracle.ml_suspended_mail_jobs {dbqd.contrib.packages.mailing-lists.www.madmin.job-pending-oracle.ml_suspended_mail_jobs {
      
    select j.mail_job_id, j.mail_class_id, j.subject, j.state,
           to_char(j.scheduled_date, 'YYYY-MM-DD HH24:MI') as execution_date
    from ml_mail_jobs j, acs_named_objects o
    where o.package_id = :package_id
    and o.object_id = j.mail_job_id
    and j.state in ('suspended', 'active')
    and acs_permission.permission_p(j.mail_job_id, :user_id, 'admin') = 't'
    order by j.scheduled_date, lower(subject)

      } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/packages/mailing-lists/www/madmin/job-pending-oracle.xql}
dbqd.contrib.packages.mailing-lists.www.madmin.job-pending.ml_suspended_mail_jobs {dbqd.contrib.packages.mailing-lists.www.madmin.job-pending.ml_suspended_mail_jobs {
      
    select j.mail_job_id, j.mail_class_id, j.subject, j.state,
           to_char(j.scheduled_date, 'YYYY-MM-DD HH24:MI') as execution_date
    from ml_mail_jobs j, acs_named_objects o
    where o.package_id = :package_id
    and o.object_id = j.mail_job_id
    and j.state in ('suspended', 'active')
    and acs_permission__permission_p(j.mail_job_id, :user_id, 'admin') = 't'
    order by j.scheduled_date, lower(subject)

      } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/packages/mailing-lists/www/madmin/job-pending-postgresql.xql}
dbqd.contrib.packages.mailing-lists.www.madmin.job-preview.get_default_data {dbqd.contrib.packages.mailing-lists.www.madmin.job-preview.get_default_data {
      
    select subject_change_p, text_header_change_p, text_body_change_p,
           text_footer_change_p, html_header_change_p, html_body_change_p,
           html_footer_change_p, subject as default_subject,
           text_header as default_text_header, text_body as default_text_body,
           text_footer as default_text_footer, html_header as default_html_header,
           html_body as default_html_body, html_footer as default_html_footer
    from ml_mail_classes
    where mail_class_id = :class_id

      } {} {} {} c:/web/openacs-4/contrib/packages/mailing-lists/www/madmin/job-preview.xql}
dbqd.contrib.packages.mailing-lists.www.madmin.job-preview.get_selection_title {dbqd.contrib.packages.mailing-lists.www.madmin.job-preview.get_selection_title {
   select title as selection_name
   from us_selections
   where selection_id = :selection_id
} {} {} {} c:/web/openacs-4/contrib/packages/mailing-lists/www/madmin/job-preview.xql}
dbqd.contrib.packages.mailing-lists.www.madmin.job-preview.get_list_name {dbqd.contrib.packages.mailing-lists.www.madmin.job-preview.get_list_name {
   select name as list_name
   from ml_mailing_lists
   where list_id = :list_id
} {} {} {} c:/web/openacs-4/contrib/packages/mailing-lists/www/madmin/job-preview.xql}
dbqd.contrib.packages.mailing-lists.www.madmin.job-preview.get_old_css_file {dbqd.contrib.packages.mailing-lists.www.madmin.job-preview.get_old_css_file {
      
	select r.title || ' (' || r.content_length || ' bytes)' as css_file
	from cr_revisions r, ml_mail_jobs j
	where r.revision_id = j.css_revision_id
	and j.mail_job_id = :mail_job_id

      } {} {} {} c:/web/openacs-4/contrib/packages/mailing-lists/www/madmin/job-preview.xql}
dbqd.contrib.packages.mailing-lists.www.madmin.job-preview.get_current_css_file {dbqd.contrib.packages.mailing-lists.www.madmin.job-preview.get_current_css_file {
      
	select r.title || ' (' || r.content_length || ' bytes)' as css_file
	from cr_revisions r, cr_items i
	where r.revision_id = i.live_revision
	and i.parent_id = :class_id
    
      } {} {} {} c:/web/openacs-4/contrib/packages/mailing-lists/www/madmin/job-preview.xql}
dbqd.contrib.packages.mailing-lists.www.madmin.job-preview.get_attachments {dbqd.contrib.packages.mailing-lists.www.madmin.job-preview.get_attachments {
      
    select r.title || ' (' || r.content_length || ' bytes)' as file_name
    from cr_items i, cr_revisions r
    where i.parent_id = :mail_job_id
    and r.revision_id = i.latest_revision

      } {} {} {} c:/web/openacs-4/contrib/packages/mailing-lists/www/madmin/job-preview.xql}
dbqd.contrib.packages.mailing-lists.www.madmin.job-preview.get_mail_job_sql_query {dbqd.contrib.packages.mailing-lists.www.madmin.job-preview.get_mail_job_sql_query {
      
	    select sql_query
	    from ml_mail_jobs
	    where mail_job_id = :mail_job_id
	
      } {} {} {} c:/web/openacs-4/contrib/packages/mailing-lists/www/madmin/job-preview.xql}
dbqd.contrib.packages.mailing-lists.www.madmin.job-preview.get_users_selection_query {dbqd.contrib.packages.mailing-lists.www.madmin.job-preview.get_users_selection_query {
      
		select full_sql as sql_query
		from us_selections
		where selection_id = :selection_id
	    
      } {} {} {} c:/web/openacs-4/contrib/packages/mailing-lists/www/madmin/job-preview.xql}
dbqd.contrib.packages.mailing-lists.www.madmin.job-resume.resume_mail_job {dbqd.contrib.packages.mailing-lists.www.madmin.job-resume.resume_mail_job {
      
    update ml_mail_jobs
    set state = 'active'
    where mail_job_id = :mail_job_id
    and state = 'suspended'

      } {} {} {} c:/web/openacs-4/contrib/packages/mailing-lists/www/madmin/job-resume.xql}
dbqd.contrib.packages.mailing-lists.www.madmin.job-suspend.suspend_mail_job {dbqd.contrib.packages.mailing-lists.www.madmin.job-suspend.suspend_mail_job {
      
    update ml_mail_jobs
    set state = 'suspended'
    where mail_job_id = :mail_job_id
    and state = 'active'

      } {} {} {} c:/web/openacs-4/contrib/packages/mailing-lists/www/madmin/job-suspend.xql}
dbqd.contrib.packages.mailing-lists.www.madmin.jobs-oracle.get_mail_job_data {dbqd.contrib.packages.mailing-lists.www.madmin.jobs-oracle.get_mail_job_data {
      
	select j.locale, j.sender_email, j.track_links_p, j.subject,
	       j.text_header, j.text_body, j.text_footer, j.html_header,
	       j.html_body, j.html_footer, j.mime_type, j.state,
	       to_char(j.scheduled_date, :format) as scheduled_date,
	       c.name as class_name, c.comments as class_comment,
	       m.name as list_name, m.comments as list_comment,
	       s.title as selection_name, s.description as selection_desc
	from ml_mail_jobs j, ml_mail_classes c, ml_mailing_lists m,
	     us_selections s
	where j.mail_job_id = :mail_job_id
	and j.list_id = m.list_id (+)
	and m.package_id (+) = :package_id
	and j.selection_id = s.selection_id (+)
	and c.mail_class_id = j.mail_class_id
    
      } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/packages/mailing-lists/www/madmin/jobs-oracle.xql}
dbqd.contrib.packages.mailing-lists.www.madmin.jobs-oracle.delete_file {dbqd.contrib.packages.mailing-lists.www.madmin.jobs-oracle.delete_file {
      
		    begin
		    content_item.delete(:file_id);
		    end;
		
      } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/packages/mailing-lists/www/madmin/jobs-oracle.xql}
dbqd.contrib.packages.mailing-lists.www.madmin.jobs.get_mail_job_data {dbqd.contrib.packages.mailing-lists.www.madmin.jobs.get_mail_job_data {
	select j.locale, j.sender_email, j.track_links_p, j.subject,
	       j.text_header, j.text_body, j.text_footer, j.html_header,
	       j.html_body, j.html_footer, j.mime_type, j.state,
	       to_char(j.scheduled_date, :format) as scheduled_date,
	       c.name as class_name, c.comments as class_comment,
	       m.name as list_name, m.comments as list_comment,
	       s.title as selection_name, s.description as selection_desc
	from ml_mail_jobs j
	     inner join ml_mail_classes c using (mail_class_id)
	     left outer join ml_mailing_lists m
	     	  on (j.list_id = m.list_id and m.package_id = :package_id)
	     left outer join us_selections s
	     	  on (j.selection_id = s.selection_id)
	where j.mail_job_id = :mail_job_id
      } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/packages/mailing-lists/www/madmin/jobs-postgresql.xql}
dbqd.contrib.packages.mailing-lists.www.madmin.jobs.delete_file {dbqd.contrib.packages.mailing-lists.www.madmin.jobs.delete_file {
      select content_item__delete(:file_id);
      } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/packages/mailing-lists/www/madmin/jobs-postgresql.xql}
dbqd.contrib.packages.mailing-lists.www.madmin.jobs.get_users_selection_query {dbqd.contrib.packages.mailing-lists.www.madmin.jobs.get_users_selection_query {
      
	select full_sql as query_string
	from us_selections
	where selection_id = :selection_id
    
      } {} {} {} c:/web/openacs-4/contrib/packages/mailing-lists/www/madmin/jobs.xql}
dbqd.contrib.packages.mailing-lists.www.madmin.jobs.check_if_job_exists {dbqd.contrib.packages.mailing-lists.www.madmin.jobs.check_if_job_exists {
      
	select count(*) as edit_job_p
	from ml_mail_jobs
	where mail_job_id = :mail_job_id
    
      } {} {} {} c:/web/openacs-4/contrib/packages/mailing-lists/www/madmin/jobs.xql}
dbqd.contrib.packages.mailing-lists.www.madmin.jobs.get_attachments {dbqd.contrib.packages.mailing-lists.www.madmin.jobs.get_attachments {
      
	select i.name || ' (' || r.content_length || ' bytes)' as name,
               i.item_id as value
	from cr_items i, cr_revisions r
	where i.parent_id = :mail_job_id
	and r.item_id = i.item_id
    
      } {} {} {} c:/web/openacs-4/contrib/packages/mailing-lists/www/madmin/jobs.xql}
dbqd.contrib.packages.mailing-lists.www.madmin.jobs.get_old_css_file {dbqd.contrib.packages.mailing-lists.www.madmin.jobs.get_old_css_file {
      
	select r.title || ' (' || r.content_length || ' bytes)' as css_file
	from cr_revisions r, ml_mail_jobs j
	where r.revision_id = j.css_revision_id
	and j.mail_job_id = :mail_job_id
    
      } {} {} {} c:/web/openacs-4/contrib/packages/mailing-lists/www/madmin/jobs.xql}
dbqd.contrib.packages.mailing-lists.www.madmin.jobs.get_old_list_or_users_selection {dbqd.contrib.packages.mailing-lists.www.madmin.jobs.get_old_list_or_users_selection {
      
	select list_id, selection_id
	from ml_mail_jobs m
	where mail_job_id = :mail_job_id
    
      } {} {} {} c:/web/openacs-4/contrib/packages/mailing-lists/www/madmin/jobs.xql}
dbqd.contrib.packages.mailing-lists.www.madmin.jobs.get_current_css_file {dbqd.contrib.packages.mailing-lists.www.madmin.jobs.get_current_css_file {
      
	select r.title || ' (' || r.content_length || ' bytes)' as css_file
	from cr_revisions r, cr_items i
	where r.revision_id = i.live_revision
	and i.parent_id = :class_id
    
      } {} {} {} c:/web/openacs-4/contrib/packages/mailing-lists/www/madmin/jobs.xql}
dbqd.contrib.packages.mailing-lists.www.madmin.jobs.get_ad_locales {dbqd.contrib.packages.mailing-lists.www.madmin.jobs.get_ad_locales {
      
    select label as name, locale as value
    from ad_locales

      } {} {} {} c:/web/openacs-4/contrib/packages/mailing-lists/www/madmin/jobs.xql}
dbqd.contrib.packages.mailing-lists.www.madmin.jobs.check_if_data_changeable {dbqd.contrib.packages.mailing-lists.www.madmin.jobs.check_if_data_changeable {
      
    select subject_change_p, text_header_change_p, text_body_change_p,
           text_footer_change_p, html_header_change_p, html_body_change_p,
           html_footer_change_p, subject as default_subject, mime_type,
           text_header as default_text_header, text_body as default_text_body,
           text_footer as default_text_footer, html_header as default_html_header,
           html_body as default_html_body, html_footer as default_html_footer
    from ml_mail_classes
    where mail_class_id = :class_id

      } {} {} {} c:/web/openacs-4/contrib/packages/mailing-lists/www/madmin/jobs.xql}
dbqd.contrib.packages.mailing-lists.www.madmin.jobs.get_mail_job_bind_vars {dbqd.contrib.packages.mailing-lists.www.madmin.jobs.get_mail_job_bind_vars {
      
	    select name, description, value
	    from ml_mail_job_bind_vars
	    where mail_job_id = :mail_job_id
	    order by name
	
      } {} {} {} c:/web/openacs-4/contrib/packages/mailing-lists/www/madmin/jobs.xql}
dbqd.contrib.packages.mailing-lists.www.madmin.jobs.get_selection_bind_vars {dbqd.contrib.packages.mailing-lists.www.madmin.jobs.get_selection_bind_vars {
      
	    select name, description, default_value
	    from us_bind_vars
	    where selection_id = :selection_id
	    order by name
	
      } {} {} {} c:/web/openacs-4/contrib/packages/mailing-lists/www/madmin/jobs.xql}
dbqd.contrib.packages.mailing-lists.www.madmin.jobs.get_mail_class_data {dbqd.contrib.packages.mailing-lists.www.madmin.jobs.get_mail_class_data {
      
	select c.locale, c.sender_email, c.subject, c.text_header, c.text_body,
	       c.text_footer, c.html_header, c.html_body, c.html_footer,
	       c.mime_type, c.name as class_name, c.comments as class_comment
	from ml_mail_classes c
	where c.mail_class_id = :class_id
    
      } {} {} {} c:/web/openacs-4/contrib/packages/mailing-lists/www/madmin/jobs.xql}
dbqd.contrib.packages.mailing-lists.www.madmin.jobs.get_list_name {dbqd.contrib.packages.mailing-lists.www.madmin.jobs.get_list_name {
      
	    select name as list_name, comments as list_comment
	    from ml_mailing_lists
	    where list_id = :list_id
	
      } {} {} {} c:/web/openacs-4/contrib/packages/mailing-lists/www/madmin/jobs.xql}
dbqd.contrib.packages.mailing-lists.www.madmin.jobs.get_users_selection_name {dbqd.contrib.packages.mailing-lists.www.madmin.jobs.get_users_selection_name {
      
	    select title as selection_name, description as selection_desc
	    from us_selections
	    where selection_id = :selection_id
	
      } {} {} {} c:/web/openacs-4/contrib/packages/mailing-lists/www/madmin/jobs.xql}
dbqd.contrib.packages.mailing-lists.www.madmin.jobs.update_bind_var {dbqd.contrib.packages.mailing-lists.www.madmin.jobs.update_bind_var {
      
		    update ml_mail_job_bind_vars
		    set value = :value
		    where mail_job_id = :mail_job_id
		    and name = :var_name
		
      } {} {} {} c:/web/openacs-4/contrib/packages/mailing-lists/www/madmin/jobs.xql}
dbqd.contrib.packages.mailing-lists.www.madmin.link-detail-oracle.get_link_clicks {dbqd.contrib.packages.mailing-lists.www.madmin.link-detail-oracle.get_link_clicks {
      
    select count(*) as number_clicks, trunc(l.click_time) as day,
           p.category_id
    from mail_link_clicks l, category_object_map cm, categories c, categories p
    where l.link_id = :link_id
    and cm.object_id = l.user_id
    and cm.category_id = c.category_id
    and c.tree_id = :tree_id
    and c.parent_id = p.category_id
    group by trunc(l.click_time), p.category_id
    order by p.category_id, trunc(l.click_time)

      } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/packages/mailing-lists/www/madmin/link-detail-oracle.xql}
dbqd.contrib.packages.mailing-lists.www.madmin.link-detail.get_link_clicks {dbqd.contrib.packages.mailing-lists.www.madmin.link-detail.get_link_clicks {
      
    select count(*) as number_clicks, to_char(l.click_time,'YYYY-MM-DD') as day,
           p.category_id
    from mail_link_clicks l, category_object_map cm, categories c, categories p
    where l.link_id = :link_id
    and cm.object_id = l.user_id
    and cm.category_id = c.category_id
    and c.tree_id = :tree_id
    and c.parent_id = p.category_id
    group by day, p.category_id
    order by p.category_id, day

      } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/packages/mailing-lists/www/madmin/link-detail-postgresql.xql}
dbqd.contrib.packages.mailing-lists.www.madmin.link-detail.get_current_country_category_tree {dbqd.contrib.packages.mailing-lists.www.madmin.link-detail.get_current_country_category_tree {
      
    select t.tree_id, l.url as link_url
    from ml_country_category_tree t, mail_links l
    where t.package_id = :package_id
    and l.link_id = :link_id

      } {} {} {} c:/web/openacs-4/contrib/packages/mailing-lists/www/madmin/link-detail.xql}
dbqd.contrib.packages.mailing-lists.www.madmin.link-track-oracle.get_links_in_mail {dbqd.contrib.packages.mailing-lists.www.madmin.link-track-oracle.get_links_in_mail {
      
    select l.link_id, l.url, count(c.link_id) as clicks
    from mail_links l, mail_link_mail_map m, mail_link_clicks c
    where m.link_id = l.link_id
    and m.mail_id = :mail_job_id
    and c.mail_id (+) = m.mail_id
    and c.link_id (+) = m.link_id
    group by l.link_id, l.url

      } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/packages/mailing-lists/www/madmin/link-track-oracle.xql}
dbqd.contrib.packages.mailing-lists.www.madmin.link-track.get_links_in_mail {dbqd.contrib.packages.mailing-lists.www.madmin.link-track.get_links_in_mail {

    select l.link_id, l.url, count(c.link_id) as clicks
    from mail_links l
    	 inner join mail_link_mail_map m using (link_id)
	 left outer join mail_link_clicks c
	      using (mail_id, link_id)
    where m.mail_id = :mail_job_id
    group by l.link_id, l.url

    } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/packages/mailing-lists/www/madmin/link-track-postgresql.xql}
dbqd.contrib.packages.mailing-lists.www.madmin.list-delete-2-oracle.delete_mailing_list {dbqd.contrib.packages.mailing-lists.www.madmin.list-delete-2-oracle.delete_mailing_list {
      
    begin
       ml_mailing_list.delete(:list_id);
    end;

      } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/packages/mailing-lists/www/madmin/list-delete-2-oracle.xql}
dbqd.contrib.packages.mailing-lists.www.madmin.list-delete-2.delete_mailing_list {dbqd.contrib.packages.mailing-lists.www.madmin.list-delete-2.delete_mailing_list {
      select ml_mailing_list__delete(:list_id);
      } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/packages/mailing-lists/www/madmin/list-delete-2-postgresql.xql}
dbqd.contrib.packages.mailing-lists.www.madmin.list-delete.get_list_info {dbqd.contrib.packages.mailing-lists.www.madmin.list-delete.get_list_info {
      
    select name
    from ml_mailing_lists 
    where list_id = :list_id
    and package_id = :package_id

      } {} {} {} c:/web/openacs-4/contrib/packages/mailing-lists/www/madmin/list-delete.xql}
dbqd.contrib.packages.mailing-lists.www.madmin.list-permissions-2-oracle.grant_user_list_read_privilege {dbqd.contrib.packages.mailing-lists.www.madmin.list-permissions-2-oracle.grant_user_list_read_privilege {
      
		begin
		  acs_permission.grant_permission (
						   object_id => :list_id,
						   grantee_id => :the_public_id,
						   privilege => 'read'
						   );
		end;
	    
      } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/packages/mailing-lists/www/madmin/list-permissions-2-oracle.xql}
dbqd.contrib.packages.mailing-lists.www.madmin.list-permissions-2-oracle.revoke_user_list_read_privilege {dbqd.contrib.packages.mailing-lists.www.madmin.list-permissions-2-oracle.revoke_user_list_read_privilege {
      
		begin
		  acs_permission.revoke_permission (
						    object_id => :list_id,
						    grantee_id => :the_public_id,
						    privilege => 'read'
						    );
		end;
	    
      } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/packages/mailing-lists/www/madmin/list-permissions-2-oracle.xql}
dbqd.contrib.packages.mailing-lists.www.madmin.list-permissions-2-oracle.get_all_mailing_list_admins {dbqd.contrib.packages.mailing-lists.www.madmin.list-permissions-2-oracle.get_all_mailing_list_admins {
      
	select acs_permission.permission_p(:list_id, oppm.party_id, :privilege) as permission_p,
	       oppm.party_id
	from acs_object_party_privilege_map oppm
	where oppm.object_id = :package_id
	and oppm.privilege = 'mailing_list_admin'
	and oppm.party_id <> :user_id
	and acs_permission.permission_p(:package_id, oppm.party_id, 'admin') = 'f'
    
      } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/packages/mailing-lists/www/madmin/list-permissions-2-oracle.xql}
dbqd.contrib.packages.mailing-lists.www.madmin.list-permissions-2-oracle.grant_user_list_privilege {dbqd.contrib.packages.mailing-lists.www.madmin.list-permissions-2-oracle.grant_user_list_privilege {
      
		begin
		  acs_permission.grant_permission (
						   object_id => :list_id,
						   grantee_id => :users_id,
						   privilege => :privilege
						   );
		end;
	    
      } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/packages/mailing-lists/www/madmin/list-permissions-2-oracle.xql}
dbqd.contrib.packages.mailing-lists.www.madmin.list-permissions-2-oracle.revoke_user_list_privilege {dbqd.contrib.packages.mailing-lists.www.madmin.list-permissions-2-oracle.revoke_user_list_privilege {
      
		begin
		  acs_permission.revoke_permission (
						    object_id => :list_id,
						    grantee_id => :users_id,
						    privilege => :privilege
						    );
		end;
	    
      } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/packages/mailing-lists/www/madmin/list-permissions-2-oracle.xql}
dbqd.contrib.packages.mailing-lists.www.madmin.list-permissions-2.grant_user_list_read_privilege {dbqd.contrib.packages.mailing-lists.www.madmin.list-permissions-2.grant_user_list_read_privilege {

      select acs_permission__grant_permission (
      	     :list_id,
	     :the_public_id,
	     'read'
      );

      } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/packages/mailing-lists/www/madmin/list-permissions-2-postgresql.xql}
dbqd.contrib.packages.mailing-lists.www.madmin.list-permissions-2.revoke_user_list_read_privilege {dbqd.contrib.packages.mailing-lists.www.madmin.list-permissions-2.revoke_user_list_read_privilege {

      select acs_permission__revoke_permission (
      	     :list_id,
	     :the_public_id,
	     'read'
      );

      } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/packages/mailing-lists/www/madmin/list-permissions-2-postgresql.xql}
dbqd.contrib.packages.mailing-lists.www.madmin.list-permissions-2.get_all_mailing_list_admins {dbqd.contrib.packages.mailing-lists.www.madmin.list-permissions-2.get_all_mailing_list_admins {
      
	select acs_permission__permission_p(:list_id, oppm.party_id, :privilege) as permission_p,
	       oppm.party_id
	from acs_object_party_privilege_map oppm
	where oppm.object_id = :package_id
	and oppm.privilege = 'mailing_list_admin'
	and oppm.party_id <> :user_id
	and acs_permission__permission_p(:package_id, oppm.party_id, 'admin') = 'f'
    
      } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/packages/mailing-lists/www/madmin/list-permissions-2-postgresql.xql}
dbqd.contrib.packages.mailing-lists.www.madmin.list-permissions-2.grant_user_list_privilege {dbqd.contrib.packages.mailing-lists.www.madmin.list-permissions-2.grant_user_list_privilege {

      select acs_permission__grant_permission (
      	     :list_id,
	     :users_id,
	     :privilege
      );

      } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/packages/mailing-lists/www/madmin/list-permissions-2-postgresql.xql}
dbqd.contrib.packages.mailing-lists.www.madmin.list-permissions-2.revoke_user_list_privilege {dbqd.contrib.packages.mailing-lists.www.madmin.list-permissions-2.revoke_user_list_privilege {

      select acs_permission__revoke_permission (
      	     :list_id,
	     :users_id,
	     :privilege
      );
	    
      } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/packages/mailing-lists/www/madmin/list-permissions-2-postgresql.xql}
dbqd.contrib.packages.mailing-lists.www.madmin.list-permissions-2.update_public_p {dbqd.contrib.packages.mailing-lists.www.madmin.list-permissions-2.update_public_p {
      
	    update ml_mailing_lists
	    set public_p = :public_p
	    where list_id = :list_id
	
      } {} {} {} c:/web/openacs-4/contrib/packages/mailing-lists/www/madmin/list-permissions-2.xql}
dbqd.contrib.packages.mailing-lists.www.madmin.list-permissions-oracle.get_all_mailing_list_admins {dbqd.contrib.packages.mailing-lists.www.madmin.list-permissions-oracle.get_all_mailing_list_admins {
      
    select p.person_id as admin_id, p.first_names, p.last_name,
           acs_permission.permission_p(:list_id, p.person_id, 'admin') as admin_p,
           acs_permission.permission_p(:list_id, p.person_id, 'read') as read_p,
           acs_permission.permission_p(:package_id, p.person_id, 'admin') as package_admin_p
    from acs_object_party_privilege_map oppm, persons p
    where oppm.party_id = p.person_id
    and oppm.object_id = :package_id
    and oppm.privilege = 'mailing_list_admin'
    and p.person_id <> :user_id

      } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/packages/mailing-lists/www/madmin/list-permissions-oracle.xql}
dbqd.contrib.packages.mailing-lists.www.madmin.list-permissions.get_all_mailing_list_admins {dbqd.contrib.packages.mailing-lists.www.madmin.list-permissions.get_all_mailing_list_admins {
      
    select p.person_id as admin_id, p.first_names, p.last_name,
           acs_permission__permission_p(:list_id, p.person_id, 'admin') as admin_p,
           acs_permission__permission_p(:list_id, p.person_id, 'read') as read_p,
           acs_permission__permission_p(:package_id, p.person_id, 'admin') as package_admin_p
    from acs_object_party_privilege_map oppm, persons p
    where oppm.party_id = p.person_id
    and oppm.object_id = :package_id
    and oppm.privilege = 'mailing_list_admin'
    and p.person_id <> :user_id

      } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/packages/mailing-lists/www/madmin/list-permissions-postgresql.xql}
dbqd.contrib.packages.mailing-lists.www.madmin.list-permissions.get_list_info {dbqd.contrib.packages.mailing-lists.www.madmin.list-permissions.get_list_info {
      
    select name, public_p
    from ml_mailing_lists 
    where list_id = :list_id
    and package_id = :package_id

      } {} {} {} c:/web/openacs-4/contrib/packages/mailing-lists/www/madmin/list-permissions.xql}
dbqd.contrib.packages.mailing-lists.www.madmin.list-subscribe-oracle.get_mailing_lists {dbqd.contrib.packages.mailing-lists.www.madmin.list-subscribe-oracle.get_mailing_lists {
      
    select name, list_id as value
    from ml_mailing_lists
    where acs_permission.permission_p (list_id, :user_id, 'read') = 't'
    order by lower(name)

      } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/packages/mailing-lists/www/madmin/list-subscribe-oracle.xql}
dbqd.contrib.packages.mailing-lists.www.madmin.list-subscribe.get_mailing_lists {dbqd.contrib.packages.mailing-lists.www.madmin.list-subscribe.get_mailing_lists {
      
    select name, list_id as value
    from ml_mailing_lists
    where acs_permission__permission_p (list_id, :user_id, 'read') = 't'
    order by lower(name)

      } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/packages/mailing-lists/www/madmin/list-subscribe-postgresql.xql}
dbqd.contrib.packages.mailing-lists.www.madmin.list-subscribe.get_list_mail_data {dbqd.contrib.packages.mailing-lists.www.madmin.list-subscribe.get_list_mail_data {
      
	select m.sender_email, m.confirm_subject, m.confirm_body, m.confirm_mime_type,
	       m.welcome_subject, m.welcome_body, m.welcome_mime_type, l.mime_charset
	from ml_mailing_lists m, ad_locales l
	where m.list_id = :list_id
	and l.locale = m.locale
    
      } {} {} {} c:/web/openacs-4/contrib/packages/mailing-lists/www/madmin/list-subscribe.xql}
dbqd.contrib.packages.mailing-lists.www.madmin.list-subscribe.get_country_codes {dbqd.contrib.packages.mailing-lists.www.madmin.list-subscribe.get_country_codes {
      
	select country_code, category_id
	from ml_country_codes
    
      } {} {} {} c:/web/openacs-4/contrib/packages/mailing-lists/www/madmin/list-subscribe.xql}
dbqd.contrib.packages.mailing-lists.www.madmin.lists-oracle.get_current_date {dbqd.contrib.packages.mailing-lists.www.madmin.lists-oracle.get_current_date {
      
	select to_char(sysdate,'YYYY MM DD') as expiration_date from dual
    
      } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/packages/mailing-lists/www/madmin/lists-oracle.xql}
dbqd.contrib.packages.mailing-lists.www.madmin.lists.get_current_date {dbqd.contrib.packages.mailing-lists.www.madmin.lists.get_current_date {
      
	select to_char(current_timestamp,'YYYY MM DD') as expiration_date
    
      } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/packages/mailing-lists/www/madmin/lists-postgresql.xql}
dbqd.contrib.packages.mailing-lists.www.madmin.lists.get_ad_locales {dbqd.contrib.packages.mailing-lists.www.madmin.lists.get_ad_locales {
      
    select label as name, locale as value
    from ad_locales

      } {} {} {} c:/web/openacs-4/contrib/packages/mailing-lists/www/madmin/lists.xql}
dbqd.contrib.packages.mailing-lists.www.madmin.lists.get_list_data {dbqd.contrib.packages.mailing-lists.www.madmin.lists.get_list_data {
      
	select name, locale, teaser, sender_email, welcome_subject, welcome_body,
	   welcome_mime_type, confirm_subject, confirm_body, confirm_mime_type,
	   remind_subject, remind_body, remind_mime_type,
           to_char(expiration_date,'YYYY MM DD') as expiration_date,
	   first_reminder, second_reminder, comments
	from ml_mailing_lists
	where list_id = :list_id
	and package_id = :package_id
    
      } {} {} {} c:/web/openacs-4/contrib/packages/mailing-lists/www/madmin/lists.xql}
dbqd.contrib.packages.mailing-lists.www.madmin.stats-all-region.get_link_url {dbqd.contrib.packages.mailing-lists.www.madmin.stats-all-region.get_link_url {
	SELECT url FROM mail_links WHERE link_id = :link_id
      } {} {} {} c:/web/openacs-4/contrib/packages/mailing-lists/www/madmin/stats-all-region-postgresql.xql}
dbqd.contrib.packages.mailing-lists.www.madmin.stats-all-region.get_all_clicks_for_link {dbqd.contrib.packages.mailing-lists.www.madmin.stats-all-region.get_all_clicks_for_link {


    SELECT count(*) as number_clicks  , (com.category_id) as country_id , c.parent_id 
    FROM mail_link_clicks mlc , category_object_map com, categories c
    WHERE mlc.link_id = :link_id
    AND mlc.mail_id = :mail_job_id
    AND mlc.user_id = com.object_id
    AND  com.category_id = c.category_id 
    group by country_id , c.parent_id 
    order by country_id, c.parent_id

      } {} {} {} c:/web/openacs-4/contrib/packages/mailing-lists/www/madmin/stats-all-region-postgresql.xql}
dbqd.contrib.packages.mailing-lists.www.madmin.stats-weekly.get_first_date {dbqd.contrib.packages.mailing-lists.www.madmin.stats-weekly.get_first_date {

    select count(*) as number_clicks, to_char(l.click_time,'J') as cur_date,
	    p.category_id
	    from mail_link_clicks l, category_object_map cm, categories c, categories p
	    where l.link_id = :link_id
	    and l.mail_id = :mail_job_id
	    and cm.object_id = l.user_id
	    and cm.category_id = c.category_id
	    and c.tree_id = :tree_id
	    and c.parent_id = p.category_id
	    group by cur_date , p.category_id
	    order by cur_date ,p.category_id

      } {} {} {} c:/web/openacs-4/contrib/packages/mailing-lists/www/madmin/stats-weekly.xql}
dbqd.contrib.packages.mailing-lists.www.madmin.stats-weekly.get_category_ids_for_region {dbqd.contrib.packages.mailing-lists.www.madmin.stats-weekly.get_category_ids_for_region {

     SELECT category_id as cur_category_id FROM categories WHERE tree_id = :tree_id AND parent_id is null

      } {} {} {} c:/web/openacs-4/contrib/packages/mailing-lists/www/madmin/stats-weekly.xql}
dbqd.contrib.packages.mailing-lists.www.madmin.stats-weekly.get_link_clicks_dev {dbqd.contrib.packages.mailing-lists.www.madmin.stats-weekly.get_link_clicks_dev {

	    select count(*) as number_clicks, to_char(l.click_time,'DD MM YYYY HH24') as cur_ns_set_key,
         	   p.category_id
            from mail_link_clicks l, category_object_map cm, categories c, categories p
   	    where l.link_id = :link_id
	    and l.mail_id = :mail_job_id
	    and l.click_time >= to_timestamp(:time_stamp_start , 'DD MM YYYY HH24')
	    and l.click_time < to_timestamp(:time_stamp_end , 'DD MM YYYY HH24')
	    and cm.object_id = l.user_id
	    and cm.category_id = c.category_id
	    and c.tree_id = :tree_id
	    and c.parent_id = p.category_id
	    group by cur_ns_set_key , p.category_id
	    order by p.category_id, cur_ns_set_key

      } {} {} {} c:/web/openacs-4/contrib/packages/mailing-lists/www/madmin/stats-weekly.xql}
dbqd.contrib.packages.populate.tcl.populate-procs-oracle.fill_folder_tree.new_item {dbqd.contrib.packages.populate.tcl.populate-procs-oracle.fill_folder_tree.new_item {
         begin
           :1 := file_storage.new_file(
                   title => :new_file_name,
                   folder_id => :new_folder_id,
                   creation_user => null,
                   creation_ip => null,
                   indb_p => :indb_p
            );
          end;
      } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/packages/populate/tcl/populate-procs-oracle.xql}
dbqd.contrib.packages.populate.tcl.populate-procs-oracle.fill_folder_tree.new_version {dbqd.contrib.packages.populate.tcl.populate-procs-oracle.fill_folder_tree.new_version {
         begin 
           :1 := file_storage.new_version(
                   filename => :upload_filename,
                   description => 'Test file',
                   mime_type => :mime_type,
                   item_id => :item_id,
                   creation_user => null,
                   creation_ip => null
                 );
         end;
      } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/packages/populate/tcl/populate-procs-oracle.xql}
dbqd.contrib.packages.populate.tcl.populate-procs-oracle.fill_folder_tree.set_lob_content {dbqd.contrib.packages.populate.tcl.populate-procs-oracle.fill_folder_tree.set_lob_content {
      
        update cr_revisions
        set content = empty_blob()
        where revision_id = :revision_id
        returning content into :1
	   
      } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/packages/populate/tcl/populate-procs-oracle.xql}
dbqd.contrib.packages.populate.tcl.populate-procs-oracle.fill_folder_tree.set_lob_size {dbqd.contrib.packages.populate.tcl.populate-procs-oracle.fill_folder_tree.set_lob_size {

         update cr_revisions
         set content_length = dbms_lob.getlength(content)
         where revision_id = :revision_id

      } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/packages/populate/tcl/populate-procs-oracle.xql}
dbqd.contrib.packages.populate.tcl.populate-procs-oracle.fill_folder_tree.set_live {dbqd.contrib.packages.populate.tcl.populate-procs-oracle.fill_folder_tree.set_live {
         begin
           content_item.set_live_revision(
             revision_id => :revision_id
           );
         end;
      } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/packages/populate/tcl/populate-procs-oracle.xql}
dbqd.contrib.packages.populate.tcl.populate-procs.fill_folder_tree.new_item {dbqd.contrib.packages.populate.tcl.populate-procs.fill_folder_tree.new_item {
         select
           file_storage__new_file(
             :new_file_name,
             :new_folder_id,
             null,
             null,
             :indb_p
           )
      } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/packages/populate/tcl/populate-procs-postgresql.xql}
dbqd.contrib.packages.populate.tcl.populate-procs.fill_folder_tree.new_version {dbqd.contrib.packages.populate.tcl.populate-procs.fill_folder_tree.new_version {
         select
           file_storage__new_version(
             :upload_filename,
             'Test file',
             :mime_type,
             :item_id,
             null,
             null
         )
      } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/packages/populate/tcl/populate-procs-postgresql.xql}
dbqd.contrib.packages.populate.tcl.populate-procs.fill_folder_tree.set_lob_content {dbqd.contrib.packages.populate.tcl.populate-procs.fill_folder_tree.set_lob_content {

	update cr_revisions
	set lob = [set __lob_id [db_string get_lob_id "select empty_lob()"]]
	where revision_id = :revision_id
	   
      } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/packages/populate/tcl/populate-procs-postgresql.xql}
dbqd.contrib.packages.populate.tcl.populate-procs.fill_folder_tree.set_lob_size {dbqd.contrib.packages.populate.tcl.populate-procs.fill_folder_tree.set_lob_size {

         update cr_revisions
         set content_length = lob_length(lob)
         where revision_id = :revision_id

      } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/packages/populate/tcl/populate-procs-postgresql.xql}
dbqd.contrib.packages.populate.tcl.populate-procs.fill_folder_tree.set_live {dbqd.contrib.packages.populate.tcl.populate-procs.fill_folder_tree.set_live {
         select content_item__set_live_revision(:revision_id)
      } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/packages/populate/tcl/populate-procs-postgresql.xql}
dbqd.contrib.packages.populate.www.add-membership-groups-oracle.get_users {dbqd.contrib.packages.populate.www.add-membership-groups-oracle.get_users {
            select user_id from cc_users where rownum <= $group_users
        } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/packages/populate/www/add-membership-groups-oracle.xql}
dbqd.contrib.packages.populate.www.add-membership-groups.get_users {dbqd.contrib.packages.populate.www.add-membership-groups.get_users {
            select user_id from cc_users limit $group_users
        } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/packages/populate/www/add-membership-groups-postgresql.xql}
dbqd.contrib.packages.populate.www.add-membership-groups.get_group_count {dbqd.contrib.packages.populate.www.add-membership-groups.get_group_count {
            select count(*) as current_groups from groups
        } {} {} {} c:/web/openacs-4/contrib/packages/populate/www/add-membership-groups.xql}
dbqd.contrib.packages.populate.www.add-membership-groups.get_user_count {dbqd.contrib.packages.populate.www.add-membership-groups.get_user_count {
            select count(*) as current_users from cc_users
        } {} {} {} c:/web/openacs-4/contrib/packages/populate/www/add-membership-groups.xql}
dbqd.contrib.packages.populate.www.add-membership-groups.get_membership_rels {dbqd.contrib.packages.populate.www.add-membership-groups.get_membership_rels {
            select o.pretty_plural, o.object_type || ':' || o.pretty_plural as type_and_plural
            from acs_object_types o, acs_object_type_supertype_map m
            where m.ancestor_type = 'membership_rel'
              and o.object_type = m.object_type
        } {} {} {} c:/web/openacs-4/contrib/packages/populate/www/add-membership-groups.xql}
dbqd.contrib.packages.populate.www.add-membership-segment.check_rel_type {dbqd.contrib.packages.populate.www.add-membership-segment.check_rel_type {
            select * from acs_rel_types where rel_type = lower(:segment_name) || '_rel'
        } {} {} {} c:/web/openacs-4/contrib/packages/populate/www/add-membership-segment.xql}
dbqd.contrib.packages.populate.www.add-rel-type.check_rel_type {dbqd.contrib.packages.populate.www.add-rel-type.check_rel_type {
            select 1
            from dual
            where exists (select 1 from acs_rel_types where rel_type = :rel_type)
        } {} {} {} c:/web/openacs-4/contrib/packages/populate/www/add-rel-type.xql}
dbqd.contrib.packages.populate.www.add-users.get_user_count {dbqd.contrib.packages.populate.www.add-users.get_user_count {
            select count(*) as current_users from cc_users
        } {} {} {} c:/web/openacs-4/contrib/packages/populate/www/add-users.xql}
dbqd.contrib.packages.portal.tcl.datasource-procs.portal::datasource::get.select_datasource {dbqd.contrib.packages.portal.tcl.datasource-procs.portal::datasource::get.select_datasource {
            select *
            from portal_datasources
            where datasource_id = :datasource_id
        } {} {} {} c:/web/openacs-4/contrib/packages/portal/tcl/datasource-procs.xql}
dbqd.contrib.packages.portal.tcl.datasource-procs.portal::datasource::get_id.select_id {dbqd.contrib.packages.portal.tcl.datasource-procs.portal::datasource::get_id.select_id {
            select datasource_id
            from portal_datasources
            where name = :name
        } {} {} {} c:/web/openacs-4/contrib/packages/portal/tcl/datasource-procs.xql}
dbqd.contrib.packages.portal.tcl.element-parameter-procs.portal::element::parameter::new.insert_parameter {dbqd.contrib.packages.portal.tcl.element-parameter-procs.portal::element::parameter::new.insert_parameter {
            insert into portal_element_parameters
            (parameter_id, element_id, configured_p, key, value)
            select portal_seq.nextval, :element_id, 't', :key, :value
            from dual
            where not exists (select parameter_id
                              from portal_element_parameters
                              where element_id = :element_id
                              and key = :key
                              and value= :value)
        } {} {} {} c:/web/openacs-4/contrib/packages/portal/tcl/element-parameter-procs.xql}
dbqd.contrib.packages.portal.tcl.element-parameter-procs.portal::element::parameter::delete.delete_one_parameter_value {dbqd.contrib.packages.portal.tcl.element-parameter-procs.portal::element::parameter::delete.delete_one_parameter_value {
            delete
            from portal_element_parameters
            where element_id = :element_id
            and key = :key
            and value = :value
        } {} {} {} c:/web/openacs-4/contrib/packages/portal/tcl/element-parameter-procs.xql}
dbqd.contrib.packages.portal.tcl.element-parameter-procs.portal::element::parameter::delete.delete_parameter {dbqd.contrib.packages.portal.tcl.element-parameter-procs.portal::element::parameter::delete.delete_parameter {
            delete
            from portal_element_parameters
            where element_id = :element_id
            and key = :key
        } {} {} {} c:/web/openacs-4/contrib/packages/portal/tcl/element-parameter-procs.xql}
dbqd.contrib.packages.portal.tcl.element-parameter-procs.portal::element::parameter::get.select_parameters {dbqd.contrib.packages.portal.tcl.element-parameter-procs.portal::element::parameter::get.select_parameters {
            select value
            from portal_element_parameters
            where element_id = :element_id
            and key = :key
        } {} {} {} c:/web/openacs-4/contrib/packages/portal/tcl/element-parameter-procs.xql}
dbqd.contrib.packages.portal.tcl.element-parameter-procs.portal::element:parameter::set_value.update_parameter {dbqd.contrib.packages.portal.tcl.element-parameter-procs.portal::element:parameter::set_value.update_parameter {
            update portal_element_parameters
            set value = :value
            where element_id = :element_id
            and key = :key
        } {} {} {} c:/web/openacs-4/contrib/packages/portal/tcl/element-parameter-procs.xql}
dbqd.contrib.packages.portal.tcl.element-parameter-procs.portal::element::parameter::get_all.select_parameters {dbqd.contrib.packages.portal.tcl.element-parameter-procs.portal::element::parameter::get_all.select_parameters {
            select key,
                   value
            from portal_element_parameters
            where element_id = :element_id
        } {} {} {} c:/web/openacs-4/contrib/packages/portal/tcl/element-parameter-procs.xql}
dbqd.contrib.packages.portal.tcl.element-procs-oracle.portal::element::new.insert_element {dbqd.contrib.packages.portal.tcl.element-procs-oracle.portal::element::new.insert_element {
            insert into portal_elements
            (element_id, datasource_id, name, page_id, region, sort_key, shadeable_p, hideable_p)
            select :element_id,
                   :datasource_id,
                   :name,
                   :page_id,
                   :region,
                   nvl((select max(portal_elements.sort_key) + 1
                        from portal_elements
                        where page_id = :page_id
                        and region = :region), 1),
                   portal_datasources.shadeable_p,
                   portal_datasources.hideable_p
            from portal_datasources
            where portal_datasources.datasource_id = :datasource_id
        } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/packages/portal/tcl/element-procs-oracle.xql}
dbqd.contrib.packages.portal.tcl.element-procs-oracle.portal::element::move_vertically.select_previous_element {dbqd.contrib.packages.portal.tcl.element-procs-oracle.portal::element::move_vertically.select_previous_element {
            select sort_key as other_sort_key,
                   element_id as other_element_id
            from (select *
                  from portal_elements
                  where page_id = :page_id
                  and region = :region
                  and sort_key < :sort_key
                  and state != 'pinned'
                  order by sort_key desc)
            where rownum = 1
        } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/packages/portal/tcl/element-procs-oracle.xql}
dbqd.contrib.packages.portal.tcl.element-procs-oracle.portal::element::move_vertically.select_next_element {dbqd.contrib.packages.portal.tcl.element-procs-oracle.portal::element::move_vertically.select_next_element {
            select sort_key as other_sort_key,
                   element_id as other_element_id
            from (select *
                  from portal_elements
                  where page_id = :page_id
                  and region = :region
                  and sort_key > :sort_key
                  and state != 'pinned'
                  order by sort_key asc)
            where rownum = 1
        } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/packages/portal/tcl/element-procs-oracle.xql}
dbqd.contrib.packages.portal.tcl.element-procs-oracle.portal::element::move_horizontally.update_region {dbqd.contrib.packages.portal.tcl.element-procs-oracle.portal::element::move_horizontally.update_region {
            update portal_elements
            set region = :region,
                sort_key = (select nvl((select max(sort_key) + 1
                                        from portal_elements
                                        where page_id = :page_id
                                        and region = :region),
                                       1)
                            from dual)
            where element_id = :element_id
        } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/packages/portal/tcl/element-procs-oracle.xql}
dbqd.contrib.packages.portal.tcl.element-procs-oracle.portal::element::move_to_page.update_element {dbqd.contrib.packages.portal.tcl.element-procs-oracle.portal::element::move_to_page.update_element {
            update portal_elements
            set page_id = :page_id,
                region = :region,
                sort_key = (select nvl((select max(sort_key) + 1
                                        from portal_elements
                                        where page_id = :page_id
                                        and region = :region),
                                       1)
                            from dual)
            where element_id = :element_id
        } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/packages/portal/tcl/element-procs-oracle.xql}
dbqd.contrib.packages.portal.tcl.element-procs.portal::element::new.insert_element {dbqd.contrib.packages.portal.tcl.element-procs.portal::element::new.insert_element {
            insert into portal_elements
            (element_id, datasource_id, name, page_id, region, sort_key, shadeable_p, hideable_p)
            select :element_id,
                   :datasource_id,
                   :name,
                   :page_id,
                   :region,
                   coalesce((select max(portal_elements.sort_key) + 1
                        from portal_elements
                        where page_id = :page_id
                        and region = :region), 1),
                   portal_datasources.shadeable_p,
                   portal_datasources.hideable_p
            from portal_datasources
            where portal_datasources.datasource_id = :datasource_id
        } {} {} {postgresql 7.2} c:/web/openacs-4/contrib/packages/portal/tcl/element-procs-postgresql.xql}
dbqd.contrib.packages.portal.tcl.element-procs.portal::element::move_vertically.select_previous_element {dbqd.contrib.packages.portal.tcl.element-procs.portal::element::move_vertically.select_previous_element {
            select sort_key as other_sort_key,
                   element_id as other_element_id
            from (select *
                  from portal_elements
                  where page_id = :page_id
                  and region = :region
                  and sort_key < :sort_key
                  and state != 'pinned'
                  order by sort_key desc) as other_element
            limit 1
        } {} {} {postgresql 7.2} c:/web/openacs-4/contrib/packages/portal/tcl/element-procs-postgresql.xql}
dbqd.contrib.packages.portal.tcl.element-procs.portal::element::move_vertically.select_next_element {dbqd.contrib.packages.portal.tcl.element-procs.portal::element::move_vertically.select_next_element {
            select sort_key as other_sort_key,
                   element_id as other_element_id
            from (select *
                  from portal_elements
                  where page_id = :page_id
                  and region = :region
                  and sort_key > :sort_key
                  and state != 'pinned'
                  order by sort_key asc) as other_element
            limit 1
        } {} {} {postgresql 7.2} c:/web/openacs-4/contrib/packages/portal/tcl/element-procs-postgresql.xql}
dbqd.contrib.packages.portal.tcl.element-procs.portal::element::move_horizontally.update_region {dbqd.contrib.packages.portal.tcl.element-procs.portal::element::move_horizontally.update_region {
            update portal_elements
            set region = :region,
                sort_key = (select coalesce((select max(sort_key) + 1
                                             from portal_elements
                                             where page_id = :page_id
                                             and region = :region),
                                            1)
                            from dual)
            where element_id = :element_id
        } {} {} {postgresql 7.2} c:/web/openacs-4/contrib/packages/portal/tcl/element-procs-postgresql.xql}
dbqd.contrib.packages.portal.tcl.element-procs.portal::element::move_to_page.update_element {dbqd.contrib.packages.portal.tcl.element-procs.portal::element::move_to_page.update_element {
            update portal_elements
            set page_id = :page_id,
                region = :region,
                sort_key = (select coalesce((select max(sort_key) + 1
                                             from portal_elements
                                             where page_id = :page_id
                                             and region = :region),
                                            1)
                            from dual)
            where element_id = :element_id
        } {} {} {postgresql 7.2} c:/web/openacs-4/contrib/packages/portal/tcl/element-procs-postgresql.xql}
dbqd.contrib.packages.portal.tcl.element-procs.portal::element::new.select_region_count {dbqd.contrib.packages.portal.tcl.element-procs.portal::element::new.select_region_count {
            select count(*)
            from portal_elements,
                 portal_pages
            where portal_pages.page_id = :page_id
            and portal_pages.page_id = portal_elements.page_id
            and portal_elements.region = :region
        } {} {} {} c:/web/openacs-4/contrib/packages/portal/tcl/element-procs.xql}
dbqd.contrib.packages.portal.tcl.element-procs.portal::element::new.select_template_element_id {dbqd.contrib.packages.portal.tcl.element-procs.portal::element::new.select_template_element_id {
            select portal_elements.element_id as template_element_id
            from portal_elements,
                 portal_pages,
                 portals
            where portal_elements.page_id = portal_pages.page_id
            and portal_pages.portal_id = portals.template_id
            and portals.portal_id = (select portal_id
                                     from portal_pages
                                     where page_id = :page_id)
            and portal_elements.datasource_id = :datasource_id
        } {} {} {} c:/web/openacs-4/contrib/packages/portal/tcl/element-procs.xql}
dbqd.contrib.packages.portal.tcl.element-procs.portal::element::new.insert_element_parameters {dbqd.contrib.packages.portal.tcl.element-procs.portal::element::new.insert_element_parameters {
            insert into portal_element_parameters
            (parameter_id, element_id, config_required_p, configured_p, key, value)
            select portal_seq.nextval, :element_id, config_required_p, configured_p, key, value
            from portal_datasource_parameters
            where datasource_id = :datasource_id
        } {} {} {} c:/web/openacs-4/contrib/packages/portal/tcl/element-procs.xql}
dbqd.contrib.packages.portal.tcl.element-procs.portal::element::new.insert_element_with_template {dbqd.contrib.packages.portal.tcl.element-procs.portal::element::new.insert_element_with_template {
            insert into portal_elements
            (element_id, datasource_id, name, page_id, region, sort_key, state, shadeable_p, hideable_p)
            select :element_id, :datasource_id, :name, :page_id, region, sort_key, state, shadeable_p, hideable_p
            from portal_elements
            where element_id = :template_element_id
        } {} {} {} c:/web/openacs-4/contrib/packages/portal/tcl/element-procs.xql}
dbqd.contrib.packages.portal.tcl.element-procs.portal::element::new.insert_element_parameters_with_template {dbqd.contrib.packages.portal.tcl.element-procs.portal::element::new.insert_element_parameters_with_template {
            insert into portal_element_parameters
            (parameter_id, element_id, config_required_p, configured_p, key, value)
            select portal_seq.nextval, :element_id, config_required_p, configured_p, key, value
            from portal_element_parameters
            where element_id = :template_element_id
        } {} {} {} c:/web/openacs-4/contrib/packages/portal/tcl/element-procs.xql}
dbqd.contrib.packages.portal.tcl.element-procs.portal::element::delete.delete_element {dbqd.contrib.packages.portal.tcl.element-procs.portal::element::delete.delete_element {
            delete
            from portal_elements
            where element_id = :element_id
        } {} {} {} c:/web/openacs-4/contrib/packages/portal/tcl/element-procs.xql}
dbqd.contrib.packages.portal.tcl.element-procs.portal::element::get.select_element {dbqd.contrib.packages.portal.tcl.element-procs.portal::element::get.select_element {
            select *
            from portal_elements
            where element_id = :element_id
        } {} {} {} c:/web/openacs-4/contrib/packages/portal/tcl/element-procs.xql}
dbqd.contrib.packages.portal.tcl.element-procs.portal::element::set_values.update_element {dbqd.contrib.packages.portal.tcl.element-procs.portal::element::set_values.update_element {
            update portal_elements
            set datasource_id = :datasource_id,
                name = :name,
                page_id = :page_id,
                region = :region,
                sort_key = :sortkey,
                state = :state
            where element_id = :element_id
        } {} {} {} c:/web/openacs-4/contrib/packages/portal/tcl/element-procs.xql}
dbqd.contrib.packages.portal.tcl.element-procs.portal::element::get_list_from_datasource_name.select_element_ids {dbqd.contrib.packages.portal.tcl.element-procs.portal::element::get_list_from_datasource_name.select_element_ids {
            select portal_elements.element_id
            from portal_elements,
                 portal_pages
            where portal_pages.portal_id = :portal_id
            and portal_elements.datasource_id = :datasource_id
            and portal_elements.page_id = portal_pages.page_id
        } {} {} {} c:/web/openacs-4/contrib/packages/portal/tcl/element-procs.xql}
dbqd.contrib.packages.portal.tcl.element-procs.portal::element::move_vertically.swap_sort_keys_1 {dbqd.contrib.packages.portal.tcl.element-procs.portal::element::move_vertically.swap_sort_keys_1 {
            update portal_elements
            set sort_key = :dummy_sort_key
            where element_id = :element_id
        } {} {} {} c:/web/openacs-4/contrib/packages/portal/tcl/element-procs.xql}
dbqd.contrib.packages.portal.tcl.element-procs.portal::element::move_vertically.swap_sort_keys_2 {dbqd.contrib.packages.portal.tcl.element-procs.portal::element::move_vertically.swap_sort_keys_2 {
            update portal_elements
            set sort_key = :sort_key
            where element_id = :other_element_id
        } {} {} {} c:/web/openacs-4/contrib/packages/portal/tcl/element-procs.xql}
dbqd.contrib.packages.portal.tcl.element-procs.portal::element::move_vertically.swap_sort_keys_3 {dbqd.contrib.packages.portal.tcl.element-procs.portal::element::move_vertically.swap_sort_keys_3 {
            update portal_elements
            set sort_key = :other_sort_key
            where element_id = :element_id
        } {} {} {} c:/web/openacs-4/contrib/packages/portal/tcl/element-procs.xql}
dbqd.contrib.packages.portal.tcl.layout-procs.portal::layout::get_region_count_not_cached.select_region_count {dbqd.contrib.packages.portal.tcl.layout-procs.portal::layout::get_region_count_not_cached.select_region_count {
            select count(*)
            from portal_layout_regions
            where layout_id = :layout_id
        } {} {} {} c:/web/openacs-4/contrib/packages/portal/tcl/layout-procs.xql}
dbqd.contrib.packages.portal.tcl.layout-procs.portal::layout::get_region_list_not_cached.select_region_list {dbqd.contrib.packages.portal.tcl.layout-procs.portal::layout::get_region_list_not_cached.select_region_list {
            select region
            from portal_layout_regions
            where layout_id = :layout_id
            order by region
        } {} {} {} c:/web/openacs-4/contrib/packages/portal/tcl/layout-procs.xql}
dbqd.contrib.packages.portal.tcl.layout-procs.portal::layout::get_layout_list.select_layout_list {dbqd.contrib.packages.portal.tcl.layout-procs.portal::layout::get_layout_list.select_layout_list {
            select layout_id,
                   name as layout_name,
                   description as layout_description
            from portal_layouts
        } {} {} {} c:/web/openacs-4/contrib/packages/portal/tcl/layout-procs.xql}
dbqd.contrib.packages.portal.tcl.layout-procs.portal::layout::get_id_from_name_not_cached.select_id_from_name {dbqd.contrib.packages.portal.tcl.layout-procs.portal::layout::get_id_from_name_not_cached.select_id_from_name {
            select layout_id
            from portal_layouts
            where name = :name
        } {} {} {} c:/web/openacs-4/contrib/packages/portal/tcl/layout-procs.xql}
dbqd.contrib.packages.portal.tcl.page-procs-oracle.portal::page::delete.delete_page {dbqd.contrib.packages.portal.tcl.page-procs-oracle.portal::page::delete.delete_page {
            begin
                portal_page.delete(page_id => :page_id);
            end;
        } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/packages/portal/tcl/page-procs-oracle.xql}
dbqd.contrib.packages.portal.tcl.page-procs.portal::page::delete.delete_page {dbqd.contrib.packages.portal.tcl.page-procs.portal::page::delete.delete_page {
            select portal_page__delete(:page_id);
        } {} {} {postgresql 7.2} c:/web/openacs-4/contrib/packages/portal/tcl/page-procs-postgresql.xql}
dbqd.contrib.packages.portal.tcl.page-procs.portal::page::get_not_cached.select_page {dbqd.contrib.packages.portal.tcl.page-procs.portal::page::get_not_cached.select_page {
            select *
            from portal_pages
            where page_id = :page_id
        } {} {} {} c:/web/openacs-4/contrib/packages/portal/tcl/page-procs.xql}
dbqd.contrib.packages.portal.tcl.page-procs.portal::page::set_values.update_page {dbqd.contrib.packages.portal.tcl.page-procs.portal::page::set_values.update_page {
            update portal_pages
            set name = :name,
                portal_id = :portal_id,
                layout_id = :layout_id,
                sort_key = :sort_key
            where page_id = :page_id
        } {} {} {} c:/web/openacs-4/contrib/packages/portal/tcl/page-procs.xql}
dbqd.contrib.packages.portal.tcl.page-procs.portal::page::has_visisble_elements.select_visible_elements {dbqd.contrib.packages.portal.tcl.page-procs.portal::page::has_visisble_elements.select_visible_elements {
            select case when count(*) = 0 then 0 else 1 end
            from portal_elements
            where page_id = :page_id
            and state != 'hidden'
        } {} {} {} c:/web/openacs-4/contrib/packages/portal/tcl/page-procs.xql}
dbqd.contrib.packages.portal.tcl.portal-procs-oracle.portal::delete.delete_portal {dbqd.contrib.packages.portal.tcl.portal-procs-oracle.portal::delete.delete_portal {
            begin
                portal.delete(portal_id => :portal_id);
            end;
        } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/packages/portal/tcl/portal-procs-oracle.xql}
dbqd.contrib.packages.portal.tcl.portal-procs-oracle.portal::configure_dispatch.show_here_update_sk {dbqd.contrib.packages.portal.tcl.portal-procs-oracle.portal::configure_dispatch.show_here_update_sk {
            update portal_elements
            set region = :region,
                page_id = :page_id,
                sort_key = (select nvl((select max(sort_key) + 1
                                        from portal_elements
                                        where page_id = :page_id
                                        and region = :region),
                                       1)
                            from dual)
            where element_id = :element_id
        } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/packages/portal/tcl/portal-procs-oracle.xql}
dbqd.contrib.packages.portal.tcl.portal-procs.portal::delete.delete_portal {dbqd.contrib.packages.portal.tcl.portal-procs.portal::delete.delete_portal {
            select portal__delete(:portal_id);
        } {} {} {postgresql 7.2} c:/web/openacs-4/contrib/packages/portal/tcl/portal-procs-postgresql.xql}
dbqd.contrib.packages.portal.tcl.portal-procs.portal::configure_dispatch.show_here_update_sk {dbqd.contrib.packages.portal.tcl.portal-procs.portal::configure_dispatch.show_here_update_sk {
            update portal_elements
            set region = :region,
                page_id = :page_id,
                sort_key = (select coalesce((select max(sort_key) + 1
                                             from portal_elements
                                             where page_id = :page_id
                                             and region = :region),
                                            1)
                            from dual)
            where element_id = :element_id
        } {} {} {postgresql 7.2} c:/web/openacs-4/contrib/packages/portal/tcl/portal-procs-postgresql.xql}
dbqd.contrib.packages.portal.tcl.portal-procs.portal::delete.delete_permissions {dbqd.contrib.packages.portal.tcl.portal-procs.portal::delete.delete_permissions {
            delete
            from acs_permissions
            where object_id = :portal_id
        } {} {} {} c:/web/openacs-4/contrib/packages/portal/tcl/portal-procs.xql}
dbqd.contrib.packages.portal.tcl.portal-procs.portal::get_not_cached.select_portal_info {dbqd.contrib.packages.portal.tcl.portal-procs.portal::get_not_cached.select_portal_info {
            select *
            from portals
            where portal_id = :portal_id
        } {} {} {} c:/web/openacs-4/contrib/packages/portal/tcl/portal-procs.xql}
dbqd.contrib.packages.portal.tcl.portal-procs.portal::set_values.update_portal {dbqd.contrib.packages.portal.tcl.portal-procs.portal::set_values.update_portal {
            update portals
            set name = :name,
                theme_id = :theme_id,
                template_id = :template_id
            where portal_id = :portal_id
        } {} {} {} c:/web/openacs-4/contrib/packages/portal/tcl/portal-procs.xql}
dbqd.contrib.packages.portal.tcl.portal-procs.portal::render.portal_select {dbqd.contrib.packages.portal.tcl.portal-procs.portal::render.portal_select {
            select portals.name,
                   portals.portal_id,
                   portals.theme_id,
                   portal_layouts.layout_id,
                   portal_layouts.filename as layout_filename,
                   portal_pages.page_id
            from portals,
                 portal_pages,
                 portal_layouts
            where portal_pages.sort_key = :page_num
            and portal_pages.portal_id = :portal_id
            and portal_pages.portal_id = portals.portal_id
            and portal_pages.layout_id = portal_layouts.layout_id
        } {} {} {} c:/web/openacs-4/contrib/packages/portal/tcl/portal-procs.xql}
dbqd.contrib.packages.portal.tcl.portal-procs.portal::render.element_select {dbqd.contrib.packages.portal.tcl.portal-procs.portal::render.element_select {
            select portal_elements.element_id,
                   portal_elements.region,
                   portal_elements.sort_key
            from portal_elements,
                 portal_pages
            where portal_pages.portal_id = :portal_id
            and portal_elements.page_id = :page_id
            and portal_elements.page_id = portal_pages.page_id
            and portal_elements.state != 'hidden'
            order by portal_elements.region,
                     portal_elements.sort_key
        } {} {} {} c:/web/openacs-4/contrib/packages/portal/tcl/portal-procs.xql}
dbqd.contrib.packages.portal.tcl.portal-procs.portal::configure.portal_and_page_info_select {dbqd.contrib.packages.portal.tcl.portal-procs.portal::configure.portal_and_page_info_select {
            select portals.name,
                   portals.portal_id,
                   portal_layouts.filename as template,
                   portal_pages.name as page_name,
                   portal_pages.layout_id as layout_id
            from portals,
                 portal_layouts,
                 portal_pages
            where portal_pages.portal_id = :portal_id
            and portal_pages.page_id = :page_id
            and portal_pages.portal_id = portals.portal_id
            and portal_pages.layout_id = portal_layouts.layout_id
        } {} {} {} c:/web/openacs-4/contrib/packages/portal/tcl/portal-procs.xql}
dbqd.contrib.packages.portal.tcl.portal-procs.portal::configure_dispatch.show_here_update_state {dbqd.contrib.packages.portal.tcl.portal-procs.portal::configure_dispatch.show_here_update_state {
            update portal_elements
            set state = 'full'
            where element_id = :element_id
        } {} {} {} c:/web/openacs-4/contrib/packages/portal/tcl/portal-procs.xql}
dbqd.contrib.packages.portal.tcl.portal-procs.portal::configure_dispatch.hide_update {dbqd.contrib.packages.portal.tcl.portal-procs.portal::configure_dispatch.hide_update {
            update portal_elements
            set state = 'hidden'
            where element_id = :element_id
        } {} {} {} c:/web/openacs-4/contrib/packages/portal/tcl/portal-procs.xql}
dbqd.contrib.packages.portal.tcl.portal-procs.portal::configure_dispatch.revert_max_page_id_select {dbqd.contrib.packages.portal.tcl.portal-procs.portal::configure_dispatch.revert_max_page_id_select {
            select max(page_id)
            from portal_pages
            where portal_id = :portal_id
        } {} {} {} c:/web/openacs-4/contrib/packages/portal/tcl/portal-procs.xql}
dbqd.contrib.packages.portal.tcl.portal-procs.portal::configure_dispatch.revert_min_page_id_select {dbqd.contrib.packages.portal.tcl.portal-procs.portal::configure_dispatch.revert_min_page_id_select {
            select min(page_id)
            from portal_pages
            where portal_id = :portal_id
        } {} {} {} c:/web/openacs-4/contrib/packages/portal/tcl/portal-procs.xql}
dbqd.contrib.packages.portal.tcl.portal-procs.portal::configure_dispatch.revert_move_elements_for_del {dbqd.contrib.packages.portal.tcl.portal-procs.portal::configure_dispatch.revert_move_elements_for_del {
            select element_id
            from portal_elements
            where page_id = :max_page_id
        } {} {} {} c:/web/openacs-4/contrib/packages/portal/tcl/portal-procs.xql}
dbqd.contrib.packages.portal.tcl.portal-procs.portal::configure_dispatch.revert_get_source_page_info {dbqd.contrib.packages.portal.tcl.portal-procs.portal::configure_dispatch.revert_get_source_page_info {
            select name,
                   layout_id,
                   sort_key
            from portal_pages
            where page_id = :source_page_id
        } {} {} {} c:/web/openacs-4/contrib/packages/portal/tcl/portal-procs.xql}
dbqd.contrib.packages.portal.tcl.portal-procs.portal::configure_dispatch.revert_get_target_page_id {dbqd.contrib.packages.portal.tcl.portal-procs.portal::configure_dispatch.revert_get_target_page_id {
            select page_id
            from portal_pages
            where portal_id = :portal_id
            and sort_key = :sort_key
        } {} {} {} c:/web/openacs-4/contrib/packages/portal/tcl/portal-procs.xql}
dbqd.contrib.packages.portal.tcl.portal-procs.portal::configure_dispatch.revert_page_update {dbqd.contrib.packages.portal.tcl.portal-procs.portal::configure_dispatch.revert_page_update {
            update portal_pages
            set name = :name,
                layout_id = :layout_id
            where page_id = :target_page_id
        } {} {} {} c:/web/openacs-4/contrib/packages/portal/tcl/portal-procs.xql}
dbqd.contrib.packages.portal.tcl.portal-procs.portal::configure_dispatch.revert_get_source_elements {dbqd.contrib.packages.portal.tcl.portal-procs.portal::configure_dispatch.revert_get_source_elements {
            select portal_elements.region,
                   portal_elements.sort_key,
                   portal_elements.state,
                   portal_datasources.datasource_id,
                   portal_datasources.name,
                   portal_elements.name as pretty_name
            from portal_elements,
                 portal_datasources
            where portal_elements.page_id = :source_page_id
            and portal_elements.datasource_id = portal_datasources.datasource_id
        } {} {} {} c:/web/openacs-4/contrib/packages/portal/tcl/portal-procs.xql}
dbqd.contrib.packages.portal.tcl.portal-procs.portal::configure_dispatch.revert_get_target_element {dbqd.contrib.packages.portal.tcl.portal-procs.portal::configure_dispatch.revert_get_target_element {
            select portal_pages.element_id
            from portal_elements,
                 portal_pages
            where portal_pages.portal_id = :portal_id
            and portal_elements.page_id = portal_pages.page_id
            and portal_elements.datasource_id = :datasource_id
            and portal_elements.name = :name
        } {} {} {} c:/web/openacs-4/contrib/packages/portal/tcl/portal-procs.xql}
dbqd.contrib.packages.portal.tcl.portal-procs.portal::configure_dispatch.revert_element_update {dbqd.contrib.packages.portal.tcl.portal-procs.portal::configure_dispatch.revert_element_update {
            update portal_elements
            set region = :region,
                sort_key = :sort_key,
                state = :state,
                page_id = :target_page_id
            where element_id = :target_element_id
        } {} {} {} c:/web/openacs-4/contrib/packages/portal/tcl/portal-procs.xql}
dbqd.contrib.packages.portal.tcl.portal-procs.portal::get_page_id.get_page_id_select {dbqd.contrib.packages.portal.tcl.portal-procs.portal::get_page_id.get_page_id_select {
            select page_id
            from portal_pages
            where portal_id = :portal_id
            and sort_key = :sort_key
        } {} {} {} c:/web/openacs-4/contrib/packages/portal/tcl/portal-procs.xql}
dbqd.contrib.packages.portal.tcl.portal-procs.portal::get_page_count.select_page_count {dbqd.contrib.packages.portal.tcl.portal-procs.portal::get_page_count.select_page_count {
            select count(*)
            from portal_pages
            where portal_id = :portal_id
        } {} {} {} c:/web/openacs-4/contrib/packages/portal/tcl/portal-procs.xql}
dbqd.contrib.packages.portal.tcl.portal-procs.portal::get_page_list.select_page_ids {dbqd.contrib.packages.portal.tcl.portal-procs.portal::get_page_list.select_page_ids {
            select page_id
            from portal_pages
            where portal_id = :portal_id
            order by sort_key
        } {} {} {} c:/web/openacs-4/contrib/packages/portal/tcl/portal-procs.xql}
dbqd.contrib.packages.portal.tcl.portal-procs.portal::navbar.list_page_nums_select {dbqd.contrib.packages.portal.tcl.portal-procs.portal::navbar.list_page_nums_select {
            select name,
                   sort_key as page_num
            from portal_pages
            where portal_id = :portal_id
            order by sort_key
        } {} {} {} c:/web/openacs-4/contrib/packages/portal/tcl/portal-procs.xql}
dbqd.contrib.packages.portal.tcl.portal-procs.portal::get_theme_id.get_theme_id_select {dbqd.contrib.packages.portal.tcl.portal-procs.portal::get_theme_id.get_theme_id_select {
            select theme_id
            from portals
            where portal_id = :portal_id
        } {} {} {} c:/web/openacs-4/contrib/packages/portal/tcl/portal-procs.xql}
dbqd.contrib.packages.portal.tcl.portal-procs.portal::get_page_id.get_page_id_from_name {dbqd.contrib.packages.portal.tcl.portal-procs.portal::get_page_id.get_page_id_from_name {
            select page_id
            from portal_pages
            where portal_id = :portal_id
            and name = :page_name
        } {} {} {} c:/web/openacs-4/contrib/packages/portal/tcl/portal-procs.xql}
dbqd.contrib.packages.portal.tcl.theme-procs.portal::theme::get.select_theme {dbqd.contrib.packages.portal.tcl.theme-procs.portal::theme::get.select_theme {
            select *
            from portal_themes
            where theme_id = :theme_id
        } {} {} {} c:/web/openacs-4/contrib/packages/portal/tcl/theme-procs.xql}
dbqd.contrib.packages.portal.tcl.theme-procs.portal::theme::get_list_not_cached.select_theme_list {dbqd.contrib.packages.portal.tcl.theme-procs.portal::theme::get_list_not_cached.select_theme_list {
            select theme_id,
                   name,
                   description
            from portal_themes
            order by name
        } {} {} {} c:/web/openacs-4/contrib/packages/portal/tcl/theme-procs.xql}
dbqd.contrib.packages.portal.www.place-element-other-page.other_pages_select {dbqd.contrib.packages.portal.www.place-element-other-page.other_pages_select {
select page_id, name
from portal_pages pp
where
pp.portal_id = :portal_id
and pp.page_id != :page_id
order by sort_key
} {} {} {} c:/web/openacs-4/contrib/packages/portal/www/place-element-other-page.xql}
dbqd.contrib.packages.portal.www.place-element.select_elements_by_region {dbqd.contrib.packages.portal.www.place-element.select_elements_by_region {
            select element_id,
                   name,
                   sort_key,
                   state,
                   hideable_p
            from portal_elements
            where page_id = :page_id
            and region = :region
            and state != 'hidden'
            order by sort_key
        } {} {} {} c:/web/openacs-4/contrib/packages/portal/www/place-element.xql}
dbqd.contrib.packages.portal.www.place-element.select_hidden_elements {dbqd.contrib.packages.portal.www.place-element.select_hidden_elements {
            select portal_elements.element_id,
                   portal_elements.name
            from portal_elements,
                 portal_pages
            where portal_pages.portal_id = :portal_id
            and portal_pages.page_id = portal_elements.page_id
            and portal_elements.state = 'hidden'
            order by portal_elements.name
        } {} {} {} c:/web/openacs-4/contrib/packages/portal/www/place-element.xql}
dbqd.contrib.packages.project-manager.tcl.install-procs.create_project {dbqd.contrib.packages.project-manager.tcl.install-procs.create_project {

        select pm_project__get_root_folder(:package_id,'t');
    
      } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/packages/project-manager/tcl/install-procs-postgresql.xql}
dbqd.contrib.packages.project-manager.tcl.install-procs.get_folder_id {dbqd.contrib.packages.project-manager.tcl.install-procs.get_folder_id {

        select pm_project__get_root_folder(:package_id,'f');
    
      } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/packages/project-manager/tcl/install-procs-postgresql.xql}
dbqd.contrib.packages.project-manager.tcl.install-procs.delete_root_folder {dbqd.contrib.packages.project-manager.tcl.install-procs.delete_root_folder {

        select content_item__delete(:folder_id);
    
      } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/packages/project-manager/tcl/install-procs-postgresql.xql}
dbqd.contrib.packages.project-manager.tcl.project-procs.project_manager::project::compute_status.select_project_children {dbqd.contrib.packages.project-manager.tcl.project-procs.project_manager::project::compute_status.select_project_children {
        select
        item_id, 
        content_type 
        from 
        cr_items 
        where parent_id = :project_item_id
    } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/packages/project-manager/tcl/project-procs-postgresql.xql}
dbqd.contrib.packages.project-manager.tcl.project-procs.project_manager::project::compute_status.tasks_group_query {dbqd.contrib.packages.project-manager.tcl.project-procs.project_manager::project::compute_status.tasks_group_query {
        select
        sum(t.actual_hours_worked) as actual_hours_completed,
        sum(t.estimated_hours_work) as estimated_hours_total,
        to_char(current_timestamp,'J') as today_j
        from
        pm_tasks_revisionsx t, cr_items i
        where
        t.item_id in ([join $task_list ", "]) and
        i.live_revision = t.revision_id
    } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/packages/project-manager/tcl/project-procs-postgresql.xql}
dbqd.contrib.packages.project-manager.tcl.project-procs.project_manager::project::compute_status.tasks_query {dbqd.contrib.packages.project-manager.tcl.project-procs.project_manager::project::compute_status.tasks_query {
        select
        t.actual_hours_worked as worked,
        t.estimated_hours_work as to_work,
        t.item_id as my_iid,
        to_char(end_date,'J') as task_deadline_j
        from
        pm_tasks_revisionsx t, cr_items i
        where
        t.item_id in ([join $task_list ", "]) and
        i.live_revision = t.revision_id
    } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/packages/project-manager/tcl/project-procs-postgresql.xql}
dbqd.contrib.packages.project-manager.tcl.project-procs.project_manager::project::compute_status.dependency_query {dbqd.contrib.packages.project-manager.tcl.project-procs.project_manager::project::compute_status.dependency_query {
        select
        d.dependency_id,
        d.task_id as task_item_id,
        d.parent_task_id,
        d.dependency_type
        from
        pm_task_dependency d
        where
        d.task_id in ([join $task_list ", "])
    } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/packages/project-manager/tcl/project-procs-postgresql.xql}
dbqd.contrib.packages.project-manager.tcl.project-procs.project_manager::project::compute_status.project_info {dbqd.contrib.packages.project-manager.tcl.project-procs.project_manager::project::compute_status.project_info {
        select
        to_char(planned_start_date,'J') as start_date_j,
        to_char(planned_end_date,'J') as end_date_j
        from         
        pm_projects 
        where
        project_id = (select live_revision from cr_items where item_id = :project_item_id)
    } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/packages/project-manager/tcl/project-procs-postgresql.xql}
dbqd.contrib.packages.project-manager.tcl.project-procs.project_manager::project::compute_status.update_project {dbqd.contrib.packages.project-manager.tcl.project-procs.project_manager::project::compute_status.update_project {
        update
        pm_projects
        set 
        actual_hours_completed = :actual_hours_completed,
        estimated_hours_total  = :estimated_hours_total,
        earliest_finish_date   = 'J[expr floor([set max_earliest_finish])]',
        latest_finish_date     = 'J[expr  ceil([set min_latest_start])]'
        where
        project_id = (select live_revision from cr_items where item_id = :project_item_id)
    } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/packages/project-manager/tcl/project-procs-postgresql.xql}
dbqd.contrib.packages.project-manager.tcl.project-procs.project_manager::project::compute_parent_status.get_parent_id {dbqd.contrib.packages.project-manager.tcl.project-procs.project_manager::project::compute_parent_status.get_parent_id {
        select
        parent_id
        from
        cr_items
        where
        item_id = :my_item_id
    } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/packages/project-manager/tcl/project-procs-postgresql.xql}
dbqd.contrib.packages.project-manager.tcl.project-procs.project_manager::project::compute_parent_status.get_root_folder {dbqd.contrib.packages.project-manager.tcl.project-procs.project_manager::project::compute_parent_status.get_root_folder {
        select pm_project__get_root_folder (:package_id, 'f')
    } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/packages/project-manager/tcl/project-procs-postgresql.xql}
dbqd.contrib.packages.project-manager.tcl.project-procs.project_manager::project::compute_status.update_task {dbqd.contrib.packages.project-manager.tcl.project-procs.project_manager::project::compute_status.update_task {
        update
        pm_tasks_revisions
        set 
        earliest_start  = 'J[expr ceil( [set earliest_start($task_item)])]',
        earliest_finish = 'J[expr ceil( [set earliest_finish($task_item)])]',
        latest_start    = 'J[expr floor([set latest_start($task_item)])]',
        latest_finish   = 'J[expr floor([set latest_finish($task_item)])]'
        where
        task_revision_id = (select live_revision from cr_items where item_id = :task_item)
    } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/packages/project-manager/tcl/project-procs-postgresql.xql}
dbqd.contrib.packages.project-manager.www.add-edit.new_project_item {dbqd.contrib.packages.project-manager.www.add-edit.new_project_item {
	select pm_project__new_project_item (
		:project_id,
		:project_name,
		:project_code,
                :parent_id,
		:goal,
		:description,
		to_timestamp(:planned_start_date,'YYYY MM DD HH24 MI SS'),
		to_timestamp(:planned_end_date,'YYYY MM DD HH24 MI SS'),
		null,
		null,
		:ongoing_p,
		now(),
		:user_id,
		:peeraddr,
		:package_id
	);
    } {} {} {} c:/web/openacs-4/contrib/packages/project-manager/www/add-edit-postgresql.xql}
dbqd.contrib.packages.project-manager.www.add-edit.new_project_revision {dbqd.contrib.packages.project-manager.www.add-edit.new_project_revision {
	select pm_project__new_project_revision (
		:project_item_id,
		:project_name,
		:project_code,
                :parent_id,
		:goal,
		:description,
		to_timestamp(:planned_start_date,'YYYY MM DD HH24 MI SS'),
		to_timestamp(:planned_end_date,'YYYY MM DD HH24 MI SS'),
		null,
		null,
		:ongoing_p,
		now(),
		:user_id,
		:peeraddr,
		:package_id
	);
    } {} {} {} c:/web/openacs-4/contrib/packages/project-manager/www/add-edit-postgresql.xql}
dbqd.contrib.packages.project-manager.www.add-edit.project_query {dbqd.contrib.packages.project-manager.www.add-edit.project_query {
        SELECT
        p.item_id as project_item_id,
        p.parent_id,
	p.project_id,
        p.title as project_name,
        p.project_code,
	p.goal,
	p.description,
	to_char(p.planned_start_date,'YYYY MM DD') as planned_start_date,
	to_char(p.planned_end_date,'YYYY MM DD') as planned_end_date,
	p.ongoing_p
        FROM
	pm_projectsx p
        WHERE 
        p.item_id    = :project_item_id and
        p.project_id = :project_id 
    } {} {} {} c:/web/openacs-4/contrib/packages/project-manager/www/add-edit-postgresql.xql}
dbqd.contrib.packages.project-manager.www.add-edit.get_item_id {dbqd.contrib.packages.project-manager.www.add-edit.get_item_id {
	SELECT
        p.item_id as project_item_id
	FROM
	pm_projectsx p
	WHERE
	p.project_id = :project_id
    } {} {} {} c:/web/openacs-4/contrib/packages/project-manager/www/add-edit-postgresql.xql}
dbqd.contrib.packages.project-manager.www.admin.default-project-roles.default_project_roles_query {dbqd.contrib.packages.project-manager.www.admin.default-project-roles.default_project_roles_query {
        SELECT
        role_id,
        party_id
        FROM 
        pm_project_default_roles
    } {} {} {postgresql 7.2} c:/web/openacs-4/contrib/packages/project-manager/www/admin/default-project-roles-postgresql.xql}
dbqd.contrib.packages.project-manager.www.admin.index.project_folders {dbqd.contrib.packages.project-manager.www.admin.index.project_folders {
        SELECT
        p.item_id,
        p.project_id,
        p.parent_id as folder_id,
        p.object_type as content_type,
        p.title as project_name,
        p.project_code,
        to_char(p.planned_start_date, 'Mon DD ''YY') as planned_start_date,
        to_char(p.planned_end_date, 'Mon DD ''YY') as planned_end_date,
        p.ongoing_p,
        p.actual_hours_completed,
        p.estimated_hours_total,
        to_char(p.estimated_finish_date, 'Mon DD ''YY') as estimated_finish_date,
        to_char(p.earliest_finish_date, 'Mon DD ''YY') as earliest_finish_date,
        to_char(p.latest_finish_date, 'Mon DD ''YY') as latest_finish_date
        FROM pm_projectsx p, cr_items i
        WHERE p.project_id = i.live_revision and
        p.parent_id = :root_folder
        ORDER BY p.title
    } {} {} {postgresql 7.2} c:/web/openacs-4/contrib/packages/project-manager/www/admin/index-postgresql.xql}
dbqd.contrib.packages.project-manager.www.admin.roles.roles_query {dbqd.contrib.packages.project-manager.www.admin.roles.roles_query {
        SELECT
        role_id,
        one_line,
        description,
        is_observer_p,
        sort_order
        FROM 
        pm_roles
    } {} {} {postgresql 7.2} c:/web/openacs-4/contrib/packages/project-manager/www/admin/roles-postgresql.xql}
dbqd.contrib.packages.project-manager.www.admin.workgroups.wg_query {dbqd.contrib.packages.project-manager.www.admin.workgroups.wg_query {
        SELECT
        workgroup_id,
        one_line,
        description,
        sort_order
        FROM 
        pm_workgroup
    } {} {} {postgresql 7.2} c:/web/openacs-4/contrib/packages/project-manager/www/admin/workgroups-postgresql.xql}
dbqd.contrib.packages.project-manager.www.dependency-add-edit.dependency_query {dbqd.contrib.packages.project-manager.www.dependency-add-edit.dependency_query {
      select
        t.task_revision_id,
        t.title as task_title,
        t.item_id,
        t.description,
        t.name,
        t.parent_id,
	to_char(t.end_date,'YYYY MM DD') as end_date,
        t.percent_complete
	FROM
	pm_tasks_revisionsx t, cr_items i
        WHERE
        t.item_id in ([join $task_id ", "]) and
        t.revision_id = i.live_revision
    } {} {} {} c:/web/openacs-4/contrib/packages/project-manager/www/dependency-add-edit-postgresql.xql}
dbqd.contrib.packages.project-manager.www.dependency-add-edit.get_task_info {dbqd.contrib.packages.project-manager.www.dependency-add-edit.get_task_info {
      select
        t.revision_id,
        t.title as task_title,
        t.item_id,
        t.description,
        t.name,
        t.parent_id,
	to_char(t.end_date,'Mon DD ''YY') as end_date,
        t.percent_complete,
        d.parent_task_id
	FROM
	pm_tasks_revisionsx t, cr_items i LEFT JOIN pm_task_dependency d ON i.item_id = d.task_id
        WHERE
        t.revision_id in ([join $task_revisions ", "]) and
        i.item_id = t.item_id
    } {} {} {} c:/web/openacs-4/contrib/packages/project-manager/www/dependency-add-edit-postgresql.xql}
dbqd.contrib.packages.project-manager.www.dependency-add-edit.get_task_id {dbqd.contrib.packages.project-manager.www.dependency-add-edit.get_task_id {
      select
        item_id
	FROM
	pm_tasks_revisionsx
        WHERE
        revision_id = :tr
    } {} {} {} c:/web/openacs-4/contrib/packages/project-manager/www/dependency-add-edit-postgresql.xql}
dbqd.contrib.packages.project-manager.www.dependency-add-edit.get_dependency_types {dbqd.contrib.packages.project-manager.www.dependency-add-edit.get_dependency_types {
      select
        short_name,
        description
	FROM
	pm_task_dependency_types
        ORDER BY
        short_name
    } {} {} {} c:/web/openacs-4/contrib/packages/project-manager/www/dependency-add-edit-postgresql.xql}
dbqd.contrib.packages.project-manager.www.dependency-add-edit.get_dependency_tasks {dbqd.contrib.packages.project-manager.www.dependency-add-edit.get_dependency_tasks {
      select
        r.item_id, 
        r.title as task_title        
	FROM
        pm_tasks_revisionsx r, 
        cr_items i 
        WHERE
        r.parent_id = :project_item_id and
        r.revision_id = i.live_revision
        ORDER BY
        upper(r.title)
    } {} {} {} c:/web/openacs-4/contrib/packages/project-manager/www/dependency-add-edit-postgresql.xql}
dbqd.contrib.packages.project-manager.www.dependency-add-edit.new_dependency {dbqd.contrib.packages.project-manager.www.dependency-add-edit.new_dependency {
        INSERT INTO pm_task_dependency
        (dependency_id, task_id, parent_task_id, dependency_type) 
        VALUES
        (:dependency_id, :tsk_id, :parent_tsk_id, :type_id)
    } {} {} {} c:/web/openacs-4/contrib/packages/project-manager/www/dependency-add-edit-postgresql.xql}
dbqd.contrib.packages.project-manager.www.dependency-add-edit.get_parent_project {dbqd.contrib.packages.project-manager.www.dependency-add-edit.get_parent_project {
      select
        parent_id
	FROM
	pm_tasks_revisionsx 
        WHERE
        revision_id = '[lindex $task_revisions 0]'
    } {} {} {} c:/web/openacs-4/contrib/packages/project-manager/www/dependency-add-edit-postgresql.xql}
dbqd.contrib.packages.project-manager.www.index.project_folders {dbqd.contrib.packages.project-manager.www.index.project_folders {
        SELECT
        p.item_id,
        p.project_id,
        p.parent_id as folder_id,
        p.object_type as content_type,
        p.title as project_name,
        p.project_code,
        to_char(p.planned_start_date, 'MM/DD/YY') as planned_start_date,
        to_char(p.planned_end_date, 'MM/DD/YY') as planned_end_date,
        p.ongoing_p,
        p.actual_hours_completed,
        p.estimated_hours_total,
        to_char(p.estimated_finish_date, 'MM/DD/YY') as estimated_finish_date,
        to_char(p.earliest_finish_date, 'MM/DD/YY') as earliest_finish_date,
        to_char(p.latest_finish_date, 'MM/DD/YY') as latest_finish_date
        FROM pm_projectsx p, cr_items i
        WHERE p.project_id = i.live_revision and
        p.parent_id = :root_folder
        ORDER BY p.title
    } {} {} {postgresql 7.2} c:/web/openacs-4/contrib/packages/project-manager/www/index-postgresql.xql}
dbqd.contrib.packages.project-manager.www.one.get_item_id {dbqd.contrib.packages.project-manager.www.one.get_item_id {
	SELECT
        p.item_id as project_item_id
	FROM
	pm_projectsx p
	WHERE
	p.project_id = :project_id
    } {} {} {} c:/web/openacs-4/contrib/packages/project-manager/www/one-postgresql.xql}
dbqd.contrib.packages.project-manager.www.one.get_project_id {dbqd.contrib.packages.project-manager.www.one.get_project_id {
	SELECT
        p.project_id
	FROM
	pm_projectsx p, cr_items i
	WHERE
	p.item_id = :project_item_id and 
        p.revision_id = i.live_revision
    } {} {} {} c:/web/openacs-4/contrib/packages/project-manager/www/one-postgresql.xql}
dbqd.contrib.packages.project-manager.www.one.project_query {dbqd.contrib.packages.project-manager.www.one.project_query {
	SELECT
        p.item_id,
	p.project_id,
	p.title as project_name,
	p.project_code,
	p.goal,
	p.description,
	to_char(p.planned_start_date,'Mon DD') as planned_start_date,
	to_char(p.planned_end_date,'Mon DD') as planned_end_date,
	p.ongoing_p,
        i.live_revision,
        to_char(p.estimated_finish_date,'Mon DD') as estimated_finish_date,
        to_char(p.earliest_finish_date,'Mon DD') as earliest_finish_date,
        to_char(p.latest_finish_date,'Mon DD') as latest_finish_date,
        p.actual_hours_completed,
        p.estimated_hours_total,
        p.parent_id
	FROM
	pm_projectsx p, cr_items i
	WHERE
	p.item_id = :project_item_id and
        p.project_id = :project_id and
        p.item_id = i.item_id
    } {} {} {} c:/web/openacs-4/contrib/packages/project-manager/www/one-postgresql.xql}
dbqd.contrib.packages.project-manager.www.one.project_versions {dbqd.contrib.packages.project-manager.www.one.project_versions {
	SELECT
        p.item_id,
	p.project_id,
	p.title as project_name,
	p.project_code,
	p.goal,
	p.description,
	to_char(p.planned_start_date,'Mon DD') as planned_start_date,
	to_char(p.planned_end_date,'Mon DD') as planned_end_date,
	p.ongoing_p,
        i.live_revision,
        to_char(p.estimated_finish_date,'Mon DD') as estimated_finish_date,
        to_char(p.earliest_finish_date,'Mon DD') as earliest_finish_date,
        to_char(p.latest_finish_date,'Mon DD') as latest_finish_date,
        p.estimated_hours_total
	FROM
	pm_projectsx p, cr_items i
	WHERE
	p.item_id = :project_item_id and 
        p.item_id = i.item_id
        ORDER BY
        p.project_id desc
    } {} {} {} c:/web/openacs-4/contrib/packages/project-manager/www/one-postgresql.xql}
dbqd.contrib.packages.project-manager.www.one.project_tasks_query {dbqd.contrib.packages.project-manager.www.one.project_tasks_query {
	SELECT
        t.item_id as task_id,
        t.title,
	to_char(t.end_date,'Mon DD') as end_date,
	to_char(t.earliest_start,'Mon DD') as earliest_start,
	to_char(t.earliest_finish,'Mon DD') as earliest_finish,
	to_char(t.latest_start,'Mon DD') as latest_start,
	to_char(t.latest_finish,'Mon DD') as latest_finish,
        to_char(t.latest_start-t.earliest_start,'FMDD') || ' days' as slack_time,
        u.first_names,
        u.last_name,
        t.percent_complete,
        d.parent_task_id,
        d.dependency_type,
        t.estimated_hours_work,
        t.estimated_hours_work_min,
        t.estimated_hours_work_max,
        t.actual_hours_worked
	FROM
	pm_tasks_revisionsx t LEFT JOIN pm_task_assignment a ON t.item_id = a.task_id, cr_items i LEFT JOIN pm_task_dependency d ON i.item_id = d.task_id, cc_users u
	WHERE
        t.parent_id = :project_item_id and
        t.revision_id = i.live_revision and
        a.party_id = u.party_id
        [template::list::orderby_clause -name tasks -orderby]
    } {} {} {} c:/web/openacs-4/contrib/packages/project-manager/www/one-postgresql.xql}
dbqd.contrib.packages.project-manager.www.one.get_root_folder {dbqd.contrib.packages.project-manager.www.one.get_root_folder {
        select pm_project__get_root_folder (:package_id, 'f')
    } {} {} {} c:/web/openacs-4/contrib/packages/project-manager/www/one-postgresql.xql}
dbqd.contrib.packages.project-manager.www.one.project_subproject_query {dbqd.contrib.packages.project-manager.www.one.project_subproject_query {
        SELECT
	p.item_id,
        p.project_id,
        p.parent_id as folder_id,
	p.object_type as content_type,
	p.title as project_name,
	p.project_code,
	to_char(p.planned_start_date, 'Mon DD') as planned_start_date,
	to_char(p.planned_end_date, 'Mon DD') as planned_end_date,
	p.ongoing_p,
        p.actual_hours_completed,
        p.estimated_hours_total
        FROM pm_projectsx p, cr_items i
        WHERE p.project_id = i.live_revision and
        p.parent_id = :project_item_id
        ORDER BY p.title
    } {} {} {} c:/web/openacs-4/contrib/packages/project-manager/www/one-postgresql.xql}
dbqd.contrib.packages.project-manager.www.one.project_people_query {dbqd.contrib.packages.project-manager.www.one.project_people_query {
        select
        project_id,
        role_id,
        party_id
        from pm_project_assignment
        where project_id = :project_item_id
    } {} {} {} c:/web/openacs-4/contrib/packages/project-manager/www/one-postgresql.xql}
dbqd.contrib.packages.project-manager.www.process-add-edit.get_today {dbqd.contrib.packages.project-manager.www.process-add-edit.get_today {
        select current_timestamp from dual;
    } {} {} {} c:/web/openacs-4/contrib/packages/project-manager/www/process-add-edit-postgresql.xql}
dbqd.contrib.packages.project-manager.www.process-add-edit.new_process {dbqd.contrib.packages.project-manager.www.process-add-edit.new_process {
        insert into pm_process
        (process_id,
         one_line,
         description,
         party_id,
         creation_date)
        values
        (:process_id,
         :one_line,
         :description,
         :party_id,
         :creation_date)
    } {} {} {} c:/web/openacs-4/contrib/packages/project-manager/www/process-add-edit-postgresql.xql}
dbqd.contrib.packages.project-manager.www.process-add-edit.edit_process {dbqd.contrib.packages.project-manager.www.process-add-edit.edit_process {
        update pm_process
        set one_line = :one_line,
        description  = :description,
        party_id     = :party_id
    } {} {} {} c:/web/openacs-4/contrib/packages/project-manager/www/process-add-edit-postgresql.xql}
dbqd.contrib.packages.project-manager.www.process-add-edit.process_query {dbqd.contrib.packages.project-manager.www.process-add-edit.process_query {
        select
        process_id,
        one_line,
        description,
        party_id,
        creation_date
        from
        pm_process
        where process_id = :process_id
    } {} {} {} c:/web/openacs-4/contrib/packages/project-manager/www/process-add-edit-postgresql.xql}
dbqd.contrib.packages.project-manager.www.process-dependency-add-edit.dependency_query {dbqd.contrib.packages.project-manager.www.process-dependency-add-edit.dependency_query {
      select
        t.process_task_id as task_id,
        t.one_line as task_title,
        t.description,
        d.parent_task_id
	FROM
	pm_process_task t LEFT JOIN pm_process_task_dependency d ON t.process_task_id = d.process_task_id
        WHERE
        t.process_task_id in ([join $use_dependency ", "])
    } {} {} {} c:/web/openacs-4/contrib/packages/project-manager/www/process-dependency-add-edit-postgresql.xql}
dbqd.contrib.packages.project-manager.www.process-dependency-add-edit.get_dependency_types {dbqd.contrib.packages.project-manager.www.process-dependency-add-edit.get_dependency_types {
      select
        short_name,
        description
	FROM
	pm_task_dependency_types
        ORDER BY
        short_name
    } {} {} {} c:/web/openacs-4/contrib/packages/project-manager/www/process-dependency-add-edit-postgresql.xql}
dbqd.contrib.packages.project-manager.www.process-dependency-add-edit.get_dependency_tasks {dbqd.contrib.packages.project-manager.www.process-dependency-add-edit.get_dependency_tasks {
      select
        process_task_id as task_id, 
        one_line as task_title        
	FROM
        pm_process_task
        WHERE
        process_id = :process_id
        ORDER BY
        upper(one_line)
    } {} {} {} c:/web/openacs-4/contrib/packages/project-manager/www/process-dependency-add-edit-postgresql.xql}
dbqd.contrib.packages.project-manager.www.process-dependency-add-edit.delete_dependency {dbqd.contrib.packages.project-manager.www.process-dependency-add-edit.delete_dependency {
        DELETE FROM pm_process_task_dependency
        WHERE process_task_id = :tsk_id
    } {} {} {} c:/web/openacs-4/contrib/packages/project-manager/www/process-dependency-add-edit-postgresql.xql}
dbqd.contrib.packages.project-manager.www.process-dependency-add-edit.new_dependency {dbqd.contrib.packages.project-manager.www.process-dependency-add-edit.new_dependency {
        INSERT INTO pm_process_task_dependency
        (dependency_id, process_task_id, parent_task_id, dependency_type) 
        VALUES
        (:dependency_id, :tsk_id, :parent_tsk_id, :type_id)
    } {} {} {} c:/web/openacs-4/contrib/packages/project-manager/www/process-dependency-add-edit-postgresql.xql}
dbqd.contrib.packages.project-manager.www.process-one.task_query {dbqd.contrib.packages.project-manager.www.process-one.task_query {
	SELECT
        t.process_task_id,
        t.one_line,
        t.description,
        t.end_date,
        t.estimated_hours_work,
        t.estimated_hours_work_min,
        t.estimated_hours_work_max,
        d.dependency_type
	FROM
        pm_process_task t LEFT JOIN pm_process_task_dependency d ON t.process_task_id = d.process_task_id 
	WHERE
	t.process_id = :process_id
    } {} {} {} c:/web/openacs-4/contrib/packages/project-manager/www/process-one-postgresql.xql}
dbqd.contrib.packages.project-manager.www.process-task-add-edit-2.new_task {dbqd.contrib.packages.project-manager.www.process-task-add-edit-2.new_task {
        insert into 
        pm_process_task 
        (process_task_id,
         process_id,
         one_line,
         description,
         estimated_hours_work,
         estimated_hours_work_min,
         estimated_hours_work_max)
        values
        (:task_id,
         :process_id,
         :one_line,
         :desc,
         :work,
         :work_min,
         :work_max)
    } {} {} {} c:/web/openacs-4/contrib/packages/project-manager/www/process-task-add-edit-2-postgresql.xql}
dbqd.contrib.packages.project-manager.www.process-task-add-edit-2.edit_task {dbqd.contrib.packages.project-manager.www.process-task-add-edit-2.edit_task {
        update pm_process_task set
        one_line                 = :one_line,
        description              = :desc,
        estimated_hours_work     = :work,
        estimated_hours_work_min = :work_min,
        estimated_hours_work_max = :work_max
        where 
        process_task_id = :task_id
    } {} {} {} c:/web/openacs-4/contrib/packages/project-manager/www/process-task-add-edit-2-postgresql.xql}
dbqd.contrib.packages.project-manager.www.process-task-add-edit-2.editing_process_tasks_p {dbqd.contrib.packages.project-manager.www.process-task-add-edit-2.editing_process_tasks_p {
        select count(*) from pm_process_task where
        process_task_id in ([join $process_task_id ","])
    } {} {} {} c:/web/openacs-4/contrib/packages/project-manager/www/process-task-add-edit-2-postgresql.xql}
dbqd.contrib.packages.project-manager.www.process-task-add-edit.get_process_tasks {dbqd.contrib.packages.project-manager.www.process-task-add-edit.get_process_tasks {
	SELECT
        t.process_task_id as pti,
        t.one_line,
        t.description,
        t.estimated_hours_work,
        t.estimated_hours_work_min,
        t.estimated_hours_work_max,
        d.dependency_type
	FROM
        pm_process_task t LEFT JOIN pm_process_task_dependency d ON t.process_task_id = d.process_task_id
        WHERE
        t.process_task_id in ([join $process_task_id ", "])
        ORDER BY
        t.process_task_id
    } {} {} {} c:/web/openacs-4/contrib/packages/project-manager/www/process-task-add-edit-postgresql.xql}
dbqd.contrib.packages.project-manager.www.process-task-assign-add-edit.get_tasks {dbqd.contrib.packages.project-manager.www.process-task-assign-add-edit.get_tasks {
      select
        one_line,
        description,
        process_task_id
	FROM
	pm_process_task 
        WHERE
        process_task_id in ([join $process_task_id ","])
        ORDER BY
        process_task_id
    } {} {} {} c:/web/openacs-4/contrib/packages/project-manager/www/process-task-assign-add-edit-postgresql.xql}
dbqd.contrib.packages.project-manager.www.process-task-assign-add-edit.get_users {dbqd.contrib.packages.project-manager.www.process-task-assign-add-edit.get_users {
      select
        first_names || ' ' || last_name || ' (' || email || ')' as who,
        person_id
	FROM
        cc_users
        ORDER BY
        first_names, last_name
    } {} {} {} c:/web/openacs-4/contrib/packages/project-manager/www/process-task-assign-add-edit-postgresql.xql}
dbqd.contrib.packages.project-manager.www.process-task-assign-add-edit.get_roles {dbqd.contrib.packages.project-manager.www.process-task-assign-add-edit.get_roles {
      select
        one_line,
        role_id
	FROM
        pm_roles
        ORDER BY
        sort_order
    } {} {} {} c:/web/openacs-4/contrib/packages/project-manager/www/process-task-assign-add-edit-postgresql.xql}
dbqd.contrib.packages.project-manager.www.process-task-assign-add-edit.delete_assignments {dbqd.contrib.packages.project-manager.www.process-task-assign-add-edit.delete_assignments {
      delete from pm_process_task_assignment
      where process_task_id in ([join $process_task_id ","])
    } {} {} {} c:/web/openacs-4/contrib/packages/project-manager/www/process-task-assign-add-edit-postgresql.xql}
dbqd.contrib.packages.project-manager.www.process-task-assign-add-edit.add_assignment {dbqd.contrib.packages.project-manager.www.process-task-assign-add-edit.add_assignment {
      insert into pm_process_task_assignment
      (process_task_id,
       role_id,
       party_id) 
      values
      (:t_id,
       :r_id,
       :p_id)
    } {} {} {} c:/web/openacs-4/contrib/packages/project-manager/www/process-task-assign-add-edit-postgresql.xql}
dbqd.contrib.packages.project-manager.www.process-task-assign-add-edit.get_current_users {dbqd.contrib.packages.project-manager.www.process-task-assign-add-edit.get_current_users {
      select
        party_id
	FROM
        pm_process_task_assignment
        WHERE
        process_task_id = :tiid
    } {} {} {} c:/web/openacs-4/contrib/packages/project-manager/www/process-task-assign-add-edit-postgresql.xql}
dbqd.contrib.packages.project-manager.www.process-task-assign-add-edit.get_current_roles {dbqd.contrib.packages.project-manager.www.process-task-assign-add-edit.get_current_roles {
      select
        role_id
	FROM
        pm_process_task_assignment a
        WHERE
        process_task_id = :tiid
    } {} {} {} c:/web/openacs-4/contrib/packages/project-manager/www/process-task-assign-add-edit-postgresql.xql}
dbqd.contrib.packages.project-manager.www.process-task-delete-2.delete_process_tasks {dbqd.contrib.packages.project-manager.www.process-task-delete-2.delete_process_tasks {
        DELETE FROM
        pm_process_task
        WHERE
        process_task_id in ([join $process_task_id ", "])
    } {} {} {} c:/web/openacs-4/contrib/packages/project-manager/www/process-task-delete-2-postgresql.xql}
dbqd.contrib.packages.project-manager.www.process-use.select_a_process {dbqd.contrib.packages.project-manager.www.process-use.select_a_process {
        SELECT
        process_id,
        one_line
        FROM pm_process
        ORDER BY one_line
    } {} {} {} c:/web/openacs-4/contrib/packages/project-manager/www/process-use-postgresql.xql}
dbqd.contrib.packages.project-manager.www.processes.process_query {dbqd.contrib.packages.project-manager.www.processes.process_query {
        SELECT
        p.process_id,
        p.one_line,
        p.description,
        p.party_id,
        to_char(p.creation_date,'Mon DD ''YY') as creation_date
        FROM 
        pm_process p
    } {} {} {postgresql 7.2} c:/web/openacs-4/contrib/packages/project-manager/www/processes-postgresql.xql}
dbqd.contrib.packages.project-manager.www.task-add-edit.get_process_tasks {dbqd.contrib.packages.project-manager.www.task-add-edit.get_process_tasks {
	SELECT
        t.process_task_id as process_tid,
        t.one_line,
        t.description,
        t.estimated_hours_work,
        t.estimated_hours_work_min,
        t.estimated_hours_work_max,
        d.dependency_id
	FROM
        pm_process_task t LEFT JOIN pm_process_task_dependency d ON t.process_task_id = d.process_task_id
	WHERE
	t.process_id = :process_id
        ORDER BY
        t.process_task_id
    } {} {} {} c:/web/openacs-4/contrib/packages/project-manager/www/task-add-edit-postgresql.xql}
dbqd.contrib.packages.project-manager.www.task-add-edit.new_task_item {dbqd.contrib.packages.project-manager.www.task-add-edit.new_task_item {
	select pm_task__new_task_item (
                null,
		:project_item_id,
                :p_task_title,
                :p_description,
                [project_manager::project::util::datenvl -value [set end_date_$i] -value_if_null "null," -value_if_not_null "to_timestamp('[set end_date_$i]','YYYY MM DD HH24 MI SS'),"]
                '0',
                :p_work,
                :p_work_min,
                :p_work_max,
		current_timestamp,
		:user_id,
		:peeraddr,
		:package_id
	);
    } {} {} {} c:/web/openacs-4/contrib/packages/project-manager/www/task-add-edit-postgresql.xql}
dbqd.contrib.packages.project-manager.www.task-add-edit.new_task_revision {dbqd.contrib.packages.project-manager.www.task-add-edit.new_task_revision {
	select pm_task__new_task_revision (
                :p_task_item_id,
		:project_item_id,
                :p_task_title,
                :p_description,
                [project_manager::project::util::datenvl -value [set end_date_$i] -value_if_null "null," -value_if_not_null "to_timestamp('[set end_date_$i]','YYYY MM DD HH24 MI SS'),"]
                :p_percent,
                :p_work,
                :p_work_min,
                :p_work_max,
                :p_hours,
		current_timestamp,
		:user_id,
		:peeraddr,
		:package_id
	);
    } {} {} {} c:/web/openacs-4/contrib/packages/project-manager/www/task-add-edit-postgresql.xql}
dbqd.contrib.packages.project-manager.www.task-add-edit.task_query {dbqd.contrib.packages.project-manager.www.task-add-edit.task_query {
      select
        current_timestamp
	FROM
	dual
    } {} {} {} c:/web/openacs-4/contrib/packages/project-manager/www/task-add-edit-postgresql.xql}
dbqd.contrib.packages.project-manager.www.task-add-edit.get_old_tasks {dbqd.contrib.packages.project-manager.www.task-add-edit.get_old_tasks {
        select
        t.task_revision_id,
        t.title as task_title,
        t.item_id,
        t.description,
        t.name,
	to_char(t.end_date,'YYYY MM DD') as end_date,
        t.percent_complete,
        t.estimated_hours_work,
        t.estimated_hours_work_min,
        t.estimated_hours_work_max,
        d.parent_task_id,
        t.actual_hours_worked
  	FROM
	pm_tasks_revisionsx t, 
        cr_items i LEFT JOIN pm_task_dependency d ON i.item_id = d.task_id
        WHERE
        t.item_id in ([join $task_id ","]) and
        t.revision_id = i.live_revision
    } {} {} {} c:/web/openacs-4/contrib/packages/project-manager/www/task-add-edit-postgresql.xql}
dbqd.contrib.packages.project-manager.www.task-add-edit.get_project_id {dbqd.contrib.packages.project-manager.www.task-add-edit.get_project_id {
        SELECT
        p.project_id
        FROM
        pm_projectsx p, cr_items i
        WHERE
        p.item_id = :project_item_id and 
        p.revision_id = i.live_revision
    } {} {} {} c:/web/openacs-4/contrib/packages/project-manager/www/task-add-edit-postgresql.xql}
dbqd.contrib.packages.project-manager.www.task-assign-add-edit.get_task_item_ids {dbqd.contrib.packages.project-manager.www.task-assign-add-edit.get_task_item_ids {
      select
        item_id
	FROM
	pm_tasks_revisionsx t
        WHERE
        revision_id in ([join $revisions ","])
    } {} {} {} c:/web/openacs-4/contrib/packages/project-manager/www/task-assign-add-edit-postgresql.xql}
dbqd.contrib.packages.project-manager.www.task-assign-add-edit.get_task_info {dbqd.contrib.packages.project-manager.www.task-assign-add-edit.get_task_info {
      select
        title as one_line,
        description,
        item_id
	FROM
	pm_tasks_revisionsx t
        WHERE
        revision_id in ([join $revisions ","])
        ORDER BY
        item_id
    } {} {} {} c:/web/openacs-4/contrib/packages/project-manager/www/task-assign-add-edit-postgresql.xql}
dbqd.contrib.packages.project-manager.www.task-assign-add-edit.get_users {dbqd.contrib.packages.project-manager.www.task-assign-add-edit.get_users {
      select
        first_names || ' ' || last_name || ' (' || email || ')' as who,
        person_id
	FROM
        cc_users
        ORDER BY
        first_names, last_name
    } {} {} {} c:/web/openacs-4/contrib/packages/project-manager/www/task-assign-add-edit-postgresql.xql}
dbqd.contrib.packages.project-manager.www.task-assign-add-edit.get_roles {dbqd.contrib.packages.project-manager.www.task-assign-add-edit.get_roles {
      select
        one_line,
        role_id
	FROM
        pm_roles
        ORDER BY
        sort_order
    } {} {} {} c:/web/openacs-4/contrib/packages/project-manager/www/task-assign-add-edit-postgresql.xql}
dbqd.contrib.packages.project-manager.www.task-assign-add-edit.delete_assignments {dbqd.contrib.packages.project-manager.www.task-assign-add-edit.delete_assignments {
      delete from pm_task_assignment
      where task_id in ([join $task_id ","])
    } {} {} {} c:/web/openacs-4/contrib/packages/project-manager/www/task-assign-add-edit-postgresql.xql}
dbqd.contrib.packages.project-manager.www.task-assign-add-edit.add_assignment {dbqd.contrib.packages.project-manager.www.task-assign-add-edit.add_assignment {
      insert into pm_task_assignment
      (task_id,
       role_id,
       party_id) 
      values
      (:t_id,
       :r_id,
       :p_id)
    } {} {} {} c:/web/openacs-4/contrib/packages/project-manager/www/task-assign-add-edit-postgresql.xql}
dbqd.contrib.packages.project-manager.www.task-assign-add-edit.get_current_users {dbqd.contrib.packages.project-manager.www.task-assign-add-edit.get_current_users {
      select
        party_id
	FROM
        pm_task_assignment
        WHERE
        task_id = :tiid
    } {} {} {} c:/web/openacs-4/contrib/packages/project-manager/www/task-assign-add-edit-postgresql.xql}
dbqd.contrib.packages.project-manager.www.task-assign-add-edit.get_current_roles {dbqd.contrib.packages.project-manager.www.task-assign-add-edit.get_current_roles {
      select
        role_id
	FROM
        pm_task_assignment a
        WHERE
        task_id = :tiid
    } {} {} {} c:/web/openacs-4/contrib/packages/project-manager/www/task-assign-add-edit-postgresql.xql}
dbqd.contrib.packages.project-manager.www.task-assign-add-edit.get_process_roles_assignments {dbqd.contrib.packages.project-manager.www.task-assign-add-edit.get_process_roles_assignments {
      select
        role_id as rid,
        party_id as pid
	FROM
        pm_process_task_assignment a
        WHERE
        process_task_id = :ptid
    } {} {} {} c:/web/openacs-4/contrib/packages/project-manager/www/task-assign-add-edit-postgresql.xql}
dbqd.contrib.packages.project-manager.www.task-one.get_task_id {dbqd.contrib.packages.project-manager.www.task-one.get_task_id {
	SELECT
        t.item_id
	FROM
	pm_tasks_revisionsx t
	WHERE
        t.revision_id = :task_revision_id
    } {} {} {} c:/web/openacs-4/contrib/packages/project-manager/www/task-one-postgresql.xql}
dbqd.contrib.packages.project-manager.www.task-one.get_revision_id {dbqd.contrib.packages.project-manager.www.task-one.get_revision_id {
	SELECT
        t.revision_id as task_revision_id
	FROM
	pm_tasks_revisionsx t, cr_items i
	WHERE
        t.item_id = :task_id and
        i.live_revision = t.revision_id
    } {} {} {} c:/web/openacs-4/contrib/packages/project-manager/www/task-one-postgresql.xql}
dbqd.contrib.packages.project-manager.www.task-one.get_project_ids {dbqd.contrib.packages.project-manager.www.task-one.get_project_ids {
	SELECT
        t.parent_id as project_item_id
	FROM
	pm_tasks_revisionsx t, cr_items i
	WHERE
        i.item_id = t.item_id and
        t.revision_id = :task_revision_id
    } {} {} {} c:/web/openacs-4/contrib/packages/project-manager/www/task-one-postgresql.xql}
dbqd.contrib.packages.project-manager.www.task-one.task_query {dbqd.contrib.packages.project-manager.www.task-one.task_query {
	SELECT
        t.item_id,
        t.title as task_title,
        t.description,
	to_char(t.end_date,'Mon DD ''YY') as end_date,
	to_char(t.earliest_start,'Mon DD ''YY') as earliest_start,
	to_char(t.earliest_finish,'Mon DD ''YY') as earliest_finish,
	to_char(t.latest_start,'Mon DD ''YY') as latest_start,
	to_char(t.latest_finish,'Mon DD ''YY') as latest_finish,
        to_char(t.latest_start-t.earliest_start,'DD') || ' days' as slack_time,
        t.estimated_hours_work,
        t.estimated_hours_work_min,
        t.estimated_hours_work_max,
        t.percent_complete,
        i.live_revision
	FROM
	pm_tasks_revisionsx t, cr_items i
	WHERE
        t.item_id = :task_id and
        t.revision_id = :task_revision_id and
        t.item_id = i.item_id
    } {} {} {} c:/web/openacs-4/contrib/packages/project-manager/www/task-one-postgresql.xql}
dbqd.contrib.packages.project-manager.www.task-one.task_revisions_query {dbqd.contrib.packages.project-manager.www.task-one.task_revisions_query {
	SELECT
        t.item_id,
        t.revision_id,
        i.live_revision,
        t.title as task_title,
        t.description,
	to_char(t.end_date,'MM/DD/YYYY') as end_date,
        t.percent_complete,
        t.estimated_hours_work_min,
        t.estimated_hours_work_max,
        t.actual_hours_worked        
	FROM
	pm_tasks_revisionsx t, cr_items i
	WHERE
        t.item_id = :task_id and
        t.item_id = i.item_id
        [template::list::orderby_clause -name revisions -orderby]
    } {} {} {} c:/web/openacs-4/contrib/packages/project-manager/www/task-one-postgresql.xql}
dbqd.contrib.packages.project-manager.www.task-one.dependency_query {dbqd.contrib.packages.project-manager.www.task-one.dependency_query {
	SELECT
        t.title as task_title,
	to_char(t.end_date,'MM/DD/YYYY') as end_date,
        t.percent_complete,
        i.live_revision,
        d.parent_task_id,
        d.dependency_type
	FROM
	pm_tasks_revisionsx t, cr_items i, pm_task_dependency d
	WHERE
        d.task_id        = :task_id and
        d.parent_task_id = t.item_id and 
        t.revision_id    = i.live_revision and
        t.item_id        = i.item_id
        [template::list::orderby_clause -name dependency -orderby]
    } {} {} {} c:/web/openacs-4/contrib/packages/project-manager/www/task-one-postgresql.xql}
dbqd.contrib.packages.project-manager.www.task-one.dependency2_query {dbqd.contrib.packages.project-manager.www.task-one.dependency2_query {
	SELECT
        t.title as task_title,
	to_char(t.end_date,'MM/DD/YYYY') as end_date,
        t.percent_complete,
        i.live_revision,
        d.parent_task_id,
        d.dependency_type,
        d.task_id
	FROM
	pm_tasks_revisionsx t, cr_items i, pm_task_dependency d
	WHERE
        d.task_id        = t.item_id and
        d.parent_task_id = :task_id and 
        t.revision_id    = i.live_revision and
        t.item_id        = i.item_id
        [template::list::orderby_clause -name dependency2 -orderby]
    } {} {} {} c:/web/openacs-4/contrib/packages/project-manager/www/task-one-postgresql.xql}
dbqd.contrib.packages.project-manager.www.task-one.task_people_query {dbqd.contrib.packages.project-manager.www.task-one.task_people_query {
        select
        r.one_line,
        u.first_names || ' ' || u.last_name || ' (' || u.email || ')' as user_info,
        r.role_id
        from 
        pm_task_assignment a,
        cc_users u,
        pm_roles r
        where 
        a.task_id  = :task_id and
        u.party_id = a.party_id and
        a.role_id  = r.role_id
    } {} {} {} c:/web/openacs-4/contrib/packages/project-manager/www/task-one-postgresql.xql}
dbqd.contrib.packages.project-manager.www.task-select-project.select_a_project {dbqd.contrib.packages.project-manager.www.task-select-project.select_a_project {
        SELECT
        p.item_id as project_item_id,
        p.title as project_name
        FROM pm_projectsx p, cr_items i
        WHERE p.project_id = i.live_revision and
        p.parent_id = :root_folder
        ORDER BY p.title
    } {} {} {} c:/web/openacs-4/contrib/packages/project-manager/www/task-select-project-postgresql.xql}
dbqd.contrib.packages.survey.tcl.survey-notification-procs.survey::notification::get_url.get_package_id {dbqd.contrib.packages.survey.tcl.survey-notification-procs.survey::notification::get_url.get_package_id {
	    select package_id from surveys
	    where survey_id=:object_id
	} {} {} {} c:/web/openacs-4/contrib/packages/survey/tcl/survey-notification-procs.xql}
dbqd.contrib.packages.survey.tcl.survey-procs-oracle.get_survey_info.n_completed {dbqd.contrib.packages.survey.tcl.survey-procs-oracle.get_survey_info.n_completed {
    		    select count(distinct survey_response.initial_user_id(response_id))
                    from 
		    survey_responses
		    where survey_id=:survey_id
} {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/packages/survey/tcl/survey-procs-oracle.xql}
dbqd.contrib.packages.survey.tcl.survey-procs-oracle.survey_section_add_to_form.questions {dbqd.contrib.packages.survey.tcl.survey-procs-oracle.survey_section_add_to_form.questions {
	select min(question_id) as question_id,
	dbms_lob.substr(question_text) as question_text from
	survey_questions where section_id=:section_id group by
	dbms_lob.substr(question_text) order by min(sort_order)
} {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/packages/survey/tcl/survey-procs-oracle.xql}
dbqd.contrib.packages.survey.tcl.survey-procs-oracle.survey_section_add_to_form.question_details {dbqd.contrib.packages.survey.tcl.survey-procs-oracle.survey_section_add_to_form.question_details {
	select question_id, required_p
	from survey_questions where
	section_id=:section_id and
	0=dbms_lob.compare(question_text,(select question_text from
	survey_questions where question_id=:q_id))
} {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/packages/survey/tcl/survey-procs-oracle.xql}
dbqd.contrib.packages.survey.tcl.survey-procs-oracle.survey_question_copy.create_question {dbqd.contrib.packages.survey.tcl.survey-procs-oracle.survey_question_copy.create_question {
      
	    begin
		:1 := survey_question.new (
		    question_id => NULL,
		    section_id => :section_id,
                    sort_order => :new_sort_order,
                    question_text => empty_clob(),
                    abstract_data_type => :abstract_data_type,
                    presentation_type => :presentation_type,
                    presentation_alignment => :presentation_alignment,
		    presentation_options => :presentation_options,
                    active_p => :active_p,
                    required_p => :required_p,
		    context_id => :section_id,
		    creation_user => :user_id,
		    question_html_p => :question_html_p,
		    summary_type => :summary_type,
		    answer_description => :answer_description,
		    predefined_question_id => :predefined_question_id
		);
	    end;
	
      } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/packages/survey/tcl/survey-procs-oracle.xql}
dbqd.contrib.packages.survey.tcl.survey-procs-oracle.survey_copy.survey_create {dbqd.contrib.packages.survey.tcl.survey-procs-oracle.survey_copy.survey_create {
	    begin
	        :1 := survey.new (
                    survey_id => NULL,
                    name => :name,
                    description => :description,
                    description_html_p => :description_html_p,
	            editable_p => :editable_p,
                    single_response_p => :single_response_p,
                    enabled_p => :enabled_p,
                    single_section_p => :single_section_p,
                    type => :type,
                    display_type => :display_type,
                    package_id => :package_id,
                    context_id => :package_id,
		    creation_user => :user_id,
		    public_p => :public_p
                );
    end;
} {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/packages/survey/tcl/survey-procs-oracle.xql}
dbqd.contrib.packages.survey.tcl.survey-procs-oracle.survey_copy.section_create {dbqd.contrib.packages.survey.tcl.survey-procs-oracle.survey_copy.section_create {
	    begin
	    :1 := survey_section.new (
	              section_id=>NULL,
		      survey_id=>:new_survey_id,
		      name=>:name,
		      description=>empty_clob(),
		      description_html_p=>:description_html_p,
		      sort_key=>:sort_key,
		      branch_p=>:branch_p,
		      branched_p=>:branched_p,
		      block_section_p=>:block_section_p,
		      page_break_p=>:page_break_p,
		      context_id =>:new_survey_id	
		      );
	    end;
} {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/packages/survey/tcl/survey-procs-oracle.xql}
dbqd.contrib.packages.survey.tcl.survey-procs-oracle.survey_do_notifications.get_response_info {dbqd.contrib.packages.survey.tcl.survey-procs-oracle.survey_do_notifications.get_response_info {
        select r.initial_response_id, o.creation_user as responding_user_id, r.response_id,
            u.first_names || ' ' || u.last_name as user_name,
            edit_p,
            o.creation_date as response_date, o.creation_user as responding_user_id
            from (select nvl(initial_response_id,response_id) as initial_response_id,
                  response_id, (case when initial_response_id is NULL then 'f' else 't' end) as edit_p
            from survey_responses) r, acs_objects o,
            cc_users u where r.response_id=:response_id
            and o.creation_user = u.user_id(+)
            and r.response_id = o.object_id
    } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/packages/survey/tcl/survey-procs-oracle.xql}
dbqd.contrib.packages.survey.tcl.survey-procs-oracle.survey_next_sections.get_last_answered_section_sort_key {dbqd.contrib.packages.survey.tcl.survey-procs-oracle.survey_next_sections.get_last_answered_section_sort_key {
    select nvl(max(sort_key),0) from
    survey_sections s,survey_question_responses qr, survey_questions q where
    qr.response_id=:response_id and qr.question_id=q.question_id and
    s.section_id=q.section_id
    } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/packages/survey/tcl/survey-procs-oracle.xql}
dbqd.contrib.packages.survey.tcl.survey-procs-oracle.survey_export_csv.get_all_survey_question_responses {dbqd.contrib.packages.survey.tcl.survey-procs-oracle.survey_export_csv.get_all_survey_question_responses {
select
    sq.response_id,
    sq.question_id,
    sq.email,
    sq.first_names,
    sq.last_name,
    sq.user_id,
    sq.creation_date,
    resp.boolean_answer,
    resp.number_answer,
    resp.date_answer,
    resp.varchar_answer,
    resp.clob_answer,
    resp.attachment_answer,
    resp.label
  from 
  (select
    sqr.response_id,
    sqr.question_id,
    sqr.boolean_answer,
    sqr.number_answer,
    sqr.date_answer,
    sqr.varchar_answer,
    sqr.clob_answer,
    sqr.attachment_answer,
    sqc.label,
    sqc.sort_order
  from
    survey_responses sr,
    survey_question_responses sqr,
    survey_question_choices sqc
  where
    sr.survey_id=:survey_id
    and sr.response_id = sqr.response_id
    and sqr.question_id = sqc.question_id (+)
    and sqr.choice_id = sqc.choice_id (+)) resp,
  (select r.response_id,
          q.question_id,
          u.email,
          u.first_names,
          u.last_name,
          r.user_id,
          r.creation_date,
          q.abstract_data_type,
          q.sort_order,
	  ss.sort_key
     from survey_questions q, (select initial_user_id as user_id, creation_date, response_id from survey_responses_latest rt where survey_id=:survey_id) r, cc_users u, survey_sections ss
     where ss.survey_id=:survey_id
     and q.section_id=ss.section_id
     and r.user_id = u.user_id) sq
  where sq.response_id = resp.response_id (+)
   and sq.question_id = resp.question_id (+)
  order by
    sq.response_id,
    sq.sort_key,
    sq.sort_order,
    sq.question_id,
    resp.sort_order
} {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/packages/survey/tcl/survey-procs-oracle.xql}
dbqd.contrib.packages.survey.tcl.survey-procs-oracle.survey_export_csv.get_all_survey_question_responses_with_anonymous {dbqd.contrib.packages.survey.tcl.survey-procs-oracle.survey_export_csv.get_all_survey_question_responses_with_anonymous {
select
    sq.response_id,
    sq.question_id,
    sq.email,
    sq.first_names,
    sq.last_name,
    sq.user_id,
    sq.creation_date,
    resp.boolean_answer,
    resp.number_answer,
    resp.date_answer,
    resp.varchar_answer,
    resp.clob_answer,
    resp.attachment_answer,
    resp.label
  from 
  (select
    sqr.response_id,
    sqr.question_id,
    sqr.boolean_answer,
    sqr.number_answer,
    sqr.date_answer,
    sqr.varchar_answer,
    sqr.clob_answer,
    sqr.attachment_answer,
    sqc.label,
    sqc.sort_order
  from
    survey_responses sr,
    survey_question_responses sqr,
    survey_question_choices sqc
  where
    sr.survey_id=:survey_id
    and sr.response_id = sqr.response_id
    and sqr.question_id = sqc.question_id (+)
    and sqr.choice_id = sqc.choice_id (+)) resp,
  (select r.response_id,
          q.question_id,
          u.email,
          u.first_names,
          u.last_name,
          r.user_id,
          r.creation_date,
          q.abstract_data_type,
          q.sort_order,
	  ss.sort_key
     from survey_questions q, (select initial_user_id as user_id, creation_date, response_id from survey_responses_latest rt where survey_id=:survey_id) r, cc_users u, survey_sections ss
     where ss.survey_id=:survey_id
     and q.section_id=ss.section_id
     and r.user_id = u.user_id(+)) sq
  where sq.response_id = resp.response_id (+)
   and sq.question_id = resp.question_id (+)
  order by
    sq.response_id,
    sq.sort_key,
    sq.sort_order,
    sq.question_id,
    resp.sort_order
} {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/packages/survey/tcl/survey-procs-oracle.xql}
dbqd.contrib.packages.survey.tcl.survey-procs.get_survey_info.n_completed {dbqd.contrib.packages.survey.tcl.survey-procs.get_survey_info.n_completed {
    		    select count(distinct survey_response__initial_user_id(response_id))
                    from 
		    survey_responses
		    where survey_id=:survey_id
} {} {} {postgresql 7.1} c:/web/openacs-4/contrib/packages/survey/tcl/survey-procs-postgresql.xql}
dbqd.contrib.packages.survey.tcl.survey-procs.survey_section_add_to_form.questions {dbqd.contrib.packages.survey.tcl.survey-procs.survey_section_add_to_form.questions {
	select min(question_id) as question_id,
	question_text
	from survey_questions 
	where section_id=:section_id 
	group by question_text
	order by min(sort_order)
} {} {} {postgresql 7.1} c:/web/openacs-4/contrib/packages/survey/tcl/survey-procs-postgresql.xql}
dbqd.contrib.packages.survey.tcl.survey-procs.survey_section_add_to_form.question_details {dbqd.contrib.packages.survey.tcl.survey-procs.survey_section_add_to_form.question_details {
	select question_id, required_p
	from survey_questions where
	section_id=:section_id and
	question_text = (select question_text from
	survey_questions where question_id=:q_id)
} {} {} {postgresql 7.1} c:/web/openacs-4/contrib/packages/survey/tcl/survey-procs-postgresql.xql}
dbqd.contrib.packages.survey.tcl.survey-procs.survey_question_copy.create_question {dbqd.contrib.packages.survey.tcl.survey-procs.survey_question_copy.create_question {
	SELECT survey_question__new (
		    NULL,
		    :section_id,
                    :new_sort_order,
                    :question_text,
                    :abstract_data_type,
		    :required_p,
                    :active_p,
		    :presentation_type,
		    :presentation_options,
	            :presentation_alignment,
		    :question_html_p,
		    :summary_type,
		    :answer_description,
		    :predefined_question_id,
		    :user_id,
		    :section_id
		);
      } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/packages/survey/tcl/survey-procs-postgresql.xql}
dbqd.contrib.packages.survey.tcl.survey-procs.survey_copy.survey_create {dbqd.contrib.packages.survey.tcl.survey-procs.survey_copy.survey_create {
        select survey__new (
                    NULL,
                    :name,
                    :description,
                    :description_html_p,
		    :single_response_p,
                    :editable_p,
                    :enabled_p,
                    :single_section_p,
		    :type,
                    :display_type,
                    :package_id,
		    :public_p,
	            :user_id,
		    :package_id
                );
} {} {} {postgresql 7.1} c:/web/openacs-4/contrib/packages/survey/tcl/survey-procs-postgresql.xql}
dbqd.contrib.packages.survey.tcl.survey-procs.survey_copy.section_create {dbqd.contrib.packages.survey.tcl.survey-procs.survey_copy.section_create {
	    select survey_section__new (
	              NULL,
		      :new_survey_id,
		      :name,
		      :description,
		      :description_html_p,
		      :sort_key,
		      :branch_p,
		      :branched_p,
		      :block_section_p,
		      :page_break_p,
		      :user_id,
	              :package_id
		      );
} {} {} {postgresql 7.1} c:/web/openacs-4/contrib/packages/survey/tcl/survey-procs-postgresql.xql}
dbqd.contrib.packages.survey.tcl.survey-procs.survey_do_notifications.get_response_info {dbqd.contrib.packages.survey.tcl.survey-procs.survey_do_notifications.get_response_info {
	select r.initial_response_id, o.creation_user as responding_user_id, r.response_id,
	    u.first_names || ' ' || u.last_name as user_name,
	    edit_p,
	    o.creation_date as response_date
	    from (select survey_response__initial_user_id(response_id) as responding_user_id,
		  survey_response__initial_response_id(response_id) as initial_response_id,
		  response_id, (case when initial_response_id is NULL then 'f' else 't' end) as edit_p
	    from survey_responses) r, acs_objects o
	    left outer join cc_users u on (o.creation_user = u.user_id)
	    where r.response_id=:response_id
	    and r.response_id = o.object_id
    } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/packages/survey/tcl/survey-procs-postgresql.xql}
dbqd.contrib.packages.survey.tcl.survey-procs.survey_next_sections.get_last_answered_section_sort_key {dbqd.contrib.packages.survey.tcl.survey-procs.survey_next_sections.get_last_answered_section_sort_key {
    select coalesce(max(sort_key),0) from
    survey_sections s,survey_question_responses qr, survey_questions q
    where
    qr.response_id=:response_id and qr.question_id=q.question_id and s.section_id=q.section_id
    } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/packages/survey/tcl/survey-procs-postgresql.xql}
dbqd.contrib.packages.survey.tcl.survey-procs.survey_export_csv.get_all_survey_question_responses {dbqd.contrib.packages.survey.tcl.survey-procs.survey_export_csv.get_all_survey_question_responses {
select
    sq.response_id,
    sq.question_id,
    sq.email,
    sq.first_names,
    sq.last_name,
    sq.user_id,
    sq.creation_date,
    resp.boolean_answer,
    resp.number_answer,
    resp.date_answer,
    resp.varchar_answer,
    resp.clob_answer,
    resp.attachment_answer,
    resp.label
  from 
  (select
    sqr.response_id,
    sqr.question_id,
    sqr.boolean_answer,
    sqr.number_answer,
    sqr.date_answer,
    sqr.varchar_answer,
    sqr.clob_answer,
    sqr.attachment_answer,
    sqc.label,
    sqc.sort_order
  from
    survey_responses sr
  inner join
    survey_question_responses sqr
  on (sr.response_id = sqr.response_id)
  right outer join 
    survey_question_choices sqc
  on (sqr.question_id = sqc.question_id
    and sqr.choice_id = sqc.choice_id)
  where
    sr.survey_id=:survey_id) resp
  right outer join
    (select r.response_id,
          q.question_id,
          u.email,
          u.first_names,
          u.last_name,
          r.user_id,
          r.creation_date,
          q.abstract_data_type,
          q.sort_order,
	  ss.sort_key
     from survey_questions q, (select initial_user_id as user_id, creation_date, response_id from survey_responses_latest rt where survey_id=:survey_id) r, cc_users u, survey_sections ss
     where ss.survey_id=:survey_id
     and q.section_id=ss.section_id
     and r.user_id = u.user_id) sq
  on (sq.response_id = resp.response_id
   and sq.question_id = resp.question_id)
  order by
    sq.response_id,
    sq.sort_key,
    sq.sort_order,
    sq.question_id,
    resp.sort_order
} {} {} {postgresql 7.1} c:/web/openacs-4/contrib/packages/survey/tcl/survey-procs-postgresql.xql}
dbqd.contrib.packages.survey.tcl.survey-procs.survey_export_csv.get_all_survey_question_responses_with_anonymous {dbqd.contrib.packages.survey.tcl.survey-procs.survey_export_csv.get_all_survey_question_responses_with_anonymous {
select
    sq.response_id,
    sq.question_id,
    sq.email,
    sq.first_names,
    sq.last_name,
    sq.user_id,
    sq.creation_date,
    resp.boolean_answer,
    resp.number_answer,
    resp.date_answer,
    resp.varchar_answer,
    resp.clob_answer,
    resp.attachment_answer,
    resp.label
  from 
 
 (select
    sqr.response_id,
    sqr.question_id,
    sqr.boolean_answer,
    sqr.number_answer,
    sqr.date_answer,
    sqr.varchar_answer,
    sqr.clob_answer,
    sqr.attachment_answer,
    sqc.label,
    sqc.sort_order
  from
    survey_responses sr
  inner join
    survey_question_responses sqr
  on (sr.response_id = sqr.response_id)
  right outer join survey_question_choices sqc
  on (sqr.question_id = sqc.question_id
    and sqr.choice_id = sqc.choice_id)
  where
    sr.survey_id=:survey_id) resp left outer join

  (select r.response_id,
          q.question_id,
          u.email,
          u.first_names,
          u.last_name,
          r.user_id,
          r.creation_date,
          q.abstract_data_type,
          q.sort_order,
	  ss.sort_key
     from survey_questions q
     inner join survey_sections ss on
     	   (q.section_id=ss.section_id)
     inner join
     (select initial_user_id as user_id, survey_id, creation_date, response_id from survey_responses_latest rt where survey_id=:survey_id) r
     on (ss.survey_id = r.survey_id)
     right outer join cc_users u on
     	   (r.user_id = u.user_id)
     where ss.survey_id=:survey_id) sq

  on (sq.response_id = resp.response_id
   and sq.question_id = resp.question_id)
  order by
    sq.response_id,
    sq.sort_key,
    sq.sort_order,
    sq.question_id,
    resp.sort_order
} {} {} {postgresql 7.1} c:/web/openacs-4/contrib/packages/survey/tcl/survey-procs-postgresql.xql}
dbqd.contrib.packages.survey.tcl.survey-procs.get_survey_info.lookup_survey_id {dbqd.contrib.packages.survey.tcl.survey-procs.get_survey_info.lookup_survey_id {
	select survey_id
	  from survey_sections
	 where section_id = :section_id	
} {} {} {} c:/web/openacs-4/contrib/packages/survey/tcl/survey-procs.xql}
dbqd.contrib.packages.survey.tcl.survey-procs.get_survey_info.get_info_by_survey_id {dbqd.contrib.packages.survey.tcl.survey-procs.get_survey_info.get_info_by_survey_id {
	select s.*,
	       o.creation_user, o.creation_date, p.first_names || ' ' || p.last_name as creator_name, 
	       (case when enabled_p = 't' then 'Enabled' else 'Disabled' end) as enabled_display,
	       (case when single_response_p = 't' then 'One response' else 'Multiple responses' end) as single_response_display,
	       (case when editable_p = 'f' then 'Non-Editable' else 'Editable' end) as editable_display, 
	       (case when single_section_p = 'f' then 'Multiple sections' else 'Single section' end) as single_section_display
	  from surveys s, acs_objects o, persons p
	 where o.object_id = :survey_id	
	   and s.survey_id = o.object_id
	   and p.person_id = o.creation_user
} {} {} {} c:/web/openacs-4/contrib/packages/survey/tcl/survey-procs.xql}
dbqd.contrib.packages.survey.tcl.survey-procs.get_survey_info.lookup_single_section_id {dbqd.contrib.packages.survey.tcl.survey-procs.get_survey_info.lookup_single_section_id {
	select min(section_id) as section_id
          from survey_sections
	 where survey_id = :survey_id
} {} {} {} c:/web/openacs-4/contrib/packages/survey/tcl/survey-procs.xql}
dbqd.contrib.packages.survey.tcl.survey-procs.get_survey_info.n_eligible {dbqd.contrib.packages.survey.tcl.survey-procs.get_survey_info.n_eligible {
    select count(*) from dotlrn_member_rels_full
    where rel_type='dotlrn_member_rel'
    and community_id=:community_id
} {} {} {} c:/web/openacs-4/contrib/packages/survey/tcl/survey-procs.xql}
dbqd.contrib.packages.survey.tcl.survey-procs.get_section_info.get_info_by_section_id {dbqd.contrib.packages.survey.tcl.survey-procs.get_section_info.get_info_by_section_id {
	select s.*,
	       o.creation_user, o.creation_date
	  from survey_sections s, acs_objects o
	 where o.object_id = :section_id	
	   and s.section_id = o.object_id
} {} {} {} c:/web/openacs-4/contrib/packages/survey/tcl/survey-procs.xql}
dbqd.contrib.packages.survey.tcl.survey-procs.survey_section_add_to_form.block_choices {dbqd.contrib.packages.survey.tcl.survey-procs.survey_section_add_to_form.block_choices {
    select label,block_section_id from survey_block_questions where section_id=:section_id order by block_section_id,
    sort_order
    } {} {} {} c:/web/openacs-4/contrib/packages/survey/tcl/survey-procs.xql}
dbqd.contrib.packages.survey.tcl.survey-procs.survey_section_add_to_form.choice_ids {dbqd.contrib.packages.survey.tcl.survey-procs.survey_section_add_to_form.choice_ids {
    select choice_id from survey_question_choices where
    question_id=:question_id order by sort_order
    } {} {} {} c:/web/openacs-4/contrib/packages/survey/tcl/survey-procs.xql}
dbqd.contrib.packages.survey.tcl.survey-procs.survey_section_add_to_form.section_info {dbqd.contrib.packages.survey.tcl.survey-procs.survey_section_add_to_form.section_info {
	select name, description, description_html_p, block_section_p from survey_sections where section_id=:section_id
} {} {} {} c:/web/openacs-4/contrib/packages/survey/tcl/survey-procs.xql}
dbqd.contrib.packages.survey.tcl.survey-procs.survey_section_add_to_form.checked {dbqd.contrib.packages.survey.tcl.survey-procs.survey_section_add_to_form.checked {
    select choice_id as selected_choice_id from
    survey_question_responses qr, survey_questions q where
    section_id=:section_id and q.question_id=qr.question_id and response_id=:response_id
    } {} {} {} c:/web/openacs-4/contrib/packages/survey/tcl/survey-procs.xql}
dbqd.contrib.packages.survey.tcl.survey-procs.survey_section_add_to_form.all_questions {dbqd.contrib.packages.survey.tcl.survey-procs.survey_section_add_to_form.all_questions {
	select question_id, question_text from survey_questions where
	section_id=:section_id order by sort_order
} {} {} {} c:/web/openacs-4/contrib/packages/survey/tcl/survey-procs.xql}
dbqd.contrib.packages.survey.tcl.survey-procs.survey_question_add_to_form.survey_question_properties {dbqd.contrib.packages.survey.tcl.survey-procs.survey_question_add_to_form.survey_question_properties {
select
  section_id,
  sort_order,
  question_text,
  abstract_data_type,
  required_p,
  active_p,
  presentation_type,
  presentation_options,
  presentation_alignment,
  creation_user,
  creation_date
from
  survey_questions, acs_objects
where
  object_id = question_id
  and question_id = :question_id
      } {} {} {} c:/web/openacs-4/contrib/packages/survey/tcl/survey-procs.xql}
dbqd.contrib.packages.survey.tcl.survey-procs.survey_question_add_to_form.predefined_question_id {dbqd.contrib.packages.survey.tcl.survey-procs.survey_question_add_to_form.predefined_question_id {
	select predefined_question_id from survey_questions where
	question_id=:question_id
} {} {} {} c:/web/openacs-4/contrib/packages/survey/tcl/survey-procs.xql}
dbqd.contrib.packages.survey.tcl.survey-procs.survey_question_add_to_form.predefined_question_data {dbqd.contrib.packages.survey.tcl.survey-procs.survey_question_add_to_form.predefined_question_data {
	select action_type,table_name,column_name,key_name from
	survey_predefined_questions where predefined_question_id=:predefined_question_id
} {} {} {} c:/web/openacs-4/contrib/packages/survey/tcl/survey-procs.xql}
dbqd.contrib.packages.survey.tcl.survey-procs.survey_question_add_to_form.locate_predef_preselect {dbqd.contrib.packages.survey.tcl.survey-procs.survey_question_add_to_form.locate_predef_preselect {
select question_id as preselect_question_id, object_id as response_id
from survey_question_responses, acs_objects
 where question_id in (
       select question_id from survey_questions where
       predefined_question_id=:predefined_question_id)
 and object_type='survey_response'
 and response_id=object_id
 and creation_date=(select min(creation_date) from
 survey_question_responses, acs_objects
 where question_id in (
       select question_id from survey_questions where
       predefined_question_id=:predefined_question_id)
 and object_type='survey_response'
 and response_id=object_id)

} {} {} {} c:/web/openacs-4/contrib/packages/survey/tcl/survey-procs.xql}
dbqd.contrib.packages.survey.tcl.survey-procs.survey_question_add_to_form.prev_response_query_predef {dbqd.contrib.packages.survey.tcl.survey-procs.survey_question_add_to_form.prev_response_query_predef {
select	
  choice_id,
  boolean_answer,
  clob_answer,
  number_answer,
  varchar_answer,
  to_char(date_answer,'YYYY MM DD HH24 MI SS') as date_answer,
  attachment_answer
  from survey_question_responses
  where question_id = :preselect_question_id
       and response_id = :response_id
} {} {} {} c:/web/openacs-4/contrib/packages/survey/tcl/survey-procs.xql}
dbqd.contrib.packages.survey.tcl.survey-procs.survey_question_add_to_form.prev_response_query {dbqd.contrib.packages.survey.tcl.survey-procs.survey_question_add_to_form.prev_response_query {
select	
  choice_id,
  boolean_answer,
  clob_answer,
  number_answer,
  varchar_answer,
  to_char(date_answer,'YYYY MM DD HH24 MI SS') as date_answer,
  attachment_answer
  from survey_question_responses
  where question_id = :question_id
       and response_id = :response_id
} {} {} {} c:/web/openacs-4/contrib/packages/survey/tcl/survey-procs.xql}
dbqd.contrib.packages.survey.tcl.survey-procs.survey_question_add_to_form.get_file_name {dbqd.contrib.packages.survey.tcl.survey-procs.survey_question_add_to_form.get_file_name {
   select name from cr_items i, cr_revisions r where
   i.item_id=r.item_id and r. revision_id=:attachment_answer
} {} {} {} c:/web/openacs-4/contrib/packages/survey/tcl/survey-procs.xql}
dbqd.contrib.packages.survey.tcl.survey-procs.survey_question_add_to_form.question_choices {dbqd.contrib.packages.survey.tcl.survey-procs.survey_question_add_to_form.question_choices {
      select choice_id, label
from survey_question_choices
where question_id = :question_id
order by sort_order
      } {} {} {} c:/web/openacs-4/contrib/packages/survey/tcl/survey-procs.xql}
dbqd.contrib.packages.survey.tcl.survey-procs.survey_question_add_to_form.question_choices_2 {dbqd.contrib.packages.survey.tcl.survey-procs.survey_question_add_to_form.question_choices_2 {
      select choice_id, label
from survey_question_choices
where question_id = :question_id
order by sort_order
      } {} {} {} c:/web/openacs-4/contrib/packages/survey/tcl/survey-procs.xql}
dbqd.contrib.packages.survey.tcl.survey-procs.survey_question_add_to_form.question_choices_3 {dbqd.contrib.packages.survey.tcl.survey-procs.survey_question_add_to_form.question_choices_3 {
      select * from survey_question_choices
where question_id = :question_id
order by sort_order
      } {} {} {} c:/web/openacs-4/contrib/packages/survey/tcl/survey-procs.xql}
dbqd.contrib.packages.survey.tcl.survey-procs.survey_answer_summary_display.summary {dbqd.contrib.packages.survey.tcl.survey-procs.survey_answer_summary_display.summary {

select
  sq.question_id,
  sq.section_id,
  sq.sort_order,
  sq.question_text,
  sq.abstract_data_type,
  sq.required_p,
  sq.active_p,
  sq.presentation_type,
  sq.presentation_options,
  sq.presentation_alignment,
  sqr.response_id,
  sqr.question_id,
  sqr.choice_id,
  sqr.boolean_answer,
  sqr.clob_answer,
  sqr.number_answer,
  sqr.varchar_answer,
  sqr.date_answer,
  sqr.attachment_answer,
  s.name as section_name
from
  survey_questions sq,
  survey_question_responses sqr,
  survey_sections s
where
  sqr.response_id = :response_id
  and sq.question_id = sqr.question_id
  and sq.active_p = 't'
  and s.section_id=sq.section_id
order by s.sort_key,sq.sort_order

      } {} {} {} c:/web/openacs-4/contrib/packages/survey/tcl/survey-procs.xql}
dbqd.contrib.packages.survey.tcl.survey-procs.survey_answer_summary_display.get_filename {dbqd.contrib.packages.survey.tcl.survey-procs.survey_answer_summary_display.get_filename {
	select name from cr_items i, cr_revisions r where
	i.item_id=r.item_id and
	revision_id=:attachment_answer
    } {} {} {} c:/web/openacs-4/contrib/packages/survey/tcl/survey-procs.xql}
dbqd.contrib.packages.survey.tcl.survey-procs.survey_answer_summary_display.survey_label_list {dbqd.contrib.packages.survey.tcl.survey-procs.survey_answer_summary_display.survey_label_list {
      select label
	    from survey_question_choices, survey_question_responses
	    where survey_question_responses.question_id = :question_id
	    and survey_question_responses.response_id = :response_id
	    and survey_question_choices.choice_id = survey_question_responses.choice_id
      } {} {} {} c:/web/openacs-4/contrib/packages/survey/tcl/survey-procs.xql}
dbqd.contrib.packages.survey.tcl.survey-procs.survey_question_copy.get_question_details {dbqd.contrib.packages.survey.tcl.survey-procs.survey_question_copy.get_question_details {
select * from survey_questions
where question_id=:question_id
} {} {} {} c:/web/openacs-4/contrib/packages/survey/tcl/survey-procs.xql}
dbqd.contrib.packages.survey.tcl.survey-procs.survey_question_copy.renumber_sort_orders {dbqd.contrib.packages.survey.tcl.survey-procs.survey_question_copy.renumber_sort_orders {
update survey_questions
   set sort_order = sort_order + 1
   where section_id = :section_id
   and sort_order > :after
} {} {} {} c:/web/openacs-4/contrib/packages/survey/tcl/survey-procs.xql}
dbqd.contrib.packages.survey.tcl.survey-procs.survey_question_copy.insert_question_text {dbqd.contrib.packages.survey.tcl.survey-procs.survey_question_copy.insert_question_text {
	    update survey_questions
	    set question_text = :question_text
	    where question_id = :new_question_id
} {} {} {} c:/web/openacs-4/contrib/packages/survey/tcl/survey-procs.xql}
dbqd.contrib.packages.survey.tcl.survey-procs.survey_question_copy.get_survey_question_choices {dbqd.contrib.packages.survey.tcl.survey-procs.survey_question_copy.get_survey_question_choices {
	select * from survey_question_choices
	where question_id=:old_question_id
} {} {} {} c:/web/openacs-4/contrib/packages/survey/tcl/survey-procs.xql}
dbqd.contrib.packages.survey.tcl.survey-procs.survey_question_copy.insert_survey_question_choice {dbqd.contrib.packages.survey.tcl.survey-procs.survey_question_copy.insert_survey_question_choice {
insert into survey_question_choices
                (choice_id, question_id, label, numeric_value,
		sort_order, presentation_alignment, more_info_type, predef_choice_id)
                values
                (:new_choice_id, :new_question_id, :label,
		 :numeric_value, :sort_order, :presentation_alignment,
		 :more_info_type, :predef_choice_id)
} {} {} {} c:/web/openacs-4/contrib/packages/survey/tcl/survey-procs.xql}
dbqd.contrib.packages.survey.tcl.survey-procs.survey_copy.get_survey_info {dbqd.contrib.packages.survey.tcl.survey-procs.survey_copy.get_survey_info {
select * from surveys where survey_id=:survey_id
} {} {} {} c:/web/openacs-4/contrib/packages/survey/tcl/survey-procs.xql}
dbqd.contrib.packages.survey.tcl.survey-procs.survey_copy.get_sections {dbqd.contrib.packages.survey.tcl.survey-procs.survey_copy.get_sections {
	select section_id from survey_sections where survey_id=:survey_id
    } {} {} {} c:/web/openacs-4/contrib/packages/survey/tcl/survey-procs.xql}
dbqd.contrib.packages.survey.tcl.survey-procs.survey_copy.get_section_info {dbqd.contrib.packages.survey.tcl.survey-procs.survey_copy.get_section_info {
select name, description, description_html_p, sort_key, branch_p,
branched_p, block_section_p, page_break_p from survey_sections where section_id=:section_id
} {} {} {} c:/web/openacs-4/contrib/packages/survey/tcl/survey-procs.xql}
dbqd.contrib.packages.survey.tcl.survey-procs.survey_copy.set_section_description {dbqd.contrib.packages.survey.tcl.survey-procs.survey_copy.set_section_description {
	update survey_sections set description=:description
	where section_id=:new_section_id
} {} {} {} c:/web/openacs-4/contrib/packages/survey/tcl/survey-procs.xql}
dbqd.contrib.packages.survey.tcl.survey-procs.survey_copy.get_questions {dbqd.contrib.packages.survey.tcl.survey-procs.survey_copy.get_questions {
select question_id from survey_questions
	where section_id in (select section_id from survey_sections
		where survey_id=:survey_id)
} {} {} {} c:/web/openacs-4/contrib/packages/survey/tcl/survey-procs.xql}
dbqd.contrib.packages.survey.tcl.survey-procs.survey_do_notifications.get_survey_id_from_response {dbqd.contrib.packages.survey.tcl.survey-procs.survey_do_notifications.get_survey_id_from_response {
	select survey_id from survey_responses
	where response_id=:response_id
} {} {} {} c:/web/openacs-4/contrib/packages/survey/tcl/survey-procs.xql}
dbqd.contrib.packages.survey.tcl.survey-procs.survey_do_notifications.n_responses {dbqd.contrib.packages.survey.tcl.survey-procs.survey_do_notifications.n_responses {
	select count(*) from survey_responses_latest
	where survey_id=:survey_id
    } {} {} {} c:/web/openacs-4/contrib/packages/survey/tcl/survey-procs.xql}
dbqd.contrib.packages.survey.tcl.survey-procs.survey_do_notifications.n_members {dbqd.contrib.packages.survey.tcl.survey-procs.survey_do_notifications.n_members {
	select count(*) from party_approved_member_map
	where party_id=:segment_id
    } {} {} {} c:/web/openacs-4/contrib/packages/survey/tcl/survey-procs.xql}
dbqd.contrib.packages.survey.tcl.survey-procs.survey_do_notifications.get_questions {dbqd.contrib.packages.survey.tcl.survey-procs.survey_do_notifications.get_questions {
	select sort_order, question_text, question_id
	from survey_questions
	where section_id in 
	(select section_id
	 from survey_sections
	 where survey_id=:survey_id)
    } {} {} {} c:/web/openacs-4/contrib/packages/survey/tcl/survey-procs.xql}
dbqd.contrib.packages.survey.tcl.survey-procs.survey_decode_boolean_answer.get_presentation_options {dbqd.contrib.packages.survey.tcl.survey-procs.survey_decode_boolean_answer.get_presentation_options {
	select presentation_options 
	from survey_questions
	where question_id=:question_id
    } {} {} {} c:/web/openacs-4/contrib/packages/survey/tcl/survey-procs.xql}
dbqd.contrib.packages.survey.tcl.survey-procs.survey_next_sections.sort_key {dbqd.contrib.packages.survey.tcl.survey-procs.survey_next_sections.sort_key {
    select sort_key from survey_sections where section_id=:section_id
    } {} {} {} c:/web/openacs-4/contrib/packages/survey/tcl/survey-procs.xql}
dbqd.contrib.packages.survey.tcl.survey-procs.survey_next_sections.get_following_sections {dbqd.contrib.packages.survey.tcl.survey-procs.survey_next_sections.get_following_sections {
    select section_id,page_break_p from survey_sections where
    survey_id=:survey_id and sort_key>:sort_key order by sort_key
    } {} {} {} c:/web/openacs-4/contrib/packages/survey/tcl/survey-procs.xql}
dbqd.contrib.packages.survey.tcl.survey-procs.survey_next_sections.get_condition {dbqd.contrib.packages.survey.tcl.survey-procs.survey_next_sections.get_condition {
    select question_id,choice_id,boolean_answer
    from survey_conditions c, survey_branches b
    where b.section_id=:section_id and b.condition=c.condition_id
    } {} {} {} c:/web/openacs-4/contrib/packages/survey/tcl/survey-procs.xql}
dbqd.contrib.packages.survey.tcl.survey-procs.survey_next_sections.get_response {dbqd.contrib.packages.survey.tcl.survey-procs.survey_next_sections.get_response {
    select 1
    from survey_question_responses where response_id=:response_id
    and question_id=:question_id
    and (choice_id=:choice_id or boolean_answer=:boolean_answer)
    } {} {} {} c:/web/openacs-4/contrib/packages/survey/tcl/survey-procs.xql}
dbqd.contrib.packages.survey.tcl.survey-procs.survey_status_bar.percentage {dbqd.contrib.packages.survey.tcl.survey-procs.survey_status_bar.percentage {
    select to_char((sort_key-1)/(select max(sort_key) from survey_sections ssec
    where ssec.survey_id=ss.survey_id)*100,'999') as percentage,
    status_bar_color from survey_sections ss, surveys s where
    section_id=:section_id and s.survey_id=ss.survey_id
    } {} {} {} c:/web/openacs-4/contrib/packages/survey/tcl/survey-procs.xql}
dbqd.contrib.packages.survey.tcl.survey-procs.survey_block_section_candidate_p.get_questions {dbqd.contrib.packages.survey.tcl.survey-procs.survey_block_section_candidate_p.get_questions {
    select question_text,abstract_data_type, presentation_type,
    survey_question_all_choices(question_id) as all_choices
    from survey_questions where section_id=:section_id
    } {} {} {} c:/web/openacs-4/contrib/packages/survey/tcl/survey-procs.xql}
dbqd.contrib.packages.survey.tcl.survey-procs.survey_export_csv.get_n_responses {dbqd.contrib.packages.survey.tcl.survey-procs.survey_export_csv.get_n_responses {
	    select count(*) from survey_responses_latest
	    where survey_id=:survey_id
	} {} {} {} c:/web/openacs-4/contrib/packages/survey/tcl/survey-procs.xql}
dbqd.contrib.packages.survey.tcl.survey-procs.survey_export_csv.get_question_data_types {dbqd.contrib.packages.survey.tcl.survey-procs.survey_export_csv.get_question_data_types {
	  select question_id, abstract_data_type, q.sort_order,
	    question_text
	  from survey_questions q, survey_sections s
	  where s.survey_id = :survey_id
	    and s.section_id=q.section_id
	  order by s.sort_key,q.sort_order,q.question_id
	} {} {} {} c:/web/openacs-4/contrib/packages/survey/tcl/survey-procs.xql}
dbqd.contrib.packages.survey.tcl.survey-procs.survey_export_csv.get_filename {dbqd.contrib.packages.survey.tcl.survey-procs.survey_export_csv.get_filename {
	    select title from cr_revisions where
	    revision_id=:attachment_answer
	} {} {} {} c:/web/openacs-4/contrib/packages/survey/tcl/survey-procs.xql}
dbqd.contrib.packages.survey.www.admin.condition-add-2.get_old_condition {dbqd.contrib.packages.survey.www.admin.condition-add-2.get_old_condition {
      select condition as old_condition_id from survey_branches
      where branch_id=:branch_id
      } {} {} {} c:/web/openacs-4/contrib/packages/survey/www/admin/condition-add-2.xql}
dbqd.contrib.packages.survey.www.admin.condition-add-2.unlink_old_condition {dbqd.contrib.packages.survey.www.admin.condition-add-2.unlink_old_condition {
      update survey_branches set condition=null where branch_id=:branch_id
      } {} {} {} c:/web/openacs-4/contrib/packages/survey/www/admin/condition-add-2.xql}
dbqd.contrib.packages.survey.www.admin.condition-add-2.remove_old_condition {dbqd.contrib.packages.survey.www.admin.condition-add-2.remove_old_condition {
      delete from survey_conditions where condition_id=:old_condition_id
      } {} {} {} c:/web/openacs-4/contrib/packages/survey/www/admin/condition-add-2.xql}
dbqd.contrib.packages.survey.www.admin.condition-add-2.add_condition {dbqd.contrib.packages.survey.www.admin.condition-add-2.add_condition {
      insert into survey_conditions (condition_id, question_id,
      choice_id, boolean_answer) values (:condition_id, :question_id,
      :choice_id, :boolean_answer)
      } {} {} {} c:/web/openacs-4/contrib/packages/survey/www/admin/condition-add-2.xql}
dbqd.contrib.packages.survey.www.admin.condition-add-2.link_condition {dbqd.contrib.packages.survey.www.admin.condition-add-2.link_condition {
      update survey_branches
      set condition=:condition_id where branch_id=:branch_id
      } {} {} {} c:/web/openacs-4/contrib/packages/survey/www/admin/condition-add-2.xql}
dbqd.contrib.packages.survey.www.admin.condition-add.branch_info {dbqd.contrib.packages.survey.www.admin.condition-add.branch_info {
      select branch_id,after from survey_branches where section_id=:section_id
      } {} {} {} c:/web/openacs-4/contrib/packages/survey/www/admin/condition-add.xql}
dbqd.contrib.packages.survey.www.admin.condition-add.questions {dbqd.contrib.packages.survey.www.admin.condition-add.questions {
      select question_id, question_text, abstract_data_type
      from survey_questions q, survey_sections s
      where s.survey_id=:survey_id
      and sort_key<=(select sort_key from survey_sections where
      section_id=:after) and
      q.section_id=s.section_id and
      abstract_data_type in ('boolean','choice') and
      presentation_type in ('select', 'radio', 'checkbox')
      } {} {} {} c:/web/openacs-4/contrib/packages/survey/www/admin/condition-add.xql}
dbqd.contrib.packages.survey.www.admin.condition-add.choices {dbqd.contrib.packages.survey.www.admin.condition-add.choices {
      select choice_id,label from survey_question_choices where
      question_id=:question_id order by sort_order
      } {} {} {} c:/web/openacs-4/contrib/packages/survey/www/admin/condition-add.xql}
dbqd.contrib.packages.survey.www.admin.description-edit.survey_update_description {dbqd.contrib.packages.survey.www.admin.description-edit.survey_update_description {
      update surveys 
      set description = :description,
          description_html_p = :description_html_p
          where survey_id = :survey_id
      } {} {} {} c:/web/openacs-4/contrib/packages/survey/www/admin/description-edit.xql}
dbqd.contrib.packages.survey.www.admin.import-responses-oracle.create_response {dbqd.contrib.packages.survey.www.admin.import-responses-oracle.create_response {
      
	begin
	    :1 := survey_response.new (
		response_id => :response_id,
		survey_id => :survey_id,		
		context_id => :survey_id,
		creation_user => :user_id,
		initial_response_id => :initial_response_id,
		creation_ip => :creation_ip
	    );
	end;
    
      } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/packages/survey/www/admin/import-responses-oracle.xql}
dbqd.contrib.packages.survey.www.admin.import-responses-oracle.create_clob_response {dbqd.contrib.packages.survey.www.admin.import-responses-oracle.create_clob_response {

      insert into survey_question_responses
      (response_id, question_id, clob_answer)
      values 
      (:response_id, :question_id, empty_clob())
      returning clob_answer into :1

      } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/packages/survey/www/admin/import-responses-oracle.xql}
dbqd.contrib.packages.survey.www.admin.import-responses.create_response {dbqd.contrib.packages.survey.www.admin.import-responses.create_response {
	select survey_response__new (
		:response_id,
		:survey_id,		
		null,
		'f',
		:user_id,
		:creation_ip,
		:survey_id,
		:initial_response_id
	    )
      } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/packages/survey/www/admin/import-responses-postgresql.xql}
dbqd.contrib.packages.survey.www.admin.import-responses.create_clob_response {dbqd.contrib.packages.survey.www.admin.import-responses.create_clob_response {
      insert into survey_question_responses
      (response_id, question_id, clob_answer)
      values 
      (:response_id, :question_id, :response_value)
      } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/packages/survey/www/admin/import-responses-postgresql.xql}
dbqd.contrib.packages.survey.www.admin.import-responses.get_questions {dbqd.contrib.packages.survey.www.admin.import-responses.get_questions {
      select question_id, question_text, s.name as section_desc,
      required_p, abstract_data_type
      from survey_questions q, survey_sections s where
      s.survey_id=:survey_id and s.section_id=q.section_id
      order by s.sort_key, q.sort_order
      } {} {} {} c:/web/openacs-4/contrib/packages/survey/www/admin/import-responses.xql}
dbqd.contrib.packages.survey.www.admin.import-responses.get_choices {dbqd.contrib.packages.survey.www.admin.import-responses.get_choices {
      select label,choice_id from survey_question_choices where question_id=:question_id
      } {} {} {} c:/web/openacs-4/contrib/packages/survey/www/admin/import-responses.xql}
dbqd.contrib.packages.survey.www.admin.import-responses.get_user_id {dbqd.contrib.packages.survey.www.admin.import-responses.get_user_id {
      select user_id from cc_users where email=:email
      } {} {} {} c:/web/openacs-4/contrib/packages/survey/www/admin/import-responses.xql}
dbqd.contrib.packages.survey.www.admin.import-responses.user_exists {dbqd.contrib.packages.survey.www.admin.import-responses.user_exists {
      select 1 from users where user_id=:user_id
      } {} {} {} c:/web/openacs-4/contrib/packages/survey/www/admin/import-responses.xql}
dbqd.contrib.packages.survey.www.admin.import-responses.get_response_id {dbqd.contrib.packages.survey.www.admin.import-responses.get_response_id {
      select response_id from survey_responses_latest r, surveys s
      where r.survey_id=s.survey_id and s.single_response_p='t' and
      r.creation_user=:user_id and s.survey_id=:survey_id
      } {} {} {} c:/web/openacs-4/contrib/packages/survey/www/admin/import-responses.xql}
dbqd.contrib.packages.survey.www.admin.import-responses.delete_old_response {dbqd.contrib.packages.survey.www.admin.import-responses.delete_old_response {
      delete from survey_question_responses where response_id=:response_id
      } {} {} {} c:/web/openacs-4/contrib/packages/survey/www/admin/import-responses.xql}
dbqd.contrib.packages.survey.www.admin.import-responses.create_choice_response {dbqd.contrib.packages.survey.www.admin.import-responses.create_choice_response {
      insert into survey_question_responses(response_id, question_id,
      choice_id) values (:response_id, :question_id, :choice_id)
      } {} {} {} c:/web/openacs-4/contrib/packages/survey/www/admin/import-responses.xql}
dbqd.contrib.packages.survey.www.admin.import-responses.create_varchar_response {dbqd.contrib.packages.survey.www.admin.import-responses.create_varchar_response {
      insert into survey_question_responses(response_id, question_id,
      varchar_answer) values (:response_id, :question_id, :varchar_answer)
      } {} {} {} c:/web/openacs-4/contrib/packages/survey/www/admin/import-responses.xql}
dbqd.contrib.packages.survey.www.admin.import-responses.create_date_response {dbqd.contrib.packages.survey.www.admin.import-responses.create_date_response {
      insert into survey_question_responses(response_id, question_id,
      date_answer) values (:response_id, :question_id, :date_answer)
      } {} {} {} c:/web/openacs-4/contrib/packages/survey/www/admin/import-responses.xql}
dbqd.contrib.packages.survey.www.admin.import-responses.create_clob_response {dbqd.contrib.packages.survey.www.admin.import-responses.create_clob_response {
      insert into survey_question_responses
      (response_id, question_id, clob_answer)
      values 
      (:response_id, :question_id, :response_value)
      } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/packages/survey/www/admin/import-responses-postgresql.xql}
dbqd.contrib.packages.survey.www.admin.import-responses.create_boolean_response {dbqd.contrib.packages.survey.www.admin.import-responses.create_boolean_response {
      insert into survey_question_responses(response_id, question_id,
      boolean_answer) values (:response_id, :question_id, :boolean_answer)
      } {} {} {} c:/web/openacs-4/contrib/packages/survey/www/admin/import-responses.xql}
dbqd.contrib.packages.survey.www.admin.import-responses.create_number_response {dbqd.contrib.packages.survey.www.admin.import-responses.create_number_response {
      insert into survey_question_responses(response_id, question_id,
      number_answer) values (:response_id, :question_id, :number_answer)
      } {} {} {} c:/web/openacs-4/contrib/packages/survey/www/admin/import-responses.xql}
dbqd.contrib.packages.survey.www.admin.index.select_surveys {dbqd.contrib.packages.survey.www.admin.index.select_surveys {
      select survey_id, name, enabled_p
from surveys
where package_id= :package_id
order by enabled_p desc, upper(name)
      } {} {} {} c:/web/openacs-4/contrib/packages/survey/www/admin/index.xql}
dbqd.contrib.packages.survey.www.admin.modify-responses-2.update_survey_question_choice {dbqd.contrib.packages.survey.www.admin.modify-responses-2.update_survey_question_choice {
      update survey_question_choices
          set label = :trimmed_response
          where choice_id = :choice_id
      } {} {} {} c:/web/openacs-4/contrib/packages/survey/www/admin/modify-responses-2.xql}
dbqd.contrib.packages.survey.www.admin.modify-responses-2.update_survey_scores {dbqd.contrib.packages.survey.www.admin.modify-responses-2.update_survey_scores {
      update survey_choice_scores
                                           set score = :score
                                           where choice_id = :choice_id
                                           and variable_id = :variable_id
      } {} {} {} c:/web/openacs-4/contrib/packages/survey/www/admin/modify-responses-2.xql}
dbqd.contrib.packages.survey.www.admin.modify-responses.survey_name_from_id {dbqd.contrib.packages.survey.www.admin.modify-responses.survey_name_from_id {
      select name from survey_sections where section_id=:section_id
      } {} {} {} c:/web/openacs-4/contrib/packages/survey/www/admin/modify-responses.xql}
dbqd.contrib.packages.survey.www.admin.modify-responses.survey_question_text_from_id {dbqd.contrib.packages.survey.www.admin.modify-responses.survey_question_text_from_id {
      select question_text
from survey_questions
where question_id = :question_id
      } {} {} {} c:/web/openacs-4/contrib/packages/survey/www/admin/modify-responses.xql}
dbqd.contrib.packages.survey.www.admin.modify-responses.get_variable_names {dbqd.contrib.packages.survey.www.admin.modify-responses.get_variable_names {
      select variable_name, survey_variables.variable_id as variable_id
  from survey_variables, survey_variables_surveys_map
  where survey_variables.variable_id = survey_variables_surveys_map.variable_id
  and section_id = :section_id
  order by variable_name
      } {} {} {} c:/web/openacs-4/contrib/packages/survey/www/admin/modify-responses.xql}
dbqd.contrib.packages.survey.www.admin.modify-responses.get_choices {dbqd.contrib.packages.survey.www.admin.modify-responses.get_choices {
      select choice_id, label from survey_question_choices where question_id = :question_id order by choice_id
      } {} {} {} c:/web/openacs-4/contrib/packages/survey/www/admin/modify-responses.xql}
dbqd.contrib.packages.survey.www.admin.modify-responses.get_scores {dbqd.contrib.packages.survey.www.admin.modify-responses.get_scores {
      select score, survey_variables.variable_id as variable_id
      from survey_choice_scores, survey_variables
      where survey_choice_scores.choice_id = :choice_id
      and survey_choice_scores.variable_id = survey_variables.variable_id
      order by variable_name
      } {} {} {} c:/web/openacs-4/contrib/packages/survey/www/admin/modify-responses.xql}
dbqd.contrib.packages.survey.www.admin.name-edit.survey_update {dbqd.contrib.packages.survey.www.admin.name-edit.survey_update {
update surveys 
set name= :name,
    description= :description,
    description_html_p=:description_html_p
where survey_id = :survey_id
} {} {} {} c:/web/openacs-4/contrib/packages/survey/www/admin/name-edit.xql}
dbqd.contrib.packages.survey.www.admin.one-oracle.survey_questions {dbqd.contrib.packages.survey.www.admin.one-oracle.survey_questions {
select s.name as name, question_id, question_text, presentation_type, sort_order, active_p, required_p,
      s.section_id as section_id, branch_p
     from survey_questions q, survey_sections s
     where survey_id=:survey_id and q.section_id(+)=s.section_id
     order by s.sort_key,s.section_id, sort_order
      } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/packages/survey/www/admin/one-oracle.xql}
dbqd.contrib.packages.survey.www.admin.one.survey_questions {dbqd.contrib.packages.survey.www.admin.one.survey_questions {
     select s.name as name, question_id, question_text, presentation_type, sort_order, active_p, required_p,
     s.section_id as section_id, branch_p
     from survey_questions q right outer join survey_sections s
     on (q.section_id = s.section_id)
     where survey_id=:survey_id
     order by s.sort_key,s.section_id, sort_order
      } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/packages/survey/www/admin/one-postgresql.xql}
dbqd.contrib.packages.survey.www.admin.one-respondent-oracle.get_responses {dbqd.contrib.packages.survey.www.admin.one-respondent-oracle.get_responses {
      select response_id, case when initial_response_id is NULL then 'T' else 'F' end as original_p, survey_response.initial_response_id(response_id) as initial_response, creation_date 
from survey_responses, acs_objects
where response_id = object_id
and creation_user = :user_id
and survey_id=:survey_id
order by creation_date desc
      } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/packages/survey/www/admin/one-respondent-oracle.xql}
dbqd.contrib.packages.survey.www.admin.one-respondent.get_responses {dbqd.contrib.packages.survey.www.admin.one-respondent.get_responses {
      select response_id, case when initial_response_id is NULL then 'T' else 'F' end as original_p, survey_response__initial_response_id(response_id) as initial_response, creation_date 
from survey_responses, acs_objects
where response_id = object_id
and creation_user = :user_id
and survey_id=:survey_id
order by creation_date desc
      } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/packages/survey/www/admin/one-respondent-postgresql.xql}
dbqd.contrib.packages.survey.www.admin.one-respondent.user_name_from_id {dbqd.contrib.packages.survey.www.admin.one-respondent.user_name_from_id {
      select first_names, last_name from persons where person_id = :user_id
      } {} {} {} c:/web/openacs-4/contrib/packages/survey/www/admin/one-respondent.xql}
dbqd.contrib.packages.survey.www.admin.one.n_eligible {dbqd.contrib.packages.survey.www.admin.one.n_eligible {
	select count(*) from dotlrn_member_rels_full
	where rel_type='dotlrn_member_rel'
	and community_id=:community_id
      } {} {} {} c:/web/openacs-4/contrib/packages/survey/www/admin/one.xql}
dbqd.contrib.packages.survey.www.admin.one.styles {dbqd.contrib.packages.survey.www.admin.one.styles {
      select description,template_id from survey_templates
      } {} {} {} c:/web/openacs-4/contrib/packages/survey/www/admin/one.xql}
dbqd.contrib.packages.survey.www.admin.one.get_style {dbqd.contrib.packages.survey.www.admin.one.get_style {
      select template from surveys
      where survey_id=:survey_id
      } {} {} {} c:/web/openacs-4/contrib/packages/survey/www/admin/one.xql}
dbqd.contrib.packages.survey.www.admin.one.branchquestion {dbqd.contrib.packages.survey.www.admin.one.branchquestion {
      select question_text as bquestion, abstract_data_type, boolean_answer from survey_branches b, survey_conditions c, survey_questions q
      where q.question_id=c.question_id and c.condition_id=b.condition
      and b.section_id=:section_id
      } {} {} {} c:/web/openacs-4/contrib/packages/survey/www/admin/one.xql}
dbqd.contrib.packages.survey.www.admin.one.branchchoice {dbqd.contrib.packages.survey.www.admin.one.branchchoice {
      select label as bchoice from survey_branches b, survey_conditions c, survey_question_choices qc
      where qc.choice_id=c.choice_id and c.condition_id=b.condition
      and b.section_id=:section_id
      } {} {} {} c:/web/openacs-4/contrib/packages/survey/www/admin/one.xql}
dbqd.contrib.packages.survey.www.admin.predefined-question-2-oracle.already_inserted_p {dbqd.contrib.packages.survey.www.admin.predefined-question-2-oracle.already_inserted_p {
	select decode(count(*),0,0,1) from survey_questions where question_id = :question_id
    } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/packages/survey/www/admin/predefined-question-2-oracle.xql}
dbqd.contrib.packages.survey.www.admin.predefined-question-2-oracle.create_question {dbqd.contrib.packages.survey.www.admin.predefined-question-2-oracle.create_question {
	declare
	v integer;      
	    begin
		v := survey_question.new (
		    question_id => :question_id,
		    section_id => :section_id,
                    sort_order => :sort_order,
                    question_text => empty_clob(),
                    abstract_data_type => :abstract_data_type,
                    presentation_type => :presentation_type,
                    presentation_alignment => :presentation_alignment,
		    presentation_options => :presentation_options,
                    active_p => :active_p,
                    required_p => :required_p,
		    context_id => :section_id,
		    creation_user => :user_id,
		    question_html_p => :question_html_p,
		    summary_type => :summary_type,
		    answer_description => :answer_description,
		    predefined_question_id => :predefined_question_id
		);
	    end;
	
      } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/packages/survey/www/admin/predefined-question-2-oracle.xql}
dbqd.contrib.packages.survey.www.admin.predefined-question-2-oracle.prepare_add_question_text {dbqd.contrib.packages.survey.www.admin.predefined-question-2-oracle.prepare_add_question_text {
select question_id from survey_questions
where question_id = :question_id
for update of question_text
      } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/packages/survey/www/admin/predefined-question-2-oracle.xql}
dbqd.contrib.packages.survey.www.admin.predefined-question-2.already_inserted_p {dbqd.contrib.packages.survey.www.admin.predefined-question-2.already_inserted_p {
	select 
	case when count(*)=0 then '0' 
	     else '1'
	end
	from survey_questions where question_id = :question_id
    } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/packages/survey/www/admin/predefined-question-2-postgresql.xql}
dbqd.contrib.packages.survey.www.admin.predefined-question-2.create_question {dbqd.contrib.packages.survey.www.admin.predefined-question-2.create_question {
		select survey_question__new (
		    :question_id,
		    :section_id,
                    :sort_order,
		    :question_text,
                    :abstract_data_type,
		    :required_p,
		    :active_p,
                    :presentation_type,
		    :presentation_options,
                    :presentation_alignment,
		    :question_html_p,
		    :summary_type,
		    :answer_description,
		    :predefined_question_id,
		    :user_id,
		    :section_id             
		)	
      } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/packages/survey/www/admin/predefined-question-2-postgresql.xql}
dbqd.contrib.packages.survey.www.admin.predefined-question-2.prepare_add_question_text {dbqd.contrib.packages.survey.www.admin.predefined-question-2.prepare_add_question_text {
select question_id from survey_questions
where question_id = :question_id
for update
      } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/packages/survey/www/admin/predefined-question-2-postgresql.xql}
dbqd.contrib.packages.survey.www.admin.predefined-question-2.get_predefinition {dbqd.contrib.packages.survey.www.admin.predefined-question-2.get_predefinition {
      select * from survey_predefined_questions where predefined_question_id=:predefined_question_id
      } {} {} {} c:/web/openacs-4/contrib/packages/survey/www/admin/predefined-question-2.xql}
dbqd.contrib.packages.survey.www.admin.predefined-question-2.renumber_sort_orders {dbqd.contrib.packages.survey.www.admin.predefined-question-2.renumber_sort_orders {
      update survey_questions
                                   set sort_order = sort_order + 1
                                   where section_id = :section_id
                                   and sort_order > :after
      } {} {} {} c:/web/openacs-4/contrib/packages/survey/www/admin/predefined-question-2.xql}
dbqd.contrib.packages.survey.www.admin.predefined-question-2.max_question {dbqd.contrib.packages.survey.www.admin.predefined-question-2.max_question {
	select max(sort_order) from survey_questions
	where section_id=:section_id
    } {} {} {} c:/web/openacs-4/contrib/packages/survey/www/admin/predefined-question-2.xql}
dbqd.contrib.packages.survey.www.admin.predefined-question-2.add_question_text {dbqd.contrib.packages.survey.www.admin.predefined-question-2.add_question_text {
      
	    update survey_questions
	    set question_text = :question_text
	    where question_id = :question_id
	
      } {} {} {} c:/web/openacs-4/contrib/packages/survey/www/admin/predefined-question-2.xql}
dbqd.contrib.packages.survey.www.admin.predefined-question-2.add_new_choices {dbqd.contrib.packages.survey.www.admin.predefined-question-2.add_new_choices {
      insert into
      survey_question_choices(choice_id,predef_choice_id,question_id,label,numeric_value,sort_order,presentation_alignment,more_info_type)
      (select
      :new_choice,choice_id,:question_id,label,numeric_value,sort_order,presentation_alignment,more_info_type
      from survey_predef_question_choices where question_id=:predefined_question_id)
      } {} {} {} c:/web/openacs-4/contrib/packages/survey/www/admin/predefined-question-2.xql}
dbqd.contrib.packages.survey.www.admin.predefined-question-2.all_choices {dbqd.contrib.packages.survey.www.admin.predefined-question-2.all_choices {
      select distinct survey_question_all_choices(question_id) as
      all_choices from
      survey_questions where section_id=:section_id
      } {} {} {} c:/web/openacs-4/contrib/packages/survey/www/admin/predefined-question-2.xql}
dbqd.contrib.packages.survey.www.admin.predefined-question-2.insert_survey_question_choice {dbqd.contrib.packages.survey.www.admin.predefined-question-2.insert_survey_question_choice {
      insert into survey_question_choices
      (choice_id, question_id, label, sort_order)
      values
      (:choice_id, :question_id, :trimmed_response, :count)
      } {} {} {} c:/web/openacs-4/contrib/packages/survey/www/admin/predefined-question-2.xql}
dbqd.contrib.packages.survey.www.admin.predefined-question-2.insert_survey_scores {dbqd.contrib.packages.survey.www.admin.predefined-question-2.insert_survey_scores {
      insert into survey_choice_scores
      (choice_id, variable_id, score)
      values
      (:choice_id, :variable_id, :score)
      } {} {} {} c:/web/openacs-4/contrib/packages/survey/www/admin/predefined-question-2.xql}
dbqd.contrib.packages.survey.www.admin.predefined-question-admin.get_predefined_questions {dbqd.contrib.packages.survey.www.admin.predefined-question-admin.get_predefined_questions {
      select question_text,predefined_question_id from survey_predefined_questions
      } {} {} {} c:/web/openacs-4/contrib/packages/survey/www/admin/predefined-question-admin.xql}
dbqd.contrib.packages.survey.www.admin.predefined-question-ae-2-oracle.new_predefined_question {dbqd.contrib.packages.survey.www.admin.predefined-question-ae-2-oracle.new_predefined_question {
declare v integer;
begin
    v:=survey_predefined_question.new(
	predefined_question_id => :predefined_question_id,
	question_text =>empty_clob(),
	question_html_p =>:question_html_p,
	abstract_data_type =>:abstract_data_type,
	presentation_type => :presentation_type,
	presentation_options => :presentation_options,
	presentation_alignment => :presentation_alignment,
	summary_type => null,
	action_type => :action_type,
	table_name => :table_name,
	column_name => :column_name,
	key_name => :key_name,
	creation_user => :user_id,
	context_id => :package_id
	);
end;
      } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/packages/survey/www/admin/predefined-question-ae-2-oracle.xql}
dbqd.contrib.packages.survey.www.admin.predefined-question-ae-2.new_predefined_question {dbqd.contrib.packages.survey.www.admin.predefined-question-ae-2.new_predefined_question {
    select survey_predefined_question__new(
	:predefined_question_id,
	:question_text,
	:abstract_data_type,
	:presentation_type,
	:presentation_options,
	:presentation_alignment,
	:question_html_p,
	NULL,
	:action_type,
	NULL,
	:table_name,
	:column_name,
	:key_name,
	:user_id,
	null);
      } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/packages/survey/www/admin/predefined-question-ae-2-postgresql.xql}
dbqd.contrib.packages.survey.www.admin.predefined-question-ae-2.survey_question_valid_responses {dbqd.contrib.packages.survey.www.admin.predefined-question-ae-2.survey_question_valid_responses {
      select label from survey_predef_question_choices where question_id=:predefined_question_id
      } {} {} {} c:/web/openacs-4/contrib/packages/survey/www/admin/predefined-question-ae-2.xql}
dbqd.contrib.packages.survey.www.admin.predefined-question-ae-2.update_question_text {dbqd.contrib.packages.survey.www.admin.predefined-question-ae-2.update_question_text {
      update survey_predefined_questions set
      question_text=:question_text where predefined_question_id=:predefined_question_id
      } {} {} {} c:/web/openacs-4/contrib/packages/survey/www/admin/predefined-question-ae-2.xql}
dbqd.contrib.packages.survey.www.admin.predefined-question-ae-2.insert_survey_question_choice {dbqd.contrib.packages.survey.www.admin.predefined-question-ae-2.insert_survey_question_choice {
      insert into survey_predef_question_choices (choice_id, question_id, label, sort_order)
      values (:choice_id, :predefined_question_id, :trimmed_response, :count)
      } {} {} {} c:/web/openacs-4/contrib/packages/survey/www/admin/predefined-question-ae-2.xql}
dbqd.contrib.packages.survey.www.admin.predefined-question-ae-2.edit_predefined_question {dbqd.contrib.packages.survey.www.admin.predefined-question-ae-2.edit_predefined_question {
      update survey_predefined_questions set
      question_text=:question_text,question_html_p=:question_html_p,abstract_data_type=:abstract_data_type,presentation_type=:presentation_type,presentation_options=:presentation_options,presentation_alignment=:presentation_alignment,action_type=:action_type,table_name=:table_name,column_name=:column_name,key_name=:key_name
      where predefined_question_id=:predefined_question_id
      } {} {} {} c:/web/openacs-4/contrib/packages/survey/www/admin/predefined-question-ae-2.xql}
dbqd.contrib.packages.survey.www.admin.predefined-question.predefined_questions {dbqd.contrib.packages.survey.www.admin.predefined-question.predefined_questions {
      select question_text,predefined_question_id from survey_predefined_questions
      } {} {} {} c:/web/openacs-4/contrib/packages/survey/www/admin/predefined-question.xql}
dbqd.contrib.packages.survey.www.admin.public-toggle-oracle.survey_public_toggle {dbqd.contrib.packages.survey.www.admin.public-toggle-oracle.survey_public_toggle {
      update surveys 
set public_p = util.logical_negation(public_p)
where survey_id = :survey_id
      } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/packages/survey/www/admin/public-toggle-oracle.xql}
dbqd.contrib.packages.survey.www.admin.public-toggle.survey_public_toggle {dbqd.contrib.packages.survey.www.admin.public-toggle.survey_public_toggle {
      update surveys 
set public_p = util__logical_negation(public_p)
where survey_id = :survey_id
      } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/packages/survey/www/admin/public-toggle-postgresql.xql}
dbqd.contrib.packages.survey.www.admin.public-toggle.public_id {dbqd.contrib.packages.survey.www.admin.public-toggle.public_id {
      select object_id from acs_magic_objects where name='the_public'
      } {} {} {} c:/web/openacs-4/contrib/packages/survey/www/admin/public-toggle.xql}
dbqd.contrib.packages.survey.www.admin.public-toggle.survey_public_p {dbqd.contrib.packages.survey.www.admin.public-toggle.survey_public_p {
      select public_p from surveys where survey_id = :survey_id
      } {} {} {} c:/web/openacs-4/contrib/packages/survey/www/admin/public-toggle.xql}
dbqd.contrib.packages.survey.www.admin.question-active-toggle-oracle.survey_question_required_toggle {dbqd.contrib.packages.survey.www.admin.question-active-toggle-oracle.survey_question_required_toggle {
      update survey_questions set active_p = util.logical_negation(active_p)
where section_id = :section_id
and question_id = :question_id
      } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/packages/survey/www/admin/question-active-toggle-oracle.xql}
dbqd.contrib.packages.survey.www.admin.question-active-toggle.survey_question_required_toggle {dbqd.contrib.packages.survey.www.admin.question-active-toggle.survey_question_required_toggle {
      update survey_questions set active_p = util__logical_negation(active_p)
where section_id = :section_id
and question_id = :question_id
      } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/packages/survey/www/admin/question-active-toggle-postgresql.xql}
dbqd.contrib.packages.survey.www.admin.question-add-2.count_variable_names {dbqd.contrib.packages.survey.www.admin.question-add-2.count_variable_names {
      select count(variable_name) as n_variables
	from survey_variables, survey_variables_surveys_map
        where survey_variables.variable_id = survey_variables_surveys_map.variable_id
        and section_id = :section_id
      } {} {} {} c:/web/openacs-4/contrib/packages/survey/www/admin/question-add-2.xql}
dbqd.contrib.packages.survey.www.admin.question-add-2.select_variable_names {dbqd.contrib.packages.survey.www.admin.question-add-2.select_variable_names {
       select variable_name, survey_variables.variable_id as variable_id
               from survey_variables, survey_variables_surveys_map
               where survey_variables.variable_id = survey_variables_surveys_map.variable_id
               and section_id = :section_id order by survey_variables.variable_id
      } {} {} {} c:/web/openacs-4/contrib/packages/survey/www/admin/question-add-2.xql}
dbqd.contrib.packages.survey.www.admin.question-add-3-oracle.already_inserted_p {dbqd.contrib.packages.survey.www.admin.question-add-3-oracle.already_inserted_p {
	select decode(count(*),0,0,1) from survey_questions where question_id = :question_id
    } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/packages/survey/www/admin/question-add-3-oracle.xql}
dbqd.contrib.packages.survey.www.admin.question-add-3-oracle.create_question {dbqd.contrib.packages.survey.www.admin.question-add-3-oracle.create_question {
      
	    begin
		:1 := survey_question.new (
		    question_id => :question_id,
		    section_id => :section_id,
                    sort_order => :sort_order,
                    question_text => empty_clob(),
                    abstract_data_type => :abstract_data_type,
                    presentation_type => :presentation_type,
                    presentation_alignment => :presentation_alignment,
		    presentation_options => :presentation_options,
                    active_p => :active_p,
                    required_p => :required_p,
		    context_id => :section_id,
		    creation_user => :user_id,
		    question_html_p => :question_html_p,
		    summary_type => :summary_type,
		    answer_description => :answer_description
		);
	    end;
	
      } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/packages/survey/www/admin/question-add-3-oracle.xql}
dbqd.contrib.packages.survey.www.admin.question-add-3.already_inserted_p {dbqd.contrib.packages.survey.www.admin.question-add-3.already_inserted_p {
	select case when count(*) = 0 then 0 else 1 end from survey_questions where question_id = :question_id
    } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/packages/survey/www/admin/question-add-3-postgresql.xql}
dbqd.contrib.packages.survey.www.admin.question-add-3.create_question {dbqd.contrib.packages.survey.www.admin.question-add-3.create_question {

	select survey_question__new (
		    :question_id,
		    :section_id,
                    :sort_order,
                    :question_text, 
                    :abstract_data_type,
                    :required_p,
                    :active_p,
                    :presentation_type,
		    :presentation_options,
                    :presentation_alignment,
		    :question_html_p,
		    :summary_type,
		    :answer_description,
		    NULL,
		    :user_id,
		    :section_id
	)
	
      } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/packages/survey/www/admin/question-add-3-postgresql.xql}
dbqd.contrib.packages.survey.www.admin.question-add-3.all_choices {dbqd.contrib.packages.survey.www.admin.question-add-3.all_choices {
      select distinct survey_question_all_choices(question_id) as
      all_choices from
      survey_questions where section_id=:section_id
      } {} {} {} c:/web/openacs-4/contrib/packages/survey/www/admin/question-add-3.xql}
dbqd.contrib.packages.survey.www.admin.question-add-3.renumber_sort_orders {dbqd.contrib.packages.survey.www.admin.question-add-3.renumber_sort_orders {
      update survey_questions
                                   set sort_order = sort_order + 1
                                   where section_id = :section_id
                                   and sort_order > :after
      } {} {} {} c:/web/openacs-4/contrib/packages/survey/www/admin/question-add-3.xql}
dbqd.contrib.packages.survey.www.admin.question-add-3.max_question {dbqd.contrib.packages.survey.www.admin.question-add-3.max_question {
	select max(sort_order) from survey_questions
	where section_id=:section_id
    } {} {} {} c:/web/openacs-4/contrib/packages/survey/www/admin/question-add-3.xql}
dbqd.contrib.packages.survey.www.admin.question-add-3.add_question_text {dbqd.contrib.packages.survey.www.admin.question-add-3.add_question_text {
      
	    update survey_questions
	    set question_text = :question_text
	    where question_id = :question_id
	
      } {} {} {} c:/web/openacs-4/contrib/packages/survey/www/admin/question-add-3.xql}
dbqd.contrib.packages.survey.www.admin.question-add-3.insert_survey_question_choice {dbqd.contrib.packages.survey.www.admin.question-add-3.insert_survey_question_choice {
      insert into survey_question_choices
      (choice_id, question_id, label, sort_order)
      values
      (:choice_id, :question_id, :trimmed_response, :count)
      } {} {} {} c:/web/openacs-4/contrib/packages/survey/www/admin/question-add-3.xql}
dbqd.contrib.packages.survey.www.admin.question-add-3.insert_survey_scores {dbqd.contrib.packages.survey.www.admin.question-add-3.insert_survey_scores {
      insert into survey_choice_scores
      (choice_id, variable_id, score)
      values
      (:choice_id, :variable_id, :score)
      } {} {} {} c:/web/openacs-4/contrib/packages/survey/www/admin/question-add-3.xql}
dbqd.contrib.packages.survey.www.admin.question-copy.get_section_id_from_question {dbqd.contrib.packages.survey.www.admin.question-copy.get_section_id_from_question {
select section_id from survey_questions
    where question_id=:question_id
} {} {} {} c:/web/openacs-4/contrib/packages/survey/www/admin/question-copy.xql}
dbqd.contrib.packages.survey.www.admin.question-delete-oracle.questions_to_delete {dbqd.contrib.packages.survey.www.admin.question-delete-oracle.questions_to_delete {
	select question_id from survey_questions where
	section_id=:section_id and
	0=dbms_lob.compare(question_text,(select question_text from
	survey_questions where question_id=:question_id))
} {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/packages/survey/www/admin/question-delete-oracle.xql}
dbqd.contrib.packages.survey.www.admin.question-delete-oracle.survey_delete_question {dbqd.contrib.packages.survey.www.admin.question-delete-oracle.survey_delete_question {
	    begin
        	survey_question.remove (:question_id);
	    end;
} {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/packages/survey/www/admin/question-delete-oracle.xql}
dbqd.contrib.packages.survey.www.admin.question-delete.questions_to_delete {dbqd.contrib.packages.survey.www.admin.question-delete.questions_to_delete {
	select question_id from survey_questions where
	section_id=:section_id and
	question_text = (select question_text from
	survey_questions where question_id=:question_id))
} {} {} {postgresql 7.1} c:/web/openacs-4/contrib/packages/survey/www/admin/question-delete-postgresql.xql}
dbqd.contrib.packages.survey.www.admin.question-delete.survey_delete_question {dbqd.contrib.packages.survey.www.admin.question-delete.survey_delete_question {

            select survey_question__remove (:question_id);
	
      } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/packages/survey/www/admin/question-delete-postgresql.xql}
dbqd.contrib.packages.survey.www.admin.question-delete.section_id_from_question_id {dbqd.contrib.packages.survey.www.admin.question-delete.section_id_from_question_id {
	select section_id
	  from survey_questions
	 where question_id = :question_id
      } {} {} {} c:/web/openacs-4/contrib/packages/survey/www/admin/question-delete.xql}
dbqd.contrib.packages.survey.www.admin.question-delete.survey_number_responses {dbqd.contrib.packages.survey.www.admin.question-delete.survey_number_responses {
      select count(*)
from survey_question_responses
where question_id = :question_id
      } {} {} {} c:/web/openacs-4/contrib/packages/survey/www/admin/question-delete.xql}
dbqd.contrib.packages.survey.www.admin.question-delete.block_section_p {dbqd.contrib.packages.survey.www.admin.question-delete.block_section_p {
	select block_section_p from survey_sections
	where section_id=:section_id
} {} {} {} c:/web/openacs-4/contrib/packages/survey/www/admin/question-delete.xql}
dbqd.contrib.packages.survey.www.admin.question-delete.survey_question_responses_delete {dbqd.contrib.packages.survey.www.admin.question-delete.survey_question_responses_delete {
	delete from survey_question_responses
	where question_id=:question_id
} {} {} {} c:/web/openacs-4/contrib/packages/survey/www/admin/question-delete.xql}
dbqd.contrib.packages.survey.www.admin.question-delete.survey_question_choices_delete {dbqd.contrib.packages.survey.www.admin.question-delete.survey_question_choices_delete {
      delete from survey_question_choices where
         question_id = :question_id
      } {} {} {} c:/web/openacs-4/contrib/packages/survey/www/admin/question-delete.xql}
dbqd.contrib.packages.survey.www.admin.question-delete.survey_renumber_questions {dbqd.contrib.packages.survey.www.admin.question-delete.survey_renumber_questions {
update survey_questions set sort_order=sort_order - 1 
where section_id = :section_id
and sort_order > :sort_order
} {} {} {} c:/web/openacs-4/contrib/packages/survey/www/admin/question-delete.xql}
dbqd.contrib.packages.survey.www.admin.question-delete.get_question_details {dbqd.contrib.packages.survey.www.admin.question-delete.get_question_details {
	select * from survey_questions where question_id=:question_id
} {} {} {} c:/web/openacs-4/contrib/packages/survey/www/admin/question-delete.xql}
dbqd.contrib.packages.survey.www.admin.question-modify-text.survey_question_text_update {dbqd.contrib.packages.survey.www.admin.question-modify-text.survey_question_text_update {
      update survey_questions set question_text=:question_text
      where question_id=:question_id
      } {} {} {} c:/web/openacs-4/contrib/packages/survey/www/admin/question-modify-text.xql}
dbqd.contrib.packages.survey.www.admin.question-modify-text.survey_name_from_id {dbqd.contrib.packages.survey.www.admin.question-modify-text.survey_name_from_id {
      select name from survey_sections where section_id=:section_id
      } {} {} {} c:/web/openacs-4/contrib/packages/survey/www/admin/question-modify-text.xql}
dbqd.contrib.packages.survey.www.admin.question-modify-text.survey_question_text_from_id {dbqd.contrib.packages.survey.www.admin.question-modify-text.survey_question_text_from_id {
select question_text
from survey_questions
where question_id = :question_id
      } {} {} {} c:/web/openacs-4/contrib/packages/survey/www/admin/question-modify-text.xql}
dbqd.contrib.packages.survey.www.admin.question-modify.survey_number_responses {dbqd.contrib.packages.survey.www.admin.question-modify.survey_number_responses {
	select count(*)
	from survey_question_responses
	where question_id=:question_id
} {} {} {} c:/web/openacs-4/contrib/packages/survey/www/admin/question-modify.xql}
dbqd.contrib.packages.survey.www.admin.question-modify.presentation {dbqd.contrib.packages.survey.www.admin.question-modify.presentation {
select presentation_type, presentation_options, abstract_data_type,
sort_order as anchor
from survey_questions
where question_id=:question_id
} {} {} {} c:/web/openacs-4/contrib/packages/survey/www/admin/question-modify.xql}
dbqd.contrib.packages.survey.www.admin.question-modify.sections {dbqd.contrib.packages.survey.www.admin.question-modify.sections {
	select name,section_id from survey_sections
	where survey_id=:survey_id and block_section_p='f'
	order by sort_key
} {} {} {} c:/web/openacs-4/contrib/packages/survey/www/admin/question-modify.xql}
dbqd.contrib.packages.survey.www.admin.question-modify.survey_question_valid_responses {dbqd.contrib.packages.survey.www.admin.question-modify.survey_question_valid_responses {
select label from survey_question_choices
where question_id=:question_id
order by sort_order
} {} {} {} c:/web/openacs-4/contrib/packages/survey/www/admin/question-modify.xql}
dbqd.contrib.packages.survey.www.admin.question-modify.survey_question_details {dbqd.contrib.packages.survey.www.admin.question-modify.survey_question_details {
select 
	question_id,
	question_text,
	abstract_data_type,
	presentation_alignment,
	presentation_options,
	sort_order as question_number,
	required_p,
	sort_order
from survey_questions
where question_id = :question_id
      } {} {} {} c:/web/openacs-4/contrib/packages/survey/www/admin/question-modify.xql}
dbqd.contrib.packages.survey.www.admin.question-modify.new_anchor {dbqd.contrib.packages.survey.www.admin.question-modify.new_anchor {
	select max(sort_order) from survey_questions where question_id=:question_id
} {} {} {} c:/web/openacs-4/contrib/packages/survey/www/admin/question-modify.xql}
dbqd.contrib.packages.survey.www.admin.question-modify.survey_question_update {dbqd.contrib.packages.survey.www.admin.question-modify.survey_question_update {
update survey_questions
     set question_text=:question_text,
	 section_id=:section_id,
	 sort_order=:anchor,
         active_p=:active_p,
         required_p=:required_p,
	 presentation_type=:presentation_type,
	presentation_options=:presentation_options
     where question_id=:question_id
} {} {} {} c:/web/openacs-4/contrib/packages/survey/www/admin/question-modify.xql}
dbqd.contrib.packages.survey.www.admin.question-modify.get_choice_id {dbqd.contrib.packages.survey.www.admin.question-modify.get_choice_id {
        select choice_id from survey_question_choices
        where question_id=:question_id
        order by sort_order
} {} {} {} c:/web/openacs-4/contrib/packages/survey/www/admin/question-modify.xql}
dbqd.contrib.packages.survey.www.admin.question-modify.insert_new_choice {dbqd.contrib.packages.survey.www.admin.question-modify.insert_new_choice {
insert into survey_question_choices
(choice_id, question_id, label, sort_order)
values (:new_choice_id, :question_id, :choice_name, :choice_value)
} {} {} {} c:/web/openacs-4/contrib/packages/survey/www/admin/question-modify.xql}
dbqd.contrib.packages.survey.www.admin.question-modify.update_new_choice {dbqd.contrib.packages.survey.www.admin.question-modify.update_new_choice {
update survey_question_choices
                set label=:choice_name where choice_id=:choice_id_to_update
} {} {} {} c:/web/openacs-4/contrib/packages/survey/www/admin/question-modify.xql}
dbqd.contrib.packages.survey.www.admin.question-modify.delete_old_choice {dbqd.contrib.packages.survey.www.admin.question-modify.delete_old_choice {
delete from survey_question_choices where choice_id = :choice_id_to_delete
} {} {} {} c:/web/openacs-4/contrib/packages/survey/www/admin/question-modify.xql}
dbqd.contrib.packages.survey.www.admin.question-modify.survey_name_from_id {dbqd.contrib.packages.survey.www.admin.question-modify.survey_name_from_id {
      select name from survey_sections where section_id=:section_id
      } {} {} {} c:/web/openacs-4/contrib/packages/survey/www/admin/question-modify.xql}
dbqd.contrib.packages.survey.www.admin.question-required-toggle-oracle.survey_question_required_toggle {dbqd.contrib.packages.survey.www.admin.question-required-toggle-oracle.survey_question_required_toggle {
      update survey_questions set required_p = util.logical_negation(required_p)
where section_id = :section_id
and question_id = :question_id
      } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/packages/survey/www/admin/question-required-toggle-oracle.xql}
dbqd.contrib.packages.survey.www.admin.question-required-toggle.survey_question_required_toggle {dbqd.contrib.packages.survey.www.admin.question-required-toggle.survey_question_required_toggle {
      update survey_questions set required_p = util__logical_negation(required_p)
where section_id = :section_id
and question_id = :question_id
      } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/packages/survey/www/admin/question-required-toggle-postgresql.xql}
dbqd.contrib.packages.survey.www.admin.question-swap-oracle.swap_sort_orders {dbqd.contrib.packages.survey.www.admin.question-swap-oracle.swap_sort_orders {
update survey_questions
set sort_order = (case when sort_order = :sort_order then :next_sort_order when sort_order = :next_sort_order then :sort_order end)
where section_id = :section_id
and sort_order in (:sort_order, :next_sort_order)
      } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/packages/survey/www/admin/question-swap-oracle.xql}
dbqd.contrib.packages.survey.www.admin.question-swap.swap_sort_orders {dbqd.contrib.packages.survey.www.admin.question-swap.swap_sort_orders {
update survey_questions
set sort_order = (case when sort_order = (cast (:sort_order as integer)) then
      cast (:next_sort_order as integer)
      when 
sort_order = (cast (:next_sort_order as integer)) then cast (:sort_order as integer) end)
where section_id = :section_id
and sort_order in (:sort_order, :next_sort_order)
      } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/packages/survey/www/admin/question-swap-postgresql.xql}
dbqd.contrib.packages.survey.www.admin.respondents.select_respondents {dbqd.contrib.packages.survey.www.admin.respondents.select_respondents {
            select persons.first_names, persons.last_name,
                   acs_objects.creation_user as user_id,
                   parties.email
            from survey_responses_latest s,
                 persons,
                 parties,
                 acs_objects
            where s.survey_id=:survey_id
            and s.response_id = acs_objects.object_id
            and acs_objects.creation_user = persons.person_id
            and persons.person_id = parties.party_id
            group by acs_objects.creation_user,
                     parties.email,
                     persons.first_names,
                     persons.last_name
    [ad_order_by_from_sort_spec $orderby $table_def]
        } {} {} {} c:/web/openacs-4/contrib/packages/survey/www/admin/respondents.xql}
dbqd.contrib.packages.survey.www.admin.response-delete-oracle.get_response_info {dbqd.contrib.packages.survey.www.admin.response-delete-oracle.get_response_info {
select survey_id, survey_response.initial_user_id(response_id) as user_id,
	u.first_names || ' ' || last_name as user_name, 
	o.creation_date as response_date
from survey_responses, cc_users u, acs_objects o
where response_id=:response_id
and o.object_id = response_id
and u.user_id = survey_response.initial_user_id(response_id)
} {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/packages/survey/www/admin/response-delete-oracle.xql}
dbqd.contrib.packages.survey.www.admin.response-delete-oracle.delete_response {dbqd.contrib.packages.survey.www.admin.response-delete-oracle.delete_response {
begin
	survey_response.remove(:response_id);
end;
} {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/packages/survey/www/admin/response-delete-oracle.xql}
dbqd.contrib.packages.survey.www.admin.response-delete.get_response_info {dbqd.contrib.packages.survey.www.admin.response-delete.get_response_info {
select survey_id, survey_response__initial_user_id(response_id) as user_id,
	u.first_names || ' ' || last_name as user_name, 
	o.creation_date as response_date
from survey_responses, cc_users u, acs_objects o
where response_id=:response_id
and o.object_id = response_id
and u.user_id = survey_response__initial_user_id(response_id)
} {} {} {postgresql 7.1} c:/web/openacs-4/contrib/packages/survey/www/admin/response-delete-postgresql.xql}
dbqd.contrib.packages.survey.www.admin.response-delete.delete_response {dbqd.contrib.packages.survey.www.admin.response-delete.delete_response {
	select survey_response__remove(:response_id);
} {} {} {postgresql 7.1} c:/web/openacs-4/contrib/packages/survey/www/admin/response-delete-postgresql.xql}
dbqd.contrib.packages.survey.www.admin.response-drill-down-oracle.all_users_for_response {dbqd.contrib.packages.survey.www.admin.response-drill-down-oracle.all_users_for_response {
      
select
  decode(creation_user,null,'Anonymous user',person.name(creation_user)) as responder_name,
  creation_user as user_id,
  creation_date
from
  acs_objects,
  survey_responses sr,
  survey_question_responses qr
where
  qr.response_id = sr.response_id
  and qr.response_id = object_id
  and qr.question_id = :question_id
  and qr.choice_id = :choice_id
      } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/packages/survey/www/admin/response-drill-down-oracle.xql}
dbqd.contrib.packages.survey.www.admin.response-drill-down.all_users_for_response {dbqd.contrib.packages.survey.www.admin.response-drill-down.all_users_for_response {
      
select
  (case when creation_user IS NULL then 'Anonymous user'
  else person__name(creation_user)
  end) as responder_name,
  creation_user as user_id,
  creation_date
from
  acs_objects,
  survey_responses sr,
  survey_question_responses qr
where
  qr.response_id = sr.response_id
  and qr.response_id = object_id
  and qr.question_id = :question_id
  and qr.choice_id = :choice_id
      } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/packages/survey/www/admin/response-drill-down-postgresql.xql}
dbqd.contrib.packages.survey.www.admin.response-drill-down.get_question_text {dbqd.contrib.packages.survey.www.admin.response-drill-down.get_question_text {
      
select section_id, question_text, section_id
from survey_questions
where question_id = :question_id

      } {} {} {} c:/web/openacs-4/contrib/packages/survey/www/admin/response-drill-down.xql}
dbqd.contrib.packages.survey.www.admin.response-drill-down.get_response_text {dbqd.contrib.packages.survey.www.admin.response-drill-down.get_response_text {
    
select label as response_text
from survey_question_choices
where choice_id = :choice_id
      } {} {} {} c:/web/openacs-4/contrib/packages/survey/www/admin/response-drill-down.xql}
dbqd.contrib.packages.survey.www.admin.response-editable-toggle-oracle.survey_response_editable_toggle {dbqd.contrib.packages.survey.www.admin.response-editable-toggle-oracle.survey_response_editable_toggle {
      update surveys set editable_p = util.logical_negation(editable_p)
where survey_id = :survey_id
      } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/packages/survey/www/admin/response-editable-toggle-oracle.xql}
dbqd.contrib.packages.survey.www.admin.response-editable-toggle.survey_response_editable_toggle {dbqd.contrib.packages.survey.www.admin.response-editable-toggle.survey_response_editable_toggle {
      update surveys set editable_p = util__logical_negation(editable_p)
where survey_id = :survey_id
      } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/packages/survey/www/admin/response-editable-toggle-postgresql.xql}
dbqd.contrib.packages.survey.www.admin.response-limit-toggle-oracle.survey_reponse_toggle {dbqd.contrib.packages.survey.www.admin.response-limit-toggle-oracle.survey_reponse_toggle {
      update surveys 
set single_response_p = util.logical_negation(single_response_p)
where survey_id = :survey_id
      } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/packages/survey/www/admin/response-limit-toggle-oracle.xql}
dbqd.contrib.packages.survey.www.admin.response-limit-toggle.survey_reponse_toggle {dbqd.contrib.packages.survey.www.admin.response-limit-toggle.survey_reponse_toggle {
      update surveys 
set single_response_p = util__logical_negation(single_response_p)
where survey_id = :survey_id
      } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/packages/survey/www/admin/response-limit-toggle-postgresql.xql}
dbqd.contrib.packages.survey.www.admin.responses-export-oracle.get_all_survey_question_responses {dbqd.contrib.packages.survey.www.admin.responses-export-oracle.get_all_survey_question_responses {
select    
    sub.response_id,
    sub.question_id,
    sub.email,
    sub.first_names,
    sub.last_name,
    sub.user_id,
    sub.creation_date,
    qr.boolean_answer,
    qr.number_answer,
    qr.date_answer,
    qr.varchar_answer,
    qr.clob_answer,
    qr.attachment_answer,
    qc.label
from 
(select 
    r.response_id,
    q.question_id,
    u.email,
    u.first_names,
    u.last_name,
    u.user_id,
    to_char(r.creation_date,'YYYY-MM-DD HH24:MI:SS') as creation_date,
    q.sort_order as q_sort_order
from survey_responses_latest r, cc_users u,survey_questions q, survey_sections s
     where
    s.survey_id=:survey_id
and r.survey_id=:survey_id
     and q.section_id=s.section_id
and r.initial_user_id=u.user_id) sub, survey_question_responses qr,
     survey_question_choices qc
where qr.question_id(+)=sub.question_id
and sub.response_id=qr.response_id(+)
     and qc.choice_id(+)=qr.choice_id
  order by
    sub.response_id,
    sub.q_sort_order,
    sub.question_id,
    qc.sort_order
} {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/packages/survey/www/admin/responses-export-oracle.xql}
dbqd.contrib.packages.survey.www.admin.responses-export-oracle.get_all_survey_question_responses_anonymous {dbqd.contrib.packages.survey.www.admin.responses-export-oracle.get_all_survey_question_responses_anonymous {
select    
    sub.response_id,
    sub.question_id,
    sub.email,
    sub.first_names,
    sub.last_name,
    sub.user_id,
    sub.creation_date,
    qr.boolean_answer,
    qr.number_answer,
    qr.date_answer,
    qr.varchar_answer,
    qr.clob_answer,
    qr.attachment_answer,
    qc.label
from 
(select 
    r.response_id,
    q.question_id,
    u.email,
    nvl(u.first_names,'Unregistered') as first_names,
    nvl(u.last_name,'Visitor') as last_name,
    u.user_id,
    to_char(r.creation_date,'YYYY-MM-DD HH24:MI:SS') as creation_date,
    q.sort_order as q_sort_order
from survey_responses_latest r, cc_users u,survey_questions q, survey_sections s
     where
    s.survey_id=:survey_id
and r.survey_id=:survey_id
     and q.section_id=s.section_id
and nvl(r.initial_user_id,0)=u.user_id(+)) sub, survey_question_responses qr,
     survey_question_choices qc
where qr.question_id(+)=sub.question_id
and sub.response_id=qr.response_id(+)
     and qc.choice_id(+)=qr.choice_id
  order by
    sub.response_id,
    sub.q_sort_order,
    sub.question_id,
    qc.sort_order
} {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/packages/survey/www/admin/responses-export-oracle.xql}
dbqd.contrib.packages.survey.www.admin.responses-export.get_all_survey_question_responses {dbqd.contrib.packages.survey.www.admin.responses-export.get_all_survey_question_responses {
select    
    sub.response_id,
    sub.question_id,
    sub.email,
    sub.first_names,
    sub.last_name,
    sub.user_id,
    sub.creation_date,
    qr.boolean_answer,
    qr.number_answer,
    qr.date_answer,
    qr.varchar_answer,
    qr.clob_answer,
    qr.attachment_answer,
    qc.label
from 
(select 
    r.response_id,
    q.question_id,
    u.email,
    u.first_names,
    u.last_name,
    u.user_id,
    to_char(r.creation_date,'YYYY-MM-DD HH24:MI:SS') as creation_date,
    q.sort_order as q_sort_order
from survey_responses_latest r, cc_users u,survey_questions q, survey_sections s
     where
    s.survey_id=:survey_id
and r.survey_id=:survey_id
     and q.section_id=s.section_id
and r.initial_user_id=u.user_id) sub
    left outer join survey_question_responses qr on (
	 qr.question_id=sub.question_id and sub.response_id=qr.response_id)
    left outer join survey_question_choices qc on (
	 qc.choice_id=qr.choice_id)
  order by
    sub.response_id,
    sub.q_sort_order,
    sub.question_id,
    qc.sort_order
} {} {} {postgresql 7.1} c:/web/openacs-4/contrib/packages/survey/www/admin/responses-export-postgresql.xql}
dbqd.contrib.packages.survey.www.admin.responses-export.get_all_survey_question_responses_anonymous {dbqd.contrib.packages.survey.www.admin.responses-export.get_all_survey_question_responses_anonymous {
select    
    sub.response_id,
    sub.question_id,
    sub.email,
    sub.first_names,
    sub.last_name,
    sub.user_id,
    sub.creation_date,
    qr.boolean_answer,
    qr.number_answer,
    qr.date_answer,
    qr.varchar_answer,
    qr.clob_answer,
    qr.attachment_answer,
    qc.label
from 
(select 
    r.response_id,
    q.question_id,
    u.email,
    coalesce(u.first_names,'Unregistered') as first_names,
    coalesce(u.last_name,'Visitor') as last_name,
    u.user_id,
    to_char(r.creation_date,'YYYY-MM-DD HH24:MI:SS') as creation_date,
    q.sort_order as q_sort_order
from survey_responses_latest r 
     left outer join cc_users u on (coalesce(r.initial_user_id,0)=u.user_id)
     inner join survey_sections s using (survey_id)
     inner join survey_questions q using (section_id)
where s.survey_id=:survey_id) sub
left outer join survey_question_responses qr on
     (qr.question_id=sub.question_id and sub.response_id=qr.response_id)
left outer join survey_question_choices qc on
     (qc.choice_id=qr.choice_id)
order by
    sub.response_id,
    sub.q_sort_order,
    sub.question_id,
    qc.sort_order
} {} {} {postgresql 7.1} c:/web/openacs-4/contrib/packages/survey/www/admin/responses-export-postgresql.xql}
dbqd.contrib.packages.survey.www.admin.responses-export.get_n_responses {dbqd.contrib.packages.survey.www.admin.responses-export.get_n_responses {
	    select count(*) from survey_responses_latest
	    where survey_id=:survey_id
	} {} {} {} c:/web/openacs-4/contrib/packages/survey/www/admin/responses-export.xql}
dbqd.contrib.packages.survey.www.admin.responses-export.get_question_data_types {dbqd.contrib.packages.survey.www.admin.responses-export.get_question_data_types {
	  select question_id, abstract_data_type, q.sort_order,
	    question_text
	  from survey_questions q, survey_sections s
	  where s.survey_id = :survey_id
	    and s.section_id=q.section_id
	  order by q.sort_order,q.question_id
	} {} {} {} c:/web/openacs-4/contrib/packages/survey/www/admin/responses-export.xql}
dbqd.contrib.packages.survey.www.admin.responses-export.get_filename {dbqd.contrib.packages.survey.www.admin.responses-export.get_filename {
	    select title from cr_revisions where
	    revision_id=:attachment_answer
	} {} {} {} c:/web/openacs-4/contrib/packages/survey/www/admin/responses-export.xql}
dbqd.contrib.packages.survey.www.admin.responses.survey_question_list {dbqd.contrib.packages.survey.www.admin.responses.survey_question_list {
      select question_id, question_text, abstract_data_type,
      sort_order, s.section_id, sort_key, name as section_name

from survey_questions q, survey_sections s
where survey_id=:survey_id and  s.section_id=q.section_id
order by sort_key,sort_order
      } {} {} {} c:/web/openacs-4/contrib/packages/survey/www/admin/responses.xql}
dbqd.contrib.packages.survey.www.admin.responses.survey_boolean_summary {dbqd.contrib.packages.survey.www.admin.responses.survey_boolean_summary {
select count(*) as n_responses, (case when boolean_answer = 't' then
      'True' when boolean_answer = 'f' then 'False' end) as
      boolean_answer_pretty, boolean_answer
from survey_ques_responses_latest
where question_id = :question_id
group by boolean_answer
order by boolean_answer desc
      } {} {} {} c:/web/openacs-4/contrib/packages/survey/www/admin/responses.xql}
dbqd.contrib.packages.survey.www.admin.responses.survey_number_summary {dbqd.contrib.packages.survey.www.admin.responses.survey_number_summary {
      select count(*) as n_responses, number_answer
from survey_ques_responses_latest
where question_id = :question_id
group by number_answer
order by number_answer
      } {} {} {} c:/web/openacs-4/contrib/packages/survey/www/admin/responses.xql}
dbqd.contrib.packages.survey.www.admin.responses.survey_number_average {dbqd.contrib.packages.survey.www.admin.responses.survey_number_average {
      select avg(number_answer) as mean, stddev(number_answer) as standard_deviation
from survey_ques_responses_latest
where question_id = :question_id
      } {} {} {} c:/web/openacs-4/contrib/packages/survey/www/admin/responses.xql}
dbqd.contrib.packages.survey.www.admin.responses.survey_section_question_choices {dbqd.contrib.packages.survey.www.admin.responses.survey_section_question_choices {
      select count(*) as n_responses, label, qc.choice_id
from survey_ques_responses_latest qr, survey_question_choices qc
where qr.choice_id = qc.choice_id
  and qr.question_id = :question_id
group by label, sort_order, qc.choice_id
order by sort_order
      } {} {} {} c:/web/openacs-4/contrib/packages/survey/www/admin/responses.xql}
dbqd.contrib.packages.survey.www.admin.responses.survey_attachment_summary {dbqd.contrib.packages.survey.www.admin.responses.survey_attachment_summary {
	select cr.title, qr.question_id, qr.response_id
	from cr_revisions cr, survey_ques_responses_latest qr 
	where
	revision_id=attachment_answer
	and qr.question_id=question_id
      } {} {} {} c:/web/openacs-4/contrib/packages/survey/www/admin/responses.xql}
dbqd.contrib.packages.survey.www.admin.responses.survey_number_responses {dbqd.contrib.packages.survey.www.admin.responses.survey_number_responses {
      select count(*)
from survey_responses_latest
where survey_id=:survey_id
} {} {} {} c:/web/openacs-4/contrib/packages/survey/www/admin/responses.xql}
dbqd.contrib.packages.survey.www.admin.section-add-2-oracle.create_section {dbqd.contrib.packages.survey.www.admin.section-add-2-oracle.create_section {
      	    begin
	    :1 := survey_section.new (
	              section_id=>:section_id,
		      survey_id=>:survey_id,
		      name=>:name,
		      description=>empty_clob(),
		      description_html_p=>:description_html_p,
		      context_id=>:survey_id,
		      sort_key => :sort_key,
		      branch_p => :branch_p,
		      page_break_p => :page_break_p
		      );
	    end;

      } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/packages/survey/www/admin/section-add-2-oracle.xql}
dbqd.contrib.packages.survey.www.admin.section-add-2-oracle.already_inserted_p {dbqd.contrib.packages.survey.www.admin.section-add-2-oracle.already_inserted_p {
	select decode(count(*),0,0,1) from survey_sections where section_id = :section_id
    } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/packages/survey/www/admin/section-add-2-oracle.xql}
dbqd.contrib.packages.survey.www.admin.section-add-2.already_inserted_p {dbqd.contrib.packages.survey.www.admin.section-add-2.already_inserted_p {
	select case when count(*) = 0 then '0'
	       	    else '1'
	       end
	from survey_sections where section_id = :section_id
    } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/packages/survey/www/admin/section-add-2-postgresql.xql}
dbqd.contrib.packages.survey.www.admin.section-add-2.create_section {dbqd.contrib.packages.survey.www.admin.section-add-2.create_section {
	    select survey_section__new (
	              :section_id,
		      :survey_id,
		      :name,
		      :description,
		      :description_html_p,
		      :sort_key,
		      :branch_p,
		      FALSE,
		      FALSE,
		      :page_break_p,
		      :user_id,
		      :survey_id
            );

      } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/packages/survey/www/admin/section-add-2-postgresql.xql}
dbqd.contrib.packages.survey.www.admin.section-add-2.renumber_sort_keys {dbqd.contrib.packages.survey.www.admin.section-add-2.renumber_sort_keys {
      update survey_sections
                                   set sort_key = sort_key + 1
                                   where survey_id = :survey_id
                                   and sort_key > :after
      } {} {} {} c:/web/openacs-4/contrib/packages/survey/www/admin/section-add-2.xql}
dbqd.contrib.packages.survey.www.admin.section-add-2.add_branch {dbqd.contrib.packages.survey.www.admin.section-add-2.add_branch {

      insert into
      survey_branches(branch_id,section_id,after,condition) values (
      :branch_id,:section_id,(select section_id from survey_sections
      where survey_id=:survey_id and sort_key=:after),null)

      } {} {} {} c:/web/openacs-4/contrib/packages/survey/www/admin/section-add-2.xql}
dbqd.contrib.packages.survey.www.admin.section-add-2.make_description {dbqd.contrib.packages.survey.www.admin.section-add-2.make_description {
      update survey_sections set description=:description where section_id=:section_id
      } {} {} {} c:/web/openacs-4/contrib/packages/survey/www/admin/section-add-2.xql}
dbqd.contrib.packages.survey.www.admin.section-add.positions {dbqd.contrib.packages.survey.www.admin.section-add.positions {
	select 'After Section "'||name||'"' as secname, sort_key as secsortkey from
      survey_sections where survey_id=:survey_id
      order by sort_key
      } {} {} {} c:/web/openacs-4/contrib/packages/survey/www/admin/section-add.xql}
dbqd.contrib.packages.survey.www.admin.section-delete-oracle.section_delete {dbqd.contrib.packages.survey.www.admin.section-delete-oracle.section_delete {
	    begin
        	survey_section.remove (:section_id);
	    end;
      } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/packages/survey/www/admin/section-delete-oracle.xql}
dbqd.contrib.packages.survey.www.admin.section-delete.section_delete {dbqd.contrib.packages.survey.www.admin.section-delete.section_delete {
select survey_section__remove (:section_id);
      } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/packages/survey/www/admin/section-delete-postgresql.xql}
dbqd.contrib.packages.survey.www.admin.section-delete.section_number_questions {dbqd.contrib.packages.survey.www.admin.section-delete.section_number_questions {
      select count(*)
from survey_questions
where section_id = :section_id
      } {} {} {} c:/web/openacs-4/contrib/packages/survey/www/admin/section-delete.xql}
dbqd.contrib.packages.survey.www.admin.section-delete.section_reorder {dbqd.contrib.packages.survey.www.admin.section-delete.section_reorder {
      update survey_sections set sort_key=sort_key-1 where
      survey_id=:survey_id and
      sort_key>(
      select sort_key from survey_sections where section_id=:section_id)
      } {} {} {} c:/web/openacs-4/contrib/packages/survey/www/admin/section-delete.xql}
dbqd.contrib.packages.survey.www.admin.section-delete.replacement_section {dbqd.contrib.packages.survey.www.admin.section-delete.replacement_section {
      select section_id as replacement_section from survey_sections
      where survey_id=:survey_id and sort_key=1 and section_id!=:section_id
      } {} {} {} c:/web/openacs-4/contrib/packages/survey/www/admin/section-delete.xql}
dbqd.contrib.packages.survey.www.admin.section-delete.conditions {dbqd.contrib.packages.survey.www.admin.section-delete.conditions {
      select condition from survey_branches where section_id=:section_id
      } {} {} {} c:/web/openacs-4/contrib/packages/survey/www/admin/section-delete.xql}
dbqd.contrib.packages.survey.www.admin.section-delete.delete_condition {dbqd.contrib.packages.survey.www.admin.section-delete.delete_condition {
      delete from survey_conditions where condition_id=:condition_id
      } {} {} {} c:/web/openacs-4/contrib/packages/survey/www/admin/section-delete.xql}
dbqd.contrib.packages.survey.www.admin.section-delete.delete_branches {dbqd.contrib.packages.survey.www.admin.section-delete.delete_branches {
      delete from survey_branches where section_id=:section_id
      } {} {} {} c:/web/openacs-4/contrib/packages/survey/www/admin/section-delete.xql}
dbqd.contrib.packages.survey.www.admin.section-delete.branch_reorder {dbqd.contrib.packages.survey.www.admin.section-delete.branch_reorder {
      update survey_branches set after=:replacement_section where after=:section_id
      } {} {} {} c:/web/openacs-4/contrib/packages/survey/www/admin/section-delete.xql}
dbqd.contrib.packages.survey.www.admin.section-edit-2.get_section_info {dbqd.contrib.packages.survey.www.admin.section-edit-2.get_section_info {
      select branch_p as old_branch_p, branched_p as old_branched_p,
      block_section_p as old_block_section_p
      from survey_sections where section_id=:section_id
      } {} {} {} c:/web/openacs-4/contrib/packages/survey/www/admin/section-edit-2.xql}
dbqd.contrib.packages.survey.www.admin.section-edit-2.referring_sort_key {dbqd.contrib.packages.survey.www.admin.section-edit-2.referring_sort_key {
      select s.sort_key as refers_to, condition from survey_sections s, survey_branches b, survey_conditions c,
      survey_questions q where b.section_id=:section_id and b.condition=c.condition_id and
      c.question_id=q.question_id and q.section_id=s.section_id
      } {} {} {} c:/web/openacs-4/contrib/packages/survey/www/admin/section-edit-2.xql}
dbqd.contrib.packages.survey.www.admin.section-edit-2.old_sort_key {dbqd.contrib.packages.survey.www.admin.section-edit-2.old_sort_key {
      select sort_key from survey_sections where section_id=:section_id
      } {} {} {} c:/web/openacs-4/contrib/packages/survey/www/admin/section-edit-2.xql}
dbqd.contrib.packages.survey.www.admin.section-edit-2.dependant {dbqd.contrib.packages.survey.www.admin.section-edit-2.dependant {
      select min(s.sort_key) from survey_sections s, survey_branches b, survey_conditions c,
      survey_questions q where q.section_id=:section_id and b.condition=c.condition_id and
      c.question_id=q.question_id and b.section_id=s.section_id
      } {} {} {} c:/web/openacs-4/contrib/packages/survey/www/admin/section-edit-2.xql}
dbqd.contrib.packages.survey.www.admin.section-edit-2.example_questions {dbqd.contrib.packages.survey.www.admin.section-edit-2.example_questions {
      select question_id from survey_questions where
      section_id=:section_id and 0=dbms_lob.compare(question_text,(select question_text
      from survey_questions where section_id=:section_id and rownum=1))
      } {} {} {} c:/web/openacs-4/contrib/packages/survey/www/admin/section-edit-2.xql}
dbqd.contrib.packages.survey.www.admin.section-edit-2.make_block_choices {dbqd.contrib.packages.survey.www.admin.section-edit-2.make_block_choices {
      insert into
      survey_block_questions(block_section_id,section_id,choice_id,label,sort_order)
      select
      :block_id,:section_id,:choice_id,label,sort_order
      from survey_question_choices where question_id=:question_id
      } {} {} {} c:/web/openacs-4/contrib/packages/survey/www/admin/section-edit-2.xql}
dbqd.contrib.packages.survey.www.admin.section-edit-2.make_block_section {dbqd.contrib.packages.survey.www.admin.section-edit-2.make_block_section {
      update survey_sections set block_section_p='t' where section_id=:section_id
      } {} {} {} c:/web/openacs-4/contrib/packages/survey/www/admin/section-edit-2.xql}
dbqd.contrib.packages.survey.www.admin.section-edit-2.make_noblock_section {dbqd.contrib.packages.survey.www.admin.section-edit-2.make_noblock_section {
      update survey_sections set block_section_p='f' where section_id=:section_id
      } {} {} {} c:/web/openacs-4/contrib/packages/survey/www/admin/section-edit-2.xql}
dbqd.contrib.packages.survey.www.admin.section-edit-2.remove_block_questions {dbqd.contrib.packages.survey.www.admin.section-edit-2.remove_block_questions {
      delete from survey_block_questions where section_id=:section_id
      } {} {} {} c:/web/openacs-4/contrib/packages/survey/www/admin/section-edit-2.xql}
dbqd.contrib.packages.survey.www.admin.section-edit-2.modify_branch {dbqd.contrib.packages.survey.www.admin.section-edit-2.modify_branch {
      update survey_branches set after=(select section_id from
      survey_sections where survey_id=:survey_id and sort_key=:after), condition=null
      where section_id=:section_id
      } {} {} {} c:/web/openacs-4/contrib/packages/survey/www/admin/section-edit-2.xql}
dbqd.contrib.packages.survey.www.admin.section-edit-2.drop_condition {dbqd.contrib.packages.survey.www.admin.section-edit-2.drop_condition {
      delete from survey_conditions where condition_id=:condition
      } {} {} {} c:/web/openacs-4/contrib/packages/survey/www/admin/section-edit-2.xql}
dbqd.contrib.packages.survey.www.admin.section-edit-2.remove_sort_key {dbqd.contrib.packages.survey.www.admin.section-edit-2.remove_sort_key {
      update survey_sections set sort_key=sort_key-1 where
      sort_key>(select sort_key from survey_sections where
      section_id=:section_id) and survey_id=:survey_id
      } {} {} {} c:/web/openacs-4/contrib/packages/survey/www/admin/section-edit-2.xql}
dbqd.contrib.packages.survey.www.admin.section-edit-2.reorder_sort_key {dbqd.contrib.packages.survey.www.admin.section-edit-2.reorder_sort_key {
      update survey_sections set sort_key=sort_key+1 where
      sort_key>=:sort_key and survey_id=:survey_id
      } {} {} {} c:/web/openacs-4/contrib/packages/survey/www/admin/section-edit-2.xql}
dbqd.contrib.packages.survey.www.admin.section-edit-2.modify_section {dbqd.contrib.packages.survey.www.admin.section-edit-2.modify_section {
      update survey_sections set name=:name, description=:description,
      description_html_p=:description_html_p, sort_key=:sort_key,
      branch_p=:branch_p, page_break_p=:page_break_p where section_id=:section_id
      } {} {} {} c:/web/openacs-4/contrib/packages/survey/www/admin/section-edit-2.xql}
dbqd.contrib.packages.survey.www.admin.section-edit-2.add_branch {dbqd.contrib.packages.survey.www.admin.section-edit-2.add_branch {
      insert into
      survey_branches(branch_id,section_id,after,condition) values (
      :branch_id,:section_id,(select section_id from survey_sections
      where survey_id=:survey_id and sort_key=:after),null)
      } {} {} {} c:/web/openacs-4/contrib/packages/survey/www/admin/section-edit-2.xql}
dbqd.contrib.packages.survey.www.admin.section-edit-2.drop_branch {dbqd.contrib.packages.survey.www.admin.section-edit-2.drop_branch {
      delete from survey_branches where section_id=:section_id
      } {} {} {} c:/web/openacs-4/contrib/packages/survey/www/admin/section-edit-2.xql}
dbqd.contrib.packages.survey.www.admin.section-edit-2.old_parent_section {dbqd.contrib.packages.survey.www.admin.section-edit-2.old_parent_section {
      select after as old_parent_section,condition from survey_branches where section_id=:section_id
      } {} {} {} c:/web/openacs-4/contrib/packages/survey/www/admin/section-edit-2.xql}
dbqd.contrib.packages.survey.www.admin.section-edit-2.new_parent_section {dbqd.contrib.packages.survey.www.admin.section-edit-2.new_parent_section {
      select section_id as new_parent_section from survey_sections where
      survey_id=:survey_id and sort_key=:after
      } {} {} {} c:/web/openacs-4/contrib/packages/survey/www/admin/section-edit-2.xql}
dbqd.contrib.packages.survey.www.admin.section-edit.section_info {dbqd.contrib.packages.survey.www.admin.section-edit.section_info {
      select name,description,description_html_p,sort_key-1 as after,
      sort_key, branch_p, block_section_p, page_break_p from survey_sections where section_id=:section_id
      } {} {} {} c:/web/openacs-4/contrib/packages/survey/www/admin/section-edit.xql}
dbqd.contrib.packages.survey.www.admin.section-edit.positions {dbqd.contrib.packages.survey.www.admin.section-edit.positions {
	select 'After Section "'||name||'"' as secname, sort_key as secsortkey from
      survey_sections where survey_id=:survey_id and section_id !=
      :section_id
      order by sort_key
      } {} {} {} c:/web/openacs-4/contrib/packages/survey/www/admin/section-edit.xql}
dbqd.contrib.packages.survey.www.admin.section-template-ae.questions {dbqd.contrib.packages.survey.www.admin.section-template-ae.questions {
      select question_id, question_text, presentation_type,required_p from
      survey_questions where section_id=:section_id
      } {} {} {} c:/web/openacs-4/contrib/packages/survey/www/admin/section-template-ae.xql}
dbqd.contrib.packages.survey.www.admin.section-template-ae.get_style {dbqd.contrib.packages.survey.www.admin.section-template-ae.get_style {
      select 'survey/'||template_file as style from survey_templates
      t, surveys s where s.survey_id=:survey_id
      and s.template=t.template_id
      } {} {} {} c:/web/openacs-4/contrib/packages/survey/www/admin/section-template-ae.xql}
dbqd.contrib.packages.survey.www.admin.send-mail-oracle.dotlrn_all {dbqd.contrib.packages.survey.www.admin.send-mail-oracle.dotlrn_all {
            select '[db_quote $sender_email]' as from_addr,
               '[db_quote $sender_first_names]' as sender_first_names,
               '[db_quote $sender_last_name]' as sender_last_name,
               parties.email,
               decode(acs_objects.object_type,
                      'user',
                      (select first_names
                       from persons
                       where person_id = parties.party_id),
                      'group',
                      (select group_name
                       from groups
                       where group_id = parties.party_id),
                      'rel_segment',
                      (select segment_name
                       from rel_segments
                       where segment_id = parties.party_id),
                      '') as first_names,
               decode(acs_objects.object_type,
                      'user',
                      (select last_name
                       from persons
                       where person_id = parties.party_id),
                      '') as last_name,
               '[db_quote $community_name]' as community_name,
               '[db_quote $community_url]' as community_url
            from party_approved_member_map,
                 parties,
                 acs_objects
            where party_approved_member_map.party_id = $segment_id
            and party_approved_member_map.member_id <> $segment_id
            and party_approved_member_map.member_id = parties.party_id
            and parties.party_id = acs_objects.object_id
	} {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/packages/survey/www/admin/send-mail-oracle.xql}
dbqd.contrib.packages.survey.www.admin.send-mail-oracle.dotlrn_responded {dbqd.contrib.packages.survey.www.admin.send-mail-oracle.dotlrn_responded {
 		select '[db_quote $sender_email]' as from_addr,
               '[db_quote $sender_first_names]' as sender_first_names,
               '[db_quote $sender_last_name]' as sender_last_name,
               parties.email,
               decode(acs_objects.object_type,
                      'user',
                      (select first_names
                       from persons
                       where person_id = parties.party_id),
                      'group',
                      (select group_name
                       from groups
                       where group_id = parties.party_id),
                      'rel_segment',
                      (select segment_name
                       from rel_segments
                       where segment_id = parties.party_id),
                      '') as first_names,
               decode(acs_objects.object_type,
                      'user',
                      (select last_name
                       from persons
                       where person_id = parties.party_id),
                      '') as last_name,
               '[db_quote $community_name]' as community_name,
               '[db-quote $community_url]' as community_url
            from party_approved_member_map,
                 parties,
                 acs_objects
            where party_approved_member_map.party_id = $segment_id
            and party_approved_member_map.member_id <> $segment_id
            and party_approved_member_map.member_id = parties.party_id
            and parties.party_id = acs_objects.object_id
	    and parties.party_id in (
		select survey_response.initial_user_id(response_id)
		from survey_responses_latest where survey_id=$survey_id)
	} {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/packages/survey/www/admin/send-mail-oracle.xql}
dbqd.contrib.packages.survey.www.admin.send-mail-oracle.dotlrn_not_responded {dbqd.contrib.packages.survey.www.admin.send-mail-oracle.dotlrn_not_responded {
		select '[db_quote $sender_email]' as from_addr,
               '[db_quote $sender_first_names]' as sender_first_names,
               '[db_quote $sender_last_name]' as sender_last_name,
               parties.email,
               decode(acs_objects.object_type,
                      'user',
                      (select first_names
                       from persons
                       where person_id = parties.party_id),
                      'group',
                      (select group_name
                       from groups
                       where group_id = parties.party_id),
                      'rel_segment',
                      (select segment_name
                       from rel_segments
                       where segment_id = parties.party_id),
                      '') as first_names,
               decode(acs_objects.object_type,
                      'user',
                      (select last_name
                       from persons
                       where person_id = parties.party_id),
                      '') as last_name,
               '[db_quote $community_name]' as community_name,
               '[db_quote $community_url]' as community_url
            from party_approved_member_map,
                 parties,
                 acs_objects
            where party_approved_member_map.party_id = $segment_id
            and party_approved_member_map.member_id <> $segment_id
            and party_approved_member_map.member_id = parties.party_id
            and parties.party_id = acs_objects.object_id
	    and parties.party_id not in (
            select survey_response.initial_user_id(response_id)
            from survey_responses_latest where survey_id=$survey_id)
	} {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/packages/survey/www/admin/send-mail-oracle.xql}
dbqd.contrib.packages.survey.www.admin.send-mail-oracle.responded {dbqd.contrib.packages.survey.www.admin.send-mail-oracle.responded {
 		select '[db_quote $sender_email]' as from_addr,
               '[db_quote $sender_first_names]' as sender_first_names,
               '[db_quote $sender_last_name]' as sender_last_name,
               parties.email,
            from parties
            where parties.party_id = acs_objects.object_id
	    and parties.party_id in (
		select survey_response.initial_user_id(response_id)
		from survey_responses_latest where survey_id=$survey_id)
	} {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/packages/survey/www/admin/send-mail-oracle.xql}
dbqd.contrib.packages.survey.www.admin.send-mail.dotlrn_all {dbqd.contrib.packages.survey.www.admin.send-mail.dotlrn_all {
            select '[db_quote $sender_email]' as from_addr,
               '[db_quote $sender_first_names]' as sender_first_names,
               '[db_quote $sender_last_name]' as sender_last_name,
               parties.email,
	       (case acs_objects.object_type
	       	     when 'user' then 
                      (select first_names
                       from persons
                       where person_id = parties.party_id)
		     when 'group' then
                      (select group_name
                       from groups
                       where group_id = parties.party_id)
		     when 'rel_segment' then
                      (select segment_name
                       from rel_segments
                       where segment_id = parties.party_id)
		     else '' end) as first_names,
	       (case acs_objects.object_type
	       	     when 'user' then
                      (select last_name
                       from persons
                       where person_id = parties.party_id)
		     else '' end) as last_name,
               '[db_quote $community_name]' as community_name,
               '[db_quote $community_url]' as community_url
            from party_approved_member_map,
                 parties,
                 acs_objects
            where party_approved_member_map.party_id = $segment_id
            and party_approved_member_map.member_id <> $segment_id
            and party_approved_member_map.member_id = parties.party_id
            and parties.party_id = acs_objects.object_id
	} {} {} {postgresql 7.1} c:/web/openacs-4/contrib/packages/survey/www/admin/send-mail-postgresql.xql}
dbqd.contrib.packages.survey.www.admin.send-mail.dotlrn_responded {dbqd.contrib.packages.survey.www.admin.send-mail.dotlrn_responded {
 		select '[db_quote $sender_email]' as from_addr,
               '[db_quote $sender_first_names]' as sender_first_names,
               '[db_quote $sender_last_name]' as sender_last_name,
               parties.email,
	       (case acs_objects.object_type
	       	     when 'user' then 
                      (select first_names
                       from persons
                       where person_id = parties.party_id)
		     when 'group' then
                      (select group_name
                       from groups
                       where group_id = parties.party_id)
		     when 'rel_segment' then
                      (select segment_name
                       from rel_segments
                       where segment_id = parties.party_id)
		     else '' end) as first_names,
	       (case acs_objects.object_type
	       	     when 'user' then
                      (select last_name
                       from persons
                       where person_id = parties.party_id)
		     else '' end) as last_name,
               '[db_quote $community_name]' as community_name,
               '[db_quote $community_url]' as community_url
            from party_approved_member_map,
                 parties,
                 acs_objects
            where party_approved_member_map.party_id = $segment_id
            and party_approved_member_map.member_id <> $segment_id
            and party_approved_member_map.member_id = parties.party_id
            and parties.party_id = acs_objects.object_id
	    and parties.party_id in (
		select survey_response__initial_user_id(response_id)
		from survey_responses_latest where survey_id=$survey_id)
	} {} {} {postgresql 7.1} c:/web/openacs-4/contrib/packages/survey/www/admin/send-mail-postgresql.xql}
dbqd.contrib.packages.survey.www.admin.send-mail.dotlrn_not_responded {dbqd.contrib.packages.survey.www.admin.send-mail.dotlrn_not_responded {
		select '[db_quote $sender_email]' as from_addr,
               '[db_quote $sender_first_names]' as sender_first_names,
               '[db_quote $sender_last_name]' as sender_last_name,
               parties.email,
	       (case acs_objects.object_type
	       	     when 'user' then 
                      (select first_names
                       from persons
                       where person_id = parties.party_id)
		     when 'group' then
                      (select group_name
                       from groups
                       where group_id = parties.party_id)
		     when 'rel_segment' then
                      (select segment_name
                       from rel_segments
                       where segment_id = parties.party_id)
		     else '' end) as first_names,
	       (case acs_objects.object_type
	       	     when 'user' then
                      (select last_name
                       from persons
                       where person_id = parties.party_id)
		     else '' end) as last_name,
               '[db_quote $community_name]' as community_name,
               '[db_quote $community_url]' as community_url
            from party_approved_member_map,
                 parties,
                 acs_objects
            where party_approved_member_map.party_id = $segment_id
            and party_approved_member_map.member_id <> $segment_id
            and party_approved_member_map.member_id = parties.party_id
            and parties.party_id = acs_objects.object_id
	    and parties.party_id not in (
            select survey_response__initial_user_id(response_id)
            from survey_responses_latest where survey_id=$survey_id)
	} {} {} {postgresql 7.1} c:/web/openacs-4/contrib/packages/survey/www/admin/send-mail-postgresql.xql}
dbqd.contrib.packages.survey.www.admin.send-mail.responded {dbqd.contrib.packages.survey.www.admin.send-mail.responded {
 		select '[db_quote $sender_email]' as from_addr,
               '[db_quote $sender_first_names]' as sender_first_names,
               '[db_quote $sender_last_name]' as sender_last_name,
               parties.email
            from parties
            where parties.party_id in (
		select survey_response__initial_user_id(response_id)
		from survey_responses_latest where survey_id=$survey_id)
	} {} {} {postgresql 7.1} c:/web/openacs-4/contrib/packages/survey/www/admin/send-mail-postgresql.xql}
dbqd.contrib.packages.survey.www.admin.send-mail.select_sender_info {dbqd.contrib.packages.survey.www.admin.send-mail.select_sender_info {
            select parties.email as sender_email,
                   persons.first_names as sender_first_names,
                   persons.last_name as sender_last_name
            from parties,
                 persons
            where parties.party_id = :sender_id
            and persons.person_id = :sender_id
        } {} {} {} c:/web/openacs-4/contrib/packages/survey/www/admin/send-mail.xql}
dbqd.contrib.packages.survey.www.admin.send-mail.select_rel_segment_id {dbqd.contrib.packages.survey.www.admin.send-mail.select_rel_segment_id {
            select rel_segments.segment_id
            from rel_segments
            where rel_segments.group_id = :community_id
            and rel_segments.rel_type = :rel_type
        } {} {} {} c:/web/openacs-4/contrib/packages/survey/www/admin/send-mail.xql}
dbqd.contrib.packages.survey.www.admin.send-mail.n_responses {dbqd.contrib.packages.survey.www.admin.send-mail.n_responses {
	    select count(*) from survey_responses_latest
		where survey_id=:survey_id
	} {} {} {} c:/web/openacs-4/contrib/packages/survey/www/admin/send-mail.xql}
dbqd.contrib.packages.survey.www.admin.site-wide-survey-oracle.get_surveys {dbqd.contrib.packages.survey.www.admin.site-wide-survey-oracle.get_surveys {
	select s.survey_id, s.name, s.editable_p, s.single_response_p,
       	  s.package_id,
          acs_object.name(apm_package.parent_id(s.package_id)) as parent_name,
      		(select site_node.url(site_nodes.node_id)
	          from site_nodes
	          where site_nodes.object_id = s.package_id) as url
	 from surveys s
	 where enabled_p='t'
	 order by
parent_name,
upper(s.name)
    } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/packages/survey/www/admin/site-wide-survey-oracle.xql}
dbqd.contrib.packages.survey.www.admin.site-wide-survey.get_surveys {dbqd.contrib.packages.survey.www.admin.site-wide-survey.get_surveys {
	select s.survey_id, s.name, s.editable_p, s.single_response_p,
       	  s.package_id,
          acs_object__name(apm_package__parent_id(s.package_id)) as parent_name,
      		(select site_node__url(site_nodes.node_id)
	          from site_nodes
	          where site_nodes.object_id = s.package_id) as url
	 from surveys s
	 where enabled_p='t'
	 order by
parent_name,
upper(s.name)
    } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/packages/survey/www/admin/site-wide-survey-postgresql.xql}
dbqd.contrib.packages.survey.www.admin.style-select.change_style {dbqd.contrib.packages.survey.www.admin.style-select.change_style {
		update surveys set template=:style where survey_id=:survey_id
      } {} {} {} c:/web/openacs-4/contrib/packages/survey/www/admin/style-select.xql}
dbqd.contrib.packages.survey.www.admin.survey-category-add-oracle.category_map_insert {dbqd.contrib.packages.survey.www.admin.survey-category-add-oracle.category_map_insert {
      insert into site_wide_category_map 
  (map_id, category_id,
  on_which_table, on_what_id, mapping_date, one_line_item_desc) 
  values (site_wide_cat_map_id_seq.nextval, :category_id, 'survey_sections',
  :section_id, sysdate, :one_line_item_desc)
      } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/packages/survey/www/admin/survey-category-add-oracle.xql}
dbqd.contrib.packages.survey.www.admin.survey-category-add.category_map_insert {dbqd.contrib.packages.survey.www.admin.survey-category-add.category_map_insert {
      insert into site_wide_category_map 
  (map_id, category_id,
  on_which_table, on_what_id, mapping_date, one_line_item_desc) 
  values (nextval('site_wide_cat_map_id_seq'), :category_id, 'survey_sections',
  :section_id, current_timestamp, :one_line_item_desc)
      } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/packages/survey/www/admin/survey-category-add-postgresql.xql}
dbqd.contrib.packages.survey.www.admin.survey-category-add.category_insert {dbqd.contrib.packages.survey.www.admin.survey-category-add.category_insert {
      insert into categories 
  (category_id, category,category_type)
  values (:category_id, :category, 'survsimp')
      } {} {} {} c:/web/openacs-4/contrib/packages/survey/www/admin/survey-category-add.xql}
dbqd.contrib.packages.survey.www.admin.survey-category-add.survey_name {dbqd.contrib.packages.survey.www.admin.survey-category-add.survey_name {
      
  select name from survey_sections where section_id = :section_id
      } {} {} {} c:/web/openacs-4/contrib/packages/survey/www/admin/survey-category-add.xql}
dbqd.contrib.packages.survey.www.admin.survey-copy.survey_create {dbqd.contrib.packages.survey.www.admin.survey-copy.survey_create {
        :1 := survey__new (
                    NULL,
                    :name,
                    :description,
                    :description_html_p,
		    :single_response_p,
                    :editable_p,
                    :enabled_p,
                    :single_section_p,
		    :type,
                    :display_type,
                    :package_id,
	            :user_id,
		    :package_id,
                );
} {} {} {postgresql 7.1} c:/web/openacs-4/contrib/packages/survey/www/admin/survey-copy-postgresql.xql}
dbqd.contrib.packages.survey.www.admin.survey-copy.section_create {dbqd.contrib.packages.survey.www.admin.survey-copy.section_create {
	    :1 := survey_section__new (
	              NULL,
		      :new_survey_id,
		      :name,
		      :description,
		      :description_html_p,
		      :user_id,
	              :package_id
		      );
} {} {} {postgresql 7.1} c:/web/openacs-4/contrib/packages/survey/www/admin/survey-copy-postgresql.xql}
dbqd.contrib.packages.survey.www.admin.survey-copy.get_survey_info {dbqd.contrib.packages.survey.www.admin.survey-copy.get_survey_info {
select * from surveys where survey_id=:survey_id
} {} {} {} c:/web/openacs-4/contrib/packages/survey/www/admin/survey-copy.xql}
dbqd.contrib.packages.survey.www.admin.survey-create-oracle.create_survey {dbqd.contrib.packages.survey.www.admin.survey-create-oracle.create_survey {
	    begin
	        :1 := survey.new (
                    survey_id => :survey_id,
                    name => :name,
                    description => :description,
                    description_html_p => :description_html_p,
                    type => :type,
                    display_type => :display_type,
                    package_id => :package_id,
                    context_id => :context_id,
		    creation_user => :user_id,
		    enabled_p => :enabled_p,
		    public_p => :public_p
                );
            end;
      } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/packages/survey/www/admin/survey-create-oracle.xql}
dbqd.contrib.packages.survey.www.admin.survey-create-oracle.create_section {dbqd.contrib.packages.survey.www.admin.survey-create-oracle.create_section {
	    begin
	    :1 := survey_section.new (
	              section_id=>:section_id,
		      survey_id=>:survey_id,
		      name=>:name,
		      description=>empty_clob(),
		      description_html_p=>:description_html_p,
		      context_id=>:survey_id,
		      sort_key => 1
		      );
	    end;
      } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/packages/survey/www/admin/survey-create-oracle.xql}
dbqd.contrib.packages.survey.www.admin.survey-create-oracle.add_logic {dbqd.contrib.packages.survey.www.admin.survey-create-oracle.add_logic {
      insert into survey_logic
      (logic_id, logic)
      values
      (:logic_id, empty_clob()) returning logic into :1
      } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/packages/survey/www/admin/survey-create-oracle.xql}
dbqd.contrib.packages.survey.www.admin.survey-create.create_survey {dbqd.contrib.packages.survey.www.admin.survey-create.create_survey {
	        select survey__new (
                    :survey_id,
                    :name,
                    :description,
                    :description_html_p,
		    'f',
		    't',
		    'f',
	            't',
                    :type,
                    :display_type,
                    :package_id,
		    :public_p,
		    :user_id,
                    :package_id
                )
      } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/packages/survey/www/admin/survey-create-postgresql.xql}
dbqd.contrib.packages.survey.www.admin.survey-create.create_section {dbqd.contrib.packages.survey.www.admin.survey-create.create_section {
	    select survey_section__new (
	              :section_id,
		      :survey_id,
		      :name,
		      :description,
		      :description_html_p,
		      1,
		      'f',
		      'f',
		      'f',
		      't',
	              :user_id,
	              :package_id
            )
      } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/packages/survey/www/admin/survey-create-postgresql.xql}
dbqd.contrib.packages.survey.www.admin.survey-create.add_logic {dbqd.contrib.packages.survey.www.admin.survey-create.add_logic {
      insert into survey_logic
      (logic_id, logic)
      values
      (:logic_id, :logic)
      } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/packages/survey/www/admin/survey-create-postgresql.xql}
dbqd.contrib.packages.survey.www.admin.survey-create.count_surveys {dbqd.contrib.packages.survey.www.admin.survey-create.count_surveys {
select count(survey_id) from surveys where survey_id=:survey_id
      } {} {} {} c:/web/openacs-4/contrib/packages/survey/www/admin/survey-create.xql}
dbqd.contrib.packages.survey.www.admin.survey-create.add_variable_name {dbqd.contrib.packages.survey.www.admin.survey-create.add_variable_name {
      insert into survey_variables
                  (variable_id, variable_name)
                  values
                  (:variable_id, :variable_name)
      } {} {} {} c:/web/openacs-4/contrib/packages/survey/www/admin/survey-create.xql}
dbqd.contrib.packages.survey.www.admin.survey-create.map_variable_name {dbqd.contrib.packages.survey.www.admin.survey-create.map_variable_name {
      insert into survey_variables_surveys_map
                  (variable_id, section_id)
                  values
                  (:variable_id, :section_id)
      } {} {} {} c:/web/openacs-4/contrib/packages/survey/www/admin/survey-create.xql}
dbqd.contrib.packages.survey.www.admin.survey-create.map_logic {dbqd.contrib.packages.survey.www.admin.survey-create.map_logic {
      insert into survey_logic_surveys_map
              (logic_id, section_id)
              values
              (:logic_id, :section_id)
      } {} {} {} c:/web/openacs-4/contrib/packages/survey/www/admin/survey-create.xql}
dbqd.contrib.packages.survey.www.admin.survey-delete-oracle.delete_survey {dbqd.contrib.packages.survey.www.admin.survey-delete-oracle.delete_survey {
begin
	survey.remove(:survey_id);
end;
} {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/packages/survey/www/admin/survey-delete-oracle.xql}
dbqd.contrib.packages.survey.www.admin.survey-delete.delete_survey {dbqd.contrib.packages.survey.www.admin.survey-delete.delete_survey {
begin
	perform survey__remove(:survey_id);
return NULL;
end;
} {} {} {postgresql 7.1} c:/web/openacs-4/contrib/packages/survey/www/admin/survey-delete-postgresql.xql}
dbqd.contrib.packages.survey.www.admin.survey-display-type-edit.survey_display_type_edit {dbqd.contrib.packages.survey.www.admin.survey-display-type-edit.survey_display_type_edit {
update surveys 
 set display_type= :display_type
 where survey_id = :survey_id
} {} {} {} c:/web/openacs-4/contrib/packages/survey/www/admin/survey-display-type-edit.xql}
dbqd.contrib.packages.survey.www.admin.survey-preview.survey_exists {dbqd.contrib.packages.survey.www.admin.survey-preview.survey_exists {
	select 1 from surveys where survey_id = :survey_id
    } {} {} {} c:/web/openacs-4/contrib/packages/survey/www/admin/survey-preview.xql}
dbqd.contrib.packages.survey.www.admin.survey-preview.question_ids_select {dbqd.contrib.packages.survey.www.admin.survey-preview.question_ids_select {
	select question_id
	from survey_questions  
	where section_id = :section_id
	and active_p = 't'
	order by sort_order
    } {} {} {} c:/web/openacs-4/contrib/packages/survey/www/admin/survey-preview.xql}
dbqd.contrib.packages.survey.www.admin.survey-preview.survey_sections {dbqd.contrib.packages.survey.www.admin.survey-preview.survey_sections {
	select section_id,block_section_p from survey_sections
	where survey_id=:survey_id order by sort_key
    } {} {} {} c:/web/openacs-4/contrib/packages/survey/www/admin/survey-preview.xql}
dbqd.contrib.packages.survey.www.admin.survey-preview.questions {dbqd.contrib.packages.survey.www.admin.survey-preview.questions {
select question_text, presentation_type, abstract_data_type,
    question_id, required_p from survey_questions where
    section_id=:section_id and active_p='t' order by sort_order
    } {} {} {} c:/web/openacs-4/contrib/packages/survey/www/admin/survey-preview.xql}
dbqd.contrib.packages.survey.www.admin.survey-preview.get_style {dbqd.contrib.packages.survey.www.admin.survey-preview.get_style {
      select 'survey/'||template_file as style from survey_templates t, surveys s
      where s.survey_id=:survey_id
      and s.template=t.template_id
      } {} {} {} c:/web/openacs-4/contrib/packages/survey/www/admin/survey-preview.xql}
dbqd.contrib.packages.survey.www.admin.survey-sectioned-toggle-oracle.survey_sectioned_toggle {dbqd.contrib.packages.survey.www.admin.survey-sectioned-toggle-oracle.survey_sectioned_toggle {
      update surveys 
set single_section_p = util.logical_negation(single_section_p)
where survey_id = :survey_id
      } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/packages/survey/www/admin/survey-sectioned-toggle-oracle.xql}
dbqd.contrib.packages.survey.www.admin.survey-sectioned-toggle.survey_sectioned_toggle {dbqd.contrib.packages.survey.www.admin.survey-sectioned-toggle.survey_sectioned_toggle {
      update surveys 
set single_section_p = util__logical_negation(single_section_p)
where survey_id = :survey_id
      } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/packages/survey/www/admin/survey-sectioned-toggle-postgresql.xql}
dbqd.contrib.packages.survey.www.admin.survey-sectioned-toggle.block_sections {dbqd.contrib.packages.survey.www.admin.survey-sectioned-toggle.block_sections {
      select count(*) as num_blocked from survey_sections where
      survey_id=:survey_id and block_section_p='t'
      } {} {} {} c:/web/openacs-4/contrib/packages/survey/www/admin/survey-sectioned-toggle.xql}
dbqd.contrib.packages.survey.www.admin.survey-sectioned-toggle.first_section {dbqd.contrib.packages.survey.www.admin.survey-sectioned-toggle.first_section {
      select section_id
      from survey_sections s
      where survey_id=:survey_id
      and sort_key=1
      } {} {} {} c:/web/openacs-4/contrib/packages/survey/www/admin/survey-sectioned-toggle.xql}
dbqd.contrib.packages.survey.www.admin.survey-sectioned-toggle.all_questions {dbqd.contrib.packages.survey.www.admin.survey-sectioned-toggle.all_questions {
      select question_id
      from survey_questions q, survey_sections s
      where survey_id=:survey_id
      and q.section_id=s.section_id
      order by s.sort_key,q.sort_order
      } {} {} {} c:/web/openacs-4/contrib/packages/survey/www/admin/survey-sectioned-toggle.xql}
dbqd.contrib.packages.survey.www.admin.survey-sectioned-toggle.move_question {dbqd.contrib.packages.survey.www.admin.survey-sectioned-toggle.move_question {
      update survey_questions
      set section_id =:section_id,
      sort_order=:new_sort_order
      where question_id=:question_id
      } {} {} {} c:/web/openacs-4/contrib/packages/survey/www/admin/survey-sectioned-toggle.xql}
dbqd.contrib.packages.survey.www.admin.survey-sectioned-toggle.remove_unused_sections {dbqd.contrib.packages.survey.www.admin.survey-sectioned-toggle.remove_unused_sections {
      delete from survey_sections where survey_id=:survey_id and
      sort_key != 1
      } {} {} {} c:/web/openacs-4/contrib/packages/survey/www/admin/survey-sectioned-toggle.xql}
dbqd.contrib.packages.survey.www.admin.survey-status-bar-color-change.change_color {dbqd.contrib.packages.survey.www.admin.survey-status-bar-color-change.change_color {
		update surveys set status_bar_color=:color where survey_id=:survey_id
      } {} {} {} c:/web/openacs-4/contrib/packages/survey/www/admin/survey-status-bar-color-change.xql}
dbqd.contrib.packages.survey.www.admin.survey-toggle.survey_active_toggle {dbqd.contrib.packages.survey.www.admin.survey-toggle.survey_active_toggle {
	update surveys 
	set enabled_p = :enabled_p 
	where survey_id = :survey_id
    } {} {} {} c:/web/openacs-4/contrib/packages/survey/www/admin/survey-toggle.xql}
dbqd.contrib.packages.survey.www.admin.user-responses-delete-oracle.delete_response {dbqd.contrib.packages.survey.www.admin.user-responses-delete-oracle.delete_response {
	begin
	  survey_response.remove(:response_id);
	end;
    } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/packages/survey/www/admin/user-responses-delete-oracle.xql}
dbqd.contrib.packages.survey.www.admin.user-responses-delete-oracle.get_response_info {dbqd.contrib.packages.survey.www.admin.user-responses-delete-oracle.get_response_info {
	select survey_id, survey_response.initial_user_id(response_id) as user_id, response_id, initial_response_id
	from survey_responses
	where survey_id=:survey_id
	and survey_response.initial_user_id(response_id)=:user_id
    } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/packages/survey/www/admin/user-responses-delete-oracle.xql}
dbqd.contrib.packages.survey.www.admin.user-responses-delete.delete_response {dbqd.contrib.packages.survey.www.admin.user-responses-delete.delete_response {
	select survey_response__remove(:response_id)
    } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/packages/survey/www/admin/user-responses-delete-postgresql.xql}
dbqd.contrib.packages.survey.www.admin.user-responses-delete.get_response_info {dbqd.contrib.packages.survey.www.admin.user-responses-delete.get_response_info {
	select survey_id, survey_response__initial_user_id(response_id) as user_id, response_id, initial_response_id
	from survey_responses
	where survey_id=:survey_id
	  and survey_response__initial_user_id(response_id)=:user_id
    } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/packages/survey/www/admin/user-responses-delete-postgresql.xql}
dbqd.contrib.packages.survey.www.admin.view-text-responses-oracle.all_responses_to_question {dbqd.contrib.packages.survey.www.admin.view-text-responses-oracle.all_responses_to_question {
	select
	  $column_name as response,
	  decode(o.creation_user,null,'Anonymous user',person.name(o.creation_user)) as respondent_name,
	  o.creation_date as submission_date,
	  o.creation_user,
	  o.creation_ip as ip_address
	from
	  survey_responses r,
	  survey_question_responses qr,
	  acs_objects o
	where
	  qr.response_id = r.response_id
	  and qr.question_id = :question_id
	  and o.object_id = qr.response_id
	order by submission_date
      } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/packages/survey/www/admin/view-text-responses-oracle.xql}
dbqd.contrib.packages.survey.www.admin.view-text-responses.all_responses_to_question {dbqd.contrib.packages.survey.www.admin.view-text-responses.all_responses_to_question {
      
	select
	  $column_name as response,
	  (case o.creation_user
	       when null then 'Anonymous_user'
	       else
	  person__name(acs_object__get_attribute(r.response_id,'creation_user')::text::integer)
	  end) as respondent_name,
	  acs_object__get_attribute(r.response_id,'creation_date') as submission_date,
	  acs_object__get_attribute(r.response_id,'creation_user') as creation_user,
	  acs_object__get_attribute(r.response_id,'creation_ip') as ip_address
	from
	  survey_responses r,
	  survey_question_responses qr,
          acs_objects o
	where
	  qr.response_id = r.response_id
	  and qr.question_id = :question_id
	  and o.object_id = qr.response_id
	  order by submission_date
    } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/packages/survey/www/admin/view-text-responses-postgresql.xql}
dbqd.contrib.packages.survey.www.admin.view-text-responses.one_question {dbqd.contrib.packages.survey.www.admin.view-text-responses.one_question {
	select sq.question_text, sq.section_id
	from survey_questions sq, survey_sections sec
	where sq.question_id = :question_id
	and sq.section_id = sec.section_id
      } {} {} {} c:/web/openacs-4/contrib/packages/survey/www/admin/view-text-responses.xql}
dbqd.contrib.packages.survey.www.admin.view-text-responses.abstract_data_type {dbqd.contrib.packages.survey.www.admin.view-text-responses.abstract_data_type {
	select abstract_data_type
	from survey_questions q
	where question_id = :question_id
    } {} {} {} c:/web/openacs-4/contrib/packages/survey/www/admin/view-text-responses.xql}
dbqd.contrib.packages.survey.www.index-oracle.survey_select {dbqd.contrib.packages.survey.www.index-oracle.survey_select {
select s.survey_id, s.name, s.editable_p, s.single_response_p,
sub.response_id, to_char(sub.creation_date,'Month FMDD, YYYY') as creation_date
from surveys s, 
(select creation_date, survey_id, response_id from survey_responses
	sr, acs_objects o where o.creation_user=:user_id and
	o.object_id=sr.response_id
) sub 
where s.package_id=:package_id
and s.enabled_p='t'
and 't' = acs_permission.permission_p(s.survey_id, :user_id, 'write')
and s.survey_id=sub.survey_id(+)
order by upper(s.name), creation_date desc
    	} {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/packages/survey/www/index-oracle.xql}
dbqd.contrib.packages.survey.www.index.survey_select {dbqd.contrib.packages.survey.www.index.survey_select {
select s.survey_id, s.name, s.editable_p, s.single_response_p,
sub.response_id, to_char(sub.creation_date,'Month FMDD, YYYY') as creation_date
from surveys s left outer join 
(select creation_date, survey_id, response_id from survey_responses
	sr, acs_objects o where o.creation_user=:user_id and
	o.object_id=sr.response_id
) sub on (s.survey_id=sub.survey_id)
where s.package_id=:package_id
and s.enabled_p='t'
and 't' = acs_permission__permission_p(s.survey_id, :user_id, 'write')
order by upper(s.name), creation_date desc
    	} {} {} {postgresql 7.1} c:/web/openacs-4/contrib/packages/survey/www/index-postgresql.xql}
dbqd.contrib.packages.survey.www.one-respondent.survey_exists {dbqd.contrib.packages.survey.www.one-respondent.survey_exists {
      
		select 1 from surveys where survey_id = :survey_id
	    
      } {} {} {} c:/web/openacs-4/contrib/packages/survey/www/one-respondent.xql}
dbqd.contrib.packages.survey.www.one-respondent.responses_select {dbqd.contrib.packages.survey.www.one-respondent.responses_select {

    select response_id, creation_date, 
           to_char(creation_date, 'Month DD, YYYY') as pretty_submission_date
    from survey_responses_latest
    where survey_id=:survey_id
    and initial_user_id = :user_id
    order by creation_date desc

      } {} {} {} c:/web/openacs-4/contrib/packages/survey/www/one-respondent.xql}
dbqd.contrib.packages.survey.www.one-survey-oracle.get_survey_details {dbqd.contrib.packages.survey.www.one-survey-oracle.get_survey_details {

select s.survey_id, s.name, s.editable_p, s.single_response_p,
       sr.response_id, sr.creation_date
  from surveys s ,(select survey_id, response_id, creation_date
          from survey_responses_latest
	 where initial_user_id = :user_id) sr
 where s.survey_id=:survey_id
and s.package_id=:package_id
and s.survey_id(+) = sr.survey_id
and s.enabled_p='t'
order by sr.creation_date desc

    	} {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/packages/survey/www/one-survey-oracle.xql}
dbqd.contrib.packages.survey.www.one-survey.get_survey_details {dbqd.contrib.packages.survey.www.one-survey.get_survey_details {

select s.survey_id, s.name, s.editable_p, s.single_response_p,
       sr.response_id, sr.creation_date
  from surveys s left outer join 
       (select survey_id, response_id, creation_date
          from survey_responses_latest
	 where initial_user_id = :user_id) sr
    on (s.survey_id = sr.survey_id)
 where s.survey_id=:survey_id
   and s.package_id=:package_id
   and s.enabled_p='t'
    	} {} {} {postgresql 7.1} c:/web/openacs-4/contrib/packages/survey/www/one-survey-postgresql.xql}
dbqd.contrib.packages.survey.www.process-response-oracle.create_response {dbqd.contrib.packages.survey.www.process-response-oracle.create_response {
      
	begin
	    :1 := survey_response.new (
		response_id => :response_id,
		survey_id => :survey_id,		
		context_id => :survey_id,
		creation_user => :user_id,
		initial_response_id => :initial_response_id,
		creation_ip => :creation_ip
	    );
	end;
    
      } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/packages/survey/www/process-response-oracle.xql}
dbqd.contrib.packages.survey.www.process-response-oracle.survey_question_response_text_insert {dbqd.contrib.packages.survey.www.process-response-oracle.survey_question_response_text_insert {

      insert into survey_question_responses
      (response_id, question_id, clob_answer)
      values 
      (:response_id, :question_id, empty_clob())
      returning clob_answer into :1

      } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/packages/survey/www/process-response-oracle.xql}
dbqd.contrib.packages.survey.www.process-response-oracle.delete_old_item {dbqd.contrib.packages.survey.www.process-response-oracle.delete_old_item {
begin
  content_item.del(:old_item);
end;
      } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/packages/survey/www/process-response-oracle.xql}
dbqd.contrib.packages.survey.www.process-response.create_response {dbqd.contrib.packages.survey.www.process-response.create_response {
	select survey_response__new (
		:response_id,
		:survey_id,		
		null,
		'f',
		:user_id,
		:creation_ip,
		:survey_id,
		:initial_response_id
	    )
      } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/packages/survey/www/process-response-postgresql.xql}
dbqd.contrib.packages.survey.www.process-response.survey_question_response_text_insert {dbqd.contrib.packages.survey.www.process-response.survey_question_response_text_insert {

      insert into survey_question_responses
      (response_id, question_id, clob_answer)
      values 
      (:response_id, :question_id, :response_value)

      } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/packages/survey/www/process-response-postgresql.xql}
dbqd.contrib.packages.survey.www.process-response.section_exists {dbqd.contrib.packages.survey.www.process-response.section_exists {
      	    select 1 from survey_sections where section_id = :section_id	
      } {} {} {} c:/web/openacs-4/contrib/packages/survey/www/process-response.xql}
dbqd.contrib.packages.survey.www.process-response.survey_question_info_list {dbqd.contrib.packages.survey.www.process-response.survey_question_info_list {
      
	    select question_id, question_text, abstract_data_type,
	    presentation_type, required_p, predefined_question_id
	    from survey_questions
	    where section_id = :section_id
	    and active_p = 't'
	    order by sort_order
	
      } {} {} {} c:/web/openacs-4/contrib/packages/survey/www/process-response.xql}
dbqd.contrib.packages.survey.www.process-response.upload_file_exist {dbqd.contrib.packages.survey.www.process-response.upload_file_exist {
select attachment_answer
 from survey_question_responses where question_id=:question_id and response_id=:response_id and attachment_answer is not null
      } {} {} {} c:/web/openacs-4/contrib/packages/survey/www/process-response.xql}
dbqd.contrib.packages.survey.www.process-response.get_response_count {dbqd.contrib.packages.survey.www.process-response.get_response_count {
	select count(*) from survey_responses
	where response_id=:response_id
    } {} {} {} c:/web/openacs-4/contrib/packages/survey/www/process-response.xql}
dbqd.contrib.packages.survey.www.process-response.clear_section_response {dbqd.contrib.packages.survey.www.process-response.clear_section_response {
      delete from survey_question_responses where question_id in
      (select question_id from survey_questions where
      section_id=:section_id)
      and response_id=:response_id and attachment_answer is null
      } {} {} {} c:/web/openacs-4/contrib/packages/survey/www/process-response.xql}
dbqd.contrib.packages.survey.www.process-response.predefined {dbqd.contrib.packages.survey.www.process-response.predefined {
      
	    select action_type, tcl, table_name, column_name, key_name
	    from survey_predefined_questions
	    where predefined_question_id=:predefined_question_id	
      } {} {} {} c:/web/openacs-4/contrib/packages/survey/www/process-response.xql}
dbqd.contrib.packages.survey.www.process-response.survey_question_response_checkbox_insert {dbqd.contrib.packages.survey.www.process-response.survey_question_response_checkbox_insert {
      insert into survey_question_responses (response_id, question_id, choice_id)
 values (:response_id, :question_id, :response_value)
      } {} {} {} c:/web/openacs-4/contrib/packages/survey/www/process-response.xql}
dbqd.contrib.packages.survey.www.process-response.survey_question_response_choice_insert {dbqd.contrib.packages.survey.www.process-response.survey_question_response_choice_insert {
      insert into survey_question_responses (response_id, question_id, choice_id)
 values (:response_id, :question_id, :response_value)
      } {} {} {} c:/web/openacs-4/contrib/packages/survey/www/process-response.xql}
dbqd.contrib.packages.survey.www.process-response.survey_question_choice_shorttext_insert {dbqd.contrib.packages.survey.www.process-response.survey_question_choice_shorttext_insert {
      insert into survey_question_responses (response_id, question_id, varchar_answer)
 values (:response_id, :question_id, :response_value)
      } {} {} {} c:/web/openacs-4/contrib/packages/survey/www/process-response.xql}
dbqd.contrib.packages.survey.www.process-response.survey_question_response_boolean_insert {dbqd.contrib.packages.survey.www.process-response.survey_question_response_boolean_insert {
      insert into survey_question_responses (response_id, question_id, boolean_answer)
 values (:response_id, :question_id, :response_value)
      } {} {} {} c:/web/openacs-4/contrib/packages/survey/www/process-response.xql}
dbqd.contrib.packages.survey.www.process-response.survey_question_response_integer_insert {dbqd.contrib.packages.survey.www.process-response.survey_question_response_integer_insert {
      insert into survey_question_responses (response_id, question_id, number_answer)
 values (:response_id, :question_id, :response_value)
      } {} {} {} c:/web/openacs-4/contrib/packages/survey/www/process-response.xql}
dbqd.contrib.packages.survey.www.process-response.survey_question_response_date_insert {dbqd.contrib.packages.survey.www.process-response.survey_question_response_date_insert {
      insert into survey_question_responses (response_id, question_id, date_answer)
 values (:response_id, :question_id, :response_value)
      } {} {} {} c:/web/openacs-4/contrib/packages/survey/www/process-response.xql}
dbqd.contrib.packages.survey.www.process-response.get_item_id {dbqd.contrib.packages.survey.www.process-response.get_item_id {
      select item_id as old_item from cr_revisions where revision_id=:old_revision_id
      } {} {} {} c:/web/openacs-4/contrib/packages/survey/www/process-response.xql}
dbqd.contrib.packages.survey.www.process-response.survey_question_response_file_attachment_update {dbqd.contrib.packages.survey.www.process-response.survey_question_response_file_attachment_update {
      update survey_question_responses
      set attachment_answer=:revision_id,
      attachment_file_name=:filename, attachment_file_type=:mime_type,
      attachment_file_extension=:file_extension
      where question_id=:question_id and response_id=:response_id
      } {} {} {} c:/web/openacs-4/contrib/packages/survey/www/process-response.xql}
dbqd.contrib.packages.survey.www.process-response.update_item_description {dbqd.contrib.packages.survey.www.process-response.update_item_description {
      update cr_items
      set name=:unique_name 
      where item_id=:old_item
      } {} {} {} c:/web/openacs-4/contrib/packages/survey/www/process-response.xql}
dbqd.contrib.packages.survey.www.process-response.survey_question_response_file_attachment_insert {dbqd.contrib.packages.survey.www.process-response.survey_question_response_file_attachment_insert {
      insert into survey_question_responses
      (response_id, question_id, attachment_answer,attachment_file_name,attachment_file_type,attachment_file_extension)
       values
      (:response_id, :question_id, :revision_id,:filename,:mime_type,:file_extension)
      } {} {} {} c:/web/openacs-4/contrib/packages/survey/www/process-response.xql}
dbqd.contrib.packages.survey.www.process-response.finish_response {dbqd.contrib.packages.survey.www.process-response.finish_response {
      update survey_responses set finished_p='t' where
      survey_id=:survey_id and response_id=:response_id
      } {} {} {} c:/web/openacs-4/contrib/packages/survey/www/process-response.xql}
dbqd.contrib.packages.survey.www.process-response.get_type {dbqd.contrib.packages.survey.www.process-response.get_type {
      select type from survey_sections where section_id = :section_id
      } {} {} {} c:/web/openacs-4/contrib/packages/survey/www/process-response.xql}
dbqd.contrib.packages.survey.www.process-response.survey_name_from_id {dbqd.contrib.packages.survey.www.process-response.survey_name_from_id {
      select name from survey_sections where section_id = :section_id
      } {} {} {} c:/web/openacs-4/contrib/packages/survey/www/process-response.xql}
dbqd.contrib.packages.survey.www.respond-oracle.count_responses {dbqd.contrib.packages.survey.www.respond-oracle.count_responses {
      select count(*) from survey_responses, acs_objects
	where survey_id=:survey_id
	and response_id=object_id
	and initial_response_id is null
      } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/packages/survey/www/respond-oracle.xql}
dbqd.contrib.packages.survey.www.respond-oracle.get_latest_response_id {dbqd.contrib.packages.survey.www.respond-oracle.get_latest_response_id {
      select max(response_id) from survey_responses      
      	where survey_id=:survey_id
	and survey_response.initial_user_id(response_id)=:user_id
	and initial_response_id is null
      } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/packages/survey/www/respond-oracle.xql}
dbqd.contrib.packages.survey.www.respond-oracle.get_initial_response {dbqd.contrib.packages.survey.www.respond-oracle.get_initial_response {
      
	select survey_response.initial_response_id(:response_id) as initial_response_id from dual

      } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/packages/survey/www/respond-oracle.xql}
dbqd.contrib.packages.survey.www.respond-oracle.unfinished_surveys {dbqd.contrib.packages.survey.www.respond-oracle.unfinished_surveys {
      select max(response_id) as response_id,count(*) as unfinished
      from survey_responses r, acs_objects o where finished_p='f' and
      r.response_id=o.object_id and creation_user=:user_id
      and survey_id=:survey_id
      } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/packages/survey/www/respond-oracle.xql}
dbqd.contrib.packages.survey.www.respond.count_responses {dbqd.contrib.packages.survey.www.respond.count_responses {
      select count(*) from survey_responses
	where survey_id=:survey_id
	and survey_response__initial_user_id(response_id)=:user_id
	and initial_response_id is null
      } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/packages/survey/www/respond-postgresql.xql}
dbqd.contrib.packages.survey.www.respond.get_latest_response_id {dbqd.contrib.packages.survey.www.respond.get_latest_response_id {
      select max(response_id) from survey_responses      
      	where survey_id=:survey_id
	and survey_response__initial_user_id(response_id)=:user_id
	and initial_response_id is null
      } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/packages/survey/www/respond-postgresql.xql}
dbqd.contrib.packages.survey.www.respond.get_initial_response {dbqd.contrib.packages.survey.www.respond.get_initial_response {
      
	select survey_response__initial_response_id(:response_id) as initial_response_id

      } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/packages/survey/www/respond-postgresql.xql}
dbqd.contrib.packages.survey.www.respond.unfinished_surveys {dbqd.contrib.packages.survey.www.respond.unfinished_surveys {
      select max(response_id) as response_id,count(*) as unfinished
      from survey_responses r
      inner join acs_objects o 
      	    on (r.response_id=o.object_id)
      where finished_p='f'
      	    and creation_user=:user_id
      	    and survey_id=:survey_id
      } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/packages/survey/www/respond-postgresql.xql}
dbqd.contrib.packages.survey.www.respond.survey_exists {dbqd.contrib.packages.survey.www.respond.survey_exists {
	    select 1 from surveys where survey_id = :survey_id
      } {} {} {} c:/web/openacs-4/contrib/packages/survey/www/respond.xql}
dbqd.contrib.packages.survey.www.respond.finish_survey {dbqd.contrib.packages.survey.www.respond.finish_survey {
      update survey_responses set finished_p='t' where response_id=:response_id
      } {} {} {} c:/web/openacs-4/contrib/packages/survey/www/respond.xql}
dbqd.contrib.packages.survey.www.respond.question_ids_select {dbqd.contrib.packages.survey.www.respond.question_ids_select {
      
    select question_id
    from survey_questions  
    where section_id = :section_id
    and active_p = 't'
    order by sort_order

      } {} {} {} c:/web/openacs-4/contrib/packages/survey/www/respond.xql}
dbqd.contrib.packages.survey.www.respond.survey_sections {dbqd.contrib.packages.survey.www.respond.survey_sections {
select section_id from survey_sections
where survey_id=:survey_id
} {} {} {} c:/web/openacs-4/contrib/packages/survey/www/respond.xql}
dbqd.contrib.packages.survey.www.respond.first_section {dbqd.contrib.packages.survey.www.respond.first_section {
      select section_id from survey_sections where
      survey_id=:survey_id and rownum=1
      order by sort_key
      } {} {} {} c:/web/openacs-4/contrib/packages/survey/www/respond.xql}
dbqd.contrib.packages.survey.www.respond.questions {dbqd.contrib.packages.survey.www.respond.questions {
select question_text, presentation_type, abstract_data_type,
      question_id, required_p from survey_questions where
      section_id=:section_id and active_p='t' order by sort_order 
      } {} {} {} c:/web/openacs-4/contrib/packages/survey/www/respond.xql}
dbqd.contrib.packages.survey.www.respond.get_style {dbqd.contrib.packages.survey.www.respond.get_style {
      select 'survey/'||template_file as style from survey_templates t, surveys s
      where s.survey_id=:survey_id
      and s.template=t.template_id
      } {} {} {} c:/web/openacs-4/contrib/packages/survey/www/respond.xql}
dbqd.contrib.packages.survey.www.survey-portlet-oracle.survey_select {dbqd.contrib.packages.survey.www.survey-portlet-oracle.survey_select {

select s.survey_id, s.name, s.editable_p, s.single_response_p,
sub.response_id, to_char(sub.creation_date,'Month FMDD, YYYY') as creation_date
from surveys s, 
(select creation_date, survey_id, response_id from survey_responses
	sr, acs_objects o where o.creation_user=:user_id and
	o.object_id=sr.response_id
) sub 
where s.package_id=:package_id
and s.enabled_p='t'
and 't' = acs_permission.permission_p(s.survey_id, :user_id, 'write')
and s.survey_id=sub.survey_id(+)
order by upper(s.name), creation_date desc
    	} {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/packages/survey/www/survey-portlet-oracle.xql}
dbqd.contrib.packages.survey.www.survey-portlet.survey_select {dbqd.contrib.packages.survey.www.survey-portlet.survey_select {
select s.survey_id, s.name, s.editable_p, s.single_response_p,
sub.response_id, to_char(sub.creation_date,'Month FMDD, YYYY') as creation_date
from surveys s left outer join 
(select creation_date, survey_id, response_id from survey_responses
	sr, acs_objects o where o.creation_user=:user_id and
	o.object_id=sr.response_id
) sub on (s.survey_id=sub.survey_id)
where s.package_id=:package_id
and s.enabled_p='t'
and 't' = acs_permission__permission_p(s.survey_id, :user_id, 'write')
order by upper(s.name), creation_date desc
    	} {} {} {postgresql 7.1} c:/web/openacs-4/contrib/packages/survey/www/survey-portlet-postgresql.xql}
dbqd.contrib.packages.survey.www.view-attachment.get_file_info {dbqd.contrib.packages.survey.www.view-attachment.get_file_info {
	select r.revision_id, r.mime_type as file_type
	from cr_revisions r
	where revision_id=(
		select attachment_answer from survey_question_responses
		where question_id=:question_id
                and   response_id=:response_id
			  )
      } {} {} {} c:/web/openacs-4/contrib/packages/survey/www/view-attachment.xql}
dbqd.contrib.packages.users-selection.tcl.users-selection-procs-oracle.user_selection::add.insert_user_selection {dbqd.contrib.packages.users-selection.tcl.users-selection-procs-oracle.user_selection::add.insert_user_selection {
      
	    begin
	    :1 := us_selection.new (
				    package_id => :package_id,
				    title => :title,
				    description => :description,
				    bind_vars => :bind_vars,
				    context_id => :package_id,
				    creation_user => :user_id,
				    creation_ip => :creation_ip);
	    end;
	
      } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/packages/users-selection/tcl/users-selection-procs-oracle.xql}
dbqd.contrib.packages.users-selection.tcl.users-selection-procs-oracle.user_selection::edit.update_user_selection {dbqd.contrib.packages.users-selection.tcl.users-selection-procs-oracle.user_selection::edit.update_user_selection {
      
	    begin
	    us_selection.edit (
			       selection_id => :selection_id,
			       title => :title,
			       description => :description,
			       bind_vars => :bind_vars,
			       modifying_user => :user_id,
			       modifying_ip => :modifying_ip);
	    end;
	
      } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/packages/users-selection/tcl/users-selection-procs-oracle.xql}
dbqd.contrib.packages.users-selection.tcl.users-selection-procs-oracle.user_selection::delete.delete_user_selection {dbqd.contrib.packages.users-selection.tcl.users-selection-procs-oracle.user_selection::delete.delete_user_selection {
      
	    begin
	    us_selection.delete (
				 selection_id => :selection_id);
	    end;
	
      } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/packages/users-selection/tcl/users-selection-procs-oracle.xql}
dbqd.contrib.packages.users-selection.tcl.users-selection-procs.user_selection::add.insert_user_selection {dbqd.contrib.packages.users-selection.tcl.users-selection-procs.user_selection::add.insert_user_selection {
	    select us_selection__new (
	    	   		    null,
				    :package_id,
				    :title,
				    :description,
				    :full_sql,
				    :bind_vars,
				    :package_id,
				    :user_id,
				    current_timestamp,
				    :creation_ip);
	
      } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/packages/users-selection/tcl/users-selection-procs-postgresql.xql}
dbqd.contrib.packages.users-selection.tcl.users-selection-procs.user_selection::edit.update_user_selection {dbqd.contrib.packages.users-selection.tcl.users-selection-procs.user_selection::edit.update_user_selection {
	select us_selection__edit (
	       :selection_id,
	       :title,
	       :description,
	       :full_sql,
	       :bind_vars,
	       :user_id,
	       :modifying_ip);
      } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/packages/users-selection/tcl/users-selection-procs-postgresql.xql}
dbqd.contrib.packages.users-selection.tcl.users-selection-procs.user_selection::delete.delete_user_selection {dbqd.contrib.packages.users-selection.tcl.users-selection-procs.user_selection::delete.delete_user_selection {
	select us_selection__delete(:selection_id);
      } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/packages/users-selection/tcl/users-selection-procs-postgresql.xql}
dbqd.contrib.packages.users-selection.tcl.users-selection-procs.user_selection::add.set_selection_sql {dbqd.contrib.packages.users-selection.tcl.users-selection-procs.user_selection::add.set_selection_sql {
      
	    update us_selections
	    set full_sql = :full_sql
	    where selection_id = :selection_id
	
      } {} {} {} c:/web/openacs-4/contrib/packages/users-selection/tcl/users-selection-procs.xql}
dbqd.contrib.packages.users-selection.tcl.users-selection-procs.user_selection::edit.update_selection_sql {dbqd.contrib.packages.users-selection.tcl.users-selection-procs.user_selection::edit.update_selection_sql {
      
	    update us_selections
	    set full_sql = :full_sql
	    where selection_id = :selection_id
	
      } {} {} {} c:/web/openacs-4/contrib/packages/users-selection/tcl/users-selection-procs.xql}
dbqd.contrib.packages.users-selection.www.admin.selection-ae-oracle.insert_new_bind_vars {dbqd.contrib.packages.users-selection.www.admin.selection-ae-oracle.insert_new_bind_vars {
      
		    insert into us_bind_vars (selection_id, name)
		    (select :selection_id as selection_id, :bind_var as name
		     from dual
		     where not exists (select 1 from us_bind_vars
				       where selection_id = :selection_id
				       and name = :bind_var))
		
      } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/packages/users-selection/www/admin/selection-ae-oracle.xql}
dbqd.contrib.packages.users-selection.www.admin.selection-ae.insert_new_bind_vars {dbqd.contrib.packages.users-selection.www.admin.selection-ae.insert_new_bind_vars {
      
		    insert into us_bind_vars (selection_id, name)
		    (select :selection_id as selection_id, :bind_var as name
		     
		     where not exists (select 1 from us_bind_vars
				       where selection_id = :selection_id
				       and name = :bind_var))
		
      } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/packages/users-selection/www/admin/selection-ae-postgresql.xql}
dbqd.contrib.packages.users-selection.www.admin.selection-ae.get_copied_selection {dbqd.contrib.packages.users-selection.www.admin.selection-ae.get_copied_selection {
      
	    select title, description, full_sql, bind_vars
	    from us_selections
	    where selection_id = :copy_id
	
      } {} {} {} c:/web/openacs-4/contrib/packages/users-selection/www/admin/selection-ae.xql}
dbqd.contrib.packages.users-selection.www.admin.selection-ae.get_selection {dbqd.contrib.packages.users-selection.www.admin.selection-ae.get_selection {
      
	select title, description, full_sql, bind_vars
	from us_selections
	where selection_id = :selection_id
    
      } {} {} {} c:/web/openacs-4/contrib/packages/users-selection/www/admin/selection-ae.xql}
dbqd.contrib.packages.users-selection.www.admin.selection-ae.delete_unused_bind_vars {dbqd.contrib.packages.users-selection.www.admin.selection-ae.delete_unused_bind_vars {

		delete from us_bind_vars
		where selection_id = :selection_id
		and name not in ($bind_var_sql_list)

      } {} {} {} c:/web/openacs-4/contrib/packages/users-selection/www/admin/selection-ae.xql}
dbqd.contrib.packages.users-selection.www.admin.selection-csv.get_selection {dbqd.contrib.packages.users-selection.www.admin.selection-csv.get_selection {
      
    select title, description, full_sql, bind_vars
    from us_selections
    where selection_id = :selection_id

      } {} {} {} c:/web/openacs-4/contrib/packages/users-selection/www/admin/selection-csv.xql}
dbqd.contrib.packages.users-selection.www.admin.selection-delete-2-oracle.delete_users_selection {dbqd.contrib.packages.users-selection.www.admin.selection-delete-2-oracle.delete_users_selection {
      
	begin
	us_selection.delete(:selection_id);
	end;
    
      } {} {} {oracle 8.1.6} c:/web/openacs-4/contrib/packages/users-selection/www/admin/selection-delete-2-oracle.xql}
dbqd.contrib.packages.users-selection.www.admin.selection-delete-2.delete_users_selection {dbqd.contrib.packages.users-selection.www.admin.selection-delete-2.delete_users_selection {
      select us_selection__delete(:selection_id);
      } {} {} {postgresql 7.1} c:/web/openacs-4/contrib/packages/users-selection/www/admin/selection-delete-2-postgresql.xql}
dbqd.contrib.packages.users-selection.www.admin.selection-delete.get_users_selection_info {dbqd.contrib.packages.users-selection.www.admin.selection-delete.get_users_selection_info {
      
    select title
    from us_selections
    where selection_id = :selection_id
    and package_id = :package_id

      } {} {} {} c:/web/openacs-4/contrib/packages/users-selection/www/admin/selection-delete.xql}
dbqd.contrib.packages.users-selection.www.admin.selection-execute.get_selection {dbqd.contrib.packages.users-selection.www.admin.selection-execute.get_selection {
      
    select title, description, full_sql, bind_vars
    from us_selections
    where selection_id = :selection_id

      } {} {} {} c:/web/openacs-4/contrib/packages/users-selection/www/admin/selection-execute.xql}
dbqd.contrib.packages.users-selection.www.admin.selection-execute.get_bind_vars {dbqd.contrib.packages.users-selection.www.admin.selection-execute.get_bind_vars {
      
    select name, description, default_value
    from us_bind_vars
    where selection_id = :selection_id
    order by name

      } {} {} {} c:/web/openacs-4/contrib/packages/users-selection/www/admin/selection-execute.xql}
dbqd.contrib.packages.users-selection.www.admin.selection-execute.count {dbqd.contrib.packages.users-selection.www.admin.selection-execute.count {
      select count(*) from ($query_string) q
      } {} {} {} c:/web/openacs-4/contrib/packages/users-selection/www/admin/selection-execute.xql}
dbqd.contrib.packages.users-selection.www.admin.selection-vars.get_selection {dbqd.contrib.packages.users-selection.www.admin.selection-vars.get_selection {
      
    select title, description, bind_vars
    from us_selections
    where selection_id = :selection_id

      } {} {} {} c:/web/openacs-4/contrib/packages/users-selection/www/admin/selection-vars.xql}
dbqd.contrib.packages.users-selection.www.admin.selection-vars.get_bind_vars {dbqd.contrib.packages.users-selection.www.admin.selection-vars.get_bind_vars {
      
    select name, description, default_value
    from us_bind_vars
    where selection_id = :selection_id

      } {} {} {} c:/web/openacs-4/contrib/packages/users-selection/www/admin/selection-vars.xql}
dbqd.contrib.packages.users-selection.www.admin.selection-vars.update_bind_var {dbqd.contrib.packages.users-selection.www.admin.selection-vars.update_bind_var {
      
		update us_bind_vars
		set description = :description,
		    default_value = :default_value
		where name = :var_name
		and selection_id = :selection_id
	    
      } {} {} {} c:/web/openacs-4/contrib/packages/users-selection/www/admin/selection-vars.xql}
dbqd.contrib.packages.users-selection.www.admin.selection.get_selection {dbqd.contrib.packages.users-selection.www.admin.selection.get_selection {
      
    select title, description, full_sql, bind_vars
    from us_selections
    where selection_id = :selection_id

      } {} {} {} c:/web/openacs-4/contrib/packages/users-selection/www/admin/selection.xql}
dbqd.contrib.packages.users-selection.www.admin.selection.get_bind_vars {dbqd.contrib.packages.users-selection.www.admin.selection.get_bind_vars {
      
    select name, description as descr, default_value
    from us_bind_vars
    where selection_id = :selection_id
    order by name

      } {} {} {} c:/web/openacs-4/contrib/packages/users-selection/www/admin/selection.xql}
dbqd.contrib.packages.users-selection.www.admin.selection.count {dbqd.contrib.packages.users-selection.www.admin.selection.count {
      select count(*) from ($query_string) q
      } {} {} {} c:/web/openacs-4/contrib/packages/users-selection/www/admin/selection.xql}
dbqd.contrib.packages.users-selection.www.selection-csv.get_selection {dbqd.contrib.packages.users-selection.www.selection-csv.get_selection {
      
    select title, description, full_sql, bind_vars
    from us_selections
    where selection_id = :selection_id

      } {} {} {} c:/web/openacs-4/contrib/packages/users-selection/www/selection-csv.xql}
dbqd.contrib.packages.users-selection.www.selection-execute.get_selection {dbqd.contrib.packages.users-selection.www.selection-execute.get_selection {
      
    select title, description, full_sql, bind_vars
    from us_selections
    where selection_id = :selection_id

      } {} {} {} c:/web/openacs-4/contrib/packages/users-selection/www/selection-execute.xql}
dbqd.contrib.packages.users-selection.www.selection-execute.get_bind_vars {dbqd.contrib.packages.users-selection.www.selection-execute.get_bind_vars {
      
    select name, description, default_value
    from us_bind_vars
    where selection_id = :selection_id
    order by name

      } {} {} {} c:/web/openacs-4/contrib/packages/users-selection/www/selection-execute.xql}
dbqd.contrib.packages.users-selection.www.selection-execute.count {dbqd.contrib.packages.users-selection.www.selection-execute.count {
      select count(*) from ($query_string) q
      } {} {} {} c:/web/openacs-4/contrib/packages/users-selection/www/selection-execute.xql}
dbqd.contrib.packages.users-selection.www.selection.get_selection {dbqd.contrib.packages.users-selection.www.selection.get_selection {
      
    select title, description, full_sql, bind_vars
    from us_selections
    where selection_id = :selection_id

      } {} {} {} c:/web/openacs-4/contrib/packages/users-selection/www/selection.xql}
dbqd.contrib.packages.users-selection.www.selection.get_bind_vars {dbqd.contrib.packages.users-selection.www.selection.get_bind_vars {
      
    select name, description as descr, default_value
    from us_bind_vars
    where selection_id = :selection_id
    order by name

      } {} {} {} c:/web/openacs-4/contrib/packages/users-selection/www/selection.xql}
dbqd.contrib.packages.users-selection.www.selection.count {dbqd.contrib.packages.users-selection.www.selection.count {
      select count(*) from ($query_string) q
      } {} {} {} c:/web/openacs-4/contrib/packages/users-selection/www/selection.xql}
dbqd.acs-admin.lib.service-parameters-oracle.services_select {dbqd.acs-admin.lib.service-parameters-oracle.services_select {
                    select package_id,
                           ap.package_key,
                           acs_object.name(package_id) as instance_name,
                           apm_package_type.num_parameters(ap.package_key) as parameter_count
                    from apm_packages ap,
                         apm_package_types
                    where ap.package_key = apm_package_types.package_key
                    and package_type = 'apm_service'
                    and (
                            acs_permission.permission_p(package_id, :user_id, 'read') = 't'
                         or acs_permission.permission_p(package_id, acs.magic_object_id('the_public'), 'read') = 't'
                        )
                    and   (ap.package_key != 'acs-subsite' or (select parent_id from site_nodes where object_id = package_id) is null)
                    order by instance_name
        } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-admin/lib/service-parameters-oracle.xql}
dbqd.acs-admin.lib.service-parameters.services_select {dbqd.acs-admin.lib.service-parameters.services_select {
                    select package_id,
                           ap.package_key,
                           acs_object__name(package_id) as instance_name,
                           apm_package_type__num_parameters(ap.package_key) as parameter_count
                    from apm_packages ap,
                         apm_package_types
                    where ap.package_key = apm_package_types.package_key
                    and package_type = 'apm_service'
                    and (
                            acs_permission__permission_p(package_id, :user_id, 'read') = 't'
                         or acs_permission__permission_p(package_id, acs__magic_object_id('the_public'), 'read') = 't'
                        )
                    and   (ap.package_key != 'acs-subsite' or (select parent_id from site_nodes where object_id = package_id) is null)
                    order by instance_name
        } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-admin/lib/service-parameters-postgresql.xql}
dbqd.acs-admin.tcl.apm-admin-procs-oracle.apm_higher_version_installed_p.apm_higher_version_installed_p {dbqd.acs-admin.tcl.apm-admin-procs-oracle.apm_higher_version_installed_p.apm_higher_version_installed_p {
      
		select apm_package_version.version_name_greater(:version_name, highest.version_name)
                from (select version_name 
		      from apm_package_versions
                      where version_id = apm_package.highest_version(:package_key)
                     ) highest
    
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-admin/tcl/apm-admin-procs-oracle.xql}
dbqd.acs-admin.tcl.apm-admin-procs.apm_higher_version_installed_p.apm_higher_version_installed_p {dbqd.acs-admin.tcl.apm-admin-procs.apm_higher_version_installed_p.apm_higher_version_installed_p {

		select apm_package_version__version_name_greater(:version_name, highest.version_name)
                from (select version_name
		      from apm_package_versions
                      where version_id = apm_package__highest_version(:package_key)
                     ) highest
    
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-admin/tcl/apm-admin-procs-postgresql.xql}
dbqd.acs-admin.tcl.apm-admin-procs.apm_parameter_section_slider.apm_parameter_sections {dbqd.acs-admin.tcl.apm-admin-procs.apm_parameter_section_slider.apm_parameter_sections {
      
	select distinct(section_name) 
	from apm_parameters
	where package_key = :package_key
    
      } {} {} {} c:/web/openacs-4/packages/acs-admin/tcl/apm-admin-procs.xql}
dbqd.acs-admin.www.apm.bulk-intall.version_select {dbqd.acs-admin.www.apm.bulk-intall.version_select {
      
	select pretty_name, version_name, package_key
	from apm_package_version_info i
	where version_id = :version_id
    
      } {} {} {} c:/web/openacs-4/packages/acs-admin/www/apm/bulk-intall.xql}
dbqd.acs-admin.www.apm.cvs-status.email_by_user_id {dbqd.acs-admin.www.apm.cvs-status.email_by_user_id {
      select email from parties where party_id = [ad_get_user_id]
      } {} {} {} c:/web/openacs-4/packages/acs-admin/www/apm/cvs-status.xql}
dbqd.acs-admin.www.apm.cvs-status.all_packages_owned_by_email {dbqd.acs-admin.www.apm.cvs-status.all_packages_owned_by_email {
      
    select v.package_key, v.version_id, v.package_name, v.version_name
    from   apm_package_version_info v, apm_package_owners o
    where  o.owner_url = :email
    and    v.version_id = o.version_id
    and    v.installed_p = 't'
    order by upper(package_name)
      } {} {} {} c:/web/openacs-4/packages/acs-admin/www/apm/cvs-status.xql}
dbqd.acs-admin.www.apm.cvs-status.apm_file_path {dbqd.acs-admin.www.apm.cvs-status.apm_file_path {
      
	    select path from apm_package_files where version_id = :version_id
	
      } {} {} {} c:/web/openacs-4/packages/acs-admin/www/apm/cvs-status.xql}
dbqd.acs-admin.www.apm.index-oracle.email_by_user_id {dbqd.acs-admin.www.apm.index-oracle.email_by_user_id {
      
    select email  from parties where party_id = :user_id

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-admin/www/apm/index-oracle.xql}
dbqd.acs-admin.www.apm.index-oracle.apm_table {dbqd.acs-admin.www.apm.index-oracle.apm_table {

        select   v.version_id, v.package_key, t.pretty_name, v.version_name, v.enabled_p,
                 v.installed_p, v.distribution_uri,
            (select count(*) from apm_package_versions v2
             where v2.package_key = v.package_key
             and   v2.installed_p = 't'
             and   apm_package_version.sortable_version_name(v2.version_name) > apm_package_version.sortable_version_name(v.version_name)) as  superseded_p,
             case
               when content_item.get_latest_revision(item_id) is null
               then 0
               else 1
             end as tarball_p
        from    apm_package_versions v, apm_package_types t
        where  t.package_key = v.package_key
        [ad_dimensional_sql $dimensional_list where and]
        [ad_order_by_from_sort_spec $orderby $table_def]

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-admin/www/apm/index-oracle.xql}
dbqd.acs-admin.www.apm.index-oracle.latest {dbqd.acs-admin.www.apm.index-oracle.latest {
      (installed_p = 't' or enabled_p = 't' or not exists (
         select 1 from apm_package_versions v2
         where v2.package_key = v.package_key
           and (v2.installed_p = 't' or v2.enabled_p = 't')
           and apm_package_version.sortable_version_name(v2.version_name) > apm_package_version.sortable_version_name(v.version_name)))
   } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-admin/www/apm/index-oracle.xql}
dbqd.acs-admin.www.apm.index.apm_table {dbqd.acs-admin.www.apm.index.apm_table {

        select   v.version_id, v.package_key, t.pretty_name, v.version_name, v.enabled_p,
                 v.installed_p, v.distribution_uri,
            (select count(*) from apm_package_versions v2
             where v2.package_key = v.package_key
             and   v2.installed_p
             and   apm_package_version__sortable_version_name(v2.version_name) >
                   apm_package_version__sortable_version_name(v.version_name)) as  superseded_p,
             case
               when content_item__get_latest_revision(item_id) is null
               then 0
               else 1
             end as tarball_p
        from    apm_package_versions v, apm_package_types t
        where  t.package_key = v.package_key
        [ad_dimensional_sql $dimensional_list where and]
        [ad_order_by_from_sort_spec $orderby $table_def]

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-admin/www/apm/index-postgresql.xql}
dbqd.acs-admin.www.apm.index.latest {dbqd.acs-admin.www.apm.index.latest {
     (installed_p = 't' or enabled_p = 't' or not exists (
        select 1 from apm_package_versions v2
        where v2.package_key = v.package_key
          and (v2.installed_p = 't' or v2.enabled_p = 't')
         and apm_package_version__sortable_version_name(v2.version_name) >
             apm_package_version__sortable_version_name(v.version_name)))
   } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-admin/www/apm/index-postgresql.xql}
dbqd.acs-admin.www.apm.index.email_by_user_id {dbqd.acs-admin.www.apm.index.email_by_user_id {
      select email  
      from parties 
      where party_id = :user_id
    } {} {} {} c:/web/openacs-4/packages/acs-admin/www/apm/index.xql}
dbqd.acs-admin.www.apm.index.apm_application {dbqd.acs-admin.www.apm.index.apm_application {
      t.package_type = 'apm_application'
    } {} {} {} c:/web/openacs-4/packages/acs-admin/www/apm/index.xql}
dbqd.acs-admin.www.apm.index.everyone {dbqd.acs-admin.www.apm.index.everyone {
      exists (select 1 from apm_package_owners o where o.version_id = v.version_id and owner_uri='mailto:$my_email')
    } {} {} {} c:/web/openacs-4/packages/acs-admin/www/apm/index.xql}
dbqd.acs-admin.www.apm.package-add-2.apm_pretty_plural_unique_ck {dbqd.acs-admin.www.apm.package-add-2.apm_pretty_plural_unique_ck {
	    select case when count(*) = 0 then 0 else 1 end from apm_package_types 
	    where pretty_plural = :pretty_plural
	
      } {} {} {} c:/web/openacs-4/packages/acs-admin/www/apm/package-add-2.xql}
dbqd.acs-admin.www.apm.package-add-2.apm_name_unique_ck {dbqd.acs-admin.www.apm.package-add-2.apm_name_unique_ck {
	    select case when count(*) = 0 then 0 else 1 end from apm_package_types 
	    where pretty_name = :pretty_name
	
      } {} {} {} c:/web/openacs-4/packages/acs-admin/www/apm/package-add-2.xql}
dbqd.acs-admin.www.apm.package-add-2.apm_uri_unique_ck {dbqd.acs-admin.www.apm.package-add-2.apm_uri_unique_ck {
	    select case when count(*) = 0 then 0 else 1 end from apm_package_types 
	    where package_uri = :package_uri
	
      } {} {} {} c:/web/openacs-4/packages/acs-admin/www/apm/package-add-2.xql}
dbqd.acs-admin.www.apm.package-add-2.apm_version_uri_unique_ck {dbqd.acs-admin.www.apm.package-add-2.apm_version_uri_unique_ck {
	    select case when count(*) =  0 then 0 else 1 end from apm_package_versions 
	    where version_uri = :version_uri
	
      } {} {} {} c:/web/openacs-4/packages/acs-admin/www/apm/package-add-2.xql}
dbqd.acs-admin.www.apm.package-add-2.apm_package_add_doubleclick {dbqd.acs-admin.www.apm.package-add-2.apm_package_add_doubleclick {
	select case when count(*) = 0 then 0 else 1 end from apm_package_versions
	where version_id = :version_id
    
      } {} {} {} c:/web/openacs-4/packages/acs-admin/www/apm/package-add-2.xql}
dbqd.acs-admin.www.apm.package-add.apm_get_name {dbqd.acs-admin.www.apm.package-add.apm_get_name {
       
    select first_names || ' ' || last_name as user_name, email from cc_users where user_id = :user_id

      } {} {} {} c:/web/openacs-4/packages/acs-admin/www/apm/package-add.xql}
dbqd.acs-admin.www.apm.packages.index-oracle.apm_archive_exist_p {dbqd.acs-admin.www.apm.packages.index-oracle.apm_archive_exist_p {

 select count(*) 
   from cr_revisions 
  where revision_id = (select content_item.get_latest_revision(item_id) 
                         from apm_package_versions
                  	where version_id = :version_id)

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-admin/www/apm/packages/index-oracle.xql}
dbqd.acs-admin.www.apm.packages.index-oracle.apm_archive_serve {dbqd.acs-admin.www.apm.packages.index-oracle.apm_archive_serve {

 
 select '[cr_fs_path]' || filename as content, 
        '[set storage_type file]' as storage_type
   from cr_revisions 
  where revision_id = (select content_item.get_latest_revision(item_id) 
                         from apm_package_versions
                  	where version_id = $version_id)

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-admin/www/apm/packages/index-oracle.xql}
dbqd.acs-admin.www.apm.packages.index.apm_archive_exist_p {dbqd.acs-admin.www.apm.packages.index.apm_archive_exist_p {

 select count(*) 
   from cr_revisions 
  where revision_id = (select content_item__get_latest_revision(item_id) 
                         from apm_package_versions
                  	where version_id = :version_id)

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-admin/www/apm/packages/index-postgresql.xql}
dbqd.acs-admin.www.apm.packages.index.apm_archive_serve {dbqd.acs-admin.www.apm.packages.index.apm_archive_serve {

 select '[cr_fs_path]' || r.content as content, i.storage_type
   from cr_revisions r, cr_items i
  where r.item_id = i.item_id 
    and r.revision_id = (select content_item__get_latest_revision(item_id) 
                         from apm_package_versions
                  	where version_id = :version_id)

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-admin/www/apm/packages/index-postgresql.xql}
dbqd.acs-admin.www.apm.packages-install-3-oracle.apm_package_upgrade_from {dbqd.acs-admin.www.apm.packages-install-3-oracle.apm_package_upgrade_from {
      
	    select version_name from apm_package_versions
	    where package_key = :package_key
	    and version_id = apm_package.highest_version(:package_key)
	
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-admin/www/apm/packages-install-3-oracle.xql}
dbqd.acs-admin.www.apm.packages-install-3.apm_package_upgrade_from {dbqd.acs-admin.www.apm.packages-install-3.apm_package_upgrade_from {
      
	    select version_name from apm_package_versions
	    where package_key = :package_key
	    and version_id = apm_package__highest_version(:package_key)
	
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-admin/www/apm/packages-install-3-postgresql.xql}
dbqd.acs-admin.www.apm.parameter-add-2.param_name_unique_ck {dbqd.acs-admin.www.apm.parameter-add-2.param_name_unique_ck {
	    select case when count(*) = 0 then 0 else 1 end
	    from apm_parameters
	    where parameter_name = :parameter_name and
              package_key = :package_key
      } {} {} {} c:/web/openacs-4/packages/acs-admin/www/apm/parameter-add-2.xql}
dbqd.acs-admin.www.apm.parameter-add-2.apm_parameter_register_doubleclick_p {dbqd.acs-admin.www.apm.parameter-add-2.apm_parameter_register_doubleclick_p {
      
	select 1 from apm_parameters where parameter_id = :parameter_id
    
      } {} {} {} c:/web/openacs-4/packages/acs-admin/www/apm/parameter-add-2.xql}
dbqd.acs-admin.www.apm.parameter-add.apm_get_name {dbqd.acs-admin.www.apm.parameter-add.apm_get_name {
       
    select package_key, pretty_name, version_name, acs_object_id_seq.nextval as parameter_id
      from apm_package_version_info
     where version_id = :version_id

      } {} {} {} c:/web/openacs-4/packages/acs-admin/www/apm/parameter-add.xql}
dbqd.acs-admin.www.apm.parameter-edit.param_info {dbqd.acs-admin.www.apm.parameter-edit.param_info {
       
    select parameter_name, datatype, description, default_value, min_n_values, max_n_values, parameter_id, 
    section_name, default_value
      from apm_parameters
     where parameter_id = :parameter_id

      } {} {} {} c:/web/openacs-4/packages/acs-admin/www/apm/parameter-edit.xql}
dbqd.acs-admin.www.apm.parameter-edit.apm_get_name {dbqd.acs-admin.www.apm.parameter-edit.apm_get_name {
       
    select pretty_name, version_name, package_key
      from apm_package_version_info
     where version_id = :version_id

      } {} {} {} c:/web/openacs-4/packages/acs-admin/www/apm/parameter-edit.xql}
dbqd.acs-admin.www.apm.version-dependencies-oracle.apm_package_info_by_version_id {dbqd.acs-admin.www.apm.version-dependencies-oracle.apm_package_info_by_version_id {
      
    select package_key, pretty_name, version_name, installed_p 
    from apm_package_version_info 
    where version_id = :version_id

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-admin/www/apm/version-dependencies-oracle.xql}
dbqd.acs-admin.www.apm.version-dependencies-oracle.apm_all_dependencies {dbqd.acs-admin.www.apm.version-dependencies-oracle.apm_all_dependencies {
      
	select dependency_id, service_uri, service_version
	from   apm_package_dependencies
	where  version_id = :version_id
	and    dependency_type = :dependency_type_prep
	order by service_uri
    
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-admin/www/apm/version-dependencies-oracle.xql}
dbqd.acs-admin.www.apm.version-dependencies-oracle.apm_specific_version_dependencies {dbqd.acs-admin.www.apm.version-dependencies-oracle.apm_specific_version_dependencies {
select t.pretty_name dep_pretty_name, v.version_name dep_version_name, v.version_id dep_version_id
from apm_package_versions v, apm_package_dependencies d, apm_package_types t
where d.service_uri = :service_uri
and d.dependency_type = :other_dependency_type_prep
and d.version_id = v.version_id
and t.package_key = v.package_key 
and apm_package_version.sortable_version_name(d.service_version) $sign apm_package_version.sortable_version_name(:service_version)
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-admin/www/apm/version-dependencies-oracle.xql}
dbqd.acs-admin.www.apm.version-dependencies.apm_package_info_by_version_id {dbqd.acs-admin.www.apm.version-dependencies.apm_package_info_by_version_id {
      
    select package_key, pretty_name, version_name, installed_p 
    from apm_package_version_info 
    where version_id = :version_id

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-admin/www/apm/version-dependencies-postgresql.xql}
dbqd.acs-admin.www.apm.version-dependencies.apm_all_dependencies {dbqd.acs-admin.www.apm.version-dependencies.apm_all_dependencies {
      
	select dependency_id, service_uri, service_version
	from   apm_package_dependencies
	where  version_id = :version_id
	and    dependency_type = :dependency_type_prep
	order by service_uri
    
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-admin/www/apm/version-dependencies-postgresql.xql}
dbqd.acs-admin.www.apm.version-dependencies.apm_specific_version_dependencies {dbqd.acs-admin.www.apm.version-dependencies.apm_specific_version_dependencies {
        select t.pretty_name as dep_pretty_name, v.version_name as dep_version_name,
               v.version_id as dep_version_id
        from apm_package_versions v, apm_package_dependencies d, apm_package_types t
        where d.service_uri = :service_uri
           and d.dependency_type = :other_dependency_type_prep
           and d.version_id = v.version_id
           and t.package_key = v.package_key 
           and apm_package_version__sortable_version_name(d.service_version) $sign
               apm_package_version__sortable_version_name(:service_version)
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-admin/www/apm/version-dependencies-postgresql.xql}
dbqd.acs-admin.www.apm.version-dependencies.apm_package_info_by_version_id {dbqd.acs-admin.www.apm.version-dependencies.apm_package_info_by_version_id {
      
    select package_key, pretty_name, version_name, installed_p 
    from apm_package_version_info 
    where version_id = :version_id

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-admin/www/apm/version-dependencies-postgresql.xql}
dbqd.acs-admin.www.apm.version-dependencies.apm_all_dependencies {dbqd.acs-admin.www.apm.version-dependencies.apm_all_dependencies {
      
	select dependency_id, service_uri, service_version
	from   apm_package_dependencies
	where  version_id = :version_id
	and    dependency_type = :dependency_type_prep
	order by service_uri
    
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-admin/www/apm/version-dependencies-postgresql.xql}
dbqd.acs-admin.www.apm.version-dependency-add-2.apm_dependency_doubleclick_check {dbqd.acs-admin.www.apm.version-dependency-add-2.apm_dependency_doubleclick_check {
      
	select count(*) from apm_package_dependencies
	where dependency_id = :dependency_id
    
      } {} {} {} c:/web/openacs-4/packages/acs-admin/www/apm/version-dependency-add-2.xql}
dbqd.acs-admin.www.apm.version-dependency-add-oracle.apm_all_service_uri {dbqd.acs-admin.www.apm.version-dependency-add-oracle.apm_all_service_uri {
    select distinct service_uri, service_version
    from   apm_package_dependencies
    order by service_uri, apm_package_version.sortable_version_name(service_version)

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-admin/www/apm/version-dependency-add-oracle.xql}
dbqd.acs-admin.www.apm.version-dependency-add.apm_all_service_uri {dbqd.acs-admin.www.apm.version-dependency-add.apm_all_service_uri {
    select distinct service_uri, service_version,
        apm_package_version__sortable_version_name(service_version)
    from apm_package_dependencies
    order by service_uri, apm_package_version__sortable_version_name(service_version)

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-admin/www/apm/version-dependency-add-postgresql.xql}
dbqd.acs-admin.www.apm.version-dependency-add.apm_package_info_by_version_id_and_package {dbqd.acs-admin.www.apm.version-dependency-add.apm_package_info_by_version_id_and_package {
      
    select p.package_key, p.package_uri, 
    p.pretty_name, v.version_name
    from   apm_package_types p, apm_package_versions v
    where  v.version_id = :version_id
    and    v.package_key = p.package_key

      } {} {} {} c:/web/openacs-4/packages/acs-admin/www/apm/version-dependency-add.xql}
dbqd.acs-admin.www.apm.version-edit-2.apm_version_uri_unique_ck {dbqd.acs-admin.www.apm.version-edit-2.apm_version_uri_unique_ck {
	    select case when count(*) = 0 then 0 else 1 end from apm_package_versions 
	    where version_uri = :version_uri
	
      } {} {} {} c:/web/openacs-4/packages/acs-admin/www/apm/version-edit-2.xql}
dbqd.acs-admin.www.apm.version-edit-2.old_version_name {dbqd.acs-admin.www.apm.version-edit-2.old_version_name {
      
	    select version_name as old_version_name, version_uri as old_version_uri 
	    from apm_package_versions
	    where version_id = $version_id
	
      } {} {} {} c:/web/openacs-4/packages/acs-admin/www/apm/version-edit-2.xql}
dbqd.acs-admin.www.apm.version-edit.apm_all_version_info {dbqd.acs-admin.www.apm.version-edit.apm_all_version_info {
      
    select version_id, package_key, package_uri, pretty_name, version_name, version_uri, auto_mount,
    summary, description_format, description, release_date, vendor, vendor_uri,
    enabled_p, installed_p, tagged_p, imported_p, data_model_loaded_p, activation_date, tarball_length, 
    deactivation_date, distribution_uri, distribution_date, singleton_p, initial_install_p
    from apm_package_version_info where version_id = :version_id

      } {} {} {} c:/web/openacs-4/packages/acs-admin/www/apm/version-edit.xql}
dbqd.acs-admin.www.apm.version-edit.apm_all_owners {dbqd.acs-admin.www.apm.version-edit.apm_all_owners {
      
    select owner_name, owner_uri from apm_package_owners where version_id = :version_id

      } {} {} {} c:/web/openacs-4/packages/acs-admin/www/apm/version-edit.xql}
dbqd.acs-admin.www.apm.version-fs-scan.apm_package_info {dbqd.acs-admin.www.apm.version-fs-scan.apm_package_info {
      
    select p.package_key, p.package_url, v.package_name, v.version_name, v.package_id
    from   apm_packages p, apm_package_versions v
    where  v.version_id = :version_id
    and    v.package_id = p.package_id

      } {} {} {} c:/web/openacs-4/packages/acs-admin/www/apm/version-fs-scan.xql}
dbqd.acs-admin.www.apm.version-generate-diffs.apm_package_by_version_id {dbqd.acs-admin.www.apm.version-generate-diffs.apm_package_by_version_id {
      
    select package_name, version_name, package_id from apm_package_version_info where version_id = :version_id

      } {} {} {} c:/web/openacs-4/packages/acs-admin/www/apm/version-generate-diffs.xql}
dbqd.acs-admin.www.apm.version-parameter-values.apm_package_by_version_id {dbqd.acs-admin.www.apm.version-parameter-values.apm_package_by_version_id {
      
    select package_name, version_name, package_id from apm_package_version_info where version_id = :version_id

      } {} {} {} c:/web/openacs-4/packages/acs-admin/www/apm/version-parameter-values.xql}
dbqd.acs-admin.www.apm.version-parameter-values.apm_all_elements {dbqd.acs-admin.www.apm.version-parameter-values.apm_all_elements {
      
select element_id, element_name, description
from   ad_parameter_elements
where  version_id = :version_id
order by element_name

      } {} {} {} c:/web/openacs-4/packages/acs-admin/www/apm/version-parameter-values.xql}
dbqd.acs-admin.www.apm.version-parameter-values.apm_value {dbqd.acs-admin.www.apm.version-parameter-values.apm_value {
      
	select value from ad_parameter_values where element_id = :element_id
    
      } {} {} {} c:/web/openacs-4/packages/acs-admin/www/apm/version-parameter-values.xql}
dbqd.acs-admin.www.apm.version-parameters-oracle.parameter_table {dbqd.acs-admin.www.apm.version-parameters-oracle.parameter_table {

            select parameter_name, nvl(description, 'No Description') description, datatype, 
                default_value, parameter_id, nvl(section_name, 'No Section') section_name
            from apm_parameters
            where package_key = :package_key
            $sql_clauses
       } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-admin/www/apm/version-parameters-oracle.xql}
dbqd.acs-admin.www.apm.version-parameters.parameter_table {dbqd.acs-admin.www.apm.version-parameters.parameter_table {

            select parameter_name, coalesce(description, 'No Description') as description, datatype, 
                default_value, parameter_id, coalesce(section_name, 'No Section') as section_name
            from apm_parameters
            where package_key = :package_key
            $sql_clauses

       } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-admin/www/apm/version-parameters-postgresql.xql}
dbqd.acs-admin.www.apm.version-parameters.apm_package_by_version_id {dbqd.acs-admin.www.apm.version-parameters.apm_package_by_version_id {
      
    select pretty_name, version_name, package_key
      from apm_package_version_info 
     where version_id = :version_id

      } {} {} {} c:/web/openacs-4/packages/acs-admin/www/apm/version-parameters.xql}
dbqd.acs-admin.www.apm.version-tag.apm_package_by_version_id {dbqd.acs-admin.www.apm.version-tag.apm_package_by_version_id {
      
    select package_name, version_name, package_id 
    from apm_package_version_info where version_id = :version_id

      } {} {} {} c:/web/openacs-4/packages/acs-admin/www/apm/version-tag.xql}
dbqd.acs-admin.www.apm.version-tag.apm_all_paths {dbqd.acs-admin.www.apm.version-tag.apm_all_paths {
      
	select path from apm_package_files where version_id = :version_id order by path

      } {} {} {} c:/web/openacs-4/packages/acs-admin/www/apm/version-tag.xql}
dbqd.acs-admin.www.apm.version-tag.apm_all_files_untag {dbqd.acs-admin.www.apm.version-tag.apm_all_files_untag {
      
	update apm_package_versions 
	set    tagged_p   = 'f' 
	where  version_id = :version_id
    
      } {} {} {} c:/web/openacs-4/packages/acs-admin/www/apm/version-tag.xql}
dbqd.acs-admin.www.apm.version-tag.apm_all_files_tag {dbqd.acs-admin.www.apm.version-tag.apm_all_files_tag {
      
	update apm_package_versions 
	set    tagged_p   = 't' 
	where  version_id = :version_id
    
      } {} {} {} c:/web/openacs-4/packages/acs-admin/www/apm/version-tag.xql}
dbqd.acs-admin.www.apm.version-view-oracle.apm_enabled_version_info {dbqd.acs-admin.www.apm.version-view-oracle.apm_enabled_version_info {
    select version_id as installed_version_id, version_name as installed_version_name,
           enabled_p as installed_enabled_p,
           apm_package_version.version_name_greater(version_name, :version_name) as version_name_greater
    from   apm_package_versions
    where  package_key = :package_key
    and    installed_p = 't'
    and rownum = 1

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-admin/www/apm/version-view-oracle.xql}
dbqd.acs-admin.www.apm.version-view-oracle.apm_data_model_install_version {dbqd.acs-admin.www.apm.version-view-oracle.apm_data_model_install_version {
    select data_model_installed_version from (
        select version_name as data_model_installed_version
        from   apm_package_versions
        where  package_key = :package_key
        and    data_model_loaded_p = 't'
        order by apm_package_version.sortable_version_name(version_name) desc
    )
    where rownum = 1

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-admin/www/apm/version-view-oracle.xql}
dbqd.acs-admin.www.apm.version-view.apm_enabled_version_info {dbqd.acs-admin.www.apm.version-view.apm_enabled_version_info {
    select version_id as installed_version_id, version_name as installed_version_name,
           enabled_p as installed_enabled_p,
           apm_package_version__version_name_greater(version_name, :version_name) as version_name_greater
    from   apm_package_versions
    where  package_key = :package_key
    and    installed_p = 't'
    limit 1
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-admin/www/apm/version-view-postgresql.xql}
dbqd.acs-admin.www.apm.version-view.apm_data_model_install_version {dbqd.acs-admin.www.apm.version-view.apm_data_model_install_version {
    select data_model_installed_version from (
        select version_name as data_model_installed_version
        from   apm_package_versions
        where  package_key = :package_key
        and    data_model_loaded_p = 't'
        order by apm_package_version__sortable_version_name(version_name) desc
    ) as bad_postgres_needs_this
    limit 1

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-admin/www/apm/version-view-postgresql.xql}
dbqd.acs-admin.www.apm.version-view.apm_all_version_info {dbqd.acs-admin.www.apm.version-view.apm_all_version_info {
      
    select version_id, package_key, package_uri, pretty_name, version_name, version_uri,
    summary, description_format, description, singleton_p, initial_install_p,
    to_char(release_date, 'Month DD, YYYY') as release_date , vendor, vendor_uri, auto_mount,
    enabled_p, installed_p, tagged_p, imported_p, data_model_loaded_p, 
    to_char(activation_date, 'Month DD, YYYY') as activation_date,
    tarball_length, distribution_uri,
    to_char(deactivation_date, 'Month DD, YYYY') as deactivation_date,
    to_char(distribution_date, 'Month DD, YYYY') as distribution_date
 from apm_package_version_info 
 where version_id = :version_id

      } {} {} {} c:/web/openacs-4/packages/acs-admin/www/apm/version-view.xql}
dbqd.acs-admin.www.apm.version-view.supported_databases {dbqd.acs-admin.www.apm.version-view.supported_databases {
      
    select pretty_db_name
    from apm_package_db_types
    where exists (select 1
                  from apm_package_files
                  where version_id = :version_id
                  and   db_type = db_type_key)

      } {} {} {} c:/web/openacs-4/packages/acs-admin/www/apm/version-view.xql}
dbqd.acs-admin.www.apm.version-view.apm_all_owners {dbqd.acs-admin.www.apm.version-view.apm_all_owners {
      
    select owner_uri, owner_name from apm_package_owners where version_id = :version_id

      } {} {} {} c:/web/openacs-4/packages/acs-admin/www/apm/version-view.xql}
dbqd.acs-admin.www.apm.write-all-specs.apm_get_all_packages {dbqd.acs-admin.www.apm.write-all-specs.apm_get_all_packages {
      
    select version_id, version_name, pretty_name, distribution_uri, v.package_key
    from   apm_package_versions v, apm_package_types t
    where  installed_p = 't'
    and v.package_key = t.package_key
    order by upper(pretty_name)

      } {} {} {} c:/web/openacs-4/packages/acs-admin/www/apm/write-all-specs.xql}
dbqd.acs-admin.www.index-oracle.subsite_admin_urls {dbqd.acs-admin.www.index-oracle.subsite_admin_urls {
      
    select site_node.url(node_id) || 'admin/' as admin_url, instance_name
    from site_nodes s, apm_packages p
    where s.object_id = p.package_id
    and p.package_key = 'acs-subsite'
    order by upper(instance_name), instance_name

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-admin/www/index-oracle.xql}
dbqd.acs-admin.www.index.subsite_admin_urls {dbqd.acs-admin.www.index.subsite_admin_urls {
      
    select site_node__url(node_id) || 'admin/' as admin_url, instance_name
    from site_nodes s, apm_packages p
    where s.object_id = p.package_id
    and p.package_key = 'acs-subsite'
    order by upper(instance_name), instance_name

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-admin/www/index-postgresql.xql}
dbqd.acs-admin.www.index.installed_packages {dbqd.acs-admin.www.index.installed_packages {
      select package_key,
             pretty_name as pretty_name
      from   apm_package_types
      order  by upper(pretty_name), pretty_name
    } {} {} {} c:/web/openacs-4/packages/acs-admin/www/index.xql}
dbqd.acs-admin.www.test.signed-cookies-test-2.get_token_value {dbqd.acs-admin.www.test.signed-cookies-test-2.get_token_value {
      
    select token from secret_tokens
    where token_id = :token_id

      } {} {} {} c:/web/openacs-4/packages/acs-admin/www/test/signed-cookies-test-2.xql}
dbqd.acs-admin.www.users.become.password {dbqd.acs-admin.www.users.become.password {
      select password from users where user_id=$user_id
      } {} {} {} c:/web/openacs-4/packages/acs-admin/www/users/become.xql}
dbqd.acs-admin.www.users.complex-search-oracle.registration_before_days {dbqd.acs-admin.www.users.complex-search-oracle.registration_before_days {

        creation_date < sysdate - :registration_before_days

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-admin/www/users/complex-search-oracle.xql}
dbqd.acs-admin.www.users.complex-search-oracle.registration_after_days {dbqd.acs-admin.www.users.complex-search-oracle.registration_after_days {

        creation_date >= sysdate - :registration_after_days

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-admin/www/users/complex-search-oracle.xql}
dbqd.acs-admin.www.users.complex-search-oracle.last_visit_before_days {dbqd.acs-admin.www.users.complex-search-oracle.last_visit_before_days {

        last_visit < sysdate - :last_visit_before_days

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-admin/www/users/complex-search-oracle.xql}
dbqd.acs-admin.www.users.complex-search-oracle.last_visit_after_days {dbqd.acs-admin.www.users.complex-search-oracle.last_visit_after_days {

        last_visit >= sysdate - :last_visit_after_days

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-admin/www/users/complex-search-oracle.xql}
dbqd.acs-admin.www.users.complex-search.registration_before_days {dbqd.acs-admin.www.users.complex-search.registration_before_days {

        creation_date < now() - (:registration_before_days || ' days')::interval

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-admin/www/users/complex-search-postgresql.xql}
dbqd.acs-admin.www.users.complex-search.registration_after_days {dbqd.acs-admin.www.users.complex-search.registration_after_days {

        creation_date >= now() - (:registration_after_days || ' days')::interval

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-admin/www/users/complex-search-postgresql.xql}
dbqd.acs-admin.www.users.complex-search.last_visit_before_days {dbqd.acs-admin.www.users.complex-search.last_visit_before_days {

        last_visit < now() - (:last_visit_before_days || ' days')::interval

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-admin/www/users/complex-search-postgresql.xql}
dbqd.acs-admin.www.users.complex-search.last_visit_after_days {dbqd.acs-admin.www.users.complex-search.last_visit_after_days {

        last_visit >= now() - (:last_visit_after_days || ' days')::interval

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-admin/www/users/complex-search-postgresql.xql}
dbqd.acs-admin.www.users.complex-search.user_group_name_from_id {dbqd.acs-admin.www.users.complex-search.user_group_name_from_id {
      select group_name from groups where group_id = :limit_to_users_in_group_id
      } {} {} {} c:/web/openacs-4/packages/acs-admin/www/users/complex-search.xql}
dbqd.acs-admin.www.users.index.users_n_users {dbqd.acs-admin.www.users.index.users_n_users {
      select 
    count(*) as n_users, 
    sum(case when member_state = 'deleted' then 1 else 0 end) as n_deleted_users, 
    max(creation_date) as last_registration
    from cc_users
    where email not in ('anonymous', 'system')
      } {} {} {} c:/web/openacs-4/packages/acs-admin/www/users/index.xql}
dbqd.acs-admin.www.users.index.groups_select {dbqd.acs-admin.www.users.index.groups_select {
      
select groups.group_id, 
       groups.group_name, 
       m.num as n_members, 
       c.num as n_components 
from groups, 
     (select group_id, count(*) as num 
      from group_member_map group by group_id) m, 
     (select group_id, count(*) as num 
      from group_component_map group by group_id) c 
where groups.group_id=m.group_id 
  and groups.group_id = c.group_id
order by group_name

      } {} {} {} c:/web/openacs-4/packages/acs-admin/www/users/index.xql}
dbqd.acs-admin.www.users.member-state-change-oracle.get_states {dbqd.acs-admin.www.users.member-state-change-oracle.get_states {
            select email_verified_p as email_verified_p_old,
                   member_state as member_state_old,
                   first_names || ' ' || last_name as name,
                   email,
                   rel_id,
                   rownum as row_id
            from cc_users
            where user_id = :user_id
        } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-admin/www/users/member-state-change-oracle.xql}
dbqd.acs-admin.www.users.member-state-change-oracle.member_approve {dbqd.acs-admin.www.users.member-state-change-oracle.member_approve {

                        begin membership_rel.approve( rel_id => :rel_id ); end;
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-admin/www/users/member-state-change-oracle.xql}
dbqd.acs-admin.www.users.member-state-change-oracle.member_ban {dbqd.acs-admin.www.users.member-state-change-oracle.member_ban {

                       begin membership_rel.ban( rel_id => :rel_id ); end;
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-admin/www/users/member-state-change-oracle.xql}
dbqd.acs-admin.www.users.member-state-change-oracle.member_reject {dbqd.acs-admin.www.users.member-state-change-oracle.member_reject {

                       begin membership_rel.reject( rel_id => :rel_id ); end;
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-admin/www/users/member-state-change-oracle.xql}
dbqd.acs-admin.www.users.member-state-change-oracle.member_deleted {dbqd.acs-admin.www.users.member-state-change-oracle.member_deleted {

                       begin membership_rel.del( rel_id => :rel_id ); end;
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-admin/www/users/member-state-change-oracle.xql}
dbqd.acs-admin.www.users.member-state-change-oracle.member_unapprove {dbqd.acs-admin.www.users.member-state-change-oracle.member_unapprove {

                       begin membership_rel.unapprove( rel_id => :rel_id ); end;
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-admin/www/users/member-state-change-oracle.xql}
dbqd.acs-admin.www.users.member-state-change-oracle.approve_email {dbqd.acs-admin.www.users.member-state-change-oracle.approve_email {

                       begin acs_user.approve_email ( user_id => :user_id ); end;
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-admin/www/users/member-state-change-oracle.xql}
dbqd.acs-admin.www.users.member-state-change-oracle.unapprove_email {dbqd.acs-admin.www.users.member-state-change-oracle.unapprove_email {

                       begin acs_user.unapprove_email ( user_id => :user_id ); end;
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-admin/www/users/member-state-change-oracle.xql}
dbqd.acs-admin.www.users.member-state-change.get_states {dbqd.acs-admin.www.users.member-state-change.get_states {
      select u.email_verified_p as email_verified_p_old,
          mr.member_state as member_state_old,
          per.first_names || ' ' || per.last_name as name,
          part.email, mr.rel_id, u.oid as row_id
      from users u
      JOIN parties part on (part.party_id = u.user_id)
        JOIN persons per on (per.person_id = u.user_id)
      LEFT JOIN membership_rels mr on (mr.rel_id = u.user_id)
      where u.user_id = :user_id
      
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-admin/www/users/member-state-change-postgresql.xql}
dbqd.acs-admin.www.users.member-state-change.approve_email {dbqd.acs-admin.www.users.member-state-change.approve_email {
	select acs_user__approve_email (:user_id);
	} {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-admin/www/users/member-state-change-postgresql.xql}
dbqd.acs-admin.www.users.member-state-change.unapprove_email {dbqd.acs-admin.www.users.member-state-change.unapprove_email {
	select acs_user__unapprove_email (:user_id);
	} {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-admin/www/users/member-state-change-postgresql.xql}
dbqd.acs-admin.www.users.member-state-change.admin_email {dbqd.acs-admin.www.users.member-state-change.admin_email {
      select email from parties where party_id = :admin_user_id
      } {} {} {} c:/web/openacs-4/packages/acs-admin/www/users/member-state-change.xql}
dbqd.acs-admin.www.users.modify-admin-privileges-oracle.grant_admin {dbqd.acs-admin.www.users.modify-admin-privileges-oracle.grant_admin {
select acs_permission.grant_permission(
	acs.magic_object_id('security_context_root'), 
	:user_id, 
	'admin')
} {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-admin/www/users/modify-admin-privileges-oracle.xql}
dbqd.acs-admin.www.users.modify-admin-privileges-oracle.revoke_admin {dbqd.acs-admin.www.users.modify-admin-privileges-oracle.revoke_admin {
select acs_permission.revoke_permission(
        acs.magic_object_id('security_context_root'),
        :user_id,
        'admin')
} {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-admin/www/users/modify-admin-privileges-oracle.xql}
dbqd.acs-admin.www.users.modify-admin-privileges.grant_admin {dbqd.acs-admin.www.users.modify-admin-privileges.grant_admin {
select acs_permission__grant_permission(
	acs__magic_object_id('security_context_root'), 
	:user_id, 
	'admin')
} {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-admin/www/users/modify-admin-privileges-postgresql.xql}
dbqd.acs-admin.www.users.modify-admin-privileges.revoke_admin {dbqd.acs-admin.www.users.modify-admin-privileges.revoke_admin {
select acs_permission__revoke_permission(
        acs__magic_object_id('security_context_root'),
        :user_id,
        'admin')
} {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-admin/www/users/modify-admin-privileges-postgresql.xql}
dbqd.acs-admin.www.users.one-oracle.user_info {dbqd.acs-admin.www.users.one-oracle.user_info {
      select first_names, 
             last_name, 
             username, 
             email,
             nvl(screen_name,'&lt; none set up &gt;') as screen_name,
             creation_date, 
             creation_ip, 
             to_char(last_visit, 'YYYY-MM-DD HH24:MI:SS') as last_visit_ansi, 
             member_state,
             email_verified_p, 
             url
      from   cc_users
      where  user_id = :user_id
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-admin/www/users/one-oracle.xql}
dbqd.acs-admin.www.users.one-oracle.get_item_id {dbqd.acs-admin.www.users.one-oracle.get_item_id {
      select live_revision as revision_id, nvl(title,'view this portrait') portrait_title
from acs_rels a, cr_items c, cr_revisions cr 
where a.object_id_two = c.item_id
and c.live_revision = cr.revision_id
and a.object_id_one = :user_id
and a.rel_type = 'user_portrait_rel'
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-admin/www/users/one-oracle.xql}
dbqd.acs-admin.www.users.one-oracle.user_contributions {dbqd.acs-admin.www.users.one-oracle.user_contributions {
      select at.pretty_name, at.pretty_plural, a.creation_date, acs_object.name(a.object_id) object_name
from acs_objects a, acs_object_types at
where a.object_type = at.object_type
and a.creation_user = :user_id
order by object_name, creation_date
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-admin/www/users/one-oracle.xql}
dbqd.acs-admin.www.users.one.user_contributions {dbqd.acs-admin.www.users.one.user_contributions {
      select at.pretty_name, at.pretty_plural, a.creation_date,
          acs_object__name(a.object_id) as object_name
      from acs_objects a, acs_object_types at
      where a.object_type = at.object_type
          and a.creation_user = :user_id
      order by object_name, creation_date
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-admin/www/users/one-postgresql.xql}
dbqd.acs-admin.www.users.one.user_info {dbqd.acs-admin.www.users.one.user_info {
      select first_names, 
             last_name, 
             username, 
             email,
             coalesce(screen_name,'&lt; none set up &gt;') as screen_name,
             creation_date, 
             creation_ip, 
             to_char(last_visit, 'YYYY-MM-DD HH24:MI:SS') as last_visit_ansi, 
             member_state,
             email_verified_p, 
             url
      from   cc_users
      where  user_id = :user_id
      } {} {} {} c:/web/openacs-4/packages/acs-admin/www/users/one.xql}
dbqd.acs-admin.www.users.one.user_is_admin {dbqd.acs-admin.www.users.one.user_is_admin {
      select privilege
      from acs_permissions
      where object_id = :sec_context_root
            and grantee_id = :user_id
            and privilege = 'admin'
      } {} {} {} c:/web/openacs-4/packages/acs-admin/www/users/one.xql}
dbqd.acs-admin.www.users.one.get_item_id {dbqd.acs-admin.www.users.one.get_item_id {
      select live_revision as revision_id,
          coalesce(title,'view this portrait') as portrait_title
      from acs_rels a, cr_items c, cr_revisions cr 
      where a.object_id_two = c.item_id
         and c.live_revision = cr.revision_id
         and a.object_id_one = :user_id
         and a.rel_type = 'user_portrait_rel'
      } {} {} {} c:/web/openacs-4/packages/acs-admin/www/users/one.xql}
dbqd.acs-admin.www.users.one.all_group_membership {dbqd.acs-admin.www.users.one.all_group_membership {
    select distinct lower(groups.group_name) as group_name
      from groups, group_member_map gm
     where groups.group_id = gm.group_id and gm.member_id=:user_id
  order by lower(groups.group_name)
  } {} {} {} c:/web/openacs-4/packages/acs-admin/www/users/one.xql}
dbqd.acs-admin.www.users.one.direct_group_membership {dbqd.acs-admin.www.users.one.direct_group_membership {
  select group_id, rel_id, party_names.party_name as group_name
    from (select /*+ ORDERED */ DISTINCT rels.rel_id, object_id_one as group_id, 
                 object_id_two
            from acs_rels rels
           where rels.rel_type = 'membership_rel'
                 and rels.object_id_two = :user_id) r, 
         party_names 
   where r.group_id = party_names.party_id
order by lower(party_names.party_name)
  } {} {} {} c:/web/openacs-4/packages/acs-admin/www/users/one.xql}
dbqd.acs-admin.www.users.registration-history-oracle.user_rows {dbqd.acs-admin.www.users.registration-history-oracle.user_rows {
      select to_char(creation_date,'YYYYMM') as sort_key, rtrim(to_char(creation_date,'Month')) as pretty_month, to_char(creation_date,'YYYY') as pretty_year, count(*) as n_new
from users, acs_objects
where users.user_id = acs_objects.object_id
and creation_date is not null
group by to_char(creation_date,'YYYYMM'), to_char(creation_date,'Month'), to_char(creation_date,'YYYY')
order by 1
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-admin/www/users/registration-history-oracle.xql}
dbqd.acs-admin.www.users.registration-history.user_rows {dbqd.acs-admin.www.users.registration-history.user_rows {
      select to_char(creation_date,'YYYYMM') as sort_key, rtrim(to_char(creation_date,'Month')) as pretty_month, to_char(creation_date,'YYYY') as pretty_year, count(*) as n_new
from users, acs_objects
where users.user_id = acs_objects.object_id
and creation_date is not null
group by to_char(creation_date,'YYYYMM'), to_char(creation_date,'Month'), to_char(creation_date,'YYYY')
order by 1
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-admin/www/users/registration-history-postgresql.xql}
dbqd.acs-admin.www.users.search.user_group_name_from_id {dbqd.acs-admin.www.users.search.user_group_name_from_id {
      select group_name from user_groups where group_id = :limit_to_users_in_group_id
      } {} {} {} c:/web/openacs-4/packages/acs-admin/www/users/search.xql}
dbqd.acs-admin.www.users.user-add-2.admin_name {dbqd.acs-admin.www.users.user-add-2.admin_name {
      select first_names || ' ' || last_name
      from persons
      where person_id = :admin_user_id
   } {} {} {} c:/web/openacs-4/packages/acs-admin/www/users/user-add-2.xql}
dbqd.acs-admin.www.users.user-add-2.double_click {dbqd.acs-admin.www.users.user-add-2.double_click {
      select count(user_id) from users where user_id = :user_id
   } {} {} {} c:/web/openacs-4/packages/acs-admin/www/users/user-add-2.xql}
dbqd.acs-admin.www.users.user-add-3.unused {dbqd.acs-admin.www.users.user-add-3.unused {
      select email from 
parties where party_id = :admin_user_id
      } {} {} {} c:/web/openacs-4/packages/acs-admin/www/users/user-add-3.xql}
dbqd.acs-api-browser.www.plsql-subprogram-one-oracle.source_text {dbqd.acs-api-browser.www.plsql-subprogram-one-oracle.source_text {

	select text
	from user_source
	where name = upper(:name)
	and type = upper(:type)
	order by line
    
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-api-browser/www/plsql-subprogram-one-oracle.xql}
dbqd.acs-api-browser.www.plsql-subprogram-one.source_text {dbqd.acs-api-browser.www.plsql-subprogram-one.source_text {

	select definition as text 
	from acs_func_defs 
	where lower(fname)=lower(:name)
    
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-api-browser/www/plsql-subprogram-one-postgresql.xql}
dbqd.acs-api-browser.www.plsql-subprograms-all-oracle.all_subprograms {dbqd.acs-api-browser.www.plsql-subprograms-all-oracle.all_subprograms {

    select object_type as type, object_name as name
    from user_objects
    where object_type in ('PACKAGE', 'PROCEDURE', 'FUNCTION')
    order by
    decode(object_type, 'PACKAGE', 0, 'PROCEDURE', 1, 'FUNCTION', 2) asc
    
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-api-browser/www/plsql-subprograms-all-oracle.xql}
dbqd.acs-api-browser.www.plsql-subprograms-all.all_subprograms {dbqd.acs-api-browser.www.plsql-subprograms-all.all_subprograms {

	select proname as name, 'FUNCTION' as type 
	from pg_proc 
	where proowner=(select usesysid from pg_user
	                where usename = current_user) 
	order by proname
    
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-api-browser/www/plsql-subprograms-all-postgresql.xql}
dbqd.acs-authentication.tcl.authentication-procs-oracle.auth::get_user_secret_token.select_secret_token {dbqd.acs-authentication.tcl.authentication-procs-oracle.auth::get_user_secret_token.select_secret_token {
             select rowid from users where user_id = :user_id
        } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-authentication/tcl/authentication-procs-oracle.xql}
dbqd.acs-authentication.tcl.authentication-procs.auth::get_user_secret_token.select_secret_token {dbqd.acs-authentication.tcl.authentication-procs.auth::get_user_secret_token.select_secret_token {
             select oid from users where user_id = :user_id
        } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-authentication/tcl/authentication-procs-postgresql.xql}
dbqd.acs-authentication.tcl.authority-procs-oracle.auth::authority::create.create_authority {dbqd.acs-authentication.tcl.authority-procs-oracle.auth::authority::create.create_authority {
            begin
            :1 := authority.new(
                authority_id => :authority_id,
                short_name => :short_name,
                pretty_name => :pretty_name,
                enabled_p => :enabled_p,
                sort_order => :sort_order,
                auth_impl_id => :auth_impl_id,
                pwd_impl_id => :pwd_impl_id,
                forgotten_pwd_url => :forgotten_pwd_url,
                change_pwd_url => :change_pwd_url,
                register_impl_id => :register_impl_id,
                register_url => :register_url,
                help_contact_text => :help_contact_text,
                creation_user => :creation_user,
                creation_ip => :creation_ip,
                context_id => :context_id
            );   
            end;                 
        } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-authentication/tcl/authority-procs-oracle.xql}
dbqd.acs-authentication.tcl.authority-procs-oracle.auth::authority::delete.delete_authority {dbqd.acs-authentication.tcl.authority-procs-oracle.auth::authority::delete.delete_authority {
            begin
                :1 := authority.del(
                    delete_authority_id => :authority_id
                );
            end;
        } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-authentication/tcl/authority-procs-oracle.xql}
dbqd.acs-authentication.tcl.authority-procs.auth::authority::create.create_authority {dbqd.acs-authentication.tcl.authority-procs.auth::authority::create.create_authority {
            select authority__new(
                :authority_id,
                null, -- object_type
                :short_name,
                :pretty_name,
                :enabled_p,
                :sort_order,
                :auth_impl_id,
                :pwd_impl_id,
                :forgotten_pwd_url,
                :change_pwd_url,
                :register_impl_id,
                :register_url,
                :help_contact_text,
                :creation_user,
                :creation_ip,
                :context_id
            );                    
        } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-authentication/tcl/authority-procs-postgresql.xql}
dbqd.acs-authentication.tcl.authority-procs.auth::authority::delete.delete_authority {dbqd.acs-authentication.tcl.authority-procs.auth::authority::delete.delete_authority {
            select authority__del(
                :authority_id
            );
        } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-authentication/tcl/authority-procs-postgresql.xql}
dbqd.acs-authentication.tcl.authority-procs.auth::authority::get_authority_options.select_authorities {dbqd.acs-authentication.tcl.authority-procs.auth::authority::get_authority_options.select_authorities {
          select pretty_name, authority_id
          from   auth_authorities
          where  enabled_p = 't'
          and    auth_impl_id is not null
          order  by sort_order
      } {} {} {} c:/web/openacs-4/packages/acs-authentication/tcl/authority-procs.xql}
dbqd.acs-authentication.tcl.authority-procs.auth::authority::get_id_not_cached.select_authority_id {dbqd.acs-authentication.tcl.authority-procs.auth::authority::get_id_not_cached.select_authority_id {
          select authority_id 
          from   auth_authorities 
          where  short_name = :short_name 
      } {} {} {} c:/web/openacs-4/packages/acs-authentication/tcl/authority-procs.xql}
dbqd.acs-authentication.tcl.driver-procs-oracle.auth::driver::set_parameter_value.update_parameter {dbqd.acs-authentication.tcl.driver-procs-oracle.auth::driver::set_parameter_value.update_parameter {            
            update auth_driver_params
            set    value = empty_clob()
            where  authority_id = :authority_id
            and    impl_id = :impl_id
            and    key = :parameter
            returning value into :1
        } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-authentication/tcl/driver-procs-oracle.xql}
dbqd.acs-authentication.tcl.driver-procs-oracle.auth::driver::set_parameter_value.insert_parameter {dbqd.acs-authentication.tcl.driver-procs-oracle.auth::driver::set_parameter_value.insert_parameter {            
            insert into auth_driver_params (authority_id, impl_id, key, value)
            values (:authority_id, :impl_id, :parameter, empty_clob())
            returning value into :1
        } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-authentication/tcl/driver-procs-oracle.xql}
dbqd.acs-authentication.tcl.driver-procs.auth::driver::set_parameter_value.update_parameter {dbqd.acs-authentication.tcl.driver-procs.auth::driver::set_parameter_value.update_parameter {            
            update auth_driver_params
            set    value = :value
            where  authority_id = :authority_id
            and    impl_id = :impl_id
            and    key = :parameter
        } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-authentication/tcl/driver-procs-postgresql.xql}
dbqd.acs-authentication.tcl.driver-procs.auth::driver::set_parameter_value.insert_parameter {dbqd.acs-authentication.tcl.driver-procs.auth::driver::set_parameter_value.insert_parameter {            
            insert into auth_driver_params (authority_id, impl_id, key, value)
            values (:authority_id, :impl_id, :parameter, :value)
        } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-authentication/tcl/driver-procs-postgresql.xql}
dbqd.acs-authentication.tcl.driver-procs.auth::driver::set_parameter_value.param_exists_p {dbqd.acs-authentication.tcl.driver-procs.auth::driver::set_parameter_value.param_exists_p {
            select count(*) 
            from   auth_driver_params
            where  impl_id = :impl_id
            and    authority_id = :authority_id
            and    key = :parameter
        } {} {} {} c:/web/openacs-4/packages/acs-authentication/tcl/driver-procs.xql}
dbqd.acs-authentication.tcl.sync-procs-oracle.auth::sync::job::get.select_job {dbqd.acs-authentication.tcl.sync-procs-oracle.auth::sync::job::get.select_job {
            select job_id,
                   to_char(job_start_time, 'YYYY-MM-DD HH24:MI:SS') as job_start_time,
                   to_char(job_end_time, 'YYYY-MM-DD HH24:MI:SS') as job_end_time,
                   interactive_p,
                   snapshot_p,
                   authority_id,
                   message,
                   creation_user,
                   doc_start_time,
                   doc_end_time,
                   doc_status,
                   doc_message,
                   document,
                   (j.job_end_time - j.job_start_time) * 24*60*60 as run_time_seconds,
                   (select count(e1.entry_id)
                    from   auth_batch_job_entries e1
                    where  e1.job_id = j.job_id) as num_actions,
                   (select count(e2.entry_id)
                    from   auth_batch_job_entries e2
                    where  e2.job_id = j.job_id
                    and    e2.success_p = 'f') as num_problems
            from    auth_batch_jobs j
            where  j.job_id = :job_id
        } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-authentication/tcl/sync-procs-oracle.xql}
dbqd.acs-authentication.tcl.sync-procs-oracle.auth::sync::job::start_get_document.update_doc_start_time {dbqd.acs-authentication.tcl.sync-procs-oracle.auth::sync::job::start_get_document.update_doc_start_time {
            update auth_batch_jobs
            set    doc_start_time = sysdate
            where  job_id = :job_id
        } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-authentication/tcl/sync-procs-oracle.xql}
dbqd.acs-authentication.tcl.sync-procs-oracle.auth::sync::job::end_get_document.update_doc_end {dbqd.acs-authentication.tcl.sync-procs-oracle.auth::sync::job::end_get_document.update_doc_end {
            update auth_batch_jobs
            set    doc_end_time = sysdate,
                   doc_status = :doc_status,
                   doc_message = :doc_message,
                   document = empty_clob(),
                   snapshot_p = :snapshot_p 
            where  job_id = :job_id
            returning document into :1
        } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-authentication/tcl/sync-procs-oracle.xql}
dbqd.acs-authentication.tcl.sync-procs-oracle.auth::sync::job::end.update_job_end {dbqd.acs-authentication.tcl.sync-procs-oracle.auth::sync::job::end.update_job_end {

            update auth_batch_jobs
            set    job_end_time = sysdate,
                   message = :message
            where  job_id = :job_id

        } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-authentication/tcl/sync-procs-oracle.xql}
dbqd.acs-authentication.tcl.sync-procs-oracle.auth::sync::job::create_entry.insert_entry {dbqd.acs-authentication.tcl.sync-procs-oracle.auth::sync::job::create_entry.insert_entry {

            insert into auth_batch_job_entries
            (entry_id, job_id, operation, username, user_id, success_p, message, element_messages)
            values
            (:entry_id, :job_id, :operation, :username, :user_id, :success_p_db, :message, empty_clob())
            returning element_messages into :1

        } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-authentication/tcl/sync-procs-oracle.xql}
dbqd.acs-authentication.tcl.sync-procs-oracle.auth::sync::purge_jobs.purge_jobs {dbqd.acs-authentication.tcl.sync-procs-oracle.auth::sync::purge_jobs.purge_jobs {

            delete from auth_batch_jobs
            where  job_end_time < sysdate - :num_days

        } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-authentication/tcl/sync-procs-oracle.xql}
dbqd.acs-authentication.tcl.sync-procs.auth::sync::job::get.select_job {dbqd.acs-authentication.tcl.sync-procs.auth::sync::job::get.select_job {
            select job_id,
                   to_char(job_start_time, 'YYYY-MM-DD HH24:MI:SS') as job_start_time,
                   to_char(job_end_time, 'YYYY-MM-DD HH24:MI:SS') as job_end_time,
                   interactive_p,
                   snapshot_p,
                   authority_id,
                   (select aa.pretty_name from auth_authorities aa where aa.authority_id = j.authority_id) as authority_pretty_name,
                   message,
                   creation_user,
                   to_char(doc_start_time, 'YYYY-MM-DD HH24:MI:SS') as doc_start_time,
                   to_char(doc_end_time, 'YYYY-MM-DD HH24:MI:SS') as doc_end_time,
                   doc_status,
                   doc_message,
                   document,
                   trunc(extract(epoch from (j.job_end_time - j.job_start_time))) as run_time_seconds,
                   (select count(e1.entry_id)
                    from   auth_batch_job_entries e1
                    where  e1.job_id = j.job_id) as num_actions,
                   (select count(e2.entry_id)
                    from   auth_batch_job_entries e2
                    where  e2.job_id = j.job_id
                    and    e2.success_p = 'f') as num_problems
            from    auth_batch_jobs j
            where  j.job_id = :job_id
        } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-authentication/tcl/sync-procs-postgresql.xql}
dbqd.acs-authentication.tcl.sync-procs.auth::sync::job::start_get_document.update_doc_start_time {dbqd.acs-authentication.tcl.sync-procs.auth::sync::job::start_get_document.update_doc_start_time {
            update auth_batch_jobs
            set    doc_start_time = current_timestamp
            where  job_id = :job_id
        } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-authentication/tcl/sync-procs-postgresql.xql}
dbqd.acs-authentication.tcl.sync-procs.auth::sync::job::end_get_document.update_doc_end {dbqd.acs-authentication.tcl.sync-procs.auth::sync::job::end_get_document.update_doc_end {
            update auth_batch_jobs
            set    doc_end_time = current_timestamp,
                   doc_status = :doc_status,
                   doc_message = :doc_message,
                   document = :document,
                   snapshot_p = :snapshot_p 
            where  job_id = :job_id
        } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-authentication/tcl/sync-procs-postgresql.xql}
dbqd.acs-authentication.tcl.sync-procs.auth::sync::job::end.update_job_end {dbqd.acs-authentication.tcl.sync-procs.auth::sync::job::end.update_job_end {

            update auth_batch_jobs
            set    job_end_time = current_timestamp,
                   message = :message
            where  job_id = :job_id

        } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-authentication/tcl/sync-procs-postgresql.xql}
dbqd.acs-authentication.tcl.sync-procs.auth::sync::job::create_entry.insert_entry {dbqd.acs-authentication.tcl.sync-procs.auth::sync::job::create_entry.insert_entry {

            insert into auth_batch_job_entries
            (entry_id, job_id, operation, username, user_id, success_p, message, element_messages)
            values
            (:entry_id, :job_id, :operation, :username, :user_id, :success_p_db, :message, :element_messages)

        } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-authentication/tcl/sync-procs-postgresql.xql}
dbqd.acs-authentication.tcl.sync-procs.auth::sync::purge_jobs.purge_jobs {dbqd.acs-authentication.tcl.sync-procs.auth::sync::purge_jobs.purge_jobs {

            delete from auth_batch_jobs
            where  job_end_time < current_timestamp - interval '$num_days days'

        } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-authentication/tcl/sync-procs-postgresql.xql}
dbqd.acs-authentication.tcl.sync-procs.auth::sync::entry::get.select_entry {dbqd.acs-authentication.tcl.sync-procs.auth::sync::entry::get.select_entry {
            select e.entry_id,
                   to_char(e.entry_time, 'YYYY-MM-DD HH24:MI:SS') as entry_time,
                   e.operation,
                   a.authority_id,
                   a.pretty_name as authority_pretty_name,
                   e.job_id,
                   e.username,
                   e.user_id,
                   e.success_p,
                   e.message,
                   e.element_messages
            from auth_batch_job_entries e,
                 auth_authorities a,
                 auth_batch_jobs j
            where e.entry_id = :entry_id
              and e.job_id = j.job_id
              and j.authority_id = a.authority_id
        } {} {} {} c:/web/openacs-4/packages/acs-authentication/tcl/sync-procs.xql}
dbqd.acs-authentication.tcl.test.acs-authentication-procs-oracle.auth::test::get_admin_user_id.select_user_id {dbqd.acs-authentication.tcl.test.acs-authentication-procs-oracle.auth::test::get_admin_user_id.select_user_id {
            select q.user_id from
            (select user_id
            from users
            where acs_permission.permission_p(:context_root_id, user_id, 'admin') = 't') q where rownum = 1
        } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-authentication/tcl/test/acs-authentication-procs-oracle.xql}
dbqd.acs-authentication.tcl.test.acs-authentication-procs-oracle.auth::test::get_password_vars.select_vars {dbqd.acs-authentication.tcl.test.acs-authentication-procs-oracle.auth::test::get_password_vars.select_vars {
            select q.* from
            (select u.user_id,
                    aa.authority_id,
                    u.username 
            from users u,
                       auth_authorities aa
            where u.authority_id = aa.authority_id
            and aa.short_name = 'local') q where rownum = 1
        } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-authentication/tcl/test/acs-authentication-procs-oracle.xql}
dbqd.acs-authentication.tcl.test.acs-authentication-procs.auth::test::get_admin_user_id.select_user_id {dbqd.acs-authentication.tcl.test.acs-authentication-procs.auth::test::get_admin_user_id.select_user_id {
            select user_id
            from users
            where acs_permission__permission_p(:context_root_id, user_id, 'admin') = 't'
            limit 1  
        } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-authentication/tcl/test/acs-authentication-procs-postgresql.xql}
dbqd.acs-authentication.tcl.test.acs-authentication-procs.auth::test::get_password_vars.select_vars {dbqd.acs-authentication.tcl.test.acs-authentication-procs.auth::test::get_password_vars.select_vars {
            select u.user_id,
                   aa.authority_id,
                   u.username 
            from users u,
                       auth_authorities aa
            where u.authority_id = aa.authority_id
            and aa.short_name = 'local'
            limit 1
        } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-authentication/tcl/test/acs-authentication-procs-postgresql.xql}
dbqd.acs-automated-testing.tcl.aa-test-procs-oracle.aa_run_testcase.delete_testcase_results_sql {dbqd.acs-automated-testing.tcl.aa-test-procs-oracle.aa_run_testcase.delete_testcase_results_sql {
    delete from aa_test_results
    where testcase_id = :testcase_id
  } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-automated-testing/tcl/aa-test-procs-oracle.xql}
dbqd.acs-automated-testing.tcl.aa-test-procs-oracle.aa_run_testcase.delete_testcase_final_results_sql {dbqd.acs-automated-testing.tcl.aa-test-procs-oracle.aa_run_testcase.delete_testcase_final_results_sql {
     delete from aa_test_final_results
     where testcase_id = :testcase_id
  } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-automated-testing/tcl/aa-test-procs-oracle.xql}
dbqd.acs-automated-testing.tcl.aa-test-procs-oracle.aa_log_result.test_result_insert {dbqd.acs-automated-testing.tcl.aa-test-procs-oracle.aa_log_result.test_result_insert {
     insert into aa_test_results
                      (testcase_id, package_key, test_id, timestamp, result,
                       notes)
              values (:aa_testcase_id, :aa_package_key, :aa_testcase_test_id,
                      sysdate, :test_result, :test_notes)
  } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-automated-testing/tcl/aa-test-procs-oracle.xql}
dbqd.acs-automated-testing.tcl.aa-test-procs-oracle.aa_log_final.testcase_result_insert {dbqd.acs-automated-testing.tcl.aa-test-procs-oracle.aa_log_final.testcase_result_insert {
    insert into aa_test_final_results
                    (testcase_id, package_key, timestamp, passes, fails)
    values (:aa_testcase_id, :aa_package_key, sysdate, :test_passes, :test_fails)
  } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-automated-testing/tcl/aa-test-procs-oracle.xql}
dbqd.acs-automated-testing.tcl.aa-test-procs.aa_run_testcase.delete_testcase_results_sql {dbqd.acs-automated-testing.tcl.aa-test-procs.aa_run_testcase.delete_testcase_results_sql {
    delete from aa_test_results
    where testcase_id = :testcase_id
  } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-automated-testing/tcl/aa-test-procs-postgresql.xql}
dbqd.acs-automated-testing.tcl.aa-test-procs.aa_run_testcase.delete_testcase_final_results_sql {dbqd.acs-automated-testing.tcl.aa-test-procs.aa_run_testcase.delete_testcase_final_results_sql {
     delete from aa_test_final_results
     where testcase_id = :testcase_id
  } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-automated-testing/tcl/aa-test-procs-postgresql.xql}
dbqd.acs-automated-testing.tcl.aa-test-procs.aa_log_result.test_result_insert {dbqd.acs-automated-testing.tcl.aa-test-procs.aa_log_result.test_result_insert {
     insert into aa_test_results
                      (testcase_id, package_key, test_id, timestamp,
                       result, notes)
              values (:aa_testcase_id, :aa_package_key, :aa_testcase_test_id,
                      current_timestamp, :test_result, :test_notes)
  } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-automated-testing/tcl/aa-test-procs-postgresql.xql}
dbqd.acs-automated-testing.tcl.aa-test-procs.aa_log_final.testcase_result_insert {dbqd.acs-automated-testing.tcl.aa-test-procs.aa_log_final.testcase_result_insert {
    insert into aa_test_final_results
                    (testcase_id, package_key, timestamp, passes, fails)
    values (:aa_testcase_id, :aa_package_key, current_timestamp, :test_passes, :test_fails)
  } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-automated-testing/tcl/aa-test-procs-postgresql.xql}
dbqd.acs-automated-testing.www.admin.index-oracle.acs-automated-testing.results_query {dbqd.acs-automated-testing.www.admin.index-oracle.acs-automated-testing.results_query {
    select testcase_id, package_key,
           to_char(timestamp,'MM/DD/YYYY HH:MI:SS') timestamp,
           passes, fails
    from aa_test_final_results
  } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-automated-testing/www/admin/index-oracle.xql}
dbqd.acs-automated-testing.www.admin.index.acs-automated-testing.results_query {dbqd.acs-automated-testing.www.admin.index.acs-automated-testing.results_query {
    select testcase_id, package_key,
           timestamp,
           passes, fails
    from aa_test_final_results
  } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-automated-testing/www/admin/index-postgresql.xql}
dbqd.acs-automated-testing.www.admin.testcase-oracle.acs-automated-testing.testcase_query {dbqd.acs-automated-testing.www.admin.testcase-oracle.acs-automated-testing.testcase_query {
    select to_char(timestamp,'DD/MM/YYYY HH:MI:SS') timestamp, result, notes
      from aa_test_results
      where testcase_id = :testcase_id and
            package_key = :package_key
      order by test_id
  } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-automated-testing/www/admin/testcase-oracle.xql}
dbqd.acs-automated-testing.www.admin.testcase-oracle.acs-automated-testing.get_testcase_fails_count {dbqd.acs-automated-testing.www.admin.testcase-oracle.acs-automated-testing.get_testcase_fails_count {
    select fails
    from aa_test_final_results
    where testcase_id = :testcase_id
  } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-automated-testing/www/admin/testcase-oracle.xql}
dbqd.acs-automated-testing.www.admin.testcase.acs-automated-testing.testcase_query {dbqd.acs-automated-testing.www.admin.testcase.acs-automated-testing.testcase_query {
    select timestamp, result, notes
      from aa_test_results
      where testcase_id = :testcase_id and
            package_key = :package_key
      order by test_id
  } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-automated-testing/www/admin/testcase-postgresql.xql}
dbqd.acs-automated-testing.www.admin.testcase.acs-automated-testing.get_testcase_fails_count {dbqd.acs-automated-testing.www.admin.testcase.acs-automated-testing.get_testcase_fails_count {
    select fails
    from aa_test_final_results
    where testcase_id = :testcase_id
  } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-automated-testing/www/admin/testcase-postgresql.xql}
dbqd.acs-content-repository.tcl.acs-content-repository-init-oracle.acs_cr_scheduled_release_exec.schedule_releases {dbqd.acs-content-repository.tcl.acs-content-repository-init-oracle.acs_cr_scheduled_release_exec.schedule_releases {

        begin
                cr_scheduled_release_exec;
        end;

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-content-repository/tcl/acs-content-repository-init-oracle.xql}
dbqd.acs-content-repository.tcl.acs-content-repository-init.acs_cr_scheduled_release_exec.schedule_releases {dbqd.acs-content-repository.tcl.acs-content-repository-init.acs_cr_scheduled_release_exec.schedule_releases {

         select cr_scheduled_release_exec();

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-content-repository/tcl/acs-content-repository-init-postgresql.xql}
dbqd.acs-content-repository.tcl.acs-content-repository-procs-oracle.cr_delete_scheduled_files.fetch_paths {dbqd.acs-content-repository.tcl.acs-content-repository-procs-oracle.cr_delete_scheduled_files.fetch_paths {

select distinct crftd.path, crftd.storage_area_key
          from cr_files_to_delete crftd
           where not exists (select 1 
                             from cr_revisions r 
                            where r.filename = crftd.path) 
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-content-repository/tcl/acs-content-repository-procs-oracle.xql}
dbqd.acs-content-repository.tcl.acs-content-repository-procs.cr_delete_scheduled_files.fetch_paths {dbqd.acs-content-repository.tcl.acs-content-repository-procs.cr_delete_scheduled_files.fetch_paths {
 SELECT distinct crftd.path, crftd.storage_area_key
   FROM cr_files_to_delete crftd
  WHERE not exists (SELECT 1
                      FROM cr_revisions r
                     WHERE r.content = crftd.path)
      } {} {} {} c:/web/openacs-4/packages/acs-content-repository/tcl/acs-content-repository-procs.xql}
dbqd.acs-content-repository.tcl.acs-content-repository-procs.cr_delete_scheduled_files.delete_files {dbqd.acs-content-repository.tcl.acs-content-repository-procs.cr_delete_scheduled_files.delete_files {
      delete from cr_files_to_delete
      } {} {} {} c:/web/openacs-4/packages/acs-content-repository/tcl/acs-content-repository-procs.xql}
dbqd.acs-content-repository.tcl.acs-content-repository-procs.cr_scan_mime_types.insert_mime_type {dbqd.acs-content-repository.tcl.acs-content-repository-procs.cr_scan_mime_types.insert_mime_type {
	    insert into cr_mime_types
	    (mime_type, file_extension)
	    select
	    :mime_type, :extension
	    from dual
	    where not exists (select 1 from cr_mime_types where mime_type = :mime_type)
      } {} {} {} c:/web/openacs-4/packages/acs-content-repository/tcl/acs-content-repository-procs.xql}
dbqd.acs-content-repository.tcl.doc-procs-oracle.doc::package_info.get_info {dbqd.acs-content-repository.tcl.doc-procs-oracle.doc::package_info.get_info {

        select doc.get_package_header(:package_name) from dual

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-content-repository/tcl/doc-procs-oracle.xql}
dbqd.acs-content-repository.tcl.doc-procs-oracle.doc::package_info.get_header {dbqd.acs-content-repository.tcl.doc-procs-oracle.doc::package_info.get_header {

        select doc.get_proc_header(:proc_name, :package_name) from dual
      
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-content-repository/tcl/doc-procs-oracle.xql}
dbqd.acs-content-repository.tcl.doc-procs-oracle.doc::package_list.get_packages {dbqd.acs-content-repository.tcl.doc-procs-oracle.doc::package_list.get_packages {

       select distinct 
        lower(name) as label,  
        lower(name) as value 
      from 
        user_source
      where 
        type='PACKAGE'
      and
        line=1
      order by label
     
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-content-repository/tcl/doc-procs-oracle.xql}
dbqd.acs-content-repository.tcl.doc-procs-oracle.doc::func_list.get_funcs {dbqd.acs-content-repository.tcl.doc-procs-oracle.doc::func_list.get_funcs {

       select distinct 
        lower(text) as line_header 
      from 
        user_source
      where 
        type='PACKAGE'
      and
        lower(name) = lower(:package_name)
      and (
          lower(text) like '%procedure%'
        or
          lower(text) like '%function%'
      )
      order by line_header
    
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-content-repository/tcl/doc-procs-oracle.xql}
dbqd.acs-content-repository.tcl.doc-procs-oracle.doc::func_multirow.get_functions {dbqd.acs-content-repository.tcl.doc-procs-oracle.doc::func_multirow.get_functions {

      select distinct 
        lower(text) as line_header 
      from 
        user_source
      where 
        type='PACKAGE'
      and
        lower(name) = lower(:package_name)
      and (
          lower(text) like '%procedure%'
        or
          lower(text) like '%function%'
      )
      order by line_header

    
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-content-repository/tcl/doc-procs-oracle.xql}
dbqd.acs-content-repository.tcl.doc-procs.doc::package_info.get_info {dbqd.acs-content-repository.tcl.doc-procs.doc::package_info.get_info {

        select doc__get_package_header(:package_name) from dual

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-content-repository/tcl/doc-procs-postgresql.xql}
dbqd.acs-content-repository.tcl.doc-procs.doc::get_proc_header.get_header {dbqd.acs-content-repository.tcl.doc-procs.doc::get_proc_header.get_header {

        select doc__get_proc_header(:proc_name, :package_name) from dual
      
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-content-repository/tcl/doc-procs-postgresql.xql}
dbqd.acs-content-repository.tcl.doc-procs.doc::package_list.get_packages {dbqd.acs-content-repository.tcl.doc-procs.doc::package_list.get_packages {

        select distinct 
          substr(proname,1,position('__' in proname)-1)  as label,
          substr(proname,1,position('__' in proname)-1)  as value        
        from 
          pg_proc 
        where 
          proname like '%\\\_\\\_%' 
        order by 
          label

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-content-repository/tcl/doc-procs-postgresql.xql}
dbqd.acs-content-repository.tcl.doc-procs.doc::func_list.get_funcs {dbqd.acs-content-repository.tcl.doc-procs.doc::func_list.get_funcs {

        select 
          'function ' || proname as line_header
        from 
          pg_proc 
        where 
          proname like lower(:package_name) || '\\\_\\\_%' 
        order by 
          line_header
    
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-content-repository/tcl/doc-procs-postgresql.xql}
dbqd.acs-content-repository.tcl.doc-procs.doc::func_multirow.get_functions {dbqd.acs-content-repository.tcl.doc-procs.doc::func_multirow.get_functions {

        select 
          'function ' || substr(proname,length(:package_name)+3) as line_header
        from 
          pg_proc 
        where 
          proname like lower(:package_name) || '\\\_\\\_%' 
        order by 
          line_header
  
    
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-content-repository/tcl/doc-procs-postgresql.xql}
dbqd.acs-content-repository.tcl.extlink-procs-oracle.content_extlink::new.extlink_new {dbqd.acs-content-repository.tcl.extlink-procs-oracle.content_extlink::new.extlink_new {

        begin
          :1 := content_extlink.new (
                  name => :name,
                  url => :url,
                  label => :label,
                  description => :description,
                  parent_id => :parent_id,
                  extlink_id => :extlink_id,
                  creation_user => :creation_user,
                  creation_ip => :creation_ip
                );
        end;

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-content-repository/tcl/extlink-procs-oracle.xql}
dbqd.acs-content-repository.tcl.extlink-procs-oracle.content_extlink::edit.extlink_update_object {dbqd.acs-content-repository.tcl.extlink-procs-oracle.content_extlink::edit.extlink_update_object {

        update acs_objects
        set last_modified = sysdate,
          modifying_user = :modifying_user,
          modifying_ip = :modifying_ip
        where object_id = :extlink_id

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-content-repository/tcl/extlink-procs-oracle.xql}
dbqd.acs-content-repository.tcl.extlink-procs-oracle.content_extlink::delete.extlink_delete {dbqd.acs-content-repository.tcl.extlink-procs-oracle.content_extlink::delete.extlink_delete {

          begin
            content_extlink.del (
              extlink_id => :extlink_id
            );
          end;

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-content-repository/tcl/extlink-procs-oracle.xql}
dbqd.acs-content-repository.tcl.extlink-procs-oracle.content_extlink::extlink_p.extlink_check {dbqd.acs-content-repository.tcl.extlink-procs-oracle.content_extlink::extlink_p.extlink_check {

        select content_extlink.is_extlink (:item_id)
        from dual

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-content-repository/tcl/extlink-procs-oracle.xql}
dbqd.acs-content-repository.tcl.extlink-procs.content_extlink::new.extlink_new {dbqd.acs-content-repository.tcl.extlink-procs.content_extlink::new.extlink_new {

        select content_extlink__new (
          :name,
          :url,
          :label,
          :description,
          :parent_id,
          :extlink_id,
          current_timestamp,
          :creation_user,
          :creation_ip
        );

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-content-repository/tcl/extlink-procs-postgresql.xql}
dbqd.acs-content-repository.tcl.extlink-procs.content_extlink::edit.extlink_update_object {dbqd.acs-content-repository.tcl.extlink-procs.content_extlink::edit.extlink_update_object {

        update acs_objects
        set last_modified = current_timestamp,
          modifying_user = :modifying_user,
          modifying_ip = :modifying_ip
        where object_id = :extlink_id

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-content-repository/tcl/extlink-procs-postgresql.xql}
dbqd.acs-content-repository.tcl.extlink-procs.content_extlink::delete.extlink_delete {dbqd.acs-content-repository.tcl.extlink-procs.content_extlink::delete.extlink_delete {

        select content_extlink__delete (
          :extlink_id
        );

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-content-repository/tcl/extlink-procs-postgresql.xql}
dbqd.acs-content-repository.tcl.extlink-procs.content_extlink::extlink_p.extlink_check {dbqd.acs-content-repository.tcl.extlink-procs.content_extlink::extlink_p.extlink_check {

        select content_extlink__is_extlink (
          :item_id
        );

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-content-repository/tcl/extlink-procs-postgresql.xql}
dbqd.acs-content-repository.tcl.extlink-procs.content_extlink::edit.extlink_update_extlink {dbqd.acs-content-repository.tcl.extlink-procs.content_extlink::edit.extlink_update_extlink {

        update cr_extlinks
        set url = :url,
          label = :label,
          description = :description
        where extlink_id = :extlink_id

      } {} {} {} c:/web/openacs-4/packages/acs-content-repository/tcl/extlink-procs.xql}
dbqd.acs-content-repository.tcl.extlink-procs.content_extlink::extlink_name.extlink_name {dbqd.acs-content-repository.tcl.extlink-procs.content_extlink::extlink_name.extlink_name {
          select label
          from cr_extlinks
          where extlink_id = :item_id
      } {} {} {} c:/web/openacs-4/packages/acs-content-repository/tcl/extlink-procs.xql}
dbqd.acs-content-repository.tcl.filter-procs-oracle.content::get_folder_labels.get_url {dbqd.acs-content-repository.tcl.filter-procs-oracle.content::get_folder_labels.get_url {

    select
      0 as tree_level, '' as name , 'Home' as title
    from
      dual
    UNION
    select
      t.tree_level, i.name, content_item.get_title(t.context_id) as title
    from (
      select 
        context_id, level as tree_level
      from 
        acs_objects
      where
        context_id <> content_item.get_root_folder
      connect by
        prior context_id = object_id
      start with
        object_id = :item_id
      ) t, cr_items i
    where
      i.item_id = t.context_id
    order by
      tree_level

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-content-repository/tcl/filter-procs-oracle.xql}
dbqd.acs-content-repository.tcl.filter-procs-oracle.content::get_content_value.gcv_get_revision_id {dbqd.acs-content-repository.tcl.filter-procs-oracle.content::get_content_value.gcv_get_revision_id {

	  begin
	    content_revision.to_temporary_clob(:revision_id);
	  end;

	} {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-content-repository/tcl/filter-procs-oracle.xql}
dbqd.acs-content-repository.tcl.filter-procs-oracle.content::get_content_value.gcv_get_previous_content {dbqd.acs-content-repository.tcl.filter-procs-oracle.content::get_content_value.gcv_get_previous_content {

    select 
      content
    from 
      cr_content_text
    where 
      revision_id = :revision_id

	} {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-content-repository/tcl/filter-procs-oracle.xql}
dbqd.acs-content-repository.tcl.filter-procs-oracle.content::init.get_item_info {dbqd.acs-content-repository.tcl.filter-procs-oracle.content::init.get_item_info {

    select 
      item_id, content_type
    from 
      cr_items
    where
      item_id = content_item.get_id(:url, :content_root)

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-content-repository/tcl/filter-procs-oracle.xql}
dbqd.acs-content-repository.tcl.filter-procs-oracle.content::init.get_template_info {dbqd.acs-content-repository.tcl.filter-procs-oracle.content::init.get_template_info {

    select 
      item_id, content_type
    from 
      cr_items
    where
      item_id = content_item.get_id(:url, :template_root)

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-content-repository/tcl/filter-procs-oracle.xql}
dbqd.acs-content-repository.tcl.filter-procs-oracle.content::init.get_template_url {dbqd.acs-content-repository.tcl.filter-procs-oracle.content::init.get_template_url {

        select 
          content_item.get_live_revision(content_item.get_template(:item_id, :context)) as template_id,
          content_template.get_path(content_item.get_template(:item_id, :context), :template_root) as template_url 
        from 
          dual

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-content-repository/tcl/filter-procs-oracle.xql}
dbqd.acs-content-repository.tcl.filter-procs.content::get_folder_labels.get_url {dbqd.acs-content-repository.tcl.filter-procs.content::get_folder_labels.get_url {

    select 0 as tree_level, '' as name , 'Home' as title
    UNION
    select t.tree_level, i.name, content_item.get_title(t.context_id) as title
    from (select o2.context_id, tree_level(o2.tree_sortkey) as tree_level
          from (select * from acs_objects where object_id = :item_id) o1, acs_objects o2
          where context_id <> content_item__get_root_folder()
            and o1.tree_sortkey between o2.tree_sortkey and tree_right(o2.tree_sortkey)) t,
      cr_items i
    where i.item_id = t.context_id
    order by tree_level

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-content-repository/tcl/filter-procs-postgresql.xql}
dbqd.acs-content-repository.tcl.filter-procs.content::get_content_value.gcv_get_revision_id {dbqd.acs-content-repository.tcl.filter-procs.content::get_content_value.gcv_get_revision_id {

        select 1

	} {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-content-repository/tcl/filter-procs-postgresql.xql}
dbqd.acs-content-repository.tcl.filter-procs.content::get_content_value.gcv_get_previous_content {dbqd.acs-content-repository.tcl.filter-procs.content::get_content_value.gcv_get_previous_content {
      
    select 
      content
    from 
      cr_revisions
    where 
      revision_id = :revision_id
  
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-content-repository/tcl/filter-procs-postgresql.xql}
dbqd.acs-content-repository.tcl.filter-procs.content::init.get_item_info {dbqd.acs-content-repository.tcl.filter-procs.content::init.get_item_info {

    select 
      item_id, content_type
    from 
      cr_items
    where
      item_id = content_item__get_id(:url, :content_root, 'f')

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-content-repository/tcl/filter-procs-postgresql.xql}
dbqd.acs-content-repository.tcl.filter-procs.content::init.get_template_info {dbqd.acs-content-repository.tcl.filter-procs.content::init.get_template_info {

    select 
      item_id, content_type
    from 
      cr_items
    where
      item_id = content_item__get_id(:url, :template_root, 'f')

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-content-repository/tcl/filter-procs-postgresql.xql}
dbqd.acs-content-repository.tcl.filter-procs.content::init.get_template_url {dbqd.acs-content-repository.tcl.filter-procs.content::init.get_template_url {

        select 
          content_item__get_live_revision(content_item__get_template(:item_id, :context)) as template_id,
          content_template__get_path(content_item__get_template(:item_id, :context),:template_root) as template_url 
        from 
          dual


      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-content-repository/tcl/filter-procs-postgresql.xql}
dbqd.acs-content-repository.tcl.filter-procs.content::init_all.get_template_url {dbqd.acs-content-repository.tcl.filter-procs.content::init_all.get_template_url {

        select 
          content_template__get_path(
          content_item__get_template(:item_id, :context),:template_root) as template_url 
        from 
          dual

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-content-repository/tcl/filter-procs-postgresql.xql}
dbqd.acs-content-repository.tcl.filter-procs.content::get_content.get_revision {dbqd.acs-content-repository.tcl.filter-procs.content::get_content.get_revision {

        select live_revision from cr_items where item_id = :item_id

      } {} {} {} c:/web/openacs-4/packages/acs-content-repository/tcl/filter-procs.xql}
dbqd.acs-content-repository.tcl.filter-procs.content::get_content.get_mime_type {dbqd.acs-content-repository.tcl.filter-procs.content::get_content.get_mime_type {

        select mime_type from cr_revisions 
        where revision_id = :revision_id

      } {} {} {} c:/web/openacs-4/packages/acs-content-repository/tcl/filter-procs.xql}
dbqd.acs-content-repository.tcl.filter-procs.content::get_content.get_content_type {dbqd.acs-content-repository.tcl.filter-procs.content::get_content.get_content_type {

        select content_type from cr_items 
        where item_id = :item_id

      } {} {} {} c:/web/openacs-4/packages/acs-content-repository/tcl/filter-procs.xql}
dbqd.acs-content-repository.tcl.filter-procs.content::get_content.get_table_name {dbqd.acs-content-repository.tcl.filter-procs.content::get_content.get_table_name {

        select table_name from acs_object_types 
        where object_type = :content_type

      } {} {} {} c:/web/openacs-4/packages/acs-content-repository/tcl/filter-procs.xql}
dbqd.acs-content-repository.tcl.filter-procs.content::get_content.content_as_text {dbqd.acs-content-repository.tcl.filter-procs.content::get_content.content_as_text {

	, content as text

	} {} {} {} c:/web/openacs-4/packages/acs-content-repository/tcl/filter-procs.xql}
dbqd.acs-content-repository.tcl.filter-procs.content::get_content.get_content {dbqd.acs-content-repository.tcl.filter-procs.content::get_content.get_content {

        select 
           x.*, 
          :content_type as content_type
          $text_sql
        from
          cr_revisions r, ${table_name}x x
        where
          r.revision_id = :revision_id
        and 
          x.revision_id = r.revision_id

      } {} {} {} c:/web/openacs-4/packages/acs-content-repository/tcl/filter-procs.xql}
dbqd.acs-content-repository.tcl.filter-procs.content::init.get_live_revision {dbqd.acs-content-repository.tcl.filter-procs.content::init.get_live_revision {

    select live_revision from cr_items where item_id = :item_id

      } {} {} {} c:/web/openacs-4/packages/acs-content-repository/tcl/filter-procs.xql}
dbqd.acs-content-repository.tcl.filter-procs.content::init_all.get_live_revision {dbqd.acs-content-repository.tcl.filter-procs.content::init_all.get_live_revision {

    select live_revision from cr_items where item_id = :item_id

      } {} {} {} c:/web/openacs-4/packages/acs-content-repository/tcl/filter-procs.xql}
dbqd.acs-content-repository.tcl.item-procs-oracle.item::get_title.gt_get_title {dbqd.acs-content-repository.tcl.item-procs-oracle.item::get_title.gt_get_title {
      
    select content_item.get_title(:item_id) from dual
  
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-content-repository/tcl/item-procs-oracle.xql}
dbqd.acs-content-repository.tcl.item-procs-oracle.item::is_publishable.ip_is_publishable_p {dbqd.acs-content-repository.tcl.item-procs-oracle.item::is_publishable.ip_is_publishable_p {
      
    select content_item.is_publishable(:item_id) from dual
  
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-content-repository/tcl/item-procs-oracle.xql}
dbqd.acs-content-repository.tcl.item-procs-oracle.item::get_revision_content.grc_get_all_content_1 {dbqd.acs-content-repository.tcl.item-procs-oracle.item::get_revision_content.grc_get_all_content_1 {

	, content.blob_to_string(content) as text

	} {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-content-repository/tcl/item-procs-oracle.xql}
dbqd.acs-content-repository.tcl.item-procs-oracle.item::get_id.id_get_item_id {dbqd.acs-content-repository.tcl.item-procs-oracle.item::get_id.id_get_item_id {
      select content_item__get_id(:url $root_sql) from dual
  
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-content-repository/tcl/item-procs-oracle.xql}
dbqd.acs-content-repository.tcl.item-procs-oracle.item::content_is_null.cin_get_content {dbqd.acs-content-repository.tcl.item-procs-oracle.item::content_is_null.cin_get_content {
      
    select 't' from cr_revisions r, cr_items i
      where r.revision_id = :revision_id
        and i.item_id = r.item_id
        and ((r.content is not null and i.storage_type in ('lob','text')) or
             (r.filename is not null and i.storage_type = 'file'))
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-content-repository/tcl/item-procs-oracle.xql}
dbqd.acs-content-repository.tcl.item-procs-oracle.item::get_template_id.gti_get_template_id {dbqd.acs-content-repository.tcl.item-procs-oracle.item::get_template_id.gti_get_template_id {

    select content_item.get_template(:item_id, :context) as template_id
    from dual

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-content-repository/tcl/item-procs-oracle.xql}
dbqd.acs-content-repository.tcl.item-procs-oracle.item::get_url.gu_get_path {dbqd.acs-content-repository.tcl.item-procs-oracle.item::get_url.gu_get_path {
      
    select content_item.get_path(:item_id, $root_folder_id) from dual
  
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-content-repository/tcl/item-procs-oracle.xql}
dbqd.acs-content-repository.tcl.item-procs-oracle.item::get_best_revision.gbr_get_best_revision {dbqd.acs-content-repository.tcl.item-procs-oracle.item::get_best_revision.gbr_get_best_revision {
      
    select content_item.get_best_revision(:item_id) from dual
  
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-content-repository/tcl/item-procs-oracle.xql}
dbqd.acs-content-repository.tcl.item-procs-oracle.item::copy.copy_item {dbqd.acs-content-repository.tcl.item-procs-oracle.item::copy.copy_item {
      
        begin
          content_item.copy(
            item_id => :item_id,
            target_folder_id => :target_folder_id,
            creation_user => :creation_user,
            creation_ip => :creation_ip
          );
        end; 
  
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-content-repository/tcl/item-procs-oracle.xql}
dbqd.acs-content-repository.tcl.item-procs.item::get_title.gt_get_title {dbqd.acs-content-repository.tcl.item-procs.item::get_title.gt_get_title {
      
    select content_item__get_title(:item_id, 'f') 
  
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-content-repository/tcl/item-procs-postgresql.xql}
dbqd.acs-content-repository.tcl.item-procs.item::is_publishable.ip_is_publishable_p {dbqd.acs-content-repository.tcl.item-procs.item::is_publishable.ip_is_publishable_p {
      
    select content_item__is_publishable(:item_id) 
  
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-content-repository/tcl/item-procs-postgresql.xql}
dbqd.acs-content-repository.tcl.item-procs.item::get_revision_content.grc_get_all_content_1 {dbqd.acs-content-repository.tcl.item-procs.item::get_revision_content.grc_get_all_content_1 {

	, content as text

	} {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-content-repository/tcl/item-procs-postgresql.xql}
dbqd.acs-content-repository.tcl.item-procs.item::get_id.id_get_item_id {dbqd.acs-content-repository.tcl.item-procs.item::get_id.id_get_item_id {

      select content_item__get_id(:url $root_sql) 
  
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-content-repository/tcl/item-procs-postgresql.xql}
dbqd.acs-content-repository.tcl.item-procs.item::content_is_null.cin_get_content {dbqd.acs-content-repository.tcl.item-procs.item::content_is_null.cin_get_content {
      
    select 't' from cr_revisions r, cr_items i
      where r.revision_id = :revision_id
        and i.item_id = r.item_id
        and ((r.content is not null and i.storage_type in ('text','file')) or
             (r.lob is not null and i.storage_type = 'lob'))

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-content-repository/tcl/item-procs-postgresql.xql}
dbqd.acs-content-repository.tcl.item-procs.item::get_template_id.gti_get_template_id {dbqd.acs-content-repository.tcl.item-procs.item::get_template_id.gti_get_template_id {

    select content_item__get_template(:item_id, :context) as template_id
    from dual

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-content-repository/tcl/item-procs-postgresql.xql}
dbqd.acs-content-repository.tcl.item-procs.item::get_url.gu_get_path {dbqd.acs-content-repository.tcl.item-procs.item::get_url.gu_get_path {
      
    select content_item__get_path(:item_id, $root_folder_id) 
  
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-content-repository/tcl/item-procs-postgresql.xql}
dbqd.acs-content-repository.tcl.item-procs.item::get_best_revision.gbr_get_best_revision {dbqd.acs-content-repository.tcl.item-procs.item::get_best_revision.gbr_get_best_revision {
      
    select content_item__get_best_revision(:item_id) 
  
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-content-repository/tcl/item-procs-postgresql.xql}
dbqd.acs-content-repository.tcl.item-procs.item::copy.copy_item {dbqd.acs-content-repository.tcl.item-procs.item::copy.copy_item {
      
         select content_item__copy(
                  :item_id,
                  :target_folder_id,
                  :creation_user,
                  :creation_ip
                )
  
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-content-repository/tcl/item-procs-postgresql.xql}
dbqd.acs-content-repository.tcl.item-procs.item::get_publish_status.gps_get_publish_status {dbqd.acs-content-repository.tcl.item-procs.item::get_publish_status.gps_get_publish_status {
      
    select publish_status from cr_items where item_id = :item_id
  
      } {} {} {} c:/web/openacs-4/packages/acs-content-repository/tcl/item-procs.xql}
dbqd.acs-content-repository.tcl.item-procs.item::get_revision_content.grc_get_table_names {dbqd.acs-content-repository.tcl.item-procs.item::get_revision_content.grc_get_table_names {
      
    select table_name from acs_object_types 
    where object_type = :content_type
  
      } {} {} {} c:/web/openacs-4/packages/acs-content-repository/tcl/item-procs.xql}
dbqd.acs-content-repository.tcl.item-procs.item::get_revision_content.grc_get_all_content {dbqd.acs-content-repository.tcl.item-procs.item::get_revision_content.grc_get_all_content {
      select 
    x.*, 
    :item_id as item_id $text_sql, 
    :content_type as content_type
  from
    cr_revisions r, ${table_name}x x
  where
    r.revision_id = :revision_id
  and 
    x.revision_id = r.revision_id
  
      } {} {} {} c:/web/openacs-4/packages/acs-content-repository/tcl/item-procs.xql}
dbqd.acs-content-repository.tcl.item-procs.item::content_methods_by_type.cmbt_get_content_mime_types {dbqd.acs-content-repository.tcl.item-procs.item::content_methods_by_type.cmbt_get_content_mime_types {
      
    select mime_type from cr_content_mime_type_map
      where content_type = :content_type
      and lower(mime_type) like 'text/%'
  
      } {} {} {} c:/web/openacs-4/packages/acs-content-repository/tcl/item-procs.xql}
dbqd.acs-content-repository.tcl.item-procs.item::get_content_type.gct_get_content_type {dbqd.acs-content-repository.tcl.item-procs.item::get_content_type.gct_get_content_type {
      
    select content_type from cr_items where
      item_id = :item_id
  
      } {} {} {} c:/web/openacs-4/packages/acs-content-repository/tcl/item-procs.xql}
dbqd.acs-content-repository.tcl.item-procs.item::get_item_from_revision.gifr_get_one_revision {dbqd.acs-content-repository.tcl.item-procs.item::get_item_from_revision.gifr_get_one_revision {
      
    select item_id from cr_revisions where revision_id = :revision_id
  
      } {} {} {} c:/web/openacs-4/packages/acs-content-repository/tcl/item-procs.xql}
dbqd.acs-content-repository.tcl.item-procs.item::get_type.get_content_type {dbqd.acs-content-repository.tcl.item-procs.item::get_type.get_content_type {
    select content_type from cr_items
    where item_id = :item_id
  } {} {} {} c:/web/openacs-4/packages/acs-content-repository/tcl/item-procs.xql}
dbqd.acs-content-repository.tcl.item-procs.item::get_live_revision.glr_get_live_revision {dbqd.acs-content-repository.tcl.item-procs.item::get_live_revision.glr_get_live_revision {
      
    select live_revision from cr_items
      where item_id = :item_id

      } {} {} {} c:/web/openacs-4/packages/acs-content-repository/tcl/item-procs.xql}
dbqd.acs-content-repository.tcl.item-procs.item::get_mime_info.gmi_get_mime_info {dbqd.acs-content-repository.tcl.item-procs.item::get_mime_info.gmi_get_mime_info {
      
    select 
      m.mime_type, m.file_extension
    from
      cr_mime_types m, cr_revisions r
    where
      r.mime_type = m.mime_type
    and
      r.revision_id = $revision_id
  
      } {} {} {} c:/web/openacs-4/packages/acs-content-repository/tcl/item-procs.xql}
dbqd.acs-content-repository.tcl.keyword-procs-oracle.cr::keyword::new.content_keyword_new {dbqd.acs-content-repository.tcl.keyword-procs-oracle.cr::keyword::new.content_keyword_new {
            begin
              :1 := content_keyword.new (
                :heading,    
                :description,
                :parent_id,  
                :keyword_id, 
                sysdate(),
                :user_id,      
                :creation_ip,  
                :object_type  
              );
            end;
        } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-content-repository/tcl/keyword-procs-oracle.xql}
dbqd.acs-content-repository.tcl.keyword-procs-oracle.cr::keyword::delete.delete_keyword {dbqd.acs-content-repository.tcl.keyword-procs-oracle.cr::keyword::delete.delete_keyword {
            begin
                content_keyword.del(:keyword_id);
            end;
        } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-content-repository/tcl/keyword-procs-oracle.xql}
dbqd.acs-content-repository.tcl.keyword-procs-oracle.cr::keyword::set_heading.set_heading {dbqd.acs-content-repository.tcl.keyword-procs-oracle.cr::keyword::set_heading.set_heading {
            begin
                content_keyword.set_heading(:keyword_id, :heading);
            end;
        } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-content-repository/tcl/keyword-procs-oracle.xql}
dbqd.acs-content-repository.tcl.keyword-procs-oracle.cr::keyword::item_unassign.item_unassign {dbqd.acs-content-repository.tcl.keyword-procs-oracle.cr::keyword::item_unassign.item_unassign {
            begin
                 content_keyword.item_unassign(:item_id, :keyword_id);
            end;
        } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-content-repository/tcl/keyword-procs-oracle.xql}
dbqd.acs-content-repository.tcl.keyword-procs-oracle.cr::keyword::item_assign.keyword_assign {dbqd.acs-content-repository.tcl.keyword-procs-oracle.cr::keyword::item_assign.keyword_assign {
            begin
              content_keyword.item_assign(
                :item_id,
                :keyword,
                null,
                null,
                null
              );
            end;
        } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-content-repository/tcl/keyword-procs-oracle.xql}
dbqd.acs-content-repository.tcl.keyword-procs.cr::keyword::new.content_keyword_new {dbqd.acs-content-repository.tcl.keyword-procs.cr::keyword::new.content_keyword_new {
            select content_keyword__new (
                :heading,    
                :description,
                :parent_id,  
                :keyword_id, 
                current_timestamp,
                :user_id,      
                :creation_ip,  
                :object_type  
            )
        } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-content-repository/tcl/keyword-procs-postgresql.xql}
dbqd.acs-content-repository.tcl.keyword-procs.cr::keyword::delete.delete_keyword {dbqd.acs-content-repository.tcl.keyword-procs.cr::keyword::delete.delete_keyword {
                select content_keyword__delete (:keyword_id)
        } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-content-repository/tcl/keyword-procs-postgresql.xql}
dbqd.acs-content-repository.tcl.keyword-procs.cr::keyword::set_heading.set_heading {dbqd.acs-content-repository.tcl.keyword-procs.cr::keyword::set_heading.set_heading {
            select content_keyword__set_heading(:keyword_id, :heading)
        } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-content-repository/tcl/keyword-procs-postgresql.xql}
dbqd.acs-content-repository.tcl.keyword-procs.cr::keyword::item_unassign.item_unassign {dbqd.acs-content-repository.tcl.keyword-procs.cr::keyword::item_unassign.item_unassign {
            select content_keyword__item_unassign(:item_id, :keyword_id)
        } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-content-repository/tcl/keyword-procs-postgresql.xql}
dbqd.acs-content-repository.tcl.keyword-procs.cr::keyword::item_assign.keyword_assign {dbqd.acs-content-repository.tcl.keyword-procs.cr::keyword::item_assign.keyword_assign {
            select content_keyword__item_assign(
                :item_id,
                :keyword,
                null,
                null,
                null
            )
        } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-content-repository/tcl/keyword-procs-postgresql.xql}
dbqd.acs-content-repository.tcl.keyword-procs.cr::keyword::get_keyword_id.select_keyword_id {dbqd.acs-content-repository.tcl.keyword-procs.cr::keyword::get_keyword_id.select_keyword_id {
            select keyword_id 
            from   cr_keywords
            where  parent_id = :parent_id
            and    heading = :heading
        } {} {} {} c:/web/openacs-4/packages/acs-content-repository/tcl/keyword-procs.xql}
dbqd.acs-content-repository.tcl.keyword-procs.cr::keyword::item_unassign_children.item_unassign_children {dbqd.acs-content-repository.tcl.keyword-procs.cr::keyword::item_unassign_children.item_unassign_children {
            delete from cr_item_keyword_map
            where item_id = :item_id
            and   keyword_id in (select p.keyword_id
                                   from   cr_keywords p
                                   where  p.parent_id = :parent_id)
        } {} {} {} c:/web/openacs-4/packages/acs-content-repository/tcl/keyword-procs.xql}
dbqd.acs-content-repository.tcl.keyword-procs.cr::keyword::item_assign.get_parent_id {dbqd.acs-content-repository.tcl.keyword-procs.cr::keyword::item_assign.get_parent_id {
            select parent_id
            from cr_keywords
            where keyword_id = :keyword
        } {} {} {} c:/web/openacs-4/packages/acs-content-repository/tcl/keyword-procs.xql}
dbqd.acs-content-repository.tcl.keyword-procs.cr::keyword::item_get_assigned.get_keywords {dbqd.acs-content-repository.tcl.keyword-procs.cr::keyword::item_get_assigned.get_keywords {
            select keyword_id from cr_item_keyword_map
            where item_id = :item_id
        } {} {} {} c:/web/openacs-4/packages/acs-content-repository/tcl/keyword-procs.xql}
dbqd.acs-content-repository.tcl.keyword-procs.cr::keyword::item_get_assigned.get_child_keywords {dbqd.acs-content-repository.tcl.keyword-procs.cr::keyword::item_get_assigned.get_child_keywords {
            select km.keyword_id
            from cr_item_keyword_map km,
                 cr_keywords kw
            where km.item_id = :item_id
            and   kw.parent_id = :parent_id
            and   kw.keyword_id = km.keyword_id
        } {} {} {} c:/web/openacs-4/packages/acs-content-repository/tcl/keyword-procs.xql}
dbqd.acs-content-repository.tcl.keyword-procs.cr::keyword::get_options_flat.select_keyword_options {dbqd.acs-content-repository.tcl.keyword-procs.cr::keyword::get_options_flat.select_keyword_options {
            select heading,
                   keyword_id
            from   cr_keywords
            where  [ad_decode $parent_id "" "parent_id is null" "parent_id = :parent_id"]
            order  by lower(heading)
        } {} {} {} c:/web/openacs-4/packages/acs-content-repository/tcl/keyword-procs.xql}
dbqd.acs-content-repository.tcl.publish-procs-oracle.publish::handle::text.get_revision_id {dbqd.acs-content-repository.tcl.publish-procs-oracle.publish::handle::text.get_revision_id {

                begin
                content_revision.to_temporary_clob(:revision_id);
                end;
        
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-content-repository/tcl/publish-procs-oracle.xql}
dbqd.acs-content-repository.tcl.publish-procs-oracle.publish::handle::text.get_previous_content {dbqd.acs-content-repository.tcl.publish-procs-oracle.publish::handle::text.get_previous_content {

                       select 
                         content
                       from 
                         cr_content_text
                       where 
                         revision_id = :revision_id

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-content-repository/tcl/publish-procs-oracle.xql}
dbqd.acs-content-repository.tcl.publish-procs-oracle.publish::write_multiple_blobs.wmb_get_blob_file {dbqd.acs-content-repository.tcl.publish-procs-oracle.publish::write_multiple_blobs.wmb_get_blob_file {
      
      select [ad_decode $storage_type file "'[cr_fs_path]' || filename" content] from cr_revisions where revision_id = $revision_id
    
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-content-repository/tcl/publish-procs-oracle.xql}
dbqd.acs-content-repository.tcl.publish-procs-oracle.publish::write_content.get_revision_id {dbqd.acs-content-repository.tcl.publish-procs-oracle.publish::write_content.get_revision_id {

                begin
                content_revision.to_temporary_clob(:revision_id);
                end;

	} {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-content-repository/tcl/publish-procs-oracle.xql}
dbqd.acs-content-repository.tcl.publish-procs-oracle.publish::write_content.get_previous_content {dbqd.acs-content-repository.tcl.publish-procs-oracle.publish::write_content.get_previous_content {
      
                       select 
                         content
                       from 
                         cr_content_text
                       where 
                         revision_id = :revision_id
  
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-content-repository/tcl/publish-procs-oracle.xql}
dbqd.acs-content-repository.tcl.publish-procs.publish::handle::text.get_revision_id {dbqd.acs-content-repository.tcl.publish-procs.publish::handle::text.get_revision_id {

        select 1

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-content-repository/tcl/publish-procs-postgresql.xql}
dbqd.acs-content-repository.tcl.publish-procs.publish::handle::text.get_previous_content {dbqd.acs-content-repository.tcl.publish-procs.publish::handle::text.get_previous_content {

                       select 
                         content
                       from 
                         cr_revisions
                       where 
                         revision_id = :revision_id

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-content-repository/tcl/publish-procs-postgresql.xql}
dbqd.acs-content-repository.tcl.publish-procs.publish::write_multiple_blobs.wmb_get_blob_file {dbqd.acs-content-repository.tcl.publish-procs.publish::write_multiple_blobs.wmb_get_blob_file {

      select case when i.storage_type = 'file' 
                       then '[cr_fs_path]' || r.content
                  when i.storage_type = 'lob'
                       then lob::text 
                       else r.content end as content, i.storage_type 
      from cr_revisions r, cr_items i 
      where r.item_id = i.item_id and r.revision_id = $revision_id

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-content-repository/tcl/publish-procs-postgresql.xql}
dbqd.acs-content-repository.tcl.publish-procs.publish::write_content.get_revision_id {dbqd.acs-content-repository.tcl.publish-procs.publish::write_content.get_revision_id {

        select 1

	} {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-content-repository/tcl/publish-procs-postgresql.xql}
dbqd.acs-content-repository.tcl.publish-procs.publish::write_content.get_previous_content {dbqd.acs-content-repository.tcl.publish-procs.publish::write_content.get_previous_content {
      
    select 
      content
    from 
      cr_revisions
    where 
      revision_id = :revision_id
  
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-content-repository/tcl/publish-procs-postgresql.xql}
dbqd.acs-content-repository.tcl.publish-procs.publish::handle::image.i_get_image_info {dbqd.acs-content-repository.tcl.publish-procs.publish::handle::image.i_get_image_info {
      
    select 
      im.width, im.height, r.title as image_alt
    from 
      images im, cr_revisions r
    where 
      im.image_id = :revision_id
    and
      r.revision_id = :revision_id
  
      } {} {} {} c:/web/openacs-4/packages/acs-content-repository/tcl/publish-procs.xql}
dbqd.acs-content-repository.tcl.publish-procs.publish::render_subitem.rs_get_subitems {dbqd.acs-content-repository.tcl.publish-procs.publish::render_subitem.rs_get_subitems {

      select 
        child_id
      from 
        cr_child_rels r, cr_items i
      where 
        r.parent_id = :main_item_id
      and 
        r.relation_tag = :relation_tag
      and
        i.item_id = r.child_id
      order by 
        order_n

      } {} {} {} c:/web/openacs-4/packages/acs-content-repository/tcl/publish-procs.xql}
dbqd.acs-content-repository.tcl.publish-procs.publish::render_subitem.cs_get_subitems_related {dbqd.acs-content-repository.tcl.publish-procs.publish::render_subitem.cs_get_subitems_related {

      select 
        related_object_id
      from 
        cr_item_rels r, cr_items i
      where 
        r.item_id = :main_item_id
      and 
        r.relation_tag = :relation_tag
      and
        i.item_id = r.related_object_id 
      order by 
        r.order_n

      } {} {} {} c:/web/openacs-4/packages/acs-content-repository/tcl/publish-procs.xql}
dbqd.acs-content-repository.tcl.publish-procs.publish::write_multiple_blobs.get_storage_type {dbqd.acs-content-repository.tcl.publish-procs.publish::write_multiple_blobs.get_storage_type {

           select storage_type 
             from cr_items 
            where item_id = (select item_id 
                               from cr_revisions 
                              where revision_id = :revision_id)

      } {} {} {} c:/web/openacs-4/packages/acs-content-repository/tcl/publish-procs.xql}
dbqd.acs-content-repository.tcl.publish-procs.publish::write_content.get_one_revision {dbqd.acs-content-repository.tcl.publish-procs.publish::write_content.get_one_revision {

             select item_id from cr_revisions where revision_id = :revision_id

      } {} {} {} c:/web/openacs-4/packages/acs-content-repository/tcl/publish-procs.xql}
dbqd.acs-content-repository.tcl.revision-procs-oracle.cr_write_content.get_item_info {dbqd.acs-content-repository.tcl.revision-procs-oracle.cr_write_content.get_item_info {
          select r.mime_type, i.storage_type, i.storage_area_key, r.revision_id
            from cr_revisions r, cr_items i
          where i.item_id = r.item_id and
              r.revision_id = content_item.get_live_revision(:item_id)
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-content-repository/tcl/revision-procs-oracle.xql}
dbqd.acs-content-repository.tcl.revision-procs-oracle.cr_write_content.write_file_content {dbqd.acs-content-repository.tcl.revision-procs-oracle.cr_write_content.write_file_content {
          select :path || filename
          from cr_revisions
          where revision_id = :revision_id
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-content-repository/tcl/revision-procs-oracle.xql}
dbqd.acs-content-repository.tcl.revision-procs-oracle.cr_write_content.write_lob_content {dbqd.acs-content-repository.tcl.revision-procs-oracle.cr_write_content.write_lob_content {
          select content
          from cr_revisions
          where revision_id = $revision_id
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-content-repository/tcl/revision-procs-oracle.xql}
dbqd.acs-content-repository.tcl.revision-procs-oracle.cr_import_content.mime_type_register {dbqd.acs-content-repository.tcl.revision-procs-oracle.cr_import_content.mime_type_register {
          begin
            content_type.register_mime_type('content_revision', :mime_type);
          end;
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-content-repository/tcl/revision-procs-oracle.xql}
dbqd.acs-content-repository.tcl.revision-procs-oracle.cr_import_content.image_subclass {dbqd.acs-content-repository.tcl.revision-procs-oracle.cr_import_content.image_subclass {
         select content_item.is_subclass(:image_type, 'image') from dual
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-content-repository/tcl/revision-procs-oracle.xql}
dbqd.acs-content-repository.tcl.revision-procs-oracle.cr_import_content.content_revision_subclass {dbqd.acs-content-repository.tcl.revision-procs-oracle.cr_import_content.content_revision_subclass {
         select content_item.is_subclass(:other_type, 'content_revision') from dual
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-content-repository/tcl/revision-procs-oracle.xql}
dbqd.acs-content-repository.tcl.revision-procs-oracle.cr_import_content.image_new {dbqd.acs-content-repository.tcl.revision-procs-oracle.cr_import_content.image_new {
          begin
            :1 := image.new(
               name          =>  :object_name,
               parent_id     =>  :parent_id,
               item_id       =>  :item_id,
               revision_id   =>  :revision_id,
               mime_type     =>  :mime_type,
               creation_user =>  :creation_user,
               creation_ip   =>  :creation_ip,
               title         =>  :title,
               content_type  =>  :image_type,
               storage_type  =>  :storage_type,
               height        =>  :original_height,
               width         =>  :original_width
            );
          end;
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-content-repository/tcl/revision-procs-oracle.xql}
dbqd.acs-content-repository.tcl.revision-procs-oracle.cr_import_content.image_revision_new {dbqd.acs-content-repository.tcl.revision-procs-oracle.cr_import_content.image_revision_new {
         begin
           :1 := image.new_revision (
             item_id       => :item_id,
             revision_id   => :revision_id,
             title         => :title,
             description   => :description,
             mime_type     => :mime_type,
             creation_user => :creation_user,
             creation_ip   => :creation_ip,
             height        => :original_height,
             width         => :original_width
           );
         end;
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-content-repository/tcl/revision-procs-oracle.xql}
dbqd.acs-content-repository.tcl.revision-procs-oracle.cr_import_content.content_item_new {dbqd.acs-content-repository.tcl.revision-procs-oracle.cr_import_content.content_item_new {
          begin
            :1 := content_item.new(
               name          =>  :object_name,
               item_id       =>  :item_id,
               parent_id     =>  :parent_id,
               context_id    =>  :parent_id,
               creation_user =>  :creation_user,
               creation_ip   =>  :creation_ip,
               content_type  =>  :other_type,
               storage_type  =>  :storage_type
            );
          end;
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-content-repository/tcl/revision-procs-oracle.xql}
dbqd.acs-content-repository.tcl.revision-procs-oracle.cr_import_content.content_revision_new {dbqd.acs-content-repository.tcl.revision-procs-oracle.cr_import_content.content_revision_new {
         begin
           :1 := content_revision.new (
             title         => :title,
             description   => :description,
             mime_type     => :mime_type,
             item_id       => :item_id,
             revision_id   => :revision_id,
             creation_user => :creation_user,
             creation_ip   => :creation_ip
           );
         end;
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-content-repository/tcl/revision-procs-oracle.xql}
dbqd.acs-content-repository.tcl.revision-procs-oracle.cr_import_content.set_lob_content {dbqd.acs-content-repository.tcl.revision-procs-oracle.cr_import_content.set_lob_content {
      
        update cr_revisions
        set mime_type = :mime_type,
        content = empty_blob()
        where revision_id = :revision_id
        returning content into :1
	   
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-content-repository/tcl/revision-procs-oracle.xql}
dbqd.acs-content-repository.tcl.revision-procs-oracle.cr_import_content.set_lob_size {dbqd.acs-content-repository.tcl.revision-procs-oracle.cr_import_content.set_lob_size {

         update cr_revisions
         set content_length = dbms_lob.getlength(content)
         where revision_id = :revision_id

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-content-repository/tcl/revision-procs-oracle.xql}
dbqd.acs-content-repository.tcl.revision-procs-oracle.cr_set_imported_content_live.set_live {dbqd.acs-content-repository.tcl.revision-procs-oracle.cr_set_imported_content_live.set_live {
         begin content_item.set_live_revision (revision_id => :revision_id);
         end;
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-content-repository/tcl/revision-procs-oracle.xql}
dbqd.acs-content-repository.tcl.revision-procs-oracle.cr_import_content.set_file_content {dbqd.acs-content-repository.tcl.revision-procs-oracle.cr_import_content.set_file_content {
          update cr_revisions
          set filename = :filename,
              mime_type = :mime_type,
              content_length = :tmp_size
          where revision_id = :revision_id
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-content-repository/tcl/revision-procs-oracle.xql}
dbqd.acs-content-repository.tcl.revision-procs.cr_write_content.get_item_info {dbqd.acs-content-repository.tcl.revision-procs.cr_write_content.get_item_info {
          select i.storage_type, i.storage_area_key, r.mime_type, r.revision_id
          from cr_items i, cr_revisions r
          where r.revision_id = content_item__get_live_revision(:item_id) and i.item_id = r.item_id
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-content-repository/tcl/revision-procs-postgresql.xql}
dbqd.acs-content-repository.tcl.revision-procs.cr_write_content.write_file_content {dbqd.acs-content-repository.tcl.revision-procs.cr_write_content.write_file_content {
          select :path || content
          from cr_revisions
          where revision_id = :revision_id
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-content-repository/tcl/revision-procs-postgresql.xql}
dbqd.acs-content-repository.tcl.revision-procs.cr_write_content.write_lob_content {dbqd.acs-content-repository.tcl.revision-procs.cr_write_content.write_lob_content {
          select lob as content
          from cr_revisions
          where revision_id = :revision_id
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-content-repository/tcl/revision-procs-postgresql.xql}
dbqd.acs-content-repository.tcl.revision-procs.cr_import_content.mime_type_register {dbqd.acs-content-repository.tcl.revision-procs.cr_import_content.mime_type_register {
          select content_type__register_mime_type('content_revision', :mime_type)
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-content-repository/tcl/revision-procs-postgresql.xql}
dbqd.acs-content-repository.tcl.revision-procs.cr_import_content.image_subclass {dbqd.acs-content-repository.tcl.revision-procs.cr_import_content.image_subclass {
         select content_item__is_subclass(:image_type, 'image')
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-content-repository/tcl/revision-procs-postgresql.xql}
dbqd.acs-content-repository.tcl.revision-procs.cr_import_content.content_revision_subclass {dbqd.acs-content-repository.tcl.revision-procs.cr_import_content.content_revision_subclass {
         select content_item__is_subclass(:other_type, 'content_revision')
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-content-repository/tcl/revision-procs-postgresql.xql}
dbqd.acs-content-repository.tcl.revision-procs.cr_import_content.image_new {dbqd.acs-content-repository.tcl.revision-procs.cr_import_content.image_new {
         select image__new(
            /* name          => */ :object_name,
            /* parent_id     => */ :parent_id,
            /* item_id       => */ :item_id,
            /* revision_id   => */ :revision_id,
            /* mime_type     => */ :mime_type,
            /* creation_user => */ :creation_user,
            /* creation_ip   => */ :creation_ip,
            /* title         => */ :title,
            /* description   => */ :description,
            /* storage_type  => */ :storage_type,
            /* content_type  => */ :image_type,
            /* nls_language  => */ null,
            /* publish_date  => */ current_timestamp,
            /* height        => */ :original_height,
            /* width         => */ :original_width
         );
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-content-repository/tcl/revision-procs-postgresql.xql}
dbqd.acs-content-repository.tcl.revision-procs.cr_import_content.image_revision_new {dbqd.acs-content-repository.tcl.revision-procs.cr_import_content.image_revision_new {
         select image__new_revision (
            /* item_id       => */ :item_id,
            /* revision_id   => */ :revision_id,
            /* title         => */ :title,
            /* description   => */ :description,
            /* publish_date  => */ current_timestamp,
            /* mime_type     => */ :mime_type,
            /* nls_language  => */ null,
            /* creation_user => */ :creation_user,
            /* creation_ip   => */ :creation_ip,
            /* height        => */ :original_height,
            /* width         => */ :original_width
    );
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-content-repository/tcl/revision-procs-postgresql.xql}
dbqd.acs-content-repository.tcl.revision-procs.cr_import_content.content_item_new {dbqd.acs-content-repository.tcl.revision-procs.cr_import_content.content_item_new {
         select content_item__new (
            /* name          => */ varchar :object_name,
            /* parent_id     => */ :parent_id,
            /* item_id       => */ :item_id,
            /* new_locale    => */ null,
            /* creation_date => */ current_timestamp,
            /* creation_user => */ :creation_user,
            /* context_id    => */ :parent_id,
            /* creation_ip   => */ :creation_ip,
            /* item_subtype  => */ 'content_item',
            /* content_type  => */ :other_type,
            /* title         => */ null,
            /* description   => */ null,
            /* mime_type     => */ null,
            /* nls_language  => */ null,
            /* text          => */ null,
            /* storage_type  => */ :storage_type
    );
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-content-repository/tcl/revision-procs-postgresql.xql}
dbqd.acs-content-repository.tcl.revision-procs.cr_import_content.content_revision_new {dbqd.acs-content-repository.tcl.revision-procs.cr_import_content.content_revision_new {
         select content_revision__new (
            /* title         => */ :title,
            /* description   => */ :description,
            /* publish_date  => */ current_timestamp,
            /* mime_type     => */ :mime_type,
            /* nls_language  => */ null,
            /* data          => */ null,
            /* item_id       => */ :item_id,
            /* revision_id   => */ :revision_id,
            /* creation_date => */ current_timestamp,
            /* creation_user => */ :creation_user,
            /* creation_ip   => */ :creation_ip
    );
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-content-repository/tcl/revision-procs-postgresql.xql}
dbqd.acs-content-repository.tcl.revision-procs.cr_import_content.set_lob_content {dbqd.acs-content-repository.tcl.revision-procs.cr_import_content.set_lob_content {

	update cr_revisions
	set mime_type = :mime_type,
 	   lob = [set __lob_id [db_string get_lob_id "select empty_lob()"]]
	where revision_id = :revision_id
	   
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-content-repository/tcl/revision-procs-postgresql.xql}
dbqd.acs-content-repository.tcl.revision-procs.cr_import_content.set_lob_size {dbqd.acs-content-repository.tcl.revision-procs.cr_import_content.set_lob_size {

         update cr_revisions
         set content_length = lob_length(lob)
         where revision_id = :revision_id

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-content-repository/tcl/revision-procs-postgresql.xql}
dbqd.acs-content-repository.tcl.revision-procs.cr_set_imported_content_live.set_live {dbqd.acs-content-repository.tcl.revision-procs.cr_set_imported_content_live.set_live {
          select content_item__set_live_revision(:revision_id)
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-content-repository/tcl/revision-procs-postgresql.xql}
dbqd.acs-content-repository.tcl.revision-procs.cr_import_content.set_file_content {dbqd.acs-content-repository.tcl.revision-procs.cr_import_content.set_file_content {
          update cr_revisions
          set content = :filename,
              mime_type = :mime_type,
              content_length = :tmp_size
          where revision_id = :revision_id
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-content-repository/tcl/revision-procs-postgresql.xql}
dbqd.acs-content-repository.tcl.revision-procs.cr_write_content.get_revision_info {dbqd.acs-content-repository.tcl.revision-procs.cr_write_content.get_revision_info {
          select i.storage_type, i.storage_area_key, r.mime_type, i.item_id
          from cr_items i, cr_revisions r
          where r.revision_id = :revision_id and i.item_id = r.item_id
      } {} {} {} c:/web/openacs-4/packages/acs-content-repository/tcl/revision-procs.xql}
dbqd.acs-content-repository.tcl.revision-procs.cr_write_content.write_text_content {dbqd.acs-content-repository.tcl.revision-procs.cr_write_content.write_text_content {
          select content
          from cr_revisions
          where revision_id = :revision_id
      } {} {} {} c:/web/openacs-4/packages/acs-content-repository/tcl/revision-procs.xql}
dbqd.acs-content-repository.tcl.revision-procs.cr_import_content.mime_type_insert {dbqd.acs-content-repository.tcl.revision-procs.cr_import_content.mime_type_insert {
            insert into cr_mime_types (mime_type) 
    	    select :mime_type
    	    from dual
    	    where not exists (select 1 from cr_mime_types where mime_type = :mime_type)
      } {} {} {} c:/web/openacs-4/packages/acs-content-repository/tcl/revision-procs.xql}
dbqd.acs-content-repository.tcl.revision-procs.cr_registered_type_for_mime_type.registered_type_for_mime_type {dbqd.acs-content-repository.tcl.revision-procs.cr_registered_type_for_mime_type.registered_type_for_mime_type {
          select content_type
          from cr_content_mime_type_map
          where mime_type = :mime_type
      } {} {} {} c:/web/openacs-4/packages/acs-content-repository/tcl/revision-procs.xql}
dbqd.acs-content-repository.www.index-oracle.content_root {dbqd.acs-content-repository.www.index-oracle.content_root {
      
      select content_item.get_root_folder from dual

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-content-repository/www/index-oracle.xql}
dbqd.acs-content-repository.www.index-oracle.template_root {dbqd.acs-content-repository.www.index-oracle.template_root {

      select content_template.get_root_folder from dual

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-content-repository/www/index-oracle.xql}
dbqd.acs-content-repository.www.index.content_root {dbqd.acs-content-repository.www.index.content_root {
      
      select content_item__get_root_folder(null)

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-content-repository/www/index-postgresql.xql}
dbqd.acs-content-repository.www.index.template_root {dbqd.acs-content-repository.www.index.template_root {

      select content_template__get_root_folder()

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-content-repository/www/index-postgresql.xql}
dbqd.acs-content-repository.www.index.get_name {dbqd.acs-content-repository.www.index.get_name {
      
  select 
    first_names || ' ' || last_name 
  from 
    persons 
  where 
    person_id = :user_id

      } {} {} {} c:/web/openacs-4/packages/acs-content-repository/www/index.xql}
dbqd.acs-datetime.tcl.acs-calendar-2-procs-oracle.dt_widget_day.select_day_info {dbqd.acs-datetime.tcl.acs-calendar-2-procs-oracle.dt_widget_day.select_day_info {
select   to_char(to_date(:current_date, 'yyyy-mm-dd'), 'Day, DD Month YYYY') 
as day_of_the_week,
to_char(to_date(:current_date, 'yyyy-mm-dd')-1, 'yyyy-mm-dd')
as yesterday,
to_char(to_date(:current_date, 'yyyy-mm-dd')+1, 'yyyy-mm-dd')
as tomorrow
from     dual
} {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-datetime/tcl/acs-calendar-2-procs-oracle.xql}
dbqd.acs-datetime.tcl.acs-calendar-2-procs.dt_widget_week.select_week_info {dbqd.acs-datetime.tcl.acs-calendar-2-procs.dt_widget_week.select_week_info {
select   to_char(to_date(:current_date, 'yyyy-mm-dd'), 'D') 
as day_of_the_week,
cast(next_day(to_date(:current_date, 'yyyy-mm-dd') - cast('7 days' as interval), 'Sunday') as date)
as sunday_date,
to_char(next_day(to_date(:current_date, 'yyyy-mm-dd') - cast('7 days' as interval), 'Sunday'),'J') 
as sunday_julian,
cast(next_day(to_date(:current_date, 'yyyy-mm-dd') - cast('7 days' as interval), 'Sunday') + cast('1 day' as interval) as date)
as monday_date,
to_char(next_day(to_date(:current_date, 'yyyy-mm-dd') - cast('7 days' as interval), 'Sunday') + cast('1 day' as interval),'J')
as monday_julian,
cast(next_day(to_date(:current_date, 'yyyy-mm-dd') - cast('7 days' as interval), 'Sunday') + cast('2 days' as interval) as date)
as tuesday_date,
to_char(next_day(to_date(:current_date, 'yyyy-mm-dd') - cast('7 days' as interval), 'Sunday') + cast('2 days' as interval),'J') 
as tuesday_julian,
cast(next_day(to_date(:current_date, 'yyyy-mm-dd') - cast('7 days' as interval), 'Sunday') + cast('3 days' as interval) as date)
as wednesday_date,
to_char(next_day(to_date(:current_date, 'yyyy-mm-dd') - cast('7 days' as interval), 'Sunday') + cast('3 days' as interval),'J') 
as wednesday_julian,
cast(next_day(to_date(:current_date, 'yyyy-mm-dd') - cast('7 days' as interval), 'Sunday') + cast('4 days' as interval) as date)
as thursday_date,
to_char(next_day(to_date(:current_date, 'yyyy-mm-dd') - cast('7 days' as interval), 'Sunday') + cast('4 days' as interval),'J') 
as thursday_julian,
cast(next_day(to_date(:current_date, 'yyyy-mm-dd') - cast('7 days' as interval), 'Sunday') + cast('5 days' as interval) as date)
as friday_date,
to_char(next_day(to_date(:current_date, 'yyyy-mm-dd') - cast('7 days' as interval), 'Sunday') + cast('5 days' as interval),'J') 
as friday_julian,
cast(next_day(to_date(:current_date, 'yyyy-mm-dd') - cast('7 days' as interval), 'Sunday') + cast('6 days' as interval) as date)
as saturday_date,
to_char(next_day(to_date(:current_date, 'yyyy-mm-dd') - cast('7 days' as interval), 'Sunday') + cast('6 days' as interval),'J') 
as saturday_julian,
cast(:current_date::timestamptz - cast('7 days' as interval) as date) as last_week,
to_char(:current_date::timestamptz - cast('7 days' as interval), 'Month DD, YYYY') as last_week_pretty,
cast(:current_date::timestamptz + cast('7 days' as interval) as date) as next_week,
to_char(:current_date::timestamptz + cast('7 days' as interval), 'Month DD, YYYY') as next_week_pretty
from     dual
} {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-datetime/tcl/acs-calendar-2-procs-postgresql.xql}
dbqd.acs-datetime.tcl.acs-calendar-2-procs.dt_widget_day.select_day_info {dbqd.acs-datetime.tcl.acs-calendar-2-procs.dt_widget_day.select_day_info {
select   to_char(to_date(:current_date, 'yyyy-mm-dd'), 'Day, DD Month YYYY') 
as day_of_the_week,
to_char(to_date(:current_date, 'yyyy-mm-dd') - cast('1 day' as interval), 'yyyy-mm-dd')
as yesterday,
to_char(to_date(:current_date, 'yyyy-mm-dd') + cast('1 day' as interval), 'yyyy-mm-dd')
as tomorrow
from     dual
} {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-datetime/tcl/acs-calendar-2-procs-postgresql.xql}
dbqd.acs-datetime.tcl.acs-datetime-procs.dt_julian_to_ansi.julian_to_ansi {dbqd.acs-datetime.tcl.acs-datetime-procs.dt_julian_to_ansi.julian_to_ansi {
      
    select to_char(to_date(:julian_date,'J'),'yyyy-mm-dd') 
      } {} {} {} c:/web/openacs-4/packages/acs-datetime/tcl/acs-datetime-procs.xql}
dbqd.acs-developer-support.tcl.acs-developer-support-procs-oracle.ds_instance_id.acs_kernel_id_get {dbqd.acs-developer-support.tcl.acs-developer-support-procs-oracle.ds_instance_id.acs_kernel_id_get {
      
	select package_id from apm_packages
	where package_key = 'acs-developer-support'
	and rownum=1
    
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-developer-support/tcl/acs-developer-support-procs-oracle.xql}
dbqd.acs-developer-support.tcl.acs-developer-support-procs-oracle.ds_require_permission.name {dbqd.acs-developer-support.tcl.acs-developer-support-procs-oracle.ds_require_permission.name {
      select acs_object.name(:object_id) from dual
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-developer-support/tcl/acs-developer-support-procs-oracle.xql}
dbqd.acs-developer-support.tcl.acs-developer-support-procs-oracle.ds_support_url.ds_support_url {dbqd.acs-developer-support.tcl.acs-developer-support-procs-oracle.ds_support_url.ds_support_url {
      
	select site_node.url(node_id) 
	from site_nodes s, apm_packages p
	where p.package_id = s.object_id
	and p.package_key ='acs-developer-support'
	and rownum = 1
    
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-developer-support/tcl/acs-developer-support-procs-oracle.xql}
dbqd.acs-developer-support.tcl.acs-developer-support-procs-oracle.ds_user_select_widget.users {dbqd.acs-developer-support.tcl.acs-developer-support-procs-oracle.ds_user_select_widget.users {
       
	select u.user_id as user_id_from_db, 
	       acs_object.name(user_id) as name, 
	       p.email 
	from   users u, 
	       parties p 
	where  u.user_id = p.party_id 
    
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-developer-support/tcl/acs-developer-support-procs-oracle.xql}
dbqd.acs-developer-support.tcl.acs-developer-support-procs.ds_instance_id.acs_kernel_id_get {dbqd.acs-developer-support.tcl.acs-developer-support-procs.ds_instance_id.acs_kernel_id_get {

	select package_id from apm_packages
	where package_key = 'acs-developer-support'
	limit 1
    
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-developer-support/tcl/acs-developer-support-procs-postgresql.xql}
dbqd.acs-developer-support.tcl.acs-developer-support-procs.ds_require_permission.name {dbqd.acs-developer-support.tcl.acs-developer-support-procs.ds_require_permission.name {
      select acs_object__name(:object_id) 
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-developer-support/tcl/acs-developer-support-procs-postgresql.xql}
dbqd.acs-developer-support.tcl.acs-developer-support-procs.ds_support_url.ds_support_url {dbqd.acs-developer-support.tcl.acs-developer-support-procs.ds_support_url.ds_support_url {

	select site_node__url(node_id) 
	from site_nodes s, apm_packages p
	where p.package_id = s.object_id
	and p.package_key ='acs-developer-support'
	limit 1
    
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-developer-support/tcl/acs-developer-support-procs-postgresql.xql}
dbqd.acs-developer-support.tcl.acs-developer-support-procs.ds_user_select_widget.users {dbqd.acs-developer-support.tcl.acs-developer-support-procs.ds_user_select_widget.users {
       
	select u.user_id as user_id_from_db, 
	       acs_object__name(user_id) as name, 
	       p.email 
	from   users u, 
	       parties p 
	where  u.user_id = p.party_id 
    
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-developer-support/tcl/acs-developer-support-procs-postgresql.xql}
dbqd.acs-developer-support.tcl.acs-developer-support-procs.ds_user_select_widget.users {dbqd.acs-developer-support.tcl.acs-developer-support-procs.ds_user_select_widget.users {
       
	select u.user_id as user_id_from_db, 
	       acs_object__name(user_id) as name, 
	       p.email 
	from   users u, 
	       parties p 
	where  u.user_id = p.party_id 
    
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-developer-support/tcl/acs-developer-support-procs-postgresql.xql}
dbqd.acs-developer-support.www.request-info.user_info {dbqd.acs-developer-support.www.request-info.user_info {
      
                        select first_names, last_name, email
                        from users
                        where user_id = $conn(user_id)
		    
      } {} {} {} c:/web/openacs-4/packages/acs-developer-support/www/request-info.xql}
dbqd.acs-lang.tcl.lang-audit-procs-oracle.lang::audit::changed_message.lang_message_audit {dbqd.acs-lang.tcl.lang-audit-procs-oracle.lang::audit::changed_message.lang_message_audit {
          insert into lang_messages_audit (package_key, message_key, locale, old_message, comment_text, overwrite_user) 
            values (:package_key, :message_key, :locale, empty_clob(), empty_clob(), :overwrite_user) 
          returning old_message, comment_text into :1, :2
    } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-lang/tcl/lang-audit-procs-oracle.xql}
dbqd.acs-lang.tcl.lang-audit-procs.lang::audit::changed_message.lang_message_audit {dbqd.acs-lang.tcl.lang-audit-procs.lang::audit::changed_message.lang_message_audit {
          insert into lang_messages_audit (package_key, message_key, locale, old_message, comment_text, overwrite_user) 
            values (:package_key, :message_key, :locale, :old_message, :comment, :overwrite_user) 
    } {} {} {postgresql 7.2} c:/web/openacs-4/packages/acs-lang/tcl/lang-audit-procs-postgresql.xql}
dbqd.acs-lang.tcl.lang-catalog-procs-oracle.lang::catalog::system_package_version_name.get_version_name {dbqd.acs-lang.tcl.lang-catalog-procs-oracle.lang::catalog::system_package_version_name.get_version_name {
           select version_name
           from apm_package_version_info
           where version_id = apm_package.highest_version(:package_key)
    } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-lang/tcl/lang-catalog-procs-oracle.xql}
dbqd.acs-lang.tcl.lang-catalog-procs.lang::catalog::system_package_version_name.get_version_name {dbqd.acs-lang.tcl.lang-catalog-procs.lang::catalog::system_package_version_name.get_version_name {
           select version_name
           from apm_package_version_info
           where version_id = apm_package__highest_version(:package_key)
    } {} {} {postgresql 7.2} c:/web/openacs-4/packages/acs-lang/tcl/lang-catalog-procs-postgresql.xql}
dbqd.acs-lang.tcl.lang-catalog-procs.lang::catalog::import_from_all_files_and_cache.all_enabled_not_loaded_packages {dbqd.acs-lang.tcl.lang-catalog-procs.lang::catalog::import_from_all_files_and_cache.all_enabled_not_loaded_packages {
      select package_key
      from   apm_package_types
      where  exists (select 1 
                     from   apm_package_versions
                     where  package_key = apm_package_types.package_key
                        and installed_p = 't'
                        and enabled_p = 't')
       and not exists (select 1
                       from lang_message_keys
                       where package_key = apm_package_types.package_key)
    } {} {} {} c:/web/openacs-4/packages/acs-lang/tcl/lang-catalog-procs.xql}
dbqd.acs-lang.tcl.lang-catalog-procs.lang::catalog::export_package_to_files.get_locales_for_package {dbqd.acs-lang.tcl.lang-catalog-procs.lang::catalog::export_package_to_files.get_locales_for_package {
        select distinct locale
        from lang_messages
        where package_key = :package_key
    } {} {} {} c:/web/openacs-4/packages/acs-lang/tcl/lang-catalog-procs.xql}
dbqd.acs-lang.tcl.lang-catalog-procs.lang::catalog::all_messages_for_package_and_locale.get_messages {dbqd.acs-lang.tcl.lang-catalog-procs.lang::catalog::all_messages_for_package_and_locale.get_messages {
        select lm.message_key, 
               lm.message, 
               lmk.description
        from   lang_messages lm,
               lang_message_keys lmk
        where  lm.message_key = lmk.message_key
        and    lm.package_key = lmk.package_key
        and    lm.package_key = :package_key
        and    lm.locale = :locale
        and    lmk.upgrade_status != 'deleted'
    } {} {} {} c:/web/openacs-4/packages/acs-lang/tcl/lang-catalog-procs.xql}
dbqd.acs-lang.tcl.lang-catalog-procs.lang::catalog::translate.get_untranslated_messages {dbqd.acs-lang.tcl.lang-catalog-procs.lang::catalog::translate.get_untranslated_messages {
      select message_key,
             package_key,
             message 
      from   lang_messages lm1 
      where  locale = :default_locale
      and    not exists (select message_key, package_key
                         from   lang_messages lm2 
                         where  locale != :default_locale
                         and    lm1.message_key = lm2.message_key
                         and    lm1.package_key = lm2.package_key)
    } {} {} {} c:/web/openacs-4/packages/acs-lang/tcl/lang-catalog-procs.xql}
dbqd.acs-lang.tcl.lang-catalog-procs.lang::catalog::reset_upgrade_status_message_keys.reset_status {dbqd.acs-lang.tcl.lang-catalog-procs.lang::catalog::reset_upgrade_status_message_keys.reset_status {
        update lang_message_keys
              set upgrade_status = 'no_upgrade'
              where package_key = :package_key
    } {} {} {} c:/web/openacs-4/packages/acs-lang/tcl/lang-catalog-procs.xql}
dbqd.acs-lang.tcl.lang-catalog-procs.lang::catalog::import_messages_from_file.reset_upgrade_status_messages {dbqd.acs-lang.tcl.lang-catalog-procs.lang::catalog::import_messages_from_file.reset_upgrade_status_messages {
        update lang_messages
                set upgrade_status = 'no_upgrade'
                where package_key = :package_key
                  and locale = :locale      
    } {} {} {} c:/web/openacs-4/packages/acs-lang/tcl/lang-catalog-procs.xql}
dbqd.acs-lang.tcl.lang-catalog-procs.lang::catalog::import_messages_from_file.mark_message_as_deleted {dbqd.acs-lang.tcl.lang-catalog-procs.lang::catalog::import_messages_from_file.mark_message_as_deleted {
        update lang_messages
           set upgrade_status = 'deleted'
           where package_key = :package_key
             and message_key = :message_key
             and locale = :locale
    } {} {} {} c:/web/openacs-4/packages/acs-lang/tcl/lang-catalog-procs.xql}
dbqd.acs-lang.tcl.lang-catalog-procs.lang::catalog::import_messages_from_file.mark_message_key_as_deleted {dbqd.acs-lang.tcl.lang-catalog-procs.lang::catalog::import_messages_from_file.mark_message_key_as_deleted {
        update lang_message_keys
           set upgrade_status = 'deleted'
           where package_key = :package_key
             and message_key = :message_key
    } {} {} {} c:/web/openacs-4/packages/acs-lang/tcl/lang-catalog-procs.xql}
dbqd.acs-lang.tcl.lang-message-procs-oracle.lang::message::register.lang_message_update {dbqd.acs-lang.tcl.lang-message-procs-oracle.lang::message::register.lang_message_update {
      update lang_messages
      set    message = empty_clob(),
             upgrade_status = :message_upgrade_status
      where  locale = :locale 
      and    message_key = :message_key
      and    package_key = :package_key
      returning message into :1
    } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-lang/tcl/lang-message-procs-oracle.xql}
dbqd.acs-lang.tcl.lang-message-procs-oracle.lang::message::register.lang_message_insert {dbqd.acs-lang.tcl.lang-message-procs-oracle.lang::message::register.lang_message_insert {
      insert into lang_messages (package_key, message_key, locale, message, upgrade_status, creation_user) 
      values (:package_key, :message_key, :locale, empty_clob(), :message_upgrade_status, :creation_user) 
      returning message into :1
    } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-lang/tcl/lang-message-procs-oracle.xql}
dbqd.acs-lang.tcl.lang-message-procs-oracle.lang::message::update_description.update_description {dbqd.acs-lang.tcl.lang-message-procs-oracle.lang::message::update_description.update_description {
      update lang_message_keys
      set    description = empty_clob()
      where  message_key = :message_key
      and    package_key = :package_key
      returning description into :1
    } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-lang/tcl/lang-message-procs-oracle.xql}
dbqd.acs-lang.tcl.lang-message-procs.lang::message::register.lang_message_insert {dbqd.acs-lang.tcl.lang-message-procs.lang::message::register.lang_message_insert {
      insert into lang_messages (package_key, message_key, locale, message, upgrade_status, creation_user) 
      values (:package_key, :message_key, :locale, :message, :message_upgrade_status, :creation_user) 
    } {} {} {postgresql 7.2} c:/web/openacs-4/packages/acs-lang/tcl/lang-message-procs-postgresql.xql}
dbqd.acs-lang.tcl.lang-message-procs.lang::message::register.lang_message_update {dbqd.acs-lang.tcl.lang-message-procs.lang::message::register.lang_message_update {
       update lang_messages
       set    message = :message,
              upgrade_status = :message_upgrade_status
       where  locale = :locale
       and    message_key = :message_key
       and    package_key = :package_key
     } {} {} {postgresql 7.2} c:/web/openacs-4/packages/acs-lang/tcl/lang-message-procs-postgresql.xql}
dbqd.acs-lang.tcl.lang-message-procs.lang::message::update_description.update_description {dbqd.acs-lang.tcl.lang-message-procs.lang::message::update_description.update_description {
      update lang_message_keys
      set    description = :description
      where  message_key = :message_key
      and    package_key = :package_key
    } {} {} {postgresql 7.2} c:/web/openacs-4/packages/acs-lang/tcl/lang-message-procs-postgresql.xql}
dbqd.acs-lang.tcl.lang-message-procs.lang::message::register.message_key_exists_p {dbqd.acs-lang.tcl.lang-message-procs.lang::message::register.message_key_exists_p {
       select count(*) 
       from lang_message_keys
       where package_key = :package_key
         and message_key = :message_key  
    } {} {} {} c:/web/openacs-4/packages/acs-lang/tcl/lang-message-procs.xql}
dbqd.acs-lang.tcl.lang-message-procs.lang::message::register.message_exists_p {dbqd.acs-lang.tcl.lang-message-procs.lang::message::register.message_exists_p {
       select count(*) 
       from lang_messages
       where package_key = :package_key
         and message_key = :message_key  
    } {} {} {} c:/web/openacs-4/packages/acs-lang/tcl/lang-message-procs.xql}
dbqd.acs-lang.tcl.lang-message-procs.lang::message::register.insert_message_key {dbqd.acs-lang.tcl.lang-message-procs.lang::message::register.insert_message_key { 
        insert into lang_message_keys
            (message_key, package_key, upgrade_status)
          values
            (:message_key, :package_key, :key_upgrade_status)
    } {} {} {} c:/web/openacs-4/packages/acs-lang/tcl/lang-message-procs.xql}
dbqd.acs-lang.tcl.lang-message-procs.lang::message::register.lang_message_null_update {dbqd.acs-lang.tcl.lang-message-procs.lang::message::register.lang_message_null_update {
      update lang_messages 
      set    message = null,
             upgrade_status = :message_upgrade_status
      where  locale = :locale 
      and    package_key = :package_key
      and    message_key = :message_key
    } {} {} {} c:/web/openacs-4/packages/acs-lang/tcl/lang-message-procs.xql}
dbqd.acs-lang.tcl.lang-message-procs.lang::message::cache.select_locale_keys {dbqd.acs-lang.tcl.lang-message-procs.lang::message::cache.select_locale_keys {
      select locale, package_key, message_key, message 
      from   lang_messages
      $package_where_clause
    } {} {} {} c:/web/openacs-4/packages/acs-lang/tcl/lang-message-procs.xql}
dbqd.acs-lang.tcl.lang-message-procs.lang::message::register.lang_message_insert_null_msg {dbqd.acs-lang.tcl.lang-message-procs.lang::message::register.lang_message_insert_null_msg {
      insert into lang_messages (package_key, message_key, locale, message, upgrade_status) 
      values (:package_key, :message_key, :locale, null, :message_upgrade_status) 
    } {} {} {} c:/web/openacs-4/packages/acs-lang/tcl/lang-message-procs.xql}
dbqd.acs-lang.tcl.lang-message-procs.lang::message::update_description.update_description_insert_null {dbqd.acs-lang.tcl.lang-message-procs.lang::message::update_description.update_description_insert_null {
      update lang_message_keys
      set    description = null
      where  message_key = :message_key
      and    package_key = :package_key
    } {} {} {} c:/web/openacs-4/packages/acs-lang/tcl/lang-message-procs.xql}
dbqd.acs-lang.tcl.lang-util-procs-oracle.lang::util::nls_language_from_language.nls_language_from_language {dbqd.acs-lang.tcl.lang-util-procs-oracle.lang::util::nls_language_from_language.nls_language_from_language {
      
        select nls_language
        from   ad_locales 
        where  language = :language
        and    rownum = 1
    
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-lang/tcl/lang-util-procs-oracle.xql}
dbqd.acs-lang.tcl.lang-util-procs.lang::util::nls_language_from_language.nls_language_from_language {dbqd.acs-lang.tcl.lang-util-procs.lang::util::nls_language_from_language.nls_language_from_language {
      
        select nls_language
        from   ad_locales 
        where  language = :language
        limit  1
    
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-lang/tcl/lang-util-procs-postgresql.xql}
dbqd.acs-lang.tcl.lang-util-procs.lang::util::charset_for_locale.charset_for_locale {dbqd.acs-lang.tcl.lang-util-procs.lang::util::charset_for_locale.charset_for_locale {
      
        select mime_charset
        from   ad_locales 
        where  locale = :locale
    
      } {} {} {} c:/web/openacs-4/packages/acs-lang/tcl/lang-util-procs.xql}
dbqd.acs-lang.tcl.lang-util-procs.lang::util::default_locale_from_lang_not_cached.default_locale_from_lang {dbqd.acs-lang.tcl.lang-util-procs.lang::util::default_locale_from_lang_not_cached.default_locale_from_lang {
        select locale
        from   ad_locales
        where  language = '[db_quote $language]'
        and    enabled_p = 't'
        and    (default_p = 't' or
                (select count(*)
                from ad_locales
                where language = '[db_quote $language]') = 1
                    )
      } {} {} {} c:/web/openacs-4/packages/acs-lang/tcl/lang-util-procs.xql}
dbqd.acs-lang.tcl.locale-procs-oracle.lang::system::timezone_utc_offset.system_utc_offset {dbqd.acs-lang.tcl.locale-procs-oracle.lang::system::timezone_utc_offset.system_utc_offset {
      
	select ( (sysdate - timezone.local_to_utc (timezone.get_id(:system_timezone), sysdate)) * 24 ) from dual
    
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-lang/tcl/locale-procs-oracle.xql}
dbqd.acs-lang.tcl.locale-procs.lang::system::timezone_utc_offset.system_utc_offset {dbqd.acs-lang.tcl.locale-procs.lang::system::timezone_utc_offset.system_utc_offset {
      
        select (extract(epoch from current_timestamp
                          + timezone__get_offset (timezone__get_id(:system_timezone), current_timestamp)
                         )
                - extract(epoch from current_timestamp)
               ) / 60/60;
    
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-lang/tcl/locale-procs-postgresql.xql}
dbqd.acs-lang.tcl.locale-procs.lang::system::package_level_locale_not_cached.get_system_locale {dbqd.acs-lang.tcl.locale-procs.lang::system::package_level_locale_not_cached.get_system_locale {
        select default_locale
        from   apm_packages
        where  package_id = :package_id
      } {} {} {} c:/web/openacs-4/packages/acs-lang/tcl/locale-procs.xql}
dbqd.acs-lang.tcl.locale-procs.lang::system::set_locale.update_system_locale {dbqd.acs-lang.tcl.locale-procs.lang::system::set_locale.update_system_locale {
        update apm_packages
        set    default_locale = :locale 
        where  package_id = :package_id
      } {} {} {} c:/web/openacs-4/packages/acs-lang/tcl/locale-procs.xql}
dbqd.acs-lang.tcl.locale-procs.lang::user::package_level_locale_not_cached.get_user_locale {dbqd.acs-lang.tcl.locale-procs.lang::user::package_level_locale_not_cached.get_user_locale {
        select locale
        from   ad_locale_user_prefs
        where  user_id = :user_id
        and    package_id = :package_id
      } {} {} {} c:/web/openacs-4/packages/acs-lang/tcl/locale-procs.xql}
dbqd.acs-lang.tcl.locale-procs.lang::user::site_wide_locale_not_cached.get_user_site_wide_locale {dbqd.acs-lang.tcl.locale-procs.lang::user::site_wide_locale_not_cached.get_user_site_wide_locale {
        select locale
        from   user_preferences
        where  user_id = :user_id
      } {} {} {} c:/web/openacs-4/packages/acs-lang/tcl/locale-procs.xql}
dbqd.acs-lang.tcl.locale-procs.lang::user::set_locale.set_user_site_wide_locale {dbqd.acs-lang.tcl.locale-procs.lang::user::set_locale.set_user_site_wide_locale {
        update user_preferences
        set    locale = :locale
        where  user_id = :user_id
      } {} {} {} c:/web/openacs-4/packages/acs-lang/tcl/locale-procs.xql}
dbqd.acs-lang.tcl.locale-procs.lang::user::set_locale.user_locale_exists_p {dbqd.acs-lang.tcl.locale-procs.lang::user::set_locale.user_locale_exists_p {
        select count(*) 
        from   ad_locale_user_prefs 
        where  user_id = :user_id
        and    package_id = :package_id
      } {} {} {} c:/web/openacs-4/packages/acs-lang/tcl/locale-procs.xql}
dbqd.acs-lang.tcl.locale-procs.lang::user::set_locale.update_user_locale {dbqd.acs-lang.tcl.locale-procs.lang::user::set_locale.update_user_locale {
        update ad_locale_user_prefs 
        set    locale = :locale 
        where  user_id = :user_id 
        and    package_id = :package_id
      } {} {} {} c:/web/openacs-4/packages/acs-lang/tcl/locale-procs.xql}
dbqd.acs-lang.tcl.locale-procs.lang::user::set_locale.insert_user_locale {dbqd.acs-lang.tcl.locale-procs.lang::user::set_locale.insert_user_locale {
         insert into ad_locale_user_prefs (user_id, package_id, locale) 
        values (:user_id, :package_id, :locale)
      } {} {} {} c:/web/openacs-4/packages/acs-lang/tcl/locale-procs.xql}
dbqd.acs-lang.tcl.locale-procs.lang::user::set_locale.delete_user_locale {dbqd.acs-lang.tcl.locale-procs.lang::user::set_locale.delete_user_locale {
        delete 
        from   ad_locale_user_prefs 
        where  user_id = :user_id 
        and    package_id = :package_id
      } {} {} {} c:/web/openacs-4/packages/acs-lang/tcl/locale-procs.xql}
dbqd.acs-lang.tcl.locale-procs.lang::user::set_timezone.set_user_timezone {dbqd.acs-lang.tcl.locale-procs.lang::user::set_timezone.set_user_timezone {
        update user_preferences
        set    timezone = :timezone
        where  user_id = :user_id
      } {} {} {} c:/web/openacs-4/packages/acs-lang/tcl/locale-procs.xql}
dbqd.acs-lang.tcl.locale-procs.lang::user::timezone.select_user_timezone {dbqd.acs-lang.tcl.locale-procs.lang::user::timezone.select_user_timezone {
        select timezone
        from   user_preferences
        where  user_id = :user_id
      } {} {} {} c:/web/openacs-4/packages/acs-lang/tcl/locale-procs.xql}
dbqd.acs-lang.tcl.localization-procs-oracle.lc_time_utc_to_local.utc_to_local {dbqd.acs-lang.tcl.localization-procs-oracle.lc_time_utc_to_local.utc_to_local {
      
	    begin
	    :1 := to_char(timezone.utc_to_local(timezone.get_id(:tz), to_date(:time_value, 'YYYY-MM-DD HH24:MI:SS')), 'YYYY-MM-DD HH24:MI:SS');
	    end;
	
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-lang/tcl/localization-procs-oracle.xql}
dbqd.acs-lang.tcl.localization-procs-oracle.lc_time_local_to_utc.local_to_utc {dbqd.acs-lang.tcl.localization-procs-oracle.lc_time_local_to_utc.local_to_utc {
      
	    begin
	    :1 := to_char(timezone.local_to_utc(timezone.get_id(:tz), to_date(:time_value, 'YYYY-MM-DD HH24:MI:SS')), 'YYYY-MM-DD HH24:MI:SS');
	    end;
	
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-lang/tcl/localization-procs-oracle.xql}
dbqd.acs-lang.tcl.localization-procs-oracle.lc_time_tz_convert.convert {dbqd.acs-lang.tcl.localization-procs-oracle.lc_time_tz_convert.convert {
      
        begin
            :1 := to_char(
                          timezone.utc_to_local(timezone.get_id(:to), 
                                                timezone.local_to_utc(timezone.get_id(:from), to_date(:time_value, 'YYYY-MM-DD HH24:MI:SS'))
                                                ), 'YYYY-MM-DD HH24:MI:SS');
        end;
	
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-lang/tcl/localization-procs-oracle.xql}
dbqd.acs-lang.tcl.localization-procs.lc_time_utc_to_local.utc_to_local {dbqd.acs-lang.tcl.localization-procs.lc_time_utc_to_local.utc_to_local {

	    select to_char(timezone__convert_to_local(timezone__get_id(:tz), :time_value), 'YYYY-MM-DD HH24:MI:SS')
	
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-lang/tcl/localization-procs-postgresql.xql}
dbqd.acs-lang.tcl.localization-procs.lc_time_local_to_utc.local_to_utc {dbqd.acs-lang.tcl.localization-procs.lc_time_local_to_utc.local_to_utc {

	    select  to_char(timezone__convert_to_utc(timezone__get_id(:tz), :time_value), 'YYYY-MM-DD HH24:MI:SS')
	
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-lang/tcl/localization-procs-postgresql.xql}
dbqd.acs-lang.tcl.localization-procs.lc_time_tz_convert.convert {dbqd.acs-lang.tcl.localization-procs.lc_time_tz_convert.convert {
      

           select to_char(     
                          timezone__convert_to_local(timezone__get_id(:to), 
                                                to_char(timezone__convert_to_utc(timezone__get_id(:from), :time_value), 'YYYY-MM-DD HH24:MI:SS')
                                                ), 'YYYY-MM-DD HH24:MI:SS')
	
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-lang/tcl/localization-procs-postgresql.xql}
dbqd.acs-lang.tcl.localization-procs.lc_monetary_currency.lc_currency_select {dbqd.acs-lang.tcl.localization-procs.lc_monetary_currency.lc_currency_select {
      
	select fractional_digits,
               html_entity 
        from   currency_codes 
        where  iso = :currency
    
      } {} {} {} c:/web/openacs-4/packages/acs-lang/tcl/localization-procs.xql}
dbqd.acs-lang.tcl.localization-procs.lc_list_all_timezones.all_timezones {dbqd.acs-lang.tcl.localization-procs.lc_list_all_timezones.all_timezones {
      select distinct tz, gmt_offset from timezones order by tz
      } {} {} {} c:/web/openacs-4/packages/acs-lang/tcl/localization-procs.xql}
dbqd.acs-lang.www.admin.batch-editor-oracle.get_messages {dbqd.acs-lang.www.admin.batch-editor-oracle.get_messages {

    select q2.*
    from   (select rownum as inner_rownum, q.* 
            from   (select lm1.message_key,
                           lm1.package_key,
                           lm1.message as default_message,
                           lm2.message as translated_message,
                           lmk.description
                    from   lang_messages lm1,
                           lang_messages lm2,
                           lang_message_keys lmk
                    where  lm1.locale = :default_locale
                    and    lm2.locale (+) = :locale 
                    and    lm2.message_key (+) = lm1.message_key
                    and    lm2.package_key (+) = lm1.package_key
                    and    lm1.message_key = lmk.message_key
                    and    lm1.package_key = lmk.package_key
                    and    lm1.package_key = :package_key
                    $where_clause
                    order  by upper(lm1.message_key), lm1.message_key
                   ) q
            ) q2
    where  inner_rownum between :page_start + 1 and :page_start + 10
    order  by inner_rownum

    } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-lang/www/admin/batch-editor-oracle.xql}
dbqd.acs-lang.www.admin.batch-editor.get_messages {dbqd.acs-lang.www.admin.batch-editor.get_messages {

    select lm1.message_key,
           lm1.package_key,
           lm1.message as default_message,
           lm2.message as translated_message,
           lmk.description
    from   lang_messages lm1 left outer join 
           lang_messages lm2 on (lm2.locale = :locale and lm2.message_key = lm1.message_key and lm2.package_key = lm1.package_key),
           lang_message_keys lmk
    where  lm1.locale = :default_locale
    and    lm1.package_key = :package_key
    and    lm1.message_key = lmk.message_key
    and    lm1.package_key = lmk.package_key
    $where_clause
    order  by upper(lm1.message_key), lm1.message_key
    offset $page_start
    limit  10

    } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-lang/www/admin/batch-editor-postgresql.xql}
dbqd.acs-lang.www.admin.edit-description.select_description {dbqd.acs-lang.www.admin.edit-description.select_description {
        select lmk.description,
               (select lm.message as message
                from   lang_messages lm
                where    lm.package_key= :package_key
                and    lm.message_key = :message_key
                and    locale = :default_locale) as org_message
        from   lang_message_keys lmk
        where  lmk.package_key = :package_key 
        and    lmk.message_key = :message_key
    } {} {} {} c:/web/openacs-4/packages/acs-lang/www/admin/edit-description.xql}
dbqd.acs-lang.www.admin.message-list-oracle.select_messages {dbqd.acs-lang.www.admin.message-list-oracle.select_messages {

    select lmk.message_key,
           lm1.message as default_message,
           lm2.message as translated_message,
           lmk.description
    from   lang_messages lm1,
           lang_messages lm2,
           lang_message_keys lmk
    where  lmk.package_key = :package_key
    and    lm1.locale = :default_locale
    and    lm1.message_key = lmk.message_key
    and    lm1.package_key = lmk.package_key
    and    lm2.locale (+) = :locale
    and    lm2.message_key (+) = lmk.message_key
    and    lm2.package_key (+) = lmk.package_key
    $where_clause
    order  by upper(lm1.message_key), lm1.message_key

    } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-lang/www/admin/message-list-oracle.xql}
dbqd.acs-lang.www.admin.message-list.select_messages {dbqd.acs-lang.www.admin.message-list.select_messages {

    select lm1.message_key,
           lm1.message as default_message,
           lm2.message as translated_message,
           lmk.description
    from   lang_messages lm1 left outer join 
           lang_messages lm2 on (lm2.locale = :locale and lm2.message_key = lm1.message_key and lm2.package_key = lm1.package_key),
           lang_message_keys lmk
    where  lm1.locale = :default_locale
    and    lm1.package_key = :package_key
    and    lm1.message_key = lmk.message_key
    and    lm1.package_key = lmk.package_key
    $where_clause
    order  by upper(lm1.message_key), lm1.message_key


    } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-lang/www/admin/message-list-postgresql.xql}
dbqd.acs-lang.www.admin.message-search-oracle.select_messages {dbqd.acs-lang.www.admin.message-search-oracle.select_messages {

        select lm1.message_key,
               lm1.package_key,
               lm1.message as default_message,
               lm2.message as translated_message
        from   lang_messages lm1,
               lang_messages lm2
        where  lm1.locale = :default_locale
        and    lm2.locale (+) = :locale
        and    lm2.message_key (+) = lm1.message_key
        and    lm2.package_key (+) = lm1.package_key
        and    exists (select 1
                       from   lang_messages lm3
                       where  lm3.locale = :search_locale
                       and    lm3.message_key = lm1.message_key
                       and    lm3.package_key = lm1.package_key
                       and    upper(dbms_lob.substr(lm3.message)) like upper(:search_string))
        order by upper(lm1.message_key)

    } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-lang/www/admin/message-search-oracle.xql}
dbqd.acs-lang.www.admin.message-search.select_messages {dbqd.acs-lang.www.admin.message-search.select_messages {

        select lm1.message_key,
               lm1.package_key,
               lm1.message as default_message,
               coalesce(lm2.message, 'TRANSLATION MISSING') as translated_message
        from   lang_messages lm1 left outer join 
               lang_messages lm2 on (lm2.locale = :locale and lm2.message_key = lm1.message_key and lm2.package_key = lm1.package_key)
        where  lm1.locale = :default_locale
        and    exists (select 1
                       from   lang_messages lm3
                       where  lm3.locale = :search_locale
                       and    lm3.message_key = lm1.message_key
                       and    lm3.package_key = lm1.package_key
                       and    lm3.message ilike :search_string)
        order by upper(lm1.message_key)

    } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-lang/www/admin/message-search-postgresql.xql}
dbqd.acs-lang.www.admin.set-system-timezone-oracle.sysdate {dbqd.acs-lang.www.admin.set-system-timezone-oracle.sysdate {
      select to_char(sysdate, 'YYYY-MM-DD HH24:MI:SS') from dual 
    } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-lang/www/admin/set-system-timezone-oracle.xql}
dbqd.acs-lang.www.admin.set-system-timezone-oracle.sysdate_utc {dbqd.acs-lang.www.admin.set-system-timezone-oracle.sysdate_utc {
      select to_char(timezone.local_to_utc(timezone.get_id(:system_timezone), sysdate), 'YYYY-MM-DD HH24:MI:SS') from dual
    } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-lang/www/admin/set-system-timezone-oracle.xql}
dbqd.acs-lang.www.admin.set-system-timezone.sysdate {dbqd.acs-lang.www.admin.set-system-timezone.sysdate {
	select to_char(current_timestamp, 'YYYY-MM-DD HH24:MI:SS')
    } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-lang/www/admin/set-system-timezone-postgresql.xql}
dbqd.acs-lang.www.admin.set-system-timezone.sysdate_utc {dbqd.acs-lang.www.admin.set-system-timezone.sysdate_utc {
      select to_char(timezone__convert_to_utc(timezone__get_id(:system_timezone), to_char(current_timestamp, 'YYYY-MM-DD HH24:MI:SS')), 'YYYY-MM-DD HH24:MI:SS')
    } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-lang/www/admin/set-system-timezone-postgresql.xql}
dbqd.acs-lang.www.admin.test.format-test-oracle.lang_system_time_select {dbqd.acs-lang.www.admin.test.format-test-oracle.lang_system_time_select {
      SELECT to_char(sysdate, 'YYYY-MM-DD HH24:MI:SS') AS system_time FROM dual
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-lang/www/admin/test/format-test-oracle.xql}
dbqd.acs-lang.www.admin.test.format-test.lang_system_time_select {dbqd.acs-lang.www.admin.test.format-test.lang_system_time_select {
	SELECT to_char(current_time, 'YYYY-MM-DD HH24:MI:SS') AS system_time
    } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-lang/www/admin/test/format-test-postgresql.xql}
dbqd.acs-lang.www.admin.test.test-oracle.lang_system_time_select {dbqd.acs-lang.www.admin.test.test-oracle.lang_system_time_select {
      SELECT to_char(sysdate, 'YYYY-MM-DD HH24:MI:SS') AS system_time FROM dual
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-lang/www/admin/test/test-oracle.xql}
dbqd.acs-lang.www.admin.test.test.lang_system_time_select {dbqd.acs-lang.www.admin.test.test.lang_system_time_select {
      SELECT to_char(current_time, 'YYYY-MM-DD HH24:MI:SS') AS system_time
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-lang/www/admin/test/test-postgresql.xql}
dbqd.acs-lang.www.admin.test.timezone-oracle.lang_system_time_select {dbqd.acs-lang.www.admin.test.timezone-oracle.lang_system_time_select {
      SELECT to_char(sysdate, 'YYYY-MM-DD HH24:MI:SS') AS system_time FROM dual
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-lang/www/admin/test/timezone-oracle.xql}
dbqd.acs-lang.www.admin.test.timezone.lang_system_time_select {dbqd.acs-lang.www.admin.test.timezone.lang_system_time_select {
	select to_char(current_time, 'YYYY-MM-DD HH24:MI:SS') AS system_time
    } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-lang/www/admin/test/timezone-postgresql.xql}
dbqd.acs-lang.www.change-locale-include.all_timezones {dbqd.acs-lang.www.change-locale-include.all_timezones {
        select tz || ' ' || gmt_offset as tz,
               tz
        from   timezones
    } {} {} {} c:/web/openacs-4/packages/acs-lang/www/change-locale-include.xql}
dbqd.acs-mail.tcl.acs-mail-procs-oracle.acs_mail_set_content.insert_new_content {dbqd.acs-mail.tcl.acs-mail-procs-oracle.acs_mail_set_content.insert_new_content {

begin
	:1 := content_item.new (
	    name          => 'acs-mail message $body_id',
	    creation_user => :creation_user,
		creation_ip   => :creation_ip,
		title         => :header_subject,
		nls_language  => :nls_language,
		text		  => :content,
		storage_type  => 'lob'
    );
end;
    
} {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-mail/tcl/acs-mail-procs-oracle.xql}
dbqd.acs-mail.tcl.acs-mail-procs-oracle.acs_mail_set_content.get_latest_revision {dbqd.acs-mail.tcl.acs-mail-procs-oracle.acs_mail_set_content.get_latest_revision {
      
begin
  :1 := content_item.get_latest_revision ( :item_id );
end;
    
} {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-mail/tcl/acs-mail-procs-oracle.xql}
dbqd.acs-mail.tcl.acs-mail-procs-oracle.acs_mail_set_content.set_live_revision {dbqd.acs-mail.tcl.acs-mail-procs-oracle.acs_mail_set_content.set_live_revision {

begin
	content_item.set_live_revision(:revision_id);
end;
    
} {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-mail/tcl/acs-mail-procs-oracle.xql}
dbqd.acs-mail.tcl.acs-mail-procs-oracle.acs_mail_set_content_file.insert_new_content {dbqd.acs-mail.tcl.acs-mail-procs-oracle.acs_mail_set_content_file.insert_new_content {
      
begin
	:1 := content_item.new (
		name => 'acs-mail message $body_id',
		creation_user => :creation_user,
		creation_ip   => :creation_ip,
		title		  => :header_subject,
		nls_language  => :nls_language,
		storage_type  => 'file'
    );
end;

} {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-mail/tcl/acs-mail-procs-oracle.xql}
dbqd.acs-mail.tcl.acs-mail-procs-oracle.acs_mail_set_content_file.get_latest_revision {dbqd.acs-mail.tcl.acs-mail-procs-oracle.acs_mail_set_content_file.get_latest_revision {
      
begin
  :1 := content_item.get_latest_revision ( :item_id );
end;"
    
} {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-mail/tcl/acs-mail-procs-oracle.xql}
dbqd.acs-mail.tcl.acs-mail-procs-oracle.acs_mail_set_content_file.set_live_revision {dbqd.acs-mail.tcl.acs-mail-procs-oracle.acs_mail_set_content_file.set_live_revision {

begin
	content_item.set_live_revision(:revision_id);
end;
    
} {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-mail/tcl/acs-mail-procs-oracle.xql}
dbqd.acs-mail.tcl.acs-mail-procs-oracle.acs_mail_set_content_file.update_content {dbqd.acs-mail.tcl.acs-mail-procs-oracle.acs_mail_set_content_file.update_content {
      
update cr_revisions
  set content = empty_blob()
  where revision_id = :revision_id
  returning content into :1
    
} {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-mail/tcl/acs-mail-procs-oracle.xql}
dbqd.acs-mail.tcl.acs-mail-procs-oracle.acs_mail_encode_content.get_latest_revision {dbqd.acs-mail.tcl.acs-mail-procs-oracle.acs_mail_encode_content.get_latest_revision {
      
begin
    :1 := content_item.get_latest_revision ( :content_item_id );
end;
    
} {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-mail/tcl/acs-mail-procs-oracle.xql}
dbqd.acs-mail.tcl.acs-mail-procs-oracle.acs_mail_encode_content.copy_blob_to_file {dbqd.acs-mail.tcl.acs-mail-procs-oracle.acs_mail_encode_content.copy_blob_to_file {
      
select r.content, i.storage_type 
from cr_revisions r, cr_items i 
where r.revision_id = $revision_id and
      r.item_id = i.item_id
        
} {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-mail/tcl/acs-mail-procs-oracle.xql}
dbqd.acs-mail.tcl.acs-mail-procs-oracle.acs_mail_body_new.acs_mail_body_new {dbqd.acs-mail.tcl.acs-mail-procs-oracle.acs_mail_body_new.acs_mail_body_new {
      
begin
    :1 := acs_mail_body.new (
        body_id => :body_id,
        body_reply_to => :body_reply_to,
        body_from => :body_from,
        body_date => :body_date,
        header_message_id => :header_message_id,
        header_reply_to => :header_reply_to,
        header_subject => :header_subject,
        header_from => :header_from,
        header_to => :header_to,
        content_item_id => :content_item_id,
        creation_user => :creation_user,
        creation_ip => :creation_ip
    );
end;
    
} {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-mail/tcl/acs-mail-procs-oracle.xql}
dbqd.acs-mail.tcl.acs-mail-procs-oracle.acs_mail_body_p.acs_mail_body_p {dbqd.acs-mail.tcl.acs-mail-procs-oracle.acs_mail_body_p.acs_mail_body_p {
      
        begin
            :1 := acs_mail_body.body_p (:object_id);
        end;
    
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-mail/tcl/acs-mail-procs-oracle.xql}
dbqd.acs-mail.tcl.acs-mail-procs-oracle.acs_mail_body_clone.acs_mail_body_clone {dbqd.acs-mail.tcl.acs-mail-procs-oracle.acs_mail_body_clone.acs_mail_body_clone {
      
        begin
            :1 := acs_mail_body.clone (
                old_body_id => :old_body_id,
                body_id => :body_id,
                creation_user => :creation_user,
                creation_ip => :creation_ip
            );
        end;
    
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-mail/tcl/acs-mail-procs-oracle.xql}
dbqd.acs-mail.tcl.acs-mail-procs-oracle.acs_mail_body_set_content_object.acs_mail_body_set_content_object {dbqd.acs-mail.tcl.acs-mail-procs-oracle.acs_mail_body_set_content_object.acs_mail_body_set_content_object {
      
begin
    acs_mail_body.set_content_object (
        body_id => :body_id,
        content_item_id => :content_item_id
    );
end;
    
} {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-mail/tcl/acs-mail-procs-oracle.xql}
dbqd.acs-mail.tcl.acs-mail-procs-oracle.acs_mail_multipart_new.acs_mail_multipart_new {dbqd.acs-mail.tcl.acs-mail-procs-oracle.acs_mail_multipart_new.acs_mail_multipart_new {
      
        begin
            :1 := acs_mail_multipart.new (
                multipart_id => :multipart_id,
                multipart_kind => :multipart_kind,
                creation_user => :creation_user,
                creation_ip => :creation_ip
            );
        end;
    
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-mail/tcl/acs-mail-procs-oracle.xql}
dbqd.acs-mail.tcl.acs-mail-procs-oracle.acs_mail_multipart_p.acs_mail_multipart_p {dbqd.acs-mail.tcl.acs-mail-procs-oracle.acs_mail_multipart_p.acs_mail_multipart_p {
      
        begin
            :1 := acs_mail_multipart.multipart_p (:object_id);
        end;
    
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-mail/tcl/acs-mail-procs-oracle.xql}
dbqd.acs-mail.tcl.acs-mail-procs-oracle.acs_mail_multipart_add_content.acs_mail_multipart_add_content {dbqd.acs-mail.tcl.acs-mail-procs-oracle.acs_mail_multipart_add_content.acs_mail_multipart_add_content {
      
begin
    :1 := acs_mail_multipart.add_content (
        multipart_id => :multipart_id,
        content_item_id => :content_item_id
    );
end;
    
} {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-mail/tcl/acs-mail-procs-oracle.xql}
dbqd.acs-mail.tcl.acs-mail-procs-oracle.acs_mail_link_new.acs_mail_link_new {dbqd.acs-mail.tcl.acs-mail-procs-oracle.acs_mail_link_new.acs_mail_link_new {
      
        begin
            :1 := acs_mail_link.new (
                mail_link_id => :mail_link_id,
                body_id => :body_id,
                context_id => :context_id,
                creation_user => :creation_user,
                creation_ip => :creation_ip
            );
        end;
    
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-mail/tcl/acs-mail-procs-oracle.xql}
dbqd.acs-mail.tcl.acs-mail-procs-oracle.acs_mail_link_p.acs_mail_link_p {dbqd.acs-mail.tcl.acs-mail-procs-oracle.acs_mail_link_p.acs_mail_link_p {
      
        begin
            :1 := acs_mail_link.link_p (:object_id);
        end;
    
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-mail/tcl/acs-mail-procs-oracle.xql}
dbqd.acs-mail.tcl.acs-mail-procs.acs_mail_set_content.insert_new_content {dbqd.acs-mail.tcl.acs-mail-procs.acs_mail_set_content.insert_new_content {

select content_item__new(
    'acs-mail message $body_id'::varchar, -- new__name
    null::integer,                     -- new__parent_id
    null::integer,                     -- new__item_id
    null::varchar,                     -- new__locale
    current_timestamp,                    -- new__creation_date
    :creation_user::integer,           -- new__creation_user
    null::integer,                     -- new__context_id
    :creation_ip::varchar,             -- new__creation_ip
    'content_item'::varchar,           -- new__item_subtype
    'content_revision'::varchar,       -- new__content_type
    :header_subject::varchar,          -- new__title
    null::varchar,                     -- new__description
    :content_type,            -- new__mime_type
    :nls_language,            -- new__nls_language
    :content,                 -- new__text
    'text'                    -- new__storage_type
  )
    
} {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-mail/tcl/acs-mail-procs-postgresql.xql}
dbqd.acs-mail.tcl.acs-mail-procs.acs_mail_set_content.get_latest_revision {dbqd.acs-mail.tcl.acs-mail-procs.acs_mail_set_content.get_latest_revision {

begin
  return content_item__get_latest_revision ( :item_id );
end;

} {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-mail/tcl/acs-mail-procs-postgresql.xql}
dbqd.acs-mail.tcl.acs-mail-procs.acs_mail_set_content.set_live_revision {dbqd.acs-mail.tcl.acs-mail-procs.acs_mail_set_content.set_live_revision {

select content_item__set_live_revision(:revision_id);

} {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-mail/tcl/acs-mail-procs-postgresql.xql}
dbqd.acs-mail.tcl.acs-mail-procs.acs_mail_set_content_file.insert_new_content {dbqd.acs-mail.tcl.acs-mail-procs.acs_mail_set_content_file.insert_new_content {

begin
  return content_item__new(
    varchar 'acs-mail message $body_id', -- new__name
    null,                     -- new__parent_id
    null,                     -- new__item_id
    null,                     -- new__locale
    now(),                    -- new__creation_date
    :creation_user,           -- new__creation_user
    null,                     -- new__context_id
    :creation_ip,             -- new__creation_ip
    'content_item',           -- new__item_subtype
    'content_revision',       -- new__content_type
    :header_subject,          -- new__title
    null,                     -- new__description
    :content_type,            -- new__mime_type
    :nls_language,            -- new__nls_language
    null,                     -- new__text
    'file'                    -- new__storage_type
  );
end;

} {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-mail/tcl/acs-mail-procs-postgresql.xql}
dbqd.acs-mail.tcl.acs-mail-procs.acs_mail_set_content_file.get_latest_revision {dbqd.acs-mail.tcl.acs-mail-procs.acs_mail_set_content_file.get_latest_revision {

begin
  return content_item__get_latest_revision ( :item_id );
end;

} {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-mail/tcl/acs-mail-procs-postgresql.xql}
dbqd.acs-mail.tcl.acs-mail-procs.acs_mail_set_content_file.set_live_revision {dbqd.acs-mail.tcl.acs-mail-procs.acs_mail_set_content_file.set_live_revision {

select content_item__set_live_revision(:revision_id)

} {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-mail/tcl/acs-mail-procs-postgresql.xql}
dbqd.acs-mail.tcl.acs-mail-procs.acs_mail_set_content_file.update_content {dbqd.acs-mail.tcl.acs-mail-procs.acs_mail_set_content_file.update_content {

update cr_revisions
  set content = '[cr_create_content_file $item_id $revision_id $content_file]'
  where revision_id = :revision_id

} {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-mail/tcl/acs-mail-procs-postgresql.xql}
dbqd.acs-mail.tcl.acs-mail-procs.acs_mail_encode_content.get_latest_revision {dbqd.acs-mail.tcl.acs-mail-procs.acs_mail_encode_content.get_latest_revision {

begin
  return content_item__get_latest_revision ( :content_item_id );
end;

} {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-mail/tcl/acs-mail-procs-postgresql.xql}
dbqd.acs-mail.tcl.acs-mail-procs.acs_mail_encode_content.copy_blob_to_file {dbqd.acs-mail.tcl.acs-mail-procs.acs_mail_encode_content.copy_blob_to_file {
      
select r.lob as content, i.storage_type 
from cr_revisions r, cr_items i 
where r.revision_id = $revision_id and
      r.item_id = i.item_id
        
} {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-mail/tcl/acs-mail-procs-postgresql.xql}
dbqd.acs-mail.tcl.acs-mail-procs.acs_mail_content_new.acs_mail_content_new {dbqd.acs-mail.tcl.acs-mail-procs.acs_mail_content_new.acs_mail_content_new {

select acs_mail_gc_object__new (
  :object_id,				-- gc_object_id 
  'acs_mail_gc_object',		-- object_type
  now(),					-- creation_date
  :creation_user,			-- creation_user 
  :creation_ip,				-- creation_ip 
  null						-- context_id
);

} {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-mail/tcl/acs-mail-procs-postgresql.xql}
dbqd.acs-mail.tcl.acs-mail-procs.acs_mail_body_new.acs_mail_body_new {dbqd.acs-mail.tcl.acs-mail-procs.acs_mail_body_new.acs_mail_body_new {

select acs_mail_body__new (
  :body_id,				-- body_id 
  :body_reply_to,		-- body_reply_to 
  :body_from,			-- body_from 
  :body_date,			-- body_date 
  :header_message_id,	-- header_message_id 
  :header_reply_to,		-- header_reply_to 
  :header_subject,      -- header_subject 
  :header_from,			-- header_from 
  :header_to,			-- header_to 
  :content_item_id,		-- content_item_id 
  'acs_mail_body',		-- object_type
  now(),				-- creation_date
  :creation_user,		-- creation_user 
  :creation_ip,			-- creation_ip 
  null					-- context_id
);

} {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-mail/tcl/acs-mail-procs-postgresql.xql}
dbqd.acs-mail.tcl.acs-mail-procs.acs_mail_body_p.acs_mail_body_p {dbqd.acs-mail.tcl.acs-mail-procs.acs_mail_body_p.acs_mail_body_p {

select acs_mail_body__body_p (:object_id);

} {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-mail/tcl/acs-mail-procs-postgresql.xql}
dbqd.acs-mail.tcl.acs-mail-procs.acs_mail_body_clone.acs_mail_body_clone {dbqd.acs-mail.tcl.acs-mail-procs.acs_mail_body_clone.acs_mail_body_clone {

select acs_mail_body__clone (
  :old_body_id,		-- old_body_id 
  :body_id,			-- body_id 
  :creation_user,	-- creation_user 
  :creation_ip		-- creation_ip 
);

} {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-mail/tcl/acs-mail-procs-postgresql.xql}
dbqd.acs-mail.tcl.acs-mail-procs.acs_mail_body_set_content_object.acs_mail_body_set_content_object {dbqd.acs-mail.tcl.acs-mail-procs.acs_mail_body_set_content_object.acs_mail_body_set_content_object {

select acs_mail_body__set_content_object (
  :body_id,				-- body_id 
  :content_item_id		-- content_item_id 
);

} {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-mail/tcl/acs-mail-procs-postgresql.xql}
dbqd.acs-mail.tcl.acs-mail-procs.acs_mail_multipart_new.acs_mail_multipart_new {dbqd.acs-mail.tcl.acs-mail-procs.acs_mail_multipart_new.acs_mail_multipart_new {

select acs_mail_multipart__new (
  :multipart_id,	    -- multipart_id 
  :multipart_kind,	    -- multipart_kind 
  'acs_mail_multipart', -- object_type
  now(),                -- creation_date
  :creation_user,	    -- creation_user 
  :creation_ip,		    -- creation_ip 
  null                  -- context_id
);

} {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-mail/tcl/acs-mail-procs-postgresql.xql}
dbqd.acs-mail.tcl.acs-mail-procs.acs_mail_multipart_p.acs_mail_multipart_p {dbqd.acs-mail.tcl.acs-mail-procs.acs_mail_multipart_p.acs_mail_multipart_p {

select acs_mail_multipart__multipart_p (:object_id);

} {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-mail/tcl/acs-mail-procs-postgresql.xql}
dbqd.acs-mail.tcl.acs-mail-procs.acs_mail_multipart_add_content.acs_mail_multipart_add_content {dbqd.acs-mail.tcl.acs-mail-procs.acs_mail_multipart_add_content.acs_mail_multipart_add_content {

select acs_mail_multipart__add_content (
  :multipart_id,		-- multipart_id 
  :content_item_id		-- content_item_id 
);

} {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-mail/tcl/acs-mail-procs-postgresql.xql}
dbqd.acs-mail.tcl.acs-mail-procs.acs_mail_link_new.acs_mail_link_new {dbqd.acs-mail.tcl.acs-mail-procs.acs_mail_link_new.acs_mail_link_new {

select acs_mail_link__new (
  :mail_link_id,	-- mail_link_id 
  :body_id,			-- body_id 
  :context_id,		-- context_id 
  :creation_user,	-- creation_user 
  :creation_ip		-- creation_ip 
);

} {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-mail/tcl/acs-mail-procs-postgresql.xql}
dbqd.acs-mail.tcl.acs-mail-procs.acs_mail_link_p.acs_mail_link_p {dbqd.acs-mail.tcl.acs-mail-procs.acs_mail_link_p.acs_mail_link_p {

select acs_mail_link__link_p (:object_id);

} {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-mail/tcl/acs-mail-procs-postgresql.xql}
dbqd.acs-mail.tcl.acs-mail-procs.acs_mail_encode_content.get_storage_type {dbqd.acs-mail.tcl.acs-mail-procs.acs_mail_encode_content.get_storage_type {

select storage_type from cr_items 
where item_id = :content_item_id

} {} {} {} c:/web/openacs-4/packages/acs-mail/tcl/acs-mail-procs.xql}
dbqd.acs-mail.tcl.acs-mail-procs.acs_mail_encode_content.acs_mail_body_to_mime_get_content_simple {dbqd.acs-mail.tcl.acs-mail-procs.acs_mail_encode_content.acs_mail_body_to_mime_get_content_simple {
      
select content, mime_type as v_content_type
	from cr_revisions
	where revision_id = :revision_id
        
} {} {} {} c:/web/openacs-4/packages/acs-mail/tcl/acs-mail-procs.xql}
dbqd.acs-mail.tcl.acs-mail-procs.acs_mail_encode_content.acs_mail_body_to_mime_get_contents {dbqd.acs-mail.tcl.acs-mail-procs.acs_mail_encode_content.acs_mail_body_to_mime_get_contents {
      
select mime_filename, mime_disposition, content_item_id as ci_id
  from acs_mail_multipart_parts
  where multipart_id = :content_item_id
  order by sequence_number
        
} {} {} {} c:/web/openacs-4/packages/acs-mail/tcl/acs-mail-procs.xql}
dbqd.acs-mail.tcl.acs-mail-procs.acs_mail_body_to_output_format.acs_mail_body_to_mime_get_body {dbqd.acs-mail.tcl.acs-mail-procs.acs_mail_body_to_output_format.acs_mail_body_to_mime_get_body {
      
select body_id from acs_mail_links where mail_link_id = :link_id
        
} {} {} {} c:/web/openacs-4/packages/acs-mail/tcl/acs-mail-procs.xql}
dbqd.acs-mail.tcl.acs-mail-procs.acs_mail_body_to_output_format.acs_mail_body_to_mime_data {dbqd.acs-mail.tcl.acs-mail-procs.acs_mail_body_to_output_format.acs_mail_body_to_mime_data {
      
select header_message_id, header_reply_to, header_subject,
       header_from, header_to, content_item_id
  from acs_mail_bodies
  where body_id = :body_id
    
} {} {} {} c:/web/openacs-4/packages/acs-mail/tcl/acs-mail-procs.xql}
dbqd.acs-mail.tcl.acs-mail-procs.acs_mail_body_to_output_format.acs_mail_body_to_mime_headers {dbqd.acs-mail.tcl.acs-mail-procs.acs_mail_body_to_output_format.acs_mail_body_to_mime_headers {
      
select header_name, header_content from acs_mail_body_headers
  where body_id = :body_id
    
} {} {} {} c:/web/openacs-4/packages/acs-mail/tcl/acs-mail-procs.xql}
dbqd.acs-mail.tcl.acs-mail-procs.acs_mail_process_queue.acs_message_send {dbqd.acs-mail.tcl.acs-mail-procs.acs_mail_process_queue.acs_message_send {
      
select message_id, envelope_from, envelope_to from acs_mail_queue_outgoing
    
} {} {} {} c:/web/openacs-4/packages/acs-mail/tcl/acs-mail-procs.xql}
dbqd.acs-mail.tcl.acs-mail-procs.acs_mail_process_queue.acs_message_delete_sent {dbqd.acs-mail.tcl.acs-mail-procs.acs_mail_process_queue.acs_message_delete_sent {
      
delete from acs_mail_queue_outgoing
  where message_id = :message_id
    and envelope_from = :envelope_from
    and envelope_to = :envelope_to
            
} {} {} {} c:/web/openacs-4/packages/acs-mail/tcl/acs-mail-procs.xql}
dbqd.acs-mail.tcl.acs-mail-procs.acs_mail_process_queue.acs_message_cleanup_queue {dbqd.acs-mail.tcl.acs-mail-procs.acs_mail_process_queue.acs_message_cleanup_queue {
      
delete from acs_mail_queue_messages
  where message_id not in
  (select message_id from acs_mail_queue_outgoing)
  and message_id not in
  (select message_id from acs_mail_queue_incoming)
    
} {} {} {} c:/web/openacs-4/packages/acs-mail/tcl/acs-mail-procs.xql}
dbqd.acs-mail.tcl.acs-mail-procs.acs_mail_multipart_type.acs_mail_multipart_type {dbqd.acs-mail.tcl.acs-mail-procs.acs_mail_multipart_type.acs_mail_multipart_type {
      
select multipart_kind from acs_mail_multiparts
  where multipart_id = :object_id
    
} {} {} {} c:/web/openacs-4/packages/acs-mail/tcl/acs-mail-procs.xql}
dbqd.acs-mail.tcl.acs-mail-procs.acs_mail_link_get_body_id.acs_mail_link_get_body_id {dbqd.acs-mail.tcl.acs-mail-procs.acs_mail_link_get_body_id.acs_mail_link_get_body_id {
      
select body_id from acs_mail_links where mail_link_id = :link_id
    
} {} {} {} c:/web/openacs-4/packages/acs-mail/tcl/acs-mail-procs.xql}
dbqd.acs-mail-lite.tcl.acs-mail-lite-procs-oracle.acs_mail_lite::send.create_queue_entry {dbqd.acs-mail-lite.tcl.acs-mail-lite-procs-oracle.acs_mail_lite::send.create_queue_entry {
            insert into acs_mail_lite_queue 
            (message_id, to_addr, from_addr, subject, body, extra_headers, bcc)
            values
            (acs_mail_lite_id_seq.nextval, :to_addr, :from_addr, :subject, :body, :eh_list, :bcc)
        } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-mail-lite/tcl/acs-mail-lite-procs-oracle.xql}
dbqd.acs-mail-lite.tcl.acs-mail-lite-procs-oracle.acs_mail_lite::sweeper.get_queued_messages {dbqd.acs-mail-lite.tcl.acs-mail-lite-procs-oracle.acs_mail_lite::sweeper.get_queued_messages {
            select message_id,
                   to_addr,
                   from_addr,
                   subject,
                   body,
                   extra_headers,
                   bcc
            from acs_mail_lite_queue
        } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-mail-lite/tcl/acs-mail-lite-procs-oracle.xql}
dbqd.acs-mail-lite.tcl.acs-mail-lite-procs-oracle.acs_mail_lite::sweeper.delete_queue_entry {dbqd.acs-mail-lite.tcl.acs-mail-lite-procs-oracle.acs_mail_lite::sweeper.delete_queue_entry {
            delete
            from acs_mail_lite_queue
            where message_id = :message_id
        } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-mail-lite/tcl/acs-mail-lite-procs-oracle.xql}
dbqd.acs-mail-lite.tcl.acs-mail-lite-procs.acs_mail_lite::send.create_queue_entry {dbqd.acs-mail-lite.tcl.acs-mail-lite-procs.acs_mail_lite::send.create_queue_entry {
            insert into acs_mail_lite_queue 
            (message_id, to_addr, from_addr, subject, body, extra_headers, bcc)
            values
            (nextval('acs_mail_lite_id_seq'), :to_addr, :from_addr, :subject, :body, :eh_list, :bcc)
        } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-mail-lite/tcl/acs-mail-lite-procs-postgresql.xql}
dbqd.acs-mail-lite.tcl.acs-mail-lite-procs.acs_mail_lite::sweeper.get_queued_messages {dbqd.acs-mail-lite.tcl.acs-mail-lite-procs.acs_mail_lite::sweeper.get_queued_messages {
            select message_id,
                   to_addr,
                   from_addr,
                   subject,
                   body,
                   extra_headers,
                   bcc
            from acs_mail_lite_queue
        } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-mail-lite/tcl/acs-mail-lite-procs-postgresql.xql}
dbqd.acs-mail-lite.tcl.acs-mail-lite-procs.acs_mail_lite::sweeper.delete_queue_entry {dbqd.acs-mail-lite.tcl.acs-mail-lite-procs.acs_mail_lite::sweeper.delete_queue_entry {
            delete
            from acs_mail_lite_queue
            where message_id = :message_id
        } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-mail-lite/tcl/acs-mail-lite-procs-postgresql.xql}
dbqd.acs-messaging.tcl.acs-messaging-procs-oracle.acs_messaging_send_query.insert_messaging_by_query {dbqd.acs-messaging.tcl.acs-messaging-procs-oracle.acs_messaging_send_query.insert_messaging_by_query {
      
        insert into acs_messages_outgoing
            (message_id, to_address, grouping_id, wait_until)
        select :m__message_id, p.email, q.grouping_id,
               nvl(q.wait_until, SYSDATE) as wait_until
            from ($query) q, parties p
            where not exists (select 1 from acs_messages_outgoing o
                                  where o.message_id = :m__message_id
                                    and p.email = o.to_address)
              and p.party_id = q.recipient_id
    
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-messaging/tcl/acs-messaging-procs-oracle.xql}
dbqd.acs-messaging.tcl.acs-messaging-procs-oracle.acs_message_p.acs_message_p {dbqd.acs-messaging.tcl.acs-messaging-procs-oracle.acs_message_p.acs_message_p {
      
	begin
	    :1 := acs_message.message_p(:message_id);
	end;
    
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-messaging/tcl/acs-messaging-procs-oracle.xql}
dbqd.acs-messaging.tcl.acs-messaging-procs-oracle.acs_messaging_first_ancestor.acs_message_first_ancestor {dbqd.acs-messaging.tcl.acs-messaging-procs-oracle.acs_messaging_first_ancestor.acs_message_first_ancestor {
      
	select acs_message.first_ancestor(:message_id) as ancestor_id from dual
    
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-messaging/tcl/acs-messaging-procs-oracle.xql}
dbqd.acs-messaging.tcl.acs-messaging-procs-oracle.acs_messaging_send_query.insert_messaging_by_query {dbqd.acs-messaging.tcl.acs-messaging-procs-oracle.acs_messaging_send_query.insert_messaging_by_query {
      
        insert into acs_messages_outgoing
            (message_id, to_address, grouping_id, wait_until)
        select :m__message_id, p.email, q.grouping_id,
               nvl(q.wait_until, SYSDATE) as wait_until
            from ($query) q, parties p
            where not exists (select 1 from acs_messages_outgoing o
                                  where o.message_id = :m__message_id
                                    and p.email = o.to_address)
              and p.party_id = q.recipient_id
    
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-messaging/tcl/acs-messaging-procs-oracle.xql}
dbqd.acs-messaging.tcl.acs-messaging-procs-oracle.acs_messaging_process_queue.acs_message_send {dbqd.acs-messaging.tcl.acs-messaging-procs-oracle.acs_messaging_process_queue.acs_message_send {
      
        select o.message_id as sending_message_id,
               o.to_address as recip_email,
               p.email as sender_email,
               to_char(m.sent_date, 'Dy, DD Mon YYYY HH24:MI:SS') as sent_date,
               m.rfc822_id,
               m.title,
               m.mime_type,
               m.content,
               m2.rfc822_id as in_reply_to
            from acs_messages_outgoing o,
                 acs_messages_all m,
                 acs_messages_all m2,
                 parties p
            where o.message_id = m.message_id
                and m2.message_id(+) = m.reply_to
                and p.party_id = m.sender
                and wait_until <= sysdate
    
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-messaging/tcl/acs-messaging-procs-oracle.xql}
dbqd.acs-messaging.tcl.acs-messaging-procs.acs_messaging_send_query.insert_messaging_by_query {dbqd.acs-messaging.tcl.acs-messaging-procs.acs_messaging_send_query.insert_messaging_by_query {
      
        insert into acs_messages_outgoing
            (message_id, to_address, grouping_id, wait_until)
        select :m__message_id, p.email, q.grouping_id,
               coalesce(q.wait_until, current_timestamp) as wait_until
            from ($query) q, parties p
            where not exists (select 1 from acs_messages_outgoing o
                                  where o.message_id = :m__message_id
                                    and p.email = o.to_address)
              and p.party_id = q.recipient_id
    
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-messaging/tcl/acs-messaging-procs-postgresql.xql}
dbqd.acs-messaging.tcl.acs-messaging-procs.acs_message_p.acs_message_p {dbqd.acs-messaging.tcl.acs-messaging-procs.acs_message_p.acs_message_p {
	    select acs_message__message_p(:message_id);
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-messaging/tcl/acs-messaging-procs-postgresql.xql}
dbqd.acs-messaging.tcl.acs-messaging-procs.acs_messaging_first_ancestor.acs_message_first_ancestor {dbqd.acs-messaging.tcl.acs-messaging-procs.acs_messaging_first_ancestor.acs_message_first_ancestor {
        select acs_message__first_ancestor(:message_id) as ancestor_id 
    } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-messaging/tcl/acs-messaging-procs-postgresql.xql}
dbqd.acs-messaging.tcl.acs-messaging-procs.acs_messaging_process_queue.acs_message_send {dbqd.acs-messaging.tcl.acs-messaging-procs.acs_messaging_process_queue.acs_message_send {
        select o.message_id as sending_message_id,
               o.to_address as recip_email,
               p.email as sender_email,
               to_char(m.sent_date, 'Dy, DD Mon YYYY HH24:MI:SS') as sent_date,
               m.rfc822_id,
               m.title,
               m.mime_type,
               m.content,
               m2.rfc822_id as in_reply_to
            from acs_messages_outgoing o,
                 acs_messages_all m left outer join acs_messages_all m2 on (m2.message_id = m.reply_to),
                 parties p
            where o.message_id = m.message_id
                and p.party_id = m.sender
                and wait_until <= current_timestamp
    
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-messaging/tcl/acs-messaging-procs-postgresql.xql}
dbqd.acs-messaging.tcl.acs-messaging-procs.acs_messaging_process_queue.acs_message_remove_from_queue {dbqd.acs-messaging.tcl.acs-messaging-procs.acs_messaging_process_queue.acs_message_remove_from_queue {
      
                delete from acs_messages_outgoing
                    where message_id = :sending_message_id
                        and to_address = :recip_email
            
      } {} {} {} c:/web/openacs-4/packages/acs-messaging/tcl/acs-messaging-procs.xql}
dbqd.acs-reference.www.reference-data-list-oracle.data_select {dbqd.acs-reference.www.reference-data-list-oracle.data_select {
       
select repository_id,
  table_name,
  internal_data_p,
  package_name,
  to_char(last_update,'MM-DD-YYYY') updated,
  source,
  source_url,
  effective_date,
  expiry_date
from  acs_reference_repositories a
order by table_name

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-reference/www/reference-data-list-oracle.xql}
dbqd.acs-reference.www.reference-data-list.data_select {dbqd.acs-reference.www.reference-data-list.data_select {
       
select repository_id,
  table_name,
  internal_data_p,
  package_name,
  to_char(last_update,'MM-DD-YYYY') as updated,
  source,
  source_url,
  effective_date,
  expiry_date
from  acs_reference_repositories a
order by table_name

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-reference/www/reference-data-list-postgresql.xql}
dbqd.acs-service-contract.tcl.acs-service-contract-init-oracle.binding_exists_p {dbqd.acs-service-contract.tcl.acs-service-contract-init-oracle.binding_exists_p {
select acs_sc_binding.exists_p(:impl_contract_name,:impl_name) from dual
} {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-service-contract/tcl/acs-service-contract-init-oracle.xql}
dbqd.acs-service-contract.tcl.acs-service-contract-procs-oracle.acs_sc_binding_exists_p.binding_exists_p {dbqd.acs-service-contract.tcl.acs-service-contract-procs-oracle.acs_sc_binding_exists_p.binding_exists_p {
select acs_sc_binding.exists_p(:contract,:impl) from dual
} {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-service-contract/tcl/acs-service-contract-procs-oracle.xql}
dbqd.acs-service-contract.tcl.acs-service-contract-procs-oracle.acs_sc_proc.operation_inputtype_element {dbqd.acs-service-contract.tcl.acs-service-contract-procs-oracle.acs_sc_proc.operation_inputtype_element {
	select 
	    element_name, 
	    acs_sc_msg_type.get_name(element_msg_type_id) as element_msg_type_name,
	    element_msg_type_isset_p,
	    element_pos
	from acs_sc_msg_type_elements
	where msg_type_id = :operation_inputtype_id
	order by element_pos asc
} {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-service-contract/tcl/acs-service-contract-procs-oracle.xql}
dbqd.acs-service-contract.tcl.acs-service-contract-procs-oracle.acs_sc_proc.operation_outputtype_element {dbqd.acs-service-contract.tcl.acs-service-contract-procs-oracle.acs_sc_proc.operation_outputtype_element {
	select 
	    element_name, 
	    acs_sc_msg_type.get_name(element_msg_type_id) as element_msg_type_name,
	    element_msg_type_isset_p,
	    element_pos
	from acs_sc_msg_type_elements
	where msg_type_id = :operation_outputtype_id
	order by element_pos asc
} {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-service-contract/tcl/acs-service-contract-procs-oracle.xql}
dbqd.acs-service-contract.tcl.contract-procs-oracle.acs_sc::contract::new.insert_sc_contract {dbqd.acs-service-contract.tcl.contract-procs-oracle.acs_sc::contract::new.insert_sc_contract {
        begin
            :1 := acs_sc_contract.new(
                :name, 
                :description
            );
        end;
    } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-service-contract/tcl/contract-procs-oracle.xql}
dbqd.acs-service-contract.tcl.contract-procs-oracle.acs_sc::contract::delete.get_name_by_id {dbqd.acs-service-contract.tcl.contract-procs-oracle.acs_sc::contract::delete.get_name_by_id {
         acs_sc_contract.get_name(
            :contract_id
        ) from dual 	
    } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-service-contract/tcl/contract-procs-oracle.xql}
dbqd.acs-service-contract.tcl.contract-procs-oracle.acs_sc::contract::delete.get_id_by_name {dbqd.acs-service-contract.tcl.contract-procs-oracle.acs_sc::contract::delete.get_id_by_name {
        select acs_sc_contract.get_id(
            :name
        ) from dual 	
    } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-service-contract/tcl/contract-procs-oracle.xql}
dbqd.acs-service-contract.tcl.contract-procs-oracle.acs_sc::contract::delete.select_operations {dbqd.acs-service-contract.tcl.contract-procs-oracle.acs_sc::contract::delete.select_operations {
        select operation_id,
               operation_inputtype_id,
               operation_outputtype_id
        from   acs_sc_operations
        where  contract_id = :contract_id
    } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-service-contract/tcl/contract-procs-oracle.xql}
dbqd.acs-service-contract.tcl.contract-procs-oracle.acs_sc::contract::delete.delete_by_name {dbqd.acs-service-contract.tcl.contract-procs-oracle.acs_sc::contract::delete.delete_by_name {
      begin
        acs_sc_contract.del(
            contract_name => :name
        );
      end;
    } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-service-contract/tcl/contract-procs-oracle.xql}
dbqd.acs-service-contract.tcl.contract-procs-oracle.acs_sc::contract::operation::new.insert_operation {dbqd.acs-service-contract.tcl.contract-procs-oracle.acs_sc::contract::operation::new.insert_operation {
        begin
            :1 := acs_sc_operation.new(
                :contract_name,
                :operation, 
                :description, 
                :is_cachable_p, 
                :nargs, 
                :input_type_name, 
                :output_type_name
            );
        end;
    } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-service-contract/tcl/contract-procs-oracle.xql}
dbqd.acs-service-contract.tcl.contract-procs-oracle.acs_sc::contract::operation::delete.select_names {dbqd.acs-service-contract.tcl.contract-procs-oracle.acs_sc::contract::operation::delete.select_names {
        select contract_name,
               operation_name
        from   acs_sc_operations
        where  operation_id = :operation_id
    } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-service-contract/tcl/contract-procs-oracle.xql}
dbqd.acs-service-contract.tcl.contract-procs-oracle.acs_sc::contract::operation::delete.delete_by_name {dbqd.acs-service-contract.tcl.contract-procs-oracle.acs_sc::contract::operation::delete.delete_by_name {
        begin
          acs_sc_operation.del(
            contract_name => :contract_name, 
            operation_name => :operation_name
          );
        end;
    } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-service-contract/tcl/contract-procs-oracle.xql}
dbqd.acs-service-contract.tcl.contract-procs.acs_sc::contract::new.insert_sc_contract {dbqd.acs-service-contract.tcl.contract-procs.acs_sc::contract::new.insert_sc_contract {
        select acs_sc_contract__new(
            :name, 
            :description
        ); 	
    } {} {} {postgresql 7.2} c:/web/openacs-4/packages/acs-service-contract/tcl/contract-procs-postgresql.xql}
dbqd.acs-service-contract.tcl.contract-procs.acs_sc::contract::delete.get_name_by_id {dbqd.acs-service-contract.tcl.contract-procs.acs_sc::contract::delete.get_name_by_id {
        select acs_sc_contract__get_name(:contract_id); 	
    } {} {} {postgresql 7.2} c:/web/openacs-4/packages/acs-service-contract/tcl/contract-procs-postgresql.xql}
dbqd.acs-service-contract.tcl.contract-procs.acs_sc::contract::delete.get_id_by_name {dbqd.acs-service-contract.tcl.contract-procs.acs_sc::contract::delete.get_id_by_name {
        select acs_sc_contract__get_id(:name); 	
    } {} {} {postgresql 7.2} c:/web/openacs-4/packages/acs-service-contract/tcl/contract-procs-postgresql.xql}
dbqd.acs-service-contract.tcl.contract-procs.acs_sc::contract::delete.select_operations {dbqd.acs-service-contract.tcl.contract-procs.acs_sc::contract::delete.select_operations {
        select operation_id,
               operation_inputtype_id,
               operation_outputtype_id
        from   acs_sc_operations
        where  contract_id = :contract_id
    } {} {} {postgresql 7.2} c:/web/openacs-4/packages/acs-service-contract/tcl/contract-procs-postgresql.xql}
dbqd.acs-service-contract.tcl.contract-procs.acs_sc::contract::delete.delete_by_name {dbqd.acs-service-contract.tcl.contract-procs.acs_sc::contract::delete.delete_by_name {
        select acs_sc_contract__delete(:name); 	
    } {} {} {postgresql 7.2} c:/web/openacs-4/packages/acs-service-contract/tcl/contract-procs-postgresql.xql}
dbqd.acs-service-contract.tcl.contract-procs.acs_sc::contract::operation::new.insert_operation {dbqd.acs-service-contract.tcl.contract-procs.acs_sc::contract::operation::new.insert_operation {
        select acs_sc_operation__new(
            :contract_name,
            :operation, 
            :description, 
            :is_cachable_p, 
            :nargs, 
            :input_type_name, 
            :output_type_name
        ); 	
    } {} {} {postgresql 7.2} c:/web/openacs-4/packages/acs-service-contract/tcl/contract-procs-postgresql.xql}
dbqd.acs-service-contract.tcl.contract-procs.acs_sc::contract::operation::delete.select_names {dbqd.acs-service-contract.tcl.contract-procs.acs_sc::contract::operation::delete.select_names {
        select contract_name,
               operation_name
        from   acs_sc_operations
        where  operation_id = :operation_id
    } {} {} {postgresql 7.2} c:/web/openacs-4/packages/acs-service-contract/tcl/contract-procs-postgresql.xql}
dbqd.acs-service-contract.tcl.contract-procs.acs_sc::contract::operation::delete.delete_by_name {dbqd.acs-service-contract.tcl.contract-procs.acs_sc::contract::operation::delete.delete_by_name {
        select acs_sc_operation__delete(:contract_name, :operation_name); 	
    } {} {} {postgresql 7.2} c:/web/openacs-4/packages/acs-service-contract/tcl/contract-procs-postgresql.xql}
dbqd.acs-service-contract.tcl.implementation-procs-oracle.acs_sc::impl::new.impl_new {dbqd.acs-service-contract.tcl.implementation-procs-oracle.acs_sc::impl::new.impl_new {
            begin
                :1 := acs_sc_impl.new(
                       :contract_name, 
                       :name,
                       :pretty_name,
                       :owner
                   );
            end;
        } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-service-contract/tcl/implementation-procs-oracle.xql}
dbqd.acs-service-contract.tcl.implementation-procs-oracle.acs_sc::impl::alias::new.alias_new {dbqd.acs-service-contract.tcl.implementation-procs-oracle.acs_sc::impl::alias::new.alias_new {
            begin
                :1 := acs_sc_impl_alias.new(
                       :contract_name, 
                       :impl_name,
                       :operation,
                       :alias,
                       :language
                   );
            end;
        } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-service-contract/tcl/implementation-procs-oracle.xql}
dbqd.acs-service-contract.tcl.implementation-procs-oracle.acs_sc::impl::binding::new.binding_new {dbqd.acs-service-contract.tcl.implementation-procs-oracle.acs_sc::impl::binding::new.binding_new {
            begin
                acs_sc_binding.new(
                       contract_name => :contract_name, 
                       impl_name => :impl_name
                   );
            end;
        } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-service-contract/tcl/implementation-procs-oracle.xql}
dbqd.acs-service-contract.tcl.implementation-procs-oracle.acs_sc::impl::delete.delete_impl {dbqd.acs-service-contract.tcl.implementation-procs-oracle.acs_sc::impl::delete.delete_impl {
            begin
                acs_sc_impl.del(
                       impl_contract_name => :contract_name, 
                       impl_name => :impl_name
                   );
            end;
        } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-service-contract/tcl/implementation-procs-oracle.xql}
dbqd.acs-service-contract.tcl.implementation-procs.acs_sc::impl::new.impl_new {dbqd.acs-service-contract.tcl.implementation-procs.acs_sc::impl::new.impl_new {
            select acs_sc_impl__new(
                       :contract_name, 
                       :name,
                       :pretty_name,
                       :owner
                   ); 	
        } {} {} {postgresql 7.2} c:/web/openacs-4/packages/acs-service-contract/tcl/implementation-procs-postgresql.xql}
dbqd.acs-service-contract.tcl.implementation-procs.acs_sc::impl::alias::new.alias_new {dbqd.acs-service-contract.tcl.implementation-procs.acs_sc::impl::alias::new.alias_new {
            select acs_sc_impl_alias__new(
                       :contract_name, 
                       :impl_name,
                       :operation,
                       :alias,
                       :language
                   ); 	
        } {} {} {postgresql 7.2} c:/web/openacs-4/packages/acs-service-contract/tcl/implementation-procs-postgresql.xql}
dbqd.acs-service-contract.tcl.implementation-procs.acs_sc::impl::binding::new.binding_new {dbqd.acs-service-contract.tcl.implementation-procs.acs_sc::impl::binding::new.binding_new {
            select acs_sc_binding__new(
                       :contract_name, 
                       :impl_name
                   ); 	
        } {} {} {postgresql 7.2} c:/web/openacs-4/packages/acs-service-contract/tcl/implementation-procs-postgresql.xql}
dbqd.acs-service-contract.tcl.implementation-procs.acs_sc::impl::delete.delete_impl {dbqd.acs-service-contract.tcl.implementation-procs.acs_sc::impl::delete.delete_impl {
            select acs_sc_impl__delete(
                       :contract_name, 
                       :impl_name
                   ); 	
        } {} {} {postgresql 7.2} c:/web/openacs-4/packages/acs-service-contract/tcl/implementation-procs-postgresql.xql}
dbqd.acs-service-contract.tcl.implementation-procs.acs_sc::impl::get_id.select_impl_id {dbqd.acs-service-contract.tcl.implementation-procs.acs_sc::impl::get_id.select_impl_id {
        select impl_id
        from   acs_sc_impls
        where  impl_owner_name = :owner
        and    impl_name = :name
    } {} {} {} c:/web/openacs-4/packages/acs-service-contract/tcl/implementation-procs.xql}
dbqd.acs-service-contract.tcl.implementation-procs.acs_sc::impl::get.select_impl {dbqd.acs-service-contract.tcl.implementation-procs.acs_sc::impl::get.select_impl {
        select impl_name,
               impl_pretty_name,
               impl_owner_name, 
               impl_contract_name
        from   acs_sc_impls
        where  impl_id = :impl_id
    } {} {} {} c:/web/openacs-4/packages/acs-service-contract/tcl/implementation-procs.xql}
dbqd.acs-service-contract.tcl.msg-type-procs-oracle.acs_sc::msg_type::new.insert_msg_type {dbqd.acs-service-contract.tcl.msg-type-procs-oracle.acs_sc::msg_type::new.insert_msg_type {
        begin
            :1 := acs_sc_msg_type.new(
                :name, 
                :specification
            );
        end;
    } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-service-contract/tcl/msg-type-procs-oracle.xql}
dbqd.acs-service-contract.tcl.msg-type-procs-oracle.acs_sc::msg_type::delete.delete_by_id {dbqd.acs-service-contract.tcl.msg-type-procs-oracle.acs_sc::msg_type::delete.delete_by_id {
        begin
            acs_sc_msg_type.del(
                msg_type_id => :msg_type_id
            );
        end;
    } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-service-contract/tcl/msg-type-procs-oracle.xql}
dbqd.acs-service-contract.tcl.msg-type-procs-oracle.acs_sc::msg_type::delete.delete_by_name {dbqd.acs-service-contract.tcl.msg-type-procs-oracle.acs_sc::msg_type::delete.delete_by_name {
        begin
            acs_sc_msg_type.del(
                msg_type_name => :name
            );
        end;
    } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-service-contract/tcl/msg-type-procs-oracle.xql}
dbqd.acs-service-contract.tcl.msg-type-procs-oracle.acs_sc::msg_type::element::new.insert_msg_type_element {dbqd.acs-service-contract.tcl.msg-type-procs-oracle.acs_sc::msg_type::element::new.insert_msg_type_element {
        begin
            :1 := acs_sc_msg_type.new_element(
                :msg_type_name,
                :element_name,
                :element_msg_type_name,
                :element_msg_type_isset_p,
                :element_pos
            );
        end;
    } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-service-contract/tcl/msg-type-procs-oracle.xql}
dbqd.acs-service-contract.tcl.msg-type-procs.acs_sc::msg_type::new.insert_msg_type {dbqd.acs-service-contract.tcl.msg-type-procs.acs_sc::msg_type::new.insert_msg_type {
        select acs_sc_msg_type__new(
            :name, 
            :specification); 	
    } {} {} {postgresql 7.2} c:/web/openacs-4/packages/acs-service-contract/tcl/msg-type-procs-postgresql.xql}
dbqd.acs-service-contract.tcl.msg-type-procs.acs_sc::msg_type::delete.delete_by_name {dbqd.acs-service-contract.tcl.msg-type-procs.acs_sc::msg_type::delete.delete_by_name {
        select acs_sc_msg_type__delete(:name); 	
    } {} {} {postgresql 7.2} c:/web/openacs-4/packages/acs-service-contract/tcl/msg-type-procs-postgresql.xql}
dbqd.acs-service-contract.tcl.msg-type-procs.acs_sc::msg_type::element::new.insert_msg_type_element {dbqd.acs-service-contract.tcl.msg-type-procs.acs_sc::msg_type::element::new.insert_msg_type_element {
        select acs_sc_msg_type__new_element(
            :msg_type_name,
            :element_name,
            :element_msg_type_name,
            :element_msg_type_isset_p,
            :element_pos
        );
    } {} {} {postgresql 7.2} c:/web/openacs-4/packages/acs-service-contract/tcl/msg-type-procs-postgresql.xql}
dbqd.acs-service-contract.tcl.msg-type-procs.acs_sc::msg_type::delete.select_name {dbqd.acs-service-contract.tcl.msg-type-procs.acs_sc::msg_type::delete.select_name {
        select msg_type_name as name
        from   acs_sc_msg_types 
        where  msg_type_id = :msg_type_id
    } {} {} {} c:/web/openacs-4/packages/acs-service-contract/tcl/msg-type-procs.xql}
dbqd.acs-service-contract.www.binding-install-oracle.binding_install {dbqd.acs-service-contract.www.binding-install-oracle.binding_install {
         begin
           acs_sc_binding.new(
             contract_id => :contract_id,
             impl_id => :impl_id);
         end;
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-service-contract/www/binding-install-oracle.xql}
dbqd.acs-service-contract.www.binding-install.binding_install {dbqd.acs-service-contract.www.binding-install.binding_install {
         select acs_sc_binding__new(cast(:contract_id as integer), cast(:impl_id as integer))
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-service-contract/www/binding-install-postgresql.xql}
dbqd.acs-service-contract.www.binding-uninstall-oracle.binding_uninstall {dbqd.acs-service-contract.www.binding-uninstall-oracle.binding_uninstall {
         begin
           select acs_sc_binding.del(:contract_id,:impl_id)
         end;
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-service-contract/www/binding-uninstall-oracle.xql}
dbqd.acs-service-contract.www.binding-uninstall.file_select {dbqd.acs-service-contract.www.binding-uninstall.file_select {
         select acs_sc_binding__delete(:contract_id,:impl_id)
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-service-contract/www/binding-uninstall-postgresql.xql}
dbqd.acs-service-contract.www.contract-display-oracle.valid_installed_binding {dbqd.acs-service-contract.www.contract-display-oracle.valid_installed_binding {
        select 
            b.contract_id,
            b.impl_id,
            acs_sc_impl.get_name(b.impl_id) as impl_name,
            impl.impl_owner_name,
            impl.impl_pretty_name
        from
            acs_sc_bindings b, 
            acs_sc_impls impl
        where
            b.contract_id = :id
        and impl.impl_id = b.impl_id
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-service-contract/www/contract-display-oracle.xql}
dbqd.acs-service-contract.www.contract-display.valid_installed_binding {dbqd.acs-service-contract.www.contract-display.valid_installed_binding {
        select 
            b.contract_id,
            b.impl_id,
            acs_sc_impl__get_name(b.impl_id) as impl_name,
            impl.impl_owner_name,
            impl.impl_pretty_name
        from
            acs_sc_bindings b, 
            acs_sc_impls impl
        where
            b.contract_id = :id
        and impl.impl_id = b.impl_id
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-service-contract/www/contract-display-postgresql.xql}
dbqd.acs-service-contract.www.index-oracle.valid_installed_binding {dbqd.acs-service-contract.www.index-oracle.valid_installed_binding {
        select q.* 
        from (select 
                  b.contract_id,
                  b.impl_id,
                  acs_sc_contract.get_name(contract_id) as contract_name,
                  acs_sc_impl.get_name(b.impl_id) as impl_name,
                  impl.impl_owner_name,
                  impl.impl_pretty_name
              from
                  acs_sc_bindings b, 
                  acs_sc_impls impl
              where
                  impl.impl_id = b.impl_id) q
        order  by upper(contract_name), contract_name, upper(impl_name), impl_name
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-service-contract/www/index-oracle.xql}
dbqd.acs-service-contract.www.index.valid_installed_binding {dbqd.acs-service-contract.www.index.valid_installed_binding {
        select q.* 
        from (select 
                  b.contract_id,
                  b.impl_id,
                  acs_sc_contract__get_name(contract_id) as contract_name,
                  acs_sc_impl__get_name(b.impl_id) as impl_name,
                  impl.impl_owner_name,
                  impl.impl_pretty_name
              from
                  acs_sc_bindings b, 
                  acs_sc_impls impl
              where
                  impl.impl_id = b.impl_id) q
        order  by upper(contract_name), contract_name, upper(impl_name), impl_name
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-service-contract/www/index-postgresql.xql}
dbqd.acs-service-contract.www.index.valid_uninstalled_binding {dbqd.acs-service-contract.www.index.valid_uninstalled_binding {
     select contract_id, contract_name, impl_name, impl_owner_name, impl_pretty_name, impl_id 
     from   valid_uninstalled_bindings
     order  by upper(contract_name), contract_name, upper(impl_name), impl_name
   } {} {} {} c:/web/openacs-4/packages/acs-service-contract/www/index.xql}
dbqd.acs-service-contract.www.index.invalid_uninstalled_binding {dbqd.acs-service-contract.www.index.invalid_uninstalled_binding {
      select contract_id, contract_name, impl_name, impl_owner_name, impl_pretty_name, impl_id 
      from   invalid_uninstalled_bindings
      order  by upper(contract_name), contract_name, upper(impl_name), impl_name
   } {} {} {} c:/web/openacs-4/packages/acs-service-contract/www/index.xql}
dbqd.acs-service-contract.www.index.orphan_implementation {dbqd.acs-service-contract.www.index.orphan_implementation {
      select impl_id, impl_name, impl_pretty_name, impl_contract_name  
      from   orphan_implementations
      order  by upper(impl_name), impl_name
   } {} {} {} c:/web/openacs-4/packages/acs-service-contract/www/index.xql}
dbqd.acs-subsite.tcl.application-group-procs-oracle.application_group::contains_party_p.app_group_contains_party_p {dbqd.acs-subsite.tcl.application-group-procs-oracle.application_group::contains_party_p.app_group_contains_party_p {
      
	    select case when exists (
	        select 1
	        from application_group_element_map
	        where package_id = :package_id
	          and element_id = :party_id
	      union all
	        select 1
	        from application_groups
	        where package_id = :package_id
	          and group_id = :party_id
	    ) then 1 else 0 end
            from dual
	
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-subsite/tcl/application-group-procs-oracle.xql}
dbqd.acs-subsite.tcl.application-group-procs-oracle.application_group::contains_party_p.app_group_contains_party_p {dbqd.acs-subsite.tcl.application-group-procs-oracle.application_group::contains_party_p.app_group_contains_party_p {
      
	    select case when exists (
	        select 1
	        from application_group_element_map
	        where package_id = :package_id
	          and element_id = :party_id
	      union all
	        select 1
	        from application_groups
	        where package_id = :package_id
	          and group_id = :party_id
	    ) then 1 else 0 end
            from dual
	
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-subsite/tcl/application-group-procs-oracle.xql}
dbqd.acs-subsite.tcl.application-group-procs-oracle.application_group::contains_relation_p.app_group_contains_rel_p {dbqd.acs-subsite.tcl.application-group-procs-oracle.application_group::contains_relation_p.app_group_contains_rel_p {
      
	    select case when exists (
	        select 1
	        from application_group_element_map
	        where package_id = :package_id
	          and rel_id = :rel_id
	    ) then 1 else 0 end
            from dual
	
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-subsite/tcl/application-group-procs-oracle.xql}
dbqd.acs-subsite.tcl.application-group-procs-oracle.application_group::contains_segment_p.app_group_contains_segment_p {dbqd.acs-subsite.tcl.application-group-procs-oracle.application_group::contains_segment_p.app_group_contains_segment_p {
      
	    select case when exists (
	        select 1
	        from application_group_segments
	        where package_id = :package_id
	          and segment_id = :segment_id
	    ) then 1 else 0 end
            from dual
	
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-subsite/tcl/application-group-procs-oracle.xql}
dbqd.acs-subsite.tcl.application-group-procs-oracle.application_group::group_id_from_package_id.application_group_from_package_id_query {dbqd.acs-subsite.tcl.application-group-procs-oracle.application_group::group_id_from_package_id.application_group_from_package_id_query {
      
	    begin
	    :1 := application_group.group_id_from_package_id (
	        package_id => :package_id,
	        no_complain_p => :no_complain_p
	    );
	    end;
	
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-subsite/tcl/application-group-procs-oracle.xql}
dbqd.acs-subsite.tcl.application-group-procs-oracle.application_group::new.add_group {dbqd.acs-subsite.tcl.application-group-procs-oracle.application_group::new.add_group {
      
		begin
		:1 := application_group.new (
	            group_id      => :group_id,
	            object_type    => :group_type,
	            group_name    => :group_name,
                    package_id    => :package_id,
	            context_id    => :package_id,
	            creation_user => :creation_user,
	            creation_ip   => :creation_ip,
		    email         => :email,
		    url           => :url
		);
		end;
	    
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-subsite/tcl/application-group-procs-oracle.xql}
dbqd.acs-subsite.tcl.application-group-procs-oracle.application_group::delete.delete {dbqd.acs-subsite.tcl.application-group-procs-oracle.application_group::delete.delete {
      
		begin
		:1 := application_group.del (
	                group_id      => :group_id,
		);
		end;
	    
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-subsite/tcl/application-group-procs-oracle.xql}
dbqd.acs-subsite.tcl.application-group-procs.application_group::contains_party_p.app_group_contains_party_p {dbqd.acs-subsite.tcl.application-group-procs.application_group::contains_party_p.app_group_contains_party_p {
      
	    select case when exists (
	        select 1
	        from application_group_element_map
	        where package_id = :package_id
	          and element_id = :party_id
	      union all
	        select 1
	        from application_groups
	        where package_id = :package_id
	          and group_id = :party_id
	    ) then 1 else 0 end
            
	
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-subsite/tcl/application-group-procs-postgresql.xql}
dbqd.acs-subsite.tcl.application-group-procs.application_group::contains_party_p.app_group_contains_party_p {dbqd.acs-subsite.tcl.application-group-procs.application_group::contains_party_p.app_group_contains_party_p {
      
	    select case when exists (
	        select 1
	        from application_group_element_map
	        where package_id = :package_id
	          and element_id = :party_id
	      union all
	        select 1
	        from application_groups
	        where package_id = :package_id
	          and group_id = :party_id
	    ) then 1 else 0 end
            
	
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-subsite/tcl/application-group-procs-postgresql.xql}
dbqd.acs-subsite.tcl.application-group-procs.application_group::contains_relation_p.app_group_contains_rel_p {dbqd.acs-subsite.tcl.application-group-procs.application_group::contains_relation_p.app_group_contains_rel_p {
      
	    select case when exists (
	        select 1
	        from application_group_element_map
	        where package_id = :package_id
	          and rel_id = :rel_id
	    ) then 1 else 0 end
            
	
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-subsite/tcl/application-group-procs-postgresql.xql}
dbqd.acs-subsite.tcl.application-group-procs.application_group::contains_segment_p.app_group_contains_segment_p {dbqd.acs-subsite.tcl.application-group-procs.application_group::contains_segment_p.app_group_contains_segment_p {
      
	    select case when exists (
	        select 1
	        from application_group_segments
	        where package_id = :package_id
	          and segment_id = :segment_id
	    ) then 1 else 0 end
            
	
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-subsite/tcl/application-group-procs-postgresql.xql}
dbqd.acs-subsite.tcl.application-group-procs.application_group::group_id_from_package_id.application_group_from_package_id_query {dbqd.acs-subsite.tcl.application-group-procs.application_group::group_id_from_package_id.application_group_from_package_id_query {

	    select application_group__group_id_from_package_id (
	        :package_id,
	        :no_complain_p
	    )
	
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-subsite/tcl/application-group-procs-postgresql.xql}
dbqd.acs-subsite.tcl.application-group-procs.application_group::new.add_group {dbqd.acs-subsite.tcl.application-group-procs.application_group::new.add_group {

		select application_group__new (
	            :group_id,
	            :group_type,
		    now(),
	            :creation_user,
	            :creation_ip,
		    :email,
		    :url,
	            :group_name,
                    :package_id,
	            :package_id
		)
	    
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-subsite/tcl/application-group-procs-postgresql.xql}
dbqd.acs-subsite.tcl.application-group-procs.application_group::delete.delete {dbqd.acs-subsite.tcl.application-group-procs.application_group::delete.delete {

		select application_group__delete (
	            :group_id
		)
	    
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-subsite/tcl/application-group-procs-postgresql.xql}
dbqd.acs-subsite.tcl.application-group-procs.application_group::new.group_name_query {dbqd.acs-subsite.tcl.application-group-procs.application_group::new.group_name_query {
      
		select substr(instance_name, 1, 90)
		from apm_packages
		where package_id = :package_id
	    
      } {} {} {} c:/web/openacs-4/packages/acs-subsite/tcl/application-group-procs.xql}
dbqd.acs-subsite.tcl.application-group-procs.application_group::delete.delete_perms {dbqd.acs-subsite.tcl.application-group-procs.application_group::delete.delete_perms {
    
            delete from acs_permissions
            where  grantee_id = :group_id
            or     grantee_id in (select segment_id from rel_segments where group_id = :group_id)
            or     grantee_id in (select rel_id from acs_rels where object_id_one = :group_id or object_id_two = :group_id)

      } {} {} {} c:/web/openacs-4/packages/acs-subsite/tcl/application-group-procs.xql}
dbqd.acs-subsite.tcl.approval-expiration-procs-oracle.subsite::sweep_expired_approvals.select_expired_user_ids {dbqd.acs-subsite.tcl.approval-expiration-procs-oracle.subsite::sweep_expired_approvals.select_expired_user_ids {
      
        select u.user_id 
        from   cc_users u, 
               acs_objects relo
        where  relo.object_id = u.rel_id
        and    last_visit < sysdate - :days
        and    relo.last_modified < sysdate - :days
        and    u.member_state = 'approved'
        
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-subsite/tcl/approval-expiration-procs-oracle.xql}
dbqd.acs-subsite.tcl.approval-expiration-procs.subsite::sweep_expired_approvals.select_expired_user_ids {dbqd.acs-subsite.tcl.approval-expiration-procs.subsite::sweep_expired_approvals.select_expired_user_ids {
      
        select u.user_id 
        from   cc_users u, 
               acs_objects relo
        where  relo.object_id = u.rel_id
        and    age(u.last_visit) > interval '$days days'
        and    age(relo.last_modified) > interval '$days days'
        and    u.member_state = 'approved'
        
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-subsite/tcl/approval-expiration-procs-postgresql.xql}
dbqd.acs-subsite.tcl.attribute-procs-oracle.attribute_for_dynamic_object_p {dbqd.acs-subsite.tcl.attribute-procs-oracle.attribute_for_dynamic_object_p {
      
	select case when exists (select 1 
                                   from acs_attributes a, acs_object_types t
                                  where t.dynamic_p = 't'
                                    and a.object_type = t.object_type
                                    and a.attribute_id = :value)
	            then 1 else 0 end
	  from dual
    
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-subsite/tcl/attribute-procs-oracle.xql}
dbqd.acs-subsite.tcl.attribute-procs-oracle.exists_p.attr_exists_p {dbqd.acs-subsite.tcl.attribute-procs-oracle.exists_p.attr_exists_p {
      
	select case when exists (select 1 
                                   from acs_attributes a
                                  where (a.attribute_name = :attribute
                                         or a.column_name = :attribute)
                                    and a.object_type = :object_type)
                    then 1
                    else 0
                    end
          from dual
    
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-subsite/tcl/attribute-procs-oracle.xql}
dbqd.acs-subsite.tcl.attribute-procs-oracle.delete.select_attr_info {dbqd.acs-subsite.tcl.attribute-procs-oracle.delete.select_attr_info {
      
        select a.object_type, a.attribute_name, 
               case when a.storage = 'type_specific' then t.table_name else a.table_name end as table_name,
	       nvl(a.column_name, a.attribute_name) as column_name
          from acs_attributes a, acs_object_types t
         where a.attribute_id = :attribute_id
           and t.object_type = a.object_type
    
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-subsite/tcl/attribute-procs-oracle.xql}
dbqd.acs-subsite.tcl.attribute-procs-oracle.array_for_type.select_attributes {dbqd.acs-subsite.tcl.attribute-procs-oracle.array_for_type.select_attributes {
      
	select nvl(a.column_name, a.attribute_name) as name, 
               a.pretty_name, a.attribute_id, a.datatype, 
               v.enum_value, v.pretty_name as value_pretty_name
	from acs_object_type_attributes a,
               acs_enum_values v,
               (select t.object_type, level as type_level
                  from acs_object_types t
                 start with t.object_type = :start_with
               connect by prior t.object_type = t.supertype) t 
         where a.object_type = :object_type
           and a.attribute_id = v.attribute_id(+)
           and t.object_type = a.ancestor_type $storage_clause
        order by type_level, a.sort_order
    
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-subsite/tcl/attribute-procs-oracle.xql}
dbqd.acs-subsite.tcl.attribute-procs-oracle.attribute::add.drop_attribute {dbqd.acs-subsite.tcl.attribute-procs-oracle.attribute::add.drop_attribute {
begin acs_attribute.drop_attribute(:object_type, :attribute_name); end;
} {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-subsite/tcl/attribute-procs-oracle.xql}
dbqd.acs-subsite.tcl.attribute-procs-oracle.attribute::add.create_attribute {dbqd.acs-subsite.tcl.attribute-procs-oracle.attribute::add.create_attribute {
declare
  attr_id     acs_attributes.attribute_id%TYPE;
begin
  attr_id := acs_attribute.create_attribute (	
	object_type => '$object_type',
	attribute_name => '$attribute_name',
	min_n_values => '$min_n_values',
	max_n_values => '$max_n_values',
	default_value => '$default_value',
	datatype => '$datatype',
	pretty_name => '$pretty_name',
	pretty_plural => '$pretty_plural'
  );
end;
} {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-subsite/tcl/attribute-procs-oracle.xql}
dbqd.acs-subsite.tcl.attribute-procs-oracle.attribute::add.drop_attr_column {dbqd.acs-subsite.tcl.attribute-procs-oracle.attribute::add.drop_attr_column {
alter table $table_name drop column $attribute_name
} {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-subsite/tcl/attribute-procs-oracle.xql}
dbqd.acs-subsite.tcl.attribute-procs-oracle.attribute::add.add_column {dbqd.acs-subsite.tcl.attribute-procs-oracle.attribute::add.add_column {
alter table $table_name add $attribute_name $sql_type
} {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-subsite/tcl/attribute-procs-oracle.xql}
dbqd.acs-subsite.tcl.attribute-procs-oracle.attribute::delete.drop_attribute {dbqd.acs-subsite.tcl.attribute-procs-oracle.attribute::delete.drop_attribute {
begin acs_attribute.drop_attribute(:object_type, :attribute_name); end;
} {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-subsite/tcl/attribute-procs-oracle.xql}
dbqd.acs-subsite.tcl.attribute-procs-oracle.attribute::delete.drop_attr_column {dbqd.acs-subsite.tcl.attribute-procs-oracle.attribute::delete.drop_attr_column {
alter table $table_name drop column $column_name
} {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-subsite/tcl/attribute-procs-oracle.xql}
dbqd.acs-subsite.tcl.attribute-procs.attribute_for_dynamic_object_p {dbqd.acs-subsite.tcl.attribute-procs.attribute_for_dynamic_object_p {
      
	select case when exists (select 1 
                                   from acs_attributes a, acs_object_types t
                                  where t.dynamic_p = 't'
                                    and a.object_type = t.object_type
                                    and a.attribute_id = :value)
	            then 1 else 0 end
	  
    
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-subsite/tcl/attribute-procs-postgresql.xql}
dbqd.acs-subsite.tcl.attribute-procs.attribute::exists_p.attr_exists_p {dbqd.acs-subsite.tcl.attribute-procs.attribute::exists_p.attr_exists_p {
      
	select case when exists (select 1 
                                   from acs_attributes a
                                  where (a.attribute_name = :attribute
                                         or a.column_name = :attribute)
                                    and a.object_type = :object_type)
                    then 1
                    else 0
                    end
          
    
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-subsite/tcl/attribute-procs-postgresql.xql}
dbqd.acs-subsite.tcl.attribute-procs.attribute::array_for_type.select_attributes {dbqd.acs-subsite.tcl.attribute-procs.attribute::array_for_type.select_attributes {

	select coalesce(a.column_name, a.attribute_name) as name, 
               a.pretty_name, a.attribute_id, a.datatype, 
               v.enum_value, v.pretty_name as value_pretty_name
	from acs_object_type_attributes a left outer join
               acs_enum_values v using (attribute_id),
               (select t.object_type, tree_level(t.tree_sortkey) - tree_level(t2.tree_sortkey) as type_level
                from acs_object_types t, acs_object_types t2
		where t2.object_type = :start_with
                  and t.tree_sortkey between t2.tree_sortkey and tree_right(t2.tree_sortkey)) t
         where a.object_type = :object_type
           and t.object_type = a.ancestor_type $storage_clause
        order by type_level, a.sort_order
    
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-subsite/tcl/attribute-procs-postgresql.xql}
dbqd.acs-subsite.tcl.attribute-procs.attribute::multirow.attribute_select {dbqd.acs-subsite.tcl.attribute-procs.attribute::multirow.attribute_select {	

	select *
	  from ($package_object_view) dummy
	 where object_id = :object_id

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-subsite/tcl/attribute-procs-postgresql.xql}
dbqd.acs-subsite.tcl.attribute-procs.attribute::add.drop_attribute {dbqd.acs-subsite.tcl.attribute-procs.attribute::add.drop_attribute {
select acs_attribute__drop_attribute(:object_type, :attribute_name)
} {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-subsite/tcl/attribute-procs-postgresql.xql}
dbqd.acs-subsite.tcl.attribute-procs.attribute::add.create_attribute {dbqd.acs-subsite.tcl.attribute-procs.attribute::add.create_attribute {
select acs_attribute__create_attribute (	
	'$object_type',
	'$attribute_name',
	'$datatype',
	'$pretty_name',
	'$pretty_plural',
	NULL,
	NULL,
	'$default_value',
	'$min_n_values',
	'$max_n_values',
	NULL,
	'type_specific',
	'f'
);
} {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-subsite/tcl/attribute-procs-postgresql.xql}
dbqd.acs-subsite.tcl.attribute-procs.attribute::add.drop_attr_column {dbqd.acs-subsite.tcl.attribute-procs.attribute::add.drop_attr_column {
alter table $table_name drop column $attribute_name
} {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-subsite/tcl/attribute-procs-postgresql.xql}
dbqd.acs-subsite.tcl.attribute-procs.attribute::add.add_column {dbqd.acs-subsite.tcl.attribute-procs.attribute::add.add_column {
alter table $table_name add $attribute_name $sql_type
} {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-subsite/tcl/attribute-procs-postgresql.xql}
dbqd.acs-subsite.tcl.attribute-procs.attribute::delete.drop_attribute {dbqd.acs-subsite.tcl.attribute-procs.attribute::delete.drop_attribute {
select acs_attribute__drop_attribute(:object_type, :attribute_name)
} {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-subsite/tcl/attribute-procs-postgresql.xql}
dbqd.acs-subsite.tcl.attribute-procs.attribute::delete.drop_attr_column {dbqd.acs-subsite.tcl.attribute-procs.attribute::delete.drop_attr_column {
alter table $table_name rename column $column_name to __DELETED__$column_name
} {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-subsite/tcl/attribute-procs-postgresql.xql}
dbqd.acs-subsite.tcl.attribute-procs.attribute::add.select_table {dbqd.acs-subsite.tcl.attribute-procs.attribute::add.select_table {
      
        select t.table_name
          from acs_object_types t
         where t.object_type = :object_type
    
      } {} {} {} c:/web/openacs-4/packages/acs-subsite/tcl/attribute-procs.xql}
dbqd.acs-subsite.tcl.attribute-procs.attribute::add.select_attribute_id {dbqd.acs-subsite.tcl.attribute-procs.attribute::add.select_attribute_id {
      
        select a.attribute_id
          from acs_attributes a
         where a.object_type = :object_type
           and a.attribute_name = :attribute_name
    
      } {} {} {} c:/web/openacs-4/packages/acs-subsite/tcl/attribute-procs.xql}
dbqd.acs-subsite.tcl.attribute-procs.attribute::delete.select_attr_info {dbqd.acs-subsite.tcl.attribute-procs.attribute::delete.select_attr_info {
      
        select a.object_type, a.attribute_name, 
               case when a.storage = 'type_specific' then t.table_name else a.table_name end as table_name,
	       coalesce(a.column_name, a.attribute_name) as column_name
          from acs_attributes a, acs_object_types t
         where a.attribute_id = :attribute_id
           and t.object_type = a.object_type
    
      } {} {} {} c:/web/openacs-4/packages/acs-subsite/tcl/attribute-procs.xql}
dbqd.acs-subsite.tcl.attribute-procs.attribute::value_delete.select_last_sort_order {dbqd.acs-subsite.tcl.attribute-procs.attribute::value_delete.select_last_sort_order {
      
        select v.sort_order as old_sort_order
          from acs_enum_values v
         where v.attribute_id = :attribute_id
           and v.enum_value = :enum_value
    
      } {} {} {} c:/web/openacs-4/packages/acs-subsite/tcl/attribute-procs.xql}
dbqd.acs-subsite.tcl.attribute-procs.attribute::value_delete.delete_enum_value {dbqd.acs-subsite.tcl.attribute-procs.attribute::value_delete.delete_enum_value {
      
        delete from acs_enum_values v
        where v.attribute_id = :attribute_id
        and v.enum_value = :enum_value
    
      } {} {} {} c:/web/openacs-4/packages/acs-subsite/tcl/attribute-procs.xql}
dbqd.acs-subsite.tcl.attribute-procs.attribute::value_delete.update_sort_order {dbqd.acs-subsite.tcl.attribute-procs.attribute::value_delete.update_sort_order {
      
            update acs_enum_values v
               set v.sort_order = v.sort_order - 1
             where v.attribute_id = :attribute_id
               and v.sort_order > :old_sort_order
        
      } {} {} {} c:/web/openacs-4/packages/acs-subsite/tcl/attribute-procs.xql}
dbqd.acs-subsite.tcl.attribute-procs.attribute::multirow.object_type_query {dbqd.acs-subsite.tcl.attribute-procs.attribute::multirow.object_type_query {
      
	    select object_type from acs_objects where object_id = :object_id
	
      } {} {} {} c:/web/openacs-4/packages/acs-subsite/tcl/attribute-procs.xql}
dbqd.acs-subsite.tcl.attribute-procs.attribute::multirow.attribute_select {dbqd.acs-subsite.tcl.attribute-procs.attribute::multirow.attribute_select {	

	select *
	  from ($package_object_view) dummy
	 where object_id = :object_id

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-subsite/tcl/attribute-procs-postgresql.xql}
dbqd.acs-subsite.tcl.attribute-procs.attribute::add_form_elements.select_enum_values {dbqd.acs-subsite.tcl.attribute-procs.attribute::add_form_elements.select_enum_values {
      
		select enum.pretty_name, enum.enum_value
		from acs_enum_values enum
		where enum.attribute_id = :attribute_id 
		order by enum.sort_order
	    
      } {} {} {} c:/web/openacs-4/packages/acs-subsite/tcl/attribute-procs.xql}
dbqd.acs-subsite.tcl.attribute-procs.attribute::value_add.insert_enum_value {dbqd.acs-subsite.tcl.attribute-procs.attribute::value_add.insert_enum_value {
	insert into acs_enum_values
	(attribute_id, sort_order, enum_value, pretty_name)
	select :attribute_id, :sort_order, :enum_value, :enum_value
	from dual
	where not exists (select 1 
	from acs_enum_values v2
	where v2.pretty_name = :enum_value
	and v2.attribute_id = :attribute_id)
} {} {} {} c:/web/openacs-4/packages/acs-subsite/tcl/attribute-procs.xql}
dbqd.acs-subsite.tcl.group-procs-oracle.delete.delete_group {dbqd.acs-subsite.tcl.group-procs-oracle.delete.delete_group {
      
	  BEGIN 
            -- the acs_group package takes care of segments referred
  	    -- to by rel_constraints.rel_segment. We delete the ones
	    -- references by rel_constraints.required_rel_segment here.

	    for row in (select cons.constraint_id
                          from rel_constraints cons, rel_segments segs
                         where segs.segment_id = cons.required_rel_segment
                           and segs.group_id = :group_id) loop

                rel_segment.del(row.constraint_id);

            end loop;

	    -- delete the actual group
	    ${package_name}.del(:group_id); 
	  END;
        
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-subsite/tcl/group-procs-oracle.xql}
dbqd.acs-subsite.tcl.group-procs-oracle.member_p.user_is_member {dbqd.acs-subsite.tcl.group-procs-oracle.member_p.user_is_member {
	  select acs_group.member_p(:user_id,:group_id, :cascade) from dual
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-subsite/tcl/group-procs-oracle.xql}
dbqd.acs-subsite.tcl.group-procs-oracle.group::get_rel_types_options.select_rel_types {dbqd.acs-subsite.tcl.group-procs-oracle.group::get_rel_types_options.select_rel_types {
    select role.pretty_name,
           gr.rel_type
    from   group_rels gr,
           acs_rel_types rt,
           acs_rel_roles role
    where  gr.group_id = :group_id
    and    rt.rel_type = gr.rel_type
    and    role.role = rt.role_two
    and    rt.object_type_two = :object_type
    order  by decode(gr.rel_type, 'membership_rel', 0, 1)||role.pretty_name

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-subsite/tcl/group-procs-oracle.xql}
dbqd.acs-subsite.tcl.group-procs.group::delete.delete_group {dbqd.acs-subsite.tcl.group-procs.group::delete.delete_group {
	  DECLARE
	    row record;
	  BEGIN 
            -- the acs_group package takes care of segments referred
  	    -- to by rel_constraints.rel_segment. We delete the ones
	    -- references by rel_constraints.required_rel_segment here.

	    for row in select cons.constraint_id
                          from rel_constraints cons, rel_segments segs
                         where segs.segment_id = cons.required_rel_segment
                           and segs.group_id = :group_id loop

                perform rel_segment__delete(row.constraint_id);

            end loop;

	    -- delete the actual group
	    perform ${package_name}__delete(:group_id);

	    return 1;
	  END;
        
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-subsite/tcl/group-procs-postgresql.xql}
dbqd.acs-subsite.tcl.group-procs.group::member_p.user_is_member {dbqd.acs-subsite.tcl.group-procs.group::member_p.user_is_member {
	  select acs_group__member_p(:user_id,:group_id, :cascade)
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-subsite/tcl/group-procs-postgresql.xql}
dbqd.acs-subsite.tcl.group-procs.group::get_rel_types_options.select_rel_types {dbqd.acs-subsite.tcl.group-procs.group::get_rel_types_options.select_rel_types {

    select role.pretty_name,
           gr.rel_type
    from   group_rels gr,
           acs_rel_types rt,
           acs_rel_roles role
    where  gr.group_id = :group_id
    and    rt.rel_type = gr.rel_type
    and    role.role = rt.role_two
    and    rt.object_type_two = :object_type
    order  by (case when gr.rel_type = 'membership_rel' then 0 else 1 end)||role.pretty_name

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-subsite/tcl/group-procs-postgresql.xql}
dbqd.acs-subsite.tcl.group-procs.new.package_select {dbqd.acs-subsite.tcl.group-procs.new.package_select {
      
	    select t.package_name, lower(t.id_column) as id_column
	      from acs_object_types t
	     where t.object_type = :group_type
	
      } {} {} {} c:/web/openacs-4/packages/acs-subsite/tcl/group-procs.xql}
dbqd.acs-subsite.tcl.group-procs.new.package_select {dbqd.acs-subsite.tcl.group-procs.new.package_select {
      
	    select t.package_name, lower(t.id_column) as id_column
	      from acs_object_types t
	     where t.object_type = :group_type
	
      } {} {} {} c:/web/openacs-4/packages/acs-subsite/tcl/group-procs.xql}
dbqd.acs-subsite.tcl.group-procs.join_policy.select_join_policy {dbqd.acs-subsite.tcl.group-procs.join_policy.select_join_policy {
      
	    select join_policy from groups where group_id = :group_id
	
      } {} {} {} c:/web/openacs-4/packages/acs-subsite/tcl/group-procs.xql}
dbqd.acs-subsite.tcl.group-procs.member_p.group_id_from_name {dbqd.acs-subsite.tcl.group-procs.member_p.group_id_from_name {
	  select group_id from groups where group_name=:group_name
      } {} {} {} c:/web/openacs-4/packages/acs-subsite/tcl/group-procs.xql}
dbqd.acs-subsite.tcl.group-type-procs-oracle.drop_all_groups_p.group_exists_p {dbqd.acs-subsite.tcl.group-type-procs-oracle.drop_all_groups_p.group_exists_p {
      
	    select case when exists (select 1 
                                       from acs_objects o
                                      where acs_permission.permission_p(o.object_id, :user_id, 'delete') = 'f'
                                        and o.object_type = :group_type)
                        then 0 else 1 end
              from dual
	
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-subsite/tcl/group-type-procs-oracle.xql}
dbqd.acs-subsite.tcl.group-type-procs-oracle.group_type::new.drop_type {dbqd.acs-subsite.tcl.group-type-procs-oracle.group_type::new.drop_type {

begin acs_object_type.drop_type('$group_type'); end;
      
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-subsite/tcl/group-type-procs-oracle.xql}
dbqd.acs-subsite.tcl.group-type-procs-oracle.group_type::new.create_type {dbqd.acs-subsite.tcl.group-type-procs-oracle.group_type::new.create_type {

BEGIN
 acs_object_type.create_type (
   supertype     => :supertype,
   object_type   => :group_type,
   pretty_name   => :pretty_name,
   pretty_plural => :pretty_plural,
   table_name    => :table_name,
   id_column     => :id_column,
   package_name  => :package_name
 );
END;      

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-subsite/tcl/group-type-procs-oracle.xql}
dbqd.acs-subsite.tcl.group-type-procs-oracle.group_type::new.update_type {dbqd.acs-subsite.tcl.group-type-procs-oracle.group_type::new.update_type {

update acs_object_types set dynamic_p='t' where object_type = :group_type

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-subsite/tcl/group-type-procs-oracle.xql}
dbqd.acs-subsite.tcl.group-type-procs-oracle.group_type::new.copy_rel_types {dbqd.acs-subsite.tcl.group-type-procs-oracle.group_type::new.copy_rel_types {

	insert into group_type_rels 
	(group_rel_type_id, rel_type, group_type)
	select acs_object_id_seq.nextval, r.rel_type, :group_type
	  from group_type_rels r
	 where r.group_type = :supertype

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-subsite/tcl/group-type-procs-oracle.xql}
dbqd.acs-subsite.tcl.group-type-procs.group_type::drop_all_groups_p.group_exists_p {dbqd.acs-subsite.tcl.group-type-procs.group_type::drop_all_groups_p.group_exists_p {
      
	    select case when exists (select 1 
                                       from acs_objects o
                                      where acs_permission__permission_p(o.object_id, :user_id, 'delete') = 'f'
                                        and o.object_type = :group_type)
                        then 0 else 1 end
              
	
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-subsite/tcl/group-type-procs-postgresql.xql}
dbqd.acs-subsite.tcl.group-type-procs.group_type::new.drop_type {dbqd.acs-subsite.tcl.group-type-procs.group_type::new.drop_type {

	  select acs_object_type__drop_type('$group_type', 'f');
      
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-subsite/tcl/group-type-procs-postgresql.xql}
dbqd.acs-subsite.tcl.group-type-procs.group_type::new.create_type {dbqd.acs-subsite.tcl.group-type-procs.group_type::new.create_type {

 select acs_object_type__create_type (
   :group_type,
   :pretty_name,
   :pretty_plural,
   :supertype,
   :table_name,
   :id_column,
   :package_name,
   'f',
   null,
   null
 )
      
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-subsite/tcl/group-type-procs-postgresql.xql}
dbqd.acs-subsite.tcl.group-type-procs.group_type::new.update_type {dbqd.acs-subsite.tcl.group-type-procs.group_type::new.update_type {
      
      begin
        update acs_object_types set dynamic_p='t' where object_type = :group_type;
	return null;
      end;

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-subsite/tcl/group-type-procs-postgresql.xql}
dbqd.acs-subsite.tcl.group-type-procs.group_type::new.copy_rel_types {dbqd.acs-subsite.tcl.group-type-procs.group_type::new.copy_rel_types {
      
      begin
        insert into group_type_rels 
	       (group_rel_type_id, rel_type, group_type)
	       select nextval('t_acs_object_id_seq'), r.rel_type, :group_type
	         from group_type_rels r
	        where r.group_type = :supertype;
        return null;
      end;

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-subsite/tcl/group-type-procs-postgresql.xql}
dbqd.acs-subsite.tcl.group-type-procs.group_type::new.create_table {dbqd.acs-subsite.tcl.group-type-procs.group_type::new.create_table {

begin      
  create table $table_name ( 
    $id_column   integer 
                 constraint $constraint(pk) primary key
                 constraint $constraint(fk) 
                   references $references_table ($references_column)
  );
  return null;
end;

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-subsite/tcl/group-type-procs-postgresql.xql}
dbqd.acs-subsite.tcl.group-type-procs.group_type::new.select_group_id_column {dbqd.acs-subsite.tcl.group-type-procs.group_type::new.select_group_id_column {
      
	    select upper(id_column) from acs_object_types where object_type='group'
	
      } {} {} {} c:/web/openacs-4/packages/acs-subsite/tcl/group-type-procs.xql}
dbqd.acs-subsite.tcl.group-type-procs.group_type::new.supertype_table_column {dbqd.acs-subsite.tcl.group-type-procs.group_type::new.supertype_table_column {
      
	    select t.table_name as references_table,
                   t.id_column as references_column
  	      from acs_object_types t
	     where t.object_type = :supertype
	
      } {} {} {} c:/web/openacs-4/packages/acs-subsite/tcl/group-type-procs.xql}
dbqd.acs-subsite.tcl.group-type-procs.group_type::new.insert_group_type {dbqd.acs-subsite.tcl.group-type-procs.group_type::new.insert_group_type {
		insert into group_types (group_type) values (:group_type)
	} {} {} {} c:/web/openacs-4/packages/acs-subsite/tcl/group-type-procs.xql}
dbqd.acs-subsite.tcl.package-procs-oracle.package_type_dynamic_p.object_type_dynamic_p {dbqd.acs-subsite.tcl.package-procs-oracle.package_type_dynamic_p.object_type_dynamic_p {
      
	select case when exists (select 1 
                                   from acs_object_types t
                                  where t.dynamic_p = 't'
                                    and t.object_type = :object_type)
	            then 1 else 0 end
	  from dual
    
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-subsite/tcl/package-procs-oracle.xql}
dbqd.acs-subsite.tcl.package-procs-oracle.package_create_attribute_list.select_all_attributes {dbqd.acs-subsite.tcl.package-procs-oracle.package_create_attribute_list.select_all_attributes {
      
	select upper(nvl(attr.table_name,t.table_name)) as attr_table_name, 
	       upper(nvl(attr.column_name, attr.attribute_name)) as attr_column_name, 
	       attr.ancestor_type, attr.min_n_values, attr.default_value
	  from acs_object_type_attributes attr, 
	       (select t.object_type, t.table_name, level as type_level
	          from acs_object_types t
	         start with t.object_type = :object_type
	       connect by prior t.supertype = t.object_type) t
         where attr.ancestor_type = t.object_type
           and attr.object_type = :object_type
        order by t.type_level 
    
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-subsite/tcl/package-procs-oracle.xql}
dbqd.acs-subsite.tcl.package-procs-oracle.package_recreate_hierarchy.select_object_types {dbqd.acs-subsite.tcl.package-procs-oracle.package_recreate_hierarchy.select_object_types {
      
	select t.object_type
	  from acs_object_types t
	 where t.dynamic_p = 't'
	 start with t.object_type = :object_type
       connect by prior t.object_type = t.supertype
    
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-subsite/tcl/package-procs-oracle.xql}
dbqd.acs-subsite.tcl.package-procs-oracle.package_create.package_valid_p {dbqd.acs-subsite.tcl.package-procs-oracle.package_create.package_valid_p {
      
	    select case when exists (select 1 
                                       from user_objects 
                                      where status = 'INVALID'
                                        and object_name = upper(:package_name)
                                        and object_type = upper(:type))
                        then 0 else 1 end
	      from dual
	
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-subsite/tcl/package-procs-oracle.xql}
dbqd.acs-subsite.tcl.package-procs-oracle.package_object_view_reset.select_ancestor_types {dbqd.acs-subsite.tcl.package-procs-oracle.package_object_view_reset.select_ancestor_types {
      
	select t.object_type as ancestor_type
	  from acs_object_types t 
	 start with t.object_type = :object_type 
       connect by prior t.supertype = t.object_type
    
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-subsite/tcl/package-procs-oracle.xql}
dbqd.acs-subsite.tcl.package-procs-oracle.package_object_view_reset.select_sub_types {dbqd.acs-subsite.tcl.package-procs-oracle.package_object_view_reset.select_sub_types {
      
	select t.object_type as sub_type
	  from acs_object_types t 
	 start with t.object_type = :object_type 
       connect by prior t.object_type = t.supertype
    
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-subsite/tcl/package-procs-oracle.xql}
dbqd.acs-subsite.tcl.package-procs-oracle.package_insert_default_comment.select_comments {dbqd.acs-subsite.tcl.package-procs-oracle.package_insert_default_comment.select_comments {
      
	    select acs_object.name(:user_id) as author,
	           sysdate as creation_date
	      from dual
	
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-subsite/tcl/package-procs-oracle.xql}
dbqd.acs-subsite.tcl.package-procs-oracle.package_insert_default_comment.select_comments {dbqd.acs-subsite.tcl.package-procs-oracle.package_insert_default_comment.select_comments {
      
	    select acs_object.name(:user_id) as author,
	           sysdate as creation_date
	      from dual
	
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-subsite/tcl/package-procs-oracle.xql}
dbqd.acs-subsite.tcl.package-procs-oracle.package_object_attribute_list.attributes_select {dbqd.acs-subsite.tcl.package-procs-oracle.package_object_attribute_list.attributes_select {
      
	select a.attribute_id, 
	       nvl(a.table_name, t.table_name) as table_name,
	       nvl(a.column_name, a.attribute_name) as attribute_name, 
	       a.pretty_name, 
	       a.datatype, 
	       case when a.min_n_values = 0 then 'f' else 't' end as required_p, 
               a.default_value, 
               t.table_name as object_type_table_name, 
               t.id_column as object_type_id_column
          from acs_object_type_attributes a, 
               (select t.object_type, t.table_name, t.id_column, level as type_level
                  from acs_object_types t
                 start with t.object_type=:start_with
               connect by prior t.object_type = t.supertype) t 
         where a.object_type = :object_type
           and t.object_type = a.ancestor_type $storage_clause
         order by type_level
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-subsite/tcl/package-procs-oracle.xql}
dbqd.acs-subsite.tcl.package-procs-oracle.package_table_columns_for_type.select_object_type_param_list {dbqd.acs-subsite.tcl.package-procs-oracle.package_table_columns_for_type.select_object_type_param_list {
      
	select cols.table_name, cols.column_name
	  from user_tab_columns cols, 
	       (select upper(t.table_name) as table_name
	          from acs_object_types t
                 start with t.object_type = :object_type
               connect by prior t.supertype = t.object_type) t
	 where cols.column_name in
	          (select args.argument_name
                     from user_arguments args
                    where args.position > 0
	              and args.object_name = upper(:object_name)
	              and args.package_name = upper(:package_name))
	   and cols.table_name = t.table_name
    
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-subsite/tcl/package-procs-oracle.xql}
dbqd.acs-subsite.tcl.package-procs-oracle.package_instantiate_object.create_object {dbqd.acs-subsite.tcl.package-procs-oracle.package_instantiate_object.create_object \n\ \ \ \ \ \ \n\ \ \ \ BEGIN\n\ \ \ \ \ \ :1\ :=\ \$\{package_name\}.new(\[plsql_utility::generate_attribute_parameter_call\ \\\n\t\ \ \ \ \ \ -prepend\ \":\"\ \\\n\t\ \ \ \ \ \ -indent\ \[expr\ \[string\ length\ \$package_name\]\ +\ 29\]\ \\\n\t\ \ \ \ \ \ \$pieces\]\n\ \ \ \ \ \ )\;\n\ \ \ \ END\;\ \n\ \ \ \ \n\ \ \ \ \ \  {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-subsite/tcl/package-procs-oracle.xql}
dbqd.acs-subsite.tcl.package-procs-oracle.package_generate_body.body {dbqd.acs-subsite.tcl.package-procs-oracle.package_generate_body.body \n\ncreate\ or\ replace\ package\ body\ \$\{package_name\}\nas\n\[package_insert_default_comment\]\n\ \ function\ new\ (\ \n\ \ \ \ \ \ \ \ \ \[plsql_utility::generate_attribute_parameters\ \$attribute_list\]\n\ \ )\ return\ \$\{table_name\}.\$\{id_column\}%TYPE\n\ \ is\n\ \ \ \ v_\$id_column\ \$\{table_name\}.\$\{id_column\}%TYPE\;\n\ \ begin\n\n\ \ \ \ v_\$id_column\ :=\ \$\{supertype_package_name\}.new\ (\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \[plsql_utility::generate_attribute_parameter_call_from_attributes\ \\\n\t\t\t\ \ \ \ \ -prepend\ \"new.\"\ \\\n\t\t\t\ \ \ \ \ -indent\ 21\ \\\n\t\t\t\ \ \ \ \ \$supertype_attr_list\]\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ )\;\n\n\ \ \ \ insert\ into\ \$\{table_name\}\ \n\ \ \ \ (\$id_column\[plsql_utility::generate_attribute_dml\ -ignore\ \[list\ \$id_column\]\ \$table_name\ \$attribute_list\])\ \n\ \ \ \ values\ \n\ \ \ \ (v_\$id_column\[plsql_utility::generate_attribute_dml\ -prepend\ \"new.\"\ -ignore\ \[list\ \$id_column\]\ \$table_name\ \$attribute_list\])\;\n\n\ \ \ \ return\ v_\$id_column\;\n\n\ \ end\ new\;\n\n\ \ procedure\ del\ (\n\ \ \ \ \$id_column\ \ \ \ \ \ in\ \$\{table_name\}.\$\{id_column\}%TYPE\n\ \ )\n\ \ is\ \n\ \ begin\n\n\ \ \ \ \$\{supertype_package_name\}.del(\ \$package_name.del.\$id_column\ )\;\n\n\ \ end\ del\;\n\nend\ \$\{package_name\}\;\n\ \ \ \ \n\ \ \ \ \ \  {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-subsite/tcl/package-procs-oracle.xql}
dbqd.acs-subsite.tcl.package-procs-oracle.package_generate_spec.spec {dbqd.acs-subsite.tcl.package-procs-oracle.package_generate_spec.spec \n\ncreate\ or\ replace\ package\ \$package_name\ as\n\[package_insert_default_comment\]\n\ \ function\ new\ (\n\ \ \ \ \ \ \ \ \ \[plsql_utility::generate_attribute_parameters\ \[package_create_attribute_list\ \\\n\t\t\ -supertype\ \$supertype\ \\\n\t\t\ -object_name\ \"NEW\"\ \\\n\t\t\ -table\ \$table_name\ \\\n\t\t\ -column\ \$id_column\ \\\n\t\t\ \$object_type\]\]\n\ )\ return\ \$\{table_name\}.\$\{id_column\}%TYPE\;\n\n\ \ procedure\ del\ (\n\ \ \ \ \$id_column\ \ \ \ \ \ in\ \$\{table_name\}.\$\{id_column\}%TYPE\n\ \ )\;\nEND\ \$\{package_name\}\;\n\ \ \ \ \n\ \ \ \ \ \  {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-subsite/tcl/package-procs-oracle.xql}
dbqd.acs-subsite.tcl.package-procs-oracle.package_attribute_default.creation_date {dbqd.acs-subsite.tcl.package-procs-oracle.package_attribute_default.creation_date sysdate {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-subsite/tcl/package-procs-oracle.xql}
dbqd.acs-subsite.tcl.package-procs-oracle.package_attribute_default.last_modified {dbqd.acs-subsite.tcl.package-procs-oracle.package_attribute_default.last_modified sysdate {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-subsite/tcl/package-procs-oracle.xql}
dbqd.acs-subsite.tcl.package-procs.package_type_dynamic_p.object_type_dynamic_p {dbqd.acs-subsite.tcl.package-procs.package_type_dynamic_p.object_type_dynamic_p {
      
	select case when exists (select 1 
                                   from acs_object_types t
                                  where t.dynamic_p = 't'
                                    and t.object_type = :object_type)
	            then 1 else 0 end
	  
    
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-subsite/tcl/package-procs-postgresql.xql}
dbqd.acs-subsite.tcl.package-procs.package_create_attribute_list.select_all_attributes {dbqd.acs-subsite.tcl.package-procs.package_create_attribute_list.select_all_attributes {

	select upper(coalesce(attr.table_name,t.table_name)) as attr_table_name, 
	       upper(coalesce(attr.column_name, attr.attribute_name)) as attr_column_name, 
	       attr.ancestor_type, attr.min_n_values, attr.default_value
	  from acs_object_type_attributes attr, 
	       (select t2.object_type, t2.table_name, (tree_level(t1.tree_sortkey) - tree_level(t2.tree_sortkey)) + 1 as type_level
	          from acs_object_types t1, acs_object_types t2
		 where t1.tree_sortkey between t2.tree_sortkey and tree_right(t2.tree_sortkey)
		   and t1.object_type = :object_type) t
         where attr.ancestor_type = t.object_type
           and attr.object_type = :object_type
        order by t.type_level 
    
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-subsite/tcl/package-procs-postgresql.xql}
dbqd.acs-subsite.tcl.package-procs.package_recreate_hierarchy.select_object_types {dbqd.acs-subsite.tcl.package-procs.package_recreate_hierarchy.select_object_types {

	select t2.object_type
	  from acs_object_types t1, acs_object_types t2
	 where t2.dynamic_p = 't'
	   and t2.tree_sortkey between t1.tree_sortkey and tree_right(t1.tree_sortkey)
	   and t1.object_type = :object_type
    
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-subsite/tcl/package-procs-postgresql.xql}
dbqd.acs-subsite.tcl.package-procs.package_create.package_valid_p {dbqd.acs-subsite.tcl.package-procs.package_create.package_valid_p {
      
	    select case when exists (select 1 
                                       from user_objects 
                                      where status = 'INVALID'
                                        and object_name = upper(:package_name)
                                        and object_type = upper(:type))
                        then 0 else 1 end
	      
	
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-subsite/tcl/package-procs-postgresql.xql}
dbqd.acs-subsite.tcl.package-procs.package_object_view_reset.select_ancestor_types {dbqd.acs-subsite.tcl.package-procs.package_object_view_reset.select_ancestor_types {

	select t2.object_type as ancestor_type
	  from acs_object_types t1, acs_object_types t2
	 where t1.tree_sortkey between t2.tree_sortkey and tree_right(t2.tree_sortkey)
	   and t1.object_type = :object_type
    
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-subsite/tcl/package-procs-postgresql.xql}
dbqd.acs-subsite.tcl.package-procs.package_object_view_reset.select_sub_types {dbqd.acs-subsite.tcl.package-procs.package_object_view_reset.select_sub_types {

	select t2.object_type as sub_type
	  from acs_object_types t1, acs_object_types t2
	 where t2.tree_sortkey between t1.tree_sortkey and tree_right(t1.tree_sortkey)
	   and t1.object_type = :object_type 
    
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-subsite/tcl/package-procs-postgresql.xql}
dbqd.acs-subsite.tcl.package-procs.package_insert_default_comment.select_comments {dbqd.acs-subsite.tcl.package-procs.package_insert_default_comment.select_comments {
      
	    select acs_object__name(:user_id) as author,
	           current_timestamp as creation_date
	      
	
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-subsite/tcl/package-procs-postgresql.xql}
dbqd.acs-subsite.tcl.package-procs.package_insert_default_comment.select_comments {dbqd.acs-subsite.tcl.package-procs.package_insert_default_comment.select_comments {
      
	    select acs_object__name(:user_id) as author,
	           current_timestamp as creation_date
	      
	
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-subsite/tcl/package-procs-postgresql.xql}
dbqd.acs-subsite.tcl.package-procs.package_object_attribute_list.attributes_select {dbqd.acs-subsite.tcl.package-procs.package_object_attribute_list.attributes_select {

	select a.attribute_id, 
	       coalesce(a.table_name, t.table_name) as table_name,
	       coalesce(a.column_name, a.attribute_name) as attribute_name, 
	       a.pretty_name, 
	       a.datatype, 
	       case when a.min_n_values = 0 then 'f' else 't' end as required_p, 
               a.default_value, 
               t.table_name as object_type_table_name, 
               t.id_column as object_type_id_column
          from acs_object_type_attributes a, 
               (select t.object_type, t.table_name, t.id_column, tree_level(t.tree_sortkey) as type_level
                from acs_object_types t, acs_object_types t2
		where t.tree_sortkey between t2.tree_sortkey and tree_right(t2.tree_sortkey)
		  and t2.object_type = :start_with) t
         where a.object_type = :object_type
           and t.object_type = a.ancestor_type $storage_clause
         order by type_level, attribute_id
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-subsite/tcl/package-procs-postgresql.xql}
dbqd.acs-subsite.tcl.package-procs.package_table_columns_for_type.select_object_type_param_list {dbqd.acs-subsite.tcl.package-procs.package_table_columns_for_type.select_object_type_param_list {

	select cols.table_name, cols.column_name
	  from user_tab_columns cols, 
	       (select upper(t2.table_name) as table_name
	          from acs_object_types t1, acs_object_types t2
		 where t1.tree_sortkey between t2.tree_sortkey and tree_right(t2.tree_sortkey)
		   and t1.object_type = :object_type) t
	 where cols.column_name in
	          (select args.arg_name
                     from acs_function_args args
                    where args.function = upper(:package_name) || '__' || upper(:object_name))
	   and cols.table_name = t.table_name
    
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-subsite/tcl/package-procs-postgresql.xql}
dbqd.acs-subsite.tcl.package-procs.package_plsql_args.select_object_type_param_list {dbqd.acs-subsite.tcl.package-procs.package_plsql_args.select_object_type_param_list {
	select args.arg_name
        from acs_function_args args
        where args.function = upper(:package_name) || '__' || upper(:function_name)
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-subsite/tcl/package-procs-postgresql.xql}
dbqd.acs-subsite.tcl.package-procs.package_create.package_valid_p {dbqd.acs-subsite.tcl.package-procs.package_create.package_valid_p {

select 1
    
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-subsite/tcl/package-procs-postgresql.xql}
dbqd.acs-subsite.tcl.package-procs.package_instantiate_object.create_object {dbqd.acs-subsite.tcl.package-procs.package_instantiate_object.create_object \n\n\tselect\ \$\{package_name\}__new(\[plpgsql_utility::generate_attribute_parameter_call\ \\\n\t\t-prepend\ \":\"\ \\\n\t\t\$\{package_name\}__new\ \\\n\t\t\$pieces\])\n\n\ \ \ \ \ \  {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-subsite/tcl/package-procs-postgresql.xql}
dbqd.acs-subsite.tcl.package-procs.package_generate_body.select_supertype_function_params {dbqd.acs-subsite.tcl.package-procs.package_generate_body.select_supertype_function_params {
      
	select args.arg_name
	  from acs_function_args args
         where args.function =upper(:supertype_package_name) || '__NEW'
    
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-subsite/tcl/package-procs-postgresql.xql}
dbqd.acs-subsite.tcl.package-procs.package_generate_body.body {dbqd.acs-subsite.tcl.package-procs.package_generate_body.body \n\nbegin\n\nperform\ drop_package('\$\{package_name\}')\;\n\nperform\ define_function_args('\$\{package_name\}__new','\[plpgsql_utility::define_function_args\ \$attribute_list\]')\;\n\ncreate\ function\ \$\{package_name\}__new(\[plpgsql_utility::generate_function_signature\ \$attribute_list\])\nreturns\ \[plpgsql_utility::table_column_type\ \$\{table_name\}\ \$\{id_column\}\]\ as\ '\ndeclare\n\ \ \ \ \[plpgsql_utility::generate_attribute_parameters\ \$attribute_list\]\;\n\ \ \ \ v_\$id_column\ \$\{table_name\}.\$\{id_column\}%TYPE\;\nbegin\n\n\ \ \ \ v_\$id_column\ :=\ \$\{supertype_package_name\}__new\ (\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \[plpgsql_utility::generate_attribute_parameter_call_from_attributes\ \\\n\t\t\t\ \ \ \ \ -prepend\ \"p_\"\ \\\n\t\t\t\ \ \ \ \ \"\$\{supertype_package_name\}__new\"\ \\\n\t\t\t\ \ \ \ \ \$supertype_attr_list\]\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ )\;\n\n\ \ \ \ insert\ into\ \$\{table_name\}\ \n\ \ \ \ (\$id_column\[plsql_utility::generate_attribute_dml\ -ignore\ \[list\ \$id_column\]\ \$table_name\ \$attribute_list\])\ \n\ \ \ \ values\ \n\ \ \ \ (v_\$id_column\[plsql_utility::generate_attribute_dml\ -prepend\ \"p_\"\ -ignore\ \[list\ \$id_column\]\ \$table_name\ \$attribute_list\])\;\n\n\ \ \ \ return\ v_\$id_column\;\n\nend\;'\ language\ 'plpgsql'\;\n\ncreate\ function\ \$\{package_name\}__delete\ (\[plpgsql_utility::table_column_type\ \$\{table_name\}\ \$\{id_column\}\])\nreturns\ integer\ as\ '\ndeclare\n\ \ \ \ p_\$\{id_column\}\ \ \ \ \ \ alias\ for\ \[plpgsql_utility::dollar\]1\;\nbegin\n\n\ \ \ \ perform\ \$\{supertype_package_name\}__delete(\ p_\$\{id_column\}\ )\;\n\ \ \ \ return\ 1\;\n\nend\;'\ language\ 'plpgsql'\;\n\nreturn\ null\;\nend\;\n\ \ \ \ \n\ \ \ \ \ \  {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-subsite/tcl/package-procs-postgresql.xql}
dbqd.acs-subsite.tcl.package-procs.package_generate_spec.spec {dbqd.acs-subsite.tcl.package-procs.package_generate_spec.spec {

select 1;
    
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-subsite/tcl/package-procs-postgresql.xql}
dbqd.acs-subsite.tcl.package-procs.package_attribute_default.creation_date {dbqd.acs-subsite.tcl.package-procs.package_attribute_default.creation_date now() {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-subsite/tcl/package-procs-postgresql.xql}
dbqd.acs-subsite.tcl.package-procs.package_attribute_default.last_modified {dbqd.acs-subsite.tcl.package-procs.package_attribute_default.last_modified now() {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-subsite/tcl/package-procs-postgresql.xql}
dbqd.acs-subsite.tcl.package-procs.package_create_attribute_list.select_type_info {dbqd.acs-subsite.tcl.package-procs.package_create_attribute_list.select_type_info {
      
      select t.table_name as table, t.id_column as column
      from acs_object_types t
      where t.object_type = :object_type
      
    } {} {} {} c:/web/openacs-4/packages/acs-subsite/tcl/package-procs.xql}
dbqd.acs-subsite.tcl.package-procs.package_create.select_package_name {dbqd.acs-subsite.tcl.package-procs.package_create.select_package_name {
      
      select t.package_name
      from acs_object_types t
      where t.object_type = :object_type
      
    } {} {} {} c:/web/openacs-4/packages/acs-subsite/tcl/package-procs.xql}
dbqd.acs-subsite.tcl.package-procs.package_create_attribute_list.select_type_info {dbqd.acs-subsite.tcl.package-procs.package_create_attribute_list.select_type_info {
      
      select t.table_name, t.id_column, lower(t.package_name) as package_name, t.supertype
      from acs_object_types t
      where t.object_type = :object_type
      
    } {} {} {} c:/web/openacs-4/packages/acs-subsite/tcl/package-procs.xql}
dbqd.acs-subsite.tcl.package-procs.package_create_attribute_list.select_type_info {dbqd.acs-subsite.tcl.package-procs.package_create_attribute_list.select_type_info {
      
      select t.table_name, t.id_column, lower(t.package_name) as package_name, t.supertype
      from acs_object_types t
      where t.object_type = :object_type
      
    } {} {} {} c:/web/openacs-4/packages/acs-subsite/tcl/package-procs.xql}
dbqd.acs-subsite.tcl.package-procs.package_create_attribute_list.select_type_info {dbqd.acs-subsite.tcl.package-procs.package_create_attribute_list.select_type_info {
      
      select t.table_name, t.id_column, lower(t.package_name) as package_name, t.supertype
      from acs_object_types t
      where t.object_type = :object_type
      
    } {} {} {} c:/web/openacs-4/packages/acs-subsite/tcl/package-procs.xql}
dbqd.acs-subsite.tcl.package-procs.package_create_attribute_list.select_type_info {dbqd.acs-subsite.tcl.package-procs.package_create_attribute_list.select_type_info {
      
      select t.table_name, t.id_column, lower(t.package_name) as package_name, t.supertype
      from acs_object_types t
      where t.object_type = :object_type
      
    } {} {} {} c:/web/openacs-4/packages/acs-subsite/tcl/package-procs.xql}
dbqd.acs-subsite.tcl.package-procs.package_create_attribute_list.select_type_info {dbqd.acs-subsite.tcl.package-procs.package_create_attribute_list.select_type_info {
      
      select t.table_name, t.id_column, lower(t.package_name) as package_name, t.supertype
      from acs_object_types t
      where t.object_type = :object_type
      
    } {} {} {} c:/web/openacs-4/packages/acs-subsite/tcl/package-procs.xql}
dbqd.acs-subsite.tcl.package-procs.package_instantiate_object.package_select {dbqd.acs-subsite.tcl.package-procs.package_instantiate_object.package_select {
      
      select t.package_name
      from acs_object_types t
      where t.object_type = :object_type
      
    } {} {} {} c:/web/openacs-4/packages/acs-subsite/tcl/package-procs.xql}
dbqd.acs-subsite.tcl.package-procs.package_object_view_helper.select_type_info {dbqd.acs-subsite.tcl.package-procs.package_object_view_helper.select_type_info {

      select t.table_name, t.id_column
      from acs_object_types t
      where t.object_type = :object_type
      
    } {} {} {} c:/web/openacs-4/packages/acs-subsite/tcl/package-procs.xql}
{dbqd.acs-subsite.tcl.package-procs.package_plsql_args.select_type_info } {{dbqd.acs-subsite.tcl.package-procs.package_plsql_args.select_type_info } {
      select t.package_name
      from acs_object_types t 
      where t.object_type = :object_type
    } {} {} {} c:/web/openacs-4/packages/acs-subsite/tcl/package-procs.xql}
dbqd.acs-subsite.tcl.party-procs-oracle.party::types_valid_for_rel_type_multirow.start_with_clause_party {dbqd.acs-subsite.tcl.party-procs-oracle.party::types_valid_for_rel_type_multirow.start_with_clause_party {
        (object_type = 'group' or object_type = 'person')
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-subsite/tcl/party-procs-oracle.xql}
dbqd.acs-subsite.tcl.party-procs-oracle.party::types_valid_for_rel_type_multirow.start_with_clause {dbqd.acs-subsite.tcl.party-procs-oracle.party::types_valid_for_rel_type_multirow.start_with_clause {
        object_type = :start_with
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-subsite/tcl/party-procs-oracle.xql}
dbqd.acs-subsite.tcl.party-procs-oracle.party::types_valid_for_rel_type_multirow.select_sub_rel_types {dbqd.acs-subsite.tcl.party-procs-oracle.party::types_valid_for_rel_type_multirow.select_sub_rel_types {
      
	select 
	    types.pretty_name, 
	    types.object_type, 
	    types.tree_level, 
	    types.indent,
	    case when valid_types.object_type = null then 0 else 1 end as valid_p
	from 
	    (select
	        t.pretty_name, t.object_type, level as tree_level,
	        replace(lpad(' ', (level - 1) * 4), 
	                ' ', '&nbsp;') as indent,
	        rownum as tree_rownum
	     from 
	        acs_object_types t
	     connect by 
	        prior t.object_type = t.supertype
	     start with 
	        $start_with_clause ) types,
	    (select 
	        object_type 
	     from 
	        rel_types_valid_obj_two_types
	     where 
	        rel_type = :rel_type ) valid_types
	where 
	    types.object_type = valid_types.object_type(+)
	order by tree_rownum
	
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-subsite/tcl/party-procs-oracle.xql}
dbqd.acs-subsite.tcl.party-procs.party::types_valid_for_rel_type_multirow.start_with_clause_party {dbqd.acs-subsite.tcl.party-procs.party::types_valid_for_rel_type_multirow.start_with_clause_party {
        (t1.object_type = 'group' or t1.object_type = 'person')
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-subsite/tcl/party-procs-postgresql.xql}
dbqd.acs-subsite.tcl.party-procs.party::types_valid_for_rel_type_multirow.start_with_clause {dbqd.acs-subsite.tcl.party-procs.party::types_valid_for_rel_type_multirow.start_with_clause {
        t1.object_type = :start_with
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-subsite/tcl/party-procs-postgresql.xql}
dbqd.acs-subsite.tcl.party-procs.party::types_valid_for_rel_type_multirow.select_sub_rel_types {dbqd.acs-subsite.tcl.party-procs.party::types_valid_for_rel_type_multirow.select_sub_rel_types {

	select types.pretty_name, 
	       types.object_type, 
	       types.tree_level, 
	       types.indent,
	       case when valid_types.object_type = null then 0 else 1 end as valid_p
	  from (select t2.pretty_name,
		       t2.object_type,
		       tree_level(t2.tree_sortkey) - tree_level(t1.tree_sortkey) as tree_level,
		       repeat('&nbsp;', (tree_level(t2.tree_sortkey) - tree_level(t1.tree_sortkey)) * 4) as indent,
		       t2.tree_sortkey
		  from acs_object_types t1,
		       acs_object_types t2
		 where t2.tree_sortkey between t1.tree_sortkey and tree_right(t1.tree_sortkey)
	           and $start_with_clause ) types
                  left outer join
	            (select object_type 
		       from rel_types_valid_obj_two_types
		      where rel_type = :rel_type ) valid_types
		    using (object_type)
         order by types.tree_sortkey
	
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-subsite/tcl/party-procs-postgresql.xql}
dbqd.acs-subsite.tcl.party-procs.new.package_select {dbqd.acs-subsite.tcl.party-procs.new.package_select {
      
	    select t.package_name, lower(t.id_column) as id_column
	      from acs_object_types t
	     where t.object_type = :party_type
	
      } {} {} {} c:/web/openacs-4/packages/acs-subsite/tcl/party-procs.xql}
dbqd.acs-subsite.tcl.plpgsql-utility-procs.plpgsql_utility::get_function_args.get_function_args {dbqd.acs-subsite.tcl.plpgsql-utility-procs.plpgsql_utility::get_function_args.get_function_args {
      select arg_name, arg_default
      from acs_function_args
      where function = upper(:function_name)
      order by arg_seq
    } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-subsite/tcl/plpgsql-utility-procs-postgresql.xql}
dbqd.acs-subsite.tcl.plpgsql-utility-procs.plpgsql_utility::table_column_type.fetch_type {dbqd.acs-subsite.tcl.plpgsql-utility-procs.plpgsql_utility::table_column_type.fetch_type {
      select data_type
      from user_tab_columns
      where table_name = upper(:table)
      and column_name = upper(:column)
    } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-subsite/tcl/plpgsql-utility-procs-postgresql.xql}
dbqd.acs-subsite.tcl.plsql-utility-procs-oracle.object_type_exists_p.object_type_exists_p {dbqd.acs-subsite.tcl.plsql-utility-procs-oracle.object_type_exists_p.object_type_exists_p {
      
	    select case when exists (select 1 from acs_object_types where object_type=:object_type)
                        then 1
                        else 0
                   end
              from dual
	
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-subsite/tcl/plsql-utility-procs-oracle.xql}
dbqd.acs-subsite.tcl.plsql-utility-procs.object_type_exists_p.object_type_exists_p {dbqd.acs-subsite.tcl.plsql-utility-procs.object_type_exists_p.object_type_exists_p {
      
	    select case when exists (select 1 from acs_object_types where object_type=:object_type)
                        then 1
                        else 0
                   end
              
	
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-subsite/tcl/plsql-utility-procs-postgresql.xql}
dbqd.acs-subsite.tcl.rel-segments-procs-oracle.rel_segments_new.create_rel_segment {dbqd.acs-subsite.tcl.rel-segments-procs-oracle.rel_segments_new.create_rel_segment {
      
      declare
      begin 
	:1 := rel_segment.new(segment_name => :segment_name,
                                  group_id => :group_id,
                                  context_id => :context_id,
                                  rel_type => :rel_type,
                                  creation_user => :creation_user,
                                  creation_ip => :creation_ip
                                 );
      end;
    
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-subsite/tcl/rel-segments-procs-oracle.xql}
dbqd.acs-subsite.tcl.rel-segments-procs-oracle.rel_segments_delete.constraint_delete {dbqd.acs-subsite.tcl.rel-segments-procs-oracle.rel_segments_delete.constraint_delete {
      
	    begin rel_constraint.del(:constraint_id); end;
	
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-subsite/tcl/rel-segments-procs-oracle.xql}
dbqd.acs-subsite.tcl.rel-segments-procs-oracle.rel_segments_delete.rel_segment_delete {dbqd.acs-subsite.tcl.rel-segments-procs-oracle.rel_segments_delete.rel_segment_delete {
      
	begin rel_segment.del(:segment_id); end;
    
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-subsite/tcl/rel-segments-procs-oracle.xql}
dbqd.acs-subsite.tcl.rel-segments-procs.rel_segments_new.create_rel_segment {dbqd.acs-subsite.tcl.rel-segments-procs.rel_segments_new.create_rel_segment {

	select rel_segment__new(
		null,
		'rel_segment',
		now(),
		:creation_user,
		:creation_ip,
		null,
		null,
		:segment_name,
		:group_id,
		:rel_type,
		:context_id
)
    
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-subsite/tcl/rel-segments-procs-postgresql.xql}
dbqd.acs-subsite.tcl.rel-segments-procs.rel_segments_delete.constraint_delete {dbqd.acs-subsite.tcl.rel-segments-procs.rel_segments_delete.constraint_delete {

	    select rel_constraint__delete(:constraint_id)
	
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-subsite/tcl/rel-segments-procs-postgresql.xql}
dbqd.acs-subsite.tcl.rel-segments-procs.rel_segments_delete.rel_segment_delete {dbqd.acs-subsite.tcl.rel-segments-procs.rel_segments_delete.rel_segment_delete {

	select rel_segment__delete(:segment_id)
    
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-subsite/tcl/rel-segments-procs-postgresql.xql}
dbqd.acs-subsite.tcl.rel-segments-procs.rel_segments_delete.select_dependant_constraints {dbqd.acs-subsite.tcl.rel-segments-procs.rel_segments_delete.select_dependant_constraints {
      
	select c.constraint_id
	  from rel_constraints c
	 where c.required_rel_segment = :segment_id
    
      } {} {} {} c:/web/openacs-4/packages/acs-subsite/tcl/rel-segments-procs.xql}
dbqd.acs-subsite.tcl.rel-types-procs-oracle.rel_type_dynamic_p {dbqd.acs-subsite.tcl.rel-types-procs-oracle.rel_type_dynamic_p {
      
	select case when exists (select 1 
                                   from acs_object_types t
                                  where t.dynamic_p = 't'
                                    and t.object_type = :value)
	            then 1 else 0 end
	  from dual
    
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-subsite/tcl/rel-types-procs-oracle.xql}
dbqd.acs-subsite.tcl.rel-types-procs-oracle.rel_types::new.drop_type {dbqd.acs-subsite.tcl.rel-types-procs-oracle.rel_types::new.drop_type {
begin acs_rel_type.drop_type(:rel_type); end;
} {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-subsite/tcl/rel-types-procs-oracle.xql}
dbqd.acs-subsite.tcl.rel-types-procs-oracle.rel_types::new.create_type {dbqd.acs-subsite.tcl.rel-types-procs-oracle.rel_types::new.create_type {
	    begin
	    acs_rel_type.create_type (	
            rel_type          => :rel_type,
            supertype         => :supertype,
            pretty_name       => :pretty_name,
            pretty_plural     => :pretty_plural,
            table_name        => :table_name,
            id_column         => 'rel_id',
            package_name      => :package_name,
            object_type_one   => :object_type_one, 
            role_one          => :role_one,
            min_n_rels_one    => :min_n_rels_one,
            max_n_rels_one    => :max_n_rels_one,
            object_type_two   => :object_type_two, 
            role_two          => :role_two,
            min_n_rels_two    => :min_n_rels_two,
            max_n_rels_two    => :max_n_rels_two
	    );
	    end;
} {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-subsite/tcl/rel-types-procs-oracle.xql}
dbqd.acs-subsite.tcl.rel-types-procs.rel_type_dynamic_p {dbqd.acs-subsite.tcl.rel-types-procs.rel_type_dynamic_p {
      
	select case when exists (select 1 
                                   from acs_object_types t
                                  where t.dynamic_p = 't'
                                    and t.object_type = :value)
	            then 1 else 0 end
	  
    
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-subsite/tcl/rel-types-procs-postgresql.xql}
dbqd.acs-subsite.tcl.rel-types-procs.rel_types::additional_rel_types_group_type_p.group_rel_type_exists {dbqd.acs-subsite.tcl.rel-types-procs.rel_types::additional_rel_types_group_type_p.group_rel_type_exists {

             select case when exists (select 1
                                      from acs_object_types t1, acs_object_types t2, group_type_rels g
                                      where g.group_type = :group_type
                                        and t2.object_type <> g.rel_type
				        and t1.object_type in ('membership_rel','composition_rel')
				        and t2.tree_sortkey between t1.tree_sortkey and tree_right(t1.tree_sortkey))
                    then 1 else 0 end
      
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-subsite/tcl/rel-types-procs-postgresql.xql}
dbqd.acs-subsite.tcl.rel-types-procs.rel_types::new.drop_type {dbqd.acs-subsite.tcl.rel-types-procs.rel_types::new.drop_type {
	select acs_rel_type__drop_type(:rel_type, 'f')
} {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-subsite/tcl/rel-types-procs-postgresql.xql}
dbqd.acs-subsite.tcl.rel-types-procs.rel_types::new.create_type {dbqd.acs-subsite.tcl.rel-types-procs.rel_types::new.create_type {
select acs_rel_type__create_type (	
	:rel_type,
	:pretty_name,
	:pretty_plural,
	:supertype,
	:table_name,
	'rel_id',
	:package_name,
	:object_type_one,
	:role_one,
	:min_n_rels_one,
	:max_n_rels_one,
	:object_type_two,
	:role_two,
	:min_n_rels_two,
	:max_n_rels_two
);
} {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-subsite/tcl/rel-types-procs-postgresql.xql}
dbqd.acs-subsite.tcl.rel-types-procs.rel_types::new.create_table {dbqd.acs-subsite.tcl.rel-types-procs.rel_types::new.create_table {
	create table $table_name (
            rel_id integer constraint $fk_constraint_name
                   references $references_table ($references_column)
                   constraint $pk_constraint_name primary key
	);
} {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-subsite/tcl/rel-types-procs-postgresql.xql}
dbqd.acs-subsite.tcl.rel-types-procs.new.parent_rel_type {dbqd.acs-subsite.tcl.rel-types-procs.new.parent_rel_type {
      
	    select table_name as references_table,
	           id_column as references_column
	      from acs_object_types
	     where object_type=:supertype
	
      } {} {} {} c:/web/openacs-4/packages/acs-subsite/tcl/rel-types-procs.xql}
dbqd.acs-subsite.tcl.rel-types-procs.rel_types::new.update_type {dbqd.acs-subsite.tcl.rel-types-procs.rel_types::new.update_type {
update acs_object_types set dynamic_p='t' where object_type = :rel_type
} {} {} {} c:/web/openacs-4/packages/acs-subsite/tcl/rel-types-procs.xql}
dbqd.acs-subsite.tcl.rel-types-procs.rel_types::add_permissible.insert_rel_type {dbqd.acs-subsite.tcl.rel-types-procs.rel_types::add_permissible.insert_rel_type {
insert into group_type_rels
(group_rel_type_id, group_type, rel_type)
values
(acs_object_id_seq.nextval, :group_type, :rel_type)
} {} {} {} c:/web/openacs-4/packages/acs-subsite/tcl/rel-types-procs.xql}
dbqd.acs-subsite.tcl.rel-types-procs.rel_types::remove_permissible.delete_rel_type {dbqd.acs-subsite.tcl.rel-types-procs.rel_types::remove_permissible.delete_rel_type {
delete from group_type_rels
where group_type= :group_type
and rel_type= :rel_type
} {} {} {} c:/web/openacs-4/packages/acs-subsite/tcl/rel-types-procs.xql}
dbqd.acs-subsite.tcl.relation-procs-oracle.relation_add.select_rel_violation {dbqd.acs-subsite.tcl.relation-procs-oracle.relation_add.select_rel_violation {
      
	    select rel_constraint.violation(:rel_id) from dual
	
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-subsite/tcl/relation-procs-oracle.xql}
dbqd.acs-subsite.tcl.relation-procs-oracle.relation_remove.select_rel_info {dbqd.acs-subsite.tcl.relation-procs-oracle.relation_remove.select_rel_info {
      
	select s.segment_id, r.object_id_two as party_id, t.package_name
	  from rel_segments s, acs_rels r, acs_object_types t
	 where r.object_id_one = s.group_id(+)
	  and r.rel_type = s.rel_type(+)
	  and r.rel_type = t.object_type
	  and r.rel_id = :rel_id
    
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-subsite/tcl/relation-procs-oracle.xql}
dbqd.acs-subsite.tcl.relation-procs-oracle.relation_remove.relation_delete {dbqd.acs-subsite.tcl.relation-procs-oracle.relation_remove.relation_delete {
      begin ${package_name}.del(:rel_id); end;
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-subsite/tcl/relation-procs-oracle.xql}
dbqd.acs-subsite.tcl.relation-procs-oracle.relation_remove.select_rel_info {dbqd.acs-subsite.tcl.relation-procs-oracle.relation_remove.select_rel_info {
      
	select s.segment_id, r.object_id_two as party_id, t.package_name
	  from rel_segments s, acs_rels r, acs_object_types t
	 where r.object_id_one = s.group_id(+)
	  and r.rel_type = s.rel_type(+)
	  and r.rel_type = t.object_type
	  and r.rel_id = :rel_id
    
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-subsite/tcl/relation-procs-oracle.xql}
dbqd.acs-subsite.tcl.relation-procs-oracle.relation_segment_has_dependant.others_depend_p {dbqd.acs-subsite.tcl.relation-procs-oracle.relation_segment_has_dependant.others_depend_p {
      
	    select case when exists
	             (select 1 from rc_violations_by_removing_rel r where r.rel_id = :rel_id)
	           then 1 else 0 end
	      from dual
    
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-subsite/tcl/relation-procs-oracle.xql}
dbqd.acs-subsite.tcl.relation-procs-oracle.relation_type_is_valid_to_group_p.rel_type_valid_p {dbqd.acs-subsite.tcl.relation-procs-oracle.relation_type_is_valid_to_group_p.rel_type_valid_p {
      
	    select case when exists
	             (select 1 from rc_valid_rel_types r 
                      where r.group_id = :group_id 
                        and r.rel_type = :rel_type)
	           then 1 else 0 end
	      from dual
    
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-subsite/tcl/relation-procs-oracle.xql}
dbqd.acs-subsite.tcl.relation-procs-oracle.relation_types_valid_to_group_multirow.select_sub_rel_types {dbqd.acs-subsite.tcl.relation-procs-oracle.relation_types_valid_to_group_multirow.select_sub_rel_types {
      
	select 
	    pretty_name, object_type, level, indent,
	    case when valid_types.rel_type = null then 0 else 1 end as valid_p
	from 
	    (select
	        t.pretty_name, t.object_type, level,
	        replace(lpad(' ', (level - 1) * 4), 
	                ' ', '&nbsp;') as indent,
	        rownum as tree_rownum
	     from 
	        acs_object_types t
	     connect by 
	        prior t.object_type = t.supertype
	     start with 
	        t.object_type = :start_with ) types,
	    (select 
	        rel_type 
	     from 
	        rc_valid_rel_types
	     where 
	        group_id = :group_id ) valid_types
	where 
	    types.object_type = valid_types.rel_type(+)
	order by tree_rownum
    
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-subsite/tcl/relation-procs-oracle.xql}
dbqd.acs-subsite.tcl.relation-procs-oracle.relation_required_segments_multirow.select_required_rel_segments {dbqd.acs-subsite.tcl.relation-procs-oracle.relation_required_segments_multirow.select_required_rel_segments {
      
	select distinct s.segment_id, s.group_id, s.rel_type,
	       g.group_name, g.join_policy, t.pretty_name as rel_type_pretty_name,
               nvl(dl.dependency_level, 0)
	from rc_all_constraints c, 
             (select rel_segment, required_rel_segment
              from rc_segment_required_seg_map
	      where rel_side = 'two'
	      UNION ALL
	      select segment_id, segment_id
	      from rel_segments) map,
             rel_segments s, 
             rc_segment_dependency_levels dl,
	     groups g, acs_object_types t
	where c.group_id = :group_id
	  and c.rel_type = :rel_type
	  and c.required_rel_segment = map.rel_segment
          and map.required_rel_segment = s.segment_id
          and s.segment_id = dl.segment_id(+)
	  and g.group_id = s.group_id
	  and t.object_type = s.rel_type
        order by nvl(dl.dependency_level, 0)
    
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-subsite/tcl/relation-procs-oracle.xql}
dbqd.acs-subsite.tcl.relation-procs.relation_add.select_rel_violation {dbqd.acs-subsite.tcl.relation-procs.relation_add.select_rel_violation {
      
	    select rel_constraint__violation(:rel_id) 
	
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-subsite/tcl/relation-procs-postgresql.xql}
dbqd.acs-subsite.tcl.relation-procs.relation_remove.relation_delete {dbqd.acs-subsite.tcl.relation-procs.relation_remove.relation_delete {
      begin perform ${package_name}__delete(:rel_id); return null; end;
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-subsite/tcl/relation-procs-postgresql.xql}
dbqd.acs-subsite.tcl.relation-procs.relation_segment_has_dependant.others_depend_p {dbqd.acs-subsite.tcl.relation-procs.relation_segment_has_dependant.others_depend_p {
      
	    select case when exists
	             (select 1 from rc_violations_by_removing_rel r where r.rel_id = :rel_id)
	           then 1 else 0 end
	      
    
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-subsite/tcl/relation-procs-postgresql.xql}
dbqd.acs-subsite.tcl.relation-procs.relation_type_is_valid_to_group_p.rel_type_valid_p {dbqd.acs-subsite.tcl.relation-procs.relation_type_is_valid_to_group_p.rel_type_valid_p {
      
	    select case when exists
	             (select 1 from rc_valid_rel_types r 
                      where r.group_id = :group_id 
                        and r.rel_type = :rel_type)
	           then 1 else 0 end
	      
    
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-subsite/tcl/relation-procs-postgresql.xql}
dbqd.acs-subsite.tcl.relation-procs.relation_types_valid_to_group_multirow.select_sub_rel_types {dbqd.acs-subsite.tcl.relation-procs.relation_types_valid_to_group_multirow.select_sub_rel_types {    
	select
		pretty_name, object_type, level, indent,
		case when valid_types.rel_type = null then 0 else 1 end as valid_p
	from 
		(select
			t2.pretty_name, t2.object_type, tree_level(t2.tree_sortkey) - tree_level(t1.tree_sortkey) as level,
		        repeat('&nbsp;', (tree_level(t2.tree_sortkey) - tree_level(t1.tree_sortkey)) * 4) as indent,
	        	t2.tree_sortkey as sortkey
		from
			acs_object_types t1,
			acs_object_types t2
		where	t2.tree_sortkey between t1.tree_sortkey and tree_right(t1.tree_sortkey)
		  and   t1.object_type = :start_with) types left join
		(select
			rel_type
		from
			rc_valid_rel_types
		where
			group_id= :group_id) valid_types
	on (types.object_type = valid_types.rel_type)
	order by sortkey
		

	
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-subsite/tcl/relation-procs-postgresql.xql}
dbqd.acs-subsite.tcl.relation-procs.relation_remove.select_rel_info {dbqd.acs-subsite.tcl.relation-procs.relation_remove.select_rel_info {

	select s.segment_id, r.object_id_two as party_id, t.package_name
	  from acs_rels r
	         left outer join rel_segments s
		   on (r.object_id_one = s.group_id and r.rel_type = s.rel_type), 
	       acs_object_types t
	 where r.rel_type = t.object_type
	  and r.rel_id = :rel_id
    
      } {} {} {} c:/web/openacs-4/packages/acs-subsite/tcl/relation-procs.xql}
dbqd.acs-subsite.tcl.relation-procs.relation_segment_has_dependant.select_rel_info {dbqd.acs-subsite.tcl.relation-procs.relation_segment_has_dependant.select_rel_info {
	    select s.segment_id, r.object_id_two as party_id
  	      from rel_segments s, acs_rels r
	     where r.object_id_one = s.group_id
	       and r.rel_type = s.rel_type
	       and r.rel_id = :rel_id
      } {} {} {} c:/web/openacs-4/packages/acs-subsite/tcl/relation-procs.xql}
dbqd.acs-subsite.tcl.relation-procs.relation_required_segments_multirow.select_required_rel_segments {dbqd.acs-subsite.tcl.relation-procs.relation_required_segments_multirow.select_required_rel_segments {

	select distinct s.segment_id, s.group_id, s.rel_type,
	       g.group_name, g.join_policy, t.pretty_name as rel_type_pretty_name,
               coalesce(dl.dependency_level, 0)
	from rc_all_constraints c, 
             (select rel_segment, required_rel_segment
              from rc_segment_required_seg_map
	      where rel_side = 'two'
	      UNION ALL
	      select segment_id, segment_id
	      from rel_segments) map,
             rel_segments s left outer join rc_segment_dependency_levels dl using (segment_id),
	     groups g, acs_object_types t
	where c.group_id = :group_id
	  and c.rel_type = :rel_type
	  and c.required_rel_segment = map.rel_segment
          and map.required_rel_segment = s.segment_id
	  and g.group_id = s.group_id
	  and t.object_type = s.rel_type
        order by coalesce(dl.dependency_level, 0)
    
      } {} {} {} c:/web/openacs-4/packages/acs-subsite/tcl/relation-procs.xql}
dbqd.acs-subsite.tcl.relation-procs.relation::get_id.select_rel_id {dbqd.acs-subsite.tcl.relation-procs.relation::get_id.select_rel_id {

          select rel_id 
          from   acs_rels 
          where  rel_type = :rel_type
          and    object_id_one = :object_id_one
          and    object_id_two = :object_id_two

      } {} {} {} c:/web/openacs-4/packages/acs-subsite/tcl/relation-procs.xql}
dbqd.acs-subsite.tcl.subsite-callback-procs-oracle.subsite_callback.select_callbacks {dbqd.acs-subsite.tcl.subsite-callback-procs-oracle.subsite_callback.select_callbacks {
      
	select distinct callback, callback_type
	  from subsite_callbacks
	 where object_type in (select t.object_type
	                        from acs_object_types t
	                     connect by prior t.supertype = t.object_type
	                       start with t.object_type = :object_type)
	   and event_type = :event_type
    
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-subsite/tcl/subsite-callback-procs-oracle.xql}
dbqd.acs-subsite.tcl.subsite-callback-procs.subsite_callback.select_callbacks {dbqd.acs-subsite.tcl.subsite-callback-procs.subsite_callback.select_callbacks {

	select distinct callback, callback_type
	  from subsite_callbacks
	 where object_type in (select t2.object_type
	                         from acs_object_types t1, acs_object_types t2
	                        where t2.tree_sortkey <= t1.tree_sortkey
				  and t1.tree_sortkey between t2.tree_sortkey and tree_right(t2.tree_sortkey)
				  and t1.object_type = :object_type)
	   and event_type = :event_type
    
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-subsite/tcl/subsite-callback-procs-postgresql.xql}
dbqd.acs-subsite.tcl.subsite-callback-procs.subsite_callback.select_object_type {dbqd.acs-subsite.tcl.subsite-callback-procs.subsite_callback.select_object_type {
      
	    select object_type
	      from acs_objects 
	     where object_id = :object_id
	
      } {} {} {} c:/web/openacs-4/packages/acs-subsite/tcl/subsite-callback-procs.xql}
dbqd.acs-subsite.tcl.subsite-procs-oracle.subsite::after_mount.add_constraint {dbqd.acs-subsite.tcl.subsite-procs-oracle.subsite::after_mount.add_constraint {
      
		    BEGIN
			:1 := rel_constraint.new(
			constraint_name => :constraint_name,
			rel_segment => :segment_id,
			rel_side => 'two',
			required_rel_segment => rel_segment.get(:supersite_group_id, 'membership_rel'),
			creation_user => :user_id,
			creation_ip => :creation_ip
			);
		    END;
		
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-subsite/tcl/subsite-procs-oracle.xql}
dbqd.acs-subsite.tcl.subsite-procs-oracle.subsite::auto_mount_application.select_package_object_names {dbqd.acs-subsite.tcl.subsite-procs-oracle.subsite::auto_mount_application.select_package_object_names {
      
	    select t.pretty_name as package_name, acs_object.name(s.object_id) as object_name
	      from site_nodes s, apm_package_types t
	     where s.node_id = :node_id
	       and t.package_key = :package_key
	
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-subsite/tcl/subsite-procs-oracle.xql}
dbqd.acs-subsite.tcl.subsite-procs-oracle.subsite::util::sub_type_exists_p.sub_type_exists_p {dbqd.acs-subsite.tcl.subsite-procs-oracle.subsite::util::sub_type_exists_p.sub_type_exists_p {
      
	select case 
                 when exists (select 1 from acs_object_types 
                              where supertype = :object_type)
                 then 1 
                 else 0 
               end
        from dual
    
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-subsite/tcl/subsite-procs-oracle.xql}
dbqd.acs-subsite.tcl.subsite-procs-oracle.subsite::util::object_type_path_list.select_object_type_path {dbqd.acs-subsite.tcl.subsite-procs-oracle.subsite::util::object_type_path_list.select_object_type_path {
      
	select object_type
	from acs_object_types
	start with object_type = :object_type
	connect by object_type = prior supertype
    
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-subsite/tcl/subsite-procs-oracle.xql}
dbqd.acs-subsite.tcl.subsite-procs.subsite::after_mount.add_constraint {dbqd.acs-subsite.tcl.subsite-procs.subsite::after_mount.add_constraint {

	select rel_constraint__new(
	  null,
	  'rel_constraint',
	  :constraint_name,
	  :segment_id,
	  'two',
	  rel_segment__get(:supersite_group_id, 'membership_rel'),
	  null,
	  :user_id,
	  :creation_ip
	);
		
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-subsite/tcl/subsite-procs-postgresql.xql}
dbqd.acs-subsite.tcl.subsite-procs.subsite::auto_mount_application.select_package_object_names {dbqd.acs-subsite.tcl.subsite-procs.subsite::auto_mount_application.select_package_object_names {
      
	    select t.pretty_name as package_name, acs_object__name(s.object_id) as object_name
	      from site_nodes s, apm_package_types t
	     where s.node_id = :node_id
	       and t.package_key = :package_key
	
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-subsite/tcl/subsite-procs-postgresql.xql}
dbqd.acs-subsite.tcl.subsite-procs.subsite::util::sub_type_exists_p.sub_type_exists_p {dbqd.acs-subsite.tcl.subsite-procs.subsite::util::sub_type_exists_p.sub_type_exists_p {
      
	select case 
                 when exists (select 1 from acs_object_types 
                              where supertype = :object_type)
                 then 1 
                 else 0 
               end
        
    
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-subsite/tcl/subsite-procs-postgresql.xql}
dbqd.acs-subsite.tcl.subsite-procs.subsite::util::object_type_path_list.select_object_type_path {dbqd.acs-subsite.tcl.subsite-procs.subsite::util::object_type_path_list.select_object_type_path {

	select t2.object_type
	  from acs_object_types t1, acs_object_types t2
	 where t1.object_type = :object_type
	   and t1.tree_sortkey between t2.tree_sortkey and tree_right(t2.tree_sortkey)
	 order by t2.tree_sortkey desc
    
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-subsite/tcl/subsite-procs-postgresql.xql}
dbqd.acs-subsite.tcl.subsite-procs.subsite::after_mount.group_exists {dbqd.acs-subsite.tcl.subsite-procs.subsite::after_mount.group_exists {
      
	    select 1
            from dual
            where exists (select 1
                          from application_groups
                          where package_id = :package_id)
	
      } {} {} {} c:/web/openacs-4/packages/acs-subsite/tcl/subsite-procs.xql}
dbqd.acs-subsite.tcl.subsite-procs.subsite::after_mount.subsite_name_query {dbqd.acs-subsite.tcl.subsite-procs.subsite::after_mount.subsite_name_query {
      
	    select instance_name
	    from apm_packages
	    where package_id = :package_id
	
      } {} {} {} c:/web/openacs-4/packages/acs-subsite/tcl/subsite-procs.xql}
dbqd.acs-subsite.tcl.subsite-procs.subsite::after_mount.parent_subsite_query {dbqd.acs-subsite.tcl.subsite-procs.subsite::after_mount.parent_subsite_query {
      
         select m.group_id as supersite_group_id, p.instance_name as supersite_name
         from application_groups m, apm_packages p, site_nodes s1, site_nodes s2
         where s1.node_id = :node_id
           and s2.node_id = s1.parent_id
           and p.package_id = s2.object_id
	   and m.package_id = s2.object_id 

      } {} {} {} c:/web/openacs-4/packages/acs-subsite/tcl/subsite-procs.xql}
dbqd.acs-subsite.tcl.subsite-procs.subsite::instance_name_exists_p.select_name_exists_p {dbqd.acs-subsite.tcl.subsite-procs.subsite::instance_name_exists_p.select_name_exists_p {
      
	select count(*) 
	  from site_nodes
	 where parent_id = :node_id
	   and name = :instance_name
    
      } {} {} {} c:/web/openacs-4/packages/acs-subsite/tcl/subsite-procs.xql}
dbqd.acs-subsite.tcl.subsite-procs.subsite::util::object_type_pretty_name.select_pretty_name {dbqd.acs-subsite.tcl.subsite-procs.subsite::util::object_type_pretty_name.select_pretty_name {
      
	select pretty_name from acs_object_types 
	where object_type = :object_type
    
      } {} {} {} c:/web/openacs-4/packages/acs-subsite/tcl/subsite-procs.xql}
dbqd.acs-subsite.www.admin.applications.application-add-oracle.package_types {dbqd.acs-subsite.www.admin.applications.application-add-oracle.package_types {

    select pretty_name, package_key
    from   apm_package_types
    where  not (apm_package.singleton_p(package_key) = 1 and
                apm_package.num_instances(package_key) >= 1)
    and    package_key != 'acs-subsite'
    order  by upper(pretty_name)

        } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-subsite/www/admin/applications/application-add-oracle.xql}
dbqd.acs-subsite.www.admin.applications.application-add.package_types {dbqd.acs-subsite.www.admin.applications.application-add.package_types {

    select pretty_name, package_key
    from   apm_package_types
    where  not (apm_package__singleton_p(package_key) = 1 and
                apm_package__num_instances(package_key) >= 1)
    and    package_key != 'acs-subsite'
    order  by upper(pretty_name)

        } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-subsite/www/admin/applications/application-add-postgresql.xql}
dbqd.acs-subsite.www.admin.attributes.add.object_pretty_name {dbqd.acs-subsite.www.admin.attributes.add.object_pretty_name {
      
    select t.pretty_name 
      from acs_object_types t
     where t.object_type = :object_type

      } {} {} {} c:/web/openacs-4/packages/acs-subsite/www/admin/attributes/add.xql}
dbqd.acs-subsite.www.admin.attributes.add.select_datatypes {dbqd.acs-subsite.www.admin.attributes.add.select_datatypes {
      
    select d.datatype
      from acs_datatypes d
     order by lower(d.datatype)

      } {} {} {} c:/web/openacs-4/packages/acs-subsite/www/admin/attributes/add.xql}
dbqd.acs-subsite.www.admin.attributes.delete-2.select_object_type {dbqd.acs-subsite.www.admin.attributes.delete-2.select_object_type {
      
	    select attr.object_type 
	      from acs_attributes attr
	     where attr.attribute_id = :attribute_id
	
      } {} {} {} c:/web/openacs-4/packages/acs-subsite/www/admin/attributes/delete-2.xql}
dbqd.acs-subsite.www.admin.attributes.delete.select_object_type {dbqd.acs-subsite.www.admin.attributes.delete.select_object_type {
      
    select a.object_type, a.pretty_name as attribute_pretty_name
      from acs_attributes a  
     where a.attribute_id = :attribute_id

      } {} {} {} c:/web/openacs-4/packages/acs-subsite/www/admin/attributes/delete.xql}
dbqd.acs-subsite.www.admin.attributes.edit-one-oracle.attribute_properties {dbqd.acs-subsite.www.admin.attributes.edit-one-oracle.attribute_properties {
      
    select a.pretty_name as attribute_pretty_name, a.datatype, a.attribute_id,
           nvl(a.column_name,a.attribute_name) as attribute_column,
           t.id_column as type_column, t.table_name as type_table, t.object_type,
           a.min_n_values
      from acs_attributes a, acs_object_types t
     where a.attribute_id = :attribute_id
       and a.object_type = t.object_type

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-subsite/www/admin/attributes/edit-one-oracle.xql}
dbqd.acs-subsite.www.admin.attributes.edit-one.attribute_properties {dbqd.acs-subsite.www.admin.attributes.edit-one.attribute_properties {
      
    select a.pretty_name as attribute_pretty_name, a.datatype, a.attribute_id,
           coalesce(a.column_name,a.attribute_name) as attribute_column,
           t.id_column as type_column, t.table_name as type_table, t.object_type,
           a.min_n_values
      from acs_attributes a, acs_object_types t
     where a.attribute_id = :attribute_id
       and a.object_type = t.object_type

      } {} {} {} c:/web/openacs-4/packages/acs-subsite/www/admin/attributes/edit-one.xql}
dbqd.acs-subsite.www.admin.attributes.edit-one.select_value {dbqd.acs-subsite.www.admin.attributes.edit-one.select_value {
      
    select my_view.$attribute_column as current_value
      from ([package_object_view $object_type]) my_view
     where my_view.object_id = :id_column

      } {} {} {} c:/web/openacs-4/packages/acs-subsite/www/admin/attributes/edit-one.xql}
dbqd.acs-subsite.www.admin.attributes.edit-one.select_enum_values {dbqd.acs-subsite.www.admin.attributes.edit-one.select_enum_values {
      
	select enum.pretty_name, enum.enum_value
	  from acs_enum_values enum
	 where enum.attribute_id = :attribute_id 
	 order by enum.sort_order
    
      } {} {} {} c:/web/openacs-4/packages/acs-subsite/www/admin/attributes/edit-one.xql}
dbqd.acs-subsite.www.admin.attributes.edit-one.attribute_update {dbqd.acs-subsite.www.admin.attributes.edit-one.attribute_update {
      update $type_table 
                set $attribute_column = :attribute_value 
              where $type_column = :id_column
      } {} {} {} c:/web/openacs-4/packages/acs-subsite/www/admin/attributes/edit-one.xql}
dbqd.acs-subsite.www.admin.attributes.enum-add-2-oracle.select_max_sort_order {dbqd.acs-subsite.www.admin.attributes.enum-add-2-oracle.select_max_sort_order {
      
    select nvl(max(v.sort_order),0)
      from acs_enum_values v
     where v.attribute_id = :attribute_id

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-subsite/www/admin/attributes/enum-add-2-oracle.xql}
dbqd.acs-subsite.www.admin.attributes.enum-add-2-oracle.insert_enum_value {dbqd.acs-subsite.www.admin.attributes.enum-add-2-oracle.insert_enum_value {
      
		    insert into acs_enum_values v
		    (attribute_id, sort_order, enum_value, pretty_name)
		    select :attribute_id, :sort_order, :pretty_name, :pretty_name
		    from dual
		    where not exists (select 1 
                                        from acs_enum_values v2
                                       where v2.pretty_name = :pretty_name
                                         and v2.attribute_id = :attribute_id)
		
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-subsite/www/admin/attributes/enum-add-2-oracle.xql}
dbqd.acs-subsite.www.admin.attributes.enum-add-2.insert_enum_value {dbqd.acs-subsite.www.admin.attributes.enum-add-2.insert_enum_value {
      
		    insert into acs_enum_values
		    (attribute_id, sort_order, enum_value, pretty_name)
		    select :attribute_id, :sort_order, :pretty_name, :pretty_name
		    
		    where not exists (select 1 
                                        from acs_enum_values v2
                                       where v2.pretty_name = :pretty_name
                                         and v2.attribute_id = :attribute_id)
		
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-subsite/www/admin/attributes/enum-add-2-postgresql.xql}
dbqd.acs-subsite.www.admin.attributes.enum-add-2.select_max_sort_order {dbqd.acs-subsite.www.admin.attributes.enum-add-2.select_max_sort_order {
      
    select coalesce(max(v.sort_order),0)
      from acs_enum_values v
     where v.attribute_id = :attribute_id

      } {} {} {} c:/web/openacs-4/packages/acs-subsite/www/admin/attributes/enum-add-2.xql}
dbqd.acs-subsite.www.admin.attributes.enum-add-2.delete_enum_value {dbqd.acs-subsite.www.admin.attributes.enum-add-2.delete_enum_value {
      
		delete from acs_enum_values 
		 where attribute_id = :attribute_id 
		   and sort_order = :sort_order
	    
      } {} {} {} c:/web/openacs-4/packages/acs-subsite/www/admin/attributes/enum-add-2.xql}
dbqd.acs-subsite.www.admin.attributes.enum-add-2.update_enum_value {dbqd.acs-subsite.www.admin.attributes.enum-add-2.update_enum_value {
      
		update acs_enum_values
		   set pretty_name = :pretty_name
		 where attribute_id = :attribute_id
		   and sort_order = :sort_order
	    
      } {} {} {} c:/web/openacs-4/packages/acs-subsite/www/admin/attributes/enum-add-2.xql}
dbqd.acs-subsite.www.admin.attributes.enum-add.number_values {dbqd.acs-subsite.www.admin.attributes.enum-add.number_values {
      
    select count(*) 
      from acs_enum_values v
     where v.attribute_id = :attribute_id

      } {} {} {} c:/web/openacs-4/packages/acs-subsite/www/admin/attributes/enum-add.xql}
dbqd.acs-subsite.www.admin.attributes.enum-add.select_current_values {dbqd.acs-subsite.www.admin.attributes.enum-add.select_current_values {
      
    select v.enum_value
      from acs_enum_values v
     where v.attribute_id = :attribute_id
     order by v.sort_order

      } {} {} {} c:/web/openacs-4/packages/acs-subsite/www/admin/attributes/enum-add.xql}
dbqd.acs-subsite.www.admin.attributes.enum-add.select_attr_name {dbqd.acs-subsite.www.admin.attributes.enum-add.select_attr_name {
      
    select a.pretty_name as attribute_pretty_name
      from acs_attributes a
     where a.attribute_id = :attribute_id

      } {} {} {} c:/web/openacs-4/packages/acs-subsite/www/admin/attributes/enum-add.xql}
dbqd.acs-subsite.www.admin.attributes.one.select_attribute_info {dbqd.acs-subsite.www.admin.attributes.one.select_attribute_info {
      
    select a.attribute_id, a.object_type, a.table_name, a.attribute_name, 
           a.pretty_name, a.pretty_plural, a.sort_order, a.datatype, 
           a.default_value, a.min_n_values, a.max_n_values, a.storage, 
           a.static_p, a.column_name, t.dynamic_p
     from acs_attributes a, acs_object_types t
    where a.object_type = t.object_type
      and a.attribute_id = :attribute_id

      } {} {} {} c:/web/openacs-4/packages/acs-subsite/www/admin/attributes/one.xql}
dbqd.acs-subsite.www.admin.attributes.one.enum_values {dbqd.acs-subsite.www.admin.attributes.one.enum_values {
      
	select v.enum_value, v.pretty_name
	  from acs_enum_values v
	 where v.attribute_id = :attribute_id
	 order by v.sort_order
    
      } {} {} {} c:/web/openacs-4/packages/acs-subsite/www/admin/attributes/one.xql}
dbqd.acs-subsite.www.admin.attributes.value-delete.select_pretty_name {dbqd.acs-subsite.www.admin.attributes.value-delete.select_pretty_name {
      
    select v.pretty_name
      from acs_enum_values v
     where v.attribute_id = :attribute_id
       and v.enum_value = :enum_value

      } {} {} {} c:/web/openacs-4/packages/acs-subsite/www/admin/attributes/value-delete.xql}
dbqd.acs-subsite.www.admin.group-types.change-join-policy-2-oracle.select_pretty_name {dbqd.acs-subsite.www.admin.group-types.change-join-policy-2-oracle.select_pretty_name {
      
    select t.dynamic_p,
           case when gt.group_type = null then 0 else 1 end as group_type_exists_p
      from acs_object_types t, group_types gt
     where t.object_type = :group_type
       and t.object_type = gt.group_type(+)

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-subsite/www/admin/group-types/change-join-policy-2-oracle.xql}
dbqd.acs-subsite.www.admin.group-types.change-join-policy-2.select_pretty_name {dbqd.acs-subsite.www.admin.group-types.change-join-policy-2.select_pretty_name {

    select t.dynamic_p,
           case when gt.group_type = null then 0 else 1 end as group_type_exists_p
      from acs_object_types t left outer join group_types gt on (t.object_type = gt.group_type)
     where t.object_type = :group_type

      } {} {} {} c:/web/openacs-4/packages/acs-subsite/www/admin/group-types/change-join-policy-2.xql}
dbqd.acs-subsite.www.admin.group-types.change-join-policy-2.set_default_join_policy {dbqd.acs-subsite.www.admin.group-types.change-join-policy-2.set_default_join_policy {
      
	insert into group_types
	(group_type, default_join_policy)
	values
	(:group_type, :default_join_policy)
    
      } {} {} {} c:/web/openacs-4/packages/acs-subsite/www/admin/group-types/change-join-policy-2.xql}
dbqd.acs-subsite.www.admin.group-types.change-join-policy-2.update_join_policy {dbqd.acs-subsite.www.admin.group-types.change-join-policy-2.update_join_policy {
      
	update group_types
	set default_join_policy = :default_join_policy
	where group_type = :group_type
    
      } {} {} {} c:/web/openacs-4/packages/acs-subsite/www/admin/group-types/change-join-policy-2.xql}
dbqd.acs-subsite.www.admin.group-types.change-join-policy-oracle.select_pretty_name {dbqd.acs-subsite.www.admin.group-types.change-join-policy-oracle.select_pretty_name {
      
    select t.pretty_name as group_type_pretty_name, t.dynamic_p,
           nvl(gt.default_join_policy, 'open') as default_join_policy
      from acs_object_types t, group_types gt
     where t.object_type = :group_type
       and t.object_type = gt.group_type(+)

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-subsite/www/admin/group-types/change-join-policy-oracle.xql}
dbqd.acs-subsite.www.admin.group-types.change-join-policy.select_pretty_name {dbqd.acs-subsite.www.admin.group-types.change-join-policy.select_pretty_name {

    select t.pretty_name as group_type_pretty_name, t.dynamic_p,
           coalesce(gt.default_join_policy, 'open') as default_join_policy
      from acs_object_types t left outer join group_types gt on (t.object_type = gt.group_type)
     where t.object_type = :group_type

      } {} {} {} c:/web/openacs-4/packages/acs-subsite/www/admin/group-types/change-join-policy.xql}
dbqd.acs-subsite.www.admin.group-types.delete-2-oracle.package_exists {dbqd.acs-subsite.www.admin.group-types.delete-2-oracle.package_exists {
      
    select case when exists (select 1 
                               from user_objects o
                              where o.object_type='PACKAGE' 
                                and o.object_name = upper(:package_name))
           then 1 else 0 end
      from dual

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-subsite/www/admin/group-types/delete-2-oracle.xql}
dbqd.acs-subsite.www.admin.group-types.delete-2-oracle.type_exists {dbqd.acs-subsite.www.admin.group-types.delete-2-oracle.type_exists {
      
    select case when exists (select 1 from acs_object_types t where t.object_type = :group_type)
                then 1
                else 0
           end
      from dual

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-subsite/www/admin/group-types/delete-2-oracle.xql}
dbqd.acs-subsite.www.admin.group-types.delete-2-oracle.package_drop {dbqd.acs-subsite.www.admin.group-types.delete-2-oracle.package_drop {
    drop package [DoubleApos $group_type]
  } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-subsite/www/admin/group-types/delete-2-oracle.xql}
dbqd.acs-subsite.www.admin.group-types.delete-2-oracle.delete_rel_types {dbqd.acs-subsite.www.admin.group-types.delete-2-oracle.delete_rel_types {
delete from group_type_rels where group_type = :group_type
  } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-subsite/www/admin/group-types/delete-2-oracle.xql}
dbqd.acs-subsite.www.admin.group-types.delete-2-oracle.drop_type {dbqd.acs-subsite.www.admin.group-types.delete-2-oracle.drop_type {
begin acs_object_type.drop_type(:group_type); end;
  } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-subsite/www/admin/group-types/delete-2-oracle.xql}
dbqd.acs-subsite.www.admin.group-types.delete-2-oracle.drop_table {dbqd.acs-subsite.www.admin.group-types.delete-2-oracle.drop_table {
drop table $table_name
  } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-subsite/www/admin/group-types/delete-2-oracle.xql}
dbqd.acs-subsite.www.admin.group-types.delete-2-oracle.delete_group_type {dbqd.acs-subsite.www.admin.group-types.delete-2-oracle.delete_group_type {
begin
delete from group_types where group_type=:group_type;
end;
} {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-subsite/www/admin/group-types/delete-2-oracle.xql}
dbqd.acs-subsite.www.admin.group-types.delete-2.package_exists {dbqd.acs-subsite.www.admin.group-types.delete-2.package_exists {
      
    select case when exists (select 1 
                               from pg_proc
                              where proname like :package_name || '%')
           then 1 else 0 end
      

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-subsite/www/admin/group-types/delete-2-postgresql.xql}
dbqd.acs-subsite.www.admin.group-types.delete-2.type_exists {dbqd.acs-subsite.www.admin.group-types.delete-2.type_exists {
      
    select case when exists (select 1 from acs_object_types t where t.object_type = :group_type)
                then 1
                else 0
           end
      

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-subsite/www/admin/group-types/delete-2-postgresql.xql}
dbqd.acs-subsite.www.admin.group-types.delete-2.package_drop {dbqd.acs-subsite.www.admin.group-types.delete-2.package_drop {
    select drop_package('[DoubleApos $group_type]')
  } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-subsite/www/admin/group-types/delete-2-postgresql.xql}
dbqd.acs-subsite.www.admin.group-types.delete-2.delete_rel_types {dbqd.acs-subsite.www.admin.group-types.delete-2.delete_rel_types {
begin
  delete from group_type_rels where group_type = :group_type;
  return 1;
end;
  } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-subsite/www/admin/group-types/delete-2-postgresql.xql}
dbqd.acs-subsite.www.admin.group-types.delete-2.drop_type {dbqd.acs-subsite.www.admin.group-types.delete-2.drop_type {
select acs_object_type__drop_type(:group_type, 'f')
  } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-subsite/www/admin/group-types/delete-2-postgresql.xql}
dbqd.acs-subsite.www.admin.group-types.delete-2.drop_table {dbqd.acs-subsite.www.admin.group-types.delete-2.drop_table {
begin
  drop table $table_name;
  return 1;
end;
  } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-subsite/www/admin/group-types/delete-2-postgresql.xql}
dbqd.acs-subsite.www.admin.group-types.delete-2.delete_group_type {dbqd.acs-subsite.www.admin.group-types.delete-2.delete_group_type {
begin
delete from group_types where group_type=:group_type;
return 1;
end;
} {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-subsite/www/admin/group-types/delete-2-postgresql.xql}
dbqd.acs-subsite.www.admin.group-types.delete-2.select_type_info {dbqd.acs-subsite.www.admin.group-types.delete-2.select_type_info {
      
    select t.table_name, t.package_name
      from acs_object_types t
     where t.object_type=:group_type

      } {} {} {} c:/web/openacs-4/packages/acs-subsite/www/admin/group-types/delete-2.xql}
dbqd.acs-subsite.www.admin.group-types.delete-2.select_group_ids {dbqd.acs-subsite.www.admin.group-types.delete-2.select_group_ids {
      
	    select distinct o.object_id
	    from acs_objects o, all_object_party_privilege_map perm
	    where perm.object_id = o.object_id
              and perm.party_id = :user_id
              and perm.privilege = 'delete'
	      and o.object_type = :group_type
	
      } {} {} {} c:/web/openacs-4/packages/acs-subsite/www/admin/group-types/delete-2.xql}
dbqd.acs-subsite.www.admin.group-types.delete-oracle.number_subtypes {dbqd.acs-subsite.www.admin.group-types.delete-oracle.number_subtypes {
      
    select case when exists (select 1 
                               from acs_object_types t
                              where t.supertype = :group_type) 
                then 1 else 0 end
      from dual

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-subsite/www/admin/group-types/delete-oracle.xql}
dbqd.acs-subsite.www.admin.group-types.delete-oracle.rel_type_exists_p {dbqd.acs-subsite.www.admin.group-types.delete-oracle.rel_type_exists_p {
      
    select case when exists (select 1 
                               from acs_rel_types t
                              where t.object_type_one = :group_type
                                 or t.object_type_two = :group_type)
                then 1 else 0 end
      from dual

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-subsite/www/admin/group-types/delete-oracle.xql}
dbqd.acs-subsite.www.admin.group-types.delete.number_subtypes {dbqd.acs-subsite.www.admin.group-types.delete.number_subtypes {
      
    select case when exists (select 1 
                               from acs_object_types t
                              where t.supertype = :group_type) 
                then 1 else 0 end
      

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-subsite/www/admin/group-types/delete-postgresql.xql}
dbqd.acs-subsite.www.admin.group-types.delete.rel_type_exists_p {dbqd.acs-subsite.www.admin.group-types.delete.rel_type_exists_p {
      
    select case when exists (select 1 
                               from acs_rel_types t
                              where t.object_type_one = :group_type
                                 or t.object_type_two = :group_type)
                then 1 else 0 end
      

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-subsite/www/admin/group-types/delete-postgresql.xql}
dbqd.acs-subsite.www.admin.group-types.delete.select_pretty_name {dbqd.acs-subsite.www.admin.group-types.delete.select_pretty_name {
      
    select t.pretty_name as group_type_pretty_name
      from acs_object_types t
     where t.object_type = :group_type

      } {} {} {} c:/web/openacs-4/packages/acs-subsite/www/admin/group-types/delete.xql}
dbqd.acs-subsite.www.admin.group-types.delete.select_subtypes {dbqd.acs-subsite.www.admin.group-types.delete.select_subtypes {
      
	select t.object_type as group_type, t.pretty_name
          from acs_object_types t
         where t.supertype = :group_type
    
      } {} {} {} c:/web/openacs-4/packages/acs-subsite/www/admin/group-types/delete.xql}
dbqd.acs-subsite.www.admin.group-types.delete.select_rel_types {dbqd.acs-subsite.www.admin.group-types.delete.select_rel_types {
      
	select rel.rel_type, t.pretty_name
          from acs_rel_types rel, acs_object_types t
         where (rel.object_type_one = :group_type 
                or rel.object_type_two = :group_type)
	   and rel.rel_type = t.object_type
    
      } {} {} {} c:/web/openacs-4/packages/acs-subsite/www/admin/group-types/delete.xql}
dbqd.acs-subsite.www.admin.group-types.delete.groups_of_this_type {dbqd.acs-subsite.www.admin.group-types.delete.groups_of_this_type {
      
    select count(o.object_id) 
      from acs_objects o
     where o.object_type = :group_type

      } {} {} {} c:/web/openacs-4/packages/acs-subsite/www/admin/group-types/delete.xql}
dbqd.acs-subsite.www.admin.group-types.delete.relations_to_this_type {dbqd.acs-subsite.www.admin.group-types.delete.relations_to_this_type {
      
    select count(r.rel_id)
      from acs_rels r
     where r.rel_type in (select t.rel_type
                            from acs_rel_types t
                           where t.object_type_one = :group_type
                              or t.object_type_two = :group_type)

      } {} {} {} c:/web/openacs-4/packages/acs-subsite/www/admin/group-types/delete.xql}
dbqd.acs-subsite.www.admin.group-types.groups-display.select_type_info {dbqd.acs-subsite.www.admin.group-types.groups-display.select_type_info {
      
    select t.pretty_name as group_type_pretty_name
      from acs_object_types t
     where t.object_type = :group_type

      } {} {} {} c:/web/openacs-4/packages/acs-subsite/www/admin/group-types/groups-display.xql}
dbqd.acs-subsite.www.admin.group-types.groups-list.select_groups {dbqd.acs-subsite.www.admin.group-types.groups-list.select_groups {
      
  select g.group_id, g.group_name from (
    select distinct g.group_id, g.group_name
      from (select group_id, group_name
              from groups g, acs_objects o
             where g.group_id = o.object_id
		and o.object_type = :group_type) g,
           (select object_id
            from all_object_party_privilege_map
            where party_id = :user_id and privilege = 'read') perm,
           application_group_element_map m
     where perm.object_id = g.group_id
	and m.package_id = :package_id
	and m.element_id = g.group_id
     order by g.group_id, g.group_name) g
   order by lower(g.group_name)

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-subsite/www/admin/group-types/groups-list-postgresql.xql}
dbqd.acs-subsite.www.admin.group-types.groups-list.select_groups {dbqd.acs-subsite.www.admin.group-types.groups-list.select_groups {
      
  select g.group_id, g.group_name from (
    select distinct g.group_id, g.group_name
      from (select group_id, group_name
              from groups g, acs_objects o
             where g.group_id = o.object_id
		and o.object_type = :group_type) g,
           (select object_id
            from all_object_party_privilege_map
            where party_id = :user_id and privilege = 'read') perm,
           application_group_element_map m
     where perm.object_id = g.group_id
	and m.package_id = :package_id
	and m.element_id = g.group_id
     order by g.group_id, g.group_name) g
   order by lower(g.group_name)

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-subsite/www/admin/group-types/groups-list-postgresql.xql}
dbqd.acs-subsite.www.admin.group-types.index-oracle.select_group_types {dbqd.acs-subsite.www.admin.group-types.index-oracle.select_group_types {
      
    select t.object_type as group_type, t.pretty_plural, 
           nvl(num.number_groups,0) as number_groups, t.indent
      from (select t.object_type, t.pretty_plural, rownum as inner_rownum,
                   replace(lpad(' ', (level - 1) * 4), ' ', '&nbsp;') as indent
              from acs_object_types t
           connect by prior t.object_type = t.supertype
             start with t.object_type = 'group'
             order by lower(t.pretty_plural)) t, 
           (select o.object_type, count(*) number_groups
              from groups g, acs_objects o,  
                   acs_object_party_privilege_map perm,
                   application_group_element_map app_group
             where perm.object_id = g.group_id
               and perm.party_id = :user_id
               and perm.privilege = 'read'
               and o.object_id = g.group_id
               and app_group.package_id = :package_id
               and app_group.element_id = g.group_id
             group by o.object_type) num
     where t.object_type = num.object_type(+)
     order by t.inner_rownum

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-subsite/www/admin/group-types/index-oracle.xql}
dbqd.acs-subsite.www.admin.group-types.index.select_group_types {dbqd.acs-subsite.www.admin.group-types.index.select_group_types {

    select t.object_type as group_type, t.pretty_plural, 
	   coalesce(num.number_groups,0) as number_groups, 
	   repeat('&nbsp;', t.type_level * 4) as indent
      from (select t2.object_type, t2.pretty_plural, t2.tree_sortkey,
		   tree_level(t2.tree_sortkey) - tree_level(t1.tree_sortkey) as type_level
	      from acs_object_types t1,
		   acs_object_types t2
	     where t1.object_type = 'group'
	       and t2.tree_sortkey between t1.tree_sortkey and tree_right(t1.tree_sortkey)) t
                   left outer join
           (select o.object_type, count(*) as number_groups
              from groups g, acs_objects o,  
                   application_group_element_map app_group
             where acs_permission__permission_p(g.group_id, :user_id, 'read')
               and o.object_id = g.group_id
               and app_group.package_id = :package_id
               and app_group.element_id = g.group_id
             group by o.object_type) num
             using (object_type)
     order by t.tree_sortkey

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-subsite/www/admin/group-types/index-postgresql.xql}
dbqd.acs-subsite.www.admin.group-types.new-oracle.pretty_name_unique {dbqd.acs-subsite.www.admin.group-types.new-oracle.pretty_name_unique {
      
	    select case when exists (select 1 from acs_object_types t where t.pretty_name = :pretty_name)
                    then 1 else 0 end
	  from dual
	
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-subsite/www/admin/group-types/new-oracle.xql}
dbqd.acs-subsite.www.admin.group-types.new-oracle.pretty_name_unique {dbqd.acs-subsite.www.admin.group-types.new-oracle.pretty_name_unique {
      
	    select case when exists (select 1 from acs_object_types t where t.pretty_name = :pretty_name)
                    then 1 else 0 end
	  from dual
	
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-subsite/www/admin/group-types/new-oracle.xql}
dbqd.acs-subsite.www.admin.group-types.new.pretty_name_unique {dbqd.acs-subsite.www.admin.group-types.new.pretty_name_unique {
      
	    select case when exists (select 1 from acs_object_types t where t.pretty_name = :pretty_name)
                    then 1 else 0 end
	  
	
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-subsite/www/admin/group-types/new-postgresql.xql}
dbqd.acs-subsite.www.admin.group-types.new.select_group_supertypes {dbqd.acs-subsite.www.admin.group-types.new.select_group_supertypes {
      
      select repeat('&nbsp;', (tree_level(t2.tree_sortkey) - tree_level(t1.tree_sortkey)) * 4) || t2.pretty_name, t2.object_type
        from acs_object_types t1, acs_object_types t2
       where t2.tree_sortkey between t1.tree_sortkey and tree_right(t1.tree_sortkey)
         and t1.object_type = 'group'
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-subsite/www/admin/group-types/new-postgresql.xql}
dbqd.acs-subsite.www.admin.group-types.one-oracle.select_pretty_name {dbqd.acs-subsite.www.admin.group-types.one-oracle.select_pretty_name {
      
    select t.pretty_name as group_type_pretty_name, t.dynamic_p,
           nvl(gt.default_join_policy, 'open') as default_join_policy
      from acs_object_types t, group_types gt
     where t.object_type = :group_type
       and t.object_type = gt.group_type(+)

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-subsite/www/admin/group-types/one-oracle.xql}
dbqd.acs-subsite.www.admin.group-types.one-oracle.groups_select {dbqd.acs-subsite.www.admin.group-types.one-oracle.groups_select {
      
    select my_view.group_name, my_view.group_id
    from (select /*+ ORDERED */ DISTINCT  g.group_name, g.group_id
           from acs_objects o, groups g,
                application_group_element_map app_group, 
                all_object_party_privilege_map perm
          where perm.object_id = g.group_id
            and perm.party_id = :user_id
            and perm.privilege = 'read'
            and g.group_id = o.object_id
            and o.object_type = :group_type
            and app_group.package_id = :package_id
            and app_group.element_id = g.group_id
          order by lower(g.group_name)) my_view 
    where rownum <= 26

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-subsite/www/admin/group-types/one-oracle.xql}
dbqd.acs-subsite.www.admin.group-types.one-oracle.attributes_select {dbqd.acs-subsite.www.admin.group-types.one-oracle.attributes_select {
      
    select a.attribute_id, a.pretty_name, 
           a.ancestor_type, t.pretty_name as ancestor_pretty_name
      from acs_object_type_attributes a,
           (select t.object_type, t.pretty_name, level as type_level
              from acs_object_types t
             start with t.object_type='group'
           connect by prior t.object_type = t.supertype) t 
     where a.object_type = :group_type
       and t.object_type = a.ancestor_type
    order by type_level 

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-subsite/www/admin/group-types/one-oracle.xql}
dbqd.acs-subsite.www.admin.group-types.one.groups_select {dbqd.acs-subsite.www.admin.group-types.one.groups_select {

    select my_view.group_name, my_view.group_id
    from (select DISTINCT g.group_name, g.group_id
           from acs_objects o, groups g,
                application_group_element_map app_group, 
                all_object_party_privilege_map perm
          where perm.object_id = g.group_id
            and perm.party_id = :user_id
            and perm.privilege = 'read'
            and g.group_id = o.object_id
            and o.object_type = :group_type
            and app_group.package_id = :package_id
            and app_group.element_id = g.group_id
          order by g.group_name, g.group_id) my_view 
    limit 26

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-subsite/www/admin/group-types/one-postgresql.xql}
dbqd.acs-subsite.www.admin.group-types.one.attributes_select {dbqd.acs-subsite.www.admin.group-types.one.attributes_select {

    select a.attribute_id, a.pretty_name, 
           a.ancestor_type, t.pretty_name as ancestor_pretty_name
      from acs_object_type_attributes a,
           (select t2.object_type, t2.pretty_name,
		   tree_level(t2.tree_sortkey) - tree_level(t1.tree_sortkey) + 1 as type_level		   	
              from acs_object_types t1, acs_object_types t2
	     where t1.object_type = 'group'
	       and t2.tree_sortkey between t1.tree_sortkey and tree_right(t1.tree_sortkey)) t
     where a.object_type = :group_type
       and t.object_type = a.ancestor_type
    order by type_level 

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-subsite/www/admin/group-types/one-postgresql.xql}
dbqd.acs-subsite.www.admin.group-types.one.select_pretty_name {dbqd.acs-subsite.www.admin.group-types.one.select_pretty_name {

    select t.pretty_name as group_type_pretty_name, t.dynamic_p,
           coalesce(gt.default_join_policy, 'open') as default_join_policy
      from acs_object_types t
	     left outer join group_types gt
               on (t.object_type = gt.group_type)
     where t.object_type = :group_type

      } {} {} {} c:/web/openacs-4/packages/acs-subsite/www/admin/group-types/one.xql}
dbqd.acs-subsite.www.admin.group-types.one.relations_select {dbqd.acs-subsite.www.admin.group-types.one.relations_select {
      
    select t.pretty_name, g.rel_type, g.group_rel_type_id
      from acs_object_types t, group_type_rels g
     where t.object_type = g.rel_type
       and g.group_type = :group_type
     order by lower(t.pretty_name)

      } {} {} {} c:/web/openacs-4/packages/acs-subsite/www/admin/group-types/one.xql}
dbqd.acs-subsite.www.admin.group-types.rel-type-add-2-oracle.types_match_p {dbqd.acs-subsite.www.admin.group-types.rel-type-add-2-oracle.types_match_p {
      
	    select count(*)
	      from acs_rel_types t
	     where (t.object_type_one = :group_type 
                    or acs_object_type.is_subtype_p(t.object_type_one, :group_type) = 't')
               and t.rel_type = :rel_type
	
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-subsite/www/admin/group-types/rel-type-add-2-oracle.xql}
dbqd.acs-subsite.www.admin.group-types.rel-type-add-2.types_match_p {dbqd.acs-subsite.www.admin.group-types.rel-type-add-2.types_match_p {
      
	    select count(*)
	      from acs_rel_types t
	     where (t.object_type_one = :group_type 
                    or acs_object_type__is_subtype_p(t.object_type_one, :group_type) = 't')
               and t.rel_type = :rel_type
	
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-subsite/www/admin/group-types/rel-type-add-2-postgresql.xql}
dbqd.acs-subsite.www.admin.group-types.rel-type-add-2.exists_p {dbqd.acs-subsite.www.admin.group-types.rel-type-add-2.exists_p {
      select count(*) from group_type_rels where group_type = :group_type and rel_type = :rel_type
      } {} {} {} c:/web/openacs-4/packages/acs-subsite/www/admin/group-types/rel-type-add-2.xql}
dbqd.acs-subsite.www.admin.group-types.rel-type-add-oracle.select_primary_relations {dbqd.acs-subsite.www.admin.group-types.rel-type-add-oracle.select_primary_relations {
      
    select replace(lpad(' ', (t.type_level - 1) * 4), ' ', '&nbsp;') as indent,
           t.pretty_name, t.rel_type
      from (select t.pretty_name, t.object_type as rel_type, level as type_level
              from acs_object_types t
             where t.object_type not in (select g.rel_type 
                                           from group_type_rels g 
                                          where g.group_type = :group_type)
           connect by prior t.object_type = t.supertype
             start with t.object_type in ('membership_rel', 'composition_rel')) t,
           acs_rel_types rel_type
     where t.rel_type = rel_type.rel_type
       and (rel_type.object_type_one = :group_type 
            or acs_object_type.is_subtype_p(rel_type.object_type_one, :group_type) = 't')

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-subsite/www/admin/group-types/rel-type-add-oracle.xql}
dbqd.acs-subsite.www.admin.group-types.rel-type-add.select_primary_relations {dbqd.acs-subsite.www.admin.group-types.rel-type-add.select_primary_relations {

    select repeat('&nbsp;', (t.type_level - 1) * 4) as indent,
           t.pretty_name, t.rel_type
      from (select t2.pretty_name, t2.object_type as rel_type, tree_level(t2.tree_sortkey) - tree_level(t1.tree_sortkey) + 1  as type_level
              from acs_object_types t1,
		   acs_object_types t2
             where t2.tree_sortkey between t1.tree_sortkey and tree_right(t1.tree_sortkey)
	       and t2.object_type not in (select g.rel_type 
                                            from group_type_rels g 
                                           where g.group_type = :group_type)
	       and t1.object_type in ('membership_rel', 'composition_rel')) t,
	    acs_rel_types rel_type
       where t.rel_type = rel_type.rel_type
       and (rel_type.object_type_one = :group_type 
            or acs_object_type__is_subtype_p(rel_type.object_type_one, :group_type) = 't')

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-subsite/www/admin/group-types/rel-type-add-postgresql.xql}
dbqd.acs-subsite.www.admin.group-types.rel-type-remove-2.select_group_type {dbqd.acs-subsite.www.admin.group-types.rel-type-remove-2.select_group_type {
      
	select g.group_type
	from group_type_rels g 
	where g.group_rel_type_id = :group_rel_type_id
    
      } {} {} {} c:/web/openacs-4/packages/acs-subsite/www/admin/group-types/rel-type-remove-2.xql}
dbqd.acs-subsite.www.admin.group-types.rel-type-remove-2.remove_relation {dbqd.acs-subsite.www.admin.group-types.rel-type-remove-2.remove_relation {
      
	    delete from group_type_rels where group_rel_type_id = :group_rel_type_id
	
      } {} {} {} c:/web/openacs-4/packages/acs-subsite/www/admin/group-types/rel-type-remove-2.xql}
dbqd.acs-subsite.www.admin.group-types.rel-type-remove.select_info {dbqd.acs-subsite.www.admin.group-types.rel-type-remove.select_info {
      
    select g.rel_type, g.group_type, 
           t.pretty_name as rel_pretty_name, t2.pretty_name as group_type_pretty_name
      from acs_object_types t, acs_object_types t2, group_type_rels g
     where g.group_rel_type_id = :group_rel_type_id
       and t.object_type = g.rel_type
       and t2.object_type = g.group_type

      } {} {} {} c:/web/openacs-4/packages/acs-subsite/www/admin/group-types/rel-type-remove.xql}
dbqd.acs-subsite.www.admin.groups.change-join-policy-2.update_join_policy {dbqd.acs-subsite.www.admin.groups.change-join-policy-2.update_join_policy {
      
    update groups
    set join_policy = :join_policy
    where group_id = :group_id

      } {} {} {} c:/web/openacs-4/packages/acs-subsite/www/admin/groups/change-join-policy-2.xql}
dbqd.acs-subsite.www.admin.groups.change-join-policy.group_info {dbqd.acs-subsite.www.admin.groups.change-join-policy.group_info {
      
    select g.group_name, g.join_policy
      from groups g
     where g.group_id = :group_id

      } {} {} {} c:/web/openacs-4/packages/acs-subsite/www/admin/groups/change-join-policy.xql}
dbqd.acs-subsite.www.admin.groups.constraints-create-oracle.select_props {dbqd.acs-subsite.www.admin.groups.constraints-create-oracle.select_props {
      
    select acs_group.name(:group_id) as group_name,
           t.pretty_name as rel_type_pretty_name
      from acs_object_types t
     where t.object_type = :rel_type

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-subsite/www/admin/groups/constraints-create-oracle.xql}
dbqd.acs-subsite.www.admin.groups.constraints-create.select_props {dbqd.acs-subsite.www.admin.groups.constraints-create.select_props {
      
    select acs_group__name(:group_id) as group_name,
           t.pretty_name as rel_type_pretty_name
      from acs_object_types t
     where t.object_type = :rel_type

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-subsite/www/admin/groups/constraints-create-postgresql.xql}
dbqd.acs-subsite.www.admin.groups.delete-oracle.object_name {dbqd.acs-subsite.www.admin.groups.delete-oracle.object_name {
      select acs_object.name(:group_id) from dual
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-subsite/www/admin/groups/delete-oracle.xql}
dbqd.acs-subsite.www.admin.groups.delete-oracle.select_counts {dbqd.acs-subsite.www.admin.groups.delete-oracle.select_counts {
      
    select (select count(*) from group_element_map where group_id = :group_id) as elements,
           (select count(*) from rel_segments where group_id = :group_id) as segments,
           (select count(*) 
              from rel_constraints cons, rel_segments segs
             where segs.segment_id in (cons.rel_segment,cons.required_rel_segment)
               and segs.group_id = :group_id) as constraints
      from dual

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-subsite/www/admin/groups/delete-oracle.xql}
dbqd.acs-subsite.www.admin.groups.delete.object_name {dbqd.acs-subsite.www.admin.groups.delete.object_name {
      select acs_object__name(:group_id) 
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-subsite/www/admin/groups/delete-postgresql.xql}
dbqd.acs-subsite.www.admin.groups.delete.select_counts {dbqd.acs-subsite.www.admin.groups.delete.select_counts {
      
    select (select count(*) from group_element_map where group_id = :group_id) as elements,
           (select count(*) from rel_segments where group_id = :group_id) as segments,
           (select count(*) 
              from rel_constraints cons, rel_segments segs
             where segs.segment_id in (cons.rel_segment,cons.required_rel_segment)
               and segs.group_id = :group_id) as constraints
      

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-subsite/www/admin/groups/delete-postgresql.xql}
dbqd.acs-subsite.www.admin.groups.elements-by-group-type-oracle.select_group_types {dbqd.acs-subsite.www.admin.groups.elements-by-group-type-oracle.select_group_types {
      
    select /*+ ORDERED */ 
           t.object_type, t.pretty_name, count(g.group_id) as number_groups
      from groups g, acs_objects o, acs_object_types t,
           application_group_element_map app_group
     where o.object_id = g.group_id
       and o.object_type = t.object_type
       and app_group.package_id = :package_id
       and app_group.element_id = g.group_id
     group by t.object_type, t.pretty_name
     order by lower(t.pretty_name)

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-subsite/www/admin/groups/elements-by-group-type-oracle.xql}
dbqd.acs-subsite.www.admin.groups.elements-by-group-type.select_group_types {dbqd.acs-subsite.www.admin.groups.elements-by-group-type.select_group_types {

    select
           t.object_type, t.pretty_name, count(g.group_id) as number_groups
      from groups g, acs_objects o, acs_object_types t,
           application_group_element_map app_group
     where o.object_id = g.group_id
       and o.object_type = t.object_type
       and app_group.package_id = :package_id
       and app_group.element_id = g.group_id
     group by t.object_type, t.pretty_name
     order by lower(t.pretty_name)

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-subsite/www/admin/groups/elements-by-group-type-postgresql.xql}
dbqd.acs-subsite.www.admin.groups.elements-by-group-type.select_group_types {dbqd.acs-subsite.www.admin.groups.elements-by-group-type.select_group_types {

    select
           t.object_type, t.pretty_name, count(g.group_id) as number_groups
      from groups g, acs_objects o, acs_object_types t,
           application_group_element_map app_group
     where o.object_id = g.group_id
       and o.object_type = t.object_type
       and app_group.package_id = :package_id
       and app_group.element_id = g.group_id
     group by t.object_type, t.pretty_name
     order by lower(t.pretty_name)

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-subsite/www/admin/groups/elements-by-group-type-postgresql.xql}
dbqd.acs-subsite.www.admin.groups.elements-by-rel-type-oracle.relations_query {dbqd.acs-subsite.www.admin.groups.elements-by-rel-type-oracle.relations_query {
       
    select g.rel_type, g.group_rel_id,
           acs_object_type.pretty_name(g.rel_type) as rel_type_pretty_name,
           s.segment_id, s.segment_name, 
           acs_rel_type.role_pretty_plural(rel_types.role_two) as role_pretty_plural,
           acs_rel_type.role_pretty_name(rel_types.role_two) as role_pretty_name,
           rels.num_rels,
           case when valid_types.group_id = null then 0 else 1 end as rel_type_valid_p
      from group_rels g, 
           rel_segments s, 
           acs_rel_types rel_types,
           (select rel_type, count(*) as num_rels
              from group_component_map
             where group_id = :group_id
               and group_id = container_id
           group by rel_type
           UNION ALL
           select rel_type, count(*) as num_rels
             from group_approved_member_map
             where group_id = :group_id
               and group_id = container_id
           group by rel_type) rels,
           rc_valid_rel_types valid_types
     where g.group_id = s.group_id(+)
       and g.rel_type = s.rel_type(+)
       and g.rel_type = rels.rel_type(+)
       and g.rel_type = rel_types.rel_type
       and g.group_id = :group_id
       and g.group_id = valid_types.group_id(+)
       and g.rel_type = valid_types.rel_type(+)
     order by lower(g.rel_type)

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-subsite/www/admin/groups/elements-by-rel-type-oracle.xql}
dbqd.acs-subsite.www.admin.groups.elements-by-rel-type.relations_query {dbqd.acs-subsite.www.admin.groups.elements-by-rel-type.relations_query {

    select g.rel_type, g.group_rel_id,
           acs_object_type__pretty_name(g.rel_type) as rel_type_pretty_name,
           s.segment_id, s.segment_name, 
           acs_rel_type__role_pretty_plural(rel_types.role_two) as role_pretty_plural,
           acs_rel_type__role_pretty_name(rel_types.role_two) as role_pretty_name,
           rels.num_rels,
           case when valid_types.group_id = null then 0 else 1 end as rel_type_valid_p
      from group_rels g
	     left outer join rel_segments s using (group_id, rel_type)
	     left outer join rc_valid_rel_types valid_types using (group_id, rel_type)
	     left outer join
	       (select rel_type, count(*) as num_rels
	          from group_component_map
		 where group_id = :group_id
		   and group_id = container_id
	      group by rel_type
	      UNION ALL
	        select rel_type, count(*) as num_rels
		  from group_approved_member_map
		 where group_id = :group_id
		   and group_id = container_id
	      group by rel_type) rels using (rel_type),
	   acs_rel_types rel_types
     where g.rel_type = rel_types.rel_type
       and g.group_id = :group_id
  order by lower(g.rel_type)

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-subsite/www/admin/groups/elements-by-rel-type-postgresql.xql}
dbqd.acs-subsite.www.admin.groups.elements-display-list-oracle.rel_type_info {dbqd.acs-subsite.www.admin.groups.elements-display-list-oracle.rel_type_info {
      
    select object_type as ancestor_rel_type
      from acs_object_types
     where supertype = 'relationship'
       and object_type in (
               select object_type from acs_object_types
               start with object_type = :rel_type
               connect by object_type = prior supertype
           )

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-subsite/www/admin/groups/elements-display-list-oracle.xql}
dbqd.acs-subsite.www.admin.groups.elements-display-list-oracle.relations_query {dbqd.acs-subsite.www.admin.groups.elements-display-list-oracle.relations_query {
      
select r.rel_id, 
       party_names.party_name as element_name
from (select /*+ ORDERED */ DISTINCT rels.rel_id, object_id_two
      from $extra_tables acs_rels rels, all_object_party_privilege_map perm
      where perm.object_id = rels.rel_id
        and perm.party_id = :user_id
        and perm.privilege = 'read'
        and rels.rel_type = :rel_type
        and rels.object_id_one = :group_id $extra_where_clauses) r, 
     party_names 
where r.object_id_two = party_names.party_id
order by lower(element_name)

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-subsite/www/admin/groups/elements-display-list-oracle.xql}
dbqd.acs-subsite.www.admin.groups.elements-display-list.rel_type_info {dbqd.acs-subsite.www.admin.groups.elements-display-list.rel_type_info {

    select object_type as ancestor_rel_type
      from acs_object_types
     where supertype = 'relationship'
       and object_type in (
               select t2.object_type
	         from acs_object_types t1, acs_object_types t2
		where t1.tree_sortkey between t2.tree_sortkey and tree_right(t2.tree_sortkey)
		  and t1.object_type = :rel_type
	   )

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-subsite/www/admin/groups/elements-display-list-postgresql.xql}
dbqd.acs-subsite.www.admin.groups.elements-display-list.relations_query {dbqd.acs-subsite.www.admin.groups.elements-display-list.relations_query {

select r.rel_id, 
       party_names.party_name as element_name
from (select DISTINCT rels.rel_id, object_id_two
      from $extra_tables acs_rels rels, all_object_party_privilege_map perm
      where perm.object_id = rels.rel_id
        and perm.party_id = :user_id
        and perm.privilege = 'read'
        and rels.rel_type = :rel_type
        and rels.object_id_one = :group_id $extra_where_clauses) r, 
     party_names 
where r.object_id_two = party_names.party_id
order by element_name

      } {} {} {} c:/web/openacs-4/packages/acs-subsite/www/admin/groups/elements-display-list.xql}
dbqd.acs-subsite.www.admin.groups.elements-display-oracle.group_and_rel_info {dbqd.acs-subsite.www.admin.groups.elements-display-oracle.group_and_rel_info {
      
    select acs_group.name(:group_id) as group_name,
           acs_object_type.pretty_name(:rel_type) as rel_type_pretty_name,
           acs_rel_type.role_pretty_plural(rel_types.role_two) as role_pretty_plural,
           acs_rel_type.role_pretty_name(rel_types.role_two) as role_pretty_name
      from acs_rel_types rel_types
     where rel_types.rel_type = :rel_type

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-subsite/www/admin/groups/elements-display-oracle.xql}
dbqd.acs-subsite.www.admin.groups.elements-display.group_and_rel_info {dbqd.acs-subsite.www.admin.groups.elements-display.group_and_rel_info {
      
    select acs_group__name(:group_id) as group_name,
           acs_object_type__pretty_name(:rel_type) as rel_type_pretty_name,
           acs_rel_type__role_pretty_plural(rel_types.role_two) as role_pretty_plural,
           acs_rel_type__role_pretty_name(rel_types.role_two) as role_pretty_name
      from acs_rel_types rel_types
     where rel_types.rel_type = :rel_type

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-subsite/www/admin/groups/elements-display-postgresql.xql}
dbqd.acs-subsite.www.admin.groups.index.subsite_info {dbqd.acs-subsite.www.admin.groups.index.subsite_info {
      
    select ag.group_id as subsite_group_id, ap.instance_name
    from application_groups ag, apm_packages ap
    where ag.package_id = ap.package_id
      and ag.package_id = :package_id

      } {} {} {} c:/web/openacs-4/packages/acs-subsite/www/admin/groups/index.xql}
dbqd.acs-subsite.www.admin.groups.new-oracle.rel_type_info {dbqd.acs-subsite.www.admin.groups.new-oracle.rel_type_info {
      
    select object_type as ancestor_rel_type
      from acs_object_types
     where supertype = 'relationship'
       and object_type in (
               select object_type from acs_object_types
               start with object_type = :add_with_rel_type
               connect by object_type = prior supertype
           )

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-subsite/www/admin/groups/new-oracle.xql}
dbqd.acs-subsite.www.admin.groups.new.rel_type_info {dbqd.acs-subsite.www.admin.groups.new.rel_type_info {

    select object_type as ancestor_rel_type
      from acs_object_types
     where supertype = 'relationship'
       and object_type in (
               select t2.object_type
		 from acs_object_types t1, acs_object_types t2
		where t1.object_type = :add_with_rel_type
		  and t1.tree_sortkey between t2.tree_sortkey and tree_right(t2.tree_sortkey)
           )

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-subsite/www/admin/groups/new-postgresql.xql}
dbqd.acs-subsite.www.admin.groups.new.group_exists_p {dbqd.acs-subsite.www.admin.groups.new.group_exists_p {
      
	    select count(*) from groups where group_id = :group_id
	
      } {} {} {} c:/web/openacs-4/packages/acs-subsite/www/admin/groups/new.xql}
dbqd.acs-subsite.www.admin.groups.new.group_info {dbqd.acs-subsite.www.admin.groups.new.group_info {
      
    select group_name as add_to_group_name, 
           join_policy as add_to_group_join_policy
    from groups
    where group_id = :add_to_group_id

      } {} {} {} c:/web/openacs-4/packages/acs-subsite/www/admin/groups/new.xql}
dbqd.acs-subsite.www.admin.groups.new.select_type_info {dbqd.acs-subsite.www.admin.groups.new.select_type_info {
      
    select t.pretty_name as group_type_pretty_name,
           t.table_name
      from acs_object_types t
     where t.object_type = :group_type

      } {} {} {} c:/web/openacs-4/packages/acs-subsite/www/admin/groups/new.xql}
dbqd.acs-subsite.www.admin.groups.one.group_info {dbqd.acs-subsite.www.admin.groups.one.group_info {
      
    select g.group_name, g.join_policy,
           o.object_type as group_type
      from groups g, acs_objects o, acs_object_types t
     where g.group_id = o.object_id
       and o.object_type = t.object_type
       and g.group_id = :group_id

      } {} {} {} c:/web/openacs-4/packages/acs-subsite/www/admin/groups/one.xql}
dbqd.acs-subsite.www.admin.groups.rel-type-add-2-oracle.types_match_p {dbqd.acs-subsite.www.admin.groups.rel-type-add-2-oracle.types_match_p {
      
	    select count(*)
	      from acs_rel_types t
	     where (t.object_type_one = :group_type 
                    or acs_object_type.is_subtype_p(t.object_type_one, :group_type) = 't')
               and t.rel_type = :rel_type
	
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-subsite/www/admin/groups/rel-type-add-2-oracle.xql}
dbqd.acs-subsite.www.admin.groups.rel-type-add-2-oracle.exists_p {dbqd.acs-subsite.www.admin.groups.rel-type-add-2-oracle.exists_p {
      
	select case when exists (select 1 
                                   from group_rels 
                                  where group_id = :group_id
                                    and rel_type = :rel_type)
                    then 1 else 0 end
	  from dual
    
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-subsite/www/admin/groups/rel-type-add-2-oracle.xql}
dbqd.acs-subsite.www.admin.groups.rel-type-add-2-oracle.segment_exists_p {dbqd.acs-subsite.www.admin.groups.rel-type-add-2-oracle.segment_exists_p {
      
    select case when exists (select 1 
                               from rel_segments s 
                              where s.group_id = :group_id
                                and s.rel_type = :rel_type)
                then 1 else 0 end
      from dual

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-subsite/www/admin/groups/rel-type-add-2-oracle.xql}
dbqd.acs-subsite.www.admin.groups.rel-type-add-2.types_match_p {dbqd.acs-subsite.www.admin.groups.rel-type-add-2.types_match_p {
      
	    select count(*)
	      from acs_rel_types t
	     where (t.object_type_one = :group_type 
                    or acs_object_type__is_subtype_p(t.object_type_one, :group_type) = 't')
               and t.rel_type = :rel_type
	
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-subsite/www/admin/groups/rel-type-add-2-postgresql.xql}
dbqd.acs-subsite.www.admin.groups.rel-type-add-2.exists_p {dbqd.acs-subsite.www.admin.groups.rel-type-add-2.exists_p {
      
	select case when exists (select 1 
                                   from group_rels 
                                  where group_id = :group_id
                                    and rel_type = :rel_type)
                    then 1 else 0 end
	  
    
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-subsite/www/admin/groups/rel-type-add-2-postgresql.xql}
dbqd.acs-subsite.www.admin.groups.rel-type-add-2.segment_exists_p {dbqd.acs-subsite.www.admin.groups.rel-type-add-2.segment_exists_p {
      
    select case when exists (select 1 
                               from rel_segments s 
                              where s.group_id = :group_id
                                and s.rel_type = :rel_type)
                then 1 else 0 end
      

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-subsite/www/admin/groups/rel-type-add-2-postgresql.xql}
dbqd.acs-subsite.www.admin.groups.rel-type-add-2.select_group_type {dbqd.acs-subsite.www.admin.groups.rel-type-add-2.select_group_type {
      
	    select o.object_type as group_type
	      from acs_objects o
	     where o.object_id = :group_id
	
      } {} {} {} c:/web/openacs-4/packages/acs-subsite/www/admin/groups/rel-type-add-2.xql}
dbqd.acs-subsite.www.admin.groups.rel-type-add-oracle.select_primary_relations {dbqd.acs-subsite.www.admin.groups.rel-type-add-oracle.select_primary_relations {
      
    select replace(lpad(' ', (t.type_level - 1) * 4), ' ', '&nbsp;') as indent,
           t.pretty_name, t.rel_type
      from (select t.pretty_name, t.object_type as rel_type, level as type_level
              from acs_object_types t
             where t.object_type not in (select g.rel_type 
                                           from group_rels g 
                                          where g.group_id = :group_id)
           connect by prior t.object_type = t.supertype
             start with t.object_type in ('membership_rel', 'composition_rel')) t,
           acs_rel_types rel_type
     where t.rel_type = rel_type.rel_type
       and (rel_type.object_type_one = :group_type 
            or acs_object_type.is_subtype_p(rel_type.object_type_one, :group_type) = 't')

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-subsite/www/admin/groups/rel-type-add-oracle.xql}
dbqd.acs-subsite.www.admin.groups.rel-type-add.select_primary_relations {dbqd.acs-subsite.www.admin.groups.rel-type-add.select_primary_relations {

    select repeat('&nbsp;', (t.type_level - 1) * 4) as indent,
           t.pretty_name, t.rel_type
      from (select t2.pretty_name, t2.object_type as rel_type, tree_level(t2.tree_sortkey) - tree_level(t1.tree_sortkey) + 1  as type_level
              from acs_object_types t1,
		   acs_object_types t2
             where t2.tree_sortkey between t1.tree_sortkey and tree_right(t1.tree_sortkey)
	       and t2.object_type  not in (select g.rel_type from group_rels g where g.group_id = :group_id)
	       and t1.object_type in ('membership_rel', 'composition_rel')) t,
	    acs_rel_types rel_type
       where t.rel_type = rel_type.rel_type
       and (rel_type.object_type_one = :group_type 
            or acs_object_type__is_subtype_p(rel_type.object_type_one, :group_type) = 't')

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-subsite/www/admin/groups/rel-type-add-postgresql.xql}
dbqd.acs-subsite.www.admin.groups.rel-type-add.select_group_type {dbqd.acs-subsite.www.admin.groups.rel-type-add.select_group_type {
      
    select o.object_type as group_type
      from acs_objects o
     where o.object_id = :group_id

      } {} {} {} c:/web/openacs-4/packages/acs-subsite/www/admin/groups/rel-type-add.xql}
dbqd.acs-subsite.www.admin.groups.rel-type-remove-2.select_group_id {dbqd.acs-subsite.www.admin.groups.rel-type-remove-2.select_group_id {
      
    select g.group_id, g.rel_type
      from group_rels g, acs_object_types t
     where g.rel_type = t.object_type
       and g.group_rel_id = :group_rel_id

      } {} {} {} c:/web/openacs-4/packages/acs-subsite/www/admin/groups/rel-type-remove-2.xql}
dbqd.acs-subsite.www.admin.groups.rel-type-remove-2.select_rel_ids {dbqd.acs-subsite.www.admin.groups.rel-type-remove-2.select_rel_ids {
      
	select r.rel_id 
          from acs_rels r
	 where r.rel_type = :rel_type
	   and r.object_id_one = :group_id
    
      } {} {} {} c:/web/openacs-4/packages/acs-subsite/www/admin/groups/rel-type-remove-2.xql}
dbqd.acs-subsite.www.admin.groups.rel-type-remove-2.select_segments {dbqd.acs-subsite.www.admin.groups.rel-type-remove-2.select_segments {
      
	    select segment_id
	      from rel_segments 
	     where group_id = :group_id
	       and rel_type = :rel_type
	
      } {} {} {} c:/web/openacs-4/packages/acs-subsite/www/admin/groups/rel-type-remove-2.xql}
dbqd.acs-subsite.www.admin.groups.rel-type-remove-2.remove_relationship_type {dbqd.acs-subsite.www.admin.groups.rel-type-remove-2.remove_relationship_type {
      
	    delete from group_rels where group_rel_id = :group_rel_id
	
      } {} {} {} c:/web/openacs-4/packages/acs-subsite/www/admin/groups/rel-type-remove-2.xql}
dbqd.acs-subsite.www.admin.groups.rel-type-remove-oracle.select_info {dbqd.acs-subsite.www.admin.groups.rel-type-remove-oracle.select_info {
      
    select g.rel_type, g.group_id, acs_object.name(g.group_id) as group_name,
           t.pretty_name as rel_pretty_name
      from acs_object_types t, group_rels g
     where g.group_rel_id = :group_rel_id
       and t.object_type = g.rel_type

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-subsite/www/admin/groups/rel-type-remove-oracle.xql}
dbqd.acs-subsite.www.admin.groups.rel-type-remove.select_info {dbqd.acs-subsite.www.admin.groups.rel-type-remove.select_info {
      
    select g.rel_type, g.group_id, acs_object__name(g.group_id) as group_name,
           t.pretty_name as rel_pretty_name
      from acs_object_types t, group_rels g
     where g.group_rel_id = :group_rel_id
       and t.object_type = g.rel_type

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-subsite/www/admin/groups/rel-type-remove-postgresql.xql}
dbqd.acs-subsite.www.admin.host-node-map.add.host_node_insert {dbqd.acs-subsite.www.admin.host-node-map.add.host_node_insert {


    insert into host_node_map 
    (host, node_id)
    values 
    (:host, :root)

    } {} {} {} c:/web/openacs-4/packages/acs-subsite/www/admin/host-node-map/add.xql}
dbqd.acs-subsite.www.admin.host-node-map.delete.host_node_delete {dbqd.acs-subsite.www.admin.host-node-map.delete.host_node_delete {

    delete from host_node_map 
    where host = :host
    and node_id = :node_id

    } {} {} {} c:/web/openacs-4/packages/acs-subsite/www/admin/host-node-map/delete.xql}
dbqd.acs-subsite.www.admin.host-node-map.index-oracle.root_id {dbqd.acs-subsite.www.admin.host-node-map.index-oracle.root_id {
      
      select site_node.node_id('/') from dual
      
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-subsite/www/admin/host-node-map/index-oracle.xql}
dbqd.acs-subsite.www.admin.host-node-map.index-oracle.host_node_pair {dbqd.acs-subsite.www.admin.host-node-map.index-oracle.host_node_pair {

    select host, node_id, site_node.url(node_id) as url 
    from host_node_map
      
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-subsite/www/admin/host-node-map/index-oracle.xql}
dbqd.acs-subsite.www.admin.host-node-map.index.root_id {dbqd.acs-subsite.www.admin.host-node-map.index.root_id {
      
      select site_node__node_id('/', null)
      
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-subsite/www/admin/host-node-map/index-postgresql.xql}
dbqd.acs-subsite.www.admin.host-node-map.index.host_node_pair {dbqd.acs-subsite.www.admin.host-node-map.index.host_node_pair {

    select host, node_id, site_node__url(node_id) as url 
    from host_node_map
      
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-subsite/www/admin/host-node-map/index-postgresql.xql}
dbqd.acs-subsite.www.admin.host-node-map.index.node_list {dbqd.acs-subsite.www.admin.host-node-map.index.node_list {

          select name, node_id
	  from site_nodes
          order by name
      
      } {} {} {} c:/web/openacs-4/packages/acs-subsite/www/admin/host-node-map/index.xql}
dbqd.acs-subsite.www.admin.index-oracle.acs_admin_url_get {dbqd.acs-subsite.www.admin.index-oracle.acs_admin_url_get {
      
    select site_node.url(node_id) acs_admin_url, instance_name
    from site_nodes s, apm_packages p
    where s.object_id = p.package_id
    and p.package_key = 'acs-admin'
    and rownum = 1

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-subsite/www/admin/index-oracle.xql}
dbqd.acs-subsite.www.admin.index.acs_admin_url_get {dbqd.acs-subsite.www.admin.index.acs_admin_url_get {

    select site_node__url(node_id) as acs_admin_url, instance_name
    from site_nodes s, apm_packages p
    where s.object_id = p.package_id
    and p.package_key = 'acs-admin'
    limit 1

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-subsite/www/admin/index-postgresql.xql}
dbqd.acs-subsite.www.admin.index.subsite_name {dbqd.acs-subsite.www.admin.index.subsite_name {
      
    select p.instance_name 
      from apm_packages p
     where p.package_id = :package_id

      } {} {} {} c:/web/openacs-4/packages/acs-subsite/www/admin/index.xql}
dbqd.acs-subsite.www.admin.object-types.alphabetical-index.object_type_in_alphabetical_order {dbqd.acs-subsite.www.admin.object-types.alphabetical-index.object_type_in_alphabetical_order {
      
    select object_type,
           pretty_name
      from acs_object_types
     order by lower(pretty_name)

      } {} {} {} c:/web/openacs-4/packages/acs-subsite/www/admin/object-types/alphabetical-index.xql}
dbqd.acs-subsite.www.admin.object-types.one-oracle.attribute_comment {dbqd.acs-subsite.www.admin.object-types.one-oracle.attribute_comment {
      
	select utc.column_name,
	       utc.data_type,
               ucc.comments
	  from user_tab_columns utc,
               user_col_comments ucc
	 where utc.table_name = '[string toupper $table_name]'
           and utc.table_name = ucc.table_name(+)
           and utc.column_name = ucc.column_name(+)
    
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-subsite/www/admin/object-types/one-oracle.xql}
dbqd.acs-subsite.www.admin.object-types.one.package_index {dbqd.acs-subsite.www.admin.object-types.one.package_index {

	select definition || '\n' as text
	  from acs_func_defs
	 where fname ilike :package_name || '__%'
	 order by fname
      
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-subsite/www/admin/object-types/one-postgresql.xql}
dbqd.acs-subsite.www.admin.object-types.one.object_type {dbqd.acs-subsite.www.admin.object-types.one.object_type {
      
    select supertype,
           abstract_p,
           pretty_name,
           pretty_plural,
           table_name,
           id_column,
           name_method,
           type_extension_table,
           package_name,
           dynamic_p
      from acs_object_types
     where object_type = :object_type

      } {} {} {} c:/web/openacs-4/packages/acs-subsite/www/admin/object-types/one.xql}
dbqd.acs-subsite.www.admin.object-types.one.attribute {dbqd.acs-subsite.www.admin.object-types.one.attribute {
      
    select attribute_name,
           pretty_name,
           pretty_plural,
           datatype,
           default_value,
           min_n_values,
           max_n_values,
           storage,
           table_name as attr_table_name,
           column_name
      from acs_attributes
     where object_type = :object_type

      } {} {} {} c:/web/openacs-4/packages/acs-subsite/www/admin/object-types/one.xql}
dbqd.acs-subsite.www.admin.object-types.one.table_comment {dbqd.acs-subsite.www.admin.object-types.one.table_comment {
      select comments from user_tab_comments where table_name = '[string toupper $table_name]'
      } {} {} {} c:/web/openacs-4/packages/acs-subsite/www/admin/object-types/one.xql}
dbqd.acs-subsite.www.admin.object-types.one.attribute_comment {dbqd.acs-subsite.www.admin.object-types.one.attribute_comment {

	select utc.column_name,
	       utc.data_type,
               ucc.comments
	  from user_tab_columns utc left join
               user_col_comments ucc on (utc.table_name= ucc.table_name and utc.column_name = ucc.column_name)
	 where utc.table_name = '[string toupper $table_name]'
    
      } {} {} {} c:/web/openacs-4/packages/acs-subsite/www/admin/object-types/one.xql}
dbqd.acs-subsite.www.admin.object-types.one.package_index {dbqd.acs-subsite.www.admin.object-types.one.package_index {

	select definition || '\n' as text
	  from acs_func_defs
	 where fname ilike :package_name || '__%'
	 order by fname
      
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-subsite/www/admin/object-types/one-postgresql.xql}
dbqd.acs-subsite.www.admin.parties.new-oracle.rel_type_info {dbqd.acs-subsite.www.admin.parties.new-oracle.rel_type_info {
      
    select object_type as ancestor_rel_type
      from acs_object_types
     where supertype = 'relationship'
       and object_type in (
               select object_type from acs_object_types
               start with object_type = :add_with_rel_type
               connect by object_type = prior supertype
           )

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-subsite/www/admin/parties/new-oracle.xql}
dbqd.acs-subsite.www.admin.parties.new.rel_type_info {dbqd.acs-subsite.www.admin.parties.new.rel_type_info {

         select t2.object_type as ancestor_rel_type
         from acs_object_types t1, acs_object_types t2
         where t1.object_type = :add_with_rel_type
           and t1.tree_sortkey between t2.tree_sortkey and tree_right(t2.tree_sortkey)
           and t2.supertype = 'relationship'

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-subsite/www/admin/parties/new-postgresql.xql}
dbqd.acs-subsite.www.admin.parties.new.group_info {dbqd.acs-subsite.www.admin.parties.new.group_info {
      
    select group_name as add_to_group_name, 
           join_policy as add_to_group_join_policy
    from groups
    where group_id = :add_to_group_id

      } {} {} {} c:/web/openacs-4/packages/acs-subsite/www/admin/parties/new.xql}
dbqd.acs-subsite.www.admin.parties.new.select_type_info {dbqd.acs-subsite.www.admin.parties.new.select_type_info {
      
    select t.pretty_name as party_type_pretty_name,
           t.table_name
      from acs_object_types t
     where t.object_type = :party_type

      } {} {} {} c:/web/openacs-4/packages/acs-subsite/www/admin/parties/new.xql}
dbqd.acs-subsite.www.admin.parties.one-oracle.party_info {dbqd.acs-subsite.www.admin.parties.one-oracle.party_info {
      
    select acs_object.name(:party_id) as party_name,
           object_type as party_type
      from acs_objects
     where object_id = :party_id

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-subsite/www/admin/parties/one-oracle.xql}
dbqd.acs-subsite.www.admin.parties.one.party_info {dbqd.acs-subsite.www.admin.parties.one.party_info {
      
    select acs_object__name(:party_id) as party_name,
           object_type as party_type
      from acs_objects
     where object_id = :party_id

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-subsite/www/admin/parties/one-postgresql.xql}
dbqd.acs-subsite.www.admin.rel-segments.constraints.delete-2-oracle.delete_constraint {dbqd.acs-subsite.www.admin.rel-segments.constraints.delete-2-oracle.delete_constraint {
      
	begin rel_constraint.del(constraint_id => :constraint_id); end;
    
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-subsite/www/admin/rel-segments/constraints/delete-2-oracle.xql}
dbqd.acs-subsite.www.admin.rel-segments.constraints.delete-2.delete_constraint {dbqd.acs-subsite.www.admin.rel-segments.constraints.delete-2.delete_constraint {

	begin perform rel_constraint__delete(:constraint_id); return null; end;
    
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-subsite/www/admin/rel-segments/constraints/delete-2-postgresql.xql}
dbqd.acs-subsite.www.admin.rel-segments.constraints.delete-2.select_segment_id {dbqd.acs-subsite.www.admin.rel-segments.constraints.delete-2.select_segment_id {
      
	    select c.rel_segment as segment_id from rel_constraints c where c.constraint_id = :constraint_id
	
      } {} {} {} c:/web/openacs-4/packages/acs-subsite/www/admin/rel-segments/constraints/delete-2.xql}
dbqd.acs-subsite.www.admin.rel-segments.constraints.delete-2.select_constraint_props {dbqd.acs-subsite.www.admin.rel-segments.constraints.delete-2.select_constraint_props {
      
	select 1
        from rel_constraints c, application_group_segments s,
             application_group_segments s2
	where c.rel_segment = s.segment_id
          and c.constraint_id = :constraint_id
          and s.package_id = :package_id
          and s2.segment_id = c.required_rel_segment
          and s2.package_id = :package_id
    
      } {} {} {} c:/web/openacs-4/packages/acs-subsite/www/admin/rel-segments/constraints/delete-2.xql}
dbqd.acs-subsite.www.admin.rel-segments.constraints.delete.select_constraint_props {dbqd.acs-subsite.www.admin.rel-segments.constraints.delete.select_constraint_props {
      
    select c.constraint_name, s.segment_name
      from rel_constraints c, application_group_segments s,
           application_group_segments s2
     where c.rel_segment = s.segment_id
       and c.constraint_id = :constraint_id
       and s.package_id = :package_id
       and s2.segment_id = c.required_rel_segment
       and s2.package_id = :package_id

      } {} {} {} c:/web/openacs-4/packages/acs-subsite/www/admin/rel-segments/constraints/delete.xql}
dbqd.acs-subsite.www.admin.rel-segments.constraints.index.select_rel_constraints {dbqd.acs-subsite.www.admin.rel-segments.constraints.index.select_rel_constraints {
      
    select c.constraint_id, c.constraint_name
      from rel_constraints c
           application_group_segments s1, application_group_segments s2
     where s1.segment_id = c.rel_segment
       and s1.package_id = :package_id
       and s2.segment_id = c.required_rel_segment
       and s2.package_id = :package_id
       and exists (select 1
                   from all_object_party_privilege_map perm
                   where perm.object_id = c.constraint_id
                     and perm.party_id = :user_id
                     and perm.privilege = 'read')
     order by lower(c.constraint_name)

      } {} {} {} c:/web/openacs-4/packages/acs-subsite/www/admin/rel-segments/constraints/index.xql}
dbqd.acs-subsite.www.admin.rel-segments.constraints.new-oracle.select_rel_properties {dbqd.acs-subsite.www.admin.rel-segments.constraints.new-oracle.select_rel_properties {
      
    select s.segment_name, 
           acs_rel_type.role_pretty_name(t.role_one) as role_one_name,
           acs_rel_type.role_pretty_name(t.role_two) as role_two_name
      from rel_segments s, acs_rel_types t
     where s.rel_type = t.rel_type
       and s.segment_id = :rel_segment

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-subsite/www/admin/rel-segments/constraints/new-oracle.xql}
dbqd.acs-subsite.www.admin.rel-segments.constraints.new-oracle.add_constraint {dbqd.acs-subsite.www.admin.rel-segments.constraints.new-oracle.add_constraint {
      
	 BEGIN
	  :1 := rel_constraint.new(constraint_name => :constraint_name,
                                   rel_segment => :rel_segment,
                                   rel_side => :rel_side,
                                   required_rel_segment => :required_rel_segment,
                                   creation_user => :creation_user,
                                   creation_ip => :creation_ip
                                  );
	 END;
	
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-subsite/www/admin/rel-segments/constraints/new-oracle.xql}
dbqd.acs-subsite.www.admin.rel-segments.constraints.new-oracle.select_violated_rels {dbqd.acs-subsite.www.admin.rel-segments.constraints.new-oracle.select_violated_rels {
      
	    select viol.rel_id, acs_object.name(viol.party_id) as name
	      from rel_constraints_violated_one viol
	     where viol.constraint_id = :constraint_id
	    UNION ALL
	    select viol.rel_id, acs_object.name(viol.party_id) as name
	      from rel_constraints_violated_two viol
	     where viol.constraint_id = :constraint_id
	
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-subsite/www/admin/rel-segments/constraints/new-oracle.xql}
dbqd.acs-subsite.www.admin.rel-segments.constraints.new.select_rel_properties {dbqd.acs-subsite.www.admin.rel-segments.constraints.new.select_rel_properties {
      
    select s.segment_name, 
           acs_rel_type__role_pretty_name(t.role_one) as role_one_name,
           acs_rel_type__role_pretty_name(t.role_two) as role_two_name
      from rel_segments s, acs_rel_types t
     where s.rel_type = t.rel_type
       and s.segment_id = :rel_segment

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-subsite/www/admin/rel-segments/constraints/new-postgresql.xql}
dbqd.acs-subsite.www.admin.rel-segments.constraints.new.add_constraint {dbqd.acs-subsite.www.admin.rel-segments.constraints.new.add_constraint {

	  select rel_constraint__new(
	    null,
	    'rel_constraint',
	    :constraint_name,
	    :rel_segment,
	    :rel_side,
	    :required_rel_segment,
	    null,
	    :creation_user,
	    :creation_ip
	  );
	
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-subsite/www/admin/rel-segments/constraints/new-postgresql.xql}
dbqd.acs-subsite.www.admin.rel-segments.constraints.new.select_violated_rels {dbqd.acs-subsite.www.admin.rel-segments.constraints.new.select_violated_rels {
      
	    select viol.rel_id, acs_object__name(viol.party_id) as name
	      from rel_constraints_violated_one viol
	     where viol.constraint_id = :constraint_id
	    UNION ALL
	    select viol.rel_id, acs_object__name(viol.party_id) as name
	      from rel_constraints_violated_two viol
	     where viol.constraint_id = :constraint_id
	
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-subsite/www/admin/rel-segments/constraints/new-postgresql.xql}
dbqd.acs-subsite.www.admin.rel-segments.constraints.new.select_segments {dbqd.acs-subsite.www.admin.rel-segments.constraints.new.select_segments {
      
    select s.segment_name, s.segment_id
      from application_group_segments s
     where s.segment_id <> :rel_segment
       and s.package_id = :package_id

     order by lower(s.segment_name)

      } {} {} {} c:/web/openacs-4/packages/acs-subsite/www/admin/rel-segments/constraints/new.xql}
dbqd.acs-subsite.www.admin.rel-segments.constraints.one-oracle.select_constraint_properties {dbqd.acs-subsite.www.admin.rel-segments.constraints.one-oracle.select_constraint_properties {
      
    select c.constraint_id, c.constraint_name, c.rel_side, 
           s.segment_id, s.segment_name, s.rel_type, acs_group.name(s.group_id) as group_name,
           s2.segment_id as req_segment_id, s2.segment_name as req_segment_name, 
           s2.rel_type as req_rel_type, acs_group.name(s2.group_id) as req_group_name
      from application_group_segments s, application_group_segments s2,
           rel_constraints c
     where s.segment_id = c.rel_segment
       and s2.segment_id = c.required_rel_segment
       and c.constraint_id = :constraint_id
       and s.package_id = :package_id

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-subsite/www/admin/rel-segments/constraints/one-oracle.xql}
dbqd.acs-subsite.www.admin.rel-segments.constraints.one-oracle.select_rel_type_info {dbqd.acs-subsite.www.admin.rel-segments.constraints.one-oracle.select_rel_type_info {
      
    select role1.role as role_one, 
           nvl(role1.pretty_name,'Object on side one') as role_one_pretty_name,
           nvl(role1.pretty_plural,'Objects on side one') as role_one_pretty_plural,
           role2.role as role_two, 
           nvl(role2.pretty_name,'Object on side two') as role_two_pretty_name,
           nvl(role2.pretty_plural,'Objects on side two') as role_two_pretty_plural,
           acs_object_type.pretty_name(rel.rel_type) as rel_type_pretty_name
      from acs_rel_types rel, acs_rel_roles role1, acs_rel_roles role2
     where rel.rel_type = :rel_type
       and rel.role_one = role1.role(+)
       and rel.role_two = role2.role(+)

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-subsite/www/admin/rel-segments/constraints/one-oracle.xql}
dbqd.acs-subsite.www.admin.rel-segments.constraints.one.select_constraint_properties {dbqd.acs-subsite.www.admin.rel-segments.constraints.one.select_constraint_properties {
      
    select c.constraint_id, c.constraint_name, c.rel_side, 
           s.segment_id, s.segment_name, s.rel_type, acs_group__name(s.group_id) as group_name,
           s2.segment_id as req_segment_id, s2.segment_name as req_segment_name, 
           s2.rel_type as req_rel_type, acs_group__name(s2.group_id) as req_group_name
      from application_group_segments s, application_group_segments s2,
           rel_constraints c
     where s.segment_id = c.rel_segment
       and s2.segment_id = c.required_rel_segment
       and c.constraint_id = :constraint_id
       and s.package_id = :package_id

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-subsite/www/admin/rel-segments/constraints/one-postgresql.xql}
dbqd.acs-subsite.www.admin.rel-segments.constraints.one.select_rel_type_info {dbqd.acs-subsite.www.admin.rel-segments.constraints.one.select_rel_type_info {

    select role1.role as role_one, 
           coalesce(role1.pretty_name,'Object on side one') as role_one_pretty_name,
           coalesce(role1.pretty_plural,'Objects on side one') as role_one_pretty_plural,
           role2.role as role_two, 
           coalesce(role2.pretty_name,'Object on side two') as role_two_pretty_name,
           coalesce(role2.pretty_plural,'Objects on side two') as role_two_pretty_plural,
           acs_object_type__pretty_name(rel.rel_type) as rel_type_pretty_name
      from acs_rel_types rel
	     left outer join  acs_rel_roles role1 on (rel.role_one = role1.role)
	     left outer join  acs_rel_roles role2 on (rel.role_two = role2.role)
     where rel.rel_type = :rel_type

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-subsite/www/admin/rel-segments/constraints/one-postgresql.xql}
dbqd.acs-subsite.www.admin.rel-segments.delete-2.select_group_id {dbqd.acs-subsite.www.admin.rel-segments.delete-2.select_group_id {
      
	    select s.group_id from rel_segments s where s.segment_id = :segment_id
	
      } {} {} {} c:/web/openacs-4/packages/acs-subsite/www/admin/rel-segments/delete-2.xql}
dbqd.acs-subsite.www.admin.rel-segments.delete.select_segment_info {dbqd.acs-subsite.www.admin.rel-segments.delete.select_segment_info {
      
    select s.segment_name 
      from rel_segments s
     where s.segment_id = :segment_id

      } {} {} {} c:/web/openacs-4/packages/acs-subsite/www/admin/rel-segments/delete.xql}
dbqd.acs-subsite.www.admin.rel-segments.elements-display-oracle.elements_select {dbqd.acs-subsite.www.admin.rel-segments.elements-display-oracle.elements_select {
    select acs_object.name(map.party_id) as name, map.rel_id, 
           decode(map.container_id, :group_id, 1, 0) as direct_p,
           acs_object.name(map.container_id) as container_name
      from rel_segment_party_map map
     where acs_permission.permission_p(map.party_id, :user_id, 'read') = 't'
       and map.segment_id = :segment_id
     order by lower(name)
} {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-subsite/www/admin/rel-segments/elements-display-oracle.xql}
dbqd.acs-subsite.www.admin.rel-segments.elements-display.elements_select {dbqd.acs-subsite.www.admin.rel-segments.elements-display.elements_select {
    select acs_object__name(map.party_id) as name, map.rel_id, 
           case when map.container_id = :group_id then 1 else 0 end as direct_p,
           acs_object__name(map.container_id) as container_name
      from rel_segment_party_map map
     where acs_permission__permission_p(map.party_id, :user_id, 'read') = 't'
       and map.segment_id = :segment_id
     order by name
} {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-subsite/www/admin/rel-segments/elements-display-postgresql.xql}
dbqd.acs-subsite.www.admin.rel-segments.elements-oracle.select_segment_info {dbqd.acs-subsite.www.admin.rel-segments.elements-oracle.select_segment_info {
      
    select s.segment_name, s.group_id,
           acs_rel_type.role_pretty_plural(r.role_two) as role_pretty_plural
      from rel_segments s, acs_rel_types r
     where s.segment_id = :segment_id
       and s.rel_type = r.rel_type

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-subsite/www/admin/rel-segments/elements-oracle.xql}
dbqd.acs-subsite.www.admin.rel-segments.elements.select_segment_info {dbqd.acs-subsite.www.admin.rel-segments.elements.select_segment_info {
      
    select s.segment_name, s.group_id,
           acs_rel_type__role_pretty_plural(r.role_two) as role_pretty_plural
      from rel_segments s, acs_rel_types r
     where s.segment_id = :segment_id
       and s.rel_type = r.rel_type

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-subsite/www/admin/rel-segments/elements-postgresql.xql}
dbqd.acs-subsite.www.admin.rel-segments.index-oracle.select_rel_segments {dbqd.acs-subsite.www.admin.rel-segments.index-oracle.select_rel_segments {
      
    select s.segment_id, s.segment_name, s.group_id, acs_object.name(s.group_id) as group_name, 
           s.rel_type, t.pretty_name as rel_type_pretty_name
      from acs_object_types t, 
           rel_segments s, 
           acs_object_party_privilege_map perm,
           application_group_segments ags
     where perm.object_id = s.segment_id
       and perm.party_id = :user_id
       and perm.privilege = 'read'
       and t.object_type = s.rel_type
       and s.segment_id = ags.segment_id
       and ags.package_id = :package_id
     order by lower(s.segment_name)

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-subsite/www/admin/rel-segments/index-oracle.xql}
dbqd.acs-subsite.www.admin.rel-segments.index.select_rel_segments {dbqd.acs-subsite.www.admin.rel-segments.index.select_rel_segments {
      
    select s.segment_id, s.segment_name, s.group_id, acs_object__name(s.group_id) as group_name, 
           s.rel_type, t.pretty_name as rel_type_pretty_name
      from acs_object_types t, 
           rel_segments s, 
           application_group_segments ags
     where acs_permission__permission_p(s.segment_id, :user_id, 'read')
       and t.object_type = s.rel_type
       and s.segment_id = ags.segment_id
       and ags.package_id = :package_id
     order by lower(s.segment_name)

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-subsite/www/admin/rel-segments/index-postgresql.xql}
dbqd.acs-subsite.www.admin.rel-segments.new-2-oracle.select_basic_info {dbqd.acs-subsite.www.admin.rel-segments.new-2-oracle.select_basic_info {
      
    select acs_group.name(:group_id) as group_name,
    nvl(acs_rel_type.role_pretty_plural(t.role_two),'Elements') as role_pretty_plural
      from acs_rel_types t
     where t.rel_type = :rel_type

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-subsite/www/admin/rel-segments/new-2-oracle.xql}
dbqd.acs-subsite.www.admin.rel-segments.new-2.select_basic_info {dbqd.acs-subsite.www.admin.rel-segments.new-2.select_basic_info {
      
    select acs_group__name(:group_id) as group_name,
    coalesce(acs_rel_type__role_pretty_plural(t.role_two),'Elements') as role_pretty_plural
      from acs_rel_types t
     where t.rel_type = :rel_type

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-subsite/www/admin/rel-segments/new-2-postgresql.xql}
dbqd.acs-subsite.www.admin.rel-segments.new-3-oracle.segments_exists_p {dbqd.acs-subsite.www.admin.rel-segments.new-3-oracle.segments_exists_p {
      
    select case when exists 
                   (select 1 from rel_segments s where s.segment_id <> :segment_id)
           then 1 else 0 end
      from dual

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-subsite/www/admin/rel-segments/new-3-oracle.xql}
dbqd.acs-subsite.www.admin.rel-segments.new-3.segments_exists_p {dbqd.acs-subsite.www.admin.rel-segments.new-3.segments_exists_p {
      
    select case when exists 
                   (select 1 from rel_segments s where s.segment_id <> :segment_id)
           then 1 else 0 end
      

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-subsite/www/admin/rel-segments/new-3-postgresql.xql}
dbqd.acs-subsite.www.admin.rel-segments.new-3.select_segment_id {dbqd.acs-subsite.www.admin.rel-segments.new-3.select_segment_id {
      
	select s.segment_id
	  from rel_segments s
	 where s.group_id = :group_id
	   and s.rel_type = :rel_type
    
      } {} {} {} c:/web/openacs-4/packages/acs-subsite/www/admin/rel-segments/new-3.xql}
dbqd.acs-subsite.www.admin.rel-segments.new-oracle.select_relation_types {dbqd.acs-subsite.www.admin.rel-segments.new-oracle.select_relation_types {
      
    select t.pretty_name, t.object_type as rel_type,
    replace(lpad(' ', (level - 1) * 4), ' ', '&nbsp;') as indent
    from acs_object_types t
    where t.object_type not in (select s.rel_type from rel_segments s where s.group_id = :group_id)
    connect by prior t.object_type = t.supertype
    start with t.object_type in ('membership_rel', 'composition_rel')
    order by lower(t.pretty_name) desc

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-subsite/www/admin/rel-segments/new-oracle.xql}
dbqd.acs-subsite.www.admin.rel-segments.new-oracle.select_basic_info {dbqd.acs-subsite.www.admin.rel-segments.new-oracle.select_basic_info {
      
    select acs_group.name(:group_id) as group_name
      from dual

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-subsite/www/admin/rel-segments/new-oracle.xql}
dbqd.acs-subsite.www.admin.rel-segments.new.select_relation_types {dbqd.acs-subsite.www.admin.rel-segments.new.select_relation_types {
    select t2.pretty_name, t2.object_type as rel_type,
	   repeat('&nbsp;', (tree_level(t2.tree_sortkey) - tree_level(t1.tree_sortkey)) * 4) as indent
      from acs_object_types t1,
	   acs_object_types t2,
           rel_segments s
     where t2.tree_sortkey between t1.tree_sortkey and tree_right(t1.tree_sortkey)
       and t1.object_type in ('membership_rel', 'composition_rel')
       and t2.object_type <> s.rel_type
       and s.group_id = :group_id
    order by lower(t2.pretty_name) desc

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-subsite/www/admin/rel-segments/new-postgresql.xql}
dbqd.acs-subsite.www.admin.rel-segments.new.select_basic_info {dbqd.acs-subsite.www.admin.rel-segments.new.select_basic_info {
      
    select acs_group__name(:group_id) as group_name
      

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-subsite/www/admin/rel-segments/new-postgresql.xql}
dbqd.acs-subsite.www.admin.rel-segments.one-oracle.select_segment_properties {dbqd.acs-subsite.www.admin.rel-segments.one-oracle.select_segment_properties {
      
    select s.segment_id, s.segment_name, s.group_id, acs_object.name(s.group_id) as group_name,
           s.rel_type, acs_object_type.pretty_name(r.rel_type) as rel_type_pretty_name,
           acs_rel_type.role_pretty_plural(r.role_two) as role_pretty_plural
      from rel_segments s, acs_rel_types r
     where s.segment_id = :segment_id
       and s.rel_type = r.rel_type

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-subsite/www/admin/rel-segments/one-oracle.xql}
dbqd.acs-subsite.www.admin.rel-segments.one.select_segment_properties {dbqd.acs-subsite.www.admin.rel-segments.one.select_segment_properties {
      
    select s.segment_id, s.segment_name, s.group_id, acs_object__name(s.group_id) as group_name,
           s.rel_type, acs_object_type__pretty_name(r.rel_type) as rel_type_pretty_name,
           acs_rel_type__role_pretty_plural(r.role_two) as role_pretty_plural
      from rel_segments s, acs_rel_types r
     where s.segment_id = :segment_id
       and s.rel_type = r.rel_type

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-subsite/www/admin/rel-segments/one-postgresql.xql}
dbqd.acs-subsite.www.admin.rel-segments.one.constraints_select {dbqd.acs-subsite.www.admin.rel-segments.one.constraints_select {
      
    select c.constraint_id, c.constraint_name, c.rel_side
      from rel_constraints c
     where c.rel_segment = :segment_id

      } {} {} {} c:/web/openacs-4/packages/acs-subsite/www/admin/rel-segments/one.xql}
dbqd.acs-subsite.www.admin.rel-segments.one.select_segment_info {dbqd.acs-subsite.www.admin.rel-segments.one.select_segment_info {
      
         select count(*) as number_elements
           from rel_segment_party_map map
         where map.segment_id = :segment_id
           and exists (select 1
                       from acs_object_party_privilege_map perm
                       where perm.object_id = map.party_id
                         and perm.party_id = :user_id
                         and perm.privilege = 'read')

      } {} {} {} c:/web/openacs-4/packages/acs-subsite/www/admin/rel-segments/one.xql}
dbqd.acs-subsite.www.admin.rel-types.add-2.update_rel_type_mapping {dbqd.acs-subsite.www.admin.rel-types.add-2.update_rel_type_mapping {
      
    insert into group_type_allowed_rels
    (constraint_id, group_type, rel_type)
    values
    (:constraint_id, :object_type, :rel_type)

      } {} {} {} c:/web/openacs-4/packages/acs-subsite/www/admin/rel-types/add-2.xql}
dbqd.acs-subsite.www.admin.rel-types.add.select_primary_relations {dbqd.acs-subsite.www.admin.rel-types.add.select_primary_relations {
      
    select o.object_type as rel_type, o.pretty_name
      from acs_object_types o
     where o.object_type in ('composition_rel','membership_rel')
       and o.object_type not in (select g.rel_type from group_type_allowed_rels g where g.group_type = :object_type)

      } {} {} {} c:/web/openacs-4/packages/acs-subsite/www/admin/rel-types/add.xql}
dbqd.acs-subsite.www.admin.rel-types.delete-2-oracle.drop_relationship_type {dbqd.acs-subsite.www.admin.rel-types.delete-2-oracle.drop_relationship_type {
      
	    BEGIN
	      acs_rel_type.drop_type( rel_type  => :rel_type,
                                      cascade_p => 't' );
	    END;
	
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-subsite/www/admin/rel-types/delete-2-oracle.xql}
dbqd.acs-subsite.www.admin.rel-types.delete-2-oracle.drop_type_table {dbqd.acs-subsite.www.admin.rel-types.delete-2-oracle.drop_type_table {
      drop table $table_name
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-subsite/www/admin/rel-types/delete-2-oracle.xql}
dbqd.acs-subsite.www.admin.rel-types.delete-2.drop_relationship_type {dbqd.acs-subsite.www.admin.rel-types.delete-2.drop_relationship_type {
	      select acs_rel_type__drop_type(:rel_type,'t')
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-subsite/www/admin/rel-types/delete-2-postgresql.xql}
dbqd.acs-subsite.www.admin.rel-types.delete-2.drop_type_table {dbqd.acs-subsite.www.admin.rel-types.delete-2.drop_type_table {
drop table $table_name
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-subsite/www/admin/rel-types/delete-2-postgresql.xql}
dbqd.acs-subsite.www.admin.rel-types.delete-2.select_rel_ids {dbqd.acs-subsite.www.admin.rel-types.delete-2.select_rel_ids {
      
	select r.rel_id
	  from acs_rels r
	 where acs_permission__permission_p(r.rel_id, :user_id, 'delete')
	  and r.rel_type = :rel_type
    
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-subsite/www/admin/rel-types/delete-2-postgresql.xql}
dbqd.acs-subsite.www.admin.rel-types.delete-2.select_segment_id {dbqd.acs-subsite.www.admin.rel-types.delete-2.select_segment_id {
      
	select s.segment_id
	  from rel_segments s
	 where acs_permission__permission_p(s.segment_id, :user_id, 'delete')
	   and s.rel_type = :rel_type
    
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-subsite/www/admin/rel-types/delete-2-postgresql.xql}
dbqd.acs-subsite.www.admin.rel-types.delete-2.select_type_info {dbqd.acs-subsite.www.admin.rel-types.delete-2.select_type_info {
      
	select t.table_name 
	  from acs_object_types t
	 where t.object_type = :rel_type
    
      } {} {} {} c:/web/openacs-4/packages/acs-subsite/www/admin/rel-types/delete-2.xql}
dbqd.acs-subsite.www.admin.rel-types.delete-2.select_rel_ids {dbqd.acs-subsite.www.admin.rel-types.delete-2.select_rel_ids {
      
	select r.rel_id
	  from acs_rels r
	 where acs_permission__permission_p(r.rel_id, :user_id, 'delete')
	  and r.rel_type = :rel_type
    
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-subsite/www/admin/rel-types/delete-2-postgresql.xql}
dbqd.acs-subsite.www.admin.rel-types.delete-2.select_segment_id {dbqd.acs-subsite.www.admin.rel-types.delete-2.select_segment_id {
      
	select s.segment_id
	  from rel_segments s
	 where acs_permission__permission_p(s.segment_id, :user_id, 'delete')
	   and s.rel_type = :rel_type
    
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-subsite/www/admin/rel-types/delete-2-postgresql.xql}
dbqd.acs-subsite.www.admin.rel-types.delete-oracle.number_subtypes {dbqd.acs-subsite.www.admin.rel-types.delete-oracle.number_subtypes {
      
    select case when exists (select 1 
                               from acs_object_types t
                              where t.supertype = :rel_type) 
                then 1 else 0 end
      from dual

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-subsite/www/admin/rel-types/delete-oracle.xql}
dbqd.acs-subsite.www.admin.rel-types.delete-oracle.select_counts {dbqd.acs-subsite.www.admin.rel-types.delete-oracle.select_counts {
      
    select (select count(*) from rel_segments where rel_type = :rel_type) as segments,
           (select count(*) from acs_rels where rel_type = :rel_type) as rels
      from dual

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-subsite/www/admin/rel-types/delete-oracle.xql}
dbqd.acs-subsite.www.admin.rel-types.delete.number_subtypes {dbqd.acs-subsite.www.admin.rel-types.delete.number_subtypes {
      
    select case when exists (select 1 
                               from acs_object_types t
                              where t.supertype = :rel_type) 
                then 1 else 0 end
      

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-subsite/www/admin/rel-types/delete-postgresql.xql}
dbqd.acs-subsite.www.admin.rel-types.delete.select_counts {dbqd.acs-subsite.www.admin.rel-types.delete.select_counts {
      
    select (select count(*) from rel_segments where rel_type = :rel_type) as segments,
           (select count(*) from acs_rels where rel_type = :rel_type) as rels
      

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-subsite/www/admin/rel-types/delete-postgresql.xql}
dbqd.acs-subsite.www.admin.rel-types.delete.select_pretty_name {dbqd.acs-subsite.www.admin.rel-types.delete.select_pretty_name {
      
    select t.pretty_name
      from acs_object_types t
     where t.object_type = :rel_type

      } {} {} {} c:/web/openacs-4/packages/acs-subsite/www/admin/rel-types/delete.xql}
dbqd.acs-subsite.www.admin.rel-types.delete.select_subtypes {dbqd.acs-subsite.www.admin.rel-types.delete.select_subtypes {
      
	select t.object_type as rel_type, t.pretty_name
          from acs_object_types t
         where t.supertype = :rel_type
    
      } {} {} {} c:/web/openacs-4/packages/acs-subsite/www/admin/rel-types/delete.xql}
dbqd.acs-subsite.www.admin.rel-types.index-oracle.select_relation_types {dbqd.acs-subsite.www.admin.rel-types.index-oracle.select_relation_types {
      
    select t.object_type as rel_type, t.pretty_name, t.indent, 
           nvl(num.number_relationships,0) as number_relationships
      from (select t.pretty_name, t.object_type, rownum as inner_rownum,
                   replace(lpad(' ', (level - 1) * 4), ' ', '&nbsp;') as indent
              from acs_object_types t
           connect by prior t.object_type = t.supertype
             start with t.object_type in ('membership_rel','composition_rel')
             order by lower(t.pretty_name)) t,
           (select r.rel_type, count(*) as number_relationships
              from acs_objects o, acs_rel_types r, 
                   app_group_distinct_rel_map m
             where r.rel_type = o.object_type
               and o.object_id = m.rel_id
               and m.package_id = :package_id
             group by r.rel_type) num
     where t.object_type = num.rel_type(+)
    order by t.inner_rownum

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-subsite/www/admin/rel-types/index-oracle.xql}
dbqd.acs-subsite.www.admin.rel-types.index.select_relation_types {dbqd.acs-subsite.www.admin.rel-types.index.select_relation_types {
    select t.object_type as rel_type, t.pretty_name, t.indent, 
           coalesce(num.number_relationships,0) as number_relationships
      from (select t2.pretty_name, t2.object_type, t2.tree_sortkey as inner_sortkey,
                   repeat('&nbsp;', (tree_level(t2.tree_sortkey) - tree_level(t1.tree_sortkey)) * 4) as indent
              from acs_object_types t1,
		   acs_object_types t2
	     where t2.tree_sortkey between t1.tree_sortkey and tree_right(t1.tree_sortkey)
	       and t1.object_type in ('membership_rel', 'composition_rel')) t left join
           (select r.rel_type, count(*) as number_relationships
              from acs_objects o, acs_rel_types r, 
                   app_group_distinct_rel_map m
             where r.rel_type = o.object_type
               and o.object_id = m.rel_id
               and m.package_id = :package_id
             group by r.rel_type) num
	on (t.object_type = num.rel_type)
    order by t.inner_sortkey

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-subsite/www/admin/rel-types/index-postgresql.xql}
dbqd.acs-subsite.www.admin.rel-types.mapping-remove-2.delete_group_rel_mapping {dbqd.acs-subsite.www.admin.rel-types.mapping-remove-2.delete_group_rel_mapping {
      
	delete from group_rels 
	 where group_rel_id = :group_rel_id
    
      } {} {} {} c:/web/openacs-4/packages/acs-subsite/www/admin/rel-types/mapping-remove-2.xql}
dbqd.acs-subsite.www.admin.rel-types.mapping-remove-2.delete_group_type_rel_mapping {dbqd.acs-subsite.www.admin.rel-types.mapping-remove-2.delete_group_type_rel_mapping {
      
	delete from group_type_rels 
	 where group_type_rel_id = :group_type_rel_id
    
      } {} {} {} c:/web/openacs-4/packages/acs-subsite/www/admin/rel-types/mapping-remove-2.xql}
dbqd.acs-subsite.www.admin.rel-types.mapping-remove.select_info {dbqd.acs-subsite.www.admin.rel-types.mapping-remove.select_info {
      
    select g.rel_type, g.group_type, 
           t.pretty_name as rel_pretty_name, t2.pretty_name as group_type_pretty_name
      from acs_object_types t, acs_object_types t2, group_type_rels g
     where g.group_rel_type_id = :group_rel_type_id
       and t.object_type = g.rel_type
       and t2.object_type = g.group_type

      } {} {} {} c:/web/openacs-4/packages/acs-subsite/www/admin/rel-types/mapping-remove.xql}
dbqd.acs-subsite.www.admin.rel-types.new-2-oracle.select_object_types_one {dbqd.acs-subsite.www.admin.rel-types.new-2-oracle.select_object_types_one {
      
    select replace(lpad(' ', (level - 1) * 4), ' ', '&nbsp;') || t.pretty_name, 
           t.object_type as rel_type
      from acs_object_types t
   connect by prior t.object_type = t.supertype
     start with t.object_type=:max_object_type_one

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-subsite/www/admin/rel-types/new-2-oracle.xql}
dbqd.acs-subsite.www.admin.rel-types.new-2-oracle.select_object_types_two {dbqd.acs-subsite.www.admin.rel-types.new-2-oracle.select_object_types_two {
      
    select replace(lpad(' ', (level - 1) * 4), ' ', '&nbsp;') || t.pretty_name, 
           t.object_type as rel_type
      from acs_object_types t
   connect by prior t.object_type = t.supertype
     start with t.object_type=:max_object_type_two

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-subsite/www/admin/rel-types/new-2-oracle.xql}
dbqd.acs-subsite.www.admin.rel-types.new-2-oracle.pretty_name_unique {dbqd.acs-subsite.www.admin.rel-types.new-2-oracle.pretty_name_unique {
      
	    select case when exists (select 1 from acs_object_types t where t.pretty_name = :pretty_name)
                    then 1 else 0 end
	      from dual
	
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-subsite/www/admin/rel-types/new-2-oracle.xql}
dbqd.acs-subsite.www.admin.rel-types.new-2-oracle.pretty_plural_unique {dbqd.acs-subsite.www.admin.rel-types.new-2-oracle.pretty_plural_unique {
      
	    select case when exists (select 1 from acs_object_types t where t.pretty_plural = :pretty_plural)
                    then 1 else 0 end
	      from dual
	
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-subsite/www/admin/rel-types/new-2-oracle.xql}
dbqd.acs-subsite.www.admin.rel-types.new-2.select_object_types_one {dbqd.acs-subsite.www.admin.rel-types.new-2.select_object_types_one {

    select repeat('&nbsp;', ((tree_level(t2.tree_sortkey) - tree_level(t1.tree_sortkey)) * 4)) || t2.pretty_name, 
           t2.object_type as rel_type
      from acs_object_types t1,
	   acs_object_types t2
     where t2.tree_sortkey between t1.tree_sortkey and tree_right(t1.tree_sortkey)
       and t1.object_type = :max_object_type_one

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-subsite/www/admin/rel-types/new-2-postgresql.xql}
dbqd.acs-subsite.www.admin.rel-types.new-2.select_object_types_two {dbqd.acs-subsite.www.admin.rel-types.new-2.select_object_types_two {

    select repeat('&nbsp;', ((tree_level(t2.tree_sortkey) - tree_level(t1.tree_sortkey)) * 4)) || t2.pretty_name, 
           t2.object_type as rel_type
      from acs_object_types t1,
	   acs_object_types t2
     where t2.tree_sortkey between t1.tree_sortkey and tree_right(t1.tree_sortkey)
       and t1.object_type = :max_object_type_two

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-subsite/www/admin/rel-types/new-2-postgresql.xql}
dbqd.acs-subsite.www.admin.rel-types.new-2.pretty_name_unique {dbqd.acs-subsite.www.admin.rel-types.new-2.pretty_name_unique {
      
	    select case when exists (select 1 from acs_object_types t where t.pretty_name = :pretty_name)
                    then 1 else 0 end
	      
	
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-subsite/www/admin/rel-types/new-2-postgresql.xql}
dbqd.acs-subsite.www.admin.rel-types.new-2.pretty_plural_unique {dbqd.acs-subsite.www.admin.rel-types.new-2.pretty_plural_unique {
      
	    select case when exists (select 1 from acs_object_types t where t.pretty_plural = :pretty_plural)
                    then 1 else 0 end
	      
	
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-subsite/www/admin/rel-types/new-2-postgresql.xql}
dbqd.acs-subsite.www.admin.rel-types.new-2.select_object_types {dbqd.acs-subsite.www.admin.rel-types.new-2.select_object_types {
      
    select r.object_type_one as max_object_type_one, 
           r.object_type_two as max_object_type_two,
           t.pretty_name as supertype_pretty_name,
           r.role_one as supertype_role_one, r.role_two as supertype_role_two,
           r.min_n_rels_one as supertype_min_n_rels_one,
           r.max_n_rels_one as supertype_max_n_rels_one,
           r.min_n_rels_two as supertype_min_n_rels_two,
           r.max_n_rels_two as supertype_max_n_rels_two
      from acs_object_types t, acs_rel_types r
     where r.rel_type = :supertype
       and r.rel_type = t.object_type

      } {} {} {} c:/web/openacs-4/packages/acs-subsite/www/admin/rel-types/new-2.xql}
dbqd.acs-subsite.www.admin.rel-types.new-2.select_roles {dbqd.acs-subsite.www.admin.rel-types.new-2.select_roles {
      
    select r.pretty_name, r.role
      from acs_rel_roles r
     order by lower(r.role)

      } {} {} {} c:/web/openacs-4/packages/acs-subsite/www/admin/rel-types/new-2.xql}
dbqd.acs-subsite.www.admin.rel-types.new-oracle.select_supertypes {dbqd.acs-subsite.www.admin.rel-types.new-oracle.select_supertypes {
      
    select replace(lpad(' ', (level - 1) * 4), ' ', '&nbsp;') || t.pretty_name as name,
           t.object_type
      from acs_object_types t
   connect by prior t.object_type = t.supertype
     start with t.object_type in ('membership_rel','composition_rel')

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-subsite/www/admin/rel-types/new-oracle.xql}
dbqd.acs-subsite.www.admin.rel-types.new.select_supertypes {dbqd.acs-subsite.www.admin.rel-types.new.select_supertypes {

    select repeat('&nbsp;', (tree_level(t2.tree_sortkey) - tree_level(t1.tree_sortkey)) * 4) || t2.pretty_name as name,
           t2.object_type
      from acs_object_types t1,
	   acs_object_types t2
     where t2.tree_sortkey between t1.tree_sortkey and tree_right(t1.tree_sortkey)
       and t1.object_type in ('membership_rel', 'composition_rel')

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-subsite/www/admin/rel-types/new-postgresql.xql}
dbqd.acs-subsite.www.admin.rel-types.one-oracle.select_rel_type_properties {dbqd.acs-subsite.www.admin.rel-types.one-oracle.select_rel_type_properties {
      
    select t1.pretty_name as object_type_one_pretty_name, 
           r.object_type_one, acs_rel_type.role_pretty_name(r.role_one) as role_one_pretty_name, 
           r.role_one, r.min_n_rels_one, r.max_n_rels_one,
           t2.pretty_name as object_type_two_pretty_name, 
           r.object_type_two, acs_rel_type.role_pretty_name(r.role_two) as role_two_pretty_name, 
           r.role_two, r.min_n_rels_two, r.max_n_rels_two
      from acs_rel_types r, acs_object_types t1, acs_object_types t2
     where r.rel_type = :rel_type
       and r.object_type_one = t1.object_type
       and r.object_type_two = t2.object_type

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-subsite/www/admin/rel-types/one-oracle.xql}
dbqd.acs-subsite.www.admin.rel-types.one-oracle.rels_select {dbqd.acs-subsite.www.admin.rel-types.one-oracle.rels_select {
      
    select inner.* 
      from (select r.rel_id, acs_object.name(r.object_id_one) || ' and ' || acs_object.name(r.object_id_two) as name
              from acs_rels r, acs_object_party_privilege_map perm,
                   app_group_distinct_rel_map m
             where perm.object_id = r.rel_id
               and perm.party_id = :user_id
               and perm.privilege = 'read'
               and r.rel_type = :rel_type
               and m.rel_id = r.rel_id
               and m.package_id = :package_id
             order by lower(acs_object.name(r.object_id_one)), lower(acs_object.name(r.object_id_two))) inner
    where rownum <= 26

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-subsite/www/admin/rel-types/one-oracle.xql}
dbqd.acs-subsite.www.admin.rel-types.one.select_rel_type_properties {dbqd.acs-subsite.www.admin.rel-types.one.select_rel_type_properties {
      
    select t1.pretty_name as object_type_one_pretty_name, 
           r.object_type_one, acs_rel_type__role_pretty_name(r.role_one) as role_one_pretty_name, 
           r.role_one, r.min_n_rels_one, r.max_n_rels_one,
           t2.pretty_name as object_type_two_pretty_name, 
           r.object_type_two, acs_rel_type__role_pretty_name(r.role_two) as role_two_pretty_name, 
           r.role_two, r.min_n_rels_two, r.max_n_rels_two
      from acs_rel_types r, acs_object_types t1, acs_object_types t2
     where r.rel_type = :rel_type
       and r.object_type_one = t1.object_type
       and r.object_type_two = t2.object_type

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-subsite/www/admin/rel-types/one-postgresql.xql}
dbqd.acs-subsite.www.admin.rel-types.one.rels_select {dbqd.acs-subsite.www.admin.rel-types.one.rels_select {

    select v_inner.* 
      from (select r.rel_id, acs_object__name(r.object_id_one) || ' and ' || acs_object__name(r.object_id_two) as name
              from acs_rels r, app_group_distinct_rel_map m
             where acs_permission__permission_p(r.rel_id, :user_id, 'read')
               and r.rel_type = :rel_type
               and m.rel_id = r.rel_id
               and m.package_id = :package_id
             order by lower(acs_object__name(r.object_id_one)), lower(acs_object__name(r.object_id_two))) v_inner
	limit 26

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-subsite/www/admin/rel-types/one-postgresql.xql}
dbqd.acs-subsite.www.admin.rel-types.one.select_pretty_name {dbqd.acs-subsite.www.admin.rel-types.one.select_pretty_name {
      
    select t.pretty_name as rel_type_pretty_name, t.table_name, t.id_column, t.dynamic_p
      from acs_object_types t
     where t.object_type = :rel_type

      } {} {} {} c:/web/openacs-4/packages/acs-subsite/www/admin/rel-types/one.xql}
dbqd.acs-subsite.www.admin.rel-types.one.attributes_select {dbqd.acs-subsite.www.admin.rel-types.one.attributes_select {
      
    select a.attribute_id, a.pretty_name
      from acs_attributes a
     where a.object_type = :rel_type

      } {} {} {} c:/web/openacs-4/packages/acs-subsite/www/admin/rel-types/one.xql}
dbqd.acs-subsite.www.admin.rel-types.rels-list-oracle.rels_select {dbqd.acs-subsite.www.admin.rel-types.rels-list-oracle.rels_select {
      
    select r.rel_id, acs_object.name(r.object_id_one) || ' and ' || acs_object.name(r.object_id_two) as name
      from acs_rels r, acs_object_party_privilege_map perm,
           app_group_distinct_rel_map m
     where perm.object_id = r.rel_id
       and perm.party_id = :user_id
       and perm.privilege = 'read'
       and r.rel_type = :rel_type
       and m.rel_id = r.rel_id
       and m.package_id = :package_id
     order by lower(name)

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-subsite/www/admin/rel-types/rels-list-oracle.xql}
dbqd.acs-subsite.www.admin.rel-types.rels-list.rels_select {dbqd.acs-subsite.www.admin.rel-types.rels-list.rels_select {
      
    select r.rel_id, acs_object__name(r.object_id_one) || ' and ' || acs_object__name(r.object_id_two) as name
      from acs_rels r, app_group_distinct_rel_map m
     where acs_permission__permission_p(r.rel_id, :user_id, 'read')
       and r.rel_type = :rel_type
       and m.rel_id = r.rel_id
       and m.package_id = :package_id
     order by lower(name)

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-subsite/www/admin/rel-types/rels-list-postgresql.xql}
dbqd.acs-subsite.www.admin.rel-types.rels-list.select_pretty_name {dbqd.acs-subsite.www.admin.rel-types.rels-list.select_pretty_name {
      
    select t.pretty_name as rel_type_pretty_name
      from acs_object_types t
     where t.object_type = :rel_type

      } {} {} {} c:/web/openacs-4/packages/acs-subsite/www/admin/rel-types/rels-list.xql}
dbqd.acs-subsite.www.admin.rel-types.roles.delete-2-oracle.drop_role {dbqd.acs-subsite.www.admin.rel-types.roles.delete-2-oracle.drop_role {
begin acs_rel_type.drop_role(:role);end;
} {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-subsite/www/admin/rel-types/roles/delete-2-oracle.xql}
dbqd.acs-subsite.www.admin.rel-types.roles.delete-2-oracle.role_used_p {dbqd.acs-subsite.www.admin.rel-types.roles.delete-2-oracle.role_used_p {
      
		select case when exists (select 1 from acs_rel_types where role_one = :role or role_two = :role) then 1 else 0 end
		from dual
	    
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-subsite/www/admin/rel-types/roles/delete-2-oracle.xql}
dbqd.acs-subsite.www.admin.rel-types.roles.delete-2.drop_role {dbqd.acs-subsite.www.admin.rel-types.roles.delete-2.drop_role {
select acs_rel_type__drop_role(:role)
} {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-subsite/www/admin/rel-types/roles/delete-2-postgresql.xql}
dbqd.acs-subsite.www.admin.rel-types.roles.delete-2.role_used_p {dbqd.acs-subsite.www.admin.rel-types.roles.delete-2.role_used_p {
      
		select case when exists (select 1 from acs_rel_types where role_one = :role or role_two = :role) then 1 else 0 end
		
	    
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-subsite/www/admin/rel-types/roles/delete-2-postgresql.xql}
dbqd.acs-subsite.www.admin.rel-types.roles.delete.select_role_pretty_name {dbqd.acs-subsite.www.admin.rel-types.roles.delete.select_role_pretty_name {
      
    select r.pretty_name from acs_rel_roles r where r.role = :role

      } {} {} {} c:/web/openacs-4/packages/acs-subsite/www/admin/rel-types/roles/delete.xql}
dbqd.acs-subsite.www.admin.rel-types.roles.edit.select_role_props {dbqd.acs-subsite.www.admin.rel-types.roles.edit.select_role_props {
      
    select r.pretty_name, r.pretty_plural
      from acs_rel_roles r 
     where r.role = :role

      } {} {} {} c:/web/openacs-4/packages/acs-subsite/www/admin/rel-types/roles/edit.xql}
dbqd.acs-subsite.www.admin.rel-types.roles.edit.update_role {dbqd.acs-subsite.www.admin.rel-types.roles.edit.update_role {
      
	update acs_rel_roles
	   set pretty_name = :pretty_name,
	       pretty_plural = :pretty_plural
	 where role = :role
    
      } {} {} {} c:/web/openacs-4/packages/acs-subsite/www/admin/rel-types/roles/edit.xql}
dbqd.acs-subsite.www.admin.rel-types.roles.index-oracle.select_roles {dbqd.acs-subsite.www.admin.rel-types.roles.index-oracle.select_roles {
      
    select r.role, r.pretty_name, nvl(num1.number_rels,0) + nvl(num2.number_rels,0) as number_rel_types
      from (select t.role_one as role, count(*) as number_rels
             from acs_rel_types t
            group by t.role_one) num1,
           (select t.role_two as role, count(*) as number_rels
             from acs_rel_types t
            group by t.role_two) num2,
           acs_rel_roles r
     where r.role = num1.role(+)
       and r.role = num2.role(+)
     order by lower(r.role)

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-subsite/www/admin/rel-types/roles/index-oracle.xql}
dbqd.acs-subsite.www.admin.rel-types.roles.index.select_roles {dbqd.acs-subsite.www.admin.rel-types.roles.index.select_roles {
    select r.role, r.pretty_name, coalesce(num1.number_rels,0) + coalesce(num2.number_rels,0) as number_rel_types
      from acs_rel_roles r left join
	(select t.role_one as role, count(*) as number_rels
             from acs_rel_types t
            group by t.role_one) num1 on r.role=num1.role left join
           (select t.role_two as role, count(*) as number_rels
             from acs_rel_types t
            group by t.role_two) num2 on r.role=num2.role
     order by lower(r.role)

      } {} {} {} c:/web/openacs-4/packages/acs-subsite/www/admin/rel-types/roles/index.xql}
dbqd.acs-subsite.www.admin.rel-types.roles.new-oracle.create_role {dbqd.acs-subsite.www.admin.rel-types.roles.new-oracle.create_role {
      
	    begin acs_rel_type.create_role(role => :role, pretty_name => :pretty_name, pretty_plural => :pretty_plural); end;
	
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-subsite/www/admin/rel-types/roles/new-oracle.xql}
dbqd.acs-subsite.www.admin.rel-types.roles.new.create_role {dbqd.acs-subsite.www.admin.rel-types.roles.new.create_role {
	    select acs_rel_type__create_role(:role, :pretty_name, :pretty_plural)
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-subsite/www/admin/rel-types/roles/new-postgresql.xql}
dbqd.acs-subsite.www.admin.rel-types.roles.new.role_exists_p {dbqd.acs-subsite.www.admin.rel-types.roles.new.role_exists_p {
      
	select count(r.role) from acs_rel_roles r where r.role = :role
    
      } {} {} {} c:/web/openacs-4/packages/acs-subsite/www/admin/rel-types/roles/new.xql}
dbqd.acs-subsite.www.admin.rel-types.roles.one.select_role_props {dbqd.acs-subsite.www.admin.rel-types.roles.one.select_role_props {
      
    select r.pretty_name, r.pretty_plural
      from acs_rel_roles r 
     where r.role = :role

      } {} {} {} c:/web/openacs-4/packages/acs-subsite/www/admin/rel-types/roles/one.xql}
dbqd.acs-subsite.www.admin.rel-types.roles.one.select_rel_types_one {dbqd.acs-subsite.www.admin.rel-types.roles.one.select_rel_types_one {
      
    select r.rel_type as role, t.pretty_name, r.rel_type,
           case when r.role_one = :role then 'Side one' else 'Side two' end as side
      from acs_object_types t, acs_rel_types r
     where t.object_type = r.rel_type
       and (r.role_one = :role or r.role_two = :role)
     order by side, t.pretty_name

      } {} {} {} c:/web/openacs-4/packages/acs-subsite/www/admin/rel-types/roles/one.xql}
dbqd.acs-subsite.www.admin.relations.add-oracle.rel_type_info {dbqd.acs-subsite.www.admin.relations.add-oracle.rel_type_info {
      
    select t.object_type_two, t.role_two as role, 
           acs_rel_type.role_pretty_name(t.role_two) as role_pretty_name,
           acs_object_type.pretty_name(t.object_type_two) as object_type_two_name,
           ancestor_rel_types.object_type as ancestor_rel_type
      from acs_rel_types t, acs_object_types obj_types, 
           acs_object_types ancestor_rel_types
     where t.rel_type = :rel_type
       and t.rel_type = obj_types.object_type
       and ancestor_rel_types.supertype = 'relationship'
       and ancestor_rel_types.object_type in (
               select object_type from acs_object_types
               start with object_type = :rel_type
               connect by object_type = prior supertype
           )

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-subsite/www/admin/relations/add-oracle.xql}
dbqd.acs-subsite.www.admin.relations.add-oracle.select_parties_scope_query {dbqd.acs-subsite.www.admin.relations.add-oracle.select_parties_scope_query {
, (select element_id from application_group_element_map
   where package_id = :package_id) app_elements
} {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-subsite/www/admin/relations/add-oracle.xql}
dbqd.acs-subsite.www.admin.relations.add-oracle.select_parties {dbqd.acs-subsite.www.admin.relations.add-oracle.select_parties {
      
            select DISTINCT
                   decode(groups.group_id,
                          null, case when persons.person_id = null then 'INVALID' else persons.first_names || ' ' || persons.last_name end,
                          groups.group_name) as party_name,
                   p.party_id
            from (select o.object_id as party_id
                  from acs_objects o,
                       (select object_type from acs_object_types ot
                        start with $start_with
                        connect by prior ot.object_type = ot.supertype) t
                  where o.object_type = t.object_type) p,
                 (select element_id
                  from group_element_map
                  where group_id = :group_id and rel_type = :rel_type
                  UNION ALL
                  select to_number(:group_id) from dual) m,
                 (select object_id
                  from all_object_party_privilege_map
                  where party_id = :user_id and privilege = 'read') perm,
                 (select party_id
                  from rc_parties_in_required_segs
                  where group_id = :group_id 
                    and rel_type = :rel_type) pirs $scope_query,
                 groups,
                 persons
            where p.party_id = m.element_id(+)
              and m.element_id is null
              and p.party_id = perm.object_id
              and p.party_id = pirs.party_id $scope_clause
              and p.party_id = groups.group_id(+)
              and p.party_id = persons.person_id(+)
    
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-subsite/www/admin/relations/add-oracle.xql}
dbqd.acs-subsite.www.admin.relations.add.rel_type_info {dbqd.acs-subsite.www.admin.relations.add.rel_type_info {
    select t.object_type_two, t.role_two as role, 
           acs_rel_type__role_pretty_name(t.role_two) as role_pretty_name,
           acs_object_type__pretty_name(t.object_type_two) as object_type_two_name,
           ancestor_rel_types.object_type as ancestor_rel_type
      from acs_rel_types t, acs_object_types obj_types, 
           acs_object_types ancestor_rel_types
     where t.rel_type = :rel_type
       and t.rel_type = obj_types.object_type
       and ancestor_rel_types.supertype = 'relationship'
       and ancestor_rel_types.object_type in (
	      	select t2.object_type from 
		acs_object_types t1, acs_object_types t2
		where t1.object_type= :rel_type
		and t1.tree_sortkey between t2.tree_sortkey and tree_right(t2.tree_sortkey)
	)

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-subsite/www/admin/relations/add-postgresql.xql}
dbqd.acs-subsite.www.admin.relations.add.select_parties_scope_query {dbqd.acs-subsite.www.admin.relations.add.select_parties_scope_query {
cross join (select element_id from application_group_element_map
   where package_id = :package_id) app_elements
} {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-subsite/www/admin/relations/add-postgresql.xql}
dbqd.acs-subsite.www.admin.relations.add.select_parties {dbqd.acs-subsite.www.admin.relations.add.select_parties {
            select DISTINCT
                   case when groups.group_id is null then
                          case when persons.person_id is null then 'INVALID' 
				else persons.first_names || ' ' || persons.last_name 
			  end else
                   groups.group_name end as party_name,
                   p.party_id
            from (select o.object_id as party_id
                  from acs_objects o,
                       (select ot2.object_type from acs_object_types ot, acs_object_types ot2
                        where ot2.tree_sortkey between ot.tree_sortkey and tree_right(ot.tree_sortkey)
                          and $start_with) t
                  where o.object_type = t.object_type) p left join
                 (select element_id
                  from group_element_map
                  where group_id = :group_id and rel_type = :rel_type
                  UNION ALL
                  select :group_id::integer ) m on (p.party_id = m.element_id) cross join
                 (select object_id
                  from all_object_party_privilege_map
                  where party_id = :user_id and privilege = 'read') perm cross join
                 (select party_id
                  from rc_parties_in_required_segs
                  where group_id = :group_id 
                    and rel_type = :rel_type) pirs $scope_query left join
                 groups on (p.party_id = groups.group_id) 
		left join persons on (p.party_id = persons.person_id)
            where 
              m.element_id is null
              and p.party_id = perm.object_id
              and p.party_id = pirs.party_id $scope_clause
    
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-subsite/www/admin/relations/add-postgresql.xql}
dbqd.acs-subsite.www.admin.relations.add.group_info {dbqd.acs-subsite.www.admin.relations.add.group_info {
      
    select group_name, join_policy
    from groups
    where group_id = :group_id

      } {} {} {} c:/web/openacs-4/packages/acs-subsite/www/admin/relations/add.xql}
dbqd.acs-subsite.www.admin.relations.change-member-state.update_member_state {dbqd.acs-subsite.www.admin.relations.change-member-state.update_member_state {
      
    update membership_rels
    set member_state = :member_state
    where rel_id = :rel_id

      } {} {} {} c:/web/openacs-4/packages/acs-subsite/www/admin/relations/change-member-state.xql}
dbqd.acs-subsite.www.admin.relations.one-oracle.select_rel_info {dbqd.acs-subsite.www.admin.relations.one-oracle.select_rel_info {
      
    select r.rel_type, acs_object_type.pretty_name(t.rel_type) as rel_type_pretty_name,
           acs_rel_type.role_pretty_name(t.role_one) as role_one_pretty_name,
           acs_rel_type.role_pretty_name(t.role_two) as role_two_pretty_name,
           t.object_type_two as object_type_two,
           acs_object.name(r.object_id_one) as object_id_one_name,
           r.object_id_one,
           acs_object.name(r.object_id_two) as object_id_two_name,
           r.object_id_two
      from acs_rels r, acs_rel_types t
     where r.rel_id = :rel_id
       and r.rel_type = t.rel_type
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-subsite/www/admin/relations/one-oracle.xql}
dbqd.acs-subsite.www.admin.relations.one.select_rel_info {dbqd.acs-subsite.www.admin.relations.one.select_rel_info {
      
    select r.rel_type, acs_object_type__pretty_name(t.rel_type) as rel_type_pretty_name,
           acs_rel_type__role_pretty_name(t.role_one) as role_one_pretty_name,
           acs_rel_type__role_pretty_name(t.role_two) as role_two_pretty_name,
           t.object_type_two as object_type_two,
           acs_object__name(r.object_id_one) as object_id_one_name,
           r.object_id_one,
           acs_object__name(r.object_id_two) as object_id_two_name,
           r.object_id_two
      from acs_rels r, acs_rel_types t
     where r.rel_id = :rel_id
       and r.rel_type = t.rel_type
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-subsite/www/admin/relations/one-postgresql.xql}
dbqd.acs-subsite.www.admin.relations.one.select_member_state {dbqd.acs-subsite.www.admin.relations.one.select_member_state {
      
    select member_state from membership_rels
    where rel_id = :rel_id

      } {} {} {} c:/web/openacs-4/packages/acs-subsite/www/admin/relations/one.xql}
dbqd.acs-subsite.www.admin.relations.remove-oracle.select_rel_info {dbqd.acs-subsite.www.admin.relations.remove-oracle.select_rel_info {
      
    select acs_object_type.pretty_name(r.rel_type) as rel_type_pretty_name,
           acs_object.name(r.object_id_one) as object_id_one_name,
           acs_object.name(r.object_id_two) as object_id_two_name,
           r.object_id_two
      from acs_rels r
     where r.rel_id = :rel_id
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-subsite/www/admin/relations/remove-oracle.xql}
dbqd.acs-subsite.www.admin.relations.remove-oracle.select_dependants {dbqd.acs-subsite.www.admin.relations.remove-oracle.select_dependants {
      
	select r.viol_rel_id as rel_id,
	       acs_object_type.pretty_name(r.viol_rel_type) as rel_type_pretty_name,
	       acs_object.name(r.viol_object_id_one) as object_id_one_name, 
	       acs_object.name(r.viol_object_id_two) as object_id_two_name
	  from rc_violations_by_removing_rel r
	 where r.rel_id = :rel_id
    
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-subsite/www/admin/relations/remove-oracle.xql}
dbqd.acs-subsite.www.admin.relations.remove.select_rel_info {dbqd.acs-subsite.www.admin.relations.remove.select_rel_info {
      
    select acs_object_type__pretty_name(r.rel_type) as rel_type_pretty_name,
           acs_object__name(r.object_id_one) as object_id_one_name,
           acs_object__name(r.object_id_two) as object_id_two_name,
           r.object_id_two
      from acs_rels r
     where r.rel_id = :rel_id
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-subsite/www/admin/relations/remove-postgresql.xql}
dbqd.acs-subsite.www.admin.relations.remove.select_dependants {dbqd.acs-subsite.www.admin.relations.remove.select_dependants {
      
	select r.viol_rel_id as rel_id,
	       acs_object_type__pretty_name(r.viol_rel_type) as rel_type_pretty_name,
	       acs_object__name(r.viol_object_id_one) as object_id_one_name, 
	       acs_object__name(r.viol_object_id_two) as object_id_two_name
	  from rc_violations_by_removing_rel r
	 where r.rel_id = :rel_id
    
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-subsite/www/admin/relations/remove-postgresql.xql}
dbqd.acs-subsite.www.admin.site-map.application-new-oracle.package_types {dbqd.acs-subsite.www.admin.site-map.application-new-oracle.package_types {

    select pretty_name, package_key
    from   apm_package_types
    where  not (apm_package.singleton_p(package_key) = 1 and
                apm_package.num_instances(package_key) >= 1)
    order  by upper(pretty_name)

        } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-subsite/www/admin/site-map/application-new-oracle.xql}
dbqd.acs-subsite.www.admin.site-map.application-new.package_types {dbqd.acs-subsite.www.admin.site-map.application-new.package_types {

    select pretty_name, package_key
    from   apm_package_types
    where  not (apm_package__singleton_p(package_key) = 1 and
                apm_package__num_instances(package_key) >= 1)
    order  by upper(pretty_name)

        } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-subsite/www/admin/site-map/application-new-postgresql.xql}
dbqd.acs-subsite.www.admin.site-map.index-oracle.path_select {dbqd.acs-subsite.www.admin.site-map.index-oracle.path_select {
            select node_id,
                   name,
                   directory_p,
                   level,
                   acs_object.name(object_id) as obj_name,
                   acs_permission.permission_p(object_id, :user_id, 'admin') as admin_p
            from site_nodes
            start with node_id = :root_id
            connect by node_id = prior parent_id
            order by level desc
        } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-subsite/www/admin/site-map/index-oracle.xql}
dbqd.acs-subsite.www.admin.site-map.index-oracle.nodes_select {dbqd.acs-subsite.www.admin.site-map.index-oracle.nodes_select {
            select package_id,
                   package_key,
                   (select pretty_name from apm_package_types where package_key = p.package_key) as package_pretty_name,
                   apm_package_type.num_parameters(package_key) parameter_count,
                   node_id,
                   url,
                   parent_url,
                   name,
                   root_p,
                   mylevel - 1 as mylevel,
                   object_id,
                   object_name,
                   directory_p,
                   parent_id,
                   n_children,
                   decode(acs_permission.permission_p(object_id, :user_id, 'admin'), 't', 1, 0) object_admin_p
            from apm_packages p,
                 (select node_id,
                         site_node.url(node_id) as url,
                         site_node.url(parent_id) as parent_url,
                         name,
                         (select count(*)
                          from site_nodes
                          where parent_id = n.node_id) as n_children,
                         decode(node_id, site_node.node_id('/'), 1, 0) as root_p,
                         level as mylevel,
                         object_id,
                         acs_object.name(object_id) as object_name,
                         directory_p,
                         parent_id
                  from site_nodes n
                  where (object_id is null
                  or acs_permission.permission_p(object_id, :user_id, 'read') = 't')
            start with node_id = nvl(:root_id, site_node.node_id('/'))
            connect by prior node_id = parent_id and parent_id in ([join $expand ", "])) site_map
            where site_map.object_id = p.package_id (+)
            order by url
        } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-subsite/www/admin/site-map/index-oracle.xql}
dbqd.acs-subsite.www.admin.site-map.index-oracle.services_select {dbqd.acs-subsite.www.admin.site-map.index-oracle.services_select {
            select package_id,
                   ap.package_key,
                   acs_object.name(package_id) as instance_name,
                   apm_package_type.num_parameters(ap.package_key) as parameter_count
            from apm_packages ap,
                 apm_package_types
            where ap.package_key = apm_package_types.package_key
            and package_type = 'apm_service'
            and (
                    acs_permission.permission_p(package_id, :user_id, 'read') = 't'
                 or acs_permission.permission_p(package_id, acs.magic_object_id('the_public'), 'read') = 't'
                )
            order by instance_name
        } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-subsite/www/admin/site-map/index-oracle.xql}
dbqd.acs-subsite.www.admin.site-map.index.path_select {dbqd.acs-subsite.www.admin.site-map.index.path_select {
            select s2.node_id,
                   s2.name,
                   s2.directory_p,
                   tree_level(s2.tree_sortkey) as level,
                   acs_object__name(s2.object_id) as obj_name,
                   acs_permission__permission_p(s2.object_id, :user_id, 'admin') as admin_p
            from (select tree_ancestor_keys(site_node_get_tree_sortkey(:root_id)) as tree_sortkey) parents,
                 site_nodes s2
            where s2.tree_sortkey = parents.tree_sortkey
            order by level
        } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-subsite/www/admin/site-map/index-postgresql.xql}
dbqd.acs-subsite.www.admin.site-map.index.nodes_select {dbqd.acs-subsite.www.admin.site-map.index.nodes_select {
            select package_id,
                   package_key,
                   pretty_name as package_pretty_name,
                   apm_package_type__num_parameters(package_key) as parameter_count,
                   node_id, url, parent_url, name, root_p, mylevel, object_id,
                   object_name, directory_p, parent_id, n_children,
                   (select case when acs_permission__permission_p(object_id, :user_id, 'admin') = 't' then 1 else 0 end) as object_admin_p
            from apm_packages p join apm_package_types using (package_key) right outer join
                 (select n.node_id,
                         site_node__url(n.node_id) as url,
                         site_node__url(n.parent_id) as parent_url,
                         n.name,
                         (select count(*)
                          from site_nodes
                          where parent_id = n.node_id) as n_children,
                         case when n.node_id = site_node__node_id('/', null) then 1 else 0 end as root_p,
                         (select tree_level(n.tree_sortkey) - tree_level(n2.tree_sortkey)
                          from site_nodes n2
                          where n2.node_id = coalesce(:root_id, site_node__node_id('/', null))) as mylevel,
                         n.object_id,
                         acs_object__name(n.object_id) as object_name,
                         n.directory_p,
                         n.parent_id
                  from site_nodes n, site_nodes n2
                  where (n.object_id is null or acs_permission__permission_p(n.object_id, :user_id, 'read'))
                  and n2.node_id = coalesce(:root_id, site_node__node_id('/', null))
                  and n.tree_sortkey between n2.tree_sortkey and tree_right(n2.tree_sortkey)
                  and (n.parent_id is null or n.parent_id in ([join $expand ", "]))) site_map
            on site_map.object_id = p.package_id
            order by url
        } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-subsite/www/admin/site-map/index-postgresql.xql}
dbqd.acs-subsite.www.admin.site-map.index.services_select {dbqd.acs-subsite.www.admin.site-map.index.services_select {
            select package_id,
                   ap.package_key,
                   acs_object__name(package_id) as instance_name,
                   apm_package_type__num_parameters(ap.package_key) as parameter_count
            from apm_packages ap,
                 apm_package_types
            where ap.package_key = apm_package_types.package_key
            and package_type = 'apm_service'
            and (
                    acs_permission__permission_p(package_id, :user_id, 'read') = 't'
                 or acs_permission__permission_p(package_id, acs__magic_object_id('the_public'), 'read') = 't'
                )
            order by instance_name
        } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-subsite/www/admin/site-map/index-postgresql.xql}
dbqd.acs-subsite.www.admin.site-map.instance-delete.package_mounted_p {dbqd.acs-subsite.www.admin.site-map.instance-delete.package_mounted_p {
	    select case when count(*) = 0 then 0 else 1 end
	    from apm_packages p, site_nodes s
	    where package_id = :package_id
	    and p.package_id = s.object_id
        } {} {} {} c:/web/openacs-4/packages/acs-subsite/www/admin/site-map/instance-delete.xql}
dbqd.acs-subsite.www.admin.site-map.instance-delete.instance_delete_doubleclick_ck {dbqd.acs-subsite.www.admin.site-map.instance-delete.instance_delete_doubleclick_ck {
            select case when count(*) = 0 then 0 else 1 end
            from apm_packages
            where package_id = :package_id
        } {} {} {} c:/web/openacs-4/packages/acs-subsite/www/admin/site-map/instance-delete.xql}
dbqd.acs-subsite.www.admin.site-map.mount-oracle.packages_unmounted_select {dbqd.acs-subsite.www.admin.site-map.mount-oracle.packages_unmounted_select {
            select p.package_id, 
                   acs_object.name(p.package_id) as name,
                   pt.pretty_name as package_pretty_name
            from   apm_packages p,
                   apm_package_types pt,
                   apm_package_versions v
            where  pt.package_key = p.package_key
            and    v.package_key = pt.package_key
            and    (v.installed_p = 't' or v.enabled_p = 't' or not exists (
                    select 1 from apm_package_versions v2
                    where v2.package_key = v.package_key
                      and (v2.installed_p = 't' or v2.enabled_p = 't')
                     and apm_package_version.sortable_version_name(v2.version_name) >
                         apm_package_version.sortable_version_name(v.version_name)))
            and    (
                       acs_permission.permission_p(package_id, :user_id, 'read') = 't'
                    or acs_permission.permission_p(package_id, acs.magic_object_id('the_public'), 'read') = 't'
                   )
            and    (apm_package.singleton_p(p.package_key) = 0 or v.auto_mount is not null)
            and    not exists (select 1
                               from site_nodes
                               where object_id = p.package_id)
            order by name
        } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-subsite/www/admin/site-map/mount-oracle.xql}
dbqd.acs-subsite.www.admin.site-map.mount-oracle.packages_mounted_select {dbqd.acs-subsite.www.admin.site-map.mount-oracle.packages_mounted_select {
            select p.package_id, 
                   acs_object.name(p.package_id) as name,
                   pt.pretty_name as package_pretty_name
            from   apm_packages p,
                   apm_package_types pt
            where  pt.package_key = p.package_key
            and    (
                       acs_permission.permission_p(package_id, :user_id, 'read') = 't'
                    or acs_permission.permission_p(package_id, acs.magic_object_id('the_public'), 'read') = 't'
                   )
            and    exists (select 1
                           from site_nodes
                           where object_id = p.package_id)
            order by name
        } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-subsite/www/admin/site-map/mount-oracle.xql}
dbqd.acs-subsite.www.admin.site-map.mount-oracle.packages_singleton_select {dbqd.acs-subsite.www.admin.site-map.mount-oracle.packages_singleton_select {
            select p.package_id, 
                   acs_object.name(p.package_id) as name,
                   pt.pretty_name as package_pretty_name
            from   apm_packages p,
                   apm_package_types pt,
                   apm_package_versions v
            where  pt.package_key = p.package_key
            and    v.package_key = pt.package_key
            and    (v.installed_p = 't' or v.enabled_p = 't' or not exists (
                    select 1 from apm_package_versions v2
                    where v2.package_key = v.package_key
                      and (v2.installed_p = 't' or v2.enabled_p = 't')
                     and apm_package_version.sortable_version_name(v2.version_name) >
                         apm_package_version.sortable_version_name(v.version_name)))
            and    (
                       acs_permission.permission_p(package_id, :user_id, 'read') = 't'
                    or acs_permission.permission_p(package_id, acs.magic_object_id('the_public'), 'read') = 't'
                   )
            and    (apm_package.singleton_p(p.package_key) = 1 and v.auto_mount is null)
            and    not exists (select 1
                               from site_nodes
                               where object_id = p.package_id)
            order by name
        } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-subsite/www/admin/site-map/mount-oracle.xql}
dbqd.acs-subsite.www.admin.site-map.mount.packages_unmounted_select {dbqd.acs-subsite.www.admin.site-map.mount.packages_unmounted_select {
            select p.package_id, 
                   acs_object__name(p.package_id) as name,
                   pt.pretty_name as package_pretty_name
            from   apm_packages p,
                   apm_package_types pt,
                   apm_package_versions v
            where  pt.package_key = p.package_key
            and    v.package_key = pt.package_key
            and    (v.installed_p = 't' or v.enabled_p = 't' or not exists (
                    select 1 from apm_package_versions v2
                    where v2.package_key = v.package_key
                      and (v2.installed_p = 't' or v2.enabled_p = 't')
                     and apm_package_version__sortable_version_name(v2.version_name) >
                         apm_package_version__sortable_version_name(v.version_name)))
            and    (
                       acs_permission__permission_p(p.package_id, :user_id, 'read') = 't'
                    or acs_permission__permission_p(p.package_id, acs__magic_object_id('the_public'), 'read') = 't'
                   )
            and    (apm_package__singleton_p(p.package_key) = 0 or coalesce(v.auto_mount,'') != '')
            and    not exists (select 1
                               from site_nodes
                               where object_id = p.package_id)

            order  by name
        } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-subsite/www/admin/site-map/mount-postgresql.xql}
dbqd.acs-subsite.www.admin.site-map.mount.packages_mounted_select {dbqd.acs-subsite.www.admin.site-map.mount.packages_mounted_select {
            select p.package_id, 
                   acs_object__name(p.package_id) as name,
                   pt.pretty_name as package_pretty_name
            from   apm_packages p,
                   apm_package_types pt
            where  pt.package_key = p.package_key
            and    (
                       acs_permission__permission_p(p.package_id, :user_id, 'read') = 't'
                    or acs_permission__permission_p(p.package_id, acs__magic_object_id('the_public'), 'read') = 't'
                   )
            and    exists (select 1
                           from site_nodes
                           where object_id = p.package_id)
            order  by name
        } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-subsite/www/admin/site-map/mount-postgresql.xql}
dbqd.acs-subsite.www.admin.site-map.mount.packages_singleton_select {dbqd.acs-subsite.www.admin.site-map.mount.packages_singleton_select {
            select p.package_id, 
                   acs_object__name(p.package_id) as name,
                   pt.pretty_name as package_pretty_name
            from   apm_packages p,
                   apm_package_types pt,
                   apm_package_versions v
            where  pt.package_key = p.package_key
            and    v.package_key = pt.package_key
            and    (v.installed_p = 't' or v.enabled_p = 't' or not exists (
                    select 1 from apm_package_versions v2
                    where v2.package_key = v.package_key
                      and (v2.installed_p = 't' or v2.enabled_p = 't')
                     and apm_package_version__sortable_version_name(v2.version_name) >
                         apm_package_version__sortable_version_name(v.version_name)))
            and    (
                       acs_permission__permission_p(p.package_id, :user_id, 'read') = 't'
                    or acs_permission__permission_p(p.package_id, acs__magic_object_id('the_public'), 'read') = 't'
                   )
            and    (apm_package__singleton_p(p.package_key) = 1 and coalesce(v.auto_mount,'') = '')
            and    apm_package__singleton_p(p.package_key) = 1
            and    not exists (select 1
                               from site_nodes
                               where object_id = p.package_id)
            order by name
        } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-subsite/www/admin/site-map/mount-postgresql.xql}
dbqd.acs-subsite.www.admin.site-map.new.site_node_duplicate_name_root_ck {dbqd.acs-subsite.www.admin.site-map.new.site_node_duplicate_name_root_ck {
            select case when count(*) = 0 then 0 else 1 end
            from site_nodes
            where name = :name
            and parent_id = :parent_id
        } {} {} {} c:/web/openacs-4/packages/acs-subsite/www/admin/site-map/new.xql}
dbqd.acs-subsite.www.admin.site-map.package-new.package_new_doubleclick_ck {dbqd.acs-subsite.www.admin.site-map.package-new.package_new_doubleclick_ck {
            select case when count(*) = 0 then 0 else 1 end
            from apm_packages
            where package_id = :new_package_id
        } {} {} {} c:/web/openacs-4/packages/acs-subsite/www/admin/site-map/package-new.xql}
dbqd.acs-subsite.www.admin.site-map.parameter-set-2.apm_parameters_set {dbqd.acs-subsite.www.admin.site-map.parameter-set-2.apm_parameters_set {
            select parameter_id,
                   parameter_name
            from apm_parameters
            where package_key = :package_key
        } {} {} {} c:/web/openacs-4/packages/acs-subsite/www/admin/site-map/parameter-set-2.xql}
dbqd.acs-subsite.www.admin.site-map.parameter-set-oracle.package_info {dbqd.acs-subsite.www.admin.site-map.parameter-set-oracle.package_info {
            select package_key,
                   acs_object.name(package_id) instance_name
            from apm_packages
            where package_id = :package_id
        } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-subsite/www/admin/site-map/parameter-set-oracle.xql}
dbqd.acs-subsite.www.admin.site-map.parameter-set-oracle.parameter_table {dbqd.acs-subsite.www.admin.site-map.parameter-set-oracle.parameter_table {
            select p.parameter_id,
                   p.parameter_name,
                   p.package_key,
                   nvl(p.description, 'No Description') description,
                   v.attr_value,
                   nvl(p.section_name, 'No Section Name') section_name
            from apm_parameters p,
                 (select v.parameter_id,
                         v.attr_value
                  from apm_parameter_values v
                  where v.package_id = :package_id) v
            where p.parameter_id = v.parameter_id(+)
            and p.package_key = (select package_key from apm_packages where package_id = :package_id)
            $additional_sql
        } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-subsite/www/admin/site-map/parameter-set-oracle.xql}
dbqd.acs-subsite.www.admin.site-map.parameter-set.package_info {dbqd.acs-subsite.www.admin.site-map.parameter-set.package_info {
            select package_key,
                   acs_object__name(package_id) as instance_name
            from apm_packages
            where package_id = :package_id
        } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-subsite/www/admin/site-map/parameter-set-postgresql.xql}
dbqd.acs-subsite.www.admin.site-map.parameter-set.parameter_table {dbqd.acs-subsite.www.admin.site-map.parameter-set.parameter_table {
            select p.parameter_id,
                   p.parameter_name,
                   p.package_key,
                   coalesce(p.description, 'No Description') as description,
                   v.attr_value,
                   coalesce(p.section_name, 'No Section Name') as section_name
            from apm_parameters p left outer join
                 (select v.parameter_id,
                         v.attr_value
                  from apm_parameter_values v
                  where v.package_id = :package_id) v
            on p.parameter_id = v.parameter_id
            where p.package_key = (select package_key from apm_packages where package_id = :package_id)
            $additional_sql
        } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-subsite/www/admin/site-map/parameter-set-postgresql.xql}
dbqd.acs-subsite.www.admin.site-map.unmounted-oracle.packages_normal_select {dbqd.acs-subsite.www.admin.site-map.unmounted-oracle.packages_normal_select {
            select package_id, acs_object.name(package_id) as name
            from apm_packages
            where (acs_permission.permission_p(package_id, :user_id, 'read') = 't' or
                    acs_permission.permission_p(package_id, acs.magic_object_id('the_public'), 'read') = 't')
            and apm_package.singleton_p(package_key) = 0
            and not exists (select 1
                            from site_nodes
                            where object_id = package_id)
            order by name
        } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-subsite/www/admin/site-map/unmounted-oracle.xql}
dbqd.acs-subsite.www.admin.site-map.unmounted-oracle.packages_singleton_select {dbqd.acs-subsite.www.admin.site-map.unmounted-oracle.packages_singleton_select {
            select package_id, acs_object.name(package_id) as name
            from apm_packages
            where (acs_permission.permission_p(package_id, :user_id, 'read') = 't' or
                    acs_permission.permission_p(package_id, acs.magic_object_id('the_public'), 'read') = 't')
            and apm_package.singleton_p(package_key) = 1
            and not exists (select 1
                            from site_nodes
                            where object_id = package_id)
            order by name
        } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-subsite/www/admin/site-map/unmounted-oracle.xql}
dbqd.acs-subsite.www.admin.site-map.unmounted.packages_normal_select {dbqd.acs-subsite.www.admin.site-map.unmounted.packages_normal_select {
            select package_id, acs_object__name(package_id) as name
            from apm_packages
            where (acs_permission__permission_p(package_id, :user_id, 'read') = 't' or
                    acs_permission__permission_p(package_id, acs__magic_object_id('the_public'), 'read') = 't')
            and apm_package__singleton_p(package_key) = 0
            and not exists (select 1
                            from site_nodes
                            where object_id = package_id)
            order by name
        } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-subsite/www/admin/site-map/unmounted-postgresql.xql}
dbqd.acs-subsite.www.admin.site-map.unmounted.packages_singleton_select {dbqd.acs-subsite.www.admin.site-map.unmounted.packages_singleton_select {
            select package_id, acs_object__name(package_id) as name
            from apm_packages
            where (acs_permission__permission_p(package_id, :user_id, 'read') = 't' or
                    acs_permission__permission_p(package_id, acs__magic_object_id('the_public'), 'read') = 't')
            and apm_package__singleton_p(package_key) = 1
            and not exists (select 1
                            from site_nodes
                            where object_id = package_id)
            order by name
        } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-subsite/www/admin/site-map/unmounted-postgresql.xql}
dbqd.acs-subsite.www.admin.users.new-oracle.rel_type_info {dbqd.acs-subsite.www.admin.users.new-oracle.rel_type_info {
      
    select object_type as ancestor_rel_type
      from acs_object_types
     where supertype = 'relationship'
       and object_type in (
               select object_type from acs_object_types
               start with object_type = :add_with_rel_type
               connect by object_type = prior supertype
           )

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-subsite/www/admin/users/new-oracle.xql}
dbqd.acs-subsite.www.admin.users.new-oracle.user_exists {dbqd.acs-subsite.www.admin.users.new-oracle.user_exists {
      
	select case when exists
	                 (select 1 from users where user_id = :user_id)
	       then 1 else 0 end
	from dual
    
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-subsite/www/admin/users/new-oracle.xql}
dbqd.acs-subsite.www.admin.users.new-oracle.user_new_2_rowid_for_email {dbqd.acs-subsite.www.admin.users.new-oracle.user_new_2_rowid_for_email {
      select rowid from users where user_id = :user_id
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-subsite/www/admin/users/new-oracle.xql}
dbqd.acs-subsite.www.admin.users.new.rel_type_info {dbqd.acs-subsite.www.admin.users.new.rel_type_info {

    select object_type as ancestor_rel_type
      from acs_object_types
     where supertype = 'relationship'
       and object_type in (
               select t1.object_type
	         from acs_object_types t1, acs_object_types t2
		where t2.tree_sortkey between t1.tree_sortkey and tree_right(t1.tree_sortkey)
		  and t2.object_type = :add_with_rel_type
	   )

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-subsite/www/admin/users/new-postgresql.xql}
dbqd.acs-subsite.www.admin.users.new.user_exists {dbqd.acs-subsite.www.admin.users.new.user_exists {
      
	select case when exists
	                 (select 1 from users where user_id = :user_id)
	       then 1 else 0 end
	
    
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-subsite/www/admin/users/new-postgresql.xql}
dbqd.acs-subsite.www.admin.users.new.user_new_2_rowid_for_email {dbqd.acs-subsite.www.admin.users.new.user_new_2_rowid_for_email {
      select oid as rowid from users where user_id = :user_id
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-subsite/www/admin/users/new-postgresql.xql}
dbqd.acs-subsite.www.admin.users.new.group_info {dbqd.acs-subsite.www.admin.users.new.group_info {
      
    select group_name as add_to_group_name, 
           join_policy as add_to_group_join_policy
    from groups
    where group_id = :add_to_group_id

      } {} {} {} c:/web/openacs-4/packages/acs-subsite/www/admin/users/new.xql}
dbqd.acs-subsite.www.admin.users.new.select_type_info {dbqd.acs-subsite.www.admin.users.new.select_type_info {
      
    select t.pretty_name as user_type_pretty_name,
           t.table_name
      from acs_object_types t
     where t.object_type = :user_type

      } {} {} {} c:/web/openacs-4/packages/acs-subsite/www/admin/users/new.xql}
dbqd.acs-subsite.www.admin.users.new.creation_name_query {dbqd.acs-subsite.www.admin.users.new.creation_name_query {
      
	    select p.first_names || ' ' || p.last_name 
	              || ' (' || pa.email || ')'
            from persons p, parties pa
            where p.person_id = pa.party_id and p.person_id = :creation_user
	    
      } {} {} {} c:/web/openacs-4/packages/acs-subsite/www/admin/users/new.xql}
dbqd.acs-subsite.www.index-oracle.site_nodes {dbqd.acs-subsite.www.index-oracle.site_nodes {
      
  select site_node.url(n.node_id) as url, acs_object.name(n.object_id) as name
    from site_nodes n
   where n.parent_id = :node_id
    and n.object_id is not null
    and acs_permission.permission_p(n.object_id, :user_id, 'read') = 't'
   order by name

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-subsite/www/index-oracle.xql}
dbqd.acs-subsite.www.index.site_nodes {dbqd.acs-subsite.www.index.site_nodes {

  select site_node__url(n.node_id) as url, acs_object__name(n.object_id) as name
    from site_nodes n, apm_packages p, apm_package_types t
   where n.parent_id = :node_id
    and acs_permission__permission_p(n.object_id, :user_id, 'read') = 't'
    and p.package_id = n.object_id
    and t.package_key = p.package_key
    and t.package_type = 'apm_service'
    and t.package_key != 'acs-subsite'        
   order by name

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-subsite/www/index-postgresql.xql}
dbqd.acs-subsite.www.members.member-invite-oracle.user_search {dbqd.acs-subsite.www.members.member-invite-oracle.user_search {

      select distinct u.first_names || ' ' || u.last_name || ' (' || u.email || ')' as name, u.user_id
      from   cc_users u
      where  upper(nvl(u.first_names || ' ', '')  ||
             nvl(u.last_name || ' ', '') ||
             u.email || ' ' ||
             nvl(u.screen_name, '')) like upper('%'||:value||'%')
      and    not exists (select 1 from acs_rels where object_id_one = $group_id and object_id_two = u.user_id)
      order  by name

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-subsite/www/members/member-invite-oracle.xql}
dbqd.acs-subsite.www.members.member-invite.user_search {dbqd.acs-subsite.www.members.member-invite.user_search {
            select distinct u.first_names || ' ' || u.last_name || ' (' || u.email || ')' as name, u.user_id
            from   cc_users u
            where  upper(coalesce(u.first_names || ' ', '')  ||
                   coalesce(u.last_name || ' ', '') ||
                   u.email || ' ' ||
                   coalesce(u.screen_name, '')) like upper('%'||:value||'%')
            and    not exists (select 1 from acs_rels where object_id_one = $group_id and object_id_two = u.user_id)
            order  by name

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-subsite/www/members/member-invite-postgresql.xql}
dbqd.acs-subsite.www.permissions.grant.select_privileges_hierarchy {dbqd.acs-subsite.www.permissions.grant.select_privileges_hierarchy {
          select privilege, child_privilege
          from acs_privilege_hierarchy
          order by privilege desc, child_privilege desc
      } {} {} {} c:/web/openacs-4/packages/acs-subsite/www/permissions/grant.xql}
dbqd.acs-subsite.www.permissions.grant.select_privileges_list {dbqd.acs-subsite.www.permissions.grant.select_privileges_list {
      
  select privilege
  from acs_privileges
  order by privilege

      } {} {} {} c:/web/openacs-4/packages/acs-subsite/www/permissions/grant.xql}
dbqd.acs-subsite.www.permissions.index-oracle.adminable_objects {dbqd.acs-subsite.www.permissions.index-oracle.adminable_objects {
 select o.object_id, acs_object.name(o.object_id) as name, context_id, object_type,
    (case when o.object_id = :root then 0 else 1 end) as child
  from acs_objects o
  where exists (
    SELECT 1 
      FROM all_object_party_privilege_map map
     WHERE map.object_id = o.object_id
       and map.party_id = :user_id
       and map.privilege = 'admin')
    and (o.object_id = :root or o.context_id = :root)
    order by child, object_type, name      
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-subsite/www/permissions/index-oracle.xql}
dbqd.acs-subsite.www.permissions.index.adminable_objects {dbqd.acs-subsite.www.permissions.index.adminable_objects {
 select o.object_id, acs_object__name(o.object_id) as name, context_id, object_type,
    (case when o.object_id = :root then 0 else 1 end) as child
  from acs_objects o
  where exists ( SELECT 1 
                   FROM acs_permissions_all map 
                  WHERE map.object_id = o.object_id
                    and map.grantee_id = :user_id
                    and map.privilege = 'admin')
    and (o.object_id = :root or o.context_id = :root)
    order by child, object_type, name
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-subsite/www/permissions/index-postgresql.xql}
dbqd.acs-subsite.www.permissions.one-oracle.name {dbqd.acs-subsite.www.permissions.one-oracle.name {
      select acs_object.name(:object_id) from dual
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-subsite/www/permissions/one-oracle.xql}
dbqd.acs-subsite.www.permissions.one-oracle.inherited_permissions {dbqd.acs-subsite.www.permissions.one-oracle.inherited_permissions {
      
  select grantee_id, grantee_name, privilege
  from (select grantee_id, acs_object.name(grantee_id) as grantee_name,
               privilege, 1 as counter
        from acs_permissions_all
        where object_id = :object_id
        union all
        select grantee_id, acs_object.name(grantee_id) as grantee_name,
               privilege, -1 as counter
        from acs_permissions
        where object_id = :object_id )
  group by grantee_id, grantee_name, privilege
  having sum(counter) > 0

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-subsite/www/permissions/one-oracle.xql}
dbqd.acs-subsite.www.permissions.one-oracle.acl {dbqd.acs-subsite.www.permissions.one-oracle.acl {
      
  select grantee_id, acs_object.name(grantee_id) as grantee_name,
         privilege
  from acs_permissions
  where object_id = :object_id
	$extra_where_clause

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-subsite/www/permissions/one-oracle.xql}
dbqd.acs-subsite.www.permissions.one-oracle.context {dbqd.acs-subsite.www.permissions.one-oracle.context {
      
SELECT acs_object.name(context_id) as context_name, context_id, security_inherit_p
  FROM acs_objects
 WHERE object_id = :object_id

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-subsite/www/permissions/one-oracle.xql}
dbqd.acs-subsite.www.permissions.one-oracle.children {dbqd.acs-subsite.www.permissions.one-oracle.children {
      
	select object_id as c_object_id,acs_object.name(object_id) as c_name, object_type as c_type
	from acs_objects o
	where context_id = :object_id
              and exists (select 1
                          from all_object_party_privilege_map
                          where object_id = o.object_id
                          and party_id = :user_id
                          and privilege = 'admin')    
    
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-subsite/www/permissions/one-oracle.xql}
dbqd.acs-subsite.www.permissions.one-oracle.children_count {dbqd.acs-subsite.www.permissions.one-oracle.children_count {

	select count(*) as num_children
	from acs_objects o
	where context_id = :object_id and
            acs_permission.permission_p(o.object_id, :user_id, 'admin') = 't'

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-subsite/www/permissions/one-oracle.xql}
dbqd.acs-subsite.www.permissions.one.name {dbqd.acs-subsite.www.permissions.one.name {
      select acs_object__name(:object_id) 
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-subsite/www/permissions/one-postgresql.xql}
dbqd.acs-subsite.www.permissions.one.inherited_permissions {dbqd.acs-subsite.www.permissions.one.inherited_permissions {
      
  select grantee_id, grantee_name, privilege
  from (select grantee_id, acs_object__name(grantee_id) as grantee_name,
               privilege, 1 as counter
        from acs_permissions_all
        where object_id = :object_id
        union all
        select grantee_id, acs_object__name(grantee_id) as grantee_name,
               privilege, -1 as counter
        from acs_permissions
        where object_id = :object_id ) dummy
  group by grantee_id, grantee_name, privilege
  having sum(counter) > 0

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-subsite/www/permissions/one-postgresql.xql}
dbqd.acs-subsite.www.permissions.one.acl {dbqd.acs-subsite.www.permissions.one.acl {
      
  select grantee_id, acs_object__name(grantee_id) as grantee_name,
         privilege
  from acs_permissions
  where object_id = :object_id
	$extra_where_clause

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-subsite/www/permissions/one-postgresql.xql}
dbqd.acs-subsite.www.permissions.one.context {dbqd.acs-subsite.www.permissions.one.context {

SELECT acs_object__name(context_id) as context_name, context_id, security_inherit_p
  FROM acs_objects
 WHERE object_id = :object_id

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-subsite/www/permissions/one-postgresql.xql}
dbqd.acs-subsite.www.permissions.one.children {dbqd.acs-subsite.www.permissions.one.children {
      
	select object_id as c_object_id,acs_object__name(object_id) as c_name, object_type as c_type
	from acs_objects o
	where context_id = :object_id
              and exists (select 1
                          from acs_permissions_all
                          where object_id = o.object_id
                          and grantee_id = :user_id
                          and privilege = 'admin')    
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-subsite/www/permissions/one-postgresql.xql}
dbqd.acs-subsite.www.permissions.one.children_count {dbqd.acs-subsite.www.permissions.one.children_count {
      
	select count(*) as num_children
	from acs_objects o
	where context_id = :object_id and
            acs_permission__permission_p(o.object_id, :user_id, 'admin') = 't'

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-subsite/www/permissions/one-postgresql.xql}
dbqd.acs-subsite.www.permissions.one.security_inherit_p {dbqd.acs-subsite.www.permissions.one.security_inherit_p {
      
    select security_inherit_p
    from acs_objects
    where object_id = :object_id
  
      } {} {} {} c:/web/openacs-4/packages/acs-subsite/www/permissions/one.xql}
dbqd.acs-subsite.www.permissions.perm-include-oracle.object_info {dbqd.acs-subsite.www.permissions.perm-include-oracle.object_info {
    select acs_object.name(object_id) as object_name,
           acs_object.name(context_id) as parent_object_name,
           context_id
    from   acs_objects
    where  object_id = :object_id

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-subsite/www/permissions/perm-include-oracle.xql}
dbqd.acs-subsite.www.permissions.perm-include-oracle.permissions {dbqd.acs-subsite.www.permissions.perm-include-oracle.permissions {
    select ptab.grantee_id,
           acs_object.name(ptab.grantee_id) as grantee_name,
           o.object_type,
           [join $select_clauses ", "],
           sum([join $privs "_p + "]_p) as any_perm_p_
    from   (select grantee_id,
                   [join $from_all_clauses ", "]
            from   acs_permissions_all
            where  object_id = :object_id
            union all
            select grantee_id,
                   [join $from_direct_clauses ", "]
            from   acs_permissions
            where  object_id = :object_id
            union all
            select -1 as grantee_id,
                   [join $from_dummy_clauses ", "]
            from  dual
            union all
            select -2 as grantee_id,
                   [join $from_dummy_clauses ", "] 
            from  dual
            union all
            select component_id as grantee_id,
                   [join $from_dummy_clauses ", "] 
            from   group_component_map
            where  group_id = :application_group_id
            union all
            select segment_id as grantee_id,
                   [join $from_dummy_clauses ", "] 
            from   rel_segments rel_seg
            where  rel_seg.group_id = :application_group_id
            union all
            select segment_id as grantee_id,
                   [join $from_dummy_clauses ", "] 
            from   rel_segments rel_seg,
                   group_component_map gcm
            where  gcm.group_id = :application_group_id
            and    rel_seg.group_id = gcm.group_id
           ) ptab,
           acs_objects o
    where  o.object_id = ptab.grantee_id
    and    acs_permission.permission_p(0, ptab.grantee_id, 'admin') = 'f'
    group  by ptab.grantee_id, acs_object.name(ptab.grantee_id), o.object_type
    order  by object_type desc, grantee_name
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-subsite/www/permissions/perm-include-oracle.xql}
dbqd.acs-subsite.www.permissions.perm-include.object_info {dbqd.acs-subsite.www.permissions.perm-include.object_info {
    select acs_object__name(object_id) as object_name,
           acs_object__name(context_id) as parent_object_name,
           context_id
    from   acs_objects
    where  object_id = :object_id

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-subsite/www/permissions/perm-include-postgresql.xql}
dbqd.acs-subsite.www.permissions.perm-include.permissions {dbqd.acs-subsite.www.permissions.perm-include.permissions {
    select ptab.grantee_id,
           acs_object__name(ptab.grantee_id) as grantee_name,
           o.object_type,
           [join $select_clauses ", "],
           sum([join $privs "_p + "]_p) as any_perm_p_
    from   (select grantee_id,
                   [join $from_all_clauses ", "]
            from   acs_permissions_all
            where  object_id = :object_id
            union all
            select grantee_id,
                   [join $from_direct_clauses ", "]
            from   acs_permissions
            where  object_id = :object_id
            union all
            select -1 as grantee_id,
                   [join $from_dummy_clauses ", "]
            union all
            select -2 as grantee_id,
                   [join $from_dummy_clauses ", "] 
            union all
            select component_id as grantee_id,
                   [join $from_dummy_clauses ", "] 
            from   group_component_map
            where  group_id = :application_group_id
            union all
            select segment_id as grantee_id,
                   [join $from_dummy_clauses ", "] 
            from   rel_segments rel_seg
            where  rel_seg.group_id = :application_group_id
            union all
            select segment_id as grantee_id,
                   [join $from_dummy_clauses ", "] 
            from   rel_segments rel_seg,
                   group_component_map gcm
            where  gcm.group_id = :application_group_id
            and    rel_seg.group_id = gcm.group_id
           ) ptab,
           acs_objects o
    where  o.object_id = ptab.grantee_id
    and    acs_permission__permission_p(0, ptab.grantee_id, 'admin') = 'f'
    group  by ptab.grantee_id, grantee_name, object_type
    order  by object_type desc, grantee_name
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-subsite/www/permissions/perm-include-postgresql.xql}
dbqd.acs-subsite.www.permissions.perm-modify-oracle.remove {dbqd.acs-subsite.www.permissions.perm-modify-oracle.remove {
      
          begin
              acs_permission.revoke_permission(
                  object_id => :object_id, 
                  grantee_id => :party_id,
                  privilege => :privilege
              );
          end;
  
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-subsite/www/permissions/perm-modify-oracle.xql}
dbqd.acs-subsite.www.permissions.perm-modify-oracle.add {dbqd.acs-subsite.www.permissions.perm-modify-oracle.add {
      
          begin
              acs_permission.grant_permission(
                  object_id => :object_id, 
                  grantee_id => :party_id,
                  privilege => :privilege
              );
          end;
  
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-subsite/www/permissions/perm-modify-oracle.xql}
dbqd.acs-subsite.www.permissions.perm-modify.remove {dbqd.acs-subsite.www.permissions.perm-modify.remove {
      
          select acs_permission__revoke_permission(:object_id, :party_id, :privilege) 
  
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-subsite/www/permissions/perm-modify-postgresql.xql}
dbqd.acs-subsite.www.permissions.perm-modify.add {dbqd.acs-subsite.www.permissions.perm-modify.add {
      
          select acs_permission__grant_permission(:object_id, :party_id, :privilege) 
  
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-subsite/www/permissions/perm-modify-postgresql.xql}
dbqd.acs-subsite.www.permissions.perm-modify.permissions_in_db {dbqd.acs-subsite.www.permissions.perm-modify.permissions_in_db {

        select grantee_id, privilege
        from   acs_permissions
        where  object_id = :object_id
        and    privilege in ('[join $privs "', '"]')

      } {} {} {} c:/web/openacs-4/packages/acs-subsite/www/permissions/perm-modify.xql}
dbqd.acs-subsite.www.permissions.perm-user-add-2-oracle.add_user {dbqd.acs-subsite.www.permissions.perm-user-add-2-oracle.add_user {

          begin
              acs_permission.grant_permission(
                  object_id => :object_id, 
                  grantee_id => :one_user_id,
                  privilege => 'read'
              );
          end;

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-subsite/www/permissions/perm-user-add-2-oracle.xql}
dbqd.acs-subsite.www.permissions.perm-user-add-2.add_user {dbqd.acs-subsite.www.permissions.perm-user-add-2.add_user {

            select acs_permission__grant_permission(:object_id, :one_user_id, 'read')

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-subsite/www/permissions/perm-user-add-2-postgresql.xql}
dbqd.acs-subsite.www.permissions.perm-user-add-include-oracle.users_who_dont_have_any_permissions {dbqd.acs-subsite.www.permissions.perm-user-add-include-oracle.users_who_dont_have_any_permissions {

    select u.user_id,
           person.name(u.user_id) as name,
           u.email
    from   cc_users u
    where  u.user_id not in (select grantee_id from acs_permissions_all where object_id = :object_id)
    order  by name


      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-subsite/www/permissions/perm-user-add-include-oracle.xql}
dbqd.acs-subsite.www.permissions.perm-user-add-include.users_who_dont_have_any_permissions {dbqd.acs-subsite.www.permissions.perm-user-add-include.users_who_dont_have_any_permissions {

    select u.user_id,
           person__name(u.user_id) as name,
           u.email
    from   cc_users u
    where  u.user_id not in (select grantee_id from acs_permissions_all where object_id = :object_id)
    order  by name


      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-subsite/www/permissions/perm-user-add-include-postgresql.xql}
dbqd.acs-subsite.www.permissions.revoke-oracle.name {dbqd.acs-subsite.www.permissions.revoke-oracle.name {
      select acs_object.name(:object_id)
from dual
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-subsite/www/permissions/revoke-oracle.xql}
dbqd.acs-subsite.www.permissions.revoke-oracle.party_name {dbqd.acs-subsite.www.permissions.revoke-oracle.party_name {
      select acs_object.name(:party_id) from dual
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-subsite/www/permissions/revoke-oracle.xql}
dbqd.acs-subsite.www.permissions.revoke.name {dbqd.acs-subsite.www.permissions.revoke.name {
      select acs_object__name(:object_id)

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-subsite/www/permissions/revoke-postgresql.xql}
dbqd.acs-subsite.www.permissions.revoke.party_name {dbqd.acs-subsite.www.permissions.revoke.party_name {
      select acs_object__name(:party_id) 
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-subsite/www/permissions/revoke-postgresql.xql}
dbqd.acs-subsite.www.pvt.alerts-oracle.alerts_list {dbqd.acs-subsite.www.pvt.alerts-oracle.alerts_list {
      
    select bea.valid_p, bea.frequency, bea.keywords, bt.topic, bea.rowid
    from bboard_email_alerts bea, bboard_topics bt
    where bea.user_id = :user_id
    and bea.topic_id = bt.topic_id
    order by bea.frequency
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-subsite/www/pvt/alerts-oracle.xql}
dbqd.acs-subsite.www.pvt.alerts-oracle.alerts_list_2 {dbqd.acs-subsite.www.pvt.alerts-oracle.alerts_list_2 {
      
    select cea.valid_p,
           ad.domain,
           cea.alert_id,
           cea.expires,
           cea.frequency,
           cea.alert_type,
           cea.category,
           cea.keywords
    from   classified_email_alerts cea, ad_domains ad
    where  user_id = :user_id
    and    ad.domain_id = cea.domain_id
    and    sysdate <= expires
    order by expires desc
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-subsite/www/pvt/alerts-oracle.xql}
dbqd.acs-subsite.www.pvt.alerts.alerts_list {dbqd.acs-subsite.www.pvt.alerts.alerts_list {
      
    select bea.valid_p, bea.frequency, bea.keywords, bt.topic, bea.oid as rowid
    from bboard_email_alerts bea, bboard_topics bt
    where bea.user_id = :user_id
    and bea.topic_id = bt.topic_id
    order by bea.frequency
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-subsite/www/pvt/alerts-postgresql.xql}
dbqd.acs-subsite.www.pvt.alerts.alerts_list_2 {dbqd.acs-subsite.www.pvt.alerts.alerts_list_2 {
      
    select cea.valid_p,
           ad.domain,
           cea.alert_id,
           cea.expires,
           cea.frequency,
           cea.alert_type,
           cea.category,
           cea.keywords
    from   classified_email_alerts cea, ad_domains ad
    where  user_id = :user_id
    and    ad.domain_id = cea.domain_id
    and    current_timestamp <= expires
    order by expires desc
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-subsite/www/pvt/alerts-postgresql.xql}
dbqd.acs-subsite.www.pvt.alerts.name_get {dbqd.acs-subsite.www.pvt.alerts.name_get {
      select first_names, last_name, email, url from persons, parties where persons.person_id = parties.party_id and party_id =:user_id
      } {} {} {} c:/web/openacs-4/packages/acs-subsite/www/pvt/alerts.xql}
dbqd.acs-subsite.www.pvt.home.pvt_home_user_info {dbqd.acs-subsite.www.pvt.home.pvt_home_user_info {
      
    select first_names, last_name, email, url, screen_name
    from cc_users 
    where user_id=:user_id

      } {} {} {} c:/web/openacs-4/packages/acs-subsite/www/pvt/home.xql}
dbqd.acs-subsite.www.pvt.home.biography {dbqd.acs-subsite.www.pvt.home.biography {
      
select attr_value
from acs_attribute_values
where object_id = :user_id
and attribute_id =
   (select attribute_id
    from acs_attributes
    where object_type = 'person'
    and attribute_name = 'bio')
      } {} {} {} c:/web/openacs-4/packages/acs-subsite/www/pvt/home.xql}
dbqd.acs-subsite.www.pvt.home.get_portrait_info {dbqd.acs-subsite.www.pvt.home.get_portrait_info {
      
    select cr.publish_date, cr.title as portrait_title
    from cr_revisions cr, cr_items ci, acs_rels a
    where cr.revision_id = ci.live_revision
    and  ci.item_id = a.object_id_two
    and a.object_id_one = :user_id
    and a.rel_type = 'user_portrait_rel'
    
      } {} {} {} c:/web/openacs-4/packages/acs-subsite/www/pvt/home.xql}
dbqd.acs-subsite.www.pvt.set-on-vacation-to-null.no_alerts_until {dbqd.acs-subsite.www.pvt.set-on-vacation-to-null.no_alerts_until {
      
    select no_alerts_until from users where user_id = :user_id

      } {} {} {} c:/web/openacs-4/packages/acs-subsite/www/pvt/set-on-vacation-to-null.xql}
dbqd.acs-subsite.www.pvt.set-on-vacation-to-null.pvt_unset_no_alerts_until {dbqd.acs-subsite.www.pvt.set-on-vacation-to-null.pvt_unset_no_alerts_until {
      
	    update users 
	    set no_alerts_until = :clear
	    where user_id = :user_id
    
      } {} {} {} c:/web/openacs-4/packages/acs-subsite/www/pvt/set-on-vacation-to-null.xql}
dbqd.acs-subsite.www.pvt.set-on-vacation-until.pvt_set_vacation_update {dbqd.acs-subsite.www.pvt.set-on-vacation-until.pvt_set_vacation_update {
      update users set no_alerts_until = :on_vacation_until where user_id = :user_id
      } {} {} {} c:/web/openacs-4/packages/acs-subsite/www/pvt/set-on-vacation-until.xql}
dbqd.acs-subsite.www.pvt.toggle-dont-spam-me-p-oracle.unused {dbqd.acs-subsite.www.pvt.toggle-dont-spam-me-p-oracle.unused {
      update user_preferences set dont_spam_me_p = util.logical_negation(dont_spam_me_p) where user_id = :user_id
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-subsite/www/pvt/toggle-dont-spam-me-p-oracle.xql}
dbqd.acs-subsite.www.pvt.toggle-dont-spam-me-p.unused {dbqd.acs-subsite.www.pvt.toggle-dont-spam-me-p.unused {
      update user_preferences set dont_spam_me_p = util__logical_negation(dont_spam_me_p) where user_id = :user_id
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-subsite/www/pvt/toggle-dont-spam-me-p-postgresql.xql}
dbqd.acs-subsite.www.pvt.unsubscribe-2-oracle.rel_id {dbqd.acs-subsite.www.pvt.unsubscribe-2-oracle.rel_id {
      select rel_id
from group_member_map
where group_id = acs.magic_object_id('registered_users')
  and member_id = :user_id
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-subsite/www/pvt/unsubscribe-2-oracle.xql}
dbqd.acs-subsite.www.pvt.unsubscribe-2-oracle.unused {dbqd.acs-subsite.www.pvt.unsubscribe-2-oracle.unused {
      
begin
  membership_rel.del( rel_id => :rel_id );
end;
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-subsite/www/pvt/unsubscribe-2-oracle.xql}
dbqd.acs-subsite.www.pvt.unsubscribe-2.rel_id {dbqd.acs-subsite.www.pvt.unsubscribe-2.rel_id {
      select rel_id
from group_member_map
where group_id = acs__magic_object_id('registered_users')
  and member_id = :user_id
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-subsite/www/pvt/unsubscribe-2-postgresql.xql}
dbqd.acs-subsite.www.pvt.unsubscribe-2.unused {dbqd.acs-subsite.www.pvt.unsubscribe-2.unused {
        begin return membership_rel__deleted(:rel_id); end;
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-subsite/www/pvt/unsubscribe-2-postgresql.xql}
dbqd.acs-subsite.www.pvt.unsubscribe-oracle.vacation_time {dbqd.acs-subsite.www.pvt.unsubscribe-oracle.vacation_time {
      select no_alerts_until, acs_user.receives_alerts_p(:user_id) as on_vacation_p 
from users
where user_id = :user_id
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-subsite/www/pvt/unsubscribe-oracle.xql}
dbqd.acs-subsite.www.pvt.unsubscribe.vacation_time {dbqd.acs-subsite.www.pvt.unsubscribe.vacation_time {
      select no_alerts_until, acs_user__receives_alerts_p(:user_id) as on_vacation_p 
from users
where user_id = :user_id
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-subsite/www/pvt/unsubscribe-postgresql.xql}
dbqd.acs-subsite.www.pvt.unsubscribe.nospam {dbqd.acs-subsite.www.pvt.unsubscribe.nospam {
      select dont_spam_me_p
from user_preferences
where user_id = :user_id
      } {} {} {} c:/web/openacs-4/packages/acs-subsite/www/pvt/unsubscribe.xql}
dbqd.acs-subsite.www.register.user-join.group_info {dbqd.acs-subsite.www.register.user-join.group_info {
      
    select group_name, join_policy
    from groups
    where group_id = :group_id

      } {} {} {} c:/web/openacs-4/packages/acs-subsite/www/register/user-join.xql}
dbqd.acs-subsite.www.register.user-new.find_person {dbqd.acs-subsite.www.register.user-new.find_person {
      select parties.party_id as user_id, persons.first_names, persons.last_name
      from parties, persons
      where parties.party_id = persons.person_id
        and parties.email = lower(:email)
   } {} {} {} c:/web/openacs-4/packages/acs-subsite/www/register/user-new.xql}
dbqd.acs-subsite.www.shared.community-member.user_contributions {dbqd.acs-subsite.www.shared.community-member.user_contributions {
select at.pretty_name, at.pretty_plural, a.creation_date, acs_object__name(a.object_id) as object_name
from acs_objects a, acs_object_types at
where a.object_type = at.object_type
and a.creation_user = :user_id
order by at.pretty_name, creation_date desc
  } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-subsite/www/shared/community-member-postgresql.xql}
dbqd.acs-subsite.www.shared.parameters-oracle.select_params {dbqd.acs-subsite.www.shared.parameters-oracle.select_params {

    select p.parameter_name,
           nvl(p.description, 'No Description') as description,
           v.attr_value,
           nvl(p.section_name, '') as section_name
    from   apm_parameters p,
           (select v.parameter_id,
                   v.attr_value
            from apm_parameter_values v
            where v.package_id = :package_id
           ) v
    where  p.package_key = (select package_key from apm_packages where package_id = :package_id)
    and    p.parameter_id = v.parameter_id
    $section_where_clause
    order  by section_name, parameter_name

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-subsite/www/shared/parameters-oracle.xql}
dbqd.acs-subsite.www.shared.parameters-oracle.select_params_set {dbqd.acs-subsite.www.shared.parameters-oracle.select_params_set {

        select p.parameter_name as c__parameter_name
        from   apm_parameters p,
               (select v.parameter_id,
                       v.attr_value
                from apm_parameter_values v
                where v.package_id = :package_id
               ) v
        where  p.package_key = (select package_key from apm_packages where package_id = :package_id)
        and    p.parameter_id = v.parameter_id
    $section_where_clause
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-subsite/www/shared/parameters-oracle.xql}
dbqd.acs-subsite.www.shared.parameters.select_params {dbqd.acs-subsite.www.shared.parameters.select_params {

    select p.parameter_name,
           coalesce(p.description, 'No Description') as description,
           v.attr_value,
           coalesce(p.section_name, '') as section_name
    from   apm_parameters p left outer join
           (select v.parameter_id,
                   v.attr_value
            from apm_parameter_values v
            where v.package_id = :package_id
           ) v on p.parameter_id = v.parameter_id
    where  p.package_key = (select package_key from apm_packages where package_id = :package_id)
	$section_where_clause
    order  by section_name, parameter_name

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-subsite/www/shared/parameters-postgresql.xql}
dbqd.acs-subsite.www.shared.parameters.select_params_set {dbqd.acs-subsite.www.shared.parameters.select_params_set {

        select p.parameter_name as c__parameter_name
        from   apm_parameters p left outer join
               (select v.parameter_id,
                       v.attr_value
                from apm_parameter_values v
                where v.package_id = :package_id
               ) v on p.parameter_id = v.parameter_id
        where  p.package_key = (select package_key from apm_packages where package_id = :package_id)
	$section_where_clause
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-subsite/www/shared/parameters-postgresql.xql}
dbqd.acs-subsite.www.shared.parameters.section_where_clause {dbqd.acs-subsite.www.shared.parameters.section_where_clause {
      and section_name=:section
    } {} {} {} c:/web/openacs-4/packages/acs-subsite/www/shared/parameters.xql}
dbqd.acs-subsite.www.shared.portrait-bits-oracle.output_portrait {dbqd.acs-subsite.www.shared.portrait-bits-oracle.output_portrait {

        select r.content
        from cr_revisions r
        where r.revision_id = $revision_id

        } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-subsite/www/shared/portrait-bits-oracle.xql}
dbqd.acs-subsite.www.shared.portrait-bits.output_portrait {dbqd.acs-subsite.www.shared.portrait-bits.output_portrait {

        select r.lob, i.storage_type
        from cr_revisions r, cr_items i
        where r.item_id = i.item_id 
          and r.revision_id = :revision_id

        } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-subsite/www/shared/portrait-bits-postgresql.xql}
dbqd.acs-subsite.www.shared.portrait-bits.get_item_id {dbqd.acs-subsite.www.shared.portrait-bits.get_item_id {
         select c.item_id
         from acs_rels a, cr_items c
         where a.object_id_two = c.item_id
           and a.object_id_one = :user_id
           and a.rel_type = 'user_portrait_rel'
      } {} {} {} c:/web/openacs-4/packages/acs-subsite/www/shared/portrait-bits.xql}
dbqd.acs-subsite.www.user.basic-info-update-2.screen_name_unique_count {dbqd.acs-subsite.www.user.basic-info-update-2.screen_name_unique_count {
      
    select count(*) from users where screen_name = :screen_name and user_id != :user_id
      } {} {} {} c:/web/openacs-4/packages/acs-subsite/www/user/basic-info-update-2.xql}
dbqd.acs-subsite.www.user.basic-info-update-2.email_unique_count {dbqd.acs-subsite.www.user.basic-info-update-2.email_unique_count {
      select count(party_id) from parties where email = lower(:email) and party_id <> :user_id
      } {} {} {} c:/web/openacs-4/packages/acs-subsite/www/user/basic-info-update-2.xql}
dbqd.acs-subsite.www.user.basic-info-update-2.grab_bio {dbqd.acs-subsite.www.user.basic-info-update-2.grab_bio {
      select attr_value as bio_old
    from acs_attribute_values
    where object_id = :user_id
    and attribute_id =
      (select attribute_id
      from acs_attributes
      where object_type = 'person'
      and attribute_name = 'bio')
      } {} {} {} c:/web/openacs-4/packages/acs-subsite/www/user/basic-info-update-2.xql}
dbqd.acs-subsite.www.user.basic-info-update-2.update_parties {dbqd.acs-subsite.www.user.basic-info-update-2.update_parties {
      update parties
      set email = :email,
      url = :url
      where party_id = :user_id
      } {} {} {} c:/web/openacs-4/packages/acs-subsite/www/user/basic-info-update-2.xql}
dbqd.acs-subsite.www.user.basic-info-update-2.update_persons {dbqd.acs-subsite.www.user.basic-info-update-2.update_persons {
      update persons
      set first_names = :first_names,
      last_name = :last_name
      where person_id = :user_id
      } {} {} {} c:/web/openacs-4/packages/acs-subsite/www/user/basic-info-update-2.xql}
dbqd.acs-subsite.www.user.basic-info-update-2.update_users {dbqd.acs-subsite.www.user.basic-info-update-2.update_users {
      update users
      set screen_name=:screen_name
      where user_id = :user_id
      } {} {} {} c:/web/openacs-4/packages/acs-subsite/www/user/basic-info-update-2.xql}
dbqd.acs-subsite.www.user.basic-info-update-2.insert_bio {dbqd.acs-subsite.www.user.basic-info-update-2.insert_bio {
      insert into acs_attribute_values
	(object_id, attribute_id, attr_value)
	values 
	(:user_id, (select attribute_id
          from acs_attributes
          where object_type = 'person'
          and attribute_name = 'bio'), :bio)
      } {} {} {} c:/web/openacs-4/packages/acs-subsite/www/user/basic-info-update-2.xql}
dbqd.acs-subsite.www.user.basic-info-update-2.update_bio {dbqd.acs-subsite.www.user.basic-info-update-2.update_bio {
      update acs_attribute_values
	set attr_value = :bio
	where object_id = :user_id
	and attribute_id =
          (select attribute_id
          from acs_attributes
          where object_type = 'person'
          and attribute_name = 'bio')
      } {} {} {} c:/web/openacs-4/packages/acs-subsite/www/user/basic-info-update-2.xql}
dbqd.acs-subsite.www.user.basic-info-update-oracle.get_portrait_info {dbqd.acs-subsite.www.user.basic-info-update-oracle.get_portrait_info {
    
    select cr.publish_date, nvl(cr.title,'your portrait') as portrait_title
    from cr_revisions cr, cr_items ci, acs_rels a
    where cr.revision_id = ci.live_revision
    and  ci.item_id = a.object_id_two
    and a.object_id_one = :user_id
    and a.rel_type = 'user_portrait_rel'
      
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-subsite/www/user/basic-info-update-oracle.xql}
dbqd.acs-subsite.www.user.basic-info-update.get_portrait_info {dbqd.acs-subsite.www.user.basic-info-update.get_portrait_info {
    
    select cr.publish_date, coalesce(cr.title,'your portrait') as portrait_title
    from cr_revisions cr, cr_items ci, acs_rels a
    where cr.revision_id = ci.live_revision
    and  ci.item_id = a.object_id_two
    and a.object_id_one = :user_id
    and a.rel_type = 'user_portrait_rel'
      
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-subsite/www/user/basic-info-update-postgresql.xql}
dbqd.acs-subsite.www.user.basic-info-update.general_info {dbqd.acs-subsite.www.user.basic-info-update.general_info {
      select first_names, last_name, email, 
      case when url is null then 'http://' else url end as url,
      screen_name
      from cc_users 
      where user_id=:user_id
      } {} {} {} c:/web/openacs-4/packages/acs-subsite/www/user/basic-info-update.xql}
dbqd.acs-subsite.www.user.basic-info-update.biography {dbqd.acs-subsite.www.user.basic-info-update.biography {
      
select attr_value
from acs_attribute_values
where object_id = :user_id
and attribute_id =
   (select attribute_id
    from acs_attributes
    where object_type = 'person'
    and attribute_name = 'bio')
      } {} {} {} c:/web/openacs-4/packages/acs-subsite/www/user/basic-info-update.xql}
dbqd.acs-subsite.www.user.portrait.upload-2-oracle.create_item {dbqd.acs-subsite.www.user.portrait.upload-2-oracle.create_item {

        begin
          :1 := content_item.new(
                 name => :name,
                 creation_ip => :creation_ip);
        end;

        } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-subsite/www/user/portrait/upload-2-oracle.xql}
dbqd.acs-subsite.www.user.portrait.upload-2-oracle.create_rel {dbqd.acs-subsite.www.user.portrait.upload-2-oracle.create_rel {

        begin
          :1 := acs_rel.new (
                 rel_type => 'user_portrait_rel',
                 object_id_one => :user_id,
                 object_id_two => :item_id);
        end;

        } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-subsite/www/user/portrait/upload-2-oracle.xql}
dbqd.acs-subsite.www.user.portrait.upload-2-oracle.create_revision {dbqd.acs-subsite.www.user.portrait.upload-2-oracle.create_revision {

        begin
          :1 := content_revision.new(
             title => :title,
             description => :portrait_comment,
             text => 'not_important',
             mime_type => :guessed_file_type,
             item_id => :item_id,
             creation_user => :user_id,
             creation_ip => :creation_ip
          );

          update cr_items
          set live_revision = :1
          where item_id = :item_id;
        end;

        } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-subsite/www/user/portrait/upload-2-oracle.xql}
dbqd.acs-subsite.www.user.portrait.upload-2-oracle.update_photo {dbqd.acs-subsite.www.user.portrait.upload-2-oracle.update_photo {

        update cr_revisions
        set content = empty_blob()
        where revision_id = :revision_id
        returning content into :1

        } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-subsite/www/user/portrait/upload-2-oracle.xql}
dbqd.acs-subsite.www.user.portrait.upload-2-oracle.update_photo_info {dbqd.acs-subsite.www.user.portrait.upload-2-oracle.update_photo_info {

	update cr_revisions
	set description = :portrait_comment,
	    publish_date = sysdate,
	    mime_type = :guessed_file_type,
	    title = :title
	where revision_id = :revision_id
 
        } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-subsite/www/user/portrait/upload-2-oracle.xql}
dbqd.acs-subsite.www.user.portrait.upload-2.create_item {dbqd.acs-subsite.www.user.portrait.upload-2.create_item {

  select content_item__new(
         varchar :name,
         null,
         null,
         null,
         now(),
         null,
         null,
         :creation_ip,
         'content_item',
         'content_revision',
         null,
         null,
         'text/plain',
         null,
         null
         )


        } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-subsite/www/user/portrait/upload-2-postgresql.xql}
dbqd.acs-subsite.www.user.portrait.upload-2.create_rel {dbqd.acs-subsite.www.user.portrait.upload-2.create_rel {

        select acs_rel__new (
         null,
         'user_portrait_rel',
         :user_id,
         :item_id,
         null,
         null,
         null
        )


        } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-subsite/www/user/portrait/upload-2-postgresql.xql}
dbqd.acs-subsite.www.user.portrait.upload-2.create_revision {dbqd.acs-subsite.www.user.portrait.upload-2.create_revision {

  declare
        v_revision_id      integer;
  begin

  v_revision_id := content_revision__new(
                                       :title,
                                       :portrait_comment,
                                       now(),
                                       :guessed_file_type,
                                       null,
                                       null,
                                       :item_id,
                                       null,
                                       now(),
                                       :user_id,
                                       :creation_ip
                                       );

  update cr_items
  set live_revision = v_revision_id
  where item_id = :item_id;

  return v_revision_id;

  end;

        } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-subsite/www/user/portrait/upload-2-postgresql.xql}
dbqd.acs-subsite.www.user.portrait.upload-2.update_photo {dbqd.acs-subsite.www.user.portrait.upload-2.update_photo {

        update cr_revisions
        set lob = [set __lob_id [db_string get_lob_id "select empty_lob()"]]
        where revision_id = :revision_id

        } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-subsite/www/user/portrait/upload-2-postgresql.xql}
dbqd.acs-subsite.www.user.portrait.upload-2.update_photo_info {dbqd.acs-subsite.www.user.portrait.upload-2.update_photo_info {

	update cr_revisions
	set description = :portrait_comment,
	    publish_date = now(),
	    mime_type = :guessed_file_type,
	    title = :title
	where revision_id = :revision_id
 
        } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-subsite/www/user/portrait/upload-2-postgresql.xql}
dbqd.acs-subsite.www.user.portrait.upload-2.get_item_id {dbqd.acs-subsite.www.user.portrait.upload-2.get_item_id {

        select object_id_two as item_id
        from acs_rels
        where object_id_one = :user_id
        and rel_type = 'user_portrait_rel'

        } {} {} {} c:/web/openacs-4/packages/acs-subsite/www/user/portrait/upload-2.xql}
dbqd.acs-subsite.www.user.portrait.upload-2.upload_image_info {dbqd.acs-subsite.www.user.portrait.upload-2.upload_image_info {

                insert into images
                (image_id, width, height)
                values
                (:revision_id, :original_width, :original_height)

        } {} {} {} c:/web/openacs-4/packages/acs-subsite/www/user/portrait/upload-2.xql}
dbqd.acs-subsite.www.user.portrait.upload-2.get_revision_id {dbqd.acs-subsite.www.user.portrait.upload-2.get_revision_id {

        select live_revision as revision_id
        from cr_items
        where item_id = :item_id

        } {} {} {} c:/web/openacs-4/packages/acs-subsite/www/user/portrait/upload-2.xql}
dbqd.acs-subsite.www.user.portrait.upload-2.update_image_info {dbqd.acs-subsite.www.user.portrait.upload-2.update_image_info {

	update images
	set width = :original_width, height = :original_height
	where image_id = :revision_id

        } {} {} {} c:/web/openacs-4/packages/acs-subsite/www/user/portrait/upload-2.xql}
dbqd.acs-tcl.tcl.00-database-procs-postgresql.db_nextval.nextval_sequence {dbqd.acs-tcl.tcl.00-database-procs-postgresql.db_nextval.nextval_sequence {
      select nextval(:sequence) as nextval
      where (select relkind 
             from pg_class 
             where relname = :sequence) = 'S'
    } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-tcl/tcl/00-database-procs-postgresql-postgresql.xql}
dbqd.acs-tcl.tcl.00-database-procs-postgresql.db_nextval.nextval_view {dbqd.acs-tcl.tcl.00-database-procs-postgresql.db_nextval.nextval_view {
      select nextval 
      from ${sequence}
    } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-tcl/tcl/00-database-procs-postgresql-postgresql.xql}
dbqd.acs-tcl.tcl.acs-kernel-procs.ad_acs_administrator_exists_p.admin_exists_p {dbqd.acs-tcl.tcl.acs-kernel-procs.ad_acs_administrator_exists_p.admin_exists_p {
      
        select 1 as admin_exists_p
        from dual
        where exists (select 1
                      from all_object_party_privilege_map m, users u, acs_magic_objects amo
                      where m.object_id = amo.object_id
                        and amo.name = 'security_context_root'
                        and m.party_id = u.user_id
                        and m.privilege = 'admin')
    
      } {} {} {} c:/web/openacs-4/packages/acs-tcl/tcl/acs-kernel-procs.xql}
dbqd.acs-tcl.tcl.acs-kernel-procs.ad_acs_admin_node.acs_admin_node_p {dbqd.acs-tcl.tcl.acs-kernel-procs.ad_acs_admin_node.acs_admin_node_p {
      
        select case when count(object_id) = 0 then 0 else 1 end
        from site_nodes
        where object_id = (select package_id 
                           from apm_packages 
                           where package_key = 'acs-admin')
    
      } {} {} {} c:/web/openacs-4/packages/acs-tcl/tcl/acs-kernel-procs.xql}
dbqd.acs-tcl.tcl.acs-permissions-procs-oracle.permission::grant.grant_permission {dbqd.acs-tcl.tcl.acs-permissions-procs-oracle.permission::grant.grant_permission {
            declare
            begin
                acs_permission.grant_permission(
                    object_id => :object_id,
                    grantee_id => :party_id,
                    privilege => :privilege
                );
            end;
        } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-tcl/tcl/acs-permissions-procs-oracle.xql}
dbqd.acs-tcl.tcl.acs-permissions-procs-oracle.permission::revoke.revoke_permission {dbqd.acs-tcl.tcl.acs-permissions-procs-oracle.permission::revoke.revoke_permission {
            declare
            begin
                acs_permission.revoke_permission(
                    object_id => :object_id,
                    grantee_id => :party_id,
                    privilege => :privilege
                );
            end;
        } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-tcl/tcl/acs-permissions-procs-oracle.xql}
dbqd.acs-tcl.tcl.acs-permissions-procs-oracle.permission::permission_p_not_cached.select_permission_p {dbqd.acs-tcl.tcl.acs-permissions-procs-oracle.permission::permission_p_not_cached.select_permission_p {
            select 1
            from dual
            where 't' = acs_permission.permission_p(:object_id, :party_id, :privilege)
        } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-tcl/tcl/acs-permissions-procs-oracle.xql}
dbqd.acs-tcl.tcl.acs-permissions-procs-oracle.permission::require_permission.name {dbqd.acs-tcl.tcl.acs-permissions-procs-oracle.permission::require_permission.name {
            select acs_object.name(:object_id)
            from dual
        } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-tcl/tcl/acs-permissions-procs-oracle.xql}
dbqd.acs-tcl.tcl.acs-permissions-procs-oracle.permission::toggle_inherit.toggle_inherit {dbqd.acs-tcl.tcl.acs-permissions-procs-oracle.permission::toggle_inherit.toggle_inherit {
            update acs_objects
            set security_inherit_p = case when security_inherit_p = 't'
                                          then 'f'
                                          else 't'
                                     end
            where object_id = :object_id
        } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-tcl/tcl/acs-permissions-procs-oracle.xql}
dbqd.acs-tcl.tcl.acs-permissions-procs.permission::grant.grant_permission {dbqd.acs-tcl.tcl.acs-permissions-procs.permission::grant.grant_permission {
                select acs_permission__grant_permission(
                    :object_id,
                    :party_id,
                    :privilege
                );
        } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-tcl/tcl/acs-permissions-procs-postgresql.xql}
dbqd.acs-tcl.tcl.acs-permissions-procs.permission::revoke.revoke_permission {dbqd.acs-tcl.tcl.acs-permissions-procs.permission::revoke.revoke_permission {
             select acs_permission__revoke_permission(
                    :object_id,
                    :party_id,
                    :privilege
                );
        } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-tcl/tcl/acs-permissions-procs-postgresql.xql}
dbqd.acs-tcl.tcl.acs-permissions-procs.permission::permission_p_not_cached.select_permission_p {dbqd.acs-tcl.tcl.acs-permissions-procs.permission::permission_p_not_cached.select_permission_p {
            select 1
            where 't' = acs_permission__permission_p(:object_id, :party_id, :privilege)
        } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-tcl/tcl/acs-permissions-procs-postgresql.xql}
dbqd.acs-tcl.tcl.acs-permissions-procs.permission::require_permission.name {dbqd.acs-tcl.tcl.acs-permissions-procs.permission::require_permission.name {
            select acs_object__name(:object_id)
            from dual
        } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-tcl/tcl/acs-permissions-procs-postgresql.xql}
dbqd.acs-tcl.tcl.acs-permissions-procs.permission::toggle_inherit.toggle_inherit {dbqd.acs-tcl.tcl.acs-permissions-procs.permission::toggle_inherit.toggle_inherit {
            update acs_objects
            set security_inherit_p = not security_inherit_p
            where object_id = :object_id
        } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-tcl/tcl/acs-permissions-procs-postgresql.xql}
dbqd.acs-tcl.tcl.acs-permissions-procs.ad_permission_p.n_privs {dbqd.acs-tcl.tcl.acs-permissions-procs.ad_permission_p.n_privs {
            select count(*)
            from acs_privileges
            where privilege = :privilege
        } {} {} {} c:/web/openacs-4/packages/acs-tcl/tcl/acs-permissions-procs.xql}
dbqd.acs-tcl.tcl.acs-permissions-procs.permission::inherit_p.select_inherit_p {dbqd.acs-tcl.tcl.acs-permissions-procs.permission::inherit_p.select_inherit_p {
            select case when security_inherit_p = 't' then 1 else 0 end
            from acs_objects
            where object_id = :object_id
        } {} {} {} c:/web/openacs-4/packages/acs-tcl/tcl/acs-permissions-procs.xql}
dbqd.acs-tcl.tcl.acs-permissions-procs.permission::set_inherit.set_inherit {dbqd.acs-tcl.tcl.acs-permissions-procs.permission::set_inherit.set_inherit {
            update acs_objects
            set security_inherit_p = 't'
            where object_id = :object_id
        } {} {} {} c:/web/openacs-4/packages/acs-tcl/tcl/acs-permissions-procs.xql}
dbqd.acs-tcl.tcl.acs-permissions-procs.permission::set_not_inherit.set_not_inherit {dbqd.acs-tcl.tcl.acs-permissions-procs.permission::set_not_inherit.set_not_inherit {
            update acs_objects
            set security_inherit_p = 'f'
            where object_id = :object_id
        } {} {} {} c:/web/openacs-4/packages/acs-tcl/tcl/acs-permissions-procs.xql}
dbqd.acs-tcl.tcl.admin-init-oracle.path_select {dbqd.acs-tcl.tcl.admin-init-oracle.path_select {
      
	select package_id, site_node.url(node_id) as url from apm_packages p, site_nodes n
	where p.package_id = n.object_id
    
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-tcl/tcl/admin-init-oracle.xql}
dbqd.acs-tcl.tcl.admin-init.path_select {dbqd.acs-tcl.tcl.admin-init.path_select {
      
	select package_id, site_node__url(node_id) as url from apm_packages p, site_nodes n
	where p.package_id = n.object_id
    
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-tcl/tcl/admin-init-postgresql.xql}
dbqd.acs-tcl.tcl.admin-procs.ad_user_class_query.sql_post_select_for_user_class {dbqd.acs-tcl.tcl.admin-procs.ad_user_class_query.sql_post_select_for_user_class {
      
	    select sql_post_select
	    from user_classes 
            where user_class_id = [ns_dbquotevalue $user_class_id]
	
      } {} {} {} c:/web/openacs-4/packages/acs-tcl/tcl/admin-procs.xql}
dbqd.acs-tcl.tcl.admin-procs.ad_user_class_description.category_id {dbqd.acs-tcl.tcl.admin-procs.ad_user_class_description.category_id {
        select category from categories where category_id = :category_id

      } {} {} {} c:/web/openacs-4/packages/acs-tcl/tcl/admin-procs.xql}
dbqd.acs-tcl.tcl.admin-procs.ad_user_class_description.country_code {dbqd.acs-tcl.tcl.admin-procs.ad_user_class_description.country_code {

        select country_name from country_codes where iso = :country_code

      } {} {} {} c:/web/openacs-4/packages/acs-tcl/tcl/admin-procs.xql}
dbqd.acs-tcl.tcl.admin-procs.ad_user_class_description.usps_abbrev {dbqd.acs-tcl.tcl.admin-procs.ad_user_class_description.usps_abbrev {

        select state_name from states where usps_abbrev = :usps_abbrev

      } {} {} {} c:/web/openacs-4/packages/acs-tcl/tcl/admin-procs.xql}
dbqd.acs-tcl.tcl.admin-procs.ad_user_class_description.group_id {dbqd.acs-tcl.tcl.admin-procs.ad_user_class_description.group_id {

        select group_name from groups where group_id = :group_id

      } {} {} {} c:/web/openacs-4/packages/acs-tcl/tcl/admin-procs.xql}
dbqd.acs-tcl.tcl.admin-procs.ad_user_class_description.registration_during_month {dbqd.acs-tcl.tcl.admin-procs.ad_user_class_description.registration_during_month {

        select to_char(to_date(:registration_during_month,'YYYYMM'),'fmMonth YYYY') from dual

      } {} {} {} c:/web/openacs-4/packages/acs-tcl/tcl/admin-procs.xql}
dbqd.acs-tcl.tcl.admin-procs.ad_user_class_description.user_class_id {dbqd.acs-tcl.tcl.admin-procs.ad_user_class_description.user_class_id {

        select name from user_classes where user_class_id = :user_class_id

      } {} {} {} c:/web/openacs-4/packages/acs-tcl/tcl/admin-procs.xql}
dbqd.acs-tcl.tcl.apm-file-procs-oracle.apm_generate_tarball.create_item {dbqd.acs-tcl.tcl.apm-file-procs-oracle.apm_generate_tarball.create_item {

begin
 :1 := content_item.new(name => :name,
                        creation_ip => :creation_ip,
                        storage_type => 'file'
                        );
end;

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-tcl/tcl/apm-file-procs-oracle.xql}
dbqd.acs-tcl.tcl.apm-file-procs-oracle.apm_generate_tarball.create_revision {dbqd.acs-tcl.tcl.apm-file-procs-oracle.apm_generate_tarball.create_revision {

        begin
          :1 := content_revision.new(title => :title,
                                   description => 'gzipped tarfile',
                                   text => 'not_important',
                                   mime_type => 'text/plain',
                                   item_id => :item_id,
                                   creation_user => :user_id,
                                   creation_ip => :creation_ip
                );

          update cr_items
          set live_revision = :1
          where item_id = :item_id;
        end;

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-tcl/tcl/apm-file-procs-oracle.xql}
dbqd.acs-tcl.tcl.apm-file-procs-oracle.apm_generate_tarball.update_tarball {dbqd.acs-tcl.tcl.apm-file-procs-oracle.apm_generate_tarball.update_tarball {

                update cr_revisions
                set filename = '[set content_file [cr_create_content_file $item_id $revision_id $tmpfile]]'
                where revision_id = :revision_id

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-tcl/tcl/apm-file-procs-oracle.xql}
dbqd.acs-tcl.tcl.apm-file-procs-oracle.apm_generate_tarball.update_content_length {dbqd.acs-tcl.tcl.apm-file-procs-oracle.apm_generate_tarball.update_content_length {

                update apm_package_versions
                   set content_length = [cr_file_size $content_file]
                 where version_id = :version_id

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-tcl/tcl/apm-file-procs-oracle.xql}
dbqd.acs-tcl.tcl.apm-file-procs-oracle.apm_extract_tarball.distribution_tar_ball_select {dbqd.acs-tcl.tcl.apm-file-procs-oracle.apm_extract_tarball.distribution_tar_ball_select {

   select  '[cr_fs_path]' || r.filename as content, i.storage_type
     from cr_revisions r, cr_items i
    where r.item_id = i.item_id
      and r.revision_id = (select content_item.get_latest_revision(item_id)
                           from apm_package_versions 
                          where version_id = :version_id)

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-tcl/tcl/apm-file-procs-oracle.xql}
dbqd.acs-tcl.tcl.apm-file-procs-oracle.apm_file_add.apm_file_add {dbqd.acs-tcl.tcl.apm-file-procs-oracle.apm_file_add.apm_file_add {
      
	begin
	:1 := apm_package_version.add_file(
		file_id => :file_id,
		version_id => :version_id,
		path => :path,
		file_type => :file_type,
                db_type => :db_type
		);
	end;
    
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-tcl/tcl/apm-file-procs-oracle.xql}
dbqd.acs-tcl.tcl.apm-file-procs-oracle.apm_file_remove.apm_file_remove {dbqd.acs-tcl.tcl.apm-file-procs-oracle.apm_file_remove.apm_file_remove {
      
	begin
	apm_package_version.remove_file(
				path => :path,
				version_id => :version_id
				);
	end;
    
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-tcl/tcl/apm-file-procs-oracle.xql}
dbqd.acs-tcl.tcl.apm-file-procs.apm_generate_tarball.create_item {dbqd.acs-tcl.tcl.apm-file-procs.apm_generate_tarball.create_item {

select content_item__new(
         varchar :name,
         null,
         null,
         null,
         now(),
         null,
         null,
         :creation_ip,
         'content_item',
         'content_revision',
         null,
         null,
         'text/plain',
         null,
         null,
         'file'
         )

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-tcl/tcl/apm-file-procs-postgresql.xql}
dbqd.acs-tcl.tcl.apm-file-procs.apm_generate_tarball.create_revision {dbqd.acs-tcl.tcl.apm-file-procs.apm_generate_tarball.create_revision {

  declare
        v_revision_id      integer;
  begin

  v_revision_id := content_revision__new(
                                       :title,
                                       'gzipped tarfile',
                                       now(),
                                       'text/plain',
                                       null,
                                       'not_important',
                                       :item_id,
                                       null,
                                       now(),
                                       :user_id,
                                       :creation_ip
                                       );

  update cr_items
  set live_revision = v_revision_id
  where item_id = :item_id;

  return v_revision_id;

  end;

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-tcl/tcl/apm-file-procs-postgresql.xql}
dbqd.acs-tcl.tcl.apm-file-procs.apm_generate_tarball.update_tarball {dbqd.acs-tcl.tcl.apm-file-procs.apm_generate_tarball.update_tarball {

    update cr_revisions
    set content = '[set content_file [cr_create_content_file $item_id $revision_id $tmpfile]]'
    where revision_id = :revision_id

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-tcl/tcl/apm-file-procs-postgresql.xql}
dbqd.acs-tcl.tcl.apm-file-procs.apm_generate_tarball.update_content_length {dbqd.acs-tcl.tcl.apm-file-procs.apm_generate_tarball.update_content_length {

                update apm_package_versions
                set content_length = [cr_file_size $content_file]
                where version_id = :version_id

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-tcl/tcl/apm-file-procs-postgresql.xql}
dbqd.acs-tcl.tcl.apm-file-procs.apm_extract_tarball.distribution_tar_ball_select {dbqd.acs-tcl.tcl.apm-file-procs.apm_extract_tarball.distribution_tar_ball_select {

   select '[cr_fs_path]' || r.content as content, i.storage_type
     from cr_revisions r, cr_items i
    where r.item_id = i.item_id
      and r.revision_id = (select content_item__get_latest_revision(item_id)
                             from apm_package_versions 
                            where version_id = :version_id)

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-tcl/tcl/apm-file-procs-postgresql.xql}
dbqd.acs-tcl.tcl.apm-file-procs.apm_file_add.apm_file_add {dbqd.acs-tcl.tcl.apm-file-procs.apm_file_add.apm_file_add {

	select apm_package_version__add_file(
		:file_id,
		:version_id,
		:path,
		:file_type,
                :db_type
		)
    
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-tcl/tcl/apm-file-procs-postgresql.xql}
dbqd.acs-tcl.tcl.apm-file-procs.apm_file_remove.apm_file_remove {dbqd.acs-tcl.tcl.apm-file-procs.apm_file_remove.apm_file_remove {

	select apm_package_version__remove_file(
				:version_id,
				:path
				)
    
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-tcl/tcl/apm-file-procs-postgresql.xql}
dbqd.acs-tcl.tcl.apm-file-procs.apm_generate_tarball.item_exists_p {dbqd.acs-tcl.tcl.apm-file-procs.apm_generate_tarball.item_exists_p {

        select case when item_id is null then 0 else item_id end as item_id
          from apm_package_versions 
         where version_id = :version_id

      } {} {} {} c:/web/openacs-4/packages/acs-tcl/tcl/apm-file-procs.xql}
dbqd.acs-tcl.tcl.apm-file-procs.apm_generate_tarball.set_item_id {dbqd.acs-tcl.tcl.apm-file-procs.apm_generate_tarball.set_item_id {

        update apm_package_versions 
        set item_id = :item_id 
        where version_id = :version_id

      } {} {} {} c:/web/openacs-4/packages/acs-tcl/tcl/apm-file-procs.xql}
dbqd.acs-tcl.tcl.apm-file-procs.apm_generate_tarball.get_revision_id {dbqd.acs-tcl.tcl.apm-file-procs.apm_generate_tarball.get_revision_id {

        select live_revision as revision_id
          from cr_items
         where item_id = :item_id

      } {} {} {} c:/web/openacs-4/packages/acs-tcl/tcl/apm-file-procs.xql}
dbqd.acs-tcl.tcl.apm-file-procs.apm_db_type_keys.db_type_keys {dbqd.acs-tcl.tcl.apm-file-procs.apm_db_type_keys.db_type_keys {
      select db_type_key from apm_package_db_types
      } {} {} {} c:/web/openacs-4/packages/acs-tcl/tcl/apm-file-procs.xql}
dbqd.acs-tcl.tcl.apm-file-procs.apm_generate_tarball.package_key_select {dbqd.acs-tcl.tcl.apm-file-procs.apm_generate_tarball.package_key_select {
      select package_key from apm_package_version_info where version_id = :version_id
      } {} {} {} c:/web/openacs-4/packages/acs-tcl/tcl/apm-file-procs.xql}
dbqd.acs-tcl.tcl.apm-install-procs-oracle.apm_package_install_version.version_insert {dbqd.acs-tcl.tcl.apm-install-procs-oracle.apm_package_install_version.version_insert {
      
		begin
		:1 := apm_package_version.new(
			version_id => :version_id,
			package_key => :package_key,
			version_name => :version_name,
			version_uri => :version_uri,
			summary => :summary,
			description_format => :description_format,
			description => :description,
			release_date => :release_date,
			vendor => :vendor,
			vendor_uri => :vendor_uri,
                        auto_mount => :auto_mount,
			installed_p => 't',
			data_model_loaded_p => 't'
	              );
		end;
	    
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-tcl/tcl/apm-install-procs-oracle.xql}
dbqd.acs-tcl.tcl.apm-install-procs-oracle.apm_package_install_version.version_insert_4.6.1 {dbqd.acs-tcl.tcl.apm-install-procs-oracle.apm_package_install_version.version_insert_4.6.1 {
      
		begin
		:1 := apm_package_version.new(
			version_id => :version_id,
			package_key => :package_key,
			version_name => :version_name,
			version_uri => :version_uri,
			summary => :summary,
			description_format => :description_format,
			description => :description,
			release_date => :release_date,
			vendor => :vendor,
			vendor_uri => :vendor_uri,
                        auto_mount => :auto_mount,
			installed_p => 't',
			data_model_loaded_p => 't'
	              );
		end;
	    
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-tcl/tcl/apm-install-procs-oracle.xql}
dbqd.acs-tcl.tcl.apm-install-procs-oracle.apm_package_delete.apm_package_delete {dbqd.acs-tcl.tcl.apm-install-procs-oracle.apm_package_delete.apm_package_delete {
      
	begin
	    apm_package_type.drop_type(
	        package_key => :package_key,
	        cascade_p => 't'
            );
	end;
    
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-tcl/tcl/apm-install-procs-oracle.xql}
dbqd.acs-tcl.tcl.apm-install-procs-oracle.apm_package_version_delete.apm_version_delete {dbqd.acs-tcl.tcl.apm-install-procs-oracle.apm_package_version_delete.apm_version_delete {
      
	begin
	 apm_package_version.del(version_id => :version_id);	 
	end;
    
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-tcl/tcl/apm-install-procs-oracle.xql}
dbqd.acs-tcl.tcl.apm-install-procs-oracle.apm_package_install_spec.version_mark_installed {dbqd.acs-tcl.tcl.apm-install-procs-oracle.apm_package_install_spec.version_mark_installed {
      
            update apm_package_versions
            set    installed_p = decode(version_id, :version_id, 't', 'f')
            where  package_key = :package_key
        
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-tcl/tcl/apm-install-procs-oracle.xql}
dbqd.acs-tcl.tcl.apm-install-procs-oracle.apm_version_enable.apm_package_version_enable {dbqd.acs-tcl.tcl.apm-install-procs-oracle.apm_version_enable.apm_package_version_enable {
      
	begin
	  apm_package_version.enable(
            version_id => :version_id
	  );
	end;
    
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-tcl/tcl/apm-install-procs-oracle.xql}
dbqd.acs-tcl.tcl.apm-install-procs-oracle.apm_version_disable.apm_package_version_disable {dbqd.acs-tcl.tcl.apm-install-procs-oracle.apm_version_disable.apm_package_version_disable {
      
	begin
	  apm_package_version.disable(
            version_id => :version_id
	  );
	end;
    
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-tcl/tcl/apm-install-procs-oracle.xql}
dbqd.acs-tcl.tcl.apm-install-procs-oracle.apm_package_register.application_register {dbqd.acs-tcl.tcl.apm-install-procs-oracle.apm_package_register.application_register {
      
	    begin
	    apm.register_application (
		        package_key => :package_key,
			package_uri => :package_uri,
			pretty_name => :pretty_name,
			pretty_plural => :pretty_plural,
			initial_install_p => :initial_install_p,
			singleton_p => :singleton_p,
			spec_file_path => :spec_file_path,
			spec_file_mtime => :spec_file_mtime
          		);
	    end;					  
	
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-tcl/tcl/apm-install-procs-oracle.xql}
dbqd.acs-tcl.tcl.apm-install-procs-oracle.apm_package_register.service_register {dbqd.acs-tcl.tcl.apm-install-procs-oracle.apm_package_register.service_register {
      
	    begin
	    apm.register_service (
			package_key => :package_key,
			package_uri => :package_uri,
			pretty_name => :pretty_name,
			pretty_plural => :pretty_plural,
			initial_install_p => :initial_install_p,
			singleton_p => :singleton_p,
			spec_file_path => :spec_file_path,
			spec_file_mtime => :spec_file_mtime
			);
	    end;					  
	
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-tcl/tcl/apm-install-procs-oracle.xql}
dbqd.acs-tcl.tcl.apm-install-procs-oracle.apm_version_update.apm_version_update {dbqd.acs-tcl.tcl.apm-install-procs-oracle.apm_version_update.apm_version_update {
      
	begin
	:1 := apm_package_version.edit(
				 version_id => :version_id, 
				 version_name => :version_name, 
				 version_uri => :version_uri,
				 summary => :summary,
				 description_format => :description_format,
				 description => :description,
				 release_date => :release_date,
				 vendor => :vendor,
				 vendor_uri => :vendor_uri,
                                 auto_mount => :auto_mount,
				 installed_p => 't',
				 data_model_loaded_p => 't'				 
				 );
	end;
    
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-tcl/tcl/apm-install-procs-oracle.xql}
dbqd.acs-tcl.tcl.apm-install-procs-oracle.apm_version_upgrade.apm_version_upgrade {dbqd.acs-tcl.tcl.apm-install-procs-oracle.apm_version_upgrade.apm_version_upgrade {
      
	begin
	    apm_package_version.upgrade(version_id => :version_id);
	end;

    
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-tcl/tcl/apm-install-procs-oracle.xql}
dbqd.acs-tcl.tcl.apm-install-procs-oracle.apm_upgrade_for_version_p.apm_upgrade_for_version_p {dbqd.acs-tcl.tcl.apm-install-procs-oracle.apm_upgrade_for_version_p.apm_upgrade_for_version_p {
      
	begin
	    :1 := apm_package_version.upgrade_p(
	              path => :path,
	              initial_version_name => :initial_version_name,
	              final_version_name => :final_version_name
	          );
	end;
    
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-tcl/tcl/apm-install-procs-oracle.xql}
dbqd.acs-tcl.tcl.apm-install-procs-oracle.apm_upgrade_script_compare.test_f1 {dbqd.acs-tcl.tcl.apm-install-procs-oracle.apm_upgrade_script_compare.test_f1 {
      
	    begin
	    :1 := apm_package_version.sortable_version_name('$f1_version_from');
	    end;
	
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-tcl/tcl/apm-install-procs-oracle.xql}
dbqd.acs-tcl.tcl.apm-install-procs-oracle.apm_upgrade_script_compare.test_f2 {dbqd.acs-tcl.tcl.apm-install-procs-oracle.apm_upgrade_script_compare.test_f2 {
      
	    begin
	    :1 := apm_package_version.sortable_version_name('$f2_version_from');
	    end;
	
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-tcl/tcl/apm-install-procs-oracle.xql}
dbqd.acs-tcl.tcl.apm-install-procs-oracle.apm_dependency_provided_p.apm_dependency_check {dbqd.acs-tcl.tcl.apm-install-procs-oracle.apm_dependency_provided_p.apm_dependency_check {
      
	select apm_package_version.version_name_greater(service_version, :dependency_version) as version_p
	from apm_package_dependencies d, apm_package_types a, apm_package_versions v
	where d.dependency_type = 'provides'
	and d.version_id = v.version_id
	and d.service_uri = :dependency_uri
	and v.installed_p = 't'
	and a.package_key = v.package_key
    
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-tcl/tcl/apm-install-procs-oracle.xql}
dbqd.acs-tcl.tcl.apm-install-procs-oracle.apm_dependency_provided_p.version_greater_p {dbqd.acs-tcl.tcl.apm-install-procs-oracle.apm_dependency_provided_p.version_greater_p {
        select apm_package_version.version_name_greater(:provided_version, :dependency_version) from dual
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-tcl/tcl/apm-install-procs-oracle.xql}
dbqd.acs-tcl.tcl.apm-install-procs-oracle.apm_package_install.version_exists_p {dbqd.acs-tcl.tcl.apm-install-procs-oracle.apm_package_install.version_exists_p {
      
	    select version_id 
	    from apm_package_versions 
	    where package_key = :package_key
	    and version_id = apm_package.highest_version(:package_key)
	
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-tcl/tcl/apm-install-procs-oracle.xql}
dbqd.acs-tcl.tcl.apm-install-procs-oracle.apm_package_upgrade_p.apm_package_upgrade_p {dbqd.acs-tcl.tcl.apm-install-procs-oracle.apm_package_upgrade_p.apm_package_upgrade_p {
      
	select apm_package_version.version_name_greater(:version_name, version_name) upgrade_p
	from apm_package_versions
	where package_key = :package_key
	and version_id = apm_package.highest_version (:package_key)
    
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-tcl/tcl/apm-install-procs-oracle.xql}
dbqd.acs-tcl.tcl.apm-install-procs-oracle.apm_package_upgrade_from.apm_package_upgrade_from {dbqd.acs-tcl.tcl.apm-install-procs-oracle.apm_package_upgrade_from.apm_package_upgrade_from {
      
	    select version_name from apm_package_versions
	    where package_key = :package_key
	    and version_id = apm_package.highest_version(:package_key)
	
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-tcl/tcl/apm-install-procs-oracle.xql}
dbqd.acs-tcl.tcl.apm-install-procs-oracle.apm_version_names_compare.select_sortable_versions {dbqd.acs-tcl.tcl.apm-install-procs-oracle.apm_version_names_compare.select_sortable_versions {
      
	    select apm_package_version.sortable_version_name(:version_name_1) as sortable_version_1,
                   apm_package_version.sortable_version_name(:version_name_2) as sortable_version_2
            from   dual
	
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-tcl/tcl/apm-install-procs-oracle.xql}
dbqd.acs-tcl.tcl.apm-install-procs.apm_package_install_version.version_insert {dbqd.acs-tcl.tcl.apm-install-procs.apm_package_install_version.version_insert {
		select apm_package_version__new(
			:version_id,
			:package_key,
			:version_name,
			:version_uri,
			:summary,
			:description_format,
			:description,
			:release_date,
			:vendor,
			:vendor_uri,
                        :auto_mount,
			't',
			't'
	              );
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-tcl/tcl/apm-install-procs-postgresql.xql}
dbqd.acs-tcl.tcl.apm-install-procs.apm_package_delete.apm_package_delete {dbqd.acs-tcl.tcl.apm-install-procs.apm_package_delete.apm_package_delete {

	    select apm_package_type__drop_type(
	        :package_key,
	        't'
            );
    
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-tcl/tcl/apm-install-procs-postgresql.xql}
dbqd.acs-tcl.tcl.apm-install-procs.apm_package_version_delete.apm_version_delete {dbqd.acs-tcl.tcl.apm-install-procs.apm_package_version_delete.apm_version_delete {

	 select apm_package_version__delete(:version_id);	 
    
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-tcl/tcl/apm-install-procs-postgresql.xql}
dbqd.acs-tcl.tcl.apm-install-procs.apm_package_install_spec.version_mark_installed {dbqd.acs-tcl.tcl.apm-install-procs.apm_package_install_spec.version_mark_installed {

            update apm_package_versions
            set    installed_p = (version_id = :version_id)
            where  package_key = :package_key
        
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-tcl/tcl/apm-install-procs-postgresql.xql}
dbqd.acs-tcl.tcl.apm-install-procs.apm_version_disable.apm_package_version_disable {dbqd.acs-tcl.tcl.apm-install-procs.apm_version_disable.apm_package_version_disable {

	  select apm_package_version__disable(
            :version_id
	  );
    
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-tcl/tcl/apm-install-procs-postgresql.xql}
dbqd.acs-tcl.tcl.apm-install-procs.apm_package_register.application_register {dbqd.acs-tcl.tcl.apm-install-procs.apm_package_register.application_register {

	    select apm__register_application (
		        :package_key,
			:pretty_name,
			:pretty_plural,
			:package_uri,
			:initial_install_p,
			:singleton_p,
			:spec_file_path,
			:spec_file_mtime
          		);
	
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-tcl/tcl/apm-install-procs-postgresql.xql}
dbqd.acs-tcl.tcl.apm-install-procs.apm_package_register.service_register {dbqd.acs-tcl.tcl.apm-install-procs.apm_package_register.service_register {

	    select apm__register_service (
			:package_key,
			:pretty_name,
			:pretty_plural,
			:package_uri,
			:initial_install_p,
			:singleton_p,
			:spec_file_path,
			:spec_file_mtime
			);
	
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-tcl/tcl/apm-install-procs-postgresql.xql}
dbqd.acs-tcl.tcl.apm-install-procs.apm_version_update.apm_version_update {dbqd.acs-tcl.tcl.apm-install-procs.apm_version_update.apm_version_update {

	select apm_package_version__edit(
                                 null,
				 :version_id, 
				 :version_name, 
				 :version_uri,
				 :summary,
				 :description_format,
				 :description,
				 :release_date,
				 :vendor,
				 :vendor_uri,
                                 :auto_mount,
				 't',
				 't'				 
				 );
    
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-tcl/tcl/apm-install-procs-postgresql.xql}
dbqd.acs-tcl.tcl.apm-install-procs.apm_version_upgrade.apm_version_upgrade {dbqd.acs-tcl.tcl.apm-install-procs.apm_version_upgrade.apm_version_upgrade {

	    select apm_package_version__upgrade(:version_id);
    
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-tcl/tcl/apm-install-procs-postgresql.xql}
dbqd.acs-tcl.tcl.apm-install-procs.apm_upgrade_for_version_p.apm_upgrade_for_version_p {dbqd.acs-tcl.tcl.apm-install-procs.apm_upgrade_for_version_p.apm_upgrade_for_version_p {

	    select apm_package_version__upgrade_p(
	              :path,
	              :initial_version_name,
	              :final_version_name
	          );
    
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-tcl/tcl/apm-install-procs-postgresql.xql}
dbqd.acs-tcl.tcl.apm-install-procs.apm_upgrade_script_compare.test_f1 {dbqd.acs-tcl.tcl.apm-install-procs.apm_upgrade_script_compare.test_f1 {

	    select apm_package_version__sortable_version_name('$f1_version_from');
	
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-tcl/tcl/apm-install-procs-postgresql.xql}
dbqd.acs-tcl.tcl.apm-install-procs.apm_upgrade_script_compare.test_f2 {dbqd.acs-tcl.tcl.apm-install-procs.apm_upgrade_script_compare.test_f2 {

	    select apm_package_version__sortable_version_name('$f2_version_from');
	
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-tcl/tcl/apm-install-procs-postgresql.xql}
dbqd.acs-tcl.tcl.apm-install-procs.apm_dependency_provided_p.apm_dependency_check {dbqd.acs-tcl.tcl.apm-install-procs.apm_dependency_provided_p.apm_dependency_check {
      
	select apm_package_version__version_name_greater(service_version, :dependency_version) as version_p
	from apm_package_dependencies d, apm_package_types a, apm_package_versions v
	where d.dependency_type = 'provides'
	and d.version_id = v.version_id
	and d.service_uri = :dependency_uri
	and v.installed_p = 't'
	and a.package_key = v.package_key
    
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-tcl/tcl/apm-install-procs-postgresql.xql}
dbqd.acs-tcl.tcl.apm-install-procs.apm_dependency_provided_p.version_greater_p {dbqd.acs-tcl.tcl.apm-install-procs.apm_dependency_provided_p.version_greater_p {
        select apm_package_version__version_name_greater(:provided_version, :dependency_version)
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-tcl/tcl/apm-install-procs-postgresql.xql}
dbqd.acs-tcl.tcl.apm-install-procs.apm_package_install.version_exists_p {dbqd.acs-tcl.tcl.apm-install-procs.apm_package_install.version_exists_p {
      
	    select version_id 
	    from apm_package_versions 
	    where package_key = :package_key
	    and version_id = apm_package__highest_version(:package_key)
	
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-tcl/tcl/apm-install-procs-postgresql.xql}
dbqd.acs-tcl.tcl.apm-install-procs.apm_package_upgrade_p.apm_package_upgrade_p {dbqd.acs-tcl.tcl.apm-install-procs.apm_package_upgrade_p.apm_package_upgrade_p {
      
	select apm_package_version__version_name_greater(:version_name, version_name) as upgrade_p
	from apm_package_versions
	where package_key = :package_key
	and version_id = apm_package__highest_version (:package_key)
    
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-tcl/tcl/apm-install-procs-postgresql.xql}
dbqd.acs-tcl.tcl.apm-install-procs.apm_version_enable.apm_package_version_enable {dbqd.acs-tcl.tcl.apm-install-procs.apm_version_enable.apm_package_version_enable {

	  select apm_package_version__enable(
            :version_id
	  );
    
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-tcl/tcl/apm-install-procs-postgresql.xql}
dbqd.acs-tcl.tcl.apm-install-procs.apm_package_upgrade_from.apm_package_upgrade_from {dbqd.acs-tcl.tcl.apm-install-procs.apm_package_upgrade_from.apm_package_upgrade_from {
      
	    select version_name from apm_package_versions
	    where package_key = :package_key
	    and version_id = apm_package__highest_version(:package_key)
	
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-tcl/tcl/apm-install-procs-postgresql.xql}
dbqd.acs-tcl.tcl.apm-install-procs.apm_version_names_compare.select_sortable_versions {dbqd.acs-tcl.tcl.apm-install-procs.apm_version_names_compare.select_sortable_versions {
      
	    select apm_package_version__sortable_version_name(:version_name_1) as sortable_version_1,
                   apm_package_version__sortable_version_name(:version_name_2) as sortable_version_2
            from   dual

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-tcl/tcl/apm-install-procs-postgresql.xql}
dbqd.acs-tcl.tcl.apm-install-procs.apm_package_deinstall.apm_uninstall_record {dbqd.acs-tcl.tcl.apm-install-procs.apm_package_deinstall.apm_uninstall_record {
      
	update apm_package_versions
	set    installed_p = 'f', enabled_p = 'f'
	where package_key = :package_key
    
      } {} {} {} c:/web/openacs-4/packages/acs-tcl/tcl/apm-install-procs.xql}
dbqd.acs-tcl.tcl.apm-install-procs.apm_package_version_count.apm_package_version_count {dbqd.acs-tcl.tcl.apm-install-procs.apm_package_version_count.apm_package_version_count {
      
	select count(*) from apm_package_versions
	where package_key = :package_key
    
      } {} {} {} c:/web/openacs-4/packages/acs-tcl/tcl/apm-install-procs.xql}
dbqd.acs-tcl.tcl.apm-install-procs.apm_package_upgrade_parameters.parameter_id_get {dbqd.acs-tcl.tcl.apm-install-procs.apm_package_upgrade_parameters.parameter_id_get {
      
	    select parameter_id from apm_parameters
	    where parameter_name = :parameter_name
	    and package_key = :package_key
	
      } {} {} {} c:/web/openacs-4/packages/acs-tcl/tcl/apm-install-procs.xql}
dbqd.acs-tcl.tcl.apm-install-procs.apm_package_install_dependencies.all_dependencies_for_version {dbqd.acs-tcl.tcl.apm-install-procs.apm_package_install_dependencies.all_dependencies_for_version {
      
	select dependency_id from apm_package_dependencies
	where version_id = :version_id
    
      } {} {} {} c:/web/openacs-4/packages/acs-tcl/tcl/apm-install-procs.xql}
dbqd.acs-tcl.tcl.apm-install-procs.apm_package_install_owners.apm_delete_owners {dbqd.acs-tcl.tcl.apm-install-procs.apm_package_install_owners.apm_delete_owners {
      
	delete from apm_package_owners where version_id = :version_id
    
      } {} {} {} c:/web/openacs-4/packages/acs-tcl/tcl/apm-install-procs.xql}
dbqd.acs-tcl.tcl.apm-install-procs.apm_package_install_owners.owner_insert {dbqd.acs-tcl.tcl.apm-install-procs.apm_package_install_owners.owner_insert {
      
	    insert into apm_package_owners(version_id, owner_uri, owner_name, sort_key)
	    values(:version_id, :owner_uri, :owner_name, :counter)
	
      } {} {} {} c:/web/openacs-4/packages/acs-tcl/tcl/apm-install-procs.xql}
dbqd.acs-tcl.tcl.apm-install-procs.apm_package_install_spec.package_version_info_select {dbqd.acs-tcl.tcl.apm-install-procs.apm_package_install_spec.package_version_info_select {
      
	select package_key, version_id
	from apm_package_version_info 
	where version_id = :version_id
    
      } {} {} {} c:/web/openacs-4/packages/acs-tcl/tcl/apm-install-procs.xql}
dbqd.acs-tcl.tcl.apm-install-procs.apm_package_install_spec.apm_spec_file_register {dbqd.acs-tcl.tcl.apm-install-procs.apm_package_install_spec.apm_spec_file_register {
      
	    update apm_package_types
		set spec_file_path = :path
	        where package_key = :package_key
	
      } {} {} {} c:/web/openacs-4/packages/acs-tcl/tcl/apm-install-procs.xql}
dbqd.acs-tcl.tcl.apm-install-procs.apm_package_install_callbacks.delete_all_callbacks {dbqd.acs-tcl.tcl.apm-install-procs.apm_package_install_callbacks.delete_all_callbacks {
        delete from apm_package_callbacks
        where version_id = :version_id
      } {} {} {} c:/web/openacs-4/packages/acs-tcl/tcl/apm-install-procs.xql}
dbqd.acs-tcl.tcl.apm-procs-oracle.apm_highest_version.apm_highest_version {dbqd.acs-tcl.tcl.apm-procs-oracle.apm_highest_version.apm_highest_version {
      
	begin
	:1 := apm_package.highest_version (
                    package_key => :package_key
		    );
	end;
    
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-tcl/tcl/apm-procs-oracle.xql}
dbqd.acs-tcl.tcl.apm-procs-oracle.apm_num_instances.apm_num_instances {dbqd.acs-tcl.tcl.apm-procs-oracle.apm_num_instances.apm_num_instances {
      
	begin
	:1 := apm_package.num_instances(
		package_key => :package_key
		);
	end;
    
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-tcl/tcl/apm-procs-oracle.xql}
dbqd.acs-tcl.tcl.apm-procs-oracle.apm_parameter_register.parameter_register {dbqd.acs-tcl.tcl.apm-procs-oracle.apm_parameter_register.parameter_register {
      
	    begin
	    :1 := apm.register_parameter(
					 parameter_id => :parameter_id,
					 parameter_name => :parameter_name,
					 package_key => :package_key,
					 description => :description,
					 datatype => :datatype,
					 default_value => :default_value,
					 section_name => :section_name,
					 min_n_values => :min_n_values,
					 max_n_values => :max_n_values
	                                );
	    end;
	
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-tcl/tcl/apm-procs-oracle.xql}
dbqd.acs-tcl.tcl.apm-procs-oracle.apm_parameter_register.apm_parameter_cache_update {dbqd.acs-tcl.tcl.apm-procs-oracle.apm_parameter_register.apm_parameter_cache_update {
      
	select v.package_id, p.parameter_name,
          decode(v.value_id, null, p.default_value, v.attr_value) as attr_value
	from apm_parameters p, apm_parameter_values v
	where p.package_key = :package_key
	and p.parameter_id = v.parameter_id (+)
    
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-tcl/tcl/apm-procs-oracle.xql}
dbqd.acs-tcl.tcl.apm-procs-oracle.apm_dependency_add.dependency_add {dbqd.acs-tcl.tcl.apm-procs-oracle.apm_dependency_add.dependency_add {
      
	begin
	:1 := apm_package_version.add_dependency(
            dependency_id => :dependency_id,
	    version_id => :version_id,
	    dependency_uri => :dependency_uri,
	    dependency_version => :dependency_version
        );					 
	end;
    
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-tcl/tcl/apm-procs-oracle.xql}
dbqd.acs-tcl.tcl.apm-procs-oracle.apm_dependency_remove.dependency_remove {dbqd.acs-tcl.tcl.apm-procs-oracle.apm_dependency_remove.dependency_remove {
      
	begin
	apm_package_version.remove_dependency(
             dependency_id => :dependency_id
	);
	end;					        
    
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-tcl/tcl/apm-procs-oracle.xql}
dbqd.acs-tcl.tcl.apm-procs-oracle.apm_interface_add.interface_add {dbqd.acs-tcl.tcl.apm-procs-oracle.apm_interface_add.interface_add {
      
	begin
	:1 := apm_package_version.add_interface(
            interface_id => :interface_id,
	    version_id => :version_id,
	    interface_uri => :interface_uri,
	    interface_version => :interface_version
        );					 
	end;
    
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-tcl/tcl/apm-procs-oracle.xql}
dbqd.acs-tcl.tcl.apm-procs-oracle.apm_interface_remove.interface_remove {dbqd.acs-tcl.tcl.apm-procs-oracle.apm_interface_remove.interface_remove {
      
	begin
	apm_package_version.remove_interface(
             interface_id => :interface_id
	);
	end;					        
    
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-tcl/tcl/apm-procs-oracle.xql}
dbqd.acs-tcl.tcl.apm-procs-oracle.apm_package_version_installed_p.apm_package_version_installed_p {dbqd.acs-tcl.tcl.apm-procs-oracle.apm_package_version_installed_p.apm_package_version_installed_p {
      
	select decode(count(*), 0, 0, 1) from apm_package_versions
	where package_key = :package_key
	and version_name = :version_name
    
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-tcl/tcl/apm-procs-oracle.xql}
dbqd.acs-tcl.tcl.apm-procs-oracle.apm_package_version_installed_p.apm_package_version_installed_p {dbqd.acs-tcl.tcl.apm-procs-oracle.apm_package_version_installed_p.apm_package_version_installed_p {
      
	select decode(count(*), 0, 0, 1) from apm_package_versions
	where package_key = :package_key
	and version_name = :version_name
    
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-tcl/tcl/apm-procs-oracle.xql}
dbqd.acs-tcl.tcl.apm-procs-oracle.apm_package_instance_new.invoke_new {dbqd.acs-tcl.tcl.apm-procs-oracle.apm_package_instance_new.invoke_new {
      
	begin
      :1 := apm_package.new(
        package_id => :package_id,
        instance_name => :instance_name,
        package_key => :package_key,
        context_id => :context_id
      );
	end;
    
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-tcl/tcl/apm-procs-oracle.xql}
dbqd.acs-tcl.tcl.apm-procs-oracle.apm_package_instance_delete.apm_package_instance_delete {dbqd.acs-tcl.tcl.apm-procs-oracle.apm_package_instance_delete.apm_package_instance_delete {
    begin
      apm_package.del(
	package_id => :package_id
      );
    end;
  } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-tcl/tcl/apm-procs-oracle.xql}
dbqd.acs-tcl.tcl.apm-procs-oracle.apm_package_url_from_id_mem.apm_package_url_from_id {dbqd.acs-tcl.tcl.apm-procs-oracle.apm_package_url_from_id_mem.apm_package_url_from_id {
      
	select site_node.url(node_id) 
          from site_nodes 
         where object_id = :package_id
    
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-tcl/tcl/apm-procs-oracle.xql}
dbqd.acs-tcl.tcl.apm-procs-oracle.apm_application_new_checkbox.package_types {dbqd.acs-tcl.tcl.apm-procs-oracle.apm_application_new_checkbox.package_types {
        select package_key, pretty_name
        from apm_package_types
        where not (apm_package.singleton_p(package_key) = 1 and
                   apm_package.num_instances(package_key) >= 1)
        order by pretty_name
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-tcl/tcl/apm-procs-oracle.xql}
dbqd.acs-tcl.tcl.apm-procs.apm_highest_version.apm_highest_version {dbqd.acs-tcl.tcl.apm-procs.apm_highest_version.apm_highest_version {

	select  apm_package__highest_version (
                    :package_key
		    );
    
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-tcl/tcl/apm-procs-postgresql.xql}
dbqd.acs-tcl.tcl.apm-procs.apm_num_instances.apm_num_instances {dbqd.acs-tcl.tcl.apm-procs.apm_num_instances.apm_num_instances {

	select apm_package__num_instances(
		:package_key
		);
    
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-tcl/tcl/apm-procs-postgresql.xql}
dbqd.acs-tcl.tcl.apm-procs.apm_parameter_register.parameter_register {dbqd.acs-tcl.tcl.apm-procs.apm_parameter_register.parameter_register {

	    select apm__register_parameter(
					 :parameter_id,
					 :package_key,
					 :parameter_name,
					 :description,
					 :datatype,
					 :default_value,
					 :section_name,
					 :min_n_values,
					 :max_n_values
	                                );
	
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-tcl/tcl/apm-procs-postgresql.xql}
dbqd.acs-tcl.tcl.apm-procs.apm_dependency_add.dependency_add {dbqd.acs-tcl.tcl.apm-procs.apm_dependency_add.dependency_add {

	select apm_package_version__add_dependency(
            :dependency_id,
	    :version_id,
	    :dependency_uri,
	    :dependency_version
        );					 
    
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-tcl/tcl/apm-procs-postgresql.xql}
dbqd.acs-tcl.tcl.apm-procs.apm_dependency_remove.dependency_remove {dbqd.acs-tcl.tcl.apm-procs.apm_dependency_remove.dependency_remove {

	select apm_package_version__remove_dependency(
             :dependency_id
	);
    
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-tcl/tcl/apm-procs-postgresql.xql}
dbqd.acs-tcl.tcl.apm-procs.apm_interface_add.interface_add {dbqd.acs-tcl.tcl.apm-procs.apm_interface_add.interface_add {

	select apm_package_version__add_interface(
            :interface_id,
	    :version_id,
	    :interface_uri,
	    :interface_version
        );					 
    
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-tcl/tcl/apm-procs-postgresql.xql}
dbqd.acs-tcl.tcl.apm-procs.apm_interface_remove.interface_remove {dbqd.acs-tcl.tcl.apm-procs.apm_interface_remove.interface_remove {

	select apm_package_version__remove_interface(
             :interface_id
	);
    
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-tcl/tcl/apm-procs-postgresql.xql}
dbqd.acs-tcl.tcl.apm-procs.apm_package_version_installed_p.apm_package_version_installed_p {dbqd.acs-tcl.tcl.apm-procs.apm_package_version_installed_p.apm_package_version_installed_p {

	select case when count(*) = 0 then 0 else 1 end 
        from apm_package_versions
	where package_key = :package_key
	and version_name = :version_name
    
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-tcl/tcl/apm-procs-postgresql.xql}
dbqd.acs-tcl.tcl.apm-procs.apm_package_instance_new.invoke_new {dbqd.acs-tcl.tcl.apm-procs.apm_package_instance_new.invoke_new {

      select apm_package__new(
        :package_id,
        :instance_name,
        :package_key,
        'apm_package',
        now(),
        null,
        null,
        :context_id
      );
    
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-tcl/tcl/apm-procs-postgresql.xql}
dbqd.acs-tcl.tcl.apm-procs.apm_package_instance_delete.apm_package_instance_delete {dbqd.acs-tcl.tcl.apm-procs.apm_package_instance_delete.apm_package_instance_delete {
	select apm_package__delete(:package_id);
  } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-tcl/tcl/apm-procs-postgresql.xql}
dbqd.acs-tcl.tcl.apm-procs.apm_parameter_unregister.parameter_unregister {dbqd.acs-tcl.tcl.apm-procs.apm_parameter_unregister.parameter_unregister {
      
	begin
	delete from apm_parameter_values 
	where parameter_id = :parameter_id;
	delete from apm_parameters 
	where parameter_id = :parameter_id;
	PERFORM acs_object__delete(:parameter_id);

        return null;
	end;
    
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-tcl/tcl/apm-procs-postgresql.xql}
dbqd.acs-tcl.tcl.apm-procs.apm_package_url_from_id_mem.apm_package_url_from_id {dbqd.acs-tcl.tcl.apm-procs.apm_package_url_from_id_mem.apm_package_url_from_id {
      
	select site_node__url(node_id) 
          from site_nodes 
         where object_id = :package_id
    
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-tcl/tcl/apm-procs-postgresql.xql}
dbqd.acs-tcl.tcl.apm-procs.apm_application_new_checkbox.package_types {dbqd.acs-tcl.tcl.apm-procs.apm_application_new_checkbox.package_types {
         select package_key,
         pretty_name
         from apm_package_types
         where not (apm_package__singleton_p(package_key) = 1 and
                    apm_package__num_instances(package_key) >= 1)
         order by pretty_name
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-tcl/tcl/apm-procs-postgresql.xql}
dbqd.acs-tcl.tcl.apm-procs.apm_package_version_enabled_p.apm_package_version_enabled_p {dbqd.acs-tcl.tcl.apm-procs.apm_package_version_enabled_p.apm_package_version_enabled_p {
      select case when count(*) = 0 then 0 else 1 end from apm_package_versions
      where version_id = :version_id
      and enabled_p = 't'
    } {} {} {} c:/web/openacs-4/packages/acs-tcl/tcl/apm-procs.xql}
dbqd.acs-tcl.tcl.apm-procs.apm_parameter_register.apm_parameter_cache_update {dbqd.acs-tcl.tcl.apm-procs.apm_parameter_register.apm_parameter_cache_update {
      select v.package_id, p.parameter_name, 
      case when v.value_id is null then p.default_value else v.attr_value end as attr_value
      from apm_parameters p left outer join apm_parameter_values v
      using (parameter_id)
      where p.package_key = :package_key
    } {} {} {} c:/web/openacs-4/packages/acs-tcl/tcl/apm-procs.xql}
dbqd.acs-tcl.tcl.apm-procs.apm_enabled_packages.enabled_packages {dbqd.acs-tcl.tcl.apm-procs.apm_enabled_packages.enabled_packages {
      select distinct package_key
      from apm_package_versions
      where enabled_p='t'
    } {} {} {} c:/web/openacs-4/packages/acs-tcl/tcl/apm-procs.xql}
dbqd.acs-tcl.tcl.apm-procs.apm_pretty_name_for_db_type.pretty_db_name_select {dbqd.acs-tcl.tcl.apm-procs.apm_pretty_name_for_db_type.pretty_db_name_select {
      select pretty_db_name
      from apm_package_db_types
      where db_type_key = :db_type
    } {} {} {} c:/web/openacs-4/packages/acs-tcl/tcl/apm-procs.xql}
dbqd.acs-tcl.tcl.apm-procs.apm_package_parameters.get_names {dbqd.acs-tcl.tcl.apm-procs.apm_package_parameters.get_names {
      select parameter_name from apm_parameters
      where package_key = :package_key
    } {} {} {} c:/web/openacs-4/packages/acs-tcl/tcl/apm-procs.xql}
dbqd.acs-tcl.tcl.apm-procs.apm_package_registered_p.apm_package_registered_p {dbqd.acs-tcl.tcl.apm-procs.apm_package_registered_p.apm_package_registered_p {
      select 1 from apm_package_types 
      where package_key = :package_key
    } {} {} {} c:/web/openacs-4/packages/acs-tcl/tcl/apm-procs.xql}
dbqd.acs-tcl.tcl.apm-procs.apm_package_installed_p_not_cached.apm_package_installed_p {dbqd.acs-tcl.tcl.apm-procs.apm_package_installed_p_not_cached.apm_package_installed_p {
      select 1 from apm_package_versions
      where package_key = :package_key
      and installed_p = 't'
    } {} {} {} c:/web/openacs-4/packages/acs-tcl/tcl/apm-procs.xql}
dbqd.acs-tcl.tcl.apm-procs.apm_package_enabled_p.apm_package_enabled_p {dbqd.acs-tcl.tcl.apm-procs.apm_package_enabled_p.apm_package_enabled_p {
      select 1 from apm_package_versions
      where package_key = :package_key
      and enabled_p = 't'
    } {} {} {} c:/web/openacs-4/packages/acs-tcl/tcl/apm-procs.xql}
dbqd.acs-tcl.tcl.apm-procs.apm_version_installed_p.apm_version_installed_p {dbqd.acs-tcl.tcl.apm-procs.apm_version_installed_p.apm_version_installed_p {
      select 1 from apm_package_versions
      where version_id = :version_id
      and installed_p = 't'
    } {} {} {} c:/web/openacs-4/packages/acs-tcl/tcl/apm-procs.xql}
dbqd.acs-tcl.tcl.apm-procs.apm_parameter_update.parameter_update {dbqd.acs-tcl.tcl.apm-procs.apm_parameter_update.parameter_update {
      update apm_parameters 
      set parameter_name = :parameter_name,
      default_value  = :default_value,
      datatype       = :datatype, 
      description	   = :description,
      section_name   = :section_name,
      min_n_values   = :min_n_values,
      max_n_values   = :max_n_values
      where parameter_id = :parameter_id
    } {} {} {} c:/web/openacs-4/packages/acs-tcl/tcl/apm-procs.xql}
dbqd.acs-tcl.tcl.apm-procs.apm_parameter_unregister.all_parameters_packages {dbqd.acs-tcl.tcl.apm-procs.apm_parameter_unregister.all_parameters_packages {
      select package_id, parameter_id, parameter_name 
      from apm_packages p, apm_parameters ap
      where p.package_key = ap.package_key
      and ap.parameter_id = :parameter_id
    } {} {} {} c:/web/openacs-4/packages/acs-tcl/tcl/apm-procs.xql}
dbqd.acs-tcl.tcl.apm-procs.apm_package_key_from_id_mem.apm_package_key_from_id {dbqd.acs-tcl.tcl.apm-procs.apm_package_key_from_id_mem.apm_package_key_from_id {
      select package_key
      from apm_packages
      where package_id = :package_id
    } {} {} {} c:/web/openacs-4/packages/acs-tcl/tcl/apm-procs.xql}
dbqd.acs-tcl.tcl.apm-procs.apm_version_id_from_package_key.get_id {dbqd.acs-tcl.tcl.apm-procs.apm_version_id_from_package_key.get_id {
        select version_id 
        from apm_enabled_package_versions 
        where package_key = :package_key
    } {} {} {} c:/web/openacs-4/packages/acs-tcl/tcl/apm-procs.xql}
dbqd.acs-tcl.tcl.apm-procs.apm_package_id_from_key_mem.apm_package_id_from_key {dbqd.acs-tcl.tcl.apm-procs.apm_package_id_from_key_mem.apm_package_id_from_key {
      select package_id
      from apm_packages
      where package_key = :package_key
    } {} {} {} c:/web/openacs-4/packages/acs-tcl/tcl/apm-procs.xql}
dbqd.acs-tcl.tcl.apm-procs.apm_version_info.apm_package_by_version_id {dbqd.acs-tcl.tcl.apm-procs.apm_version_info.apm_package_by_version_id {
      select pretty_name, version_name, package_key, installed_p, distribution_uri, tagged_p
      apm_package_version_info
      where version_id = :version_id
    } {} {} {} c:/web/openacs-4/packages/acs-tcl/tcl/apm-procs.xql}
dbqd.acs-tcl.tcl.apm-procs.apm_parameter_sync.apm_parameter_names_and_values {dbqd.acs-tcl.tcl.apm-procs.apm_parameter_sync.apm_parameter_names_and_values {
      select parameter_name, attr_value
      from apm_parameters p, apm_parameter_values v, apm_packages a
      where p.parameter_id = v.parameter_id
      and a.package_id = v.package_id
      and a.package_id = :package_id
    } {} {} {} c:/web/openacs-4/packages/acs-tcl/tcl/apm-procs.xql}
dbqd.acs-tcl.tcl.apm-procs.apm_get_callback_proc.select_proc {dbqd.acs-tcl.tcl.apm-procs.apm_get_callback_proc.select_proc {
        select proc
        from apm_package_callbacks
        where version_id = :version_id
        and   type = :type
    } {} {} {} c:/web/openacs-4/packages/acs-tcl/tcl/apm-procs.xql}
dbqd.acs-tcl.tcl.apm-procs.apm_set_callback_proc.insert_proc {dbqd.acs-tcl.tcl.apm-procs.apm_set_callback_proc.insert_proc {
        insert into apm_package_callbacks
          (version_id, type, proc)
        values (:version_id, :type, :proc)
    } {} {} {} c:/web/openacs-4/packages/acs-tcl/tcl/apm-procs.xql}
dbqd.acs-tcl.tcl.apm-procs.apm_set_callback_proc.update_proc {dbqd.acs-tcl.tcl.apm-procs.apm_set_callback_proc.update_proc {
        update apm_package_callbacks
                set proc = :proc
        where version_id = :version_id
          and type = :type
    } {} {} {} c:/web/openacs-4/packages/acs-tcl/tcl/apm-procs.xql}
dbqd.acs-tcl.tcl.apm-procs.apm_remove_callback_proc.delete_proc {dbqd.acs-tcl.tcl.apm-procs.apm_remove_callback_proc.delete_proc {
        delete from apm_package_callbacks
        where version_id = (select version_id 
                            from apm_enabled_package_versions 
                            where package_key = :package_key)
        and   type = :type
    } {} {} {} c:/web/openacs-4/packages/acs-tcl/tcl/apm-procs.xql}
dbqd.acs-tcl.tcl.apm-procs.apm_version_get.select_version_info {dbqd.acs-tcl.tcl.apm-procs.apm_version_get.select_version_info {
        select version_id,
               package_key,
               version_name,
               version_uri,
               summary,
               description_format,
               description,
               to_char(release_date, 'YYYY-MM-DD') as release_date,
               vendor,
               vendor_uri,
               enabled_p,
               installed_p,
               tagged_p,
               imported_p,
               data_model_loaded_p,
               cvs_import_results,
               activation_date,
               deactivation_date,
               item_id,
               content_length,
               distribution_uri,
               distribution_date,
               auto_mount
        from apm_package_versions
        where version_id = :version_id
    } {} {} {} c:/web/openacs-4/packages/acs-tcl/tcl/apm-procs.xql}
dbqd.acs-tcl.tcl.apm-xml-procs.apm_generate_package_spec.package_version_select {dbqd.acs-tcl.tcl.apm-xml-procs.apm_generate_package_spec.package_version_select {
      
        select t.package_key, 
               t.package_uri, 
               t.pretty_name, 
               t.pretty_plural, 
               t.package_type,
	       t.initial_install_p, 
               t.singleton_p, 
               v.*
        from   apm_package_versions v, 
               apm_package_types t
        where  v.version_id = :version_id
        and    v.package_key = t.package_key
    
      } {} {} {} c:/web/openacs-4/packages/acs-tcl/tcl/apm-xml-procs.xql}
dbqd.acs-tcl.tcl.apm-xml-procs.apm_generate_package_spec.owner_info {dbqd.acs-tcl.tcl.apm-xml-procs.apm_generate_package_spec.owner_info {
      
        select owner_uri, owner_name
        from   apm_package_owners
        where  version_id = :version_id
        order  by sort_key, owner_uri
    
      } {} {} {} c:/web/openacs-4/packages/acs-tcl/tcl/apm-xml-procs.xql}
dbqd.acs-tcl.tcl.apm-xml-procs.apm_generate_package_spec.dependency_info {dbqd.acs-tcl.tcl.apm-xml-procs.apm_generate_package_spec.dependency_info {
      
        select dependency_type, 
               service_uri, 
               service_version
        from   apm_package_dependencies
        where  version_id = :version_id
        order by dependency_type, service_uri
    
      } {} {} {} c:/web/openacs-4/packages/acs-tcl/tcl/apm-xml-procs.xql}
dbqd.acs-tcl.tcl.apm-xml-procs.apm_generate_package_spec.callback_info {dbqd.acs-tcl.tcl.apm-xml-procs.apm_generate_package_spec.callback_info {
        select type,
               proc
        from apm_package_callbacks
        where version_id = :version_id
      } {} {} {} c:/web/openacs-4/packages/acs-tcl/tcl/apm-xml-procs.xql}
dbqd.acs-tcl.tcl.apm-xml-procs.apm_generate_package_spec.callback_info {dbqd.acs-tcl.tcl.apm-xml-procs.apm_generate_package_spec.callback_info {
        select type,
               proc
        from apm_package_callbacks
        where version_id = :version_id
      } {} {} {} c:/web/openacs-4/packages/acs-tcl/tcl/apm-xml-procs.xql}
dbqd.acs-tcl.tcl.apm-xml-procs.apm_generate_package_spec.parameter_info {dbqd.acs-tcl.tcl.apm-xml-procs.apm_generate_package_spec.parameter_info {
      
	select parameter_name, 
               description, 
               datatype, 
               section_name, 
               default_value, 
               min_n_values, 
               max_n_values
        from   apm_parameters
	where  package_key = :package_key
        order  by parameter_name
    
      } {} {} {} c:/web/openacs-4/packages/acs-tcl/tcl/apm-xml-procs.xql}
dbqd.acs-tcl.tcl.community-core-2-procs.oacs::user::get.select_user {dbqd.acs-tcl.tcl.community-core-2-procs.oacs::user::get.select_user {
select user_id, screen_name, last_visit, second_to_last_visit,
first_names, last_name, email, first_names || ' ' || last_name as full_name
from users, parties, persons
where 
users.user_id = parties.party_id and
users.user_id = persons.person_id and
user_id= :user_id
} {} {} {} c:/web/openacs-4/packages/acs-tcl/tcl/community-core-2-procs.xql}
dbqd.acs-tcl.tcl.community-core-procs-oracle.ad_user_new.user_insert {dbqd.acs-tcl.tcl.community-core-procs-oracle.ad_user_new.user_insert {
      
	begin
	    :1 := acs.add_user(
                user_id => :user_id,
		email => :email,
		url => :url,
                authority_id => :authority_id,
		username => :username,
		first_names => :first_names,
		last_name => :last_name,
		screen_name => :screen_name,
		password => :hashed_password,
	        salt => :salt,
                creation_user => :creation_user,
	        creation_ip => :peeraddr,
	        email_verified_p => :email_verified_p,
	        member_state => :member_state
            );
	end;
	
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-tcl/tcl/community-core-procs-oracle.xql}
dbqd.acs-tcl.tcl.community-core-procs-oracle.acs_user::delete.permanent_delete {dbqd.acs-tcl.tcl.community-core-procs-oracle.acs_user::delete.permanent_delete {
          begin
              acs_user.del(
                  user_id => :user_id
              );
          end;
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-tcl/tcl/community-core-procs-oracle.xql}
dbqd.acs-tcl.tcl.community-core-procs-oracle.person::delete.delete_person {dbqd.acs-tcl.tcl.community-core-procs-oracle.person::delete.delete_person {

	    select person.del(:person_id) from dual;
	
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-tcl/tcl/community-core-procs-oracle.xql}
dbqd.acs-tcl.tcl.community-core-procs-oracle.user_search {dbqd.acs-tcl.tcl.community-core-procs-oracle.user_search {
      select distinct u.first_names || ' ' || u.last_name || ' (' || u.email || ')' as name, u.user_id
      from   cc_users u
      where  upper(nvl(u.first_names || ' ', '')  ||
             nvl(u.last_name || ' ', '') ||
             u.email || ' ' ||
             nvl(u.screen_name, '')) like upper('%'||:value||'%')
      order  by name
  } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-tcl/tcl/community-core-procs-oracle.xql}
dbqd.acs-tcl.tcl.community-core-procs-oracle.acs_user::get_from_user_id_not_cached.select_user_info {dbqd.acs-tcl.tcl.community-core-procs-oracle.acs_user::get_from_user_id_not_cached.select_user_info {

          select user_id, 
                 username,
                 authority_id,
                 first_names, 
                 last_name, 
                 first_names || ' ' || last_name as name,
                 email, 
                 url, 
                 screen_name,
                 priv_name,  
                 priv_email,
                 email_verified_p,
                 email_bouncing_p,
                 no_alerts_until,
                 last_visit,
                 second_to_last_visit,
                 n_sessions,
                 password_question,
                 password_answer,
                 password_changed_date,
                 member_state,
                 rel_id, 
                 trunc(sysdate - password_changed_date) as password_age_days
          from   cc_users 
          where  user_id = :user_id

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-tcl/tcl/community-core-procs-oracle.xql}
dbqd.acs-tcl.tcl.community-core-procs-oracle.acs_user::get_from_username_not_cached.select_user_info {dbqd.acs-tcl.tcl.community-core-procs-oracle.acs_user::get_from_username_not_cached.select_user_info {

          select user_id, 
                 username,
                 authority_id,
                 first_names, 
                 last_name, 
                 first_names || ' ' || last_name as name,
                 email, 
                 url, 
                 screen_name,
                 priv_name,  
                 priv_email,
                 email_verified_p,
                 email_bouncing_p,
                 no_alerts_until,
                 last_visit,
                 second_to_last_visit,
                 n_sessions,
                 password_question,
                 password_answer,
                 password_changed_date,
                 member_state,
                 rel_id, 
                 trunc(sysdate - password_changed_date) as password_age_days
          from   cc_users 
          where  authority_id = :authority_id
          and    upper(username) = upper(:username)

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-tcl/tcl/community-core-procs-oracle.xql}
dbqd.acs-tcl.tcl.community-core-procs.ad_user_new.user_insert {dbqd.acs-tcl.tcl.community-core-procs.ad_user_new.user_insert {

            select acs__add_user(
                :user_id,
                'user',
                now(),
                null,
                :peeraddr,
                :authority_id,
                :username,
                :email,
                :url,
                :first_names,
                :last_name,
                :hashed_password,
                :salt,
                :screen_name,
                :email_verified_p,
                :member_state
            );
        
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-tcl/tcl/community-core-procs-postgresql.xql}
dbqd.acs-tcl.tcl.community-core-procs.acs_user::delete.permanent_delete {dbqd.acs-tcl.tcl.community-core-procs.acs_user::delete.permanent_delete {
          select acs_user__delete(:user_id);
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-tcl/tcl/community-core-procs-postgresql.xql}
dbqd.acs-tcl.tcl.community-core-procs.person::delete.delete_person {dbqd.acs-tcl.tcl.community-core-procs.person::delete.delete_person {

            select person__delete(:person_id);
        
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-tcl/tcl/community-core-procs-postgresql.xql}
dbqd.acs-tcl.tcl.community-core-procs.user_search {dbqd.acs-tcl.tcl.community-core-procs.user_search {
      select distinct u.first_names || ' ' || u.last_name || ' (' || u.email || ')' as name, u.user_id
      from   cc_users u
      where  upper(coalesce(u.first_names || ' ', '')  ||
             coalesce(u.last_name || ' ', '') ||
             u.email || ' ' ||
             coalesce(u.screen_name, '')) like upper('%'||:value||'%')
      order  by name
  } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-tcl/tcl/community-core-procs-postgresql.xql}
dbqd.acs-tcl.tcl.community-core-procs.acs_user::get_from_user_id_not_cached.select_user_info {dbqd.acs-tcl.tcl.community-core-procs.acs_user::get_from_user_id_not_cached.select_user_info {

          select user_id, 
                 username,
                 authority_id,
                 first_names, 
                 last_name, 
                 first_names || ' ' || last_name as name,
                 email, 
                 url, 
                 screen_name,
                 priv_name,  
                 priv_email,
                 email_verified_p,
                 email_bouncing_p,
                 no_alerts_until,
                 last_visit,
                 second_to_last_visit,
                 n_sessions,
                 password_question,
                 password_answer,
                 password_changed_date,
                 member_state,
                 rel_id, 
                 trunc(date_part('epoch', age(password_changed_date))/(60*60*24)) as password_age_days
          from   cc_users 
          where  user_id = :user_id

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-tcl/tcl/community-core-procs-postgresql.xql}
dbqd.acs-tcl.tcl.community-core-procs.acs_user::get_from_username_not_cached.select_user_info {dbqd.acs-tcl.tcl.community-core-procs.acs_user::get_from_username_not_cached.select_user_info {

          select user_id, 
                 username,
                 authority_id,
                 first_names, 
                 last_name, 
                 first_names || ' ' || last_name as name,
                 email, 
                 url, 
                 screen_name,
                 priv_name,  
                 priv_email,
                 email_verified_p,
                 email_bouncing_p,
                 no_alerts_until,
                 last_visit,
                 second_to_last_visit,
                 n_sessions,
                 password_question,
                 password_answer,
                 password_changed_date,
                 member_state,
                 rel_id, 
                 trunc(date_part('epoch', age(password_changed_date))/(60*60*24)) as password_age_days
          from   cc_users 
          where  authority_id = :authority_id
          and    upper(username) = upper(:username)

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-tcl/tcl/community-core-procs-postgresql.xql}
dbqd.acs-tcl.tcl.community-core-procs.cc_lookup_screen_name_user.user_select {dbqd.acs-tcl.tcl.community-core-procs.cc_lookup_screen_name_user.user_select {
      
	select user_id from cc_users where upper(screen_name) = upper(:screen_name)
    
      } {} {} {} c:/web/openacs-4/packages/acs-tcl/tcl/community-core-procs.xql}
dbqd.acs-tcl.tcl.community-core-procs.cc_email_from_party.email_from_party {dbqd.acs-tcl.tcl.community-core-procs.cc_email_from_party.email_from_party {
      
	select email from parties where party_id = :party_id
    
      } {} {} {} c:/web/openacs-4/packages/acs-tcl/tcl/community-core-procs.xql}
dbqd.acs-tcl.tcl.community-core-procs.cc_lookup_name_group.group_select {dbqd.acs-tcl.tcl.community-core-procs.cc_lookup_name_group.group_select {
      
	select group_id from groups where group_name = :name
    
      } {} {} {} c:/web/openacs-4/packages/acs-tcl/tcl/community-core-procs.xql}
dbqd.acs-tcl.tcl.community-core-procs.person::get.get_person {dbqd.acs-tcl.tcl.community-core-procs.person::get.get_person {
      
	select first_names, last_name
          from persons 
         where person_id = :person_id
    
      } {} {} {} c:/web/openacs-4/packages/acs-tcl/tcl/community-core-procs.xql}
dbqd.acs-tcl.tcl.community-core-procs.person::update.update_person {dbqd.acs-tcl.tcl.community-core-procs.person::update.update_person {
      
	update persons
           set first_names = :first_names, 
               last_name = :last_name
         where person_id = :person_id
    
      } {} {} {} c:/web/openacs-4/packages/acs-tcl/tcl/community-core-procs.xql}
dbqd.acs-tcl.tcl.community-core-procs.person::name_not_cached.get_person_name {dbqd.acs-tcl.tcl.community-core-procs.person::name_not_cached.get_person_name {
      
          select first_names||' '||last_name as person_name
            from persons
           where person_id = :person_id
          
      } {} {} {} c:/web/openacs-4/packages/acs-tcl/tcl/community-core-procs.xql}
dbqd.acs-tcl.tcl.community-core-procs.person::get_bio.select_bio {dbqd.acs-tcl.tcl.community-core-procs.person::get_bio.select_bio {
          select attr_value as bio
          from acs_attribute_values
          where object_id = :person_id
          and attribute_id =
             (select attribute_id
              from acs_attributes
              where object_type = 'person'
              and attribute_name = 'bio')
      } {} {} {} c:/web/openacs-4/packages/acs-tcl/tcl/community-core-procs.xql}
dbqd.acs-tcl.tcl.community-core-procs.person::update_bio.insert_bio {dbqd.acs-tcl.tcl.community-core-procs.person::update_bio.insert_bio {
        insert into acs_attribute_values
	(object_id, attribute_id, attr_value)
	values 
	(:person_id, (select attribute_id
          from acs_attributes
          where object_type = 'person'
          and attribute_name = 'bio'), :bio)
      } {} {} {} c:/web/openacs-4/packages/acs-tcl/tcl/community-core-procs.xql}
dbqd.acs-tcl.tcl.community-core-procs.person::update_bio.update_bio {dbqd.acs-tcl.tcl.community-core-procs.person::update_bio.update_bio {
        update acs_attribute_values
	set attr_value = :bio
	where object_id = :person_id
	and attribute_id =
          (select attribute_id
          from acs_attributes
          where object_type = 'person'
          and attribute_name = 'bio')
      } {} {} {} c:/web/openacs-4/packages/acs-tcl/tcl/community-core-procs.xql}
dbqd.acs-tcl.tcl.community-core-procs.acs_user::update.user_update {dbqd.acs-tcl.tcl.community-core-procs.acs_user::update.user_update {
      
	update users
        set    [join $cols ", "]
        where  user_id = :user_id
    
      } {} {} {} c:/web/openacs-4/packages/acs-tcl/tcl/community-core-procs.xql}
dbqd.acs-tcl.tcl.community-core-procs.acs_user::get_by_username.user_id_from_username {dbqd.acs-tcl.tcl.community-core-procs.acs_user::get_by_username.user_id_from_username {

            select user_id
            from   users
            where  upper(username) = upper(:username)
            and    authority_id =:authority_id

      } {} {} {} c:/web/openacs-4/packages/acs-tcl/tcl/community-core-procs.xql}
dbqd.acs-tcl.tcl.community-core-procs.party::update.party_update {dbqd.acs-tcl.tcl.community-core-procs.party::update.party_update {
      
	update parties
        set    [join $cols ", "]
        where  party_id = :party_id

      } {} {} {} c:/web/openacs-4/packages/acs-tcl/tcl/community-core-procs.xql}
dbqd.acs-tcl.tcl.community-core-procs.party::get_by_email.select_party_id {dbqd.acs-tcl.tcl.community-core-procs.party::get_by_email.select_party_id {
      
        select party_id 
        from   parties 
        where  lower(email) = lower(:email)

      } {} {} {} c:/web/openacs-4/packages/acs-tcl/tcl/community-core-procs.xql}
dbqd.acs-tcl.tcl.defs-procs-oracle.ad_record_query_string.query_string_record {dbqd.acs-tcl.tcl.defs-procs-oracle.ad_record_query_string.query_string_record {
            insert
            into query_strings 
            (query_date, query_string, subsection, n_results, user_id)
            values
            (sysdate, :query_string, :subsection, :n_results, :user_id)
        } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-tcl/tcl/defs-procs-oracle.xql}
dbqd.acs-tcl.tcl.defs-procs.ad_record_query_string.query_string_record {dbqd.acs-tcl.tcl.defs-procs.ad_record_query_string.query_string_record {
            insert
            into query_strings 
            (query_date, query_string, subsection, n_results, user_id)
            values
            (now(), :query_string, :subsection, :n_results, :user_id)
        } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-tcl/tcl/defs-procs-postgresql.xql}
dbqd.acs-tcl.tcl.defs-procs.ad_pretty_mailing_address_from_args.user_name_select {dbqd.acs-tcl.tcl.defs-procs.ad_pretty_mailing_address_from_args.user_name_select {
      select first_names, last_name, email
      from persons, parties
      where person_id = :user_id
      and person_id = party_id
    } {} {} {} c:/web/openacs-4/packages/acs-tcl/tcl/defs-procs.xql}
dbqd.acs-tcl.tcl.defs-procs.ad_parameter_cache.select_parameter_value {dbqd.acs-tcl.tcl.defs-procs.ad_parameter_cache.select_parameter_value {
      select apm_parameter_values.attr_value
      from apm_parameters, apm_parameter_values
      where apm_parameter_values.package_id = :package_id
      and apm_parameter_values.parameter_id = apm_parameters.parameter_id
      and apm_parameters.parameter_name = :parameter_name
    } {} {} {} c:/web/openacs-4/packages/acs-tcl/tcl/defs-procs.xql}
dbqd.acs-tcl.tcl.defs-procs.ad_parameter_cache_all.parameters_get_all {dbqd.acs-tcl.tcl.defs-procs.ad_parameter_cache_all.parameters_get_all {
      select v.package_id, p.parameter_name, v.attr_value
      from apm_parameters p, apm_parameter_values v
      where p.parameter_id = v.parameter_id
    } {} {} {} c:/web/openacs-4/packages/acs-tcl/tcl/defs-procs.xql}
dbqd.acs-tcl.tcl.deprecated-utilities-procs.nmc_GetNewIDNumber.id_number_update {dbqd.acs-tcl.tcl.deprecated-utilities-procs.nmc_GetNewIDNumber.id_number_update {
      update id_numbers set :id_name = :id_name + 1
      } {} {} {} c:/web/openacs-4/packages/acs-tcl/tcl/deprecated-utilities-procs.xql}
dbqd.acs-tcl.tcl.deprecated-utilities-procs.nmc_GetNewIDNumber.nmc_getnewidnumber {dbqd.acs-tcl.tcl.deprecated-utilities-procs.nmc_GetNewIDNumber.nmc_getnewidnumber {
      select unique :id_name from id_numbers
      } {} {} {} c:/web/openacs-4/packages/acs-tcl/tcl/deprecated-utilities-procs.xql}
dbqd.acs-tcl.tcl.membership-rel-procs-oracle.membership_rel::change_state.approve {dbqd.acs-tcl.tcl.membership-rel-procs-oracle.membership_rel::change_state.approve {
            begin membership_rel.approve(rel_id => :rel_id); end;
        } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-tcl/tcl/membership-rel-procs-oracle.xql}
dbqd.acs-tcl.tcl.membership-rel-procs-oracle.membership_rel::change_state.ban {dbqd.acs-tcl.tcl.membership-rel-procs-oracle.membership_rel::change_state.ban {
            begin membership_rel.ban(rel_id => :rel_id); end;
        } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-tcl/tcl/membership-rel-procs-oracle.xql}
dbqd.acs-tcl.tcl.membership-rel-procs-oracle.membership_rel::change_state.delete {dbqd.acs-tcl.tcl.membership-rel-procs-oracle.membership_rel::change_state.delete {
            begin membership_rel.deleted(rel_id => :rel_id); end;
        } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-tcl/tcl/membership-rel-procs-oracle.xql}
dbqd.acs-tcl.tcl.membership-rel-procs-oracle.membership_rel::change_state.reject {dbqd.acs-tcl.tcl.membership-rel-procs-oracle.membership_rel::change_state.reject {
            begin membership_rel.reject(rel_id => :rel_id); end;
        } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-tcl/tcl/membership-rel-procs-oracle.xql}
dbqd.acs-tcl.tcl.membership-rel-procs-oracle.membership_rel::change_state.unapprove {dbqd.acs-tcl.tcl.membership-rel-procs-oracle.membership_rel::change_state.unapprove {
            begin membership_rel.unapprove(rel_id => :rel_id); end;
        } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-tcl/tcl/membership-rel-procs-oracle.xql}
dbqd.acs-tcl.tcl.membership-rel-procs.membership_rel::change_state.approve {dbqd.acs-tcl.tcl.membership-rel-procs.membership_rel::change_state.approve {
            begin return membership_rel__approve(:rel_id); end;
        } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-tcl/tcl/membership-rel-procs-postgresql.xql}
dbqd.acs-tcl.tcl.membership-rel-procs.membership_rel::change_state.ban {dbqd.acs-tcl.tcl.membership-rel-procs.membership_rel::change_state.ban {
            begin return membership_rel__ban(:rel_id); end;
        } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-tcl/tcl/membership-rel-procs-postgresql.xql}
dbqd.acs-tcl.tcl.membership-rel-procs.membership_rel::change_state.delete {dbqd.acs-tcl.tcl.membership-rel-procs.membership_rel::change_state.delete {
            begin return membership_rel__deleted(:rel_id); end;
        } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-tcl/tcl/membership-rel-procs-postgresql.xql}
dbqd.acs-tcl.tcl.membership-rel-procs.membership_rel::change_state.reject {dbqd.acs-tcl.tcl.membership-rel-procs.membership_rel::change_state.reject {
            begin return membership_rel__reject(:rel_id); end;
        } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-tcl/tcl/membership-rel-procs-postgresql.xql}
dbqd.acs-tcl.tcl.membership-rel-procs.membership_rel::change_state.unapprove {dbqd.acs-tcl.tcl.membership-rel-procs.membership_rel::change_state.unapprove {
            begin return membership_rel__unapprove(:rel_id); end;
        } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-tcl/tcl/membership-rel-procs-postgresql.xql}
dbqd.acs-tcl.tcl.membership-rel-procs.membership_rel::change_state.update_modifying_user {dbqd.acs-tcl.tcl.membership-rel-procs.membership_rel::change_state.update_modifying_user {
      
          update acs_objects set modifying_user = :user_id where object_id = :rel_id 
    
      } {} {} {} c:/web/openacs-4/packages/acs-tcl/tcl/membership-rel-procs.xql}
dbqd.acs-tcl.tcl.object-procs-oracle.acs_object_name.object_name_get {dbqd.acs-tcl.tcl.object-procs-oracle.acs_object_name.object_name_get {
      
	begin :1 := acs_object.name(:object_id); end;
    
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-tcl/tcl/object-procs-oracle.xql}
dbqd.acs-tcl.tcl.object-procs.acs_object_name.object_name_get {dbqd.acs-tcl.tcl.object-procs.acs_object_name.object_name_get {

        select acs_object__name(:object_id); 
    
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-tcl/tcl/object-procs-postgresql.xql}
dbqd.acs-tcl.tcl.object-procs.acs_lookup_magic_object.magic_object_select {dbqd.acs-tcl.tcl.object-procs.acs_lookup_magic_object.magic_object_select {
      
	select object_id from acs_magic_objects where name = :name
    
      } {} {} {} c:/web/openacs-4/packages/acs-tcl/tcl/object-procs.xql}
dbqd.acs-tcl.tcl.object-procs.acs_object_type.object_type_select {dbqd.acs-tcl.tcl.object-procs.acs_object_type.object_type_select {
      
        select object_type
        from acs_objects
        where object_id = :object_id
    
      } {} {} {} c:/web/openacs-4/packages/acs-tcl/tcl/object-procs.xql}
dbqd.acs-tcl.tcl.object-type-procs-oracle.acs_object_type_hierarchy.object_type_not_null {dbqd.acs-tcl.tcl.object-type-procs-oracle.acs_object_type_hierarchy.object_type_not_null {

	select object_type,
	       pretty_name,
               '' as indent
	  from acs_object_types
	 start with object_type = :object_type
       connect by prior supertype = object_type
         order by level desc

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-tcl/tcl/object-type-procs-oracle.xql}
dbqd.acs-tcl.tcl.object-type-procs-oracle.acs_object_type_hierarchy.object_type_is_null {dbqd.acs-tcl.tcl.object-type-procs-oracle.acs_object_type_hierarchy.object_type_is_null {

	select object_type,
	       pretty_name,
	       replace(lpad(' ', (level - 1) * $indent_width), ' ', '$indent_string') as indent
	  from acs_object_types
         start with supertype is null
       connect by supertype = prior object_type

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-tcl/tcl/object-type-procs-oracle.xql}
dbqd.acs-tcl.tcl.object-type-procs.acs_object_type_hierarchy.object_type_not_null {dbqd.acs-tcl.tcl.object-type-procs.acs_object_type_hierarchy.object_type_not_null {

	select o2.object_type,
	       o2.pretty_name,
               '' as indent,
               tree_level(o2.tree_sortkey) as level
	  from (select * 
                  from acs_object_types 
                 where object_type = :object_type) o1, 
               acs_object_types o2
         where o2.tree_sortkey <= o1.tree_sortkey
           and o1.tree_sortkey between o2.tree_sortkey and tree_right(o2.tree_sortkey)
         order by level desc

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-tcl/tcl/object-type-procs-postgresql.xql}
dbqd.acs-tcl.tcl.object-type-procs.acs_object_type_hierarchy.object_type_is_null {dbqd.acs-tcl.tcl.object-type-procs.acs_object_type_hierarchy.object_type_is_null {

	select object_type,
	       pretty_name,
               repeat('$indent_string',(tree_level(tree_sortkey) - 1) * $indent_width) as indent
	  from acs_object_types
	 order by tree_sortkey

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-tcl/tcl/object-type-procs-postgresql.xql}
dbqd.acs-tcl.tcl.object-type-procs.acs_object_type_hierarchy.object_types {dbqd.acs-tcl.tcl.object-type-procs.acs_object_type_hierarchy.object_types {
        $sql
      } {} {} {} c:/web/openacs-4/packages/acs-tcl/tcl/object-type-procs.xql}
dbqd.acs-tcl.tcl.parameter-procs-oracle.parameter::set_value.set_parameter_value {dbqd.acs-tcl.tcl.parameter-procs-oracle.parameter::set_value.set_parameter_value {
            begin
                apm.set_value(
                    package_id => :package_id,
                    parameter_name => :parameter,
                    attr_value => :value
                );
            end;
        } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-tcl/tcl/parameter-procs-oracle.xql}
dbqd.acs-tcl.tcl.parameter-procs.parameter::set_value.set_parameter_value {dbqd.acs-tcl.tcl.parameter-procs.parameter::set_value.set_parameter_value {
            select apm__set_value(
                :package_id,
                :parameter,
                :value
            );
        } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-tcl/tcl/parameter-procs-postgresql.xql}
dbqd.acs-tcl.tcl.request-processor-init.ad_acs_admin_id_mem.acs_kernel_id_get {dbqd.acs-tcl.tcl.request-processor-init.ad_acs_admin_id_mem.acs_kernel_id_get {
      
	select package_id from apm_packages
	where package_key = 'acs-admin'
    
      } {} {} {} c:/web/openacs-4/packages/acs-tcl/tcl/request-processor-init.xql}
dbqd.acs-tcl.tcl.request-processor-init.ad_acs_admin_id_mem.acs_kernel_id_get {dbqd.acs-tcl.tcl.request-processor-init.ad_acs_admin_id_mem.acs_kernel_id_get {
      
	select package_id from apm_packages
	where package_key = 'acs-admin'
    
      } {} {} {} c:/web/openacs-4/packages/acs-tcl/tcl/request-processor-init.xql}
dbqd.acs-tcl.tcl.request-processor-procs-oracle.root_of_host.root_get {dbqd.acs-tcl.tcl.request-processor-procs-oracle.root_of_host.root_get {
      
	select site_node.url(:node_id) as url
	from dual

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-tcl/tcl/request-processor-procs-oracle.xql}
dbqd.acs-tcl.tcl.request-processor-procs.root_of_host.root_get {dbqd.acs-tcl.tcl.request-processor-procs.root_of_host.root_get {
      
	select site_node__url(:node_id) as url
    
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-tcl/tcl/request-processor-procs-postgresql.xql}
dbqd.acs-tcl.tcl.request-processor-procs.ad_acs_kernel_id_mem.acs_kernel_id_get {dbqd.acs-tcl.tcl.request-processor-procs.ad_acs_kernel_id_mem.acs_kernel_id_get {
      
	select package_id from apm_packages
	where package_key = 'acs-kernel'
    
      } {} {} {} c:/web/openacs-4/packages/acs-tcl/tcl/request-processor-procs.xql}
dbqd.acs-tcl.tcl.request-processor-procs.ad_acs_admin_id.acs_admin_id_get {dbqd.acs-tcl.tcl.request-processor-procs.ad_acs_admin_id.acs_admin_id_get {
      
        select package_id from apm_packages
        where package_key = 'acs-admin'
    
      } {} {} {} c:/web/openacs-4/packages/acs-tcl/tcl/request-processor-procs.xql}
dbqd.acs-tcl.tcl.request-processor-procs.rp_lookup_node_from_host.node_id {dbqd.acs-tcl.tcl.request-processor-procs.rp_lookup_node_from_host.node_id {

        select node_id 
	from host_node_map
	where host = :host

      } {} {} {} c:/web/openacs-4/packages/acs-tcl/tcl/request-processor-procs.xql}
dbqd.acs-tcl.tcl.security-init.secret_tokens_exists {dbqd.acs-tcl.tcl.security-init.secret_tokens_exists {

      select case when count(*) = 0 then 0 else 1 end from secret_tokens

      } {} {} {} c:/web/openacs-4/packages/acs-tcl/tcl/security-init.xql}
dbqd.acs-tcl.tcl.security-procs-oracle.sec_update_user_session_info.update_last_visit {dbqd.acs-tcl.tcl.security-procs-oracle.sec_update_user_session_info.update_last_visit {
      
        update users
        set second_to_last_visit = last_visit,
            last_visit = sysdate,
            n_sessions = n_sessions + 1
        where user_id = :user_id
    
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-tcl/tcl/security-procs-oracle.xql}
dbqd.acs-tcl.tcl.security-procs-oracle.ad_maybe_redirect_for_registration.sql_test_1 {dbqd.acs-tcl.tcl.security-procs-oracle.ad_maybe_redirect_for_registration.sql_test_1 {
      select test_sql('select 1 from dual where 1=[DoubleApos $value]') from dual
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-tcl/tcl/security-procs-oracle.xql}
dbqd.acs-tcl.tcl.security-procs-oracle.ad_maybe_redirect_for_registration.sql_test_2 {dbqd.acs-tcl.tcl.security-procs-oracle.ad_maybe_redirect_for_registration.sql_test_2 {
      select test_sql('select 1 from dual where 1=[DoubleApos "'$value'"]') from dual
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-tcl/tcl/security-procs-oracle.xql}
dbqd.acs-tcl.tcl.security-procs-oracle.populate_secret_tokens_db.insert_random_token {dbqd.acs-tcl.tcl.security-procs-oracle.populate_secret_tokens_db.insert_random_token {
      
	    insert /*+ APPEND */ into secret_tokens(token_id, token, token_timestamp)
	    values(sec_security_token_id_seq.nextval, :random_token, sysdate)
	
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-tcl/tcl/security-procs-oracle.xql}
dbqd.acs-tcl.tcl.security-procs-oracle.populate_secret_tokens_cache.get_secret_tokens {dbqd.acs-tcl.tcl.security-procs-oracle.populate_secret_tokens_cache.get_secret_tokens {
      
	    select * from (
	    select token_id, token
	    from secret_tokens
	    sample(15)
	    ) where rownum < :num_tokens
	
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-tcl/tcl/security-procs-oracle.xql}
dbqd.acs-tcl.tcl.security-procs-oracle.ad_set_client_property.prop_update_dml_clob {dbqd.acs-tcl.tcl.security-procs-oracle.ad_set_client_property.prop_update_dml_clob {
         update sec_session_properties
         set property_value = null,
           property_clob = empty_clob(),
           secure_p = :secure,
           last_hit = :last_hit 
         where session_id = :session_id and
           module = :module and
           property_name = :name
         returning property_clob into :1
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-tcl/tcl/security-procs-oracle.xql}
dbqd.acs-tcl.tcl.security-procs-oracle.ad_set_client_property.prop_update_dml {dbqd.acs-tcl.tcl.security-procs-oracle.ad_set_client_property.prop_update_dml {
         update sec_session_properties
         set property_value = :value,
           property_clob = null,
           secure_p = :secure,
           last_hit = :last_hit 
         where session_id = :session_id and
           module = :module and
           property_name = :name
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-tcl/tcl/security-procs-oracle.xql}
dbqd.acs-tcl.tcl.security-procs-oracle.ad_change_password.password_update {dbqd.acs-tcl.tcl.security-procs-oracle.ad_change_password.password_update {
        update users 
        set    password = :new_password, 
               salt = :salt,
               password_changed_date = sysdate
        where  user_id = :user_id
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-tcl/tcl/security-procs-oracle.xql}
dbqd.acs-tcl.tcl.security-procs.ad_set_client_property.prop_update_dml {dbqd.acs-tcl.tcl.security-procs.ad_set_client_property.prop_update_dml {
        update sec_session_properties
        set property_value = :value,
          secure_p = :secure,
          last_hit = :last_hit 
        where session_id = :session_id and
          module = :module and
          property_name = :name
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-tcl/tcl/security-procs-postgresql.xql}
dbqd.acs-tcl.tcl.security-procs.sec_update_user_session_info.update_last_visit {dbqd.acs-tcl.tcl.security-procs.sec_update_user_session_info.update_last_visit {

        update users
        set second_to_last_visit = last_visit,
            last_visit = now(),
            n_sessions = n_sessions + 1
        where user_id = :user_id
    
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-tcl/tcl/security-procs-postgresql.xql}
dbqd.acs-tcl.tcl.security-procs.ad_maybe_redirect_for_registration.sql_test_1 {dbqd.acs-tcl.tcl.security-procs.ad_maybe_redirect_for_registration.sql_test_1 {
      select test_sql('select 1  where 1=[DoubleApos $value]') 
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-tcl/tcl/security-procs-postgresql.xql}
dbqd.acs-tcl.tcl.security-procs.ad_maybe_redirect_for_registration.sql_test_2 {dbqd.acs-tcl.tcl.security-procs.ad_maybe_redirect_for_registration.sql_test_2 {
      select test_sql('select 1  where 1=[DoubleApos "'$value'"]') 
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-tcl/tcl/security-procs-postgresql.xql}
dbqd.acs-tcl.tcl.security-procs.populate_secret_tokens_db.insert_random_token {dbqd.acs-tcl.tcl.security-procs.populate_secret_tokens_db.insert_random_token {

	    insert into secret_tokens(token_id, token, token_timestamp)
	    values(sec_security_token_id_seq.nextval, :random_token, now())
	
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-tcl/tcl/security-procs-postgresql.xql}
dbqd.acs-tcl.tcl.security-procs.populate_secret_tokens_cache.get_secret_tokens {dbqd.acs-tcl.tcl.security-procs.populate_secret_tokens_cache.get_secret_tokens {
      
    select token_id, token
    from secret_tokens,
         (select trunc(random()*(select count(*)-15 from secret_tokens))::integer as first) r
    where token_id >= r.first and r.first+15 > token_id;
	
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-tcl/tcl/security-procs-postgresql.xql}
dbqd.acs-tcl.tcl.security-procs.ad_change_password.password_update {dbqd.acs-tcl.tcl.security-procs.ad_change_password.password_update {
        update users 
        set    password = :new_password, 
               salt = :salt,
               password_changed_date = current_timestamp
        where  user_id = :user_id
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-tcl/tcl/security-procs-postgresql.xql}
dbqd.acs-tcl.tcl.security-procs.sec_sweep_sessions.sessions_sweep {dbqd.acs-tcl.tcl.security-procs.sec_sweep_sessions.sessions_sweep {
      
	delete from sec_session_properties
	where last_hit < :expires
    
      } {} {} {} c:/web/openacs-4/packages/acs-tcl/tcl/security-procs.xql}
dbqd.acs-tcl.tcl.security-procs.ad_check_password.password_select {dbqd.acs-tcl.tcl.security-procs.ad_check_password.password_select {
      select password, salt from users where user_id = :user_id
      } {} {} {} c:/web/openacs-4/packages/acs-tcl/tcl/security-procs.xql}
dbqd.acs-tcl.tcl.security-procs.sec_lookup_property.property_lookup_sec {dbqd.acs-tcl.tcl.security-procs.sec_lookup_property.property_lookup_sec {
      
	    select property_value, secure_p
	    from sec_session_properties
	    where session_id = :id
	    and module = :module
	    and property_name = :name
	
      } {} {} {} c:/web/openacs-4/packages/acs-tcl/tcl/security-procs.xql}
dbqd.acs-tcl.tcl.security-procs.sec_get_token.get_token {dbqd.acs-tcl.tcl.security-procs.sec_get_token.get_token {
      select token from secret_tokens
                       	                 where token_id = :token_id
      } {} {} {} c:/web/openacs-4/packages/acs-tcl/tcl/security-procs.xql}
dbqd.acs-tcl.tcl.security-procs.ad_set_client_property.prop_insert_dml {dbqd.acs-tcl.tcl.security-procs.ad_set_client_property.prop_insert_dml {
	insert into sec_session_properties
	  (session_id, module, property_name, secure_p, last_hit)
	select :session_id, :module, :name, :secure, :last_hit
        from dual
        where not exists (select 1
                          from sec_session_properties
                          where session_id = :session_id and
                          module = :module and
                          property_name = :name)
      } {} {} {} c:/web/openacs-4/packages/acs-tcl/tcl/security-procs.xql}
dbqd.acs-tcl.tcl.security-procs.sec_lookup_property.update_last_hit_dml {dbqd.acs-tcl.tcl.security-procs.sec_lookup_property.update_last_hit_dml {
	update sec_session_properties
	   set last_hit = :new_last_hit
	 where session_id = :id and
               property_name = :name
      } {} {} {} c:/web/openacs-4/packages/acs-tcl/tcl/security-procs.xql}
dbqd.acs-tcl.tcl.site-node-apm-integration-procs.site_node_apm_integration::get_child_package_id.select_child_package_id {dbqd.acs-tcl.tcl.site-node-apm-integration-procs.site_node_apm_integration::get_child_package_id.select_child_package_id {
            select sn1.object_id
            from site_nodes sn1,
                 apm_packages
            where sn1.parent_id = (select sn2.node_id
                                   from site_nodes sn2
                                   where sn2.object_id = :package_id)
            and sn1.object_id = apm_packages.package_id
            and apm_packages.package_key = :package_key
        } {} {} {} c:/web/openacs-4/packages/acs-tcl/tcl/site-node-apm-integration-procs.xql}
dbqd.acs-tcl.tcl.site-node-object-map-procs-oracle.site_node_object_map::new.set_node_mapping {dbqd.acs-tcl.tcl.site-node-object-map-procs-oracle.site_node_object_map::new.set_node_mapping {
            declare
            begin
                site_node_object_map.new(object_id => :object_id, node_id => :node_id);
            end;
        } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-tcl/tcl/site-node-object-map-procs-oracle.xql}
dbqd.acs-tcl.tcl.site-node-object-map-procs-oracle.site_node_object_map::del.unset_node_mapping {dbqd.acs-tcl.tcl.site-node-object-map-procs-oracle.site_node_object_map::del.unset_node_mapping {
            declare
            begin
                site_node_object_map.del(object_id => :object_id);
            end;
        } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-tcl/tcl/site-node-object-map-procs-oracle.xql}
dbqd.acs-tcl.tcl.site-node-object-map-procs.site_node_object_map::new.set_node_mapping {dbqd.acs-tcl.tcl.site-node-object-map-procs.site_node_object_map::new.set_node_mapping {
            select site_node_object_map__new(:object_id, :node_id)
        } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-tcl/tcl/site-node-object-map-procs-postgresql.xql}
dbqd.acs-tcl.tcl.site-node-object-map-procs.site_node_object_map::del.unset_node_mapping {dbqd.acs-tcl.tcl.site-node-object-map-procs.site_node_object_map::del.unset_node_mapping {
            select site_node_object_map__del(:object_id)
        } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-tcl/tcl/site-node-object-map-procs-postgresql.xql}
dbqd.acs-tcl.tcl.site-node-object-map-procs.site_node_object_map::get_node_id.select_node_mapping {dbqd.acs-tcl.tcl.site-node-object-map-procs.site_node_object_map::get_node_id.select_node_mapping {
            select node_id
            from site_node_object_mappings
            where object_id = :object_id
        } {} {} {} c:/web/openacs-4/packages/acs-tcl/tcl/site-node-object-map-procs.xql}
dbqd.acs-tcl.tcl.site-nodes-procs-oracle.site_node::delete.delete_site_node {dbqd.acs-tcl.tcl.site-nodes-procs-oracle.site_node::delete.delete_site_node {
            begin site_node.del(:node_id); end;
        } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-tcl/tcl/site-nodes-procs-oracle.xql}
dbqd.acs-tcl.tcl.site-nodes-procs-oracle.site_node::init_cache.select_site_nodes {dbqd.acs-tcl.tcl.site-nodes-procs-oracle.site_node::init_cache.select_site_nodes {
            select site_node.url(site_nodes.node_id) as url,
                   site_nodes.node_id,
                   site_nodes.parent_id,
                   site_nodes.name,
                   site_nodes.directory_p,
                   site_nodes.pattern_p,
                   site_nodes.object_id,
                   (select acs_objects.object_type
                    from acs_objects
                    where acs_objects.object_id = site_nodes.object_id) as object_type,
                   apm_packages.package_key,
                   apm_packages.package_id,
                   apm_packages.instance_name,
                   apm_package_types.package_type
            from site_nodes,
                 apm_packages,
                 apm_package_types
            where site_nodes.object_id = apm_packages.package_id(+)
            and apm_package_types.package_key (+) = apm_packages.package_key
        } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-tcl/tcl/site-nodes-procs-oracle.xql}
dbqd.acs-tcl.tcl.site-nodes-procs-oracle.site_node::update_cache.select_site_node {dbqd.acs-tcl.tcl.site-nodes-procs-oracle.site_node::update_cache.select_site_node {
            select site_node.url(site_nodes.node_id) as url,
                   site_nodes.node_id,
                   site_nodes.parent_id,
                   site_nodes.name,
                   site_nodes.directory_p,
                   site_nodes.pattern_p,
                   site_nodes.object_id,
                   (select acs_objects.object_type
                    from acs_objects
                    where acs_objects.object_id = site_nodes.object_id) as object_type,
                   apm_packages.package_key,
                   apm_packages.package_id,
                   apm_packages.instance_name,
                   apm_package_types.package_type
            from site_nodes,
                 apm_packages,
                 apm_package_types
            where site_nodes.node_id = :node_id
            and site_nodes.object_id = apm_packages.package_id (+)
            and apm_package_types.package_key (+) = apm_packages.package_key
        } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-tcl/tcl/site-nodes-procs-oracle.xql}
dbqd.acs-tcl.tcl.site-nodes-procs-oracle.site_node::get_url_from_object_id.select_url_from_object_id {dbqd.acs-tcl.tcl.site-nodes-procs-oracle.site_node::get_url_from_object_id.select_url_from_object_id {
            select site_node.url(node_id)
            from site_nodes
            where object_id = :object_id
            order by site_node.url(node_id) desc
        } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/acs-tcl/tcl/site-nodes-procs-oracle.xql}
dbqd.acs-tcl.tcl.site-nodes-procs.site_node::delete.delete_site_node {dbqd.acs-tcl.tcl.site-nodes-procs.site_node::delete.delete_site_node {
            select site_node__delete(:node_id);
        } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-tcl/tcl/site-nodes-procs-postgresql.xql}
dbqd.acs-tcl.tcl.site-nodes-procs.site_node::init_cache.select_site_nodes {dbqd.acs-tcl.tcl.site-nodes-procs.site_node::init_cache.select_site_nodes {
            select site_node__url(site_nodes.node_id) as url,
                   site_nodes.node_id,
                   site_nodes.parent_id,
                   site_nodes.name,
                   site_nodes.directory_p,
                   site_nodes.pattern_p,
                   site_nodes.object_id,
                   (select acs_objects.object_type
                    from acs_objects
                    where acs_objects.object_id = site_nodes.object_id) as object_type,
                   apm_packages.package_key,
                   apm_packages.package_id,
                   apm_packages.instance_name,
                   apm_package_types.package_type
            from site_nodes left join 
                 apm_packages on site_nodes.object_id = apm_packages.package_id left join
                 apm_package_types using (package_key)
        } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-tcl/tcl/site-nodes-procs-postgresql.xql}
dbqd.acs-tcl.tcl.site-nodes-procs.site_node::update_cache.select_site_node {dbqd.acs-tcl.tcl.site-nodes-procs.site_node::update_cache.select_site_node {
            select site_node__url(site_nodes.node_id) as url,
                   site_nodes.node_id,
                   site_nodes.parent_id,
                   site_nodes.name,
                   site_nodes.directory_p,
                   site_nodes.pattern_p,
                   site_nodes.object_id,
                   (select acs_objects.object_type
                    from acs_objects
                    where acs_objects.object_id = site_nodes.object_id) as object_type,
                   apm_packages.package_key,
                   apm_packages.package_id,
                   apm_packages.instance_name,
                   apm_package_types.package_type
            from site_nodes left join 
                 apm_packages on site_nodes.object_id = apm_packages.package_id left join
                 apm_package_types using (package_key)
            where site_nodes.node_id = :node_id
        } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-tcl/tcl/site-nodes-procs-postgresql.xql}
dbqd.acs-tcl.tcl.site-nodes-procs.site_node::get_url_from_object_id.select_url_from_object_id {dbqd.acs-tcl.tcl.site-nodes-procs.site_node::get_url_from_object_id.select_url_from_object_id {
            select site_node__url(node_id)
            from site_nodes
            where object_id = :object_id
            order by site_node__url(node_id) desc
        } {} {} {postgresql 7.1} c:/web/openacs-4/packages/acs-tcl/tcl/site-nodes-procs-postgresql.xql}
dbqd.acs-tcl.tcl.site-nodes-procs.site_node::mount.mount_object {dbqd.acs-tcl.tcl.site-nodes-procs.site_node::mount.mount_object {
            update site_nodes
            set object_id = :object_id
            where node_id = :node_id
        } {} {} {} c:/web/openacs-4/packages/acs-tcl/tcl/site-nodes-procs.xql}
dbqd.acs-tcl.tcl.site-nodes-procs.site_node::rename.rename_node {dbqd.acs-tcl.tcl.site-nodes-procs.site_node::rename.rename_node {
            update site_nodes
            set    name = :name
            where  node_id = :node_id
        } {} {} {} c:/web/openacs-4/packages/acs-tcl/tcl/site-nodes-procs.xql}
dbqd.acs-tcl.tcl.site-nodes-procs.site_node::unmount.unmount_object {dbqd.acs-tcl.tcl.site-nodes-procs.site_node::unmount.unmount_object {
            update site_nodes
            set object_id = null
            where node_id = :node_id
        } {} {} {} c:/web/openacs-4/packages/acs-tcl/tcl/site-nodes-procs.xql}
dbqd.acs-tcl.tcl.user-extensions-procs.acs_user_extension::list_extensions.select_extensions {dbqd.acs-tcl.tcl.user-extensions-procs.acs_user_extension::list_extensions.select_extensions {
  select 
         impl_name from acs_sc_impls, acs_sc_bindings, acs_sc_contracts
   where
         acs_sc_impls.impl_id = acs_sc_bindings.impl_id 
     and
         acs_sc_contracts.contract_id = acs_sc_bindings.contract_id 
     and 
         acs_sc_contracts.contract_name = 'UserData'
} {} {} {} c:/web/openacs-4/packages/acs-tcl/tcl/user-extensions-procs.xql}
dbqd.acs-tcl.tcl.utilities-procs.ad_dbclick_check_dml.double_click_check {dbqd.acs-tcl.tcl.utilities-procs.ad_dbclick_check_dml.double_click_check {
      
		
		select 1 as one
		from $table_name
		where $id_column_name = :generated_id
		
	    
      } {} {} {} c:/web/openacs-4/packages/acs-tcl/tcl/utilities-procs.xql}
dbqd.acs-tcl.tcl.utilities-procs.validate_zip_code.zip_code_exists {dbqd.acs-tcl.tcl.utilities-procs.validate_zip_code.zip_code_exists {
		    select 1
		      from dual
		     where exists (select 1
				     from zip_codes
				    where zip_code like :zip_5)
      } {} {} {} c:/web/openacs-4/packages/acs-tcl/tcl/utilities-procs.xql}
dbqd.acs-tcl.tcl.utilities-procs.util_email_unique_p.email_unique_p {dbqd.acs-tcl.tcl.utilities-procs.util_email_unique_p.email_unique_p {
    select count(*)
    from dual
    where not exists (select 1
                      from parties
                      where email = lower(:email))
  } {} {} {} c:/web/openacs-4/packages/acs-tcl/tcl/utilities-procs.xql}
dbqd.acs-tcl.tcl.widgets-procs.all_states {dbqd.acs-tcl.tcl.widgets-procs.all_states {
      
	select state_name, abbrev from states order by state_name
    
      } {} {} {} c:/web/openacs-4/packages/acs-tcl/tcl/widgets-procs.xql}
dbqd.acs-tcl.tcl.widgets-procs.all_countries {dbqd.acs-tcl.tcl.widgets-procs.all_countries {
      
	select default_name, iso from countries order by default_name 
    
      } {} {} {} c:/web/openacs-4/packages/acs-tcl/tcl/widgets-procs.xql}
dbqd.acs-tcl.tcl.widgets-procs.ad_db_select_widget.currency_info {dbqd.acs-tcl.tcl.widgets-procs.ad_db_select_widget.currency_info {
      
	select currency_name, iso 
	from currency_codes 
	where supported_p='t'
	order by currency_name 
    
      } {} {} {} c:/web/openacs-4/packages/acs-tcl/tcl/widgets-procs.xql}
dbqd.acs-templating.tcl.widget-procs-oracle.template::data::transform::party_search.search_persons {dbqd.acs-templating.tcl.widget-procs-oracle.template::data::transform::party_search.search_persons {
        select (first_names || ' ' || last_name) as name, pe.person_id from persons pe, parties pa 
        where pe.person_id=pa.party_id and (
          lower(pe.first_names || ' ' || pe.last_name) like '%' || lower(:search_string) || '%'
          or lower(pa.email) like '%' || lower(:search_string) || '%'
	)
        order by lower(first_names || ' ' || last_name)
      } {} {} {} c:/web/openacs-4/packages/acs-templating/tcl/widget-procs-oracle.xql}
dbqd.acs-templating.tcl.widget-procs-oracle.template::data::transform::party_search.search_groups_relsegs {dbqd.acs-templating.tcl.widget-procs-oracle.template::data::transform::party_search.search_groups_relsegs {
        (
        select g1.group_name as party_name, g1.group_id as party_id from groups g1
        where lower(g1.group_name) like '%' || lower(:search_string) || '%'
        )
        union
        (
        select g2.group_name || ' : ' || s2.segment_name as party_name, s2.segment_id as party_id
        from rel_segments s2, groups g2  
        where s2.group_id=g2.group_id and
        lower(g2.group_name || ' : ' || s2.segment_name) like '%' || lower(:search_string) || '%'
        )
        order by party_name
      } {} {} {} c:/web/openacs-4/packages/acs-templating/tcl/widget-procs-oracle.xql}
dbqd.acs-templating.tcl.widget-procs.template::data::transform::party_search.search_persons {dbqd.acs-templating.tcl.widget-procs.template::data::transform::party_search.search_persons {
        select (first_names || ' ' || last_name) as name, pe.person_id from persons pe 
        join parties pa on pe.person_id=pa.party_id
        where lower(pe.first_names || ' ' || pe.last_name) like '%' || lower(:search_string) || '%'
        or lower(pa.email) like '%' || lower(:search_string) || '%'
        order by lower(first_names || ' ' || last_name)
      } {} {} {} c:/web/openacs-4/packages/acs-templating/tcl/widget-procs-postgresql.xql}
dbqd.acs-templating.tcl.widget-procs.template::data::transform::party_search.search_groups_relsegs {dbqd.acs-templating.tcl.widget-procs.template::data::transform::party_search.search_groups_relsegs {
        (
        select g1.group_name as party_name, g1.group_id as party_id from groups g1
        where lower(g1.group_name) like '%' || lower(:search_string) || '%'
        )
        union
        (
        select g2.group_name || ' : ' || s2.segment_name as party_name, s2.segment_id as party_id
        from rel_segments s2
        join groups g2 on s2.group_id=g2.group_id
        where lower(g2.group_name || ' : ' || s2.segment_name) like '%' || lower(:search_string) || '%'
        )
        order by party_name
      } {} {} {} c:/web/openacs-4/packages/acs-templating/tcl/widget-procs-postgresql.xql}
dbqd.acs-templating.www.doc.demo.form.get_user_id {dbqd.acs-templating.www.doc.demo.form.get_user_id {
      select ad_template_sample_users_seq.nextval
    } {} {} {} c:/web/openacs-4/packages/acs-templating/www/doc/demo/form.xql}
dbqd.acs-templating.www.doc.demo.user-edit.get_users {dbqd.acs-templating.www.doc.demo.user-edit.get_users {
      select user_id, first_name, last_name 
      from ad_template_sample_users 
      where lower(first_name) like '%' || :user_search || '%' 
         or lower(last_name) like '%' || :user_search || '%'
    } {} {} {} c:/web/openacs-4/packages/acs-templating/www/doc/demo/user-edit.xql}
dbqd.acs-templating.www.doc.demo.user-edit.get_info {dbqd.acs-templating.www.doc.demo.user-edit.get_info {
      select user_id, first_name, last_name, address1, address2, city, state
      from ad_template_sample_users
      where user_id = :user_id
    } {} {} {} c:/web/openacs-4/packages/acs-templating/www/doc/demo/user-edit.xql}
dbqd.address-book.tcl.address-book-procs.ab::contact::1row.get_contact_info {dbqd.address-book.tcl.address-book-procs.ab::contact::1row.get_contact_info {
      
	select last_name,
	       first_names,
	       title,
	       organization
	  from ab_contacts
	 where contact_id = :contact_id
    
      } {} {} {} c:/web/openacs-4/packages/address-book/tcl/address-book-procs.xql}
dbqd.address-book.tcl.address-book-procs.ab::contact_attr::multirow.get_contact_attrs {dbqd.address-book.tcl.address-book-procs.ab::contact_attr::multirow.get_contact_attrs {
      
	select attr_id,
               type_name,
	       value
	  from ab_contact_attr_types acat,
	       ab_contact_attrs aca
	 where acat.type_key = aca.type_key
	   and aca.contact_id = :contact_id
      order by sort_key
      } {} {} {} c:/web/openacs-4/packages/address-book/tcl/address-book-procs.xql}
dbqd.address-book.tcl.address-book-procs.ab::contact::displaywidget.get_contact_attributes {dbqd.address-book.tcl.address-book-procs.ab::contact::displaywidget.get_contact_attributes {
      
	select type_name,
	       value
	  from ab_contact_attr_types acat,
	       ab_contact_attrs aca
	 where acat.type_key = aca.type_key
	   and aca.contact_id = :contact_id
      order by sort_key
    
      } {} {} {} c:/web/openacs-4/packages/address-book/tcl/address-book-procs.xql}
dbqd.address-book.tcl.address-book-procs.ab::contact::displaywidget.get_addresses {dbqd.address-book.tcl.address-book-procs.ab::contact::displaywidget.get_addresses {
      
	select address_id,
	       address_name,
	       line_one,
	       line_two,
	       line_three,
	       line_four,
	       municipality_name,
	       region_id,
	       postal_code,
	       country_id
	  from addresses_located
	 where locatee_id = :contact_id
      order by sort_key
    
      } {} {} {} c:/web/openacs-4/packages/address-book/tcl/address-book-procs.xql}
dbqd.address-book.www.address-ae-2.address_exists_p {dbqd.address-book.www.address-ae-2.address_exists_p {
      select case when count(*) = 0 then 0 else 1 end from pl_addresses where address_id = :address_id
      } {} {} {} c:/web/openacs-4/packages/address-book/www/address-ae-2.xql}
dbqd.address-book.www.address-delete-oracle.delete_location_rel {dbqd.address-book.www.address-delete-oracle.delete_location_rel {
      
	begin
	  location_rel.del(:rel_id);
	end;
    
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/address-book/www/address-delete-oracle.xql}
dbqd.address-book.www.address-delete-oracle.delete_orphan_address {dbqd.address-book.www.address-delete-oracle.delete_orphan_address {
      
	    declare
	      v_rel_id subplace_rels.rel_id%TYPE;
	      cursor subplace_rel_cursor is
	        select sr.rel_id
	          from subplace_rels sr,
	               acs_rels ar
	         where ar.rel_id = sr.rel_id
	           and ar.object_id_two = :address_id;
	    begin
	      open subplace_rel_cursor;
	      fetch subplace_rel_cursor into v_rel_id;
	      if not subplace_rel_cursor%NOTFOUND then
	        subplace_rel.del(v_rel_id);
	      end if;
	      close subplace_rel_cursor;
	      pl_address.del(:address_id);
	    end;
	
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/address-book/www/address-delete-oracle.xql}
dbqd.address-book.www.address-delete.delete_location_rel {dbqd.address-book.www.address-delete.delete_location_rel {

	select location_rel__delete(:rel_id);
    
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/address-book/www/address-delete-postgresql.xql}
dbqd.address-book.www.address-delete.delete_orphan_address {dbqd.address-book.www.address-delete.delete_orphan_address {

          select pl_address__delete_orphan_address(:address_id);
	
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/address-book/www/address-delete-postgresql.xql}
dbqd.address-book.www.address-delete.orphan_address {dbqd.address-book.www.address-delete.orphan_address {
      select case when count(*) = 0 then 1 else 0 end from place_element_map where place_id = :address_id
      } {} {} {} c:/web/openacs-4/packages/address-book/www/address-delete.xql}
dbqd.address-book.www.address-delete.address_is_orphan_p {dbqd.address-book.www.address-delete.address_is_orphan_p {
      select case when count(*) = 0 then 0 else 1 end from acs_objects where object_id = :address_id and object_type = 'pl_address'
      } {} {} {} c:/web/openacs-4/packages/address-book/www/address-delete.xql}
dbqd.address-book.www.address-swap-oracle.get_other_rel_id {dbqd.address-book.www.address-swap-oracle.get_other_rel_id {
      select rel_id from (select rel_id from addresses_located where sort_key $operator (select sort_key from location_rels where rel_id = :rel_id) and locatee_id = :contact_id order by sort_key $direction) sq where rownum = 1
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/address-book/www/address-swap-oracle.xql}
dbqd.address-book.www.address-swap-oracle.swap_location_rel_sort_key {dbqd.address-book.www.address-swap-oracle.swap_location_rel_sort_key {
      
    begin
      location_rel.swap_sort(rel_id_one => :rel_id,
                             rel_id_two => :other_rel_id);
    end;

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/address-book/www/address-swap-oracle.xql}
dbqd.address-book.www.address-swap.get_other_rel_id {dbqd.address-book.www.address-swap.get_other_rel_id {
        select rel_id
        from (select rel_id, sort_key
              from addresses_located
              where sort_key $operator (select sort_key
                                        from location_rels
                                        where rel_id = :rel_id) and
                  locatee_id = :contact_id)
        order by sort_key $direction sq
        limit 1
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/address-book/www/address-swap-postgresql.xql}
dbqd.address-book.www.address-swap.swap_location_rel_sort_key {dbqd.address-book.www.address-swap.swap_location_rel_sort_key {

        select location_rel__swap_sort(rel_id_one => :rel_id, rel_id_two => :other_rel_id);

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/address-book/www/address-swap-postgresql.xql}
dbqd.address-book.www.address-swap.get_contact_id {dbqd.address-book.www.address-swap.get_contact_id {
      select locatee_id from pl_addresses_located where rel_id = :rel_id
      } {} {} {} c:/web/openacs-4/packages/address-book/www/address-swap.xql}
dbqd.address-book.www.attr-ae-2-oracle.insert_ab_contact_attr {dbqd.address-book.www.attr-ae-2-oracle.insert_ab_contact_attr {
      
	begin
	  :1 :=
	    ab_contact_attr.new(creation_user => :user_id,
	                        creation_ip => :peeraddr,
	                        context_id => :contact_id,
	                        contact_id => :contact_id,
	                        type_key => :attr_type,
	                        value => :attr_value);
	end;
    
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/address-book/www/attr-ae-2-oracle.xql}
dbqd.address-book.www.attr-ae-2-oracle.delete_empty_attr {dbqd.address-book.www.attr-ae-2-oracle.delete_empty_attr {
      begin ab_contact_attr.del(:attr_id); end;
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/address-book/www/attr-ae-2-oracle.xql}
dbqd.address-book.www.attr-ae-2.insert_ab_contact_attr {dbqd.address-book.www.attr-ae-2.insert_ab_contact_attr {

	select ab_contact_attr__new(:user_id, :peeraddr, :contact_id, :contact_id,
	                            :attr_type, :attr_value);
    
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/address-book/www/attr-ae-2-postgresql.xql}
dbqd.address-book.www.attr-ae-2.delete_empty_attr {dbqd.address-book.www.attr-ae-2.delete_empty_attr {

        select ab_contact_attr__delete(:attr_id);

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/address-book/www/attr-ae-2-postgresql.xql}
dbqd.address-book.www.attr-ae-2.attr_exists_p {dbqd.address-book.www.attr-ae-2.attr_exists_p {
      select case when count(*) = 0 then 0 else 1 end from ab_contact_attrs where attr_id = :attr_id
      } {} {} {} c:/web/openacs-4/packages/address-book/www/attr-ae-2.xql}
dbqd.address-book.www.attr-ae-2.update_ab_contact_attr {dbqd.address-book.www.attr-ae-2.update_ab_contact_attr {
      
	update ab_contact_attrs
	   set type_key = :attr_type, value = :attr_value
	 where attr_id = :attr_id
    
      } {} {} {} c:/web/openacs-4/packages/address-book/www/attr-ae-2.xql}
dbqd.address-book.www.attr-ae.unique_type_key {dbqd.address-book.www.attr-ae.unique_type_key {
      
	select type_key
	  from ab_contact_attr_types
	 where type_id = (select min(type_id)
                            from ab_contact_attr_types
                           where type_key not in (select type_key
                                                    from ab_contact_attrs
                                                   where contact_id = :contact_id))
    
      } {} {} {} c:/web/openacs-4/packages/address-book/www/attr-ae.xql}
dbqd.address-book.www.attr-ae.first_type_key {dbqd.address-book.www.attr-ae.first_type_key {
      
	    select type_key
	      from ab_contact_attr_types
	     where type_id = (select min(type_id)
	                      from ab_contact_attr_types)
        
      } {} {} {} c:/web/openacs-4/packages/address-book/www/attr-ae.xql}
dbqd.address-book.www.attr-ae.get_attribute {dbqd.address-book.www.attr-ae.get_attribute {
      select type_key, value from ab_contact_attrs where attr_id = :attr_id
      } {} {} {} c:/web/openacs-4/packages/address-book/www/attr-ae.xql}
dbqd.address-book.www.attr-delete-oracle.delete_attr {dbqd.address-book.www.attr-delete-oracle.delete_attr {
      
    begin ab_contact_attr.del(:attr_id); end;

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/address-book/www/attr-delete-oracle.xql}
dbqd.address-book.www.attr-delete.delete_attr {dbqd.address-book.www.attr-delete.delete_attr {

        select ab_contact_attr__delete(:attr_id);

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/address-book/www/attr-delete-postgresql.xql}
dbqd.address-book.www.attr-delete.contact_id {dbqd.address-book.www.attr-delete.contact_id {
      
    select contact_id
      from ab_contact_attrs
     where attr_id = :attr_id

      } {} {} {} c:/web/openacs-4/packages/address-book/www/attr-delete.xql}
dbqd.address-book.www.attr-swap-oracle.get_other_attr_id {dbqd.address-book.www.attr-swap-oracle.get_other_attr_id {
      select attr_id from (select attr_id from ab_contact_attrs where sort_key $operator (select sort_key from ab_contact_attrs where attr_id = :attr_id) and contact_id = :contact_id order by sort_key $direction) where rownum = 1
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/address-book/www/attr-swap-oracle.xql}
dbqd.address-book.www.attr-swap-oracle.swap_attribute_sort_key {dbqd.address-book.www.attr-swap-oracle.swap_attribute_sort_key {
      
    begin
      ab_contact_attr.swap_sort(attr_id_one => :attr_id,
                                attr_id_two => :other_attr_id);
    end;

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/address-book/www/attr-swap-oracle.xql}
dbqd.address-book.www.attr-swap.get_other_attr_id {dbqd.address-book.www.attr-swap.get_other_attr_id {

        select attr_id
        from (select attr_id, sort_key
              from ab_contact_attrs
              where sort_key $operator (select sort_key
                                        from ab_contact_attrs
                                        where attr_id = :attr_id) and
                  contact_id = :contact_id)
        order by sort_key $direction
        limit 1

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/address-book/www/attr-swap-postgresql.xql}
dbqd.address-book.www.attr-swap.swap_attribute_sort_key {dbqd.address-book.www.attr-swap.swap_attribute_sort_key {

         select ab_contact_attr__swap_sort(:attr_id, :other_attr_id);

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/address-book/www/attr-swap-postgresql.xql}
dbqd.address-book.www.attr-swap.get_contact_id {dbqd.address-book.www.attr-swap.get_contact_id {
      select contact_id from ab_contact_attrs where attr_id = :attr_id
      } {} {} {} c:/web/openacs-4/packages/address-book/www/attr-swap.xql}
dbqd.address-book.www.contact-add-2-oracle.create_ab_contact {dbqd.address-book.www.contact-add-2-oracle.create_ab_contact {
      
	    begin
	     :1 :=
	      ab_contact.new(contact_id => :contact_id,
	                     creation_user => :user_id,
	                     creation_ip => :peeraddr,
	                     context_id => :instance_id,
	                     first_names => :first_names,
	                     last_name => :last_name,
	                     title => :title,
	                     organization => :organization,
	                     object_id => :instance_id,
	                     category => 'ab_contact');
	    end;
	
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/address-book/www/contact-add-2-oracle.xql}
dbqd.address-book.www.contact-add-2-oracle.grant_admin_to_contact_creator {dbqd.address-book.www.contact-add-2-oracle.grant_admin_to_contact_creator {
      
	    begin acs_permission.grant_permission(object_id => :contact_id,
	                                          grantee_id => :user_id,
	                                          privilege => 'admin');
	    end;
	
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/address-book/www/contact-add-2-oracle.xql}
dbqd.address-book.www.contact-add-2-oracle.insert_ab_contact_attrs {dbqd.address-book.www.contact-add-2-oracle.insert_ab_contact_attrs {
      begin $plsql_block end;
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/address-book/www/contact-add-2-oracle.xql}
dbqd.address-book.www.contact-add-2.create_ab_contact {dbqd.address-book.www.contact-add-2.create_ab_contact {
	 select ab_contact__new(:contact_id, :user_id, :peeraddr, :instance_id,
	                        :first_names, :last_name, :title, :organization,
	                        :instance_id, 'ab_contact');
	
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/address-book/www/contact-add-2-postgresql.xql}
dbqd.address-book.www.contact-add-2.grant_admin_to_contact_creator {dbqd.address-book.www.contact-add-2.grant_admin_to_contact_creator {

	 select acs_permission__grant_permission(:contact_id, :user_id, 'admin');
	
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/address-book/www/contact-add-2-postgresql.xql}
dbqd.address-book.www.contact-add-2.insert_ab_contact_attrs {dbqd.address-book.www.contact-add-2.insert_ab_contact_attrs {
      FIX ME PLSQL
FIX ME PLSQL
begin $plsql_block end;
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/address-book/www/contact-add-2-postgresql.xql}
dbqd.address-book.www.contact-add-2.contact_exists_p {dbqd.address-book.www.contact-add-2.contact_exists_p {
      select case when count(*) = 0 then 0 else 1 end from ab_contacts where contact_id = :contact_id
      } {} {} {} c:/web/openacs-4/packages/address-book/www/contact-add-2.xql}
dbqd.address-book.www.contact-delete-oracle.delete_ab_contact_rel {dbqd.address-book.www.contact-delete-oracle.delete_ab_contact_rel {
      
	begin
	  ab_contact_rel.del(:rel_id);
	end;
    
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/address-book/www/contact-delete-oracle.xql}
dbqd.address-book.www.contact-delete-oracle.delete_orphan_address_perms {dbqd.address-book.www.contact-delete-oracle.delete_orphan_address_perms {
      
	 delete from acs_permissions
         where object_id = :contact_id;
	
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/address-book/www/contact-delete-oracle.xql}
dbqd.address-book.www.contact-delete-oracle.delete_orphan_address {dbqd.address-book.www.contact-delete-oracle.delete_orphan_address {
      
	    begin

	      -- Delete the contact, blowing away orphan addresses.
	      ab_contact.del(contact_id => :contact_id,
	                        delete_orphan_addresses_p => 't');
	    end;
	
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/address-book/www/contact-delete-oracle.xql}
dbqd.address-book.www.contact-delete.delete_ab_contact_rel {dbqd.address-book.www.contact-delete.delete_ab_contact_rel {

	 select ab_contact_rel__delete(:rel_id);
    
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/address-book/www/contact-delete-postgresql.xql}
dbqd.address-book.www.contact-delete.delete_orphan_address_perms {dbqd.address-book.www.contact-delete.delete_orphan_address_perms {

	 delete from acs_permissions
         where object_id = :contact_id;
	
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/address-book/www/contact-delete-postgresql.xql}
dbqd.address-book.www.contact-delete.delete_orphan_address {dbqd.address-book.www.contact-delete.delete_orphan_address {

	 -- Delete the contact, blowing away orphan addresses.
	 ab_contact__delete(contact_id => :contact_id,
	                    delete_orphan_addresses_p => 't');
	
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/address-book/www/contact-delete-postgresql.xql}
dbqd.address-book.www.contact-delete.orphan_contact {dbqd.address-book.www.contact-delete.orphan_contact {
      select case when count(*) = 0 then 1 else 0 end from ab_contacts_related where contact_id = :contact_id
      } {} {} {} c:/web/openacs-4/packages/address-book/www/contact-delete.xql}
dbqd.address-book.www.contact-delete.contact_is_orphan_p {dbqd.address-book.www.contact-delete.contact_is_orphan_p {
      select case when count(*) = 0 then 0 else 1 end from acs_objects where object_id = :contact_id and object_type = 'ab_contact'
      } {} {} {} c:/web/openacs-4/packages/address-book/www/contact-delete.xql}
dbqd.address-book.www.contact-edit-2.update_contact {dbqd.address-book.www.contact-edit-2.update_contact {
      
    update ab_contacts
       set first_names = :first_names,
           last_name = :last_name,
           title = :title,
           organization= :organization
     where contact_id = :contact_id

      } {} {} {} c:/web/openacs-4/packages/address-book/www/contact-edit-2.xql}
dbqd.address-book.www.contact-edit.grab_contact_info {dbqd.address-book.www.contact-edit.grab_contact_info {
      
    select first_names,
           last_name,
           title,
           organization
      from ab_contacts
     where contact_id = :contact_id

      } {} {} {} c:/web/openacs-4/packages/address-book/www/contact-edit.xql}
dbqd.address-book.www.contact-view.grab_addresses {dbqd.address-book.www.contact-view.grab_addresses {
      
    select address_id,
           address_name,
           line_one,
           line_two,
           line_three,
           line_four,
           municipality_name,
           region_id,
           postal_code,
           country_id,
           rel_id
      from pl_addresses_located
     where locatee_id = :contact_id
  order by sort_key

      } {} {} {} c:/web/openacs-4/packages/address-book/www/contact-view.xql}
dbqd.address-book.www.index-oracle.package_name {dbqd.address-book.www.index-oracle.package_name {
      begin :1 := acs_object.name(:instance_id); end;
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/address-book/www/index-oracle.xql}
dbqd.address-book.www.index-oracle.sql_query {dbqd.address-book.www.index-oracle.sql_query {
    select contact_id,
           nvl(last_name,'<br />') as last_name,
           nvl(first_names,'<br />') as first_names,
           nvl(title,'<br />') as title,
           nvl(organization,'<br />') as organization,
           nvl(work_phone,'<br />') as work_phone,
           nvl(home_phone,'<br />') as home_phone,
           nvl(fax,'<br />') as fax,
           nvl(other,'<br />') as other,
           nvl(email,'<br />') as email,
           acs_permission.permission_p(acr.rel_id,:user_id,'delete') as delete_p,
           acr.rel_id
      from ab_contacts_related acr
     where acs_permission.permission_p(contact_id,:user_id,'read') = 't'
       and object_id = :instance_id
      [value_if_exists search_filter]
  } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/address-book/www/index-oracle.xql}
dbqd.address-book.www.index.package_name {dbqd.address-book.www.index.package_name {
         select acs_object__name(:instance_id);
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/address-book/www/index-postgresql.xql}
dbqd.address-book.www.index.sql_query {dbqd.address-book.www.index.sql_query {
    select contact_id,
           coalesce(last_name,'<br />') as last_name,
           coalesce(first_names,'<br />') as first_names,
           coalesce(title,'<br />') as title,
           coalesce(organization,'<br />') as organization,
           coalesce(work_phone,'<br />') as work_phone,
           coalesce(home_phone,'<br />') as home_phone,
           coalesce(fax,'<br />') as fax,
           coalesce(other,'<br />') as other,
           coalesce(email,'<br />') as email,
           acs_permission__permission_p(acr.rel_id,:user_id,'delete') as delete_p,
           acr.rel_id
      from ab_contacts_related acr
     where acs_permission__permission_p(contact_id,:user_id,'read') = 't'
       and object_id = :instance_id
      [value_if_exists search_filter]
  } {} {} {postgresql 7.1} c:/web/openacs-4/packages/address-book/www/index-postgresql.xql}
dbqd.adserver.tcl.adserver-procs-oracle.ad_acs_adserver_url_mem.acs_adserver_mountpoint {dbqd.adserver.tcl.adserver-procs-oracle.ad_acs_adserver_url_mem.acs_adserver_mountpoint {
      
            select site_node.url(s.node_id)
              from site_nodes s, apm_packages a
             where s.object_id = a.package_id
               and a.package_key = 'adserver'
        
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/adserver/tcl/adserver-procs-oracle.xql}
dbqd.adserver.tcl.adserver-procs-oracle.adserver_get_ad_html.adserver_defs_adv_update {dbqd.adserver.tcl.adserver-procs-oracle.adserver_get_ad_html.adserver_defs_adv_update {
      
        update adv_log 
           set display_count = display_count + 1 
         where adv_key = :adv_key 
           and entry_date = trunc (sysdate)
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/adserver/tcl/adserver-procs-oracle.xql}
dbqd.adserver.tcl.adserver-procs-oracle.adserver_get_ad_html.adv_insert {dbqd.adserver.tcl.adserver-procs-oracle.adserver_get_ad_html.adv_insert {
      
                insert into adv_log 
                       (adv_key, entry_date, display_count) 
                values (:adv_key,
                        trunc (sysdate),
                        (select 1 from dual 
                                 where 0 = (select count (*) 
                                              from adv_log 
                                             where adv_key = :adv_key 
                                               and entry_date = trunc (sysdate))))
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/adserver/tcl/adserver-procs-oracle.xql}
dbqd.adserver.tcl.adserver-procs-oracle.adserver_get_ad_html.adserver_defs_adv_user_insert {dbqd.adserver.tcl.adserver-procs-oracle.adserver_get_ad_html.adserver_defs_adv_user_insert {
      
                    insert into adv_user_map (user_id, adv_key, event_time, event_type)
                    values (:user_id,:adv_key,sysdate,'d')
                
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/adserver/tcl/adserver-procs-oracle.xql}
dbqd.adserver.tcl.adserver-procs-oracle.adserver_get_ad_html.adserver_get_ad_least_exposure_first {dbqd.adserver.tcl.adserver-procs-oracle.adserver_get_ad_html.adserver_get_ad_least_exposure_first {
                    select map.adv_key, track_clickthru_p, target_url
                      from adv_group_map map, advs_todays_log log, advs
                     where rownum=1
                       and group_key = :group_key
                       and map.adv_key = advs.adv_key
                       and map.adv_key = log.adv_key
                  order by nvl (display_count, 0)
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/adserver/tcl/adserver-procs-oracle.xql}
dbqd.adserver.tcl.adserver-procs.ad_acs_adserver_url_mem.acs_adserver_mountpoint {dbqd.adserver.tcl.adserver-procs.ad_acs_adserver_url_mem.acs_adserver_mountpoint {
      
            select site_node__url(s.node_id)
              from site_nodes s, apm_packages a
             where s.object_id = a.package_id
               and a.package_key = 'adserver'
        
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/adserver/tcl/adserver-procs-postgresql.xql}
dbqd.adserver.tcl.adserver-procs.adserver_get_ad_html.adserver_defs_adv_update {dbqd.adserver.tcl.adserver-procs.adserver_get_ad_html.adserver_defs_adv_update {
      
        update adv_log 
           set display_count = display_count + 1 
         where adv_key = :adv_key 
           and entry_date = trunc (current_timestamp)
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/adserver/tcl/adserver-procs-postgresql.xql}
dbqd.adserver.tcl.adserver-procs.adserver_get_ad_html.adv_insert {dbqd.adserver.tcl.adserver-procs.adserver_get_ad_html.adv_insert {
      
                insert into adv_log 
                       (adv_key, entry_date, display_count) 
                values (:adv_key,
                        trunc (current_timestamp),
                        (select 1  
                                 where 0 = (select count (*) 
                                              from adv_log 
                                             where adv_key = :adv_key 
                                               and entry_date = trunc (current_timestamp))))
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/adserver/tcl/adserver-procs-postgresql.xql}
dbqd.adserver.tcl.adserver-procs.adserver_get_ad_html.adserver_defs_adv_user_insert {dbqd.adserver.tcl.adserver-procs.adserver_get_ad_html.adserver_defs_adv_user_insert {
      
                    insert into adv_user_map (user_id, adv_key, event_time, event_type)
                    values (:user_id,:adv_key,current_timestamp,'d')
                
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/adserver/tcl/adserver-procs-postgresql.xql}
dbqd.adserver.tcl.adserver-procs.adserver_get_ad_html.adserver_get_ad_least_exposure_first {dbqd.adserver.tcl.adserver-procs.adserver_get_ad_html.adserver_get_ad_least_exposure_first {
                    select map.adv_key, track_clickthru_p, target_url, display_count
                      from adv_group_map map, advs_todays_log log, advs
                     where group_key = :group_key
                       and map.adv_key = advs.adv_key
                       and map.adv_key = log.adv_key

		UNION

                    select map.adv_key, track_clickthru_p, target_url, 0 as display_count
                      from adv_group_map map, advs
                     where group_key = :group_key
                       and map.adv_key = advs.adv_key
		       and (select count(*) from adv_log where advs.adv_key=adv_log.adv_key)=0

		order by display_count asc		

		limit 1

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/adserver/tcl/adserver-procs-postgresql.xql}
dbqd.adserver.tcl.adserver-procs.ad_acs_adserver_id_mem.acs_adserver_id_get {dbqd.adserver.tcl.adserver-procs.ad_acs_adserver_id_mem.acs_adserver_id_get {
      
            select package_id from apm_packages
            where package_key = 'adserver'
        
      } {} {} {} c:/web/openacs-4/packages/adserver/tcl/adserver-procs.xql}
dbqd.adserver.tcl.adserver-procs.adserver_get_ad_html.ad_rotation_method {dbqd.adserver.tcl.adserver-procs.adserver_get_ad_html.ad_rotation_method {
      
                    select rotation_method 
                      from adv_groups
                     where group_key=:group_key
      } {} {} {} c:/web/openacs-4/packages/adserver/tcl/adserver-procs.xql}
dbqd.adserver.tcl.adserver-procs.adserver_get_random_ad_key.adserver_count_group_ads {dbqd.adserver.tcl.adserver-procs.adserver_get_random_ad_key.adserver_count_group_ads {
      
           select adv_count 
             from advs_properties
        
      } {} {} {} c:/web/openacs-4/packages/adserver/tcl/adserver-procs.xql}
dbqd.adserver.tcl.adserver-procs.adserver_get_random_ad_key.adserver_pick {dbqd.adserver.tcl.adserver-procs.adserver_get_random_ad_key.adserver_pick {
      
            select adv_key 
              from advs
             where adv_number = :pick
            
      } {} {} {} c:/web/openacs-4/packages/adserver/tcl/adserver-procs.xql}
dbqd.adserver.tcl.adserver-procs.adserver_get_random_ad_key.adserver_count_group_ads {dbqd.adserver.tcl.adserver-procs.adserver_get_random_ad_key.adserver_count_group_ads {
      
           select adv_count 
             from advs_properties
        
      } {} {} {} c:/web/openacs-4/packages/adserver/tcl/adserver-procs.xql}
dbqd.adserver.tcl.adserver-procs.adserver_get_random_ad_key.adserver_group_get {dbqd.adserver.tcl.adserver-procs.adserver_get_random_ad_key.adserver_group_get {
      
        select adv_key 
          from adv_group_map
         where adv_group_number = :pick
           and group_key = :group_key
        
      } {} {} {} c:/web/openacs-4/packages/adserver/tcl/adserver-procs.xql}
dbqd.adserver.tcl.adserver-procs.adserver_get_sequential_ad_key.adserver_adv_key {dbqd.adserver.tcl.adserver-procs.adserver_get_sequential_ad_key.adserver_adv_key {
      
        select adv_group_number as last,
               ag.adv_count max_adv_group_number
          from adv_group_map grp, adv_groups ag, adv_user_map map
         where user_id=:user_id
           and event_time     = (
               select max(event_time) 
                 from adv_user_map map2
                where map2.user_id = :user_id
                  and map2.adv_key = map.adv_key
                  and map2.event_type = 'd'
               )
           and ag.group_key   = :group_key
           and grp.group_key  = :group_key
           and grp.adv_key    = map.adv_key
           and map.user_id    = :user_id
           and map.event_type = 'd'
      } {} {} {} c:/web/openacs-4/packages/adserver/tcl/adserver-procs.xql}
dbqd.adserver.tcl.adserver-procs.adserver_get_sequential_ad_key.adserver_sequential_get {dbqd.adserver.tcl.adserver-procs.adserver_get_sequential_ad_key.adserver_sequential_get {
      
         select adv_key 
           from adv_group_map
          where group_key=:group_key
            and adv_group_number=:adv_group_number
      } {} {} {} c:/web/openacs-4/packages/adserver/tcl/adserver-procs.xql}
dbqd.adserver.tcl.adserver-procs.adserver_get_ad_html.adserver_get_ad_by_ad_key {dbqd.adserver.tcl.adserver-procs.adserver_get_ad_html.adserver_get_ad_by_ad_key {
                select track_clickthru_p, target_url
                  from advs
                 where adv_key = :adv_key
      } {} {} {} c:/web/openacs-4/packages/adserver/tcl/adserver-procs.xql}
dbqd.adserver.tcl.adserver-procs.adserver_get_ad_html.adserver_get_ad_by_adnumber {dbqd.adserver.tcl.adserver-procs.adserver_get_ad_html.adserver_get_ad_by_adnumber {
                select track_clickthru_p, target_url, adv_key
                  from advs
                 where adv_number = :ad_number
      } {} {} {} c:/web/openacs-4/packages/adserver/tcl/adserver-procs.xql}
dbqd.adserver.tcl.adserver-procs.adserver_get_ad_html.adserver_get_ad_by_group_and_number {dbqd.adserver.tcl.adserver-procs.adserver_get_ad_html.adserver_get_ad_by_group_and_number {
                select a.adv_key, track_clickthru_p, target_url
                  from advs a, adv_group_map m
                 where a.adv_key = m.adv_key
                   and adv_group_number = :ad_number
                   and m.group_key = :group_key
      } {} {} {} c:/web/openacs-4/packages/adserver/tcl/adserver-procs.xql}
dbqd.adserver.www.adhref-oracle.adv_known_user_insert {dbqd.adserver.www.adhref-oracle.adv_known_user_insert {
      
    insert into adv_user_map (user_id, adv_key, event_time, event_type) 
    values (:user_id, :adv_key, sysdate, 'c')
    
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/adserver/www/adhref-oracle.xql}
dbqd.adserver.www.adhref-oracle.adv_update_query {dbqd.adserver.www.adhref-oracle.adv_update_query {
      
update adv_log 
   set click_count = click_count + 1 
 where adv_key = :adv_key 
   and entry_date = trunc (sysdate)
    
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/adserver/www/adhref-oracle.xql}
dbqd.adserver.www.adhref-oracle.adv_insert {dbqd.adserver.www.adhref-oracle.adv_insert {
    insert into adv_log
           (adv_key, entry_date, click_count)
    values (:adv_key,
            trunc (sysdate),
            (select 1 from dual 
                     where 0 = (select count (*) 
                                  from adv_log 
                                 where adv_key = :adv_key 
                                   and entry_date = trunc (sysdate))))"
    db_dml adv_insert $insert_sql
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/adserver/www/adhref-oracle.xql}
dbqd.adserver.www.adhref.adv_known_user_insert {dbqd.adserver.www.adhref.adv_known_user_insert {
      
    insert into adv_user_map (user_id, adv_key, event_time, event_type) 
    values (:user_id, :adv_key, current_timestamp, 'c')
    
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/adserver/www/adhref-postgresql.xql}
dbqd.adserver.www.adhref.adv_update_query {dbqd.adserver.www.adhref.adv_update_query {
      
update adv_log 
   set click_count = click_count + 1 
 where adv_key = :adv_key 
   and entry_date = current_date
    
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/adserver/www/adhref-postgresql.xql}
dbqd.adserver.www.adhref.adv_insert {dbqd.adserver.www.adhref.adv_insert {
    insert into adv_log
           (adv_key, entry_date, click_count)
    values (:adv_key,
            current_date,
            (select 1 from dual 
                     where 0 = (select count (*) 
                                  from adv_log 
                                 where adv_key = :adv_key 
                                   and entry_date = current_date)))"
    db_dml adv_insert $insert_sql
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/adserver/www/adhref-postgresql.xql}
dbqd.adserver.www.adhref.adv_url_query {dbqd.adserver.www.adhref.adv_url_query {
      
select target_url 
  from advs 
 where adv_key = :adv_key
      } {} {} {} c:/web/openacs-4/packages/adserver/www/adhref.xql}
dbqd.adserver.www.adimg-oracle.adv_log_update_query {dbqd.adserver.www.adimg-oracle.adv_log_update_query {
      
      update adv_log 
         set display_count = display_count + 1 
       where adv_key = :adv_key 
         and entry_date = trunc (sysdate)
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/adserver/www/adimg-oracle.xql}
dbqd.adserver.www.adimg-oracle.adv_insert {dbqd.adserver.www.adimg-oracle.adv_insert {
      
        insert into adv_log 
               (adv_key, entry_date, display_count) 
        values (:adv_key,
                trunc (sysdate),
                (select 1 from dual 
                         where 0 = (select count (*) 
                                      from adv_log 
                                     where adv_key = :adv_key 
                                      and entry_date = trunc (sysdate))))
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/adserver/www/adimg-oracle.xql}
dbqd.adserver.www.adimg-oracle.adv_known_user_insert {dbqd.adserver.www.adimg-oracle.adv_known_user_insert {
      
        insert into adv_user_map (user_id, adv_key, event_time, event_type) 
        values (:user_id, :adv_key, sysdate, 'd')
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/adserver/www/adimg-oracle.xql}
dbqd.adserver.www.adimg.adv_log_update_query {dbqd.adserver.www.adimg.adv_log_update_query {
      
      update adv_log 
         set display_count = display_count + 1 
       where adv_key = :adv_key 
         and entry_date = current_date
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/adserver/www/adimg-postgresql.xql}
dbqd.adserver.www.adimg.adv_insert {dbqd.adserver.www.adimg.adv_insert {
      
        insert into adv_log 
               (adv_key, entry_date, display_count) 
        values (:adv_key,
                current_date,
                (select 1  
                         where 0 = (select count (*) 
                                      from adv_log 
                                     where adv_key = :adv_key 
                                      and entry_date = current_date)))
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/adserver/www/adimg-postgresql.xql}
dbqd.adserver.www.adimg.adv_known_user_insert {dbqd.adserver.www.adimg.adv_known_user_insert {
      
        insert into adv_user_map (user_id, adv_key, event_time, event_type) 
        values (:user_id, :adv_key, current_timestamp, 'd')
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/adserver/www/adimg-postgresql.xql}
dbqd.adserver.www.adimg.adv_select {dbqd.adserver.www.adimg.adv_select {
      
              SELECT adv_filename as ad_filename_stub, 
                     case when local_image_p = 't' then 1 else 0 end as local_image
                FROM advs
                WHERE adv_key = :adv_key
      } {} {} {} c:/web/openacs-4/packages/adserver/www/adimg.xql}
dbqd.adserver.www.admin.add-adv-2-oracle.adv_insert_query {dbqd.adserver.www.admin.add-adv-2-oracle.adv_insert_query {
      
insert into advs (adv_key, target_url, local_image_p, track_clickthru_p, adv_filename)
select :adv_key, :target_url, :local_image_p, :track_clickthru_p, :adv_filename 
 from dual
where not exists (select 1
                    from advs
                   where adv_key= :adv_key)

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/adserver/www/admin/add-adv-2-oracle.xql}
dbqd.adserver.www.admin.add-adv-2.adv_insert_query {dbqd.adserver.www.admin.add-adv-2.adv_insert_query {
      
insert into advs (adv_key, target_url, local_image_p, track_clickthru_p, adv_filename)
select :adv_key, :target_url, :local_image_p, :track_clickthru_p, :adv_filename 
 
where not exists (select 1
                    from advs
                   where adv_key= :adv_key)

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/adserver/www/admin/add-adv-2-postgresql.xql}
dbqd.adserver.www.admin.add-adv-2.adv_insert_check {dbqd.adserver.www.admin.add-adv-2.adv_insert_check {
      
select count(*)
  from advs 
 where adv_key = :adv_key
   and target_url = :target_url
   and local_image_p = :local_image_p
   and track_clickthru_p = :track_clickthru_p
  and adv_filename = :adv_filename

      } {} {} {} c:/web/openacs-4/packages/adserver/www/admin/add-adv-2.xql}
dbqd.adserver.www.admin.add-adv-group-2-oracle.adv_insert_query {dbqd.adserver.www.admin.add-adv-group-2-oracle.adv_insert_query {
      
insert into adv_groups (group_key, pretty_name, rotation_method)
select :group_key, :pretty_name, :rotation_method
  from dual
 where not exists (select 1
                     from adv_groups
                    where group_key = :group_key)

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/adserver/www/admin/add-adv-group-2-oracle.xql}
dbqd.adserver.www.admin.add-adv-group-2.adv_insert_query {dbqd.adserver.www.admin.add-adv-group-2.adv_insert_query {
      
insert into adv_groups (group_key, pretty_name, rotation_method)
select :group_key, :pretty_name, :rotation_method
  
 where not exists (select 1
                     from adv_groups
                    where group_key = :group_key)

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/adserver/www/admin/add-adv-group-2-postgresql.xql}
dbqd.adserver.www.admin.add-adv-group-2.adv_insert_check {dbqd.adserver.www.admin.add-adv-group-2.adv_insert_check {
      
select count(*)
  from adv_groups 
 where group_key = :group_key and $pretty_name_sql
   and trim(rotation_method) = :rotation_method
      } {} {} {} c:/web/openacs-4/packages/adserver/www/admin/add-adv-group-2.xql}
dbqd.adserver.www.admin.add-adv-to-group-2-oracle.adv_insert_query {dbqd.adserver.www.admin.add-adv-to-group-2-oracle.adv_insert_query {
      
insert into adv_group_map (group_key, adv_key) 
select :group_key, :adv_key
  from dual
 where not exists (select 1
                     from adv_group_map
                    where adv_key = :adv_key
                      and group_key = :group_key)

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/adserver/www/admin/add-adv-to-group-2-oracle.xql}
dbqd.adserver.www.admin.add-adv-to-group-2.adv_insert_query {dbqd.adserver.www.admin.add-adv-to-group-2.adv_insert_query {
      
insert into adv_group_map (group_key, adv_key) 
select :group_key, :adv_key
  
 where not exists (select 1
                     from adv_group_map
                    where adv_key = :adv_key
                      and group_key = :group_key)

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/adserver/www/admin/add-adv-to-group-2-postgresql.xql}
dbqd.adserver.www.admin.add-adv-to-group.adv_pretty_name_query {dbqd.adserver.www.admin.add-adv-to-group.adv_pretty_name_query {
      select pretty_name from adv_groups where group_key = :group_key
      } {} {} {} c:/web/openacs-4/packages/adserver/www/admin/add-adv-to-group.xql}
dbqd.adserver.www.admin.delete-adv-2.adv_delete_query_1 {dbqd.adserver.www.admin.delete-adv-2.adv_delete_query_1 {
      delete from adv_log where adv_key = :adv_key
      } {} {} {} c:/web/openacs-4/packages/adserver/www/admin/delete-adv-2.xql}
dbqd.adserver.www.admin.delete-adv-2.adv_delete_query_2 {dbqd.adserver.www.admin.delete-adv-2.adv_delete_query_2 {
      delete from adv_user_map where adv_key = :adv_key
      } {} {} {} c:/web/openacs-4/packages/adserver/www/admin/delete-adv-2.xql}
dbqd.adserver.www.admin.delete-adv-2.adv_delete_query_4 {dbqd.adserver.www.admin.delete-adv-2.adv_delete_query_4 {
      delete from adv_group_map where adv_key = :adv_key
      } {} {} {} c:/web/openacs-4/packages/adserver/www/admin/delete-adv-2.xql}
dbqd.adserver.www.admin.delete-adv-2.adv_delete_query_5 {dbqd.adserver.www.admin.delete-adv-2.adv_delete_query_5 {
      delete from advs where adv_key = :adv_key
      } {} {} {} c:/web/openacs-4/packages/adserver/www/admin/delete-adv-2.xql}
dbqd.adserver.www.admin.delete-adv.adv_info_query {dbqd.adserver.www.admin.delete-adv.adv_info_query {
      
select sum (display_count) as n_displays, 
       sum (click_count) as n_clicks, 
       min (entry_date) as first_display, 
       max (entry_date) as last_display, 
       round (max (entry_date) - min (entry_date)) as n_days, 
       count (*) as n_entries 
from adv_log 
where adv_key = :adv_key
      } {} {} {} c:/web/openacs-4/packages/adserver/www/admin/delete-adv.xql}
dbqd.adserver.www.admin.index.adrv_name_query {dbqd.adserver.www.admin.index.adrv_name_query {
      
            select pretty_name
              from adv_groups
             where group_key = :group_key
            
      } {} {} {} c:/web/openacs-4/packages/adserver/www/admin/index.xql}
dbqd.adserver.www.admin.index.adv_select_query1 {dbqd.adserver.www.admin.index.adv_select_query1 {
      
    select group_key, pretty_name
      from adv_groups 
     where not group_key in (select group_key from adv_group_map)
            
      } {} {} {} c:/web/openacs-4/packages/adserver/www/admin/index.xql}
dbqd.adserver.www.admin.index.adv_select_query2 {dbqd.adserver.www.admin.index.adv_select_query2 {
      
    select map.group_key, advs.adv_key
      from advs, adv_group_map map
     where advs.adv_key = map.adv_key

UNION

    select NULL, advs.adv_key
      from advs
     where 0=(select count(*) from adv_group_map where advs.adv_key = adv_group_map.adv_key)
           
      } {} {} {} c:/web/openacs-4/packages/adserver/www/admin/index.xql}
dbqd.adserver.www.admin.one-adv-detailed-stats.adv_info_query {dbqd.adserver.www.admin.one-adv-detailed-stats.adv_info_query {
      select adv_key, adv_filename, track_clickthru_p, target_url from advs where adv_key = :adv_key
      } {} {} {} c:/web/openacs-4/packages/adserver/www/admin/one-adv-detailed-stats.xql}
dbqd.adserver.www.admin.one-adv-detailed-stats.adv_numbers_query {dbqd.adserver.www.admin.one-adv-detailed-stats.adv_numbers_query {
      
select sum(display_count) as n_displays, 
       sum(click_count) as n_clicks, 
       min(entry_date) as first_display, 
       max(entry_date) as last_display 
from adv_log 
where adv_key = :adv_key
      } {} {} {} c:/web/openacs-4/packages/adserver/www/admin/one-adv-detailed-stats.xql}
dbqd.adserver.www.admin.one-adv-group.adv_group_info_query {dbqd.adserver.www.admin.one-adv-group.adv_group_info_query {
      
select group_key, pretty_name
from adv_groups 
where group_key = :group_key
      } {} {} {} c:/web/openacs-4/packages/adserver/www/admin/one-adv-group.xql}
dbqd.adserver.www.admin.one-adv-group.r_method {dbqd.adserver.www.admin.one-adv-group.r_method {
      
                    select rotation_method as current_method
                    from adv_groups where group_key=:group_key
      } {} {} {} c:/web/openacs-4/packages/adserver/www/admin/one-adv-group.xql}
dbqd.adserver.www.admin.one-adv.adv_info_query {dbqd.adserver.www.admin.one-adv.adv_info_query {
      select adv_key, 
       adv_filename, 
       local_image_p, 
       track_clickthru_p, 
       target_url 
from advs 
where adv_key = :adv_key
      } {} {} {} c:/web/openacs-4/packages/adserver/www/admin/one-adv.xql}
dbqd.adserver.www.admin.one-adv.adv_display_count {dbqd.adserver.www.admin.one-adv.adv_display_count {
      
select count(*) from adv_log where adv_key=:adv_key
      } {} {} {} c:/web/openacs-4/packages/adserver/www/admin/one-adv.xql}
dbqd.adserver.www.admin.one-adv.adv_info_select {dbqd.adserver.www.admin.one-adv.adv_info_select {
      
       select sum (display_count) as n_displays, 
              sum (click_count) as n_clicks, 
              round (100 * (sum (click_count) /sum (display_count)), 2) as clickthrough_percent, 
              min (entry_date) as first_display, 
              max (entry_date) as last_display 
       from adv_log 
       where adv_key = :adv_key
      } {} {} {} c:/web/openacs-4/packages/adserver/www/admin/one-adv.xql}
dbqd.adserver.www.admin.remove-adv-from-group-2.adv_delete_query {dbqd.adserver.www.admin.remove-adv-from-group-2.adv_delete_query {
      
delete
   from adv_group_map
  where group_key = :group_key
    and adv_key = :adv_key

      } {} {} {} c:/web/openacs-4/packages/adserver/www/admin/remove-adv-from-group-2.xql}
dbqd.adserver.www.admin.remove-adv-from-group.adv_name_query {dbqd.adserver.www.admin.remove-adv-from-group.adv_name_query {
      select pretty_name from adv_groups where group_key = :group_key
      } {} {} {} c:/web/openacs-4/packages/adserver/www/admin/remove-adv-from-group.xql}
dbqd.adserver.www.admin.update-adv-group.adv_group_update_query {dbqd.adserver.www.admin.update-adv-group.adv_group_update_query {
      
update adv_groups set pretty_name = :pretty_name,
                      rotation_method=:rotation_method
                      where group_key = :group_key
      } {} {} {} c:/web/openacs-4/packages/adserver/www/admin/update-adv-group.xql}
dbqd.adserver.www.admin.update-adv.adv_update_query {dbqd.adserver.www.admin.update-adv.adv_update_query {
      
update advs set 
  target_url = :target_url, 
  track_clickthru_p = :track_clickthru_p, 
  adv_filename = :adv_filename, 
  local_image_p = :local_image_p 
where adv_key = :adv_key
      } {} {} {} c:/web/openacs-4/packages/adserver/www/admin/update-adv.xql}
dbqd.adserver.www.index.adserver_sample_groups {dbqd.adserver.www.index.adserver_sample_groups {
      
    select group_key, pretty_name, adv_count, rotation_method
      from adv_groups
     order by group_key
 
      } {} {} {} c:/web/openacs-4/packages/adserver/www/index.xql}
dbqd.adserver.www.view-group.adserver_group_view {dbqd.adserver.www.view-group.adserver_group_view {
      
        select pretty_name, adv_count, rotation_method
          from adv_groups
         where group_key = :group_key
    
      } {} {} {} c:/web/openacs-4/packages/adserver/www/view-group.xql}
dbqd.adserver.www.view-group.adserver_group_view_one {dbqd.adserver.www.view-group.adserver_group_view_one {
      
            select adv_key, adv_group_number
              from adv_group_map
             where group_key = :group_key
          order by adv_group_number
        
      } {} {} {} c:/web/openacs-4/packages/adserver/www/view-group.xql}
dbqd.attachments.tcl.attachments-procs-oracle.attachments::get_attachments.select_attachments {dbqd.attachments.tcl.attachments-procs-oracle.attachments::get_attachments.select_attachments {
            select item_id
            from attachments
            where object_id = :object_id
            and approved_p = 't'
        } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/attachments/tcl/attachments-procs-oracle.xql}
dbqd.attachments.tcl.attachments-procs-oracle.attachments::get_all_attachments.select_attachments {dbqd.attachments.tcl.attachments-procs-oracle.attachments::get_all_attachments.select_attachments {
            select item_id,
                   approved_p
            from attachments
            where object_id = :object_id
        } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/attachments/tcl/attachments-procs-oracle.xql}
dbqd.attachments.tcl.attachments-procs.attachments::get_attachments.select_attachments {dbqd.attachments.tcl.attachments-procs.attachments::get_attachments.select_attachments {
            select item_id,
                   acs_object__name(item_id)
            from attachments
            where object_id = :object_id
            and approved_p = 't'
        } {} {} {postgresql 7.1} c:/web/openacs-4/packages/attachments/tcl/attachments-procs-postgresql.xql}
dbqd.attachments.tcl.attachments-procs.attachments::get_all_attachments.select_attachments {dbqd.attachments.tcl.attachments-procs.attachments::get_all_attachments.select_attachments {
            select item_id,
                   acs_object__name(item_id),
                   approved_p
            from attachments
            where object_id = :object_id
        } {} {} {postgresql 7.1} c:/web/openacs-4/packages/attachments/tcl/attachments-procs-postgresql.xql}
dbqd.attachments.tcl.attachments-procs.attachments::root_folder_p.root_folder_p_select {dbqd.attachments.tcl.attachments-procs.attachments::root_folder_p.root_folder_p_select {
            select 1
            from attachments_fs_root_folder_map
            where package_id = :package_id
        } {} {} {} c:/web/openacs-4/packages/attachments/tcl/attachments-procs.xql}
dbqd.attachments.tcl.attachments-procs.attachments::get_root_folder.get_root_folder_select {dbqd.attachments.tcl.attachments-procs.attachments::get_root_folder.get_root_folder_select {
            select folder_id
            from attachments_fs_root_folder_map
            where package_id = :package_id
        } {} {} {} c:/web/openacs-4/packages/attachments/tcl/attachments-procs.xql}
dbqd.attachments.tcl.attachments-procs.attachments::map_root_folder.map_root_folder_insert {dbqd.attachments.tcl.attachments-procs.attachments::map_root_folder.map_root_folder_insert {
            insert
            into attachments_fs_root_folder_map 
            (package_id, folder_id)
            values
            (:package_id, :folder_id)
        } {} {} {} c:/web/openacs-4/packages/attachments/tcl/attachments-procs.xql}
dbqd.attachments.tcl.attachments-procs.attachments::unmap_root_folder.unmap_root_folder_delete {dbqd.attachments.tcl.attachments-procs.attachments::unmap_root_folder.unmap_root_folder_delete {
            delete
            from attachments_fs_root_folder_map
            where package_id = :package_id and
            folder_id = :folder_id
        } {} {} {} c:/web/openacs-4/packages/attachments/tcl/attachments-procs.xql}
dbqd.attachments.tcl.attachments-procs.attachments::attach.insert_attachment {dbqd.attachments.tcl.attachments-procs.attachments::attach.insert_attachment {
            insert
            into attachments
            (object_id, item_id, approved_p)
            values
            (:object_id, :attachment_id, :approved_p)
        } {} {} {} c:/web/openacs-4/packages/attachments/tcl/attachments-procs.xql}
dbqd.attachments.tcl.attachments-procs.attachments::unattach.delete_attachment {dbqd.attachments.tcl.attachments-procs.attachments::unattach.delete_attachment {
            delete
            from attachments
            where object_id = :object_id
            and item_id = :attachment_id
        } {} {} {} c:/web/openacs-4/packages/attachments/tcl/attachments-procs.xql}
dbqd.attachments.tcl.attachments-procs.attachments::toggle_approved.select_attachment_approved_p {dbqd.attachments.tcl.attachments-procs.attachments::toggle_approved.select_attachment_approved_p {
            select approved_p
            from attachments
            where object_id = :object_id
            and item_id = :item_id
        } {} {} {} c:/web/openacs-4/packages/attachments/tcl/attachments-procs.xql}
dbqd.attachments.tcl.attachments-procs.attachments::toggle_approved.toggle_approved_p {dbqd.attachments.tcl.attachments-procs.attachments::toggle_approved.toggle_approved_p {
            update attachments
            set approved_p = :approved_p
            where object_id = :object_id
            and item_id = :item_id
        } {} {} {} c:/web/openacs-4/packages/attachments/tcl/attachments-procs.xql}
dbqd.attachments.www.attach.select_folder_contents {dbqd.attachments.www.attach.select_folder_contents {
            select  fs_objects.object_id,
                         fs_objects.name,
                         fs_objects.live_revision,
                         fs_objects.type,
                         to_char(fs_objects.last_modified, 'Month DD YYYY HH24:MI') as last_modified,
                         fs_objects.content_size,
                         fs_objects.url,
                         fs_objects.key,
                         fs_objects.sort_key,
			 fs_objects.file_upload_name, 
                         '0' as new_p
                  from fs_objects
                  where fs_objects.parent_id = :folder_id
	          order by sort_key, name
        } {} {} {} c:/web/openacs-4/packages/attachments/www/attach.xql}
dbqd.attachments.www.download.index.select_version_id {dbqd.attachments.www.download.index.select_version_id {
      select live_revision
      from cr_items, attachments
      where cr_items.item_id = attachments.item_id
      and attachments.object_id = :object_id
      and attachments.item_id = :attachment_id
    } {} {} {} c:/web/openacs-4/packages/attachments/www/download/index.xql}
dbqd.attachments.www.file-add-2-oracle.new_lob_file {dbqd.attachments.www.file-add-2-oracle.new_lob_file {
      
	begin
    		:1 := file_storage.new_file (
        		title => :title,
        		folder_id => :folder_id,
        		creation_user => :user_id,
        		creation_ip => :creation_ip,
		        indb_p => 't'
   			);
	end;

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/attachments/www/file-add-2-oracle.xql}
dbqd.attachments.www.file-add-2-oracle.new_fs_file {dbqd.attachments.www.file-add-2-oracle.new_fs_file {
      
	begin
    		:1 := file_storage.new_file (
        		title => :title,
        		folder_id => :folder_id,
        		creation_user => :user_id,
        		creation_ip => :creation_ip,
		        indb_p => 'f'
   			);

	end;

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/attachments/www/file-add-2-oracle.xql}
dbqd.attachments.www.file-add-2-oracle.new_version {dbqd.attachments.www.file-add-2-oracle.new_version {
      
	begin
    		:1 := file_storage.new_version (
        		filename => :filename,
        		description => :description,
        		mime_type => :mime_type,
        		item_id => :file_id,
        		creation_user => :user_id,
        		creation_ip => :creation_ip
    			);

	end;

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/attachments/www/file-add-2-oracle.xql}
dbqd.attachments.www.file-add-2-oracle.lob_content {dbqd.attachments.www.file-add-2-oracle.lob_content {
      
	update cr_revisions
	set    content = empty_blob()
	where  revision_id = :version_id
	returning content into :1

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/attachments/www/file-add-2-oracle.xql}
dbqd.attachments.www.file-add-2-oracle.lob_size {dbqd.attachments.www.file-add-2-oracle.lob_size {

	update cr_revisions
 	set content_length = dbms_lob.getlength(content) 
	where revision_id = :version_id

     } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/attachments/www/file-add-2-oracle.xql}
dbqd.attachments.www.file-add-2-oracle.fs_content_size {dbqd.attachments.www.file-add-2-oracle.fs_content_size {
      
	update cr_revisions
 	set filename = '$tmp_filename',
	    content_length = $tmp_size
	where revision_id = :version_id

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/attachments/www/file-add-2-oracle.xql}
dbqd.attachments.www.file-add-2.new_lob_file {dbqd.attachments.www.file-add-2.new_lob_file {

    	select file_storage__new_file (
        	:title,           	-- title
        	:folder_id,          	-- parent_id
        	:user_id,            	-- creation_user
        	:creation_ip,        	-- creation_ip
		true			-- indb_p
		);


      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/attachments/www/file-add-2-postgresql.xql}
dbqd.attachments.www.file-add-2.new_fs_file {dbqd.attachments.www.file-add-2.new_fs_file {

    	select file_storage__new_file (
        	:title,           	-- title
        	:folder_id,          	-- parent_id
        	:user_id,            	-- creation_user
        	:creation_ip,        	-- creation_ip
		false			-- indb_p
		);

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/attachments/www/file-add-2-postgresql.xql}
dbqd.attachments.www.file-add-2.new_version {dbqd.attachments.www.file-add-2.new_version {

    	select file_storage__new_version (
		:filename,		-- filename
       		:description,		-- description
       		:mime_type,		-- mime_type
       		:file_id,		-- item_id
       		:user_id,		-- creation_user
       		:creation_ip		-- creation_ip
		);

     } {} {} {postgresql 7.1} c:/web/openacs-4/packages/attachments/www/file-add-2-postgresql.xql}
dbqd.attachments.www.file-add-2.lob_content {dbqd.attachments.www.file-add-2.lob_content {

	update cr_revisions
 	set lob = [set __lob_id [db_string get_lob_id "select empty_lob()"]]
	where revision_id = :version_id

     } {} {} {postgresql 7.1} c:/web/openacs-4/packages/attachments/www/file-add-2-postgresql.xql}
dbqd.attachments.www.file-add-2.lob_size {dbqd.attachments.www.file-add-2.lob_size {

	update cr_revisions
 	set content_length = lob_length(lob)
	where revision_id = :version_id

     } {} {} {postgresql 7.1} c:/web/openacs-4/packages/attachments/www/file-add-2-postgresql.xql}
dbqd.attachments.www.file-add-2.fs_content_size {dbqd.attachments.www.file-add-2.fs_content_size {

	update cr_revisions
 	set content = '$tmp_filename',
	    content_length = $tmp_size
	where revision_id = :version_id

     } {} {} {postgresql 7.1} c:/web/openacs-4/packages/attachments/www/file-add-2-postgresql.xql}
dbqd.attachments.www.file-add-2.duplicate_check {dbqd.attachments.www.file-add-2.duplicate_check {
      
    	select count(*)
   	from   cr_items
	where  name = :filename
    	and    parent_id = :folder_id

      } {} {} {} c:/web/openacs-4/packages/attachments/www/file-add-2.xql}
dbqd.attachments.www.go-to-attachment.select_url {dbqd.attachments.www.go-to-attachment.select_url {
    select url
    from cr_extlinks
    where extlink_id = :attachment_id
  } {} {} {} c:/web/openacs-4/packages/attachments/www/go-to-attachment.xql}
dbqd.attachments.www.go-to-attachment.select_attachment_title {dbqd.attachments.www.go-to-attachment.select_attachment_title {
      select r.title 
      from cr_revisions r, cr_items i 
      where i.item_id = :attachment_id 
      and r.revision_id  = i.live_revision
    } {} {} {} c:/web/openacs-4/packages/attachments/www/go-to-attachment.xql}
dbqd.auth-server.tcl.auth-server-procs-oracle.auth::server::verify_token.mark_token {dbqd.auth-server.tcl.auth-server-procs-oracle.auth::server::verify_token.mark_token {
            update authentication_server_token
            set    consumed_on = sysdate
            where  token_id = :token_id
            and    random_string = :random_string
            and    consumed_on is null
        } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/auth-server/tcl/auth-server-procs-oracle.xql}
dbqd.auth-server.tcl.auth-server-procs.auth::server::verify_token.mark_token {dbqd.auth-server.tcl.auth-server-procs.auth::server::verify_token.mark_token {
            update authentication_server_token
            set    consumed_on = current_timestamp
            where  token_id = :token_id
            and    random_string = :random_string
            and    consumed_on is null
        } {} {} {postgresql 7.1} c:/web/openacs-4/packages/auth-server/tcl/auth-server-procs-postgresql.xql}
dbqd.authorize-gateway.tcl.authorize-gateway-procs.authorize_gateway.chargecard.select_auth_only {dbqd.authorize-gateway.tcl.authorize-gateway-procs.authorize_gateway.chargecard.select_auth_only {
      select transaction_id, auth_code
      from authorize_gateway_result_log 
      where txn_attempted_type='AUTH_ONLY' 
      and response_code='1' 
      and transaction_id=:transaction_id
    } {} {} {} c:/web/openacs-4/packages/authorize-gateway/tcl/authorize-gateway-procs.xql}
dbqd.authorize-gateway.tcl.authorize-gateway-procs.authorize_gateway.log_results.do-insert {dbqd.authorize-gateway.tcl.authorize-gateway-procs.authorize_gateway.log_results.do-insert {
      insert into authorize_gateway_result_log 
        (transaction_id, txn_attempted_type, txn_attempted_time, response, response_code, 
         response_reason_code, response_reason_text, auth_code, avs_code, amount) 
        values 
        (:transaction_id, :txn_attempted_type, :txn_attempted_time, :response, :response_code, 
         :response_reason_code, :response_reason_text, :auth_code, :avs_code, :amount)
    } {} {} {} c:/web/openacs-4/packages/authorize-gateway/tcl/authorize-gateway-procs.xql}
dbqd.authorize-gateway.tcl.authorize-gateway-procs.authorize_gateway.info.get_package_version {dbqd.authorize-gateway.tcl.authorize-gateway-procs.authorize_gateway.info.get_package_version {
      select version_name
      from apm_package_versions 
      where enabled_p = 't' 
      and package_key = 'authorize-gateway'
    } {} {} {} c:/web/openacs-4/packages/authorize-gateway/tcl/authorize-gateway-procs.xql}
dbqd.authorize-gateway.tcl.authorize-gateway-procs.authorize_gateway.info.get_package_name {dbqd.authorize-gateway.tcl.authorize-gateway-procs.authorize_gateway.info.get_package_name {
      select instance_name 
      from apm_packages p, apm_package_versions v 
      where p.package_key = v.package_key 
      and v.enabled_p = 't' 
      and p.package_key = 'authorize-gateway'
    } {} {} {} c:/web/openacs-4/packages/authorize-gateway/tcl/authorize-gateway-procs.xql}
dbqd.authorize-gateway.www.admin.index.transaction_last_24hours {dbqd.authorize-gateway.www.admin.index.transaction_last_24hours {
      txn_attempted_time + '1 days'::interval > now()
    } {} {} {postgresql 7.1} c:/web/openacs-4/packages/authorize-gateway/www/admin/index-postgresql.xql}
dbqd.authorize-gateway.www.admin.index.transaction_last_week {dbqd.authorize-gateway.www.admin.index.transaction_last_week {
      txn_attempted_time + '7 days'::interval > now()
    } {} {} {postgresql 7.1} c:/web/openacs-4/packages/authorize-gateway/www/admin/index-postgresql.xql}
dbqd.authorize-gateway.www.admin.index.transaction_last_month {dbqd.authorize-gateway.www.admin.index.transaction_last_month {
      txn_attempted_time + '1 months'::interval > now()
    } {} {} {postgresql 7.1} c:/web/openacs-4/packages/authorize-gateway/www/admin/index-postgresql.xql}
dbqd.authorize-gateway.www.admin.index.result_select {dbqd.authorize-gateway.www.admin.index.result_select {
      select transaction_id, to_char(txn_attempted_time, 'MM-DD-YYYY HH24:MI:SS') as txn_time, txn_attempted_type, response, response_code, response_reason_code, response_reason_text, auth_code, avs_code, amount 
      from authorize_gateway_result_log 
      where '1'='1' [ad_dimensional_sql $dimensional] [ad_order_by_from_sort_spec $orderby $table_def]
    } {} {} {postgresql 7.1} c:/web/openacs-4/packages/authorize-gateway/www/admin/index-postgresql.xql}
dbqd.authorize-gateway.www.admin.index.get_package_name {dbqd.authorize-gateway.www.admin.index.get_package_name {
      select p.instance_name 
      from apm_packages p, apm_package_versions v
      where p.package_id = :package_id
      and p.package_key = v.package_key
      and v.enabled_p = 't'
    } {} {} {} c:/web/openacs-4/packages/authorize-gateway/www/admin/index.xql}
dbqd.authorize-gateway.www.admin.index.result_approved {dbqd.authorize-gateway.www.admin.index.result_approved {
      response_code='1'
    } {} {} {} c:/web/openacs-4/packages/authorize-gateway/www/admin/index.xql}
dbqd.authorize-gateway.www.admin.index.result_declined {dbqd.authorize-gateway.www.admin.index.result_declined {
      response_code='2'
    } {} {} {} c:/web/openacs-4/packages/authorize-gateway/www/admin/index.xql}
dbqd.authorize-gateway.www.admin.index.result_error {dbqd.authorize-gateway.www.admin.index.result_error {
      response_code='3'
    } {} {} {} c:/web/openacs-4/packages/authorize-gateway/www/admin/index.xql}
dbqd.authorize-gateway.www.index.get_package_name {dbqd.authorize-gateway.www.index.get_package_name {
      select p.instance_name 
      from apm_packages p, apm_package_versions v
      where p.package_id = :package_id
      and p.package_key = v.package_key
      and v.enabled_p = 't'
    } {} {} {} c:/web/openacs-4/packages/authorize-gateway/www/index.xql}
dbqd.bookmarks.tcl.bookmarks-init-oracle.bm_packages {dbqd.bookmarks.tcl.bookmarks-init-oracle.bm_packages {
      
    select site_node.url(node_id) as path
    from   site_nodes
    where  object_id in (select package_id
                         from   apm_packages where package_key = 'bookmarks')

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/bookmarks/tcl/bookmarks-init-oracle.xql}
dbqd.bookmarks.tcl.bookmarks-init-oracle.bm_clean_up_session_data.delete_old_in_closed_p {dbqd.bookmarks.tcl.bookmarks-init-oracle.bm_clean_up_session_data.delete_old_in_closed_p {
      delete from bm_in_closed_p where creation_date < (sysdate - 1)
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/bookmarks/tcl/bookmarks-init-oracle.xql}
dbqd.bookmarks.tcl.bookmarks-init.bm_packages {dbqd.bookmarks.tcl.bookmarks-init.bm_packages {
      
    select site_node__url(node_id) as path
    from   site_nodes
    where  object_id in (select package_id
                         from   apm_packages where package_key = 'bookmarks')

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/bookmarks/tcl/bookmarks-init-postgresql.xql}
dbqd.bookmarks.tcl.bookmarks-init.bm_clean_up_session_data.delete_old_in_closed_p {dbqd.bookmarks.tcl.bookmarks-init.bm_clean_up_session_data.delete_old_in_closed_p {
      delete from bm_in_closed_p where creation_date < (current_timestamp - interval '1 day')
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/bookmarks/tcl/bookmarks-init-postgresql.xql}
dbqd.bookmarks.tcl.bookmarks-init.bm_export_to_netscape.name {dbqd.bookmarks.tcl.bookmarks-init.bm_export_to_netscape.name {
      
    select first_names||' '||last_name as name 
    from   cc_users 
    where  user_id = :user_id
      } {} {} {} c:/web/openacs-4/packages/bookmarks/tcl/bookmarks-init.xql}
dbqd.bookmarks.tcl.bookmarks-procs-oracle.exclude_folders {dbqd.bookmarks.tcl.bookmarks-procs-oracle.exclude_folders {
		and bookmark_id not in 
		(
		select bookmark_id from bm_bookmarks where folder_p = 't' 
		and owner_id = :user_id 
		start with parent_id = :bookmark_id 
		connect by bookmark_id = parent_id
		)
	} {} {} {oracle 8.1.6} c:/web/openacs-4/packages/bookmarks/tcl/bookmarks-procs-oracle.xql}
dbqd.bookmarks.tcl.bookmarks-procs-oracle.bm_folder_selection.folder_select {dbqd.bookmarks.tcl.bookmarks-procs-oracle.bm_folder_selection.folder_select {
      
    select /*+INDEX(bm_bookmarks bm_bookmarks_local_title_idx)*/ bookmark_id, 
    local_title,
    level as indentation
    from   bm_bookmarks
    where folder_p = 't'
    and owner_id = :user_id
    and bookmark_id <> :bookmark_id
    and parent_id <> :package_id
    and acs_permission.permission_p(:bookmark_id, :user_id, 'write') = 't'
    $exclude_folders
    start with parent_id = :package_id
    connect by prior bookmark_id = parent_id
    
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/bookmarks/tcl/bookmarks-procs-oracle.xql}
dbqd.bookmarks.tcl.bookmarks-procs-oracle.bm_get_root_folder_id.fs_root_folder {dbqd.bookmarks.tcl.bookmarks-procs-oracle.bm_get_root_folder_id.fs_root_folder {
      
      begin
          :1 := bookmark.get_root_folder(
                package_id => :package_id,
                user_id    => :user_id);
      end;
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/bookmarks/tcl/bookmarks-procs-oracle.xql}
dbqd.bookmarks.tcl.bookmarks-procs-oracle.bm_user_can_write_in_some_folder_p.write_in_folders {dbqd.bookmarks.tcl.bookmarks-procs-oracle.bm_user_can_write_in_some_folder_p.write_in_folders {
      select count(*) from bm_bookmarks
                     where owner_id = :viewed_user_id
                     and folder_p = 't'
                     and acs_permission.permission_p(bookmark_id, :browsing_user_id, 'write') = 't'
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/bookmarks/tcl/bookmarks-procs-oracle.xql}
dbqd.bookmarks.tcl.bookmarks-procs-oracle.bm_delete_permission_p.delete_permission_p {dbqd.bookmarks.tcl.bookmarks-procs-oracle.bm_delete_permission_p.delete_permission_p {
      select count(*) from bm_bookmarks 
	where acs_permission.permission_p(bookmark_id, :browsing_user_id, 'delete') = 'f'
	start with bookmark_id = :bookmark_id
	connect by prior bookmark_id = parent_id
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/bookmarks/tcl/bookmarks-procs-oracle.xql}
dbqd.bookmarks.tcl.bookmarks-procs-oracle.bm_bookmark_private_p.bookmark_private_p {dbqd.bookmarks.tcl.bookmarks-procs-oracle.bm_bookmark_private_p.bookmark_private_p {
      select bookmark.private_p(:bookmark_id) from dual
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/bookmarks/tcl/bookmarks-procs-oracle.xql}
dbqd.bookmarks.tcl.bookmarks-procs-oracle.bm_update_bookmark_private_p.update_private_p {dbqd.bookmarks.tcl.bookmarks-procs-oracle.bm_update_bookmark_private_p.update_private_p {
      
	    begin
	       bookmark.update_private_p(:bookmark_id, :private_p);
	    end;
	
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/bookmarks/tcl/bookmarks-procs-oracle.xql}
dbqd.bookmarks.tcl.bookmarks-procs-oracle.bm_initialize_in_closed_p.initialize_in_closed_p {dbqd.bookmarks.tcl.bookmarks-procs-oracle.bm_initialize_in_closed_p.initialize_in_closed_p {
      
	    begin
	       bookmark.initialize_in_closed_p(:viewed_user_id, :in_closed_p_id);
	    end;
	
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/bookmarks/tcl/bookmarks-procs-oracle.xql}
dbqd.bookmarks.tcl.bookmarks-procs.exclude_folders {dbqd.bookmarks.tcl.bookmarks-procs.exclude_folders {
		and bookmark_id not in 
		(
		select bm.bookmark_id from bm_bookmarks bm, bm_bookmarks bm2
		where bm.folder_p = 't' 
		  and bm.owner_id = :user_id 
		  and bm.tree_sortkey between bm2.tree_sortkey and tree_right(bm2.tree_sortkey)
                  and bm2.parent_id = :package_id
                  and bm2.owner_id = :user_id
		)
	} {} {} {postgresql 7.1} c:/web/openacs-4/packages/bookmarks/tcl/bookmarks-procs-postgresql.xql}
dbqd.bookmarks.tcl.bookmarks-procs.bm_folder_selection.folder_select {dbqd.bookmarks.tcl.bookmarks-procs.bm_folder_selection.folder_select {
    select bm.bookmark_id, bm.local_title, tree_level(bm.tree_sortkey) as indentation
    from   bm_bookmarks bm, bm_bookmarks bm2
    where bm.tree_sortkey between bm2.tree_sortkey and tree_right(bm2.tree_sortkey)
      and bm2.parent_id = :package_id
      and bm2.owner_id = :user_id
      and bm.folder_p = 't'
      and bm.owner_id = :user_id
      and bm.bookmark_id <> :bookmark_id
      and bm.parent_id <> :package_id
      and acs_permission__permission_p(:bookmark_id, :user_id, 'write') = 't'
      $exclude_folders
    order by bm.tree_sortkey
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/bookmarks/tcl/bookmarks-procs-postgresql.xql}
dbqd.bookmarks.tcl.bookmarks-procs.bm_get_root_folder_id.fs_root_folder {dbqd.bookmarks.tcl.bookmarks-procs.bm_get_root_folder_id.fs_root_folder {

          select bookmark__get_root_folder (:package_id, :user_id);

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/bookmarks/tcl/bookmarks-procs-postgresql.xql}
dbqd.bookmarks.tcl.bookmarks-procs.bm_user_can_write_in_some_folder_p.write_in_folders {dbqd.bookmarks.tcl.bookmarks-procs.bm_user_can_write_in_some_folder_p.write_in_folders {
      select count(*) from bm_bookmarks
                     where owner_id = :viewed_user_id
                     and folder_p = 't'
                     and acs_permission__permission_p(bookmark_id, :browsing_user_id, 'write')
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/bookmarks/tcl/bookmarks-procs-postgresql.xql}
dbqd.bookmarks.tcl.bookmarks-procs.bm_delete_permission_p.delete_permission_p {dbqd.bookmarks.tcl.bookmarks-procs.bm_delete_permission_p.delete_permission_p {
select count(*) from bm_bookmarks bm, bm_bookmarks bm2
    where bm.tree_sortkey between bm2.tree_sortkey and tree_right(bm2.tree_sortkey)
      and bm2.bookmark_id = :bookmark_id
      and not acs_permission__permission_p(bm.bookmark_id, :browsing_user_id, 'delete')
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/bookmarks/tcl/bookmarks-procs-postgresql.xql}
dbqd.bookmarks.tcl.bookmarks-procs.bm_bookmark_private_p.bookmark_private_p {dbqd.bookmarks.tcl.bookmarks-procs.bm_bookmark_private_p.bookmark_private_p {
      select bookmark__private_p(:bookmark_id) 
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/bookmarks/tcl/bookmarks-procs-postgresql.xql}
dbqd.bookmarks.tcl.bookmarks-procs.bm_update_bookmark_private_p.update_private_p {dbqd.bookmarks.tcl.bookmarks-procs.bm_update_bookmark_private_p.update_private_p {

	select bookmark__update_private_p(:bookmark_id, :private_p)
	
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/bookmarks/tcl/bookmarks-procs-postgresql.xql}
dbqd.bookmarks.tcl.bookmarks-procs.bm_initialize_in_closed_p.initialize_in_closed_p {dbqd.bookmarks.tcl.bookmarks-procs.bm_initialize_in_closed_p.initialize_in_closed_p {

	select bookmark__initialize_in_closed_p (:viewed_user_id, :in_closed_p_id);
	
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/bookmarks/tcl/bookmarks-procs-postgresql.xql}
dbqd.bookmarks.tcl.bookmarks-procs.bm_handle_bookmark_double_click.dbclick {dbqd.bookmarks.tcl.bookmarks-procs.bm_handle_bookmark_double_click.dbclick {
      select count(*) 
                                          from   bm_bookmarks 
	                                  where  bookmark_id = :bookmark_id
      } {} {} {} c:/web/openacs-4/packages/bookmarks/tcl/bookmarks-procs.xql}
dbqd.bookmarks.tcl.bookmarks-procs.bm_context_bar_args.user_name {dbqd.bookmarks.tcl.bookmarks-procs.bm_context_bar_args.user_name {
      select first_names || ' ' || last_name from cc_users where object_id = :viewed_user_id
      } {} {} {} c:/web/openacs-4/packages/bookmarks/tcl/bookmarks-procs.xql}
dbqd.bookmarks.www.bookmark-access-oracle.update_access_date {dbqd.bookmarks.www.bookmark-access-oracle.update_access_date {
      update bm_bookmarks set last_access_date = sysdate where bookmark_id = :bookmark_id
or bookmark_id in (select bookmark_id from bm_bookmarks 
start with bookmark_id = (select parent_id from bm_bookmarks where bookmark_id = :bookmark_id) 
connect by prior parent_id = bookmark_id)
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/bookmarks/www/bookmark-access-oracle.xql}
dbqd.bookmarks.www.bookmark-access.update_access_date {dbqd.bookmarks.www.bookmark-access.update_access_date {

	update bm_bookmarks set last_access_date = current_timestamp 
        where bookmark_id in 
		(
		select bm.bookmark_id from bm_bookmarks bm, bm_bookmarks bm2
		where bm.tree_sortkey between bm2.tree_sortkey and tree_right(bm2.tree_sortkey) 
		  and bm2.bookmark_id = :bookmark_id
		)
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/bookmarks/www/bookmark-access-postgresql.xql}
dbqd.bookmarks.www.bookmark-add-one-2-oracle.url_add {dbqd.bookmarks.www.bookmark-add-one-2-oracle.url_add {
      
	begin
	   :1 := url.new (
           url_id => :url_id,
           url_title => :url_title,
	   host_url => :host_url,
	   complete_url => :complete_url,
           meta_keywords => :meta_keywords,
           meta_description => :meta_description,
           creation_user => :viewed_user_id,
           creation_ip => :creation_ip
	);
	end;
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/bookmarks/www/bookmark-add-one-2-oracle.xql}
dbqd.bookmarks.www.bookmark-add-one-2-oracle.bookmark_add {dbqd.bookmarks.www.bookmark-add-one-2-oracle.bookmark_add {
      
    declare
      dummy_var integer;
    begin
      dummy_var := bookmark.new (
       bookmark_id => :bookmark_id,
       owner_id    => :viewed_user_id,
       url_id      => :url_id,
       local_title => :local_title,
       parent_id   => :parent_id,
       creation_user => :user_id,
       creation_ip => :creation_ip
	);       
    end;
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/bookmarks/www/bookmark-add-one-2-oracle.xql}
dbqd.bookmarks.www.bookmark-add-one-2.url_add {dbqd.bookmarks.www.bookmark-add-one-2.url_add {

	select url__new (
           		:url_id,
           		:url_title,
	   		:host_url,
	   		:complete_url,
           		:meta_keywords,
           		:meta_description,
           		:viewed_user_id,
           		:creation_ip,
			null
			);

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/bookmarks/www/bookmark-add-one-2-postgresql.xql}
dbqd.bookmarks.www.bookmark-add-one-2.bookmark_add {dbqd.bookmarks.www.bookmark-add-one-2.bookmark_add {


	select bookmark__new (
		    :bookmark_id,
		    :viewed_user_id,
		    :url_id,
		    :local_title,
		    FALSE,
		    :parent_id,
		    null,
		    :user_id,
		    :creation_ip,
		    null);

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/bookmarks/www/bookmark-add-one-2-postgresql.xql}
dbqd.bookmarks.www.bookmark-add-one-2.count_url {dbqd.bookmarks.www.bookmark-add-one-2.count_url {
      
    select count(*)
    from   bm_urls
    where  complete_url = :complete_url 
      } {} {} {} c:/web/openacs-4/packages/bookmarks/www/bookmark-add-one-2.xql}
dbqd.bookmarks.www.bookmark-add-one-2.new_url_id {dbqd.bookmarks.www.bookmark-add-one-2.new_url_id {
      select url_id 
                                      from   bm_urls 
                                      where  complete_url= :complete_url
      } {} {} {} c:/web/openacs-4/packages/bookmarks/www/bookmark-add-one-2.xql}
dbqd.bookmarks.www.bookmark-add-one-2.update_url_meta_info {dbqd.bookmarks.www.bookmark-add-one-2.update_url_meta_info {
      update bm_urls set url_title= :url_title,
	    meta_description= :meta_description,
	    meta_keywords= :meta_keywords
            where url_id = :url_id
      } {} {} {} c:/web/openacs-4/packages/bookmarks/www/bookmark-add-one-2.xql}
dbqd.bookmarks.www.bookmark-delete-2-oracle.bookmark_delete {dbqd.bookmarks.www.bookmark-delete-2-oracle.bookmark_delete {
      
    begin
      bookmark.del (
       bookmark_id => :bookmark_id
	);       
 end;
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/bookmarks/www/bookmark-delete-2-oracle.xql}
dbqd.bookmarks.www.bookmark-delete-2.bookmark_delete {dbqd.bookmarks.www.bookmark-delete-2.bookmark_delete {
begin
    perform
      bookmark__delete 
	(
      	:bookmark_id
	);
	return 0;       
 end;
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/bookmarks/www/bookmark-delete-2-postgresql.xql}
dbqd.bookmarks.www.bookmark-delete-oracle.contained_bookmarks {dbqd.bookmarks.www.bookmark-delete-oracle.contained_bookmarks {
      select local_title, level as indentation 
from bm_bookmarks start with bookmark_id = :bookmark_id 
connect by prior bookmark_id = parent_id
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/bookmarks/www/bookmark-delete-oracle.xql}
dbqd.bookmarks.www.bookmark-delete.contained_bookmarks {dbqd.bookmarks.www.bookmark-delete.contained_bookmarks {
select bm.local_title, tree_level(bm.tree_sortkey) as indentation 
from bm_bookmarks bm, bm_bookmarks bm2
where bm.tree_sortkey between bm2.tree_sortkey and tree_right(bm2.tree_sortkey)
  and bm2.bookmark_id = :bookmark_id
order by bm.tree_sortkey
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/bookmarks/www/bookmark-delete-postgresql.xql}
dbqd.bookmarks.www.bookmark-delete.bookmark_title {dbqd.bookmarks.www.bookmark-delete.bookmark_title {
      select local_title from bm_bookmarks
                                              where bookmark_id = :bookmark_id
      } {} {} {} c:/web/openacs-4/packages/bookmarks/www/bookmark-delete.xql}
dbqd.bookmarks.www.bookmark-edit-2-oracle.insert_or_update_url {dbqd.bookmarks.www.bookmark-edit-2-oracle.insert_or_update_url {
      
    begin
    :1 := url.insert_or_update (
    url_title => :local_title,
    host_url => :host_url,
    complete_url => :complete_url,
    creation_user => :creation_user,
    creation_ip => :creation_ip
    );
    end;
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/bookmarks/www/bookmark-edit-2-oracle.xql}
dbqd.bookmarks.www.bookmark-edit-2-oracle.update_in_closed_p_all_users {dbqd.bookmarks.www.bookmark-edit-2-oracle.update_in_closed_p_all_users {
      
begin
bookmark.update_in_closed_p_all_users (
                bookmark_id => :bookmark_id,
                new_parent_id => :parent_id
);
end;
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/bookmarks/www/bookmark-edit-2-oracle.xql}
dbqd.bookmarks.www.bookmark-edit-2.insert_or_update_url {dbqd.bookmarks.www.bookmark-edit-2.insert_or_update_url {
	declare
	   v_url_id integer;
	begin
	v_url_id := url__insert_or_update (
    	:local_title,
    	:host_url,
    	:complete_url,
	null,
	null,
    	:creation_user,
    	:creation_ip,
	null
    );
	return v_url_id;
    end;
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/bookmarks/www/bookmark-edit-2-postgresql.xql}
dbqd.bookmarks.www.bookmark-edit-2.update_in_closed_p_all_users {dbqd.bookmarks.www.bookmark-edit-2.update_in_closed_p_all_users {

         select bookmark__update_in_closed_p_all_users(:bookmark_id, :parent_id)

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/bookmarks/www/bookmark-edit-2-postgresql.xql}
dbqd.bookmarks.www.bookmark-edit-2.update_bookmark {dbqd.bookmarks.www.bookmark-edit-2.update_bookmark {
      update bm_bookmarks set local_title = :local_title, parent_id = :parent_id
                        $url_clause
                        where bookmark_id = :bookmark_id
      } {} {} {} c:/web/openacs-4/packages/bookmarks/www/bookmark-edit-2.xql}
dbqd.bookmarks.www.bookmark-edit-2.update_context_id {dbqd.bookmarks.www.bookmark-edit-2.update_context_id {
      update acs_objects set context_id = :parent_id where object_id = :bookmark_id
      } {} {} {} c:/web/openacs-4/packages/bookmarks/www/bookmark-edit-2.xql}
dbqd.bookmarks.www.bookmark-edit-2.url_clause {dbqd.bookmarks.www.bookmark-edit-2.url_clause {
         , url_id = :url_id
      } {} {} {} c:/web/openacs-4/packages/bookmarks/www/bookmark-edit-2.xql}
dbqd.bookmarks.www.bookmark-edit.bookmark_admin_p {dbqd.bookmarks.www.bookmark-edit.bookmark_admin_p {
	select 
	acs_permission__permission_p(:bookmark_id, :browsing_user_id, 'admin')
	} {} {} {postgresql 7.1} c:/web/openacs-4/packages/bookmarks/www/bookmark-edit-postgresql.xql}
dbqd.bookmarks.www.bookmark-edit.bookmark_admin_p {dbqd.bookmarks.www.bookmark-edit.bookmark_admin_p {
	select 
	acs_permission__permission_p(:bookmark_id, :browsing_user_id, 'admin')
	} {} {} {postgresql 7.1} c:/web/openacs-4/packages/bookmarks/www/bookmark-edit-postgresql.xql}
dbqd.bookmarks.www.bookmark-edit.folder_p {dbqd.bookmarks.www.bookmark-edit.folder_p {
	 select folder_p from bm_bookmarks where bookmark_id = :bookmark_id
	} {} {} {} c:/web/openacs-4/packages/bookmarks/www/bookmark-edit.xql}
dbqd.bookmarks.www.bookmark-edit.inheritance_p {dbqd.bookmarks.www.bookmark-edit.inheritance_p {
	select security_inherit_p from acs_objects where object_id = :bookmark_id
	} {} {} {} c:/web/openacs-4/packages/bookmarks/www/bookmark-edit.xql}
dbqd.bookmarks.www.bookmark-edit.bookmark_edit {dbqd.bookmarks.www.bookmark-edit.bookmark_edit {
 	select local_title,
               owner_id,
               complete_url, 
               folder_p,
               parent_id, 
               bookmark_id
        from   bm_bookmarks left join bm_urls using (url_id)
        where  bookmark_id = :bookmark_id
      } {} {} {} c:/web/openacs-4/packages/bookmarks/www/bookmark-edit.xql}
dbqd.bookmarks.www.bookmark-view-oracle.bookmark_view {dbqd.bookmarks.www.bookmark-view-oracle.bookmark_view {
	select local_title,
               email,
               owner_id,
               complete_url, 
               bookmark_id,
               meta_keywords,
               meta_description,
               url_title
        from   bm_bookmarks, 
               bm_urls,
               parties
        where  bookmark_id = :bookmark_id
        and    bm_bookmarks.url_id = bm_urls.url_id(+)
        and    bm_bookmarks.owner_id = parties.party_id      
	} {} {} {oracle 8.1.6} c:/web/openacs-4/packages/bookmarks/www/bookmark-view-oracle.xql}
dbqd.bookmarks.www.bookmark-view.bookmark_view {dbqd.bookmarks.www.bookmark-view.bookmark_view {
     select local_title,
               email,
               owner_id,
               complete_url, 
               bookmark_id,
               meta_keywords,
               meta_description,
               url_title
        from   bm_bookmarks left join bm_urls using (url_id), parties 
        where  bookmark_id = :bookmark_id
        and    bm_bookmarks.owner_id = parties.party_id
      } {} {} {} c:/web/openacs-4/packages/bookmarks/www/bookmark-view.xql}
dbqd.bookmarks.www.bookmarks-check-oracle.set_last_live_date_to_now {dbqd.bookmarks.www.bookmarks-check-oracle.set_last_live_date_to_now {
              sysdate
	} {} {} {oracle 8.1.6} c:/web/openacs-4/packages/bookmarks/www/bookmarks-check-oracle.xql}
dbqd.bookmarks.www.bookmarks-check-oracle.bookmark_list {dbqd.bookmarks.www.bookmarks-check-oracle.bookmark_list {
      
select url_id,
       complete_url,
       nvl(url_title, complete_url) as url_title
       from bm_urls
       where exists (select 1 from (select bookmark_id, url_id from bm_bookmarks
                                                     start with parent_id = :root_folder_id 
                                                     connect by prior bookmark_id = parent_id) bm
                                      where bm.url_id = bm_urls.url_id
                                      and acs_permission.permission_p(bm.bookmark_id, :browsing_user_id, 'delete')= 't' )
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/bookmarks/www/bookmarks-check-oracle.xql}
dbqd.bookmarks.www.bookmarks-check-oracle.bookmark_update_last_checked {dbqd.bookmarks.www.bookmarks-check-oracle.bookmark_update_last_checked {
      
    update bm_urls 
    set    last_checked_date = sysdate,

    url_title= :title,
    meta_description= :description,
    meta_keywords= :keywords

    $last_live_clause

    where  url_id = :url_id
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/bookmarks/www/bookmarks-check-oracle.xql}
dbqd.bookmarks.www.bookmarks-check.bookmark_list {dbqd.bookmarks.www.bookmarks-check.bookmark_list {

	select bm_urls.url_id,
       	complete_url,
       	coalesce(url_title, complete_url) as url_title
       	from bm_urls join
	(
		select bm.bookmark_id, bm.url_id, bm.tree_sortkey
                from bm_bookmarks bm, bm_bookmarks bm2
		where bm.tree_sortkey between bm2.tree_sortkey and tree_right(bm2.tree_sortkey) 
                  and bm2.parent_id = :root_folder_id
	) bm on (bm.url_id=bm_urls.url_id)
        where acs_permission__permission_p(bm.bookmark_id, :browsing_user_id,
       'delete')= 't' 
        order by bm.tree_sortkey
      
	} {} {} {postgresql 7.1} c:/web/openacs-4/packages/bookmarks/www/bookmarks-check-postgresql.xql}
dbqd.bookmarks.www.bookmarks-check.set_last_live_date_to_now {dbqd.bookmarks.www.bookmarks-check.set_last_live_date_to_now {
		now()
	} {} {} {postgresql 7.1} c:/web/openacs-4/packages/bookmarks/www/bookmarks-check-postgresql.xql}
dbqd.bookmarks.www.bookmarks-check.bookmark_update_last_checked {dbqd.bookmarks.www.bookmarks-check.bookmark_update_last_checked {
      
    update bm_urls 
    set    last_checked_date = current_timestamp,

    url_title= :title,
    meta_description= :description,
    meta_keywords= :keywords

    $last_live_clause

    where  url_id = :url_id
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/bookmarks/www/bookmarks-check-postgresql.xql}
dbqd.bookmarks.www.bookmarks-import-oracle.folder_insert {dbqd.bookmarks.www.bookmarks-import-oracle.folder_insert {
      
		declare
		dummy_var integer;
		begin
		   dummy_var := bookmark.new (
		   bookmark_id => :bookmark_id,
		   owner_id    => :viewed_user_id,
		   local_title => :local_title,
		   parent_id   => :parent_id,
		   folder_p    => 't',
		   creation_user => :user_id,
		   creation_ip => :creation_ip
		);       
		end;
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/bookmarks/www/bookmarks-import-oracle.xql}
dbqd.bookmarks.www.bookmarks-import-oracle.new_url {dbqd.bookmarks.www.bookmarks-import-oracle.new_url {
      		
		declare
		   dummy_var integer;
		begin
		dummy_var := url.new (
		   url_id => :url_id,
		   url_title => :local_title,
		   host_url => :host_url,
		   complete_url => :complete_url,
		   creation_user => :viewed_user_id,
		   creation_ip => :creation_ip
		);
		end;
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/bookmarks/www/bookmarks-import-oracle.xql}
dbqd.bookmarks.www.bookmarks-import-oracle. {dbqd.bookmarks.www.bookmarks-import-oracle. {
      
		
		declare
		   dummy_var integer;
		begin
		   dummy_var := bookmark.new (
		   bookmark_id => :bookmark_id,
		   owner_id    => :viewed_user_id,
		   url_id      => :url_id,
		   local_title => :local_title,
		   parent_id   => :parent_id,
		   creation_user => :user_id,
		   creation_ip => :creation_ip
		);       
		end;
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/bookmarks/www/bookmarks-import-oracle.xql}
dbqd.bookmarks.www.bookmarks-import.folder_insert {dbqd.bookmarks.www.bookmarks-import.folder_insert {

	select 	bookmark__new (
			:bookmark_id,
			:viewed_user_id,
			null,
			:local_title,
			TRUE,
			:parent_id,
			null,
			:user_id,
			:creation_ip,
			null
		);       

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/bookmarks/www/bookmarks-import-postgresql.xql}
dbqd.bookmarks.www.bookmarks-import.new_url {dbqd.bookmarks.www.bookmarks-import.new_url {

	select url__new (
           		:url_id,
           		:local_title,
	   		:host_url,
	   		:complete_url,
			null,
			null,
           		:viewed_user_id,
           		:creation_ip,
			null
			);

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/bookmarks/www/bookmarks-import-postgresql.xql}
dbqd.bookmarks.www.bookmarks-import.bookmark_insert {dbqd.bookmarks.www.bookmarks-import.bookmark_insert {

	select	   bookmark__new (
			:bookmark_id,
			:viewed_user_id,
			:url_id,
			:local_title,
			FALSE,
			:parent_id,
			null,
			:user_id,
			:creation_ip,
			null);       

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/bookmarks/www/bookmarks-import-postgresql.xql}
dbqd.bookmarks.www.bookmarks-import.dbclick_check {dbqd.bookmarks.www.bookmarks-import.dbclick_check {
      
select count(bookmark_id) as n_existing
from   bm_bookmarks 
where  bookmark_id = :bookmark_id
      } {} {} {} c:/web/openacs-4/packages/bookmarks/www/bookmarks-import.xql}
dbqd.bookmarks.www.bookmarks-import.n_dp_folder {dbqd.bookmarks.www.bookmarks-import.n_dp_folder {
      
	    select count(*) from bm_bookmarks
	    where  owner_id = :viewed_user_id
	    and    parent_id = :parent_id
	    and    folder_p = 't'
	    and    local_title = :local_title
      } {} {} {} c:/web/openacs-4/packages/bookmarks/www/bookmarks-import.xql}
dbqd.bookmarks.www.bookmarks-import.bm_parent {dbqd.bookmarks.www.bookmarks-import.bm_parent {
      
	    select bookmark_id
	    from   bm_bookmarks
	    where  folder_p = 't'
	    and    owner_id = :user_id
	    and    local_title = :local_title
      } {} {} {} c:/web/openacs-4/packages/bookmarks/www/bookmarks-import.xql}
dbqd.bookmarks.www.bookmarks-import.bm_dp_url {dbqd.bookmarks.www.bookmarks-import.bm_dp_url {
      
		    select url_id
		    from   bm_urls
		    where  complete_url = :complete_url
      } {} {} {} c:/web/openacs-4/packages/bookmarks/www/bookmarks-import.xql}
dbqd.bookmarks.www.bookmarks-import.dp {dbqd.bookmarks.www.bookmarks-import.dp {
      
		select count(bookmark_id) 
		from   bm_bookmarks
		where  url_id = :url_id
		and    owner_id = :viewed_user_id
		and    parent_id = :parent_id
      } {} {} {} c:/web/openacs-4/packages/bookmarks/www/bookmarks-import.xql}
dbqd.bookmarks.www.bookmarks-import. {dbqd.bookmarks.www.bookmarks-import. {
      
			select count(bookmark_id) 
			from   bm_bookmarks 
			where bookmark_id = :bookmark_id
      } {} {} {} c:/web/openacs-4/packages/bookmarks/www/bookmarks-import.xql}
dbqd.bookmarks.www.bookmarks-user-list-oracle.bookmarks_of_other_users {dbqd.bookmarks.www.bookmarks-user-list-oracle.bookmarks_of_other_users {
      select u.first_names, 
            u.last_name, 
            b.owner_id as viewed_user_id, 
            count(b.bookmark_id) as number_of_bookmarks
    from    cc_users u, (select bookmark_id, url_id, folder_p, owner_id from bm_bookmarks 
                    start with parent_id = :package_id connect by prior bookmark_id = parent_id) b
    where   u.object_id = b.owner_id
    and     acs_permission.permission_p(b.bookmark_id, :browsing_user_id, 'read') = 't'
    and     b.owner_id <> :browsing_user_id
    and     b.folder_p = 'f'
    and     b.bookmark_id <> :package_id
    group by u.first_names, 
             u.last_name, 
             b.owner_id
    order by number_of_bookmarks desc
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/bookmarks/www/bookmarks-user-list-oracle.xql}
dbqd.bookmarks.www.bookmarks-user-list.bookmarks_of_other_users {dbqd.bookmarks.www.bookmarks-user-list.bookmarks_of_other_users {

select u.first_names, 
u.last_name, 
b.owner_id as viewed_user_id, 
count(b.bookmark_id) as number_of_bookmarks
from    
cc_users u, 
(
	select o2.bookmark_id, o2.url_id, o2.folder_p, o2.owner_id
	from bm_bookmarks o1, bm_bookmarks o2
	where o1.parent_id = :package_id
	and o2.tree_sortkey between o1.tree_sortkey and tree_right(o1.tree_sortkey)
	order by o2.tree_sortkey
) b
where   u.object_id = b.owner_id
and     acs_permission__permission_p(b.bookmark_id, :browsing_user_id, 'read') = 't'
and     b.owner_id <> :browsing_user_id
and     b.folder_p = 'f'
and     b.bookmark_id <> :package_id
group by 
u.first_names, 
u.last_name, 
b.owner_id
order by number_of_bookmarks desc
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/bookmarks/www/bookmarks-user-list-postgresql.xql}
dbqd.bookmarks.www.delete-dead-links-oracle.bookmark_ids_for_url {dbqd.bookmarks.www.delete-dead-links-oracle.bookmark_ids_for_url {
      select bookmark_id
    from (select bookmark_id, url_id from bm_bookmarks
                        start with parent_id = :root_folder_id 
                        connect by prior bookmark_id = parent_id) bm
    where acs_permission.permission_p(bm.bookmark_id, :browsing_user_id, 'delete') = 't'
    and bm.url_id = :url_id
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/bookmarks/www/delete-dead-links-oracle.xql}
dbqd.bookmarks.www.delete-dead-links-oracle.delete_dead_link {dbqd.bookmarks.www.delete-dead-links-oracle.delete_dead_link {
      
	begin
	bookmark.del (
	bookmark_id => :bookmark_id
	);       
        end;
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/bookmarks/www/delete-dead-links-oracle.xql}
dbqd.bookmarks.www.delete-dead-links-oracle.delete_dead_link {dbqd.bookmarks.www.delete-dead-links-oracle.delete_dead_link {
      
	begin
	bookmark.del (
	bookmark_id => :bookmark_id
	);       
        end;
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/bookmarks/www/delete-dead-links-oracle.xql}
dbqd.bookmarks.www.delete-dead-links.bookmark_ids_for_url {dbqd.bookmarks.www.delete-dead-links.bookmark_ids_for_url {

select bookmark_id
    from (select bookmark_id, url_id from bm_bookmarks
                        start with parent_id = :root_folder_id 
                        connect by prior bookmark_id = parent_id) bm
    where acs_permission__permission_p(bm.bookmark_id, :browsing_user_id, 'delete') = 't'
    and bm.url_id = :url_id
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/bookmarks/www/delete-dead-links-postgresql.xql}
dbqd.bookmarks.www.delete-dead-links.delete_dead_link {dbqd.bookmarks.www.delete-dead-links.delete_dead_link {

	begin
	perform bookmark__delete (
	bookmark_id => :bookmark_id
	);       
        end;
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/bookmarks/www/delete-dead-links-postgresql.xql}
dbqd.bookmarks.www.delete-dead-links.delete_dead_link {dbqd.bookmarks.www.delete-dead-links.delete_dead_link {


	begin
	perform bookmark__delete (
	bookmark_id => :bookmark_id
	);       
        end;
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/bookmarks/www/delete-dead-links-postgresql.xql}
dbqd.bookmarks.www.folder-add-2-oracle.bookmark_add {dbqd.bookmarks.www.folder-add-2-oracle.bookmark_add {
      
declare
dummy_var integer;
begin
dummy_var := bookmark.new (
bookmark_id => :bookmark_id,
owner_id    => :viewed_user_id,
local_title => :local_title,
parent_id   => :parent_id,
folder_p    => :folder_p,
creation_user => :user_id,
creation_ip => :creation_ip
);       
end;
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/bookmarks/www/folder-add-2-oracle.xql}
dbqd.bookmarks.www.folder-add-2.bookmark_add {dbqd.bookmarks.www.folder-add-2.bookmark_add {
begin

	perform	     bookmark__new (
		    :bookmark_id,
		    :viewed_user_id,
		    null,
		    :local_title,
		    :folder_p,
		    :parent_id,
		    null,
		    :user_id,
		    :creation_ip,
		    null);
   	return '';
end;
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/bookmarks/www/folder-add-2-postgresql.xql}
dbqd.bookmarks.www.index-oracle.index_order_by_name {dbqd.bookmarks.www.index-oracle.index_order_by_name {
		/*+INDEX(bm_bookmarks bm_bookmarks_local_title_idx)*/		
	} {} {} {oracle 8.1.6} c:/web/openacs-4/packages/bookmarks/www/index-oracle.xql}
dbqd.bookmarks.www.index-oracle.index_order_by_access_date {dbqd.bookmarks.www.index-oracle.index_order_by_access_date {
		/*+INDEX_DESC(bm_bookmarks bm_bookmarks_access_date_idx)*/		
	} {} {} {oracle 8.1.6} c:/web/openacs-4/packages/bookmarks/www/index-oracle.xql}
dbqd.bookmarks.www.index-oracle.private_select {dbqd.bookmarks.www.index-oracle.private_select {
		, bookmark.private_p(b.bookmark_id) as private_p
	} {} {} {oracle 8.1.6} c:/web/openacs-4/packages/bookmarks/www/index-oracle.xql}
dbqd.bookmarks.www.index-oracle.bookmark_system_name {dbqd.bookmarks.www.index-oracle.bookmark_system_name {
      select acs_object.name(:package_id) from dual
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/bookmarks/www/index-oracle.xql}
dbqd.bookmarks.www.index-oracle.bookmarks_select {dbqd.bookmarks.www.index-oracle.bookmarks_select {
         select b.bookmark_id, b.url_id, b.local_title as bookmark_title, b.folder_p, 
           u.complete_url, u.last_live_date, u.last_checked_date, 
           bm_in_closed_p.closed_p, 
           nvl(admin_view.object_id, 0) as admin_p,
           nvl(delete_view.object_id,0) as delete_p,
           b.lev as indentation
           $private_select
         from bm_urls u,
           (select $index_order bookmark_id, url_id, local_title, folder_p, level lev, parent_id, rownum ord_num 
            from bm_bookmarks start with bookmark_id = :root_folder_id connect by prior bookmark_id = parent_id) b,
           bm_in_closed_p,
           (select distinct object_id
            from all_object_party_privilege_map
            where party_id = :browsing_user_id and privilege = 'admin') admin_view,
           (select distinct object_id
            from all_object_party_privilege_map
            where party_id = :browsing_user_id and privilege = 'delete') delete_view
         where b.url_id = u.url_id (+)
           and bm_in_closed_p.bookmark_id = b.bookmark_id
           and bm_in_closed_p.in_closed_p = 'f'
           and bm_in_closed_p.in_closed_p_id = :in_closed_p_id
           and exists (select 1
                       from bm_bookmarks
                       where exists (select 1
                                     from all_object_party_privilege_map
                                     where object_id = bookmark_id and party_id = :browsing_user_id
                                       and privilege = 'read')
                       start with bookmark_id = b.bookmark_id connect by prior bookmark_id = parent_id)
           and b.bookmark_id <> :root_folder_id
           and b.bookmark_id = admin_view.object_id(+)
           and b.bookmark_id = delete_view.object_id(+)
         order by ord_num
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/bookmarks/www/index-oracle.xql}
dbqd.bookmarks.www.index-oracle.my_bookmarks_select {dbqd.bookmarks.www.index-oracle.my_bookmarks_select {
        select b.bookmark_id, b.url_id, b.local_title as bookmark_title,
          u.complete_url, u.last_live_date, u.last_checked_date, 
          b.folder_p, 
          bm_in_closed_p.closed_p, 
          nvl(admin_view.object_id, 0) as admin_p,
          nvl(delete_view.object_id,0) as delete_p,
          b.lev as indentation
          $private_select
        from bm_urls u,
          (select $index_order bookmark_id, url_id, local_title, folder_p, level lev, parent_id, rownum ord_num 
           from bm_bookmarks
           start with bookmark_id = :root_folder_id connect by prior bookmark_id = parent_id) b,
          bm_in_closed_p,
          (select distinct object_id
           from all_object_party_privilege_map
           where party_id = :browsing_user_id and privilege = 'admin') admin_view,
          (select distinct object_id
           from all_object_party_privilege_map
           where party_id = :browsing_user_id and privilege = 'delete') delete_view
        where b.url_id = u.url_id (+)
          and bm_in_closed_p.bookmark_id = b.bookmark_id
          and bm_in_closed_p.in_closed_p = 'f'
          and bm_in_closed_p.in_closed_p_id = :in_closed_p_id
          and exists (select 1
                      from bm_bookmarks
                      where exists (select 1
                                    from all_object_party_privilege_map
                                    where object_id = bookmark_id and party_id  = :browsing_user_id
                                      and privilege = 'read')
                                    start with bookmark_id = b.bookmark_id connect by prior bookmark_id = parent_id)
          and b.bookmark_id <> :root_folder_id
          and b.bookmark_id = admin_view.object_id(+)
          and b.bookmark_id = delete_view.object_id(+)
        order by ord_num
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/bookmarks/www/index-oracle.xql}
dbqd.bookmarks.www.index-oracle.bm_info {dbqd.bookmarks.www.index-oracle.bm_info {
      
        select   b.bookmark_id, 
	         b.url_id, 
                 b.local_title, 
	         acs_objects.creation_date, 
	         b.parent_id,
                 bm_urls.complete_url, 
	         b.folder_p
        from     (select /*+INDEX(bm_bookmarks bm_bookmarks_local_title_idx)*/ bookmark_id, url_id, local_title, folder_p, level lev, 
	          parent_id, owner_id, rownum ord_num from bm_bookmarks 
	          start with parent_id = :root_folder_id connect by prior bookmark_id = parent_id) b, 
	         bm_urls,
	         acs_objects
        where    owner_id       = :user_id
	and      acs_objects.object_id = b.bookmark_id
        and      b.url_id = bm_urls.url_id(+)
	order by ord_num
    
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/bookmarks/www/index-oracle.xql}
dbqd.bookmarks.www.index.index_order_by_name {dbqd.bookmarks.www.index.index_order_by_name {} {} {} {postgresql 7.1} c:/web/openacs-4/packages/bookmarks/www/index-postgresql.xql}
dbqd.bookmarks.www.index.index_order_by_access_date {dbqd.bookmarks.www.index.index_order_by_access_date {} {} {} {postgresql 7.1} c:/web/openacs-4/packages/bookmarks/www/index-postgresql.xql}
dbqd.bookmarks.www.index.private_select {dbqd.bookmarks.www.index.private_select {
		, bookmark__private_p(b.bookmark_id) as private_p
	} {} {} {postgresql 7.1} c:/web/openacs-4/packages/bookmarks/www/index-postgresql.xql}
dbqd.bookmarks.www.index.bookmark_system_name {dbqd.bookmarks.www.index.bookmark_system_name {
      select acs_object__name(:package_id) 
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/bookmarks/www/index-postgresql.xql}
dbqd.bookmarks.www.index.bookmarks_select {dbqd.bookmarks.www.index.bookmarks_select {
        select b.bookmark_id, b.url_id, b.local_title as bookmark_title,
          u.complete_url, u.last_live_date, u.last_checked_date, 
          b.folder_p, 
          bm_in_closed_p.closed_p, 
          coalesce(admin_view.object_id, 0) as admin_p,
          coalesce(delete_view.object_id,0) as delete_p,
          b.lev as indentation
          $private_select
        from 
          bm_in_closed_p cross join
          ((( bm_urls u right join (
	    select $index_order bm.bookmark_id, bm.url_id, bm.local_title, bm.folder_p, 
 	      tree_level(bm.tree_sortkey) as lev, bm.parent_id, bm.tree_sortkey 
	    from bm_bookmarks bm, bm_bookmarks bm2
	    where bm.tree_sortkey between bm2.tree_sortkey and tree_right(bm2.tree_sortkey)
              and bm2.bookmark_id = :root_folder_id
            ) b on (u.url_id=b.url_id)) left join (
	    select distinct object_id
            from all_object_party_privilege_map
 	    where party_id = :browsing_user_id and privilege = 'admin'
            ) admin_view on (admin_view.object_id=b.bookmark_id)) left join (
	    select distinct object_id
            from all_object_party_privilege_map
 	    where party_id = :browsing_user_id and privilege = 'delete'
            ) delete_view on (delete_view.object_id = b.bookmark_id))
        where bm_in_closed_p.bookmark_id = b.bookmark_id
          and bm_in_closed_p.in_closed_p = 'f'
          and bm_in_closed_p.in_closed_p_id = :in_closed_p_id
          and exists (select 1
                      from bm_bookmarks bm, bm_bookmarks bm2
                      where exists (select 1
                                    from all_object_party_privilege_map 
		                    where object_id = bm.bookmark_id
                                      and party_id = :browsing_user_id
		                      and privilege = 'read')
	              and bm.tree_sortkey between bm2.tree_sortkey and tree_right(bm2.tree_sortkey)
                      and bm2.bookmark_id = b.bookmark_id)
          and b.bookmark_id <> :root_folder_id
        order by b.tree_sortkey
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/bookmarks/www/index-postgresql.xql}
dbqd.bookmarks.www.index.my_bookmarks_select {dbqd.bookmarks.www.index.my_bookmarks_select {
        select 
          b.bookmark_id, b.url_id, b.local_title as bookmark_title,
          u.complete_url, u.last_live_date, u.last_checked_date, 
          b.folder_p, bm_in_closed_p.closed_p, 
          b.bookmark_id as admin_p, b.bookmark_id as delete_p,
          b.lev as indentation
          $private_select
        from bm_in_closed_p cross join ( 
	  bm_urls u right join (select $index_order bm.bookmark_id, bm.url_id, bm.local_title, bm.folder_p, 
 		                  tree_level(bm.tree_sortkey) as lev, bm.parent_id, bm.tree_sortkey 
	                        from bm_bookmarks bm, bm_bookmarks bm2
	                        where bm.tree_sortkey between bm2.tree_sortkey and tree_right(bm2.tree_sortkey)
			          and bm2.bookmark_id = :root_folder_id) b on (u.url_id=b.url_id))
        where bm_in_closed_p.bookmark_id = b.bookmark_id
          and bm_in_closed_p.in_closed_p = 'f'
          and bm_in_closed_p.in_closed_p_id = :in_closed_p_id
          and b.bookmark_id <> :root_folder_id
        order by b.tree_sortkey
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/bookmarks/www/index-postgresql.xql}
dbqd.bookmarks.www.index.bm_info {dbqd.bookmarks.www.index.bm_info {

        select   b.bookmark_id, 
	         b.url_id, 
                 b.local_title, 
	         acs_objects.creation_date, 
	         b.parent_id,
                 bm_urls.complete_url, 
	         b.folder_p
        from     (select bm.bookmark_id, bm.url_id, bm.local_title, bm.folder_p, 
		  bm.parent_id, bm.owner_id, bm.tree_sortkey from bm_bookmarks bm, bm_bookmarks bm2
		  where bm2.bookmark_id = :root_folder_id
                    and bm.tree_sortkey between bm2.tree_sortkey and tree_right(bm2.tree_sortkey)
		 ) b left join bm_urls using (url_id),
	         acs_objects
        where    owner_id       = :user_id
	and      acs_objects.object_id = b.bookmark_id
	order by b.tree_sortkey
    
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/bookmarks/www/index-postgresql.xql}
dbqd.bookmarks.www.index.user_exists {dbqd.bookmarks.www.index.user_exists {
      select 1 from parties where party_id = :viewed_user_id
      } {} {} {} c:/web/openacs-4/packages/bookmarks/www/index.xql}
dbqd.bookmarks.www.index.user_name {dbqd.bookmarks.www.index.user_name {
      select first_names || ' ' || last_name from cc_users where object_id = :viewed_user_id
      } {} {} {} c:/web/openacs-4/packages/bookmarks/www/index.xql}
dbqd.bookmarks.www.most-popular-oracle.popular_hosts {dbqd.bookmarks.www.most-popular-oracle.popular_hosts {
      
    select unique host_url,
           $count_select_query as n_bookmarks
    from  bm_urls
    order by n_bookmarks desc

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/bookmarks/www/most-popular-oracle.xql}
dbqd.bookmarks.www.most-popular-oracle.popular_urls {dbqd.bookmarks.www.most-popular-oracle.popular_urls {
      
    select nvl(url_title, complete_url) as local_title, 
           complete_url, 
           $count_select_query as n_bookmarks
    from   bm_urls
    order by n_bookmarks desc

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/bookmarks/www/most-popular-oracle.xql}
dbqd.bookmarks.www.most-popular.popular_hosts {dbqd.bookmarks.www.most-popular.popular_hosts {
      
select host_url, count(*) as n_bookmarks
	from 
	(
		select 	o2.bookmark_id, o2.url_id
		from bm_bookmarks o1, bm_bookmarks o2
		where 
			o1.parent_id = :root_folder_id
			and o2.tree_sortkey between o1.tree_sortkey and tree_right(o1.tree_sortkey)
	) b join bm_urls using (url_id)
        where acs_permission__permission_p(b.bookmark_id, :browsing_user_id, 'read') = 't'
group by host_url
order by n_bookmarks desc

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/bookmarks/www/most-popular-postgresql.xql}
dbqd.bookmarks.www.most-popular.popular_urls {dbqd.bookmarks.www.most-popular.popular_urls {
      
    select complete_url as local_title, 
           complete_url, count(*) as n_bookmarks
	from 
	(
		select 	o2.bookmark_id, o2.url_id
		from bm_bookmarks o1, bm_bookmarks o2
		where 
			o1.parent_id = :root_folder_id
			and o2.tree_sortkey between o1.tree_sortkey and tree_right(o1.tree_sortkey)
	) b join bm_urls using (url_id)
        where acs_permission__permission_p(b.bookmark_id, :browsing_user_id, 'read') = 't' 
group by complete_url, local_title
    order by n_bookmarks desc

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/bookmarks/www/most-popular-postgresql.xql}
dbqd.bookmarks.www.most-popular.popular_hosts {dbqd.bookmarks.www.most-popular.popular_hosts {
      
select host_url, count(*) as n_bookmarks
	from 
	(
		select 	o2.bookmark_id, o2.url_id
		from bm_bookmarks o1, bm_bookmarks o2
		where 
			o1.parent_id = :root_folder_id
			and o2.tree_sortkey between o1.tree_sortkey and tree_right(o1.tree_sortkey)
	) b join bm_urls using (url_id)
        where acs_permission__permission_p(b.bookmark_id, :browsing_user_id, 'read') = 't'
group by host_url
order by n_bookmarks desc

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/bookmarks/www/most-popular-postgresql.xql}
dbqd.bookmarks.www.most-popular.popular_urls {dbqd.bookmarks.www.most-popular.popular_urls {
      
    select complete_url as local_title, 
           complete_url, count(*) as n_bookmarks
	from 
	(
		select 	o2.bookmark_id, o2.url_id
		from bm_bookmarks o1, bm_bookmarks o2
		where 
			o1.parent_id = :root_folder_id
			and o2.tree_sortkey between o1.tree_sortkey and tree_right(o1.tree_sortkey)
	) b join bm_urls using (url_id)
        where acs_permission__permission_p(b.bookmark_id, :browsing_user_id, 'read') = 't' 
group by complete_url, local_title
    order by n_bookmarks desc

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/bookmarks/www/most-popular-postgresql.xql}
dbqd.bookmarks.www.one-host.user_urls {dbqd.bookmarks.www.one-host.user_urls {
      
    select u.first_names || ' ' || u.last_name as name, 
           bml.local_title,
           complete_url
    from   cc_users u, 
           bm_bookmarks bml, 
           bm_urls bmu
    where  u.user_id = bml.owner_id
    and    bml.url_id = bmu.url_id
    and    bmu.host_url = :host_url
    order by name

      } {} {} {} c:/web/openacs-4/packages/bookmarks/www/one-host.xql}
dbqd.bookmarks.www.permissions-reset-all-2-oracle.delete_individual_permissions {dbqd.bookmarks.www.permissions-reset-all-2-oracle.delete_individual_permissions {
      delete from acs_permissions where object_id in (select bookmark_id from bm_bookmarks
start with parent_id = :root_folder_id
connect by prior bookmark_id = parent_id)
and grantee_id <> :viewed_user_id
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/bookmarks/www/permissions-reset-all-2-oracle.xql}
dbqd.bookmarks.www.permissions-reset-all-2-oracle.turn_on_security_inheritance {dbqd.bookmarks.www.permissions-reset-all-2-oracle.turn_on_security_inheritance {
      update acs_objects set security_inherit_p = 't'
where object_id in (select bookmark_id from bm_bookmarks
start with parent_id = :root_folder_id
connect by prior bookmark_id = parent_id)
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/bookmarks/www/permissions-reset-all-2-oracle.xql}
dbqd.bookmarks.www.permissions-reset-all-2.delete_individual_permissions {dbqd.bookmarks.www.permissions-reset-all-2.delete_individual_permissions {

delete from 
	acs_permissions 
where 
	object_id in 
	(
	select bm.bookmark_id from bm_bookmarks bm, bm_bookmarks bm2
	where bm.tree_sortkey between bm2.tree_sortkey and tree_right(bm2.tree_sortkey)
          and bm2.bookmark_id = :root_folder_id
	)
and grantee_id <> :viewed_user_id
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/bookmarks/www/permissions-reset-all-2-postgresql.xql}
dbqd.bookmarks.www.permissions-reset-all-2.turn_on_security_inheritance {dbqd.bookmarks.www.permissions-reset-all-2.turn_on_security_inheritance {

update 
	acs_objects 
set 
	security_inherit_p = 't'
where 
	object_id in 
	(
	select bookmark_id from bm_bookmarks bm, bm_bookmarks bm2
	where bm.tree_sortkey between bm2.tree_sortkey and tree_right(bm2.tree_sortkey)
          and bm2.bookmark_id = :root_folder_id
	)

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/bookmarks/www/permissions-reset-all-2-postgresql.xql}
dbqd.bookmarks.www.permissions-reset-all-oracle.direct_bookmark_permissions {dbqd.bookmarks.www.permissions-reset-all-oracle.direct_bookmark_permissions {
      select bookmark_id, local_title from bm_bookmarks
where acs_permission.permission_p(bookmark_id, acs.magic_object_id('registered_users'), 'read') <> :public_p
start with parent_id = :root_folder_id
connect by prior bookmark_id = parent_id
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/bookmarks/www/permissions-reset-all-oracle.xql}
dbqd.bookmarks.www.permissions-reset-all.direct_bookmark_permissions {dbqd.bookmarks.www.permissions-reset-all.direct_bookmark_permissions {

         select bm.bookmark_id, bm.local_title, bm.tree_sortkey
         from bm_bookmarks bm, bm_bookmarks bm2
         where bm.tree_sortkey between bm2.tree_sortkey and tree_right(bm2.tree_sortkey)
           and bm2.bookmark_id = :root_folder_id
           and acs_permission__permission_p(bookmark_id, acs__magic_object_id('registered_users'), 'read') <> :public_p
	 order by bm.tree_sortkey

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/bookmarks/www/permissions-reset-all-postgresql.xql}
dbqd.bookmarks.www.search-oracle.bookmark_search_user {dbqd.bookmarks.www.search-oracle.bookmark_search_user {
      
    select   bookmark_id, 
             complete_url,
             nvl(local_title, url_title) as title, 
             meta_keywords, 
             meta_description
    from     (select bookmark_id, url_id, local_title, folder_p, owner_id 
              from bm_bookmarks start with bookmark_id = :root_folder_id 
              connect by prior bookmark_id = parent_id) b, 
             bm_urls
    where    owner_id = :browsing_user_id 
    and      folder_p = 'f'
    and      b.url_id = bm_urls.url_id 
    and      b.bookmark_id <> :root_folder_id
    and     (    upper(local_title)      like :search_pattern
              or upper(url_title)        like :search_pattern
              or upper(complete_url)     like :search_pattern
              or upper(meta_keywords)    like :search_pattern
              or upper(meta_description) like :search_pattern)
    order by title

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/bookmarks/www/search-oracle.xql}
dbqd.bookmarks.www.search-oracle.bookmark_search_other {dbqd.bookmarks.www.search-oracle.bookmark_search_other {
      
    select   distinct complete_url,
             bookmark_id,
             nvl(local_title, url_title) as title, 
             meta_keywords, 
             meta_description, 
             folder_p,
             acs_permission.permission_p(bookmark_id, :browsing_user_id, 'admin') as admin_p
    from     (select bookmark_id, url_id, local_title, folder_p, owner_id 
              from bm_bookmarks start with bookmark_id in (select bookmark_id
                           from bm_bookmarks where parent_id = :package_id)
              connect by prior bookmark_id = parent_id) b, 
             bm_urls
    where    owner_id <> :browsing_user_id
    and      acs_permission.permission_p(bookmark_id, :browsing_user_id, 'read') = 't'
    and      folder_p  = 'f' 
    and      b.url_id = bm_urls.url_id 
    and     (   upper(local_title)      like :search_pattern
             or upper(url_title)        like :search_pattern
             or upper(complete_url)     like :search_pattern
             or upper(meta_keywords)    like :search_pattern
             or upper(meta_description) like :search_pattern)
    order by title

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/bookmarks/www/search-oracle.xql}
dbqd.bookmarks.www.search.bookmark_search_user {dbqd.bookmarks.www.search.bookmark_search_user {

    select   bookmark_id, 
             complete_url,
             coalesce(local_title, url_title) as title, 
             meta_keywords, 
             meta_description
    from     (select bm.bookmark_id, bm.url_id, bm.local_title, bm.folder_p, bm.owner_id 
              	from bm_bookmarks bm, bm_bookmarks bm2
		where bm.tree_sortkey between bm2.tree_sortkey and tree_right(bm2.tree_sortkey)
                  and bm2.bookmark_id = :root_folder_id
		) b, 
             bm_urls
    where    owner_id = :browsing_user_id 
    and      folder_p = 'f'
    and      b.url_id = bm_urls.url_id 
    and      b.bookmark_id <> :root_folder_id
    and     (    upper(local_title)      like :search_pattern
              or upper(url_title)        like :search_pattern
              or upper(complete_url)     like :search_pattern
              or upper(meta_keywords)    like :search_pattern
              or upper(meta_description) like :search_pattern)
    order by title

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/bookmarks/www/search-postgresql.xql}
dbqd.bookmarks.www.search.bookmark_search_other {dbqd.bookmarks.www.search.bookmark_search_other {

select	distinct complete_url,
      	bookmark_id,
      	coalesce(local_title, url_title) as title, 
      	meta_keywords, 
      	meta_description, 
     	folder_p,
    	acs_permission__permission_p(bookmark_id, :browsing_user_id, 'admin') as admin_p
from
	(
		select 	o2.bookmark_id, o2.url_id, o2.local_title, 
			o2.folder_p, o2.owner_id
		from bm_bookmarks o1, bm_bookmarks o2
		where 
			o1.parent_id = :package_id
			and o2.tree_sortkey between o1.tree_sortkey and tree_right(o1.tree_sortkey)
		order by o2.tree_sortkey
	) b join bm_urls using (url_id) 
where    owner_id <> :browsing_user_id
and      acs_permission__permission_p(bookmark_id, :browsing_user_id, 'read') = 't'
and  	folder_p  = 'f' 
and	(   
	upper(local_title)      like :search_pattern
       	or upper(url_title)        like :search_pattern
       	or upper(complete_url)     like :search_pattern
      	or upper(meta_keywords)    like :search_pattern
      	or upper(meta_description) like :search_pattern
	)
order by title

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/bookmarks/www/search-postgresql.xql}
dbqd.bookmarks.www.toggle-open-close-oracle.toggle_open_close {dbqd.bookmarks.www.toggle-open-close-oracle.toggle_open_close {
      
    begin
   bookmark.toggle_open_close(
   bookmark_id => :bookmark_id,
   browsing_user_id => :browsing_user_id
    );
    end;
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/bookmarks/www/toggle-open-close-oracle.xql}
dbqd.bookmarks.www.toggle-open-close-oracle.toggle_open_close_all {dbqd.bookmarks.www.toggle-open-close-oracle.toggle_open_close_all {
      
    begin
   bookmark.toggle_open_close_all(
   browsing_user_id => :browsing_user_id,
   closed_p => :closed_p,
   root_id => bookmark.get_root_folder(
                package_id => :package_id,
                user_id    => :viewed_user_id
              )
    );
    end;
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/bookmarks/www/toggle-open-close-oracle.xql}
dbqd.bookmarks.www.toggle-open-close.toggle_open_close {dbqd.bookmarks.www.toggle-open-close.toggle_open_close {
begin
	perform bookmark__toggle_open_close (:bookmark_id,:browsing_user_id);
	
	return 0;
end;
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/bookmarks/www/toggle-open-close-postgresql.xql}
dbqd.bookmarks.www.toggle-open-close.toggle_open_close_all {dbqd.bookmarks.www.toggle-open-close.toggle_open_close_all {
begin
	perform bookmark__toggle_open_close_all(
				:browsing_user_id,
 				:closed_p,
   				bookmark__get_root_folder(:package_id,:viewed_user_id)
    				);
	
	return 0;
end;
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/bookmarks/www/toggle-open-close-postgresql.xql}
dbqd.bookmarks.www.tree-dynamic-oracle.bookmark_items {dbqd.bookmarks.www.tree-dynamic-oracle.bookmark_items {
      
    select   b.bookmark_id, 
             b.url_id, 
             b.local_title, 
             last_live_date, 
             last_checked_date,
             b.parent_id, 
             complete_url, 
             b.folder_p
    from     (select /*+INDEX(bm_bookmarks bm_bookmarks_local_title_idx)*/ 
              bookmark_id, url_id, local_title, folder_p, 
              level lev, parent_id, owner_id, rownum as ord_num 
              from bm_bookmarks start with bookmark_id = :root_id 
              connect by prior bookmark_id = parent_id) b, 
             bm_urls
    where exists (select 1 from bm_bookmarks where acs_permission.permission_p(bookmark_id, :user_id, 'read') = 't'
            start with bookmark_id = b.bookmark_id connect by prior bookmark_id = parent_id)
    and      b.bookmark_id <> :root_id
    and      b.url_id = bm_urls.url_id(+)
    order by ord_num

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/bookmarks/www/tree-dynamic-oracle.xql}
dbqd.bookmarks.www.tree-dynamic.bookmark_items {dbqd.bookmarks.www.tree-dynamic.bookmark_items {
select   
	b.bookmark_id, b.url_id, b.local_title, last_live_date, 
	last_checked_date, b.parent_id, complete_url, b.folder_p
from     
	(
	select bm.bookmark_id, bm.url_id, bm.local_title, bm.folder_p, 
          bm.parent_id, bm.owner_id, bm.tree_sortkey
        from bm_bookmarks bm, bm_bookmarks bm2
        where bm.tree_sortkey between bm2.tree_sortkey and tree_right(bm2.tree_sortkey)
          and bm2.bookmark_id = :root_id
	) 
	b left join bm_urls using (url_id) 
where exists 
	(
	select 1 from bm_bookmarks bm, bm_bookmarks bm2
	where bm.tree_sortkey between bm2.tree_sortkey and tree_right(bm2.tree_sortkey)
          and bm2.bookmark_id = b.bookmark_id
	and acs_permission__permission_p(bm.bookmark_id, :user_id, 'read') = 't'
	)
and      b.bookmark_id <> :root_id
order by b.tree_sortkey

} {} {} {postgresql 7.1} c:/web/openacs-4/packages/bookmarks/www/tree-dynamic-postgresql.xql}
dbqd.bookmarks.www.tree-dynamic.name_query {dbqd.bookmarks.www.tree-dynamic.name_query {
      
select first_names||' '||last_name as name 
from   cc_users 
where  user_id = :user_id
      } {} {} {} c:/web/openacs-4/packages/bookmarks/www/tree-dynamic.xql}
dbqd.bug-tracker.tcl.bug-procs-oracle.bug_tracker::bug::get.select_bug_data {dbqd.bug-tracker.tcl.bug-procs-oracle.bug_tracker::bug::get.select_bug_data {
      select b.bug_id,
             b.project_id,
             b.bug_number,
             b.summary,
             b.component_id,
             b.creation_date,
             to_char(b.creation_date, 'fmMM/DDfm/YYYY') as creation_date_pretty,
             b.resolution,
             b.user_agent,
             b.found_in_version,
             b.found_in_version,
             b.fix_for_version,
             b.fixed_in_version,
             to_char(sysdate, 'fmMM/DDfm/YYYY') as now_pretty
      from   bt_bugs b
      where  b.bug_id = :bug_id
    } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/bug-tracker/tcl/bug-procs-oracle.xql}
dbqd.bug-tracker.tcl.bug-procs-oracle.bug_tracker::bug::update.update_bug {dbqd.bug-tracker.tcl.bug-procs-oracle.bug_tracker::bug::update.update_bug {
        begin
            :1 := bt_bug_revision.new (
                bug_revision_id =>  null,
                bug_id =>           :bug_id,
                component_id =>     :component_id,
                found_in_version => :found_in_version,
                fix_for_version =>  :fix_for_version,
                fixed_in_version => :fixed_in_version,
                resolution =>       :resolution,
                user_agent =>       :user_agent,
                summary =>          :summary,
                creation_date =>    sysdate,
                creation_user =>    :creation_user,
                creation_ip =>      :creation_ip
            );
        end;
    } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/bug-tracker/tcl/bug-procs-oracle.xql}
dbqd.bug-tracker.tcl.bug-procs-oracle.bug_tracker::bug::insert.select_sysdate {dbqd.bug-tracker.tcl.bug-procs-oracle.bug_tracker::bug::insert.select_sysdate {
        select sysdate from dual
    } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/bug-tracker/tcl/bug-procs-oracle.xql}
dbqd.bug-tracker.tcl.bug-procs-oracle.bug_tracker::bug::delete.delete_bug_case {dbqd.bug-tracker.tcl.bug-procs-oracle.bug_tracker::bug::delete.delete_bug_case { 
        begin
             workflow_case_pkg.delete(:case_id);
        end;
    } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/bug-tracker/tcl/bug-procs-oracle.xql}
dbqd.bug-tracker.tcl.bug-procs-oracle.bug_tracker::bug::delete.delete_notification {dbqd.bug-tracker.tcl.bug-procs-oracle.bug_tracker::bug::delete.delete_notification {
        begin
             notification.delete(:notification_id);
        end;
    } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/bug-tracker/tcl/bug-procs-oracle.xql}
dbqd.bug-tracker.tcl.bug-procs-oracle.bug_tracker::bug::delete.delete_cr_item {dbqd.bug-tracker.tcl.bug-procs-oracle.bug_tracker::bug::delete.delete_cr_item {
        begin
             content_item.delete(:bug_id);
        end;
    } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/bug-tracker/tcl/bug-procs-oracle.xql}
dbqd.bug-tracker.tcl.bug-procs-oracle.bug_tracker::bug::get_list.select_categories {dbqd.bug-tracker.tcl.bug-procs-oracle.bug_tracker::bug::get_list.select_categories {
        select kw.heading,
               km.keyword_id,
               count(b.bug_id)
        from   cr_keywords kw,
               cr_item_keyword_map km,
               bt_bugs b
        where  kw.parent_id = :parent_id
        and    km.keyword_id = kw.keyword_id
        and    b.bug_id (+) = km.item_id
        and    b.project_id = :package_id
        group  by kw.heading, km.keyword_id
        order  by kw.heading

  } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/bug-tracker/tcl/bug-procs-oracle.xql}
dbqd.bug-tracker.tcl.bug-procs-oracle.bug_tracker::bug::get_list.select_fix_for_versions {dbqd.bug-tracker.tcl.bug-procs-oracle.bug_tracker::bug::get_list.select_fix_for_versions {

        select v.version_name,
               b.fix_for_version,
               count(b.bug_id) as num_bugs
        from   bt_bugs b,
               bt_versions v
        where  b.project_id = :package_id
        and    v.version_id (+) = b.fix_for_version
        group  by b.fix_for_version, v.anticipated_freeze_date, v.version_name
        order  by v.anticipated_freeze_date, v.version_name

  } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/bug-tracker/tcl/bug-procs-oracle.xql}
dbqd.bug-tracker.tcl.bug-procs-oracle.bug_tracker::bug::get_list.select_action_assignees {dbqd.bug-tracker.tcl.bug-procs-oracle.bug_tracker::bug::get_list.select_action_assignees {
    select p.first_names || ' ' || p.last_name as name,
           crum.user_id,
           count(b.bug_id) as num_bugs
    from   bt_bugs b,
           workflow_case_assigned_actions aa,
           workflow_case_role_user_map crum,
           persons p
    where  b.project_id = :package_id
    and    aa.workflow_id = :workflow_id
    and    aa.action_id = :action_id
    and    aa.object_id = b.bug_id
    and    crum.case_id (+) = aa.case_id
    and    crum.role_id (+) = aa.role_id
    and    p.person_id (+) = crum.user_id
    group  by p.first_names, p.last_name, crum.user_id
  } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/bug-tracker/tcl/bug-procs-oracle.xql}
dbqd.bug-tracker.tcl.bug-procs-oracle.bug_tracker::bug::get_list.category_where_clause {dbqd.bug-tracker.tcl.bug-procs-oracle.bug_tracker::bug::get_list.category_where_clause {
         content_keyword.is_assigned(b.bug_id, :f_category_$parent_id, 'none') = 't'
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/bug-tracker/tcl/bug-procs-oracle.xql}
dbqd.bug-tracker.tcl.bug-procs-oracle.bug_tracker::bug::get_query.orderby_category_from_bug_clause {dbqd.bug-tracker.tcl.bug-procs-oracle.bug_tracker::bug::get_query.orderby_category_from_bug_clause {
         , cr_item_keyword_map km_order,
         cr_keywords kw_order
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/bug-tracker/tcl/bug-procs-oracle.xql}
dbqd.bug-tracker.tcl.bug-procs-oracle.bug_tracker::bug::get_query.orderby_category_where_clause {dbqd.bug-tracker.tcl.bug-procs-oracle.bug_tracker::bug::get_query.orderby_category_where_clause {
           and km_order.item_id (+) = b.bug_id
           and km_order.keyword_id = kw_order.keyword_id 
           and kw_order.parent_id = '[db_quote $orderby_parent_id]'
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/bug-tracker/tcl/bug-procs-oracle.xql}
dbqd.bug-tracker.tcl.bug-procs-oracle.bug_tracker::bug::get_query.bugs {dbqd.bug-tracker.tcl.bug-procs-oracle.bug_tracker::bug::get_query.bugs {
    
    select q.*,
           km.keyword_id
    from (
        select b.bug_id,
               b.bug_number,
               b.summary,
               b.comment_content,
               b.comment_format,
               b.component_id,
               b.creation_date,
               to_char(b.creation_date, 'fmMM/DDfm/YYYY') as creation_date_pretty,
               b.creation_user as submitter_user_id,
               submitter.first_names as submitter_first_names,
               submitter.last_name as submitter_last_name,
               submitter.email as submitter_email,
               st.pretty_name as pretty_state,
               st.short_name as state_short_name,
               st.state_id,
               st.hide_fields,
               b.resolution,
               b.found_in_version,
               b.fix_for_version,
               b.fixed_in_version
        from   $from_bug_clause,
               cc_users submitter,
               workflow_cases cas,
               workflow_case_fsm cfsm,
               workflow_fsm_states st 
        where  submitter.user_id = b.creation_user
        and    cas.workflow_id = :workflow_id
        and    cas.object_id = b.bug_id
        and    cfsm.case_id = cas.case_id
        and    st.state_id = cfsm.current_state 
        $orderby_category_where_clause
        [template::list::filter_where_clauses -and -name "bugs"]
        [template::list::orderby_clause -orderby -name "bugs"]
    ) q,
    cr_item_keyword_map km
  where km.item_id (+) = q.bug_id

  } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/bug-tracker/tcl/bug-procs-oracle.xql}
dbqd.bug-tracker.tcl.bug-procs-oracle.bug_tracker::bug::get_list.filter_assignee_null_where_clause {dbqd.bug-tracker.tcl.bug-procs-oracle.bug_tracker::bug::get_list.filter_assignee_null_where_clause {
          exists (select 1
                  from   workflow_case_assigned_actions aa,
                         workflow_case_role_user_map crum
                  where  aa.case_id = cas.case_id
                  and    aa.action_id = $action_id
                  and    crum.case_id (+) = aa.case_id
                  and    crum.role_id (+) = aa.role_id
                  and    crum.user_id is null
                 )
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/bug-tracker/tcl/bug-procs-oracle.xql}
dbqd.bug-tracker.tcl.bug-procs.bug_tracker::bug::get.select_bug_data {dbqd.bug-tracker.tcl.bug-procs.bug_tracker::bug::get.select_bug_data {
      select b.bug_id,
             b.project_id,
             b.bug_number,
             b.summary,
             b.component_id,
             b.creation_date,
             to_char(b.creation_date, 'fmMM/DDfm/YYYY') as creation_date_pretty,
             b.resolution,
             b.user_agent,
             b.found_in_version,
             b.found_in_version,
             b.fix_for_version,
             b.fixed_in_version,
             to_char(now(), 'fmMM/DDfm/YYYY') as now_pretty
      from   bt_bugs b
      where  b.bug_id = :bug_id
    } {} {} {postgresql 7.1} c:/web/openacs-4/packages/bug-tracker/tcl/bug-procs-postgresql.xql}
dbqd.bug-tracker.tcl.bug-procs.bug_tracker::bug::update.update_bug {dbqd.bug-tracker.tcl.bug-procs.bug_tracker::bug::update.update_bug {
        select bt_bug_revision__new (
            null,
            :bug_id,
            :component_id,
            :found_in_version,
            :fix_for_version,
            :fixed_in_version,
            :resolution,
            :user_agent,
            :summary,
            now(),
            :creation_user,
            :creation_ip
        );
    } {} {} {postgresql 7.1} c:/web/openacs-4/packages/bug-tracker/tcl/bug-procs-postgresql.xql}
dbqd.bug-tracker.tcl.bug-procs.bug_tracker::bug::insert.select_sysdate {dbqd.bug-tracker.tcl.bug-procs.bug_tracker::bug::insert.select_sysdate {
        select current_timestamp
    } {} {} {postgresql 7.1} c:/web/openacs-4/packages/bug-tracker/tcl/bug-procs-postgresql.xql}
dbqd.bug-tracker.tcl.bug-procs.bug_tracker::bug::delete.delete_bug_case {dbqd.bug-tracker.tcl.bug-procs.bug_tracker::bug::delete.delete_bug_case { 
        select workflow_case_pkg__delete(:case_id);
    } {} {} {postgresql 7.1} c:/web/openacs-4/packages/bug-tracker/tcl/bug-procs-postgresql.xql}
dbqd.bug-tracker.tcl.bug-procs.bug_tracker::bug::delete.delete_notification {dbqd.bug-tracker.tcl.bug-procs.bug_tracker::bug::delete.delete_notification {
        select notification__delete(:notification_id);
    } {} {} {postgresql 7.1} c:/web/openacs-4/packages/bug-tracker/tcl/bug-procs-postgresql.xql}
dbqd.bug-tracker.tcl.bug-procs.bug_tracker::bug::delete.delete_cr_item {dbqd.bug-tracker.tcl.bug-procs.bug_tracker::bug::delete.delete_cr_item {
        select content_item__delete(:bug_id);
    } {} {} {postgresql 7.1} c:/web/openacs-4/packages/bug-tracker/tcl/bug-procs-postgresql.xql}
dbqd.bug-tracker.tcl.bug-procs.bug_tracker::bug::get_list.select_categories {dbqd.bug-tracker.tcl.bug-procs.bug_tracker::bug::get_list.select_categories {
        select kw.heading,
               km.keyword_id,
               count(b.bug_id)
        from   cr_keywords kw join
               cr_item_keyword_map km using (keyword_id) left outer join
               bt_bugs b on (b.bug_id = km.item_id)
        where  kw.parent_id = :parent_id
        and    b.project_id = :package_id
        group  by kw.heading, km.keyword_id
        order  by kw.heading

  } {} {} {postgresql 7.1} c:/web/openacs-4/packages/bug-tracker/tcl/bug-procs-postgresql.xql}
dbqd.bug-tracker.tcl.bug-procs.bug_tracker::bug::get_list.select_action_assignees {dbqd.bug-tracker.tcl.bug-procs.bug_tracker::bug::get_list.select_action_assignees {
    select p.first_names || ' ' || p.last_name as name,
           crum.user_id,
           count(b.bug_id) as num_bugs
    from   bt_bugs b,
           workflow_case_assigned_actions aa left outer join
           workflow_case_role_user_map crum on (crum.case_id = aa.case_id and crum.role_id = aa.role_id) left outer join
           persons p on (p.person_id = crum.user_id)
    where  b.project_id = :package_id
    and    aa.workflow_id = :workflow_id
    and    aa.action_id = :action_id
    and    aa.object_id = b.bug_id
    group  by p.first_names, p.last_name, crum.user_id
  } {} {} {postgresql 7.1} c:/web/openacs-4/packages/bug-tracker/tcl/bug-procs-postgresql.xql}
dbqd.bug-tracker.tcl.bug-procs.bug_tracker::bug::get_list.select_fix_for_versions {dbqd.bug-tracker.tcl.bug-procs.bug_tracker::bug::get_list.select_fix_for_versions {

        select v.version_name,
               b.fix_for_version,
               count(b.bug_id) as num_bugs
        from   bt_bugs b left outer join 
               bt_versions v on (v.version_id = b.fix_for_version)
        where  b.project_id = :package_id
        group  by b.fix_for_version, v.anticipated_freeze_date, v.version_name
        order  by v.anticipated_freeze_date, v.version_name

  } {} {} {postgresql 7.1} c:/web/openacs-4/packages/bug-tracker/tcl/bug-procs-postgresql.xql}
dbqd.bug-tracker.tcl.bug-procs.bug_tracker::bug::get_list.category_where_clause {dbqd.bug-tracker.tcl.bug-procs.bug_tracker::bug::get_list.category_where_clause {
         content_keyword__is_assigned(b.bug_id, :f_category_$parent_id, 'none') = 't'
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/bug-tracker/tcl/bug-procs-postgresql.xql}
dbqd.bug-tracker.tcl.bug-procs.bug_tracker::bug::get_query.orderby_category_from_bug_clause {dbqd.bug-tracker.tcl.bug-procs.bug_tracker::bug::get_query.orderby_category_from_bug_clause {
         left outer join cr_item_keyword_map km_order on (km_order.item_id = b.bug_id) 
         join cr_keywords kw_order on (km_order.keyword_id = kw_order.keyword_id and kw_order.parent_id = '[db_quote $orderby_parent_id]')
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/bug-tracker/tcl/bug-procs-postgresql.xql}
dbqd.bug-tracker.tcl.bug-procs.bug_tracker::bug::get_query.orderby_category_where_clause {dbqd.bug-tracker.tcl.bug-procs.bug_tracker::bug::get_query.orderby_category_where_clause {} {} {} {postgresql 7.1} c:/web/openacs-4/packages/bug-tracker/tcl/bug-procs-postgresql.xql}
dbqd.bug-tracker.tcl.bug-procs.bug_tracker::bug::get_query.bugs {dbqd.bug-tracker.tcl.bug-procs.bug_tracker::bug::get_query.bugs {
    
    select q.*,
           km.keyword_id
    from (
        select b.bug_id,
               b.bug_number,
               b.summary,
               b.comment_content,
               b.comment_format,
               b.component_id,
               b.creation_date,
               to_char(b.creation_date, 'fmMM/DDfm/YYYY') as creation_date_pretty,
               b.creation_user as submitter_user_id,
               submitter.first_names as submitter_first_names,
               submitter.last_name as submitter_last_name,
               submitter.email as submitter_email,
               st.pretty_name as pretty_state,
               st.short_name as state_short_name,
               st.state_id,
               st.hide_fields,
               b.resolution,
               b.found_in_version,
               b.fix_for_version,
               b.fixed_in_version
        from   $from_bug_clause,
               cc_users submitter,
               workflow_cases cas,
               workflow_case_fsm cfsm,
               workflow_fsm_states st 
        where  submitter.user_id = b.creation_user
        and    cas.workflow_id = :workflow_id
        and    cas.object_id = b.bug_id
        and    cfsm.case_id = cas.case_id
        and    st.state_id = cfsm.current_state 
        $orderby_category_where_clause
        [template::list::filter_where_clauses -and -name "bugs"]
        [template::list::orderby_clause -orderby -name "bugs"]
    ) q left outer join
    cr_item_keyword_map km on (km.item_id = q.bug_id)

  } {} {} {postgresql 7.1} c:/web/openacs-4/packages/bug-tracker/tcl/bug-procs-postgresql.xql}
dbqd.bug-tracker.tcl.bug-procs.bug_tracker::bug::get_list.filter_assignee_null_where_clause {dbqd.bug-tracker.tcl.bug-procs.bug_tracker::bug::get_list.filter_assignee_null_where_clause {
          exists (select 1
                  from   workflow_case_assigned_actions aa left outer join
                         workflow_case_role_user_map crum on (crum.case_id = aa.case_id and crum.role_id = aa.role_id)
                  where  aa.case_id = cas.case_id
                  and    aa.action_id = $action_id
                  and    crum.user_id is null
                 )
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/bug-tracker/tcl/bug-procs-postgresql.xql}
dbqd.bug-tracker.tcl.bug-procs.bug_tracker::bug::delete.get_case_id {dbqd.bug-tracker.tcl.bug-procs.bug_tracker::bug::delete.get_case_id {
        select case_id
        from   workflow_cases
        where  object_id = :bug_id
    } {} {} {} c:/web/openacs-4/packages/bug-tracker/tcl/bug-procs.xql}
dbqd.bug-tracker.tcl.bug-procs.bug_tracker::bug::delete.get_notifications {dbqd.bug-tracker.tcl.bug-procs.bug_tracker::bug::delete.get_notifications {
        select notification_id
        from   notifications
        where  response_id = :bug_id
    } {} {} {} c:/web/openacs-4/packages/bug-tracker/tcl/bug-procs.xql}
dbqd.bug-tracker.tcl.bug-procs.bug_tracker::bug::delete.unset_revisions {dbqd.bug-tracker.tcl.bug-procs.bug_tracker::bug::delete.unset_revisions {
        update cr_items
        set live_revision = null, latest_revision = null
        where item_id = :bug_id
    } {} {} {} c:/web/openacs-4/packages/bug-tracker/tcl/bug-procs.xql}
dbqd.bug-tracker.tcl.bug-procs.bug_tracker::bug::get_activity_html.actions {dbqd.bug-tracker.tcl.bug-procs.bug_tracker::bug::get_activity_html.actions {
      select ba.action_id,
             ba.action as loop_action,
             ba.resolution,
             ba.actor as actor_user_id,
             actor.first_names as actor_first_names,
             actor.last_name as actor_last_name,
             actor.email as actor_email,
             ba.action_date,
             to_char(ba.action_date, 'fmMM/DDfm/YYYY') as action_date_pretty,
             ba.comment_s,
             ba.comment_format
      from   bt_bug_actions ba,
             cc_users actor
      where  ba.bug_id = :bug_id
      and    actor.user_id = ba.actor
      order  by action_date
    } {} {} {} c:/web/openacs-4/packages/bug-tracker/tcl/bug-procs.xql}
dbqd.bug-tracker.tcl.bug-procs.bug_tracker::bug::capture_resolution_code::do_side_effect.select_resolution_code {dbqd.bug-tracker.tcl.bug-procs.bug_tracker::bug::capture_resolution_code::do_side_effect.select_resolution_code {
        select resolution
        from   bt_bugs
        where  bug_id = :object_id
    } {} {} {} c:/web/openacs-4/packages/bug-tracker/tcl/bug-procs.xql}
dbqd.bug-tracker.tcl.bug-procs.bug_tracker::bug::get_component_maintainer::get_assignees.select_component_maintainer {dbqd.bug-tracker.tcl.bug-procs.bug_tracker::bug::get_component_maintainer::get_assignees.select_component_maintainer {
        select c.maintainer
        from   bt_components c,
               bt_bugs b
        where  b.bug_id = :object_id
        and    c.component_id = b.component_id
    } {} {} {} c:/web/openacs-4/packages/bug-tracker/tcl/bug-procs.xql}
dbqd.bug-tracker.tcl.bug-procs.bug_tracker::bug::get_project_maintainer::get_assignees.select_project_maintainer {dbqd.bug-tracker.tcl.bug-procs.bug_tracker::bug::get_project_maintainer::get_assignees.select_project_maintainer {
        select p.maintainer
        from   bt_projects p,
               bt_bugs b
        where  b.bug_id = :object_id
        and    p.project_id = b.project_id
    } {} {} {} c:/web/openacs-4/packages/bug-tracker/tcl/bug-procs.xql}
dbqd.bug-tracker.tcl.bug-procs.bug_tracker::bug::notification_info::get_notification_info.select_notification_tag {dbqd.bug-tracker.tcl.bug-procs.bug_tracker::bug::notification_info::get_notification_info.select_notification_tag {
        select email_subject_name
        from   bt_projects p,
               bt_bugs b
        where  b.bug_id = :object_id
        and    p.project_id = b.project_id
    } {} {} {} c:/web/openacs-4/packages/bug-tracker/tcl/bug-procs.xql}
dbqd.bug-tracker.tcl.bug-procs.bug_tracker::bug::get_list.select_states {dbqd.bug-tracker.tcl.bug-procs.bug_tracker::bug::get_list.select_states {
    select st.pretty_name,
           st.state_id,
           count(b.bug_id)
    from   workflow_fsm_states st,
           bt_bugs b,
           workflow_cases cas,
           workflow_case_fsm cfsm
    where  st.workflow_id = :workflow_id
    and    b.project_id = :package_id
    and    cas.workflow_id = :workflow_id
    and    cas.object_id = b.bug_id
    and    cfsm.case_id = cas.case_id
    and    st.state_id = cfsm.current_state
    group  by st.state_id, st.pretty_name, st.sort_order
    order  by st.sort_order
  } {} {} {} c:/web/openacs-4/packages/bug-tracker/tcl/bug-procs.xql}
dbqd.bug-tracker.tcl.bug-procs.bug_tracker::bug::get_list.select_components {dbqd.bug-tracker.tcl.bug-procs.bug_tracker::bug::get_list.select_components {

    select c.component_name,
           c.component_id,
           count(b.bug_id) as num_bugs
     from  bt_bugs b,
           bt_components c
     where b.project_id = :package_id
     and   c.component_id = b.component_id
     group by c.component_name, c.component_id
     order by c.component_name

  } {} {} {} c:/web/openacs-4/packages/bug-tracker/tcl/bug-procs.xql}
dbqd.bug-tracker.tcl.bug-procs.bug_tracker::bug::get_list.filter_assignee_where_clause {dbqd.bug-tracker.tcl.bug-procs.bug_tracker::bug::get_list.filter_assignee_where_clause {
          exists (select 1
                  from   workflow_case_assigned_actions aa,
                         workflow_case_role_user_map crum
                  where  aa.case_id = cas.case_id
                  and    aa.action_id = $action_id
                  and    crum.case_id = aa.case_id
                  and    crum.role_id = aa.role_id
                  and    crum.user_id = :f_action_$action_id
                 )
      } {} {} {} c:/web/openacs-4/packages/bug-tracker/tcl/bug-procs.xql}
dbqd.bug-tracker.tcl.bug-tracker-procs-oracle.bug_tracker::bug_notify.bug {dbqd.bug-tracker.tcl.bug-tracker-procs-oracle.bug_tracker::bug_notify.bug {
        select b.bug_id,
               b.bug_number,
               b.summary,
               b.project_id,
               o.creation_user as submitter_user_id,
               submitter.first_names as submitter_first_names,
               submitter.last_name as submitter_last_name,
               submitter.email as submitter_email,
               b.component_id,
               c.component_name,
               o.creation_date,
               to_char(o.creation_date, 'fmMM/DDfm/YYYY') as creation_date_pretty,
               st.pretty_name as status,
               b.resolution,
               b.user_agent,
               b.found_in_version,
               b.fix_for_version,
               b.fixed_in_version,
               to_char(sysdate, 'fmMon/DDfm/YYYY') as now_pretty
        from   bt_bugs b,
               acs_objects o,
               bt_components c,
               cc_users submitter,
               workflow_cases cas,
               workflow_case_fsm cfsm,
               workflow_fsm_states st
        where  b.bug_id = :bug_id
        and    b.project_id = :package_id
        and    o.object_id = b.bug_id
        and    c.component_id = b.component_id
        and    submitter.user_id = o.creation_user
        and    cas.object_id = b.bug_id
        and    cfsm.case_id = cas.case_id
        and    cfsm.current_state = st.state_id

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/bug-tracker/tcl/bug-tracker-procs-oracle.xql}
dbqd.bug-tracker.tcl.bug-tracker-procs-oracle.bug_tracker::get_project_info_internal.project_info {dbqd.bug-tracker.tcl.bug-tracker-procs-oracle.bug_tracker::get_project_info_internal.project_info {
      
        select pck.instance_name as project_name,
               prj.description as project_description,
               prj.folder_id as project_folder_id,
               prj.root_keyword_id as project_root_keyword_id,
               ver.version_id as current_version_id,
               nvl(ver.version_name, 'None') as current_version_name
        from   apm_packages pck, 
               bt_projects prj,
               (select * from bt_versions where active_version_p = 't') ver 
        where  pck.package_id = :package_id 
        and    prj.project_id = pck.package_id
        and    prj.project_id = ver.project_id (+)
    
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/bug-tracker/tcl/bug-tracker-procs-oracle.xql}
dbqd.bug-tracker.tcl.bug-tracker-procs-oracle.bug_tracker::bugs_exist_p_not_cached.select_bugs_exist_p {dbqd.bug-tracker.tcl.bug-tracker-procs-oracle.bug_tracker::bugs_exist_p_not_cached.select_bugs_exist_p {
        select 1 
        from  bt_bugs 
        where project_id = :package_id 
        and   rownum = 1
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/bug-tracker/tcl/bug-tracker-procs-oracle.xql}
dbqd.bug-tracker.tcl.bug-tracker-procs-oracle.bug_tracker::get_user_prefs_internal.user_info {dbqd.bug-tracker.tcl.bug-tracker-procs-oracle.bug_tracker::get_user_prefs_internal.user_info {
      
        select u.first_names as user_first_names, 
               u.last_name as user_last_name,
               u.email as user_email,
               ver.version_id as user_version_id,
               nvl(ver.version_name, 'None') as user_version_name
        from   cc_users u,
               bt_user_prefs up,
               bt_versions ver
        where  u.user_id = :user_id
        and    up.user_id = u.user_id
        and    up.project_id = :package_id
        and    up.user_version = ver.version_id (+)
    
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/bug-tracker/tcl/bug-tracker-procs-oracle.xql}
dbqd.bug-tracker.tcl.bug-tracker-procs-oracle.bug_tracker::delete_all_project_keywords.keywords_delete {dbqd.bug-tracker.tcl.bug-tracker-procs-oracle.bug_tracker::delete_all_project_keywords.keywords_delete {
        begin
             bt_project.keywords_delete(:package_id, 'f');
        end;
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/bug-tracker/tcl/bug-tracker-procs-oracle.xql}
dbqd.bug-tracker.tcl.bug-tracker-procs-oracle.bug_tracker::parse_filters.assignee_name {dbqd.bug-tracker.tcl.bug-tracker-procs-oracle.bug_tracker::parse_filters.assignee_name {
       select acs_object.name(party_id) from parties where party_id = :filter_assignee 
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/bug-tracker/tcl/bug-tracker-procs-oracle.xql}
dbqd.bug-tracker.tcl.bug-tracker-procs-oracle.bug_tracker::parse_filters.n_days_filter {dbqd.bug-tracker.tcl.bug-tracker-procs-oracle.bug_tracker::parse_filters.n_days_filter {
        b.creation_date + :filter_n_days > sysdate
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/bug-tracker/tcl/bug-tracker-procs-oracle.xql}
dbqd.bug-tracker.tcl.bug-tracker-procs-oracle.bug_tracker::parse_filters.keyword_filter {dbqd.bug-tracker.tcl.bug-tracker-procs-oracle.bug_tracker::parse_filters.keyword_filter {
        content_keyword.is_assigned(b.bug_id, $keyword_id, 'none') = 't'
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/bug-tracker/tcl/bug-tracker-procs-oracle.xql}
dbqd.bug-tracker.tcl.bug-tracker-procs-oracle.bug_tracker::project_delete.delete_project {dbqd.bug-tracker.tcl.bug-tracker-procs-oracle.bug_tracker::project_delete.delete_project {
        begin
             bt_project.del(:project_id);
        end;
    } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/bug-tracker/tcl/bug-tracker-procs-oracle.xql}
dbqd.bug-tracker.tcl.bug-tracker-procs-oracle.bug_tracker::project_new.create_project {dbqd.bug-tracker.tcl.bug-tracker-procs-oracle.bug_tracker::project_new.create_project {
        begin
             bt_project.new(:project_id);
        end;
    } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/bug-tracker/tcl/bug-tracker-procs-oracle.xql}
dbqd.bug-tracker.tcl.bug-tracker-procs.bug_tracker::bug_notify.bug {dbqd.bug-tracker.tcl.bug-tracker-procs.bug_tracker::bug_notify.bug {
      
        select b.bug_id,
               b.bug_number,
               b.summary,
               b.project_id,
               o.creation_user as submitter_user_id,
               submitter.first_names as submitter_first_names,
               submitter.last_name as submitter_last_name,
               submitter.email as submitter_email,
               b.component_id,
               c.component_name,
               o.creation_date,
               to_char(o.creation_date, 'fmMM/DDfm/YYYY') as creation_date_pretty,
               st.pretty_name as status,
               b.resolution,
               b.user_agent,
               b.found_in_version,
               b.fix_for_version,
               b.fixed_in_version,
               to_char(now(), 'fmMon/DDfm/YYYY') as now_pretty
        from   bt_bugs b,
               acs_objects o,
               bt_components c,
               cc_users submitter,
               workflow_cases cas,
               workflow_case_fsm cfsm,
               workflow_fsm_states st
        where  b.bug_id = :bug_id
        and    b.project_id = :package_id
        and    o.object_id = b.bug_id
        and    c.component_id = b.component_id
        and    submitter.user_id = o.creation_user
        and    cas.object_id = b.bug_id
        and    cfsm.case_id = cas.case_id
        and    cfsm.current_state = st.state_id
    
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/bug-tracker/tcl/bug-tracker-procs-postgresql.xql}
dbqd.bug-tracker.tcl.bug-tracker-procs.bug_tracker::get_project_info_internal.project_info {dbqd.bug-tracker.tcl.bug-tracker-procs.bug_tracker::get_project_info_internal.project_info {
      
        select pck.instance_name as project_name,
               prj.description as project_description,
               prj.folder_id as project_folder_id,
               prj.root_keyword_id as project_root_keyword_id,
               ver.version_id as current_version_id,
               coalesce(ver.version_name, 'None') as current_version_name
        from   apm_packages pck, 
               bt_projects prj 
               left outer join bt_versions ver 
               on (ver.project_id = prj.project_id and active_version_p = 't')
        where  pck.package_id = :package_id 
        and    prj.project_id = pck.package_id
    
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/bug-tracker/tcl/bug-tracker-procs-postgresql.xql}
dbqd.bug-tracker.tcl.bug-tracker-procs.bug_tracker::bugs_exist_p_not_cached.select_bugs_exist_p {dbqd.bug-tracker.tcl.bug-tracker-procs.bug_tracker::bugs_exist_p_not_cached.select_bugs_exist_p {
        select 1 
        from  bt_bugs 
        where project_id = :package_id 
        limit 1
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/bug-tracker/tcl/bug-tracker-procs-postgresql.xql}
dbqd.bug-tracker.tcl.bug-tracker-procs.bug_tracker::get_user_prefs_internal.user_info {dbqd.bug-tracker.tcl.bug-tracker-procs.bug_tracker::get_user_prefs_internal.user_info {
      
        select u.first_names as user_first_names, 
               u.last_name as user_last_name,
               u.email as user_email,
               ver.version_id as user_version_id,
               coalesce(ver.version_name, 'None') as user_version_name
        from   cc_users u,
               bt_user_prefs up
               left outer join bt_versions ver
               on (ver.version_id = up.user_version)
        where  u.user_id = :user_id
        and    up.user_id = u.user_id
        and    up.project_id = :package_id
    
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/bug-tracker/tcl/bug-tracker-procs-postgresql.xql}
dbqd.bug-tracker.tcl.bug-tracker-procs.bug_tracker::delete_all_project_keywords.keywords_delete {dbqd.bug-tracker.tcl.bug-tracker-procs.bug_tracker::delete_all_project_keywords.keywords_delete {
        select bt_project__keywords_delete(:package_id, 'f')
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/bug-tracker/tcl/bug-tracker-procs-postgresql.xql}
dbqd.bug-tracker.tcl.bug-tracker-procs.bug_tracker::parse_filters.assignee_name {dbqd.bug-tracker.tcl.bug-tracker-procs.bug_tracker::parse_filters.assignee_name {
       select acs_object__name(party_id) from parties where party_id = :filter_assignee 
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/bug-tracker/tcl/bug-tracker-procs-postgresql.xql}
dbqd.bug-tracker.tcl.bug-tracker-procs.bug_tracker::parse_filters.n_days_filter {dbqd.bug-tracker.tcl.bug-tracker-procs.bug_tracker::parse_filters.n_days_filter {
        age(b.creation_date) < interval '$filter_n_days days'
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/bug-tracker/tcl/bug-tracker-procs-postgresql.xql}
dbqd.bug-tracker.tcl.bug-tracker-procs.bug_tracker::parse_filters.keyword_filter {dbqd.bug-tracker.tcl.bug-tracker-procs.bug_tracker::parse_filters.keyword_filter {
        content_keyword__is_assigned(b.bug_id, $keyword_id, 'none')
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/bug-tracker/tcl/bug-tracker-procs-postgresql.xql}
dbqd.bug-tracker.tcl.bug-tracker-procs.bug_tracker::parse_filters.orderby_filter_from_bug {dbqd.bug-tracker.tcl.bug-tracker-procs.bug_tracker::parse_filters.orderby_filter_from_bug {
         left outer join cr_item_keyword_map km_order on (km_order.item_id = b.bug_id) 
         join cr_keywords kw_order on (km_order.keyword_id = kw_order.keyword_id and kw_order.parent_id = :filter_orderby)
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/bug-tracker/tcl/bug-tracker-procs-postgresql.xql}
dbqd.bug-tracker.tcl.bug-tracker-procs.bug_tracker::parse_filters.orderby_filter_where {dbqd.bug-tracker.tcl.bug-tracker-procs.bug_tracker::parse_filters.orderby_filter_where {
          1=1
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/bug-tracker/tcl/bug-tracker-procs-postgresql.xql}
dbqd.bug-tracker.tcl.bug-tracker-procs.bug_tracker::project_delete.delete_project {dbqd.bug-tracker.tcl.bug-tracker-procs.bug_tracker::project_delete.delete_project {
        select bt_project__delete(:project_id);
    } {} {} {postgresql 7.1} c:/web/openacs-4/packages/bug-tracker/tcl/bug-tracker-procs-postgresql.xql}
dbqd.bug-tracker.tcl.bug-tracker-procs.bug_tracker::project_new.create_project {dbqd.bug-tracker.tcl.bug-tracker-procs.bug_tracker::project_new.create_project {
        select bt_project__new(:project_id);
    } {} {} {postgresql 7.1} c:/web/openacs-4/packages/bug-tracker/tcl/bug-tracker-procs-postgresql.xql}
dbqd.bug-tracker.tcl.bug-tracker-procs.bug_tracker::get_bug_id.bug_id {dbqd.bug-tracker.tcl.bug-tracker-procs.bug_tracker::get_bug_id.bug_id {
       select bug_id from bt_bugs
       where  bug_number = :bug_number
       and    project_id = :project_id 
      } {} {} {} c:/web/openacs-4/packages/bug-tracker/tcl/bug-tracker-procs.xql}
dbqd.bug-tracker.tcl.bug-tracker-procs.bug_tracker::set_project_name.project_name_update {dbqd.bug-tracker.tcl.bug-tracker-procs.bug_tracker::set_project_name.project_name_update {
      
        update apm_packages
        set    instance_name = :project_name
        where  package_id = :package_id
    
      } {} {} {} c:/web/openacs-4/packages/bug-tracker/tcl/bug-tracker-procs.xql}
dbqd.bug-tracker.tcl.bug-tracker-procs.bug_tracker::get_user_prefs_internal.count_user_prefs {dbqd.bug-tracker.tcl.bug-tracker-procs.bug_tracker::get_user_prefs_internal.count_user_prefs {
       select count(*) from bt_user_prefs where project_id = :package_id and user_id = :user_id 
      } {} {} {} c:/web/openacs-4/packages/bug-tracker/tcl/bug-tracker-procs.xql}
dbqd.bug-tracker.tcl.bug-tracker-procs.bug_tracker::get_user_prefs_internal.create_user_prefs {dbqd.bug-tracker.tcl.bug-tracker-procs.bug_tracker::get_user_prefs_internal.create_user_prefs {
      
                insert into bt_user_prefs (user_id, project_id) values (:user_id, :package_id)
            
      } {} {} {} c:/web/openacs-4/packages/bug-tracker/tcl/bug-tracker-procs.xql}
dbqd.bug-tracker.tcl.bug-tracker-procs.bug_tracker::version_get_options_not_cached.versions {dbqd.bug-tracker.tcl.bug-tracker-procs.bug_tracker::version_get_options_not_cached.versions {
       select version_name, version_id from bt_versions where project_id = :package_id order by version_name 
      } {} {} {} c:/web/openacs-4/packages/bug-tracker/tcl/bug-tracker-procs.xql}
dbqd.bug-tracker.tcl.bug-tracker-procs.bug_tracker::components_get_options_not_cached.components {dbqd.bug-tracker.tcl.bug-tracker-procs.bug_tracker::components_get_options_not_cached.components {
       select component_name, component_id from bt_components where project_id = :package_id order by component_name 
      } {} {} {} c:/web/openacs-4/packages/bug-tracker/tcl/bug-tracker-procs.xql}
dbqd.bug-tracker.tcl.bug-tracker-procs.bug_tracker::components_get_url_names_not_cached.select_component_url_names {dbqd.bug-tracker.tcl.bug-tracker-procs.bug_tracker::components_get_url_names_not_cached.select_component_url_names {
       select component_id, url_name from bt_components where project_id = :package_id
      } {} {} {} c:/web/openacs-4/packages/bug-tracker/tcl/bug-tracker-procs.xql}
dbqd.bug-tracker.tcl.bug-tracker-procs.bug_tracker::map_patch_to_bug.map_patch_to_bug {dbqd.bug-tracker.tcl.bug-tracker-procs.bug_tracker::map_patch_to_bug.map_patch_to_bug {
      
        insert into bt_patch_bug_map (patch_id, bug_id) values (:patch_id, :bug_id)
    
      } {} {} {} c:/web/openacs-4/packages/bug-tracker/tcl/bug-tracker-procs.xql}
dbqd.bug-tracker.tcl.bug-tracker-procs.bug_tracker::unmap_patch_from_bug.unmap_patch_from_bug {dbqd.bug-tracker.tcl.bug-tracker-procs.bug_tracker::unmap_patch_from_bug.unmap_patch_from_bug {
      
        delete from bt_patch_bug_map
          where bug_id = (select bug_id from bt_bugs 
                          where bug_number = :bug_number
                            and project_id = :package_id)
            and patch_id = (select patch_id from bt_patches
                            where patch_number = :patch_number
                            and project_id = :package_id)
    
      } {} {} {} c:/web/openacs-4/packages/bug-tracker/tcl/bug-tracker-procs.xql}
dbqd.bug-tracker.tcl.bug-tracker-procs.bug_tracker::get_mapped_bugs.get_bugs_for_patch {dbqd.bug-tracker.tcl.bug-tracker-procs.bug_tracker::get_mapped_bugs.get_bugs_for_patch {
      select b.bug_number,
             b.summary
      from   bt_bugs b, bt_patch_bug_map bpbm
      where  b.bug_id = bpbm.bug_id
      and    bpbm.patch_id = (select patch_id
                              from bt_patches
                              where patch_number = :patch_number
                              and project_id = :package_id
                              )
             $open_clause
      } {} {} {} c:/web/openacs-4/packages/bug-tracker/tcl/bug-tracker-procs.xql}
dbqd.bug-tracker.tcl.bug-tracker-procs.bug_tracker::get_patch_links.get_patches_for_bug {dbqd.bug-tracker.tcl.bug-tracker-procs.bug_tracker::get_patch_links.get_patches_for_bug {
      select bt_patches.patch_number,
             bt_patches.summary,
             bt_patches.status
        from bt_patch_bug_map, bt_patches
       where bt_patch_bug_map.bug_id = :bug_id
         and bt_patch_bug_map.patch_id = bt_patches.patch_id
             $status_where_clause
    
      } {} {} {} c:/web/openacs-4/packages/bug-tracker/tcl/bug-tracker-procs.xql}
dbqd.bug-tracker.tcl.bug-tracker-procs.bug_tracker::get_patch_submitter.patch_submitter_id {dbqd.bug-tracker.tcl.bug-tracker-procs.bug_tracker::get_patch_submitter.patch_submitter_id {
      select acs_objects.creation_user
        from bt_patches, acs_objects
       where bt_patches.patch_number = :patch_number
         and bt_patches.project_id = :package_id
         and bt_patches.patch_id = acs_objects.object_id
      } {} {} {} c:/web/openacs-4/packages/bug-tracker/tcl/bug-tracker-procs.xql}
dbqd.bug-tracker.tcl.bug-tracker-procs.bug_tracker::update_patch_status.update_patch_status {dbqd.bug-tracker.tcl.bug-tracker-procs.bug_tracker::update_patch_status.update_patch_status {
      update bt_patches 
         set status = :new_status
       where bt_patches.project_id = :package_id
         and bt_patches.patch_number = :patch_number
      } {} {} {} c:/web/openacs-4/packages/bug-tracker/tcl/bug-tracker-procs.xql}
dbqd.bug-tracker.tcl.bug-tracker-procs.bug_tracker::get_keywords_not_cached.select_package_keywords {dbqd.bug-tracker.tcl.bug-tracker-procs.bug_tracker::get_keywords_not_cached.select_package_keywords {
        
        select child.keyword_id as child_id,
               child.heading as child_heading,
               parent.keyword_id as parent_id,
               parent.heading as parent_heading
        from   bt_projects p,
               cr_keywords parent,
               cr_keywords child
        where  p.project_id = :package_id
        and    parent.parent_id = p.root_keyword_id
        and    child.parent_id = parent.keyword_id
        order  by parent.heading, child.heading
    } {} {} {} c:/web/openacs-4/packages/bug-tracker/tcl/bug-tracker-procs.xql}
dbqd.bug-tracker.tcl.bug-tracker-procs.bug_tracker::project_delete.unset_project_revisions {dbqd.bug-tracker.tcl.bug-tracker-procs.bug_tracker::project_delete.unset_project_revisions {
        update cr_items
        set live_revision = null, latest_revision = null
        where parent_id = :folder_id
    } {} {} {} c:/web/openacs-4/packages/bug-tracker/tcl/bug-tracker-procs.xql}
dbqd.bug-tracker.tcl.bug-tracker-procs.bug_tracker::project_delete.min_bug_id {dbqd.bug-tracker.tcl.bug-tracker-procs.bug_tracker::project_delete.min_bug_id {
        select min(bug_id)
        from   bt_bugs
        where  project_id = :project_id
    } {} {} {} c:/web/openacs-4/packages/bug-tracker/tcl/bug-tracker-procs.xql}
dbqd.bug-tracker.tcl.install-procs-oracle.bug_tracker::install::package_instantiate.create_project {dbqd.bug-tracker.tcl.install-procs-oracle.bug_tracker::install::package_instantiate.create_project {
        begin
            bt_project.new(:package_id);
        end;
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/bug-tracker/tcl/install-procs-oracle.xql}
dbqd.bug-tracker.tcl.install-procs.bug_tracker::install::package_instantiate.create_project {dbqd.bug-tracker.tcl.install-procs.bug_tracker::install::package_instantiate.create_project {

        select bt_project__new(:package_id);
    
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/bug-tracker/tcl/install-procs-postgresql.xql}
dbqd.bug-tracker.tcl.install-procs.bug_tracker::install::package_upgrade.select_project_ids {dbqd.bug-tracker.tcl.install-procs.bug_tracker::install::package_upgrade.select_project_ids {
        select project_id
        from bt_projects
    } {} {} {} c:/web/openacs-4/packages/bug-tracker/tcl/install-procs.xql}
dbqd.bug-tracker.www.admin.categories-oracle.select_categories {dbqd.bug-tracker.www.admin.categories-oracle.select_categories {
        select child.keyword_id as child_id,
               child.heading as child_heading,
               parent.keyword_id as parent_id,
               parent.heading as parent_heading,
               decode(child.keyword_id, null, 0, 
                  (select count(b.bug_id) 
                   from   bt_bugs b 
                   where  b.project_id = :package_id 
                   and    content_keyword.is_assigned(b.bug_id, child.keyword_id, 'none') = 't'
                  )
               ) as num_bugs,
               (select content_keyword.is_leaf(parent.keyword_id) from dual) as is_leaf,
               (select count(def.keyword_id) 
                from   bt_default_keywords def 
                where  def.project_id = :package_id 
                and    def.parent_id = parent.keyword_id 
                and    def.keyword_id = child.keyword_id
               ) as default_p
        from   cr_keywords parent,
               cr_keywords child
        where  parent.parent_id = :project_root_keyword_id
        and    child.parent_id (+) = parent.keyword_id
        order  by parent.heading, child.heading
  } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/bug-tracker/www/admin/categories-oracle.xql}
dbqd.bug-tracker.www.admin.categories.select_categories {dbqd.bug-tracker.www.admin.categories.select_categories {
        select child.keyword_id as child_id,
               child.heading as child_heading,
               parent.keyword_id as parent_id,
               parent.heading as parent_heading,
               case when child.keyword_id is null then 0 else (select count(*) from bt_bugs where project_id = :package_id and content_keyword__is_assigned(bug_id, child.keyword_id, 'none')) end as num_bugs,
               (select content_keyword__is_leaf(parent.keyword_id)) as is_leaf,
               (select count(*) from bt_default_keywords where project_id = :package_id and parent_id = parent.keyword_id and keyword_id = child.keyword_id) as default_p
        from   cr_keywords parent left outer join
               cr_keywords child on (child.parent_id = parent.keyword_id)
        where  parent.parent_id = :project_root_keyword_id
        order  by parent.heading, child.heading
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/bug-tracker/www/admin/categories-postgresql.xql}
dbqd.bug-tracker.www.admin.category-delete-oracle.delete_keyword {dbqd.bug-tracker.www.admin.category-delete-oracle.delete_keyword {
      begin
          content_keyword.del(:keyword_id);
      end;
  } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/bug-tracker/www/admin/category-delete-oracle.xql}
dbqd.bug-tracker.www.admin.category-delete.delete_keyword {dbqd.bug-tracker.www.admin.category-delete.delete_keyword {
    select content_keyword__delete(:keyword_id)
  } {} {} {postgresql 7.1} c:/web/openacs-4/packages/bug-tracker/www/admin/category-delete-postgresql.xql}
dbqd.bug-tracker.www.admin.component-ae-oracle.user_search {dbqd.bug-tracker.www.admin.component-ae-oracle.user_search {
      select distinct u.first_names || ' ' || u.last_name || ' (' || u.email || ')' as name, u.user_id
      from   cc_users u
      where  upper(nvl(u.first_names || ' ', '')  ||
             nvl(u.last_name || ' ', '') ||
             u.email || ' ' ||
             nvl(u.screen_name, '')) like upper('%'||:value||'%')
      order  by name
  } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/bug-tracker/www/admin/component-ae-oracle.xql}
dbqd.bug-tracker.www.admin.component-ae.user_search {dbqd.bug-tracker.www.admin.component-ae.user_search {
      select distinct u.first_names || ' ' || u.last_name || ' (' || u.email || ')' as name, u.user_id
      from   cc_users u
      where  upper(coalesce(u.first_names || ' ', '')  ||
             coalesce(u.last_name || ' ', '') ||
             u.email || ' ' ||
             coalesce(u.screen_name, '')) like upper('%'||:value||'%')
      order  by name
  } {} {} {postgresql 7.1} c:/web/openacs-4/packages/bug-tracker/www/admin/component-ae-postgresql.xql}
dbqd.bug-tracker.www.admin.component-ae.component_create {dbqd.bug-tracker.www.admin.component-ae.component_create {
      
        insert into bt_components
        (component_id, project_id, component_name, description, url_name, maintainer)
        values
        (:component_id, :package_id, :name, :description, :url_name, :maintainer)
    
      } {} {} {} c:/web/openacs-4/packages/bug-tracker/www/admin/component-ae.xql}
dbqd.bug-tracker.www.admin.component-ae.component_update {dbqd.bug-tracker.www.admin.component-ae.component_update {
      
        update bt_components
        set    component_name = :name,
               description = :description,
               maintainer = :maintainer,
               url_name = :url_name
        where  component_id = :component_id
    
      } {} {} {} c:/web/openacs-4/packages/bug-tracker/www/admin/component-ae.xql}
dbqd.bug-tracker.www.admin.component-delete.delete_component {dbqd.bug-tracker.www.admin.component-delete.delete_component {
      
    delete from bt_components where component_id = :component_id

      } {} {} {} c:/web/openacs-4/packages/bug-tracker/www/admin/component-delete.xql}
dbqd.bug-tracker.www.admin.index-oracle.project_info {dbqd.bug-tracker.www.admin.index-oracle.project_info {
       
    select p.maintainer,
           u.first_names as maintainer_first_names,
           u.last_name as maintainer_last_name,
           u.email as maintainer_email
    from   bt_projects p,
           cc_users u
    where  p.project_id = :package_id
    and    p.maintainer = u.user_id (+)

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/bug-tracker/www/admin/index-oracle.xql}
dbqd.bug-tracker.www.admin.index-oracle.versions {dbqd.bug-tracker.www.admin.index-oracle.versions {
      
    select v.version_id,
           v.version_name,
           v.description,
           v.anticipated_freeze_date,
           v.actual_freeze_date,
           v.anticipated_release_date,
           v.actual_release_date,
           v.maintainer,
           u.first_names as maintainer_first_names,
           u.last_name as maintainer_last_name,
           u.email as maintainer_email,
           v.supported_platforms,
           v.active_version_p,
           v.assignable_p
    from   bt_versions v,
           cc_users u
    where  v.project_id = :package_id
    and    v.maintainer = u.user_id (+)

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/bug-tracker/www/admin/index-oracle.xql}
dbqd.bug-tracker.www.admin.index-oracle.components {dbqd.bug-tracker.www.admin.index-oracle.components {
    select c.component_id,
           c.component_name,
           c.description,
           c.maintainer,
           u.first_names as maintainer_first_names,
           u.last_name as maintainer_last_name,
           u.email as maintainer_email,
           (select count(*) from bt_bugs where component_id = c.component_id) as num_bugs
    from   bt_components c,
           cc_users u
    where  c.project_id = :package_id
    and    c.maintainer = u.user_id (+)
    order  by upper(component_name)
  } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/bug-tracker/www/admin/index-oracle.xql}
dbqd.bug-tracker.www.admin.index.project_info {dbqd.bug-tracker.www.admin.index.project_info {
       
    select p.maintainer,
           u.first_names as maintainer_first_names,
           u.last_name as maintainer_last_name,
           u.email as maintainer_email
    from   bt_projects p left outer join 
           cc_users u on (u.user_id = p.maintainer)
    where  p.project_id = :package_id

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/bug-tracker/www/admin/index-postgresql.xql}
dbqd.bug-tracker.www.admin.index.versions {dbqd.bug-tracker.www.admin.index.versions {
      
    select v.version_id,
           v.version_name,
           v.description,
           v.anticipated_freeze_date,
           v.actual_freeze_date,
           v.anticipated_release_date,
           v.actual_release_date,
           v.maintainer,
           u.first_names as maintainer_first_names,
           u.last_name as maintainer_last_name,
           u.email as maintainer_email,
           v.supported_platforms,
           v.active_version_p,
           v.assignable_p
    from   bt_versions v left outer join 
           cc_users u on (u.user_id = v.maintainer)
    where  v.project_id = :package_id

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/bug-tracker/www/admin/index-postgresql.xql}
dbqd.bug-tracker.www.admin.index.components {dbqd.bug-tracker.www.admin.index.components {
    select c.component_id,
           c.component_name,
           c.description,
           c.maintainer,
           u.first_names as maintainer_first_names,
           u.last_name as maintainer_last_name,
           u.email as maintainer_email,
           (select count(*) from bt_bugs where component_id = c.component_id) as num_bugs
    from   bt_components c left outer join 
           cc_users u on (u.user_id = c.maintainer)
    where  c.project_id = :package_id
    order  by upper(component_name)
  } {} {} {postgresql 7.1} c:/web/openacs-4/packages/bug-tracker/www/admin/index-postgresql.xql}
dbqd.bug-tracker.www.admin.project-edit-oracle.project_search {dbqd.bug-tracker.www.admin.project-edit-oracle.project_search {
        select distinct u.first_names || ' ' || u.last_name || ' (' || u.email || ')' as name, u.user_id
        from   cc_users u
        where  upper(nvl(u.first_names || ' ', '') 
               || nvl(u.last_name || ' ', '')
               || u.email || ' ' ||
               nvl(u.screen_name, '')) like upper('%'||:value||'%')
        order  by name
  } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/bug-tracker/www/admin/project-edit-oracle.xql}
dbqd.bug-tracker.www.admin.project-edit.project_search {dbqd.bug-tracker.www.admin.project-edit.project_search {
        select distinct u.first_names || ' ' || u.last_name || ' (' || u.email || ')' as name, u.user_id
        from   cc_users u
        where  upper(coalesce(u.first_names || ' ', '')  ||
               coalesce(u.last_name || ' ', '') ||
               u.email || ' ' ||
               coalesce(u.screen_name, '')) like upper('%'||:value||'%')
        order  by name
  } {} {} {postgresql 7.1} c:/web/openacs-4/packages/bug-tracker/www/admin/project-edit-postgresql.xql}
dbqd.bug-tracker.www.admin.project-edit.project_info_update {dbqd.bug-tracker.www.admin.project-edit.project_info_update {
      
            update bt_projects
            set    description = :description,
                   email_subject_name = :email_subject_name,
                   maintainer = :maintainer
            where  project_id = :package_id
        
      } {} {} {} c:/web/openacs-4/packages/bug-tracker/www/admin/project-edit.xql}
dbqd.bug-tracker.www.admin.project-edit.project_select {dbqd.bug-tracker.www.admin.project-edit.project_select {
        select pa.instance_name as name,
               pr.description, 
               pr.email_subject_name,
               pr.maintainer
        from   bt_projects pr,
               apm_packages pa
        where  pr.project_id = :package_id
        and    pa.package_id = pr.project_id
  } {} {} {} c:/web/openacs-4/packages/bug-tracker/www/admin/project-edit.xql}
dbqd.bug-tracker.www.admin.project-maintainer-edit.project_maintainer_update {dbqd.bug-tracker.www.admin.project-maintainer-edit.project_maintainer_update {
      
        update bt_projects
        set    maintainer = :maintainer
        where  project_id = :package_id
    
      } {} {} {} c:/web/openacs-4/packages/bug-tracker/www/admin/project-maintainer-edit.xql}
dbqd.bug-tracker.www.admin.version-ae-oracle.user_search {dbqd.bug-tracker.www.admin.version-ae-oracle.user_search {
      select distinct u.first_names || ' ' || u.last_name || ' (' || u.email || ')' as name, u.user_id
      from   cc_users u
      where  upper(nvl(u.first_names || ' ', '')  ||
             nvl(u.last_name || ' ', '') ||
             u.email || ' ' ||
             nvl(u.screen_name, '')) like upper('%'||:value||'%')
      order  by name
  } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/bug-tracker/www/admin/version-ae-oracle.xql}
dbqd.bug-tracker.www.admin.version-ae.user_search {dbqd.bug-tracker.www.admin.version-ae.user_search {
      select distinct u.first_names || ' ' || u.last_name || ' (' || u.email || ')' as name, u.user_id
      from   cc_users u
      where  upper(coalesce(u.first_names || ' ', '')  ||
             coalesce(u.last_name || ' ', '') ||
             u.email || ' ' ||
             coalesce(u.screen_name, '')) like upper('%'||:value||'%')
      order  by name
  } {} {} {postgresql 7.1} c:/web/openacs-4/packages/bug-tracker/www/admin/version-ae-postgresql.xql}
dbqd.bug-tracker.www.admin.version-ae.check_exists {dbqd.bug-tracker.www.admin.version-ae.check_exists {
       select 1 from bt_versions where version_id = :version_id 
      } {} {} {} c:/web/openacs-4/packages/bug-tracker/www/admin/version-ae.xql}
dbqd.bug-tracker.www.admin.version-ae.insert_row {dbqd.bug-tracker.www.admin.version-ae.insert_row {
      
            insert into bt_versions (
                version_id, 
                project_id,
                version_name, 
                description, 
                anticipated_freeze_date, 
                anticipated_release_date, 
                actual_freeze_date, 
                actual_release_date, 
                maintainer, 
                supported_platforms, 
                assignable_p
            ) values (
                :version_id, 
                :package_id, 
                :version_name, 
                :description , 
                $anticipated_freeze_date, 
                $anticipated_release_date, 
                $actual_freeze_date, 
                $actual_release_date, 
                :maintainer, 
                :supported_platforms, 
                :assignable_p
            )
        
      } {} {} {} c:/web/openacs-4/packages/bug-tracker/www/admin/version-ae.xql}
dbqd.bug-tracker.www.admin.version-ae.update_row {dbqd.bug-tracker.www.admin.version-ae.update_row {
      
        update bt_versions
        set    version_id = :version_id, 
               project_id = :package_id, 
               version_name = :version_name, 
               description = :description, 
               anticipated_freeze_date = $anticipated_freeze_date,
               anticipated_release_date = $anticipated_release_date, 
               actual_freeze_date = $actual_freeze_date, 
               actual_release_date = $actual_release_date, 
               maintainer = :maintainer, 
               supported_platforms = :supported_platforms, 
               assignable_p = :assignable_p
        where  version_id = :version_id
    
      } {} {} {} c:/web/openacs-4/packages/bug-tracker/www/admin/version-ae.xql}
dbqd.bug-tracker.www.admin.version-ae.version_select {dbqd.bug-tracker.www.admin.version-ae.version_select {
    select version_id, 
           version_name, 
           description, 
           to_char(anticipated_freeze_date, 'YYYY MM DD HH24 MI') as anticipated_freeze_date, 
           to_char(anticipated_release_date, 'YYYY MM DD HH24 MI') as anticipated_release_date, 
           to_char(actual_freeze_date, 'YYYY MM DD HH24 MI') as actual_freeze_date, 
           to_char(actual_release_date, 'YYYY MM DD HH24 MI') as actual_release_date, 
           maintainer, 
           supported_platforms, 
           assignable_p
    from   bt_versions
    where  version_id = :version_id
  } {} {} {} c:/web/openacs-4/packages/bug-tracker/www/admin/version-ae.xql}
dbqd.bug-tracker.www.admin.version-delete.delete_version {dbqd.bug-tracker.www.admin.version-delete.delete_version {
      
    delete from bt_versions where version_id = :version_id

      } {} {} {} c:/web/openacs-4/packages/bug-tracker/www/admin/version-delete.xql}
dbqd.bug-tracker.www.admin.version-release-oracle.version_select {dbqd.bug-tracker.www.admin.version-release-oracle.version_select {
    
    select version_name,
           to_char(anticipated_release_date, 'YYYY MM DD HH24 MI') as anticipated_release_date, 
           to_char(nvl(actual_release_date, sysdate), 'YYYY MM DD HH24 MI')  as actual_release_date
    from   bt_versions
    where  version_id = :version_id

  } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/bug-tracker/www/admin/version-release-oracle.xql}
dbqd.bug-tracker.www.admin.version-release.version_select {dbqd.bug-tracker.www.admin.version-release.version_select {
    
    select version_name,
           to_char(anticipated_release_date, 'YYYY MM DD HH24 MI') as anticipated_release_date, 
           to_char(coalesce(actual_release_date, now()), 'YYYY MM DD HH24 MI')  as actual_release_date
    from   bt_versions
    where  version_id = :version_id

  } {} {} {postgresql 7.1} c:/web/openacs-4/packages/bug-tracker/www/admin/version-release-postgresql.xql}
dbqd.bug-tracker.www.admin.version-release.update_version {dbqd.bug-tracker.www.admin.version-release.update_version {
      
        update bt_versions
        set    actual_release_date = $actual_release_date
        where  version_id = :version_id
    
      } {} {} {} c:/web/openacs-4/packages/bug-tracker/www/admin/version-release.xql}
dbqd.bug-tracker.www.admin.version-set-active-oracle.set_active_version {dbqd.bug-tracker.www.admin.version-set-active-oracle.set_active_version {
      begin
        bt_version.set_active(:version_id);
      end;

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/bug-tracker/www/admin/version-set-active-oracle.xql}
dbqd.bug-tracker.www.admin.version-set-active.set_active_version {dbqd.bug-tracker.www.admin.version-set-active.set_active_version {

    select bt_version__set_active(:version_id);

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/bug-tracker/www/admin/version-set-active-postgresql.xql}
dbqd.bug-tracker.www.admin.versions-oracle.current_version {dbqd.bug-tracker.www.admin.versions-oracle.current_version {
    select v.version_id,
           v.version_name,
           v.description,
           v.anticipated_freeze_date,
           v.actual_freeze_date,
           v.anticipated_release_date,
           v.maintainer,
           u.first_names as maintainer_first_names,
           u.last_name as maintainer_last_name,
           u.email as maintainer_email,
           v.supported_platforms,
           v.active_version_p,
           v.assignable_p,
           decode( v.assignable_p, 't', 'Yes', 'No' ) as assignable_p_pretty,
           (select count(*) 
            from   bt_bugs b 
            where  b.found_in_version = v.version_id 
               or  b.fix_for_version = v.version_id
               or  b.fixed_in_version = v.version_id) as num_bugs
    from   bt_versions v,
           cc_users u
    where  v.project_id = :package_id
    and    v.active_version_p = 't'
    and    v.actual_release_date is null
    and    v.maintainer = u.user_id (+)
  } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/bug-tracker/www/admin/versions-oracle.xql}
dbqd.bug-tracker.www.admin.versions-oracle.future_versions {dbqd.bug-tracker.www.admin.versions-oracle.future_versions {
    
    select v.version_id,
           v.version_name,
           v.description,
           v.anticipated_freeze_date,
           v.actual_freeze_date,
           v.anticipated_release_date,
           v.maintainer,
           u.first_names as maintainer_first_names,
           u.last_name as maintainer_last_name,
           u.email as maintainer_email,
           v.supported_platforms,
           v.active_version_p,
           v.assignable_p,
           decode( v.assignable_p, 't', 'Yes', 'No' ) as assignable_p_pretty,
           (select count(*) 
            from   bt_bugs b 
            where  b.found_in_version = v.version_id 
               or  b.fix_for_version = v.version_id
               or  b.fixed_in_version = v.version_id) as num_bugs
    from   bt_versions v,
           cc_users u
    where  v.project_id = :package_id
    and    v.actual_release_date is null
    and    v.active_version_p = 'f'
    and    v.maintainer = u.user_id (+)
    order by v.anticipated_release_date, version_name

  } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/bug-tracker/www/admin/versions-oracle.xql}
dbqd.bug-tracker.www.admin.versions-oracle.past_versions {dbqd.bug-tracker.www.admin.versions-oracle.past_versions {

    select v.version_id,
           v.version_name,
           v.description,
           v.anticipated_freeze_date,
           v.actual_freeze_date,
           v.anticipated_release_date,
           v.actual_release_date,
           v.maintainer,
           u.first_names as maintainer_first_names,
           u.last_name as maintainer_last_name,
           u.email as maintainer_email,
           v.supported_platforms,
           v.active_version_p,
           v.assignable_p,
           decode( v.assignable_p, 't', 'Yes', 'No' ) as assignable_p_pretty,
           (select count(*) 
            from   bt_bugs b 
            where  b.found_in_version = v.version_id 
               or  b.fix_for_version = v.version_id
               or  b.fixed_in_version = v.version_id) as num_bugs
    from   bt_versions v,
           cc_users u
    where  v.project_id = :package_id
    and    v.actual_release_date is not null
    and    v.maintainer = u.user_id (+)
    order by v.actual_release_date, version_name
  } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/bug-tracker/www/admin/versions-oracle.xql}
dbqd.bug-tracker.www.admin.versions.current_version {dbqd.bug-tracker.www.admin.versions.current_version {
    select v.version_id,
           v.version_name,
           v.description,
           v.anticipated_freeze_date,
           v.actual_freeze_date,
           v.anticipated_release_date,
           v.maintainer,
           u.first_names as maintainer_first_names,
           u.last_name as maintainer_last_name,
           u.email as maintainer_email,
           v.supported_platforms,
           v.active_version_p,
           v.assignable_p,
           case when v.assignable_p = 't' then 'Yes' else 'No' end as assignable_p_pretty,
           (select count(*) 
            from   bt_bugs b 
            where  b.found_in_version = v.version_id 
               or  b.fix_for_version = v.version_id
               or  b.fixed_in_version = v.version_id) as num_bugs
    from   bt_versions v left outer join 
           cc_users u on (u.user_id = v.maintainer)
    where  v.project_id = :package_id
    and    v.active_version_p = 't'
    and    v.actual_release_date is null
  } {} {} {postgresql 7.1} c:/web/openacs-4/packages/bug-tracker/www/admin/versions-postgresql.xql}
dbqd.bug-tracker.www.admin.versions.future_versions {dbqd.bug-tracker.www.admin.versions.future_versions {
    
    select v.version_id,
           v.version_name,
           v.description,
           v.anticipated_freeze_date,
           v.actual_freeze_date,
           v.anticipated_release_date,
           v.maintainer,
           u.first_names as maintainer_first_names,
           u.last_name as maintainer_last_name,
           u.email as maintainer_email,
           v.supported_platforms,
           v.active_version_p,
           v.assignable_p,
           case when v.assignable_p = 't' then 'Yes' else 'No' end as assignable_p_pretty,
           (select count(*) 
            from   bt_bugs b 
            where  b.found_in_version = v.version_id 
               or  b.fix_for_version = v.version_id
               or  b.fixed_in_version = v.version_id) as num_bugs
    from   bt_versions v left outer join 
           cc_users u on (u.user_id = v.maintainer)
    where  v.project_id = :package_id
    and    v.actual_release_date is null
    and    v.active_version_p = 'f'
    order by v.anticipated_release_date, version_name

  } {} {} {postgresql 7.1} c:/web/openacs-4/packages/bug-tracker/www/admin/versions-postgresql.xql}
dbqd.bug-tracker.www.admin.versions.past_versions {dbqd.bug-tracker.www.admin.versions.past_versions {

    select v.version_id,
           v.version_name,
           v.description,
           v.anticipated_freeze_date,
           v.actual_freeze_date,
           v.anticipated_release_date,
           v.actual_release_date,
           v.maintainer,
           u.first_names as maintainer_first_names,
           u.last_name as maintainer_last_name,
           u.email as maintainer_email,
           v.supported_platforms,
           v.active_version_p,
           v.assignable_p,
           case when v.assignable_p = 't' then 'Yes' else 'No' end as assignable_p_pretty,
           (select count(*) 
            from   bt_bugs b 
            where  b.found_in_version = v.version_id 
               or  b.fix_for_version = v.version_id
               or  b.fixed_in_version = v.version_id) as num_bugs
    from   bt_versions v left outer join 
           cc_users u on (u.user_id = v.maintainer)
    where  v.project_id = :package_id
    and    v.actual_release_date is not null
    order by v.actual_release_date, version_name
  } {} {} {postgresql 7.1} c:/web/openacs-4/packages/bug-tracker/www/admin/versions-postgresql.xql}
dbqd.bug-tracker.www.bug.permission_info {dbqd.bug-tracker.www.bug.permission_info {
            select b.bug_id
            from   bt_bugs b
            where  b.bug_number = :bug_number
            and    b.project_id = :package_id
        } {} {} {} c:/web/openacs-4/packages/bug-tracker/www/bug.xql}
dbqd.bug-tracker.www.bug.select_resolve_role {dbqd.bug-tracker.www.bug.select_resolve_role {
            select a.assigned_role
            from   workflow_actions a,
                   workflow_fsm_action_en_in_st aeis
            where  a.action_id = aeis.action_id
            and    aeis.state_id = :initial_state
            and    a.workflow_id = :workflow_id
            and    a.assigned_role is not null
        } {} {} {} c:/web/openacs-4/packages/bug-tracker/www/bug.xql}
dbqd.bug-tracker.www.bug.filter_bug_numbers {dbqd.bug-tracker.www.bug.filter_bug_numbers {
            select b.bug_number
            from   $from_bug_clause,
                   workflow_cases cas left outer join
                   (select rpm.case_id,
                           p.party_id,
                           p.email,
                           acs_object__name(p.party_id) as name
                      from workflow_case_role_party_map rpm,
                           parties p
                     where rpm.role_id = :action_role
                       and p.party_id = rpm.party_id
                     ) assignee on (cas.case_id = assignee.case_id),
                   workflow_case_fsm cfsm,
                   workflow_fsm_states st 
            where  cas.workflow_id = :workflow_id
            and    cas.object_id = b.bug_id
            and    cfsm.case_id = cas.case_id
            and    st.state_id = cfsm.current_state
            and    [join $where_clauses " and "]
            order  by $order_by_clause
        } {} {} {} c:/web/openacs-4/packages/bug-tracker/www/bug.xql}
dbqd.bug-tracker.www.map-patch-to-bugs-oracle.select_open_bugs {dbqd.bug-tracker.www.map-patch-to-bugs-oracle.select_open_bugs {
          select r.* 
          from (
              select rownum as r_rownum, q.*
              from (
                  select bt_bugs.bug_number,
                         bt_bugs.summary,
                         to_char(acs_objects.creation_date, 'fmMM/DDfm/YYYY') as creation_date_pretty                
                  from   bt_bugs, acs_objects, workflow_cases cas, workflow_case_fsm cfsm
                  where  bt_bugs.bug_id = acs_objects.object_id
                  and    $sql_where_clause
                  order  by acs_objects.creation_date desc
              ) q
          ) r
          where r_rownum > $offset
          and   r_rownum <= $offset + $interval_size
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/bug-tracker/www/map-patch-to-bugs-oracle.xql}
dbqd.bug-tracker.www.map-patch-to-bugs.select_open_bugs {dbqd.bug-tracker.www.map-patch-to-bugs.select_open_bugs {
select bt_bugs.bug_number,
                bt_bugs.summary,
                to_char(acs_objects.creation_date, 'fmMM/DDfm/YYYY') as creation_date_pretty                
                from bt_bugs, acs_objects, workflow_cases cas, workflow_case_fsm cfsm
                where bt_bugs.bug_id = acs_objects.object_id
                 and  $sql_where_clause
               order by acs_objects.creation_date desc
               limit $interval_size offset $offset
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/bug-tracker/www/map-patch-to-bugs-postgresql.xql}
dbqd.bug-tracker.www.map-patch-to-bugs.get_bug_id_for_number {dbqd.bug-tracker.www.map-patch-to-bugs.get_bug_id_for_number {
select bug_id from bt_bugs where bug_number = :one_bug_number and project_id = :package_id
      } {} {} {} c:/web/openacs-4/packages/bug-tracker/www/map-patch-to-bugs.xql}
dbqd.bug-tracker.www.map-patch-to-bugs.get_patch_id_for_number {dbqd.bug-tracker.www.map-patch-to-bugs.get_patch_id_for_number {
select patch_id from bt_patches where patch_number = :patch_number and project_id = :package_id
      } {} {} {} c:/web/openacs-4/packages/bug-tracker/www/map-patch-to-bugs.xql}
dbqd.bug-tracker.www.map-patch-to-bugs.get_patch_summary {dbqd.bug-tracker.www.map-patch-to-bugs.get_patch_summary {
select summary from bt_patches where patch_number = :patch_number and project_id = :package_id
      } {} {} {} c:/web/openacs-4/packages/bug-tracker/www/map-patch-to-bugs.xql}
dbqd.bug-tracker.www.map-patch-to-bugs.component_id_for_patch {dbqd.bug-tracker.www.map-patch-to-bugs.component_id_for_patch {
select component_id from bt_patches where patch_number = :patch_number and project_id = :package_id
      } {} {} {} c:/web/openacs-4/packages/bug-tracker/www/map-patch-to-bugs.xql}
dbqd.bug-tracker.www.map-patch-to-bugs.bug_count_for_mapping {dbqd.bug-tracker.www.map-patch-to-bugs.bug_count_for_mapping {
select count(*)
         from bt_bugs,
              workflow_cases cas,
              workflow_case_fsm cfsm
         where $sql_where_clause
      } {} {} {} c:/web/openacs-4/packages/bug-tracker/www/map-patch-to-bugs.xql}
dbqd.bug-tracker.www.patch-add-oracle.new_patch {dbqd.bug-tracker.www.patch-add-oracle.new_patch {
      begin
        :1 := bt_patch.new(
                patch_id               => :patch_id,
                project_id             => :package_id,
                component_id           => :component_id,
                summary                => :summary,
                description            => :description,
                description_format     => :description_format,
                content                => :content,
                generated_from_version => :version_id,
                creation_user          => :user_id,
                creation_ip            => :ip_address
            );
        end;
  } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/bug-tracker/www/patch-add-oracle.xql}
dbqd.bug-tracker.www.patch-add.new_patch {dbqd.bug-tracker.www.patch-add.new_patch {
    
            select bt_patch__new(
                :patch_id,
                :package_id,
                :component_id,
                :summary,
                :description,
                :description_format,
                :content,
                :version_id,
                :user_id,
                :ip_address
            )

  } {} {} {postgresql 7.1} c:/web/openacs-4/packages/bug-tracker/www/patch-add-postgresql.xql}
dbqd.bug-tracker.www.patch-add.patch_number_for_id {dbqd.bug-tracker.www.patch-add.patch_number_for_id {
select patch_number 
        from bt_patches 
        where patch_id = :patch_id
      } {} {} {} c:/web/openacs-4/packages/bug-tracker/www/patch-add.xql}
dbqd.bug-tracker.www.patch-list-oracle.select_states {dbqd.bug-tracker.www.patch-list-oracle.select_states {
                select distinct upper(substr(p.status, 1, 1)) || substr(p.status, 2),
                       p.status,
                       (select count(*) 
                        from   bt_patches p2
                        where  p2.project_id = p.project_id 
                        and    p2.status = p.status
                       ) as count,
                       decode(p.status, 'open', 1, 'accepted', 2, 'refused', 3, 4) as order_num
                from   bt_patches p
                where  p.project_id = :package_id
                order  by order_num

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/bug-tracker/www/patch-list-oracle.xql}
dbqd.bug-tracker.www.patch-list-oracle.select_versions {dbqd.bug-tracker.www.patch-list-oracle.select_versions {

                select v.version_name,
                       p.apply_to_version,
                       count(p.patch_id) as num_patches
                from   bt_patches p, 
                       bt_versions v
                where  p.project_id = :package_id
                and    v.version_id (+) = p.apply_to_version
                group  by v.version_name, v.anticipated_freeze_date, p.apply_to_version
                order  by v.anticipated_freeze_date, v.version_name

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/bug-tracker/www/patch-list-oracle.xql}
dbqd.bug-tracker.www.patch-list.select_states {dbqd.bug-tracker.www.patch-list.select_states {
                select distinct upper(substring(p.status from 1 for 1)) || substring(p.status from 2),
                       p.status,
                       (select count(*) 
                        from   bt_patches p2
                        where  p2.project_id = p.project_id 
                        and    p2.status = p.status
                       ) as count,
                       (case p.status when 'open' then 1 when 'accepted' then 2 when 'refused' then 3 else 4 end) as order_num
                from   bt_patches p
                where  p.project_id = :package_id
                order  by order_num

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/bug-tracker/www/patch-list-postgresql.xql}
dbqd.bug-tracker.www.patch-list.select_versions {dbqd.bug-tracker.www.patch-list.select_versions {

                select v.version_name,
                       v.version_id,
                       (select count(*) 
                        from   bt_patches p 
                        where  p.project_id = :package_id 
                        and    p.apply_to_version = v.version_id
                       ) as count
                from   bt_versions v
                where  exists (select 1 from bt_patches p2
                               where p2.apply_to_version = v.version_id)
                order  by v.version_name

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/bug-tracker/www/patch-list-postgresql.xql}
dbqd.bug-tracker.www.patch-list.states_where_clause {dbqd.bug-tracker.www.patch-list.states_where_clause {
                bt_patches.status = :status
      } {} {} {} c:/web/openacs-4/packages/bug-tracker/www/patch-list.xql}
dbqd.bug-tracker.www.patch-list.apply_to_version_where_clause {dbqd.bug-tracker.www.patch-list.apply_to_version_where_clause {
                bt_patches.apply_to_version = :apply_to_version
      } {} {} {} c:/web/openacs-4/packages/bug-tracker/www/patch-list.xql}
dbqd.bug-tracker.www.patch-list.apply_to_version_null_where_clause {dbqd.bug-tracker.www.patch-list.apply_to_version_null_where_clause {
                bt_patches.apply_to_version is null
      } {} {} {} c:/web/openacs-4/packages/bug-tracker/www/patch-list.xql}
dbqd.bug-tracker.www.patch-list.select_components {dbqd.bug-tracker.www.patch-list.select_components {

                select c.component_name,
                       c.component_id,
                       (select count(*) 
                        from   bt_patches p 
                        where  p.project_id = :package_id 
                        and    p.component_id = c.component_id
                       ) as count
                from   bt_components c
                where  exists (select 1 from bt_patches p2
                               where p2.component_id = c.component_id)
                order  by c.component_name

      } {} {} {} c:/web/openacs-4/packages/bug-tracker/www/patch-list.xql}
dbqd.bug-tracker.www.patch-list.component_where_clause {dbqd.bug-tracker.www.patch-list.component_where_clause {
                bt_patches.component_id = :component_id
      } {} {} {} c:/web/openacs-4/packages/bug-tracker/www/patch-list.xql}
dbqd.bug-tracker.www.patch-list.select_patches {dbqd.bug-tracker.www.patch-list.select_patches {
    select bt_patches.patch_number,
           bt_patches.summary,
           bt_patches.status,
           to_char(acs_objects.creation_date, 'fmMM/DDfm/YYYY') as creation_date_pretty,
           bt_components.component_name,
           (select atv.version_name 
            from   bt_versions atv 
            where  atv.version_id = bt_patches.apply_to_version
           ) as apply_to_version_name
    from   bt_patches,
           bt_components,
           acs_objects
    where  bt_patches.patch_id = acs_objects.object_id
    and    bt_patches.project_id = :package_id
    and    bt_components.component_id = bt_patches.component_id
           [list::filter_where_clauses -and -name "patches"]
    order  by acs_objects.creation_date desc
      } {} {} {} c:/web/openacs-4/packages/bug-tracker/www/patch-list.xql}
dbqd.bug-tracker.www.patch-oracle.patch {dbqd.bug-tracker.www.patch-oracle.patch {
     select bt_patches.patch_id,
            bt_patches.patch_number,
            bt_patches.project_id,
            bt_patches.component_id,
            bt_patches.summary,
            bt_patches.content,
            bt_patches.generated_from_version,
            bt_patches.apply_to_version,
            bt_patches.applied_to_version,
            bt_patches.status,
            bt_components.component_name,
            acs_objects.creation_user as submitter_user_id,
            submitter.first_names as submitter_first_names,
            submitter.last_name as submitter_last_name,
            submitter.email as submitter_email,
            acs_objects.creation_date,
            to_char(acs_objects.creation_date, 'fmMM/DDfm/YYYY') as creation_date_pretty,
            to_char(sysdate, 'fmMM/DDfm/YYYY') as now_pretty
     from bt_patches,
          acs_objects,
          cc_users submitter,
          bt_components
     where bt_patches.patch_number = :patch_number
       and bt_patches.project_id = :package_id
       and bt_patches.patch_id = acs_objects.object_id
       and bt_patches.component_id = bt_components.component_id
       and submitter.user_id = acs_objects.creation_user
  } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/bug-tracker/www/patch-oracle.xql}
dbqd.bug-tracker.www.patch.patch {dbqd.bug-tracker.www.patch.patch {
     select bt_patches.patch_id,
            bt_patches.patch_number,
            bt_patches.project_id,
            bt_patches.component_id,
            bt_patches.summary,
            bt_patches.content,
            bt_patches.generated_from_version,
            bt_patches.apply_to_version,
            bt_patches.applied_to_version,
            bt_patches.status,
            bt_components.component_name,
            acs_objects.creation_user as submitter_user_id,
            submitter.first_names as submitter_first_names,
            submitter.last_name as submitter_last_name,
            submitter.email as submitter_email,
            acs_objects.creation_date,
            to_char(acs_objects.creation_date, 'fmMM/DDfm/YYYY') as creation_date_pretty,
            to_char(now(), 'fmMM/DDfm/YYYY') as now_pretty
     from bt_patches,
          acs_objects,
          cc_users submitter,
          bt_components
     where bt_patches.patch_number = :patch_number
       and bt_patches.project_id = :package_id
       and bt_patches.patch_id = acs_objects.object_id
       and bt_patches.component_id = bt_components.component_id
       and submitter.user_id = acs_objects.creation_user
  } {} {} {postgresql 7.1} c:/web/openacs-4/packages/bug-tracker/www/patch-postgresql.xql}
dbqd.bug-tracker.www.patch.patch_status {dbqd.bug-tracker.www.patch.patch_status {
select status from bt_patches where patch_number = :patch_number and project_id = :package_id
      } {} {} {} c:/web/openacs-4/packages/bug-tracker/www/patch.xql}
dbqd.bug-tracker.www.patch.get_patch_content {dbqd.bug-tracker.www.patch.get_patch_content {
select content from bt_patches where patch_number = :patch_number and project_id = :package_id
      } {} {} {} c:/web/openacs-4/packages/bug-tracker/www/patch.xql}
dbqd.bug-tracker.www.patch.actions {dbqd.bug-tracker.www.patch.actions {
        select bt_patch_actions.action_id,
               bt_patch_actions.action,
               bt_patch_actions.actor as actor_user_id,
               actor.first_names as actor_first_names,
               actor.last_name as actor_last_name,
               actor.email as actor_email,
               bt_patch_actions.action_date,
               to_char(bt_patch_actions.action_date, 'fmMM/DDfm/YYYY') as action_date_pretty,
               bt_patch_actions.comment_text,
               bt_patch_actions.comment_format
        from   bt_patch_actions,
               cc_users actor
        where  bt_patch_actions.patch_id = :patch_id
        and    actor.user_id = bt_patch_actions.actor
        order  by action_date
      } {} {} {} c:/web/openacs-4/packages/bug-tracker/www/patch.xql}
dbqd.bug-tracker.www.patch.update_patch {dbqd.bug-tracker.www.patch.update_patch {
        update bt_patches set    [join $update_exprs ", "] where  patch_id = :patch_id
      } {} {} {} c:/web/openacs-4/packages/bug-tracker/www/patch.xql}
dbqd.bug-tracker.www.patch.patch_action {dbqd.bug-tracker.www.patch.patch_action {
            insert into bt_patch_actions
            (action_id, patch_id, action, actor, comment_text, comment_format)
            values
            (:action_id, :patch_id, :action, :user_id, :description, :desc_format)
      } {} {} {} c:/web/openacs-4/packages/bug-tracker/www/patch.xql}
dbqd.bug-tracker.www.patch.patch_id {dbqd.bug-tracker.www.patch.patch_id {
          select patch_id from bt_patches where patch_number = :patch_number and project_id = :package_id
      } {} {} {} c:/web/openacs-4/packages/bug-tracker/www/patch.xql}
dbqd.bulk-mail.tcl.bulk-mail-procs-oracle.bulk_mail::url_not_cached.select_bulk_mail_url {dbqd.bulk-mail.tcl.bulk-mail-procs-oracle.bulk_mail::url_not_cached.select_bulk_mail_url {
            select site_node.url(site_nodes.node_id)
            from site_nodes
            where site_nodes.object_id = :package_id
        } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/bulk-mail/tcl/bulk-mail-procs-oracle.xql}
dbqd.bulk-mail.tcl.bulk-mail-procs-oracle.bulk_mail::new.select_current_date {dbqd.bulk-mail.tcl.bulk-mail-procs-oracle.bulk_mail::new.select_current_date {
            select to_char(sysdate, :date_format)
            from dual
        } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/bulk-mail/tcl/bulk-mail-procs-oracle.xql}
dbqd.bulk-mail.tcl.bulk-mail-procs-oracle.bulk_mail::sweep.select_bulk_mails_to_send {dbqd.bulk-mail.tcl.bulk-mail-procs-oracle.bulk_mail::sweep.select_bulk_mails_to_send {
            select bulk_mail_messages.*
            from bulk_mail_messages
            where bulk_mail_messages.status = 'pending'
            and bulk_mail_messages.send_date <= sysdate
            for update
        } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/bulk-mail/tcl/bulk-mail-procs-oracle.xql}
dbqd.bulk-mail.tcl.bulk-mail-procs.bulk_mail_base.bulk_mail_base_query {dbqd.bulk-mail.tcl.bulk-mail-procs.bulk_mail_base.bulk_mail_base_query {
            select site_node__url(site_nodes.node_id)
            from site_nodes
            where site_nodes.object_id = :package_id
        } {} {} {postgresql 7.1} c:/web/openacs-4/packages/bulk-mail/tcl/bulk-mail-procs-postgresql.xql}
dbqd.bulk-mail.tcl.bulk-mail-procs.bulk_mail::new.select_current_date {dbqd.bulk-mail.tcl.bulk-mail-procs.bulk_mail::new.select_current_date {
            select to_char(now(), :date_format)
        } {} {} {postgresql 7.1} c:/web/openacs-4/packages/bulk-mail/tcl/bulk-mail-procs-postgresql.xql}
dbqd.bulk-mail.tcl.bulk-mail-procs.bulk_mail::sweep.select_bulk_mails_to_send {dbqd.bulk-mail.tcl.bulk-mail-procs.bulk_mail::sweep.select_bulk_mails_to_send {
            select bulk_mail_messages.*
            from bulk_mail_messages
            where bulk_mail_messages.status = 'pending'
            and bulk_mail_messages.send_date <= now()
            for update
        } {} {} {postgresql 7.1} c:/web/openacs-4/packages/bulk-mail/tcl/bulk-mail-procs-postgresql.xql}
dbqd.bulk-mail.tcl.bulk-mail-procs.bulk_mail::package_id_not_cached.select_bulk_mail_package_id {dbqd.bulk-mail.tcl.bulk-mail-procs.bulk_mail::package_id_not_cached.select_bulk_mail_package_id {
            select min(apm_packages.package_id)
            from apm_packages
            where apm_packages.package_key = :package_key
        } {} {} {} c:/web/openacs-4/packages/bulk-mail/tcl/bulk-mail-procs.xql}
dbqd.bulk-mail.tcl.bulk-mail-procs.bulk_mail::sweep.mark_message_sent {dbqd.bulk-mail.tcl.bulk-mail-procs.bulk_mail::sweep.mark_message_sent {
            update bulk_mail_messages
            set status = 'sent'
            where bulk_mail_id = :bulk_mail_id
        } {} {} {} c:/web/openacs-4/packages/bulk-mail/tcl/bulk-mail-procs.xql}
dbqd.bulk-mail.www.one.select_message_info {dbqd.bulk-mail.www.one.select_message_info {
            select bulk_mail_messages.bulk_mail_id,
                   to_char(bulk_mail_messages.send_date, 'Mon DD YYYY HH24:MI') as send_date,
                   bulk_mail_messages.status,
                   bulk_mail_messages.from_addr,
                   bulk_mail_messages.subject,
                   bulk_mail_messages.reply_to,
                   bulk_mail_messages.extra_headers,
                   bulk_mail_messages.message,
                   bulk_mail_messages.query
            from bulk_mail_messages
            where bulk_mail_messages.bulk_mail_id = :bulk_mail_id
        } {} {} {} c:/web/openacs-4/packages/bulk-mail/www/one.xql}
dbqd.calendar.tcl.cal-item-2-procs-oracle.calendar::item::dates_valid_p.dates_valid_p_select {dbqd.calendar.tcl.cal-item-2-procs-oracle.calendar::item::dates_valid_p.dates_valid_p_select {
          
            select CASE WHEN (to_date(:start_date,:date_format) - to_date(:end_date,:date_format)) <= 0 
                        THEN 1
                        ELSE -1
                   END 
            from dual

} {} {} {oracle 8.1.6} c:/web/openacs-4/packages/calendar/tcl/cal-item-2-procs-oracle.xql}
dbqd.calendar.tcl.cal-item-2-procs-oracle.calendar::item::get.select_item_data {dbqd.calendar.tcl.cal-item-2-procs-oracle.calendar::item::get.select_item_data {
            
            select   
            cal_items.cal_item_id,
            0 as n_attachments,
            to_char(start_date, 'YYYY-MM-DD HH24:MI:SS') as start_date_ansi,
            to_char(end_date, 'YYYY-MM-DD HH24:MI:SS') as end_date_ansi,
            nvl(e.name, a.name) as name,
            nvl(e.description, a.description) as description,
            recurrence_id,
            cal_items.item_type_id,
            cal_item_types.type as item_type,
            on_which_calendar as calendar_id
            from     acs_activities a,
            acs_events e,
            timespans s,
            time_intervals t,
            cal_items,
            cal_item_types
            where    e.timespan_id = s.timespan_id
            and      s.interval_id = t.interval_id
            and      e.activity_id = a.activity_id
            and      e.event_id = :cal_item_id
            and      cal_items.cal_item_id= :cal_item_id
            and      cal_item_types.item_type_id(+)= cal_items.item_type_id
} {} {} {oracle 8.1.6} c:/web/openacs-4/packages/calendar/tcl/cal-item-2-procs-oracle.xql}
dbqd.calendar.tcl.cal-item-2-procs-oracle.calendar::item::get.select_item_data_with_attachment {dbqd.calendar.tcl.cal-item-2-procs-oracle.calendar::item::get.select_item_data_with_attachment {
            
            select   
            cal_items.cal_item_id,
            (select count(*) from attachments where object_id = cal_item_id) as n_attachments,
            to_char(start_date, 'YYYY-MM-DD HH24:MI:SS') as start_date_ansi,
            to_char(end_date, 'YYYY-MM-DD HH24:MI:SS') as end_date_ansi,
            nvl(e.name, a.name) as name,
            nvl(e.description, a.description) as description,
            recurrence_id,
            cal_items.item_type_id,
            cal_item_types.type as item_type,
            on_which_calendar as calendar_id
            from     acs_activities a,
            acs_events e,
            timespans s,
            time_intervals t,
            cal_items,
            cal_item_types
            where    e.timespan_id = s.timespan_id
            and      s.interval_id = t.interval_id
            and      e.activity_id = a.activity_id
            and      e.event_id = :cal_item_id
            and      cal_items.cal_item_id= :cal_item_id
            and      cal_item_types.item_type_id(+)= cal_items.item_type_id
} {} {} {oracle 8.1.6} c:/web/openacs-4/packages/calendar/tcl/cal-item-2-procs-oracle.xql}
dbqd.calendar.tcl.cal-item-2-procs-oracle.calendar::item::add_recurrence.create_recurrence {dbqd.calendar.tcl.cal-item-2-procs-oracle.calendar::item::add_recurrence.create_recurrence {
begin
   :1 := recurrence.new(interval_type => :interval_type,
    	every_nth_interval => :every_n,
    	days_of_week => :days_of_week,
    	recur_until => :recur_until);
end;
} {} {} {oracle 8.1.6} c:/web/openacs-4/packages/calendar/tcl/cal-item-2-procs-oracle.xql}
dbqd.calendar.tcl.cal-item-2-procs-oracle.calendar::item::add_recurrence.insert_instances {dbqd.calendar.tcl.cal-item-2-procs-oracle.calendar::item::add_recurrence.insert_instances {
begin
   acs_event.insert_instances(event_id => :cal_item_id);
end;
} {} {} {oracle 8.1.6} c:/web/openacs-4/packages/calendar/tcl/cal-item-2-procs-oracle.xql}
dbqd.calendar.tcl.cal-item-2-procs.calendar::item::dates_valid_p.dates_valid_p_select {dbqd.calendar.tcl.cal-item-2-procs.calendar::item::dates_valid_p.dates_valid_p_select {
        select CASE WHEN :start_date::timestamptz <= :end_date::timestamptz
                    THEN 1
                    ELSE -1
               END 
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/calendar/tcl/cal-item-2-procs-postgresql.xql}
dbqd.calendar.tcl.cal-item-2-procs.calendar::item::get.select_item_data {dbqd.calendar.tcl.cal-item-2-procs.calendar::item::get.select_item_data {
      select
         i.cal_item_id,
         0 as n_attachments,
         to_char(start_date, 'YYYY-MM-DD HH24:MI:SS') as start_date_ansi,
         to_char(end_date, 'YYYY-MM-DD HH24:MI:SS') as end_date_ansi,
         coalesce(a.name, e.name) as name,
         coalesce(e.description, a.description) as description,
         recurrence_id,
         i.item_type_id,
         it.type as item_type,
         on_which_calendar as calendar_id
       from
         acs_events e join timespans s
           on (e.timespan_id = s.timespan_id)
         join time_intervals t
           on (s.interval_id = t.interval_id)
         join acs_activities a
           on (e.activity_id = a.activity_id)
         join cal_items i
           on (e.event_id = i.cal_item_id)
         left join cal_item_types it
           on (it.item_type_id = i.item_type_id)
       where
         e.event_id = :cal_item_id
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/calendar/tcl/cal-item-2-procs-postgresql.xql}
dbqd.calendar.tcl.cal-item-2-procs.calendar::item::get.select_item_data_with_attachment {dbqd.calendar.tcl.cal-item-2-procs.calendar::item::get.select_item_data_with_attachment {
       select
         i.cal_item_id,
         (select count(*) from attachments where object_id = cal_item_id) as n_attachments,
         to_char(start_date, 'YYYY-MM-DD HH24:MI:SS') as start_date_ansi,
         to_char(end_date, 'YYYY-MM-DD HH24:MI:SS') as end_date_ansi,
         coalesce(a.name, e.name) as name,
         coalesce(e.description, a.description) as description,
         recurrence_id,
         i.item_type_id,
         it.type as item_type,
         on_which_calendar as calendar_id
       from
         acs_events e join timespans s
           on (e.timespan_id = s.timespan_id)
         join time_intervals t
           on (s.interval_id = t.interval_id)
         join acs_activities a
           on (e.activity_id = a.activity_id)
         join cal_items i
           on (e.event_id = i.cal_item_id)
         left join cal_item_types it
           on (it.item_type_id = i.item_type_id)
       where
         e.event_id = :cal_item_id
     } {} {} {postgresql 7.1} c:/web/openacs-4/packages/calendar/tcl/cal-item-2-procs-postgresql.xql}
dbqd.calendar.tcl.cal-item-2-procs.calendar::item::add_recurrence.create_recurrence {dbqd.calendar.tcl.cal-item-2-procs.calendar::item::add_recurrence.create_recurrence {
select recurrence__new(:interval_type,
    	:every_n,
    	:days_of_week,
    	:recur_until,
	NULL)
} {} {} {postgresql 7.1} c:/web/openacs-4/packages/calendar/tcl/cal-item-2-procs-postgresql.xql}
dbqd.calendar.tcl.cal-item-2-procs.calendar::item::add_recurrence.insert_instances {dbqd.calendar.tcl.cal-item-2-procs.calendar::item::add_recurrence.insert_instances {
select acs_event__insert_instances(:cal_item_id, NULL);
} {} {} {postgresql 7.1} c:/web/openacs-4/packages/calendar/tcl/cal-item-2-procs-postgresql.xql}
dbqd.calendar.tcl.cal-item-2-procs.calendar::item::add_recurrence.update_event {dbqd.calendar.tcl.cal-item-2-procs.calendar::item::add_recurrence.update_event {
update acs_events 
set recurrence_id= :recurrence_id
where event_id= :cal_item_id
} {} {} {} c:/web/openacs-4/packages/calendar/tcl/cal-item-2-procs.xql}
dbqd.calendar.tcl.cal-item-2-procs.calendar::item::add_recurrence.insert_cal_items {dbqd.calendar.tcl.cal-item-2-procs.calendar::item::add_recurrence.insert_cal_items {
insert into cal_items 
(cal_item_id, on_which_calendar)
select
event_id, 
(select on_which_calendar 
as calendar_id from cal_items 
where cal_item_id = :cal_item_id)
from acs_events where recurrence_id= :recurrence_id 
and event_id <> :cal_item_id
} {} {} {} c:/web/openacs-4/packages/calendar/tcl/cal-item-2-procs.xql}
dbqd.calendar.tcl.cal-item-procs-oracle.cal_item_create.insert_activity {dbqd.calendar.tcl.cal-item-procs-oracle.cal_item_create.insert_activity {
      
	begin
	:1 := acs_activity.new (
	  name          => :name,
	  description   => :description,
	  creation_user => :creation_user,
	  creation_ip   => :creation_ip
	);
	end;
    
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/calendar/tcl/cal-item-procs-oracle.xql}
dbqd.calendar.tcl.cal-item-procs-oracle.cal_item_create.insert_timespan {dbqd.calendar.tcl.cal-item-procs-oracle.cal_item_create.insert_timespan {
      
	begin
	:1 := timespan.new(
	  start_date => to_date(:start_date,:date_format),
	  end_date   => to_date(:end_date,:date_format)
	);
	end;
    
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/calendar/tcl/cal-item-procs-oracle.xql}
dbqd.calendar.tcl.cal-item-procs-oracle.cal_item_create.cal_item_add {dbqd.calendar.tcl.cal-item-procs-oracle.cal_item_create.cal_item_add {
      
	begin
	:1 := cal_item.new(
	  on_which_calendar  => :on_which_calendar,
	  activity_id        => :activity_id,
          timespan_id        => :timespan_id,
          item_type_id       => :item_type_id,
	  creation_user      => :creation_user,
	  creation_ip        => :creation_ip,
          context_id         => :on_which_calendar
	);
	end;
    
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/calendar/tcl/cal-item-procs-oracle.xql}
dbqd.calendar.tcl.cal-item-procs-oracle.cal_item_update.update_interval {dbqd.calendar.tcl.cal-item-procs-oracle.cal_item_update.update_interval {
      
	begin
	  time_interval.edit (
	    interval_id  => :interval_id,
	    start_date   => to_date(:start_date,:date_format),
	    end_date     => to_date(:end_date,:date_format)
	  );
	end;
    
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/calendar/tcl/cal-item-procs-oracle.xql}
dbqd.calendar.tcl.cal-item-procs-oracle.cal_item_delete.delete_cal_item {dbqd.calendar.tcl.cal-item-procs-oracle.cal_item_delete.delete_cal_item {
      
	begin
	  cal_item.del (
	    cal_item_id  => :cal_item_id
	  );
	end;
    
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/calendar/tcl/cal-item-procs-oracle.xql}
dbqd.calendar.tcl.cal-item-procs-oracle.cal_item_delete_recurrence.delete_cal_item_recurrence {dbqd.calendar.tcl.cal-item-procs-oracle.cal_item_delete_recurrence.delete_cal_item_recurrence {
      
	begin
	  cal_item.delete_all (
	    recurrence_id  => :recurrence_id
	  );
	end;
    
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/calendar/tcl/cal-item-procs-oracle.xql}
dbqd.calendar.tcl.cal-item-procs-oracle.cal_item_edit_recurrence.recurrence_timespan_update {dbqd.calendar.tcl.cal-item-procs-oracle.cal_item_edit_recurrence.recurrence_timespan_update {
begin
  acs_event.recurrence_timespan_edit (
    event_id => :event_id,
    start_date => to_date(:start_date,'YYYY-MM-DD HH24:MI'),
    end_date => to_date(:end_date,'YYYY-MM-DD HH24:MI')
  );
end;
} {} {} {oracle 8.1.6} c:/web/openacs-4/packages/calendar/tcl/cal-item-procs-oracle.xql}
dbqd.calendar.tcl.cal-item-procs.cal_item_create.insert_activity {dbqd.calendar.tcl.cal-item-procs.cal_item_create.insert_activity {
	select acs_activity__new (
					null,
					:name,
					:description,
					'f',
					null,
					'acs_activity', 
					now(),
					:creation_user,
					:creation_ip,
					null
	)

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/calendar/tcl/cal-item-procs-postgresql.xql}
dbqd.calendar.tcl.cal-item-procs.cal_item_create.insert_timespan {dbqd.calendar.tcl.cal-item-procs.cal_item_create.insert_timespan {
	select timespan__new (    
					:start_date::timestamptz,
					:end_date::timestamptz
	) 

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/calendar/tcl/cal-item-procs-postgresql.xql}
dbqd.calendar.tcl.cal-item-procs.cal_item_create.cal_item_add {dbqd.calendar.tcl.cal-item-procs.cal_item_create.cal_item_add {
	select cal_item__new (
					null,
					:on_which_calendar,
					null,
					null,
                                        null,
                                        null,
					:timespan_id,
					:activity_id,
					null, 
					'cal_item',
					:on_which_calendar,
					now(),
					:creation_user,
					:creation_ip
	)

     } {} {} {postgresql 7.1} c:/web/openacs-4/packages/calendar/tcl/cal-item-procs-postgresql.xql}
dbqd.calendar.tcl.cal-item-procs.cal_item_update.update_interval {dbqd.calendar.tcl.cal-item-procs.cal_item_update.update_interval {
	select time_interval__edit (
					:interval_id,
					:start_date::timestamptz,
					:end_date::timestamptz
	)

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/calendar/tcl/cal-item-procs-postgresql.xql}
dbqd.calendar.tcl.cal-item-procs.cal_item_delete.delete_cal_item {dbqd.calendar.tcl.cal-item-procs.cal_item_delete.delete_cal_item {
	select cal_item__delete (
					:cal_item_id
	)

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/calendar/tcl/cal-item-procs-postgresql.xql}
dbqd.calendar.tcl.cal-item-procs.cal_item_delete_recurrence.delete_cal_item_recurrence {dbqd.calendar.tcl.cal-item-procs.cal_item_delete_recurrence.delete_cal_item_recurrence {
	select cal_item__delete_all (
					:recurrence_id
	)

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/calendar/tcl/cal-item-procs-postgresql.xql}
dbqd.calendar.tcl.cal-item-procs.cal_item_edit_recurrence.recurrence_timespan_update {dbqd.calendar.tcl.cal-item-procs.cal_item_edit_recurrence.recurrence_timespan_update {
select
  acs_event__recurrence_timespan_edit (
    :event_id,
    :start_date,
    :end_date
  )
} {} {} {postgresql 7.1} c:/web/openacs-4/packages/calendar/tcl/cal-item-procs-postgresql.xql}
dbqd.calendar.tcl.cal-item-procs.cal_item_create.get_permissions_to_items {dbqd.calendar.tcl.cal-item-procs.cal_item_create.get_permissions_to_items {
      
	select          grantee_id,
                  	privilege
	from            acs_permissions
	where           object_id = :on_which_calendar
    
      } {} {} {} c:/web/openacs-4/packages/calendar/tcl/cal-item-procs.xql}
dbqd.calendar.tcl.cal-item-procs.cal_item_update.select_recurrence_id {dbqd.calendar.tcl.cal-item-procs.cal_item_update.select_recurrence_id {
select recurrence_id from acs_events where event_id= :cal_item_id
} {} {} {} c:/web/openacs-4/packages/calendar/tcl/cal-item-procs.xql}
dbqd.calendar.tcl.cal-item-procs.cal_item_update.update_activity {dbqd.calendar.tcl.cal-item-procs.cal_item_update.update_activity {
    update acs_activities 
    set    name = :name,
           description = :description
    where  activity_id
    in     (
           select activity_id
           from   acs_events
           where  event_id = :cal_item_id
           )
    } {} {} {} c:/web/openacs-4/packages/calendar/tcl/cal-item-procs.xql}
dbqd.calendar.tcl.cal-item-procs.cal_item_update.update_event {dbqd.calendar.tcl.cal-item-procs.cal_item_update.update_event {
    update acs_events
    set    name = :name,
           description = :description
    where  event_id= :cal_item_id
    } {} {} {} c:/web/openacs-4/packages/calendar/tcl/cal-item-procs.xql}
dbqd.calendar.tcl.cal-item-procs.cal_item_update.get_interval_id {dbqd.calendar.tcl.cal-item-procs.cal_item_update.get_interval_id {
    select interval_id 
    from   timespans
    where  timespan_id
    in     (
           select timespan_id
           from   acs_events
           where  event_id = :cal_item_id
           )
    } {} {} {} c:/web/openacs-4/packages/calendar/tcl/cal-item-procs.xql}
dbqd.calendar.tcl.cal-item-procs.cal_item_edit_recurrence.select_recurrence_id {dbqd.calendar.tcl.cal-item-procs.cal_item_edit_recurrence.select_recurrence_id {
select recurrence_id from acs_events where event_id= :event_id
} {} {} {} c:/web/openacs-4/packages/calendar/tcl/cal-item-procs.xql}
dbqd.calendar.tcl.cal-item-procs.cal_item_edit_recurrence.recurrence_activities_update {dbqd.calendar.tcl.cal-item-procs.cal_item_edit_recurrence.recurrence_activities_update {
    update acs_activities 
    set    name = :name,
           description = :description
    where  activity_id
    in     (
           select activity_id
           from   acs_events
           where  recurrence_id = :recurrence_id
           )
    } {} {} {} c:/web/openacs-4/packages/calendar/tcl/cal-item-procs.xql}
dbqd.calendar.tcl.cal-item-procs.cal_item_edit_recurrence.recurrence_events_update {dbqd.calendar.tcl.cal-item-procs.cal_item_edit_recurrence.recurrence_events_update {
    update acs_events set
    name= :name, description= :description
    where recurrence_id= :recurrence_id
    } {} {} {} c:/web/openacs-4/packages/calendar/tcl/cal-item-procs.xql}
dbqd.calendar.tcl.cal-item-procs.cal_item_edit_recurrence.recurrence_items_update {dbqd.calendar.tcl.cal-item-procs.cal_item_edit_recurrence.recurrence_items_update {
    update cal_items set
    item_type_id= :item_type_id
    where cal_item_id in (select event_id from acs_events where recurrence_id= :recurrence_id)
    } {} {} {} c:/web/openacs-4/packages/calendar/tcl/cal-item-procs.xql}
dbqd.calendar.tcl.calendar-2-procs-oracle.calendar::calendar_list.select_calendar_list {dbqd.calendar.tcl.calendar-2-procs-oracle.calendar::calendar_list.select_calendar_list {
        select calendar_name, 
               calendar_id, 
               acs_permission.permission_p(calendar_id, :user_id, 'calendar_admin') as calendar_admin_p
        from calendars
        where package_id= :package_id
        and (private_p='f' or (private_p='t' and owner_id= :user_id))
    } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/calendar/tcl/calendar-2-procs-oracle.xql}
dbqd.calendar.tcl.calendar-2-procs.calendar::calendar_list.select_calendar_list {dbqd.calendar.tcl.calendar-2-procs.calendar::calendar_list.select_calendar_list {
        select calendar_name, calendar_id, acs_permission__permission_p(calendar_id, :user_id, 'calendar_admin') as calendar_admin_p from calendars
        where package_id= :package_id
        and (private_p='f' or (private_p='t' and owner_id= :user_id))
    } {} {} {postgresql 7.1} c:/web/openacs-4/packages/calendar/tcl/calendar-2-procs-postgresql.xql}
dbqd.calendar.tcl.calendar-2-procs.calendar::get_item_types.select_item_types {dbqd.calendar.tcl.calendar-2-procs.calendar::get_item_types.select_item_types {
select type, item_type_id from cal_item_types
where calendar_id= :calendar_id
} {} {} {} c:/web/openacs-4/packages/calendar/tcl/calendar-2-procs.xql}
dbqd.calendar.tcl.calendar-2-procs.calendar::item_type_new.insert_item_type {dbqd.calendar.tcl.calendar-2-procs.calendar::item_type_new.insert_item_type {
insert into cal_item_types
(item_type_id, calendar_id, type)
values
(:item_type_id, :calendar_id, :type)
} {} {} {} c:/web/openacs-4/packages/calendar/tcl/calendar-2-procs.xql}
dbqd.calendar.tcl.calendar-2-procs.calendar::item_type_delete.reset_item_types {dbqd.calendar.tcl.calendar-2-procs.calendar::item_type_delete.reset_item_types {
update cal_items
set item_type_id= NULL
where item_type_id = :item_type_id
and on_which_calendar= :calendar_id
} {} {} {} c:/web/openacs-4/packages/calendar/tcl/calendar-2-procs.xql}
dbqd.calendar.tcl.calendar-2-procs.calendar::item_type_delete.delete_item_type {dbqd.calendar.tcl.calendar-2-procs.calendar::item_type_delete.delete_item_type {
delete from cal_item_types where item_type_id= :item_type_id
and calendar_id= :calendar_id
} {} {} {} c:/web/openacs-4/packages/calendar/tcl/calendar-2-procs.xql}
dbqd.calendar.tcl.calendar-2-procs.calendar::rename.rename_calendar {dbqd.calendar.tcl.calendar-2-procs.calendar::rename.rename_calendar {
            update calendars
            set calendar_name = :name
            where calendar_id = :calendar_id
        } {} {} {} c:/web/openacs-4/packages/calendar/tcl/calendar-2-procs.xql}
dbqd.calendar.tcl.calendar-outlook-procs.calendar::outlook::adjust_timezone.adjust_timezone {dbqd.calendar.tcl.calendar-outlook-procs.calendar::outlook::adjust_timezone.adjust_timezone {
select to_char(timezone.utc_to_local(tz_id, utc_time), :format)
from timezones,
(select timezone.local_to_utc(tz_id, to_date(:timestamp,:format)) as utc_time
from timezones where tz= :server_tz)
where tz= :user_tz
} {} {} {} c:/web/openacs-4/packages/calendar/tcl/calendar-outlook-procs.xql}
dbqd.calendar.tcl.calendar-outlook-procs.calendar::outlook::format_item.select_recurrence {dbqd.calendar.tcl.calendar-outlook-procs.calendar::outlook::format_item.select_recurrence {
select 
recurrence_id, recurrences.interval_type, interval_name,
every_nth_interval, days_of_week, recur_until
from recurrences, recurrence_interval_types
where recurrence_id= :recurrence_id
and recurrences.interval_type = recurrence_interval_types.interval_type
} {} {} {} c:/web/openacs-4/packages/calendar/tcl/calendar-outlook-procs.xql}
dbqd.calendar.tcl.calendar-procs-oracle.calendar_create.create_new_calendar {dbqd.calendar.tcl.calendar-procs-oracle.calendar_create.create_new_calendar {
      
	begin
	:1 := calendar.new(
	  owner_id      => :owner_id,
	  private_p     => :private_p,
	  calendar_name => :calendar_name,
	  package_id    => :package_id,
	  creation_user => :creation_user,
	  creation_ip   => :creation_ip
	);	
	end;
    
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/calendar/tcl/calendar-procs-oracle.xql}
dbqd.calendar.tcl.calendar-procs-oracle.calendar_assign_permissions.get_magic_id {dbqd.calendar.tcl.calendar-procs-oracle.calendar_assign_permissions.get_magic_id {
      
	    select  acs.magic_object_id('the_public')
	            as party_id
	    from    dual
	
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/calendar/tcl/calendar-procs-oracle.xql}
dbqd.calendar.tcl.calendar-procs-oracle.calendar_create_private.get_user_name {dbqd.calendar.tcl.calendar-procs-oracle.calendar_create_private.get_user_name {
      
	select   acs_object.name(:private_id) 
	from     dual
    
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/calendar/tcl/calendar-procs-oracle.xql}
dbqd.calendar.tcl.calendar-procs-oracle.calendar_get_name.get_calendar_name {dbqd.calendar.tcl.calendar-procs-oracle.calendar_get_name.get_calendar_name {
      
	       select  calendar.name(:calendar_id)
	       from    dual
    
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/calendar/tcl/calendar-procs-oracle.xql}
dbqd.calendar.tcl.calendar-procs-oracle.calendar_public_p.check_calendar_permission {dbqd.calendar.tcl.calendar-procs-oracle.calendar_public_p.check_calendar_permission {
      
              select   acs_permission.permission_p(
                         :calendar_id, 
                         acs.magic_object_id('the_public'),
                         'calendar_read'
                       ) 
              from     dual

            
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/calendar/tcl/calendar-procs-oracle.xql}
dbqd.calendar.tcl.calendar-procs.calendar_create.create_new_calendar {dbqd.calendar.tcl.calendar-procs.calendar_create.create_new_calendar {
	select calendar__new(
		null,
		:calendar_name,
		'calendar',
		:owner_id,
		:private_p,
		:package_id,
		null,
		now(),
		:creation_user,
		:creation_ip
	);
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/calendar/tcl/calendar-procs-postgresql.xql}
dbqd.calendar.tcl.calendar-procs.calendar_assign_permissions.get_magic_id {dbqd.calendar.tcl.calendar-procs.calendar_assign_permissions.get_magic_id {
      
	    select  acs__magic_object_id('the_public')
	            as party_id
	    from    dual
	
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/calendar/tcl/calendar-procs-postgresql.xql}
dbqd.calendar.tcl.calendar-procs.calendar_create_private.get_user_name {dbqd.calendar.tcl.calendar-procs.calendar_create_private.get_user_name {
      
	select   acs_object__name(:private_id) 
	from     dual
    
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/calendar/tcl/calendar-procs-postgresql.xql}
dbqd.calendar.tcl.calendar-procs.calendar_get_name.get_calendar_name {dbqd.calendar.tcl.calendar-procs.calendar_get_name.get_calendar_name {
      
	       select  calendar__name(:calendar_id)
	       from    dual
    
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/calendar/tcl/calendar-procs-postgresql.xql}
dbqd.calendar.tcl.calendar-procs.calendar_public_p.check_calendar_permission {dbqd.calendar.tcl.calendar-procs.calendar_public_p.check_calendar_permission {
      
              select   acs_permission__permission_p(
                         :calendar_id, 
                         acs__magic_object_id('the_public'),
                         'calendar_read'
                       ) 
              from     dual

            
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/calendar/tcl/calendar-procs-postgresql.xql}
dbqd.calendar.tcl.calendar-procs.calendar_update.update_calendar {dbqd.calendar.tcl.calendar-procs.calendar_update.update_calendar {
      
	update   calendars
	set      calendar_name = :calendar_name
	where    calendar_id = :calendar_id	
    
      } {} {} {} c:/web/openacs-4/packages/calendar/tcl/calendar-procs.xql}
dbqd.calendar.tcl.calendar-procs.calendar_have_group_cal_p.get_calendar_info {dbqd.calendar.tcl.calendar-procs.calendar_have_group_cal_p.get_calendar_info {
    select    calendar_id,
    from      calendars
    where     owner_id = :party_id
    } {} {} {} c:/web/openacs-4/packages/calendar/tcl/calendar-procs.xql}
dbqd.calendar.tcl.calendar-procs.calendar_have_private_p.get_calendar_info {dbqd.calendar.tcl.calendar-procs.calendar_have_private_p.get_calendar_info {
    select    calendar_id
    from      calendars
    where     owner_id = :party_id
    and       private_p = 't'
    } {} {} {} c:/web/openacs-4/packages/calendar/tcl/calendar-procs.xql}
dbqd.calendar.tcl.calendar-procs.calendar_have_private_p.get_calendar_info_calendar_id_list {dbqd.calendar.tcl.calendar-procs.calendar_have_private_p.get_calendar_info_calendar_id_list {
    select    calendar_id
    from      calendars
    where     owner_id = :party_id
    and       private_p = 't'
    and       calendar_id in ([join $calendar_id_list ", "])
    } {} {} {} c:/web/openacs-4/packages/calendar/tcl/calendar-procs.xql}
dbqd.calendar.www.admin.cal-item-permissions-oracle.get_party_name {dbqd.calendar.www.admin.cal-item-permissions-oracle.get_party_name {
      
                  select   acs_object.name(:party_id)
                  from     dual
               
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/calendar/www/admin/cal-item-permissions-oracle.xql}
dbqd.calendar.www.admin.cal-item-permissions-oracle.list_users {dbqd.calendar.www.admin.cal-item-permissions-oracle.list_users {
      
	select   acs_object.name(party_id) 
	         as pretty_name,
	         party_id
        from     parties
    
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/calendar/www/admin/cal-item-permissions-oracle.xql}
dbqd.calendar.www.admin.cal-item-permissions-oracle.get_calendar_audiences {dbqd.calendar.www.admin.cal-item-permissions-oracle.get_calendar_audiences {
      
	select    unique(grantee_id) as party_id,
	          acs_object.name(grantee_id) as name
	from      acs_permissions
	where     object_id = :cal_item_id	
    
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/calendar/www/admin/cal-item-permissions-oracle.xql}
dbqd.calendar.www.admin.cal-item-permissions.get_party_name {dbqd.calendar.www.admin.cal-item-permissions.get_party_name {
      
                  select   acs_object__name(:party_id)
                  from     dual
               
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/calendar/www/admin/cal-item-permissions-postgresql.xql}
dbqd.calendar.www.admin.cal-item-permissions.get_cal_item_name {dbqd.calendar.www.admin.cal-item-permissions.get_cal_item_name {
      
                     select    cal_item__name(:cal_item_id)
                     from      dual
                  
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/calendar/www/admin/cal-item-permissions-postgresql.xql}
dbqd.calendar.www.admin.cal-item-permissions.list_users {dbqd.calendar.www.admin.cal-item-permissions.list_users {
      
	select   acs_object__name(party_id) 
	         as pretty_name,
	         party_id
        from     parties
    
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/calendar/www/admin/cal-item-permissions-postgresql.xql}
dbqd.calendar.www.admin.cal-item-permissions.get_calendar_audiences {dbqd.calendar.www.admin.cal-item-permissions.get_calendar_audiences {
      
	select    distinct(grantee_id) as party_id,
	          acs_object__name(grantee_id) as name
	from      acs_permissions
	where     object_id = :cal_item_id	
    
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/calendar/www/admin/cal-item-permissions-postgresql.xql}
dbqd.calendar.www.admin.cal-item-permissions.get_existing_permissions {dbqd.calendar.www.admin.cal-item-permissions.get_existing_permissions {
      
    select   distinct(child_privilege) as privilege 
    from     acs_privilege_hierarchy 
    where    child_privilege like 'cal_item%'

      } {} {} {} c:/web/openacs-4/packages/calendar/www/admin/cal-item-permissions.xql}
dbqd.calendar.www.admin.cal-item-permissions.get_party_privileges {dbqd.calendar.www.admin.cal-item-permissions.get_party_privileges {
      
	select    distinct privilege
	from      all_object_party_privilege_map 
	where     party_id = :party_id
	and       object_id = :cal_item_id
	and       privilege like '%cal_item%'
    
      } {} {} {} c:/web/openacs-4/packages/calendar/www/admin/cal-item-permissions.xql}
dbqd.calendar.www.admin.calendar-permissions-oracle.get_party_name {dbqd.calendar.www.admin.calendar-permissions-oracle.get_party_name {
      
                  select   acs_object.name(:party_id)
                  from     dual
               
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/calendar/www/admin/calendar-permissions-oracle.xql}
dbqd.calendar.www.admin.calendar-permissions-oracle.list_users {dbqd.calendar.www.admin.calendar-permissions-oracle.list_users {
      
	select   acs_object.name(party_id) 
	         as pretty_name,
	         party_id
        from parties
    
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/calendar/www/admin/calendar-permissions-oracle.xql}
dbqd.calendar.www.admin.calendar-permissions.get_party_name {dbqd.calendar.www.admin.calendar-permissions.get_party_name {
      
                  select   acs_object__name(:party_id)
                  from     dual
               
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/calendar/www/admin/calendar-permissions-postgresql.xql}
dbqd.calendar.www.admin.calendar-permissions.list_users {dbqd.calendar.www.admin.calendar-permissions.list_users {
      
	select   acs_object__name(party_id) 
	         as pretty_name,
	         party_id
        from parties
    
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/calendar/www/admin/calendar-permissions-postgresql.xql}
dbqd.calendar.www.admin.calendar-permissions.get_existing_permissions {dbqd.calendar.www.admin.calendar-permissions.get_existing_permissions {
      
    select   distinct(child_privilege) as privilege 
    from     acs_privilege_hierarchy 
    where    child_privilege like 'calendar%'

      } {} {} {} c:/web/openacs-4/packages/calendar/www/admin/calendar-permissions.xql}
dbqd.calendar.www.admin.calendar-permissions.get_party_privileges {dbqd.calendar.www.admin.calendar-permissions.get_party_privileges {
      
	select    distinct privilege 	        
	from      all_object_party_privilege_map 
	where     object_id = :calendar_id
	and       party_id = :party_id
	and       privilege like 'calendar%'
    
      } {} {} {} c:/web/openacs-4/packages/calendar/www/admin/calendar-permissions.xql}
dbqd.calendar.www.admin.calendar-preferences-oracle.get_party_name {dbqd.calendar.www.admin.calendar-preferences-oracle.get_party_name {
      
                  select   acs_object.name(:party_id)
                  from     dual
               
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/calendar/www/admin/calendar-preferences-oracle.xql}
dbqd.calendar.www.admin.calendar-preferences-oracle.get_viewable_calendar {dbqd.calendar.www.admin.calendar-preferences-oracle.get_viewable_calendar {
      
	
	select   unique(o.object_id) as calendar_id, 
	         calendar.name(object_id) as calendar_name,
                 calendar.show_p(object_id, :party_id) as show_p
	from     acs_objects o
	where    calendar.readable_p(o.object_id, :party_id) = 't'
	and      o.object_id = :party_id
	and      acs_object_util.object_type_p(o.object_id, 'calendar') = 't'
	and      calendar.private_p(o.object_id) = 'f'
	
	union

	select   cal_item.on_which_calendar(o.object_id) as calendar_id, 
	         calendar.name(cal_item.on_which_calendar(o.object_id)) as calendar_name,
	         calendar.show_p(cal_item.on_which_calendar(o.object_id), :party_id) as show_p
	from     acs_objects o
	where    privilege = 'cal_item_read'
	and      party_id = :party_id
	and      acs_object_util.object_type_p(o.object_id, 'cal_item') = 't'
	and      calendar.private_p(cal_item.on_which_calendar(o.object_id)) = 'f'

	
    
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/calendar/www/admin/calendar-preferences-oracle.xql}
dbqd.calendar.www.admin.calendar-preferences.get_party_name {dbqd.calendar.www.admin.calendar-preferences.get_party_name {
      
                  select   acs_object__name(:party_id)
                  from     dual
               
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/calendar/www/admin/calendar-preferences-postgresql.xql}
dbqd.calendar.www.admin.calendar-preferences.get_viewable_calendar {dbqd.calendar.www.admin.calendar-preferences.get_viewable_calendar {
	select   calendar_id,
	         calendar_name,
	         calendar__show_p(calendar_id, :party_id) as show_p
	from     calendars
	where    acs_permission__permission_p(calendar_id, :party_id, 'calendar_read') = 't'
        and      private_p='f'
     } {} {} {postgresql 7.1} c:/web/openacs-4/packages/calendar/www/admin/calendar-preferences-postgresql.xql}
dbqd.calendar.www.admin.index-oracle.calendar_list {dbqd.calendar.www.admin.index-oracle.calendar_list {
      
    select     calendar_id, 
               calendar_name
    from       calendars
    where      owner_id = :user_id
    and        acs_permission.permission_p(
                  calendar_id, 
                  :user_id,
                  'calendar_admin'
               ) = 't'
    order by   calendar_name

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/calendar/www/admin/index-oracle.xql}
dbqd.calendar.www.admin.index.calendar_list {dbqd.calendar.www.admin.index.calendar_list {
      
    select     calendar_id, 
               calendar_name
    from       calendars
    where      owner_id = :user_id
    and        acs_permission__permission_p(
                  calendar_id, 
                  :user_id,
                  'calendar_admin'
               ) = 't'
    order by   calendar_name

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/calendar/www/admin/index-postgresql.xql}
dbqd.calendar.www.admin.one-oracle.get_calendar_audiences {dbqd.calendar.www.admin.one-oracle.get_calendar_audiences {
      
	select    unique(grantee_id) as party_id,
	          acs_object.name(grantee_id) as name
	from      acs_permissions
	where     object_id = :calendar_id	
    
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/calendar/www/admin/one-oracle.xql}
dbqd.calendar.www.admin.one.get_calendar_audiences {dbqd.calendar.www.admin.one.get_calendar_audiences {
      
	select    distinct(grantee_id) as party_id,
	          acs_object__name(grantee_id) as name
	from      acs_permissions
	where     object_id = :calendar_id	
    
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/calendar/www/admin/one-postgresql.xql}
dbqd.calendar.www.cal-options-oracle.get_readable_calendars {dbqd.calendar.www.cal-options-oracle.get_readable_calendars {
      

    select   unique(calendar_id) as calendar_id,
             calendar_name,
             ' ' as checked_p
    from     calendars
    where    acs_permission.permission_p(calendar_id, :user_id, 'calendar_read') = 't'
    and      acs_permission.permission_p(calendar_id, :user_id, 'calendar_show') = 't'
    and      private_p = 'f'

    union 
    
    select  unique(on_which_calendar) as calendar_id,
            calendar.name(on_which_calendar) as calendar_name,
            ' ' as checked_p
    from    cal_items
    where   acs_permission.permission_p(cal_item_id, :user_id, 'cal_item_read') = 't'
    and     calendar.private_p(on_which_calendar) = 'f'

      

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/calendar/www/cal-options-oracle.xql}
dbqd.calendar.www.cal-options.get_readable_calendars {dbqd.calendar.www.cal-options.get_readable_calendars {
      

    select  distinct(calendar_id) as calendar_id,
             calendar_name,
             ' '::varchar as checked_p
    from     calendars
    where    acs_permission__permission_p(calendar_id, :user_id, 'calendar_read') = 't'
    and      acs_permission__permission_p(calendar_id, :user_id, 'calendar_show') = 't'
    and      private_p = 'f'

    union 
    
    select  distinct(on_which_calendar) as calendar_id,
            calendar__name(on_which_calendar) as calendar_name,
            ' '::varchar as checked_p
    from    cal_items
    where   acs_permission__permission_p(cal_item_id, :user_id, 'cal_item_read') = 't'
    and     calendar__private_p(on_which_calendar) = 'f'

      

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/calendar/www/cal-options-postgresql.xql}
dbqd.calendar.www.view-list-display-oracle.select_list_items {dbqd.calendar.www.view-list-display-oracle.select_list_items {
	select to_char(start_date, 'YYYY-MM-DD HH24:MI:SS') as ansi_start_date,
         to_char(end_date, 'YYYY-MM-DD HH24:MI:SS') as ansi_end_date,
         to_char(sysdate, 'YYYY-MM-DD HH24:MI:SS') as ansi_today,
         nvl(e.name, a.name) as name,
         nvl(e.status_summary, a.status_summary) as status_summary,
         e.event_id as item_id,
         recurrence_id,
         (select type from cal_item_types where item_type_id= ci.item_type_id) as item_type,	 
         cals.calendar_id,
	 cals.calendar_name
from     acs_activities a,
         acs_events e,
         timespans s,
         time_intervals t,
         cal_items ci,
         calendars cals
where    e.timespan_id = s.timespan_id
and      s.interval_id = t.interval_id
and      e.activity_id = a.activity_id
and      ci.cal_item_id= e.event_id
and      (start_date > to_date(:start_date,:date_format) or :start_date is null) and
         (start_date < to_date(:end_date,:date_format) or :end_date is null)
and      cals.calendar_id = ci.on_which_calendar
$calendars_clause
order by $sort_by	
} {} {} {oracle 8.1.6} c:/web/openacs-4/packages/calendar/www/view-list-display-oracle.xql}
dbqd.calendar.www.view-list-display.select_list_items {dbqd.calendar.www.view-list-display.select_list_items {
	select to_char(start_date, 'YYYY-MM-DD HH24:MI:SS') as ansi_start_date,
         to_char(end_date, 'YYYY-MM-DD HH24:MI:SS') as ansi_end_date,
         to_char(now(), 'YYYY-MM-DD HH24:MI:SS') as ansi_today,
         coalesce(e.name, a.name) as name,
         coalesce(e.status_summary, a.status_summary) as status_summary,
         e.event_id as item_id,
         recurrence_id,
         (select type from cal_item_types where item_type_id= ci.item_type_id)
         as item_type,	 
         cals.calendar_id,
	 cals.calendar_name
from     acs_activities a,
         acs_events e,
         timespans s,
         time_intervals t,
         cal_items ci,
         calendars cals
where    e.timespan_id = s.timespan_id
and      s.interval_id = t.interval_id
and      e.activity_id = a.activity_id
and      ci.cal_item_id= e.event_id
and      (start_date > to_date(:start_date,:date_format) or :start_date is null) and
         (start_date < to_date(:end_date,:date_format) or :end_date is null)
and      cals.calendar_id = ci.on_which_calendar
$calendars_clause
order by $sort_by

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/calendar/www/view-list-display-postgresql.xql}
dbqd.calendar.www.view-month-display-oracle.select_monthly_items {dbqd.calendar.www.view-month-display-oracle.select_monthly_items {
	select   to_char(start_date, :ansi_date_format) as ansi_start_date,
                 to_char(end_date, :ansi_date_format) as ansi_end_date,
	         nvl(e.name, a.name) as name,
	         nvl(e.description, a.description) as description,
                 nvl(e.status_summary, a.status_summary) as status_summary,
	         e.event_id as item_id,
		 cals.calendar_id,
		 cals.calendar_name
	from     acs_activities a,
	         acs_events e,
	         timespans s,
	         time_intervals t,
                 cal_items ci,
                 calendars cals
	where    e.timespan_id = s.timespan_id
	and      s.interval_id = t.interval_id
	and      e.activity_id = a.activity_id
        and      start_date between  to_date(:first_date_of_month_system, :ansi_date_format) 
        and      to_date(:last_date_in_month_system, :ansi_date_format)
        and      cals.calendar_id = ci.on_which_calendar
	and      e.event_id = ci.cal_item_id
	$calendars_clause
        order by ansi_start_date, ansi_end_date
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/calendar/www/view-month-display-oracle.xql}
dbqd.calendar.www.view-month-display.select_monthly_items {dbqd.calendar.www.view-month-display.select_monthly_items {
	select   to_char(start_date, :ansi_date_format) as ansi_start_date,
                 to_char(end_date, :ansi_date_format) as ansi_end_date,
	         coalesce(e.name, a.name) as name,
	         coalesce(e.description, a.description) as description,
                 coalesce(e.status_summary, a.status_summary) as status_summary,
	         e.event_id as item_id,
		 cals.calendar_id,
		 cals.calendar_name
	from     acs_activities a,
	         acs_events e,
	         timespans s,
	         time_intervals t,
                 cal_items ci,
                 calendars cals
	where    e.timespan_id = s.timespan_id
	and      s.interval_id = t.interval_id
	and      e.activity_id = a.activity_id
        and      start_date between  to_timestamp(:first_date_of_month_system, :ansi_date_format) 
        and      to_timestamp(:last_date_in_month_system, :ansi_date_format)
        and      cals.calendar_id = ci.on_which_calendar
	and      e.event_id = ci.cal_item_id
	$calendars_clause
        order by ansi_start_date, ansi_end_date
} {} {} {postgresql 7.1} c:/web/openacs-4/packages/calendar/www/view-month-display-postgresql.xql}
dbqd.calendar.www.view-one-day-display-oracle.select_day_items {dbqd.calendar.www.view-one-day-display-oracle.select_day_items {
	select nvl(e.name, a.name) as name,
         nvl(e.status_summary, a.status_summary) as status_summary,
         e.event_id as item_id,
         (select type from cal_item_types where item_type_id= ci.item_type_id) as item_type,
	 cals.calendar_id,
	 cals.calendar_name
from     acs_activities a,
         acs_events e,
         timespans s,
         time_intervals t,
         cal_items ci,
         calendars cals
where    e.timespan_id = s.timespan_id
and      s.interval_id = t.interval_id
and      e.activity_id = a.activity_id
and      start_date between
         to_date(:current_date_system,:ansi_date_format) and
         (to_date(:current_date_system,:ansi_date_format) + (24 - 1/3600)/24)
and      ci.cal_item_id = e.event_id
and      to_char(start_date, 'HH24:MI') = '00:00'
and      to_char(end_date, 'HH24:MI') = '00:00'
and      cals.calendar_id = ci.on_which_calendar
and      e.event_id = ci.cal_item_id
$calendars_clause
} {} {} {oracle 8.1.6} c:/web/openacs-4/packages/calendar/www/view-one-day-display-oracle.xql}
dbqd.calendar.www.view-one-day-display-oracle.select_day_items_with_time {dbqd.calendar.www.view-one-day-display-oracle.select_day_items_with_time {
	select to_char(start_date, :ansi_date_format) as ansi_start_date,
         to_char(end_date, :ansi_date_format) as ansi_end_date,
         nvl(e.name, a.name) as name,
         nvl(e.status_summary, a.status_summary) as status_summary,
         e.event_id as item_id,
         (select type from cal_item_types where item_type_id= ci.item_type_id) as item_type,
	 cals.calendar_id,
	 cals.calendar_name
from     acs_activities a,
         acs_events e,
         timespans s,
         time_intervals t,
         cal_items ci,
         calendars cals
where    e.timespan_id = s.timespan_id
and      s.interval_id = t.interval_id
and      e.activity_id = a.activity_id
and      start_date between
         to_date(:current_date_system,:ansi_date_format) and
         (to_date(:current_date_system,:ansi_date_format) + (:end_display_hour - 1/3600)/:end_display_hour)
and      ci.cal_item_id = e.event_id
and      (to_char(start_date, 'HH24:MI') <> '00:00' or
          to_char(end_date, 'HH24:MI') <> '00:00')
and      cals.calendar_id = ci.on_which_calendar
and      e.event_id = ci.cal_item_id
$calendars_clause
order by to_char(start_date,'HH24')
} {} {} {oracle 8.1.6} c:/web/openacs-4/packages/calendar/www/view-one-day-display-oracle.xql}
dbqd.calendar.www.view-one-day-display-oracle.select_day_info {dbqd.calendar.www.view-one-day-display-oracle.select_day_info {
select   to_char(to_date(:current_date, 'yyyy-mm-dd'), 'Day, DD Month YYYY') 
as day_of_the_week,
to_char((to_date(:current_date, 'yyyy-mm-dd') - 1), 'yyyy-mm-dd')
as yesterday,
to_char((to_date(:current_date, 'yyyy-mm-dd') + 1), 'yyyy-mm-dd')
as tomorrow
from     dual
} {} {} {oracle 8.1.6} c:/web/openacs-4/packages/calendar/www/view-one-day-display-oracle.xql}
dbqd.calendar.www.view-one-day-display.select_day_items {dbqd.calendar.www.view-one-day-display.select_day_items {
	select coalesce(e.name, a.name) as name,
         coalesce(e.status_summary, a.status_summary) as status_summary,
         e.event_id as item_id,
         (select type from cal_item_types where item_type_id= ci.item_type_id) as item_type,
	 cals.calendar_id,
	 cals.calendar_name
from     acs_activities a,
         acs_events e,
         timespans s,
         time_intervals t,
         cal_items ci,
         calendars cals
where    e.timespan_id = s.timespan_id
and      s.interval_id = t.interval_id
and      e.activity_id = a.activity_id
and      start_date between
         to_date(:current_date_system,:ansi_date_format) and
         to_date(:current_date_system,:ansi_date_format) + cast('23 hours 59 minutes 59 seconds' as interval)
and      ci.cal_item_id= e.event_id
and      to_char(start_date, 'HH24:MI') = '00:00'
and      to_char(end_date, 'HH24:MI') = '00:00'
and      cals.calendar_id = ci.on_which_calendar
and      e.event_id = ci.cal_item_id
$calendars_clause
} {} {} {postgresql 7.1} c:/web/openacs-4/packages/calendar/www/view-one-day-display-postgresql.xql}
dbqd.calendar.www.view-one-day-display.select_day_items_with_time {dbqd.calendar.www.view-one-day-display.select_day_items_with_time {
	select to_char(start_date, :ansi_date_format) as ansi_start_date,
         to_char(end_date, :ansi_date_format) as ansi_end_date,
         coalesce(e.name, a.name) as name,
         coalesce(e.status_summary, a.status_summary) as status_summary,
         e.event_id as item_id,
         (select type from cal_item_types where item_type_id= ci.item_type_id) as item_type,
	 cals.calendar_id,
	 cals.calendar_name
from     acs_activities a,
         acs_events e,
         timespans s,
         time_intervals t,
         cal_items ci,
         calendars cals
where    e.timespan_id = s.timespan_id
and      s.interval_id = t.interval_id
and      e.activity_id = a.activity_id
and      start_date between
         to_date(:current_date_system,:ansi_date_format) and
         to_date(:current_date_system,:ansi_date_format) + cast('23 hours 59 minutes 59 seconds' as interval)
and      ci.cal_item_id= e.event_id
and      (to_char(start_date, 'HH24:MI') <> '00:00' or
          to_char(end_date, 'HH24:MI') <> '00:00')
and      cals.calendar_id = ci.on_which_calendar
and      e.event_id = ci.cal_item_id
$calendars_clause
order by to_char(start_date,'HH24')
} {} {} {postgresql 7.1} c:/web/openacs-4/packages/calendar/www/view-one-day-display-postgresql.xql}
dbqd.calendar.www.view-one-day-display.select_day_info {dbqd.calendar.www.view-one-day-display.select_day_info {
select   to_char(to_date(:current_date, 'yyyy-mm-dd'), 'Day, DD Month YYYY') 
as day_of_the_week,
to_char(to_date(:current_date, 'yyyy-mm-dd') - cast('1 day' as interval), 'yyyy-mm-dd')
as yesterday,
to_char(to_date(:current_date, 'yyyy-mm-dd') + cast('1 day' as interval), 'yyyy-mm-dd')
as tomorrow
from     dual
} {} {} {postgresql 7.1} c:/web/openacs-4/packages/calendar/www/view-one-day-display-postgresql.xql}
dbqd.calendar.www.view-week-display-oracle.select_weekday_info {dbqd.calendar.www.view-week-display-oracle.select_weekday_info {
        select   to_char(to_date(:start_date, 'yyyy-mm-dd'), 'D') 
        as       day_of_the_week,
        to_char(next_day(to_date(:start_date, 'yyyy-mm-dd')-7, :first_us_weekday)) 
        as       first_weekday_of_the_week,
        to_char(next_day(to_date(:start_date, 'yyyy-mm-dd'), :last_us_weekday)) 
        as       last_weekday_of_the_week
        from dual
} {} {} {oracle 8.1.6} c:/web/openacs-4/packages/calendar/www/view-week-display-oracle.xql}
dbqd.calendar.www.view-week-display-oracle.select_week_items {dbqd.calendar.www.view-week-display-oracle.select_week_items {
select   to_char(start_date, :ansi_date_format) as ansi_start_date,
         to_char(end_date, :ansi_date_format) as ansi_end_date,
         trunc(start_date - to_date(:first_weekday_of_the_week_tz,
         :ansi_date_format)) as day_of_week,
         nvl(e.name, a.name) as name,
         nvl(e.status_summary, a.status_summary) as status_summary,
         e.event_id as item_id,
         (select type from cal_item_types where item_type_id= ci.item_type_id) as item_type,
         cals.calendar_id,
	 cals.calendar_name
from     acs_activities a,
         acs_events e,
         timespans s,
         time_intervals t,
         cal_items ci,
         calendars cals
where    e.timespan_id = s.timespan_id
and      s.interval_id = t.interval_id
and      e.activity_id = a.activity_id
and      start_date between
         to_date(:first_weekday_of_the_week_tz, :ansi_date_format) and
         to_date(:last_weekday_of_the_week_tz, :ansi_date_format)
and      cals.calendar_id = ci.on_which_calendar
and      e.event_id = ci.cal_item_id
$calendars_clause
order by to_char(start_date, 'J'), to_char(start_date,'HH24:MI')
} {} {} {oracle 8.1.6} c:/web/openacs-4/packages/calendar/www/view-week-display-oracle.xql}
dbqd.calendar.www.view-week-display-oracle.select_week_info {dbqd.calendar.www.view-week-display-oracle.select_week_info {
select  to_char(to_date(:start_date, 'YYYY-MM-DD'), 'D') as day_of_the_week, 
next_day(to_date(:start_date, 'YYYY-MM-DD') - 7, :first_us_weekday) as first_weekday_date,
to_char(next_day(to_date(:start_date, 'YYYY-MM-DD') - 7, :first_us_weekday),'J') as first_weekday_julian,
next_day(to_date(:start_date, 'YYYY-MM-DD') - 7, :first_us_weekday) + 6 as last_weekday_date,
to_char(next_day(to_date(:start_date, 'YYYY-MM-DD') - 7, :first_us_weekday) + 6,'J') as last_weekday_julian,
to_char(to_date(:start_date) - 7, 'YYYY-MM-DD') as last_week,
to_char(to_date(:start_date) - 7, 'Month DD, YYYY') as last_week_pretty,
to_char(to_date(:start_date) + 7, 'YYYY-MM-DD') as next_week,
to_char(to_date(:start_date) + 7, 'Month DD, YYYY') as next_week_pretty
from dual
} {} {} {oracle 8.1.6} c:/web/openacs-4/packages/calendar/www/view-week-display-oracle.xql}
dbqd.calendar.www.view-week-display.select_weekday_info {dbqd.calendar.www.view-week-display.select_weekday_info {
        select   to_char(to_date(:start_date, 'YYYY-MM-DD'), 'D') 
        as       day_of_the_week,
        to_char(next_day(to_date(:start_date, 'YYYY-MM-DD')- '1 week'::interval, :first_us_weekday), 'YYYY-MM-DD')
        as       first_weekday_of_the_week,
        to_char(next_day(to_date(:start_date, 'YYYY-MM-DD'), :last_us_weekday), 'YYYY-MM-DD')
        as       last_weekday_of_the_week
        from     dual
} {} {} {postgresql 7.1} c:/web/openacs-4/packages/calendar/www/view-week-display-postgresql.xql}
dbqd.calendar.www.view-week-display.select_week_items {dbqd.calendar.www.view-week-display.select_week_items {
select   to_char(start_date, :ansi_date_format) as ansi_start_date,
         to_char(end_date, :ansi_date_format) as ansi_end_date,
         coalesce(e.name, a.name) as name,
         coalesce(e.status_summary, a.status_summary) as status_summary,
         e.event_id as item_id,
         (to_date(start_date,:ansi_date_format)  - to_date(:first_weekday_of_the_week_tz,
         :ansi_date_format)) as day_of_week,
         (select type from cal_item_types where item_type_id= cal_items.item_type_id) as item_type,
         cals.calendar_id,
	 cals.calendar_name
from     acs_activities a,
         acs_events e,
         timespans s,
         time_intervals t,
         cal_items ci,
         calendars cals
where    e.timespan_id = s.timespan_id
and      s.interval_id = t.interval_id
and      e.activity_id = a.activity_id
and      start_date between
         to_date(:first_weekday_of_the_week_tz, :ansi_date_format) and
         to_date(:last_weekday_of_the_week_tz, :ansi_date_format)
and      cals.calendar_id = ci.on_which_calendar
and      e.event_id = ci.cal_item_id
$calendars_clause
order by to_char(start_date, 'J'), to_char(start_date,'HH24:MI')
} {} {} {postgresql 7.1} c:/web/openacs-4/packages/calendar/www/view-week-display-postgresql.xql}
dbqd.calendar.www.view-week-display.select_week_info {dbqd.calendar.www.view-week-display.select_week_info {
select   to_char(to_date(:start_date, 'YYYY-MM-DD'), 'D') 
as day_of_the_week,
cast(next_day(to_date(:start_date, 'YYYY-MM-DD') - cast('7 days' as interval), :first_us_weekday) as date)
as first_weekday_date,
to_char(next_day(to_date(:start_date, 'YYYY-MM-DD') - cast('7 days' as interval), :first_us_weekday),'J')
as first_weekday_julian,
cast(next_day(to_date(:start_date, 'YYYY-MM-DD') - cast('7 days' as interval), :first_us_weekday) + cast('6 days' as interval) as date)
as last_weekday_date,
to_char(next_day(to_date(:start_date, 'YYYY-MM-DD') - cast('7 days' as interval), :first_us_weekday) + cast('6 days' as interval),'J') 
as last_weekday_julian,
cast(:start_date::timestamptz - cast('7 days' as interval) as date) as last_week,
to_char(:start_date::timestamptz - cast('7 days' as interval), 'Month DD, YYYY') as last_week_pretty,
cast(:start_date::timestamptz + cast('7 days' as interval) as date) as next_week,
to_char(:start_date::timestamptz + cast('7 days' as interval), 'Month DD, YYYY') as next_week_pretty
from     dual
} {} {} {postgresql 7.1} c:/web/openacs-4/packages/calendar/www/view-week-display-postgresql.xql}
dbqd.categories.tcl.categories-procs-oracle.category::add.insert_category {dbqd.categories.tcl.categories-procs-oracle.category::add.insert_category {
      
		begin
		:1 := category.new (
				    category_id   => :category_id,
				    locale        => :locale,
				    name          => :name,
				    description   => :description,
				    tree_id       => :tree_id,
				    parent_id     => :parent_id,
				    creation_user => :user_id,
				    creation_ip   => :creation_ip
				    );
		end;
	    
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/categories/tcl/categories-procs-oracle.xql}
dbqd.categories.tcl.categories-procs-oracle.category::add.insert_default_category {dbqd.categories.tcl.categories-procs-oracle.category::add.insert_default_category {
      
		    begin
		    category.new_translation (
					      category_id    => :category_id,
					      locale         => :default_locale,
					      name           => :name,
					      description    => :description,
					      modifying_user => :user_id,
					      modifying_ip   => :creation_ip
					      );
		    end;
		
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/categories/tcl/categories-procs-oracle.xql}
dbqd.categories.tcl.categories-procs-oracle.category::update.insert_category_translation {dbqd.categories.tcl.categories-procs-oracle.category::update.insert_category_translation {
      
		    begin
		    category.new_translation (
					      category_id    => :category_id,
					      locale         => :locale,
					      name           => :name,
					      description    => :description,
					      modifying_user => :user_id,
					      modifying_ip   => :modifying_ip
					      );
		    end;
		
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/categories/tcl/categories-procs-oracle.xql}
dbqd.categories.tcl.categories-procs-oracle.category::update.update_category_translation {dbqd.categories.tcl.categories-procs-oracle.category::update.update_category_translation {
      
		    begin
		    category.edit (
				   category_id    => :category_id,
				   locale         => :locale,
				   name           => :name,
				   description    => :description,
				   modifying_user => :user_id,
				   modifying_ip   => :modifying_ip
				   );
		    end;
		
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/categories/tcl/categories-procs-oracle.xql}
dbqd.categories.tcl.categories-procs-oracle.category::delete.delete_category {dbqd.categories.tcl.categories-procs-oracle.category::delete.delete_category {
      
	    begin
	    category.del ( :category_id );
	    end;
	
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/categories/tcl/categories-procs-oracle.xql}
dbqd.categories.tcl.categories-procs-oracle.category::change_parent.change_parent_category {dbqd.categories.tcl.categories-procs-oracle.category::change_parent.change_parent_category {
      
	    begin
	    category.change_parent (
				    category_id  => :category_id,
				    tree_id      => :tree_id,
				    parent_id    => :parent_id
				    );
	    end;
	
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/categories/tcl/categories-procs-oracle.xql}
dbqd.categories.tcl.categories-procs-oracle.category::phase_in.phase_in {dbqd.categories.tcl.categories-procs-oracle.category::phase_in.phase_in {
      
	    begin
	    category.phase_in(:category_id);
	    end;
	
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/categories/tcl/categories-procs-oracle.xql}
dbqd.categories.tcl.categories-procs-oracle.category::phase_out.phase_out {dbqd.categories.tcl.categories-procs-oracle.category::phase_out.phase_out {
      
	    begin
	    category.phase_out(:category_id);
	    end;
	
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/categories/tcl/categories-procs-oracle.xql}
dbqd.categories.tcl.categories-procs-oracle.category::get_object_context.object_name {dbqd.categories.tcl.categories-procs-oracle.category::get_object_context.object_name {
      select acs_object.name(:object_id) from dual
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/categories/tcl/categories-procs-oracle.xql}
dbqd.categories.tcl.categories-procs.category::add.insert_category {dbqd.categories.tcl.categories-procs.category::add.insert_category {
		select category__new (
				    :category_id,
				    :tree_id,
				    :locale,
				    :name,
				    :description,
				    :parent_id,
                                    :deprecated_p,
                                    current_timestamp,
				    :user_id,
				    :creation_ip
				    )
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/categories/tcl/categories-procs-postgresql.xql}
dbqd.categories.tcl.categories-procs.category::add.insert_default_category {dbqd.categories.tcl.categories-procs.category::add.insert_default_category {
		    select category__new_translation (
					      :category_id,
					      :default_locale,
					      :name,
					      :description,
                                              current_timestamp,
					      :user_id,
					      :creation_ip
					      )
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/categories/tcl/categories-procs-postgresql.xql}
dbqd.categories.tcl.categories-procs.category::update.insert_category_translation {dbqd.categories.tcl.categories-procs.category::update.insert_category_translation {
		    select category__new_translation (
					      :category_id,
					      :locale,
					      :name,
					      :description,
                                              current_timestamp,
					      :user_id,
					      :modifying_ip
					      )
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/categories/tcl/categories-procs-postgresql.xql}
dbqd.categories.tcl.categories-procs.category::update.update_category_translation {dbqd.categories.tcl.categories-procs.category::update.update_category_translation {
		    select category__edit (
				   :category_id,
				   :locale,
				   :name,
				   :description,
                                   current_timestamp,
				   :user_id,
				   :modifying_ip
				   )
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/categories/tcl/categories-procs-postgresql.xql}
dbqd.categories.tcl.categories-procs.category::delete.delete_category {dbqd.categories.tcl.categories-procs.category::delete.delete_category {
	    select category__del ( :category_id )
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/categories/tcl/categories-procs-postgresql.xql}
dbqd.categories.tcl.categories-procs.category::change_parent.change_parent_category {dbqd.categories.tcl.categories-procs.category::change_parent.change_parent_category {
	    select category__change_parent (
				    :category_id,
				    :tree_id,
				    :parent_id
				    )
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/categories/tcl/categories-procs-postgresql.xql}
dbqd.categories.tcl.categories-procs.category::phase_in.phase_in {dbqd.categories.tcl.categories-procs.category::phase_in.phase_in {
	    select category__phase_in(:category_id)
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/categories/tcl/categories-procs-postgresql.xql}
dbqd.categories.tcl.categories-procs.category::phase_out.phase_out {dbqd.categories.tcl.categories-procs.category::phase_out.phase_out {
	    select category__phase_out(:category_id)
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/categories/tcl/categories-procs-postgresql.xql}
dbqd.categories.tcl.categories-procs.category::get_object_context.object_name {dbqd.categories.tcl.categories-procs.category::get_object_context.object_name {
            select acs_object__name(:object_id) 
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/categories/tcl/categories-procs-postgresql.xql}
dbqd.categories.tcl.categories-procs.category::update.check_category_existence {dbqd.categories.tcl.categories-procs.category::update.check_category_existence {
      
		select 1
		from category_translations
		where category_id = :category_id
		and locale = :locale
	    
      } {} {} {} c:/web/openacs-4/packages/categories/tcl/categories-procs.xql}
dbqd.categories.tcl.categories-procs.category::map_object.remove_mapped_categories {dbqd.categories.tcl.categories-procs.category::map_object.remove_mapped_categories {
      
		    delete from category_object_map
		    where object_id = :object_id
		
      } {} {} {} c:/web/openacs-4/packages/categories/tcl/categories-procs.xql}
dbqd.categories.tcl.categories-procs.category::map_object.insert_mapped_categories {dbqd.categories.tcl.categories-procs.category::map_object.insert_mapped_categories {
      
			insert into category_object_map (category_id, object_id)
			values (:category_id, :object_id)
		    
      } {} {} {} c:/web/openacs-4/packages/categories/tcl/categories-procs.xql}
dbqd.categories.tcl.categories-procs.category::get_mapped_categories.get_mapped_categories {dbqd.categories.tcl.categories-procs.category::get_mapped_categories.get_mapped_categories {
      
	    select category_id
	    from category_object_map
	    where object_id = :object_id
	
      } {} {} {} c:/web/openacs-4/packages/categories/tcl/categories-procs.xql}
dbqd.categories.tcl.categories-procs.category::reset_translation_cache.reset_translation_cache {dbqd.categories.tcl.categories-procs.category::reset_translation_cache.reset_translation_cache {
      
	    select category_id, locale, name
	    from category_translations
	    order by category_id, locale
	
      } {} {} {} c:/web/openacs-4/packages/categories/tcl/categories-procs.xql}
dbqd.categories.tcl.categories-procs.category::flush_translation_cache.flush_translation_cache {dbqd.categories.tcl.categories-procs.category::flush_translation_cache.flush_translation_cache {
      
	    select locale, name
	    from category_translations
	    where category_id = :category_id
	    order by locale
	
      } {} {} {} c:/web/openacs-4/packages/categories/tcl/categories-procs.xql}
dbqd.categories.tcl.categories-procs.category::pageurl.get_tree_id_for_pageurl {dbqd.categories.tcl.categories-procs.category::pageurl.get_tree_id_for_pageurl {
      
	    select tree_id
	    from categories
	    where category_id = :object_id
	
      } {} {} {} c:/web/openacs-4/packages/categories/tcl/categories-procs.xql}
dbqd.categories.tcl.category-trees-procs-oracle.category_tree::map.map_tree {dbqd.categories.tcl.category-trees-procs-oracle.category_tree::map.map_tree {
      
	    begin
	    category_tree.map(
			      object_id           => :object_id,
			      subtree_category_id => :subtree_category_id,
			      tree_id             => :tree_id);
	    end;
	
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/categories/tcl/category-trees-procs-oracle.xql}
dbqd.categories.tcl.category-trees-procs-oracle.category_tree::unmap.unmap_tree {dbqd.categories.tcl.category-trees-procs-oracle.category_tree::unmap.unmap_tree {
      
	    begin
	    category_tree.unmap(
				object_id => :object_id,
				tree_id   => :tree_id);
	    end;
	
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/categories/tcl/category-trees-procs-oracle.xql}
dbqd.categories.tcl.category-trees-procs-oracle.category_tree::copy.copy_tree {dbqd.categories.tcl.category-trees-procs-oracle.category_tree::copy.copy_tree {
      
	    begin
	    category_tree.copy(
			       source_tree         => :source_tree,
			       dest_tree           => :dest_tree
			       );
	    end;
	
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/categories/tcl/category-trees-procs-oracle.xql}
dbqd.categories.tcl.category-trees-procs-oracle.category_tree::add.insert_tree {dbqd.categories.tcl.category-trees-procs-oracle.category_tree::add.insert_tree {
      
		begin
		:1 := category_tree.new (
					 tree_id       => :tree_id,
					 tree_name     => :name,
					 description   => :description,
					 locale        => :locale,
					 creation_user => :user_id,
					 creation_ip   => :creation_ip,
					 context_id    => :context_id
					 );
		end;
	    
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/categories/tcl/category-trees-procs-oracle.xql}
dbqd.categories.tcl.category-trees-procs-oracle.category_tree::add.insert_default_tree {dbqd.categories.tcl.category-trees-procs-oracle.category_tree::add.insert_default_tree {
      
		    begin
		    category_tree.new_translation (
						   tree_id        => :tree_id,
						   tree_name      => :name,
						   description    => :description,
						   locale         => :default_locale,
						   modifying_user => :user_id,
						   modifying_ip   => :creation_ip
						   );
		    end;
		
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/categories/tcl/category-trees-procs-oracle.xql}
dbqd.categories.tcl.category-trees-procs-oracle.category_tree::update.insert_tree_translation {dbqd.categories.tcl.category-trees-procs-oracle.category_tree::update.insert_tree_translation {
      
		    begin
		    category_tree.new_translation (
						   tree_id        => :tree_id,
						   tree_name      => :name,
						   description    => :description,
						   locale         => :locale,
						   modifying_user => :user_id,
						   modifying_ip   => :modifying_ip
						   );
		    end;
		
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/categories/tcl/category-trees-procs-oracle.xql}
dbqd.categories.tcl.category-trees-procs-oracle.category_tree::update.update_tree_translation {dbqd.categories.tcl.category-trees-procs-oracle.category_tree::update.update_tree_translation {
      
		    begin
		    category_tree.edit (
					tree_id        => :tree_id,
					tree_name      => :name,
					description    => :description,
					locale         => :locale,
					modifying_user => :user_id,
					modifying_ip   => :modifying_ip
					);
		    end;
		
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/categories/tcl/category-trees-procs-oracle.xql}
dbqd.categories.tcl.category-trees-procs-oracle.category_tree::delete.delete_tree {dbqd.categories.tcl.category-trees-procs-oracle.category_tree::delete.delete_tree {
      
	    begin
	    category_tree.del ( :tree_id );
	    end;
	
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/categories/tcl/category-trees-procs-oracle.xql}
dbqd.categories.tcl.category-trees-procs-oracle.category_tree::usage.category_tree_usage {dbqd.categories.tcl.category-trees-procs-oracle.category_tree::usage.category_tree_usage {
      
	    select t.pretty_plural, n.object_id, n.object_name, p.package_id,
	           p.instance_name,
	           acs_permission.permission_p(n.object_id, :user_id, 'read') as read_p
	    from category_tree_map m, acs_named_objects n,
	         apm_packages p, apm_package_types t
	    where m.tree_id = :tree_id
	    and n.object_id = m.object_id
	    and p.package_id = n.package_id
	    and t.package_key = p.package_key
	
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/categories/tcl/category-trees-procs-oracle.xql}
dbqd.categories.tcl.category-trees-procs.category_tree::map.map_tree {dbqd.categories.tcl.category-trees-procs.category_tree::map.map_tree {
	    select category_tree__map(
			      :object_id,
			      :tree_id,
			      :subtree_category_id)
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/categories/tcl/category-trees-procs-postgresql.xql}
dbqd.categories.tcl.category-trees-procs.category_tree::unmap.unmap_tree {dbqd.categories.tcl.category-trees-procs.category_tree::unmap.unmap_tree {
	    select category_tree__unmap(:object_id,:tree_id)
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/categories/tcl/category-trees-procs-postgresql.xql}
dbqd.categories.tcl.category-trees-procs.category_tree::copy.copy_tree {dbqd.categories.tcl.category-trees-procs.category_tree::copy.copy_tree {
	    select category_tree__copy(:source_tree,:dest_tree)
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/categories/tcl/category-trees-procs-postgresql.xql}
dbqd.categories.tcl.category-trees-procs.category_tree::add.insert_tree {dbqd.categories.tcl.category-trees-procs.category_tree::add.insert_tree {
        	select category_tree__new (
					 :tree_id,
					 :locale,
					 :name,
					 :description,
                                         :site_wide_p,
                                         current_timestamp,
					 :user_id,
					 :creation_ip,
					 :context_id
					 )
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/categories/tcl/category-trees-procs-postgresql.xql}
dbqd.categories.tcl.category-trees-procs.category_tree::add.insert_default_tree {dbqd.categories.tcl.category-trees-procs.category_tree::add.insert_default_tree {
		    select category_tree__new_translation (
						   :tree_id,
						   :default_locale,
						   :name,
						   :description,
                                                   current_timestamp,
						   :user_id,
						   :creation_ip
						   )
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/categories/tcl/category-trees-procs-postgresql.xql}
dbqd.categories.tcl.category-trees-procs.category_tree::update.insert_tree_translation {dbqd.categories.tcl.category-trees-procs.category_tree::update.insert_tree_translation {
		    select category_tree__new_translation (
						   :tree_id,
						   :locale,
						   :name,
						   :description,
                                                   current_timestamp,
						   :user_id,
						   :modifying_ip
						   )
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/categories/tcl/category-trees-procs-postgresql.xql}
dbqd.categories.tcl.category-trees-procs.category_tree::update.update_tree_translation {dbqd.categories.tcl.category-trees-procs.category_tree::update.update_tree_translation {
		    select category_tree__edit (
					:tree_id,
					:locale,
					:name,
					:description,
                                        :site_wide_p,
                                        current_timestamp,
					:user_id,
					:modifying_ip
					)
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/categories/tcl/category-trees-procs-postgresql.xql}
dbqd.categories.tcl.category-trees-procs.category_tree::delete.delete_tree {dbqd.categories.tcl.category-trees-procs.category_tree::delete.delete_tree {
        	    select category_tree__del ( :tree_id )
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/categories/tcl/category-trees-procs-postgresql.xql}
dbqd.categories.tcl.category-trees-procs.category_tree::usage.category_tree_usage {dbqd.categories.tcl.category-trees-procs.category_tree::usage.category_tree_usage {
	    select t.pretty_plural, n.object_id, n.object_name, p.package_id,
	           p.instance_name,
	           acs_permission__permission_p(n.object_id, :user_id, 'read') as read_p
	    from category_tree_map m, acs_named_objects n,
	         apm_packages p, apm_package_types t
	    where m.tree_id = :tree_id
	    and n.object_id = m.object_id
	    and p.package_id = n.package_id
	    and t.package_key = p.package_key
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/categories/tcl/category-trees-procs-postgresql.xql}
dbqd.categories.tcl.category-trees-procs.category_tree::get_data.get_tree_data {dbqd.categories.tcl.category-trees-procs.category_tree::get_data.get_tree_data {
      
	    select site_wide_p
	    from category_trees
	    where tree_id = :tree_id
	
      } {} {} {} c:/web/openacs-4/packages/categories/tcl/category-trees-procs.xql}
dbqd.categories.tcl.category-trees-procs.category_tree::update.check_tree_existence {dbqd.categories.tcl.category-trees-procs.category_tree::update.check_tree_existence {
      
		select 1
		from category_tree_translations
		where tree_id = :tree_id
		and locale = :locale
	    
      } {} {} {} c:/web/openacs-4/packages/categories/tcl/category-trees-procs.xql}
dbqd.categories.tcl.category-trees-procs.category_tree::get_mapped_trees.get_mapped_trees {dbqd.categories.tcl.category-trees-procs.category_tree::get_mapped_trees.get_mapped_trees {
      
	    select tree_id, subtree_category_id
	    from category_tree_map
	    where object_id = :object_id
	
      } {} {} {} c:/web/openacs-4/packages/categories/tcl/category-trees-procs.xql}
dbqd.categories.tcl.category-trees-procs.category_tree::reset_cache.reset_cache {dbqd.categories.tcl.category-trees-procs.category_tree::reset_cache.reset_cache {
      
	    select tree_id, category_id, left_ind, right_ind,
	           case when deprecated_p = 'f' then '' else '1' end as deprecated_p
	    from categories
	    order by tree_id, left_ind
	
      } {} {} {} c:/web/openacs-4/packages/categories/tcl/category-trees-procs.xql}
dbqd.categories.tcl.category-trees-procs.category_tree::flush_cache.flush_cache {dbqd.categories.tcl.category-trees-procs.category_tree::flush_cache.flush_cache {
      
	    select category_id, left_ind, right_ind,
	           case when deprecated_p = 'f' then '' else '1' end as deprecated_p
	    from categories
	    where tree_id = :tree_id
	    order by left_ind
	
      } {} {} {} c:/web/openacs-4/packages/categories/tcl/category-trees-procs.xql}
dbqd.categories.tcl.category-trees-procs.category_tree::reset_translation_cache.reset_translation_cache {dbqd.categories.tcl.category-trees-procs.category_tree::reset_translation_cache.reset_translation_cache {
      
	    select tree_id, locale, name, description
	    from category_tree_translations
	    order by tree_id, locale
	
      } {} {} {} c:/web/openacs-4/packages/categories/tcl/category-trees-procs.xql}
dbqd.categories.tcl.category-trees-procs.category_tree::flush_translation_cache.flush_translation_cache {dbqd.categories.tcl.category-trees-procs.category_tree::flush_translation_cache.flush_translation_cache {
      
	    select locale, name, description
	    from category_tree_translations
	    where tree_id = :tree_id
	    order by locale
	
      } {} {} {} c:/web/openacs-4/packages/categories/tcl/category-trees-procs.xql}
dbqd.categories.www.cadmin.category-delete-oracle.check_mapped_objects {dbqd.categories.www.cadmin.category-delete-oracle.check_mapped_objects {
      
    select case when count(*) = 0 then 0 else 1 end from dual
    where exists (select 1 from category_object_map
                  where category_id = :category_id)

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/categories/www/cadmin/category-delete-oracle.xql}
dbqd.categories.www.cadmin.category-delete.check_mapped_objects {dbqd.categories.www.cadmin.category-delete.check_mapped_objects {
      
    select case when count(*) = 0 then 0 else 1 end 
    where exists (select 1 from category_object_map
                  where category_id = :category_id)

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/categories/www/cadmin/category-delete-postgresql.xql}
dbqd.categories.www.cadmin.category-form.get_ad_locales {dbqd.categories.www.cadmin.category-form.get_ad_locales {
      
    select label as name, locale as value
    from ad_locales

      } {} {} {} c:/web/openacs-4/packages/categories/www/cadmin/category-form.xql}
dbqd.categories.www.cadmin.category-form.check_translation_existance {dbqd.categories.www.cadmin.category-form.check_translation_existance {
      
	select name, description
	from category_translations
	where category_id = :category_id
	and locale = :locale
    
      } {} {} {} c:/web/openacs-4/packages/categories/www/cadmin/category-form.xql}
dbqd.categories.www.cadmin.category-form.get_default_translation {dbqd.categories.www.cadmin.category-form.get_default_translation {
      
	    select name, description
	    from category_translations
	    where category_id = :category_id
	    and locale = :default_locale
	
      } {} {} {} c:/web/openacs-4/packages/categories/www/cadmin/category-form.xql}
dbqd.categories.www.cadmin.category-set-parent-oracle.subtree {dbqd.categories.www.cadmin.category-set-parent-oracle.subtree {
      
    select /*+INDEX(child categories_left_ix)*/
           child.category_id
    from categories parent, categories child
    where parent.category_id = :category_id
    and child.left_ind >= parent.left_ind
    and child.left_ind <= parent.right_ind
    and child.tree_id = parent.tree_id
    order by child.left_ind

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/categories/www/cadmin/category-set-parent-oracle.xql}
dbqd.categories.www.cadmin.category-set-parent.subtree {dbqd.categories.www.cadmin.category-set-parent.subtree {
    select child.category_id
    from categories parent, categories child
    where parent.category_id = :category_id
    and child.left_ind >= parent.left_ind
    and child.left_ind <= parent.right_ind
    and child.tree_id = parent.tree_id
    order by child.left_ind

      } {} {} {} c:/web/openacs-4/packages/categories/www/cadmin/category-set-parent.xql}
dbqd.categories.www.cadmin.category-usage-oracle.get_category_usages {dbqd.categories.www.cadmin.category-usage-oracle.get_category_usages {
      select n.object_id
      from category_object_map m, acs_named_objects n
      where acs_permission.permission_p(m.object_id, :user_id, 'read') = 't'
      and m.category_id = :category_id
      and n.object_id = m.object_id
    } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/categories/www/cadmin/category-usage-oracle.xql}
dbqd.categories.www.cadmin.category-usage-oracle.get_objects_using_category {dbqd.categories.www.cadmin.category-usage-oracle.get_objects_using_category {
      select r.*
      from (select n.object_id, n.object_name as object_name, o.creation_date,
	           t.pretty_name as package_type, n.package_id, p.instance_name,
	           row_number() over ($order_by_clause) as row_number
	    from acs_objects o, acs_named_objects n, apm_packages p, apm_package_types t,
	    category_object_map m
	    where n.object_id = m.object_id
	    and o.object_id = n.object_id
	    and p.package_id = n.package_id
	    and t.package_key = p.package_key
	    and m.category_id = :category_id
	    and acs_permission.permission_p(m.object_id, :user_id, 'read') = 't'
	    $order_by_clause) r
      where r.row_number between :first_row and :last_row
    } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/categories/www/cadmin/category-usage-oracle.xql}
dbqd.categories.www.cadmin.category-usage.get_category_usages {dbqd.categories.www.cadmin.category-usage.get_category_usages {
      select n.object_id
      from category_object_map m, acs_named_objects n
      where acs_permission__permission_p(m.object_id, :user_id, 'read') = 't'
      and m.category_id = :category_id
      and n.object_id = m.object_id
    } {} {} {postgresql 7.1} c:/web/openacs-4/packages/categories/www/cadmin/category-usage-postgresql.xql}
dbqd.categories.www.cadmin.category-usage.get_objects_using_category {dbqd.categories.www.cadmin.category-usage.get_objects_using_category {
      select n.object_id, n.object_name as object_name, o.creation_date,
	           t.pretty_name as package_type, n.package_id, p.instance_name
        from acs_objects o, acs_named_objects n, apm_packages p, apm_package_types t,
             category_object_map m
       where n.object_id = m.object_id
	 and o.object_id = n.object_id
	 and p.package_id = n.package_id
	 and t.package_key = p.package_key
	 and m.category_id = :category_id
	 and acs_permission__permission_p(m.object_id, :user_id, 'read') = 't'
             $order_by_clause
       limit $last_row offset $first_row
    } {} {} {postgresql 7.1} c:/web/openacs-4/packages/categories/www/cadmin/category-usage-postgresql.xql}
dbqd.categories.www.cadmin.index-oracle.trees {dbqd.categories.www.cadmin.index-oracle.trees {
      
         select tree_id, site_wide_p,
                acs_permission.permission_p(tree_id, :user_id, 'category_tree_write') has_write_p,
                acs_permission.permission_p(tree_id, :user_id, 'category_tree_read') has_read_p
           from category_trees t

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/categories/www/cadmin/index-oracle.xql}
dbqd.categories.www.cadmin.index.trees {dbqd.categories.www.cadmin.index.trees {
      
         select tree_id, site_wide_p,
                acs_permission__permission_p(tree_id, :user_id, 'category_tree_write') as has_write_p,
                acs_permission__permission_p(tree_id, :user_id, 'category_tree_read') as has_read_p
           from category_trees

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/categories/www/cadmin/index-postgresql.xql}
dbqd.categories.www.cadmin.master.get_locales {dbqd.categories.www.cadmin.master.get_locales {
      
    select label, locale
    from ad_locales

      } {} {} {} c:/web/openacs-4/packages/categories/www/cadmin/master.xql}
dbqd.categories.www.cadmin.one-object-oracle.get_unmapped_trees {dbqd.categories.www.cadmin.one-object-oracle.get_unmapped_trees {
      
    select tree_id, site_wide_p,
          acs_permission.permission_p(tree_id, :user_id, 'category_tree_read') has_read_permission  
     from category_trees t
    where not exists (select 1 from category_tree_map m
                       where m.object_id = :object_id
                         and m.tree_id = t.tree_id)
    order by t.tree_id

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/categories/www/cadmin/one-object-oracle.xql}
dbqd.categories.www.cadmin.one-object.get_unmapped_trees {dbqd.categories.www.cadmin.one-object.get_unmapped_trees {
      
    select tree_id, site_wide_p,
          acs_permission__permission_p(tree_id, :user_id, 'category_tree_read') as has_read_permission  
     from category_trees t
    where not exists (select 1 from category_tree_map m
                       where m.object_id = :object_id
                         and m.tree_id = t.tree_id)
    order by t.tree_id

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/categories/www/cadmin/one-object-postgresql.xql}
dbqd.categories.www.cadmin.one-object.get_mapped_trees {dbqd.categories.www.cadmin.one-object.get_mapped_trees {
      
         select t.tree_id, t.site_wide_p, m.subtree_category_id
           from category_trees t, category_tree_map m
          where m.object_id = :object_id
            and m.tree_id = t.tree_id
       order by t.tree_id

      } {} {} {} c:/web/openacs-4/packages/categories/www/cadmin/one-object.xql}
dbqd.categories.www.cadmin.site-wide-status-change.toggle_site_wide_status {dbqd.categories.www.cadmin.site-wide-status-change.toggle_site_wide_status {
      
    update category_trees
    set site_wide_p = case when :action = '1' then 't' else 'f' end
    where tree_id  = :tree_id

      } {} {} {} c:/web/openacs-4/packages/categories/www/cadmin/site-wide-status-change.xql}
dbqd.categories.www.cadmin.tree-copy-oracle.trees_select {dbqd.categories.www.cadmin.tree-copy-oracle.trees_select {
      
    select tree_id as source_tree_id, site_wide_p,
           acs_permission.permission_p(tree_id, :user_id, 'category_tree_read') as has_read_p
    from category_trees
    where tree_id <> :tree_id

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/categories/www/cadmin/tree-copy-oracle.xql}
dbqd.categories.www.cadmin.tree-copy.trees_select {dbqd.categories.www.cadmin.tree-copy.trees_select {
      
    select tree_id as source_tree_id, site_wide_p,
           acs_permission__permission_p(tree_id, :user_id, 'category_tree_read') as has_read_p
    from category_trees
    where tree_id <> :tree_id

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/categories/www/cadmin/tree-copy-postgresql.xql}
dbqd.categories.www.cadmin.tree-delete.get_category_in_use {dbqd.categories.www.cadmin.tree-delete.get_category_in_use {
      
    select category_id
    from categories c
    where c.tree_id = :tree_id
    and exists (select 1 from category_object_map
                 where category_id = c.category_id)

      } {} {} {} c:/web/openacs-4/packages/categories/www/cadmin/tree-delete.xql}
dbqd.categories.www.cadmin.tree-form.get_ad_locales {dbqd.categories.www.cadmin.tree-form.get_ad_locales {
      
    select label as name, locale as value
    from ad_locales

      } {} {} {} c:/web/openacs-4/packages/categories/www/cadmin/tree-form.xql}
dbqd.categories.www.cadmin.tree-update-2.insert_tmp_categories {dbqd.categories.www.cadmin.tree-update-2.insert_tmp_categories {
      
	    insert into category_temp
	    values (:category_id)
	
      } {} {} {} c:/web/openacs-4/packages/categories/www/cadmin/tree-update-2.xql}
dbqd.categories.www.cadmin.tree-update-2.delete_tmp_category_trees {dbqd.categories.www.cadmin.tree-update-2.delete_tmp_category_trees {
            delete from category_temp
      } {} {} {} c:/web/openacs-4/packages/categories/www/cadmin/tree-update-2.xql}
dbqd.categories.www.cadmin.tree-update-2.sort_categories_to_delete {dbqd.categories.www.cadmin.tree-update-2.sort_categories_to_delete {
      
	select c.category_id
	from categories c, category_temp t
	where c.category_id = t.category_id
	order by right_ind-left_ind
    
      } {} {} {} c:/web/openacs-4/packages/categories/www/cadmin/tree-update-2.xql}
dbqd.categories.www.cadmin.tree-update-oracle.get_used_categories {dbqd.categories.www.cadmin.tree-update-oracle.get_used_categories {
      
	    select c.category_id,
	    (select case when count(*) = 0 then 0 else 1 end from dual
	     where exists (select 1 from category_object_map
			   where category_id = c.category_id)) as used_p
	    from categories c, category_temp t
	    where c.category_id = t.category_id
	
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/categories/www/cadmin/tree-update-oracle.xql}
dbqd.categories.www.cadmin.tree-update.get_used_categories {dbqd.categories.www.cadmin.tree-update.get_used_categories {
      
	    select c.category_id,
	    (select case when count(*) = 0 then 0 else 1 end 
	     where exists (select 1 from category_object_map
			   where category_id = c.category_id)) as used_p
	    from categories c, category_temp t
	    where c.category_id = t.category_id
	
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/categories/www/cadmin/tree-update-postgresql.xql}
dbqd.categories.www.cadmin.tree-update.get_tree {dbqd.categories.www.cadmin.tree-update.get_tree {
      
	    select category_id, parent_id
	    from categories
	    where tree_id = :tree_id
	    order by left_ind
	
      } {} {} {} c:/web/openacs-4/packages/categories/www/cadmin/tree-update.xql}
dbqd.categories.www.cadmin.tree-update.reset_category_index {dbqd.categories.www.cadmin.tree-update.reset_category_index {
      
		update categories
		set left_ind = -left_ind,
		right_ind = -right_ind
		where tree_id = :tree_id
	    
      } {} {} {} c:/web/openacs-4/packages/categories/www/cadmin/tree-update.xql}
dbqd.categories.www.cadmin.tree-update.update_category_index {dbqd.categories.www.cadmin.tree-update.update_category_index {
      
		    update categories
		    set left_ind = :left_ind,
		    right_ind = :right_ind
		    where category_id = :category_id
		
      } {} {} {} c:/web/openacs-4/packages/categories/www/cadmin/tree-update.xql}
dbqd.categories.www.cadmin.tree-update.insert_tmp_categories {dbqd.categories.www.cadmin.tree-update.insert_tmp_categories {
      
		insert into category_temp
		values (:category_id)
	    
      } {} {} {} c:/web/openacs-4/packages/categories/www/cadmin/tree-update.xql}
dbqd.categories.www.categories-browse-oracle.get_categorized_objects {dbqd.categories.www.categories-browse-oracle.get_categorized_objects {
      select r.*
      from (select n.object_id, n.object_name as object_name, o.creation_date,
                   t.pretty_name as package_type, n.package_id, p.instance_name,
                   row_number() over ($order_by_clause) as row_number
            from acs_objects o, acs_named_objects n, apm_packages p, apm_package_types t,
                 ($subtree_sql) s
            where n.object_id = s.object_id
            and o.object_id = n.object_id
            and p.package_id = n.package_id
            and t.package_key = p.package_key
            and exists (select 1
                        from acs_object_party_privilege_map oppm
                        where oppm.object_id = n.object_id
                        and oppm.party_id = :user_id
                        and oppm.privilege = 'read')
            $letter_sql
            $package_sql
            $order_by_clause) r
      where r.row_number between :first_row and :last_row
    } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/categories/www/categories-browse-oracle.xql}
dbqd.categories.www.categories-browse.get_categorized_objects {dbqd.categories.www.categories-browse.get_categorized_objects {
      select n.object_id, n.object_name as object_name, o.creation_date,
                   t.pretty_name as package_type, n.package_id, p.instance_name
        from acs_objects o, acs_named_objects n, apm_packages p, apm_package_types t,
             ($subtree_sql) s
       where n.object_id = s.object_id
         and o.object_id = n.object_id
         and p.package_id = n.package_id
         and t.package_key = p.package_key
         and exists (select 1
                       from acs_object_party_privilege_map oppm
                      where oppm.object_id = n.object_id
                        and oppm.party_id = :user_id
                        and oppm.privilege = 'read')
             $letter_sql
             $package_sql
             $order_by_clause
       limit $last_row offset $first_row
    } {} {} {postgresql 7.1} c:/web/openacs-4/packages/categories/www/categories-browse-postgresql.xql}
dbqd.categories.www.categories-browse.insert_tmp_category_trees {dbqd.categories.www.categories-browse.insert_tmp_category_trees {
      insert into category_temp
      values (:tree_id)
    } {} {} {} c:/web/openacs-4/packages/categories/www/categories-browse.xql}
dbqd.categories.www.categories-browse.delete_tmp_category_trees {dbqd.categories.www.categories-browse.delete_tmp_category_trees {
      delete from category_temp
    } {} {} {} c:/web/openacs-4/packages/categories/www/categories-browse.xql}
dbqd.categories.www.categories-browse.check_permissions_on_trees {dbqd.categories.www.categories-browse.check_permissions_on_trees {
      select t.tree_id
      from category_trees t, category_temp tmp
      where (t.site_wide_p = 't'
      or exists (select 1
                 from acs_object_party_privilege_map oppm
                 where oppm.object_id = t.tree_id
                 and oppm.party_id = :user_id
                 and oppm.privilege = 'category_tree_read'))
      and t.tree_id = tmp.category_id
    } {} {} {} c:/web/openacs-4/packages/categories/www/categories-browse.xql}
dbqd.categories.www.categories-browse.other_letter {dbqd.categories.www.categories-browse.other_letter {
      and (upper(n.object_name) < 'A' or upper(n.object_name) > 'Z')
    } {} {} {} c:/web/openacs-4/packages/categories/www/categories-browse.xql}
dbqd.categories.www.categories-browse.regular_letter {dbqd.categories.www.categories-browse.regular_letter {
      and upper(n.object_name) like :bind_letter
    } {} {} {} c:/web/openacs-4/packages/categories/www/categories-browse.xql}
dbqd.categories.www.categories-browse.package_objects {dbqd.categories.www.categories-browse.package_objects {
      and n.package_id = :package_id
    } {} {} {} c:/web/openacs-4/packages/categories/www/categories-browse.xql}
dbqd.categories.www.categories-browse.include_subtree_and {dbqd.categories.www.categories-browse.include_subtree_and {
      select v.object_id
      from (select distinct m.object_id, c.category_id
            from category_object_map m, categories c,
                 categories c_sub, category_temp t
            where c.category_id = t.category_id
            and m.category_id = c_sub.category_id
            and c_sub.tree_id = c.tree_id
            and c_sub.left_ind >= c.left_ind
            and c_sub.left_ind < c.right_ind) v
      group by v.object_id having count(*) = :category_ids_length
    } {} {} {} c:/web/openacs-4/packages/categories/www/categories-browse.xql}
dbqd.categories.www.categories-browse.exact_categorization_and {dbqd.categories.www.categories-browse.exact_categorization_and {
      select m.object_id
      from category_object_map m, category_temp t
      where m.category_id = t.category_id
      group by m.object_id having count(*) = :category_ids_length
    } {} {} {} c:/web/openacs-4/packages/categories/www/categories-browse.xql}
dbqd.categories.www.categories-browse.include_subtree_or {dbqd.categories.www.categories-browse.include_subtree_or {
      select distinct m.object_id
      from category_object_map m, categories c,
           categories c_sub, category_temp t
      where c.category_id = t.category_id
      and m.category_id = c_sub.category_id
      and c_sub.tree_id = c.tree_id
      and c_sub.left_ind >= c.left_ind
      and c_sub.left_ind < c.right_ind
    } {} {} {} c:/web/openacs-4/packages/categories/www/categories-browse.xql}
dbqd.categories.www.categories-browse.exact_categorization_or {dbqd.categories.www.categories-browse.exact_categorization_or {
      select distinct m.object_id
      from category_object_map m, category_temp t
      where m.category_id = t.category_id
    } {} {} {} c:/web/openacs-4/packages/categories/www/categories-browse.xql}
dbqd.categories.www.categories-browse.insert_tmp_categories {dbqd.categories.www.categories-browse.insert_tmp_categories {
      insert into category_temp
      values (:category_id)
    } {} {} {} c:/web/openacs-4/packages/categories/www/categories-browse.xql}
dbqd.categories.www.categories-browse.get_categorized_object_count {dbqd.categories.www.categories-browse.get_categorized_object_count {
      select n.object_id
      from acs_named_objects n, ($subtree_sql) s
      where n.object_id = s.object_id
      and exists (select 1
                  from acs_object_party_privilege_map oppm
                  where oppm.object_id = n.object_id
                  and oppm.party_id = :user_id
                  and oppm.privilege = 'read')
      $letter_sql
      $package_sql
    } {} {} {} c:/web/openacs-4/packages/categories/www/categories-browse.xql}
dbqd.categories.www.index-oracle.get_trees {dbqd.categories.www.index-oracle.get_trees {
      
    select tree_id, site_wide_p,
           acs_permission.permission_p(tree_id, :user_id, 'category_tree_read') has_read_p
    from category_trees t

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/categories/www/index-oracle.xql}
dbqd.categories.www.index.get_trees {dbqd.categories.www.index.get_trees {
  
    select tree_id, site_wide_p,
           acs_permission__permission_p(tree_id, :user_id, 'category_tree_read') as has_read_p
    from category_trees

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/categories/www/index-postgresql.xql}
dbqd.clickthrough.tcl.clickthrough-procs-oracle.clickthrough_href.clickthrough_url_sql {dbqd.clickthrough.tcl.clickthrough-procs-oracle.clickthrough_href.clickthrough_url_sql {
      select site_node.url(sn2.node_id)
          from site_nodes sn1, site_nodes sn2, apm_packages p
         where sn1.object_id = :package_id
           and sn2.parent_id = sn1.node_id
           and sn2.object_id = p.package_id
           and p.package_key = 'clickthrough'
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/clickthrough/tcl/clickthrough-procs-oracle.xql}
dbqd.clickthrough.tcl.clickthrough-procs-oracle.clickthrough_cache_sweeper.update_clickthrough_log_sql {dbqd.clickthrough.tcl.clickthrough-procs-oracle.clickthrough_cache_sweeper.update_clickthrough_log_sql {

			update clickthrough_log
			   set click_count = click_count + :cached_click_count
			 where local_url = :cached_local_url
			   and foreign_url = :cached_foreign_url
			   and package_id = :cached_package_id
			   and trunc(entry_date) = trunc(sysdate)
		    
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/clickthrough/tcl/clickthrough-procs-oracle.xql}
dbqd.clickthrough.tcl.clickthrough-procs-oracle.clickthrough_cache_sweeper.insert_clickthrough_log_sql {dbqd.clickthrough.tcl.clickthrough-procs-oracle.clickthrough_cache_sweeper.insert_clickthrough_log_sql {

	insert into clickthrough_log
	    (local_url, foreign_url, entry_date, click_count, package_id)
	    select :cached_local_url, :cached_foreign_url, trunc(sysdate), 
		:cached_click_count, :cached_package_id    
	    from dual
	    where 0 = (
		select count(*)
		from clickthrough_log
		where local_url = :cached_local_url
		and foreign_url = :cached_foreign_url
		and package_id = :cached_package_id
		and trunc(entry_date) = trunc(sysdate)
		)

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/clickthrough/tcl/clickthrough-procs-oracle.xql}
dbqd.clickthrough.tcl.clickthrough-procs.clickthrough_href.clickthrough_url_sql {dbqd.clickthrough.tcl.clickthrough-procs.clickthrough_href.clickthrough_url_sql {
      select site_node__url(sn2.node_id)
          from site_nodes sn1, site_nodes sn2, apm_packages p
         where sn1.object_id = :package_id
           and sn2.parent_id = sn1.node_id
           and sn2.object_id = p.package_id
           and p.package_key = 'clickthrough'
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/clickthrough/tcl/clickthrough-procs-postgresql.xql}
dbqd.clickthrough.tcl.clickthrough-procs.clickthrough_cache_sweeper.update_clickthrough_log_sql {dbqd.clickthrough.tcl.clickthrough-procs.clickthrough_cache_sweeper.update_clickthrough_log_sql {

			update clickthrough_log
			   set click_count = click_count + :cached_click_count
			 where local_url = :cached_local_url
			   and foreign_url = :cached_foreign_url
			   and package_id = :cached_package_id
			   and entry_date = current_date

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/clickthrough/tcl/clickthrough-procs-postgresql.xql}
dbqd.clickthrough.tcl.clickthrough-procs.clickthrough_cache_sweeper.insert_clickthrough_log_sql {dbqd.clickthrough.tcl.clickthrough-procs.clickthrough_cache_sweeper.insert_clickthrough_log_sql {
       
              insert into clickthrough_log
                  (local_url, foreign_url, entry_date, click_count, package_id)
                  select :cached_local_url, :cached_foreign_url, current_date,
                      :cached_click_count, :cached_package_id
                  where 0 = (
                      select count(*)
                      from clickthrough_log
                      where local_url = :cached_local_url
                      and foreign_url = :cached_foreign_url
                      and package_id = :cached_package_id
                      and entry_date = current_date
                      )
        } {} {} {postgresql 7.1} c:/web/openacs-4/packages/clickthrough/tcl/clickthrough-procs-postgresql.xql}
dbqd.clickthrough.tcl.clickthrough-procs.clickthrough_parent_package_id.parent_package_id_sql {dbqd.clickthrough.tcl.clickthrough-procs.clickthrough_parent_package_id.parent_package_id_sql {
      
      select sn2.object_id as parent_package_id
        from site_nodes sn1, site_nodes sn2 
       where sn1.object_id = :clickthrough_package_id 
         and sn1.parent_id = sn2.node_id
      } {} {} {} c:/web/openacs-4/packages/clickthrough/tcl/clickthrough-procs.xql}
dbqd.clickthrough.tcl.clickthrough-procs.clickthrough_parent_package_id.parent_package_id_sql {dbqd.clickthrough.tcl.clickthrough-procs.clickthrough_parent_package_id.parent_package_id_sql {
      
      select sn2.object_id as parent_package_id
        from site_nodes sn1, site_nodes sn2 
       where sn1.object_id = :clickthrough_package_id 
         and sn1.parent_id = sn2.node_id
      } {} {} {} c:/web/openacs-4/packages/clickthrough/tcl/clickthrough-procs.xql}
dbqd.clickthrough.www.admin.all-from-local.all_from_local {dbqd.clickthrough.www.admin.all-from-local.all_from_local {
    select entry_date, sum(click_count) as n_clicks
      from clickthrough_log
     where local_url = :local_url
       and package_id = :parent_package_id
     group by entry_date
     order by entry_date desc
	} {} {} {} c:/web/openacs-4/packages/clickthrough/www/admin/all-from-local.xql}
dbqd.clickthrough.www.admin.all-to-foreign.all_to_foreign {dbqd.clickthrough.www.admin.all-to-foreign.all_to_foreign {
	    select entry_date, sum(click_count) as n_clicks 
      from clickthrough_log
     where foreign_url = :foreign_url
       and package_id = :parent_package_id
     group by entry_date
     order by entry_date desc
	} {} {} {} c:/web/openacs-4/packages/clickthrough/www/admin/all-to-foreign.xql}
dbqd.clickthrough.www.admin.by-foreign-url-aggregate.by_foreign_url_aggregate {dbqd.clickthrough.www.admin.by-foreign-url-aggregate.by_foreign_url_aggregate {
    select local_url, foreign_url, sum(click_count) as n_clicks
      from clickthrough_log
     where package_id = :parent_package_id
     group by local_url, foreign_url 
    having sum(click_count) >= :minimum
     order by foreign_url
	} {} {} {} c:/web/openacs-4/packages/clickthrough/www/admin/by-foreign-url-aggregate.xql}
dbqd.clickthrough.www.admin.by-foreign-url. {dbqd.clickthrough.www.admin.by-foreign-url. {
    select distinct local_url, foreign_url 
      from clickthrough_log
     where package_id = :parent_package_id
     order by foreign_url
	} {} {} {} c:/web/openacs-4/packages/clickthrough/www/admin/by-foreign-url.xql}
dbqd.clickthrough.www.admin.by-local-url.by_local_url {dbqd.clickthrough.www.admin.by-local-url.by_local_url {

    select distinct local_url, foreign_url 
      from clickthrough_log
     where package_id = :parent_package_id
     order by local_url

	} {} {} {} c:/web/openacs-4/packages/clickthrough/www/admin/by-local-url.xql}
dbqd.clickthrough.www.admin.one-foreign-one-day.one_foreign_one_day {dbqd.clickthrough.www.admin.one-foreign-one-day.one_foreign_one_day {
    select local_url, click_count
      from clickthrough_log
     where foreign_url = :foreign_url
       and entry_date = :query_date
       and package_id = :parent_package_id
     order by local_url
	} {} {} {} c:/web/openacs-4/packages/clickthrough/www/admin/one-foreign-one-day.xql}
dbqd.clickthrough.www.admin.one-local-one-day.one_local_one_day {dbqd.clickthrough.www.admin.one-local-one-day.one_local_one_day {
    select foreign_url, click_count
      from clickthrough_log
     where local_url = :local_url
       and entry_date = :query_date
       and package_id = :parent_package_id
     order by foreign_url
	} {} {} {} c:/web/openacs-4/packages/clickthrough/www/admin/one-local-one-day.xql}
dbqd.clickthrough.www.admin.one-url-pair.one_url_pair {dbqd.clickthrough.www.admin.one-url-pair.one_url_pair {
    select entry_date, click_count
      from clickthrough_log
     where local_url = :local_url
       and foreign_url = :foreign_url
       and package_id = :parent_package_id
     order by entry_date desc
	} {} {} {} c:/web/openacs-4/packages/clickthrough/www/admin/one-url-pair.xql}
dbqd.clickthrough.www.index-oracle.parent_package_sql {dbqd.clickthrough.www.index-oracle.parent_package_sql {
select sn2.object_id as parent_package_id, 
                                   site_node.url(sn2.node_id) as parent_package_url
                              from site_nodes sn1, site_nodes sn2 
                             where sn1.object_id = :clickthrough_package_id 
                               and sn1.parent_id = sn2.node_id
	} {} {} {oracle 8.1.6} c:/web/openacs-4/packages/clickthrough/www/index-oracle.xql}
dbqd.clickthrough.www.index.parent_package_sql {dbqd.clickthrough.www.index.parent_package_sql {
select sn2.object_id as parent_package_id, 
                                   site_node__url(sn2.node_id) as parent_package_url
                              from site_nodes sn1, site_nodes sn2 
                             where sn1.object_id = :clickthrough_package_id 
                               and sn1.parent_id = sn2.node_id
	} {} {} {postgresql 7.1} c:/web/openacs-4/packages/clickthrough/www/index-postgresql.xql}
dbqd.clickthrough.www.index.parent_package_sql {dbqd.clickthrough.www.index.parent_package_sql {
select sn2.object_id as parent_package_id, 
                                   site_node__url(sn2.node_id) as parent_package_url
                              from site_nodes sn1, site_nodes sn2 
                             where sn1.object_id = :clickthrough_package_id 
                               and sn1.parent_id = sn2.node_id
	} {} {} {postgresql 7.1} c:/web/openacs-4/packages/clickthrough/www/index-postgresql.xql}
dbqd.cms.tcl.cms-folder-procs-oracle.cms_folder::get_registered_types.get_name_type {dbqd.cms.tcl.cms-folder-procs-oracle.cms_folder::get_registered_types.get_name_type {
    select
      o.pretty_name,
      m.content_type
    from
      acs_object_types o, cr_folder_type_map m
    where
      m.folder_id = :folder_id
    and
      m.content_type = o.object_type
    and
      content_item.is_subclass(o.object_type, 'content_revision') = 't'
    order by
      decode(o.object_type, 'content_revision', '----', o.pretty_name)
	} {} {} {oracle 8.1.6} c:/web/openacs-4/packages/cms/tcl/cms-folder-procs-oracle.xql}
dbqd.cms.tcl.cms-folder-procs.cms_folder::get_registered_types.get_name_type {dbqd.cms.tcl.cms-folder-procs.cms_folder::get_registered_types.get_name_type {
    select
      o.pretty_name,
      m.content_type
    from
      acs_object_types o, cr_folder_type_map m
    where
      m.folder_id = :folder_id
    and
      m.content_type = o.object_type
    and
      content_item__is_subclass(o.object_type, 'content_revision') = 't'
    order by
      case when o.object_type = 'content_revision' then '----' else o.pretty_name end
	} {} {} {postgresql 7.1} c:/web/openacs-4/packages/cms/tcl/cms-folder-procs-postgresql.xql}
dbqd.cms.tcl.content-add-procs.content_add::content_method_html.count_text_mime_types {dbqd.cms.tcl.content-add-procs.content_add::content_method_html.count_text_mime_types {
			select count(*)
			from cr_content_mime_type_map
			where mime_type like ('%text/%')
			 and content_type = :content_type
		} {} {} {} c:/web/openacs-4/packages/cms/tcl/content-add-procs.xql}
dbqd.cms.tcl.content-add-procs.content_add::content_method_html.count_mime_types {dbqd.cms.tcl.content-add-procs.content_add::content_method_html.count_mime_types {
			select count(*)
			from cr_content_mime_type_map
			where content_type = :content_type
		} {} {} {} c:/web/openacs-4/packages/cms/tcl/content-add-procs.xql}
dbqd.cms.tcl.content-method-procs-oracle.content_method::get_content_methods.get_default_method {dbqd.cms.tcl.content-method-procs-oracle.content_method::get_content_methods.get_default_method {
      
      select 
        content_method 
      from
        cm_content_methods m
      where
        content_method = content_method.get_method (:content_type )
      $text_entry_filter
    
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/cms/tcl/content-method-procs-oracle.xql}
dbqd.cms.tcl.content-method-procs-oracle.content_method::get_content_method_options.get_content_default_method {dbqd.cms.tcl.content-method-procs-oracle.content_method::get_content_method_options.get_content_default_method {
      
      select
        label, map.content_method
      from
        cm_content_type_method_map map, cm_content_methods m
      where
        map.content_method = m.content_method
      and
        map.content_method = content_method.get_method( :content_type )
      $text_entry_filter
    
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/cms/tcl/content-method-procs-oracle.xql}
dbqd.cms.tcl.content-method-procs.content_method::get_content_methods.get_default_method {dbqd.cms.tcl.content-method-procs.content_method::get_content_methods.get_default_method {
      
      select 
        content_method 
      from
        cm_content_methods m
      where
        content_method = content_method__get_method (:content_type )
      $text_entry_filter
    
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/cms/tcl/content-method-procs-postgresql.xql}
dbqd.cms.tcl.content-method-procs.content_method::get_content_method_options.get_content_default_method {dbqd.cms.tcl.content-method-procs.content_method::get_content_method_options.get_content_default_method {
      
      select
        label, map.content_method
      from
        cm_content_type_method_map map, cm_content_methods m
      where
        map.content_method = m.content_method
      and
        map.content_method = content_method__get_method( :content_type )
      $text_entry_filter
    
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/cms/tcl/content-method-procs-postgresql.xql}
dbqd.cms.tcl.content-method-procs.content_method::text_entry_filter_sql.count_text_mime_types {dbqd.cms.tcl.content-method-procs.content_method::text_entry_filter_sql.count_text_mime_types {
		select count(*)
		from cr_content_mime_type_map
		where mime_type like ('%text/%')
		 and content_type = :content_type
	} {} {} {} c:/web/openacs-4/packages/cms/tcl/content-method-procs.xql}
dbqd.cms.tcl.content-method-procs.content_method::get_content_methods.get_methods_1 {dbqd.cms.tcl.content-method-procs.content_method::get_content_methods.get_methods_1 {
  select
    map.content_method
  from
    cm_content_type_method_map map, cm_content_methods m
  where
    map.content_method = m.content_method
  and
    map.content_type = :content_type
  $text_entry_filter

	} {} {} {} c:/web/openacs-4/packages/cms/tcl/content-method-procs.xql}
dbqd.cms.tcl.content-method-procs.content_method::get_content_methods.get_methods_2 {dbqd.cms.tcl.content-method-procs.content_method::get_content_methods.get_methods_2 {

  select
    content_method
  from
    cm_content_methods m
  where 1 = 1
  $text_entry_filter

	} {} {} {} c:/web/openacs-4/packages/cms/tcl/content-method-procs.xql}
dbqd.cms.tcl.content-method-procs.content_method::get_content_method_options.get_methods_1 {dbqd.cms.tcl.content-method-procs.content_method::get_content_method_options.get_methods_1 {
      
	  select
	    label, map.content_method
	  from
	    cm_content_methods m, cm_content_type_method_map map
	  where
            m.content_method = map.content_method
	  and
	    map.content_type = :content_type
	  $text_entry_filter
	
      } {} {} {} c:/web/openacs-4/packages/cms/tcl/content-method-procs.xql}
dbqd.cms.tcl.content-method-procs.content_method::get_content_method_options.get_methods_2 {dbqd.cms.tcl.content-method-procs.content_method::get_content_method_options.get_methods_2 {
      
	  select
	    label, content_method
	  from
	    cm_content_methods m
	  where 1 = 1
	  $text_entry_filter
	
      } {} {} {} c:/web/openacs-4/packages/cms/tcl/content-method-procs.xql}
dbqd.cms.tcl.form-procs-oracle.content::query_form_metadata.attributes_query_1 {dbqd.cms.tcl.form-procs-oracle.content::query_form_metadata.attributes_query_1 {
		
    select
      attributes.attribute_id, attribute_name, 
      attributes.table_name,
      attribute_label, type_label, object_type as subtype, datatype, 
      params.is_html, params.is_required,
      widget, param,
      nvl( (select param_type from cm_attribute_widget_params
            where attribute_id = attributes.attribute_id
            and param_id = params.param_id), 'literal' ) param_type, 
      nvl( (select param_source from cm_attribute_widget_params
            where attribute_id = attributes.attribute_id
            and param_id = params.param_id), 
           'onevalue' ) param_source, 
      nvl( (select value from cm_attribute_widget_params
            where attribute_id = attributes.attribute_id
            and param_id = params.param_id), 
           params.default_value ) value
    from
      (
        select
          aw.attribute_id, fwp.param,
          aw.widget, decode(aw.is_required,'t','t',fwp.is_required) is_required,
          fwp.param_id, fwp.default_value, fwp.is_html
        from
          cm_form_widget_params fwp, cm_attribute_widgets aw
        where
          fwp.widget = aw.widget
      ) params,
      (
        select
          attr.attribute_id, attribute_name, sort_order, 
          attr.pretty_name as attribute_label, attr.datatype, 
          types.object_type, types.pretty_name as type_label, 
          tree_level, types.table_name
        from
          acs_attributes attr,
          (
            select 
              object_type, pretty_name, level as tree_level,
              table_name
            from 
              acs_object_types
            where 
              object_type <> 'acs_object'
            connect by 
              prior supertype = object_type
            start with 
              object_type = :content_type
          ) types
        where
          attr.object_type = types.object_type
      ) attributes
    where
      attributes.attribute_id = params.attribute_id

	} {} {} {oracle 8.1.6} c:/web/openacs-4/packages/cms/tcl/form-procs-oracle.xql}
dbqd.cms.tcl.form-procs-oracle.content::create_form_element.cfe_attribute_name_to_char {dbqd.cms.tcl.form-procs-oracle.content::create_form_element.cfe_attribute_name_to_char {

	to_char($attribute_name, 'YYYY MM DD HH24 MI SS') 
                   as $attribute_name

	} {} {} {oracle 8.1.6} c:/web/openacs-4/packages/cms/tcl/form-procs-oracle.xql}
dbqd.cms.tcl.form-procs-oracle.content::create_form_element.get_revision_id {dbqd.cms.tcl.form-procs-oracle.content::create_form_element.get_revision_id {
	select content_item.get_latest_revision(:item_id) from dual
	} {} {} {oracle 8.1.6} c:/web/openacs-4/packages/cms/tcl/form-procs-oracle.xql}
dbqd.cms.tcl.form-procs-oracle.content::get_revision_create_element.get_enum_1 {dbqd.cms.tcl.form-procs-oracle.content::get_revision_create_element.get_enum_1 {
	select nvl(pretty_name,enum_value), enum_value
	from acs_enum_values
	where attribute_id = :attribute_id
	order by sort_order
	} {} {} {oracle 8.1.6} c:/web/openacs-4/packages/cms/tcl/form-procs-oracle.xql}
dbqd.cms.tcl.form-procs-oracle.content::process_revision_form.new_content_revision {dbqd.cms.tcl.form-procs-oracle.content::process_revision_form.new_content_revision {
             begin
	     :revision_id := content_revision.new(
                 title         => :title,
                 description   => :description,
                 mime_type     => :mime_type,
                 text          => ' ',
                 item_id       => content_symlink.resolve(:item_id),
                 creation_ip   => '[ns_conn peeraddr]',
                 creation_user => [User::getID]
             );
             end;
	} {} {} {oracle 8.1.6} c:/web/openacs-4/packages/cms/tcl/form-procs-oracle.xql}
dbqd.cms.tcl.form-procs-oracle.content::process_revision_form.get_extended_attributes {dbqd.cms.tcl.form-procs-oracle.content::process_revision_form.get_extended_attributes {

	  select 
            types.table_name, types.id_column, attr.attribute_name,
            attr.datatype
          from 
            acs_attributes attr,
            ( select 
                object_type, table_name, id_column, level as inherit_level
              from 
                acs_object_types
              where 
                object_type <> 'acs_object'
              and
                object_type <> 'content_revision'
              connect by 
                prior supertype = object_type
              start with 
                object_type = :content_type) types        
          where 
            attr.object_type (+) = types.object_type
          order by 
            types.inherit_level desc

	} {} {} {oracle 8.1.6} c:/web/openacs-4/packages/cms/tcl/form-procs-oracle.xql}
dbqd.cms.tcl.form-procs-oracle.content::insert_element_data.ied_get_objects_tree {dbqd.cms.tcl.form-procs-oracle.content::insert_element_data.ied_get_objects_tree {

          select 
            types.table_name, types.id_column, attr.attribute_name,
            attr.datatype
          from 
            acs_attributes attr,
            ( select 
                object_type, table_name, id_column, level as inherit_level
              from 
                acs_object_types
              where 
                object_type not in ($sql_exclusion)
              connect by 
                prior supertype = object_type
              start with 
                object_type = :content_type) types        
          where 
            attr.object_type (+) = types.object_type

	} {} {} {oracle 8.1.6} c:/web/openacs-4/packages/cms/tcl/form-procs-oracle.xql}
dbqd.cms.tcl.form-procs-oracle.content::new_item.get_item_id {dbqd.cms.tcl.form-procs-oracle.content::new_item.get_item_id {
        begin 
          :1 := content_item.new( [join $params ","] );
        end;
        } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/cms/tcl/form-procs-oracle.xql}
dbqd.cms.tcl.form-procs-oracle.content::upload_content.get_storage_type {dbqd.cms.tcl.form-procs-oracle.content::upload_content.get_storage_type {

                select 
                  storage_type, item_id 
                from 
                  cr_items 
                where 
                  item_id = (select 
                               item_id 
                             from 
                               cr_revisions 
                             where revision_id = :revision_id)

	} {} {} {oracle 8.1.6} c:/web/openacs-4/packages/cms/tcl/form-procs-oracle.xql}
dbqd.cms.tcl.form-procs-oracle.content::upload_content.upload_file_revision {dbqd.cms.tcl.form-procs-oracle.content::upload_content.upload_file_revision {

      update cr_revisions 
      set filename =:file_path, content_length = :file_size
      where revision_id = :revision_id
    
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/cms/tcl/form-procs-oracle.xql}
dbqd.cms.tcl.form-procs-oracle.content::upload_content.upload_text_revision {dbqd.cms.tcl.form-procs-oracle.content::upload_content.upload_text_revision {

             update cr_revisions 
             set content = empty_blob(), 
             content_length = [file size $tmpfile] 
             where revision_id = :revision_id
             returning content into :1
      
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/cms/tcl/form-procs-oracle.xql}
dbqd.cms.tcl.form-procs-oracle.content::upload_content.upload_revision {dbqd.cms.tcl.form-procs-oracle.content::upload_content.upload_revision {

             update cr_revisions 
             set content = empty_blob(), 
             content_length = [file size $tmpfile]
             where revision_id = :revision_id
             returning content into :1
      
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/cms/tcl/form-procs-oracle.xql}
dbqd.cms.tcl.form-procs-oracle.content::get_sql_value.string_to_timestamp {dbqd.cms.tcl.form-procs-oracle.content::get_sql_value.string_to_timestamp {

	to_date(:$name, 'YYYY MM DD HH24 MI SS')

	} {} {} {oracle 8.1.6} c:/web/openacs-4/packages/cms/tcl/form-procs-oracle.xql}
dbqd.cms.tcl.form-procs-oracle.content::add_child_relation_element.get_all_valid_relation_tags {dbqd.cms.tcl.form-procs-oracle.content::add_child_relation_element.get_all_valid_relation_tags {

    select 
      relation_tag as label, relation_tag as value 
    from 
      cr_type_children c
    where
      content_item.is_subclass(:parent_type, c.parent_type) = 't'
    and
      content_item.is_subclass(:content_type, c.child_type) = 't'
    and
      content_item.is_valid_child(:parent_id, c.child_type, relation_tag) = 't'

	} {} {} {oracle 8.1.6} c:/web/openacs-4/packages/cms/tcl/form-procs-oracle.xql}
dbqd.cms.tcl.form-procs-oracle.content::add_child_relation_element.get_parent_title {dbqd.cms.tcl.form-procs-oracle.content::add_child_relation_element.get_parent_title {

      select content_item.get_title(:parent_id) from dual

	} {} {} {oracle 8.1.6} c:/web/openacs-4/packages/cms/tcl/form-procs-oracle.xql}
dbqd.cms.tcl.form-procs-oracle.content::set_attribute_values.timestamp_to_string {dbqd.cms.tcl.form-procs-oracle.content::set_attribute_values.timestamp_to_string {

	to_char($attr, 'YYYY MM DD HH24 MI SS') as $attr

	} {} {} {oracle 8.1.6} c:/web/openacs-4/packages/cms/tcl/form-procs-oracle.xql}
dbqd.cms.tcl.form-procs-oracle.content::get_attributes.ga_get_attributes {dbqd.cms.tcl.form-procs-oracle.content::get_attributes.ga_get_attributes {

    select
      [join $args ","]
    from
      acs_attributes,
      (
	select 
	  object_type ancestor, level as type_order
	from 
	  acs_object_types
	connect by 
	  prior supertype = object_type
	start with 
          object_type = :content_type
      ) types
    where
      object_type = ancestor
    order by type_order desc, sort_order

	} {} {} {oracle 8.1.6} c:/web/openacs-4/packages/cms/tcl/form-procs-oracle.xql}
dbqd.cms.tcl.form-procs-oracle.content::get_latest_revision.glr_get_latest_revision {dbqd.cms.tcl.form-procs-oracle.content::get_latest_revision.glr_get_latest_revision {

    select content_item.get_latest_revision(:item_id) from dual

	} {} {} {oracle 8.1.6} c:/web/openacs-4/packages/cms/tcl/form-procs-oracle.xql}
dbqd.cms.tcl.form-procs-oracle.content::get_attribute_enum_values.gaev_get_enum_values {dbqd.cms.tcl.form-procs-oracle.content::get_attribute_enum_values.gaev_get_enum_values {

           select
	     nvl(pretty_name,enum_value), 
	     enum_value
	   from
	     acs_enum_values
	   where
	     attribute_id = :attribute_id
	   order by
	     sort_order

	} {} {} {oracle 8.1.6} c:/web/openacs-4/packages/cms/tcl/form-procs-oracle.xql}
dbqd.cms.tcl.form-procs-oracle.content::add_basic_revision.basic_get_revision_id {dbqd.cms.tcl.form-procs-oracle.content::add_basic_revision.basic_get_revision_id {
      begin :1 := content_revision.new(
               item_id       => content_symlink.resolve(:item_id),
               revision_id   => :revision_id,
               title         => :title,
               creation_ip   => :creation_ip,
               creation_user => :creation_user $param_sql); end;
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/cms/tcl/form-procs-oracle.xql}
dbqd.cms.tcl.form-procs-oracle.content::update_content_from_file.get_storage_type {dbqd.cms.tcl.form-procs-oracle.content::update_content_from_file.get_storage_type {

                select 
                  storage_type, item_id 
                from 
                  cr_items 
                where 
                  item_id = (select 
                               item_id 
                             from 
                               cr_revisions 
                             where revision_id = :revision_id)

	} {} {} {oracle 8.1.6} c:/web/openacs-4/packages/cms/tcl/form-procs-oracle.xql}
dbqd.cms.tcl.form-procs-oracle.content::update_content_from_file.upload_file_revision {dbqd.cms.tcl.form-procs-oracle.content::update_content_from_file.upload_file_revision {

      update cr_revisions 
      set filename ='[cr_create_content_file $item_id $revision_id $tmpfile]',
      content_length = [file size $tmpfile]
      where revision_id = :revision_id

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/cms/tcl/form-procs-oracle.xql}
dbqd.cms.tcl.form-procs-oracle.content::update_content_from_file.upload_text_revision {dbqd.cms.tcl.form-procs-oracle.content::update_content_from_file.upload_text_revision {

             update cr_revisions 
             set content = empty_blob(), 
             content_length = [file size $tmpfile] 
             where revision_id = :revision_id
             returning content into :1
      
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/cms/tcl/form-procs-oracle.xql}
dbqd.cms.tcl.form-procs-oracle.content::update_content_from_file.upload_revision {dbqd.cms.tcl.form-procs-oracle.content::update_content_from_file.upload_revision {

             update cr_revisions 
             set content = empty_blob(), 
             content_length = [file size $tmpfile]
             where revision_id = :revision_id
             returning content into :1
      
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/cms/tcl/form-procs-oracle.xql}
dbqd.cms.tcl.form-procs-oracle.content::copy_content.cc_copy_content {dbqd.cms.tcl.form-procs-oracle.content::copy_content.cc_copy_content {

           begin
             content_revision.content_copy (
              revision_id      => :revision_id_src,
              revision_id_dest => :revision_id_dest
             );
           end;

	} {} {} {oracle 8.1.6} c:/web/openacs-4/packages/cms/tcl/form-procs-oracle.xql}
dbqd.cms.tcl.form-procs.content::query_form_metadata.attributes_query_1 {dbqd.cms.tcl.form-procs.content::query_form_metadata.attributes_query_1 {
		
    select
      attributes.attribute_id, attribute_name, 
      attributes.table_name,
      attribute_label, type_label, object_type as subtype, datatype, 
      params.is_html, params.is_required,
      widget, param,
      coalesce( (select param_type from cm_attribute_widget_params
                 where attribute_id = attributes.attribute_id
                 and param_id = params.param_id), 'literal' ) as param_type, 
      coalesce( (select param_source from cm_attribute_widget_params
                 where attribute_id = attributes.attribute_id
                 and param_id = params.param_id), 'onevalue' ) as param_source, 
      coalesce( (select value from cm_attribute_widget_params
                 where attribute_id = attributes.attribute_id
                 and param_id = params.param_id), 
                 params.default_value ) as value
    from
      (
        select
          aw.attribute_id, fwp.param,
          aw.widget, case when aw.is_required = 't' then 't' else fwp.is_required end as is_required,
          fwp.param_id, fwp.default_value, fwp.is_html
        from
          cm_form_widget_params fwp, cm_attribute_widgets aw
        where
          fwp.widget = aw.widget
      ) params,
      (
        select
          attr.attribute_id, attribute_name, sort_order, 
          attr.pretty_name as attribute_label, attr.datatype, 
          types.object_type, types.pretty_name as type_label, 
          tree_level, types.table_name
        from
          acs_attributes attr join
          (
            select 
              o2.object_type, o2.pretty_name, tree_level(o2.tree_sortkey) as tree_level,
              o2.table_name
            from
               (
                 SELECT *
                 FROM acs_object_types
                 WHERE object_type = :content_type
               ) o1, acs_object_types o2
            where 
              o2.object_type <> 'acs_object'
            AND
              o2.tree_sortkey <= o1.tree_sortkey
            AND
              o1.tree_sortkey between o2.tree_sortkey and tree_right(o2.tree_sortkey)

          ) types USING (object_type)
      ) attributes
    where
      attributes.attribute_id = params.attribute_id

	} {} {} {postgresql 7.1} c:/web/openacs-4/packages/cms/tcl/form-procs-postgresql.xql}
dbqd.cms.tcl.form-procs.content::create_form_element.cfe_attribute_name_to_char {dbqd.cms.tcl.form-procs.content::create_form_element.cfe_attribute_name_to_char {

	to_char($attribute_name, 'YYYY MM DD HH24 MI SS') 
                   as $attribute_name

	} {} {} {postgresql 7.1} c:/web/openacs-4/packages/cms/tcl/form-procs-postgresql.xql}
dbqd.cms.tcl.form-procs.content::create_form_element.get_revision_id {dbqd.cms.tcl.form-procs.content::create_form_element.get_revision_id {
	select content_item__get_latest_revision(:item_id)
	} {} {} {postgresql 7.1} c:/web/openacs-4/packages/cms/tcl/form-procs-postgresql.xql}
dbqd.cms.tcl.form-procs.content::get_revision_create_element.get_enum_1 {dbqd.cms.tcl.form-procs.content::get_revision_create_element.get_enum_1 {
	select coalesce(pretty_name,enum_value), enum_value
	from acs_enum_values
	where attribute_id = :attribute_id
	order by sort_order
	} {} {} {postgresql 7.1} c:/web/openacs-4/packages/cms/tcl/form-procs-postgresql.xql}
dbqd.cms.tcl.form-procs.content::process_revision_form.new_content_revision {dbqd.cms.tcl.form-procs.content::process_revision_form.new_content_revision {

	     select content_revision__new(:title,:description,:mime_type,' ',content_symlink__resolve(:item_id),'[ns_conn peeraddr]',[User::getID]) as revision_id

	} {} {} {postgresql 7.1} c:/web/openacs-4/packages/cms/tcl/form-procs-postgresql.xql}
dbqd.cms.tcl.form-procs.content::process_revision_form.get_extended_attributes {dbqd.cms.tcl.form-procs.content::process_revision_form.get_extended_attributes {

	  select 
            types.table_name, types.id_column, attr.attribute_name,
            attr.datatype
          from 
            acs_attributes attr RIGHT OUTER JOIN
            ( select 
                o2.object_type, o2.table_name, o2.id_column,
		tree_level(o2.tree_sortkey) as inherit_level
              from
		( SELECT *
		  FROM acs_object_types
		  WHERE object_type = :content_type
		) o1,
                acs_object_types o2
              where
		o2.object_type <> 'acs_object'
	      AND
		o2.object_type <> 'content_revision'
	      AND
		o2.tree_sortkey <= o1.tree_sortkey
	      AND
		o1.tree_sortkey between o2.tree_sortkey and tree_right(o2.tree_sortkey)

	    ) types USING (object_type)
          order by 
            types.inherit_level desc

	} {} {} {postgresql 7.1} c:/web/openacs-4/packages/cms/tcl/form-procs-postgresql.xql}
dbqd.cms.tcl.form-procs.content::insert_element_data.ied_get_objects_tree {dbqd.cms.tcl.form-procs.content::insert_element_data.ied_get_objects_tree {

          select 
            types.table_name, types.id_column, attr.attribute_name,
            attr.datatype
          from 
            acs_attributes attr right outer join
            ( select 
                o2.object_type, o2.table_name, o2.id_column,
		tree_level(o2.tree_sortkey) as inherit_level
              from
		( SELECT *
		  FROM acs_object_types
		  WHERE object_type = :content_type
		) o1,
		acs_object_types o2
              where 
                object_type not in ($sql_exclusion)
	      and
		o2.tree_sortkey <= o1.tree_sortkey
	      and
		o1.tree_sortkey between o2.tree_sortkey and tree_right(o2.tree_sortkey)

	    ) types USING (object_type)

	} {} {} {postgresql 7.1} c:/web/openacs-4/packages/cms/tcl/form-procs-postgresql.xql}
dbqd.cms.tcl.form-procs.content::new_item.get_item_id {dbqd.cms.tcl.form-procs.content::new_item.get_item_id {

        select content_item__new(varchar :name,
                                 :parent_id,
                                 :item_id,
                                 :locale,
                                 now(),
                                 [User::getID],
                                 null,
                                 '[ns_conn peeraddr]',
                                 'content_item',
                                 :content_type,
                                 null,
                                 null,
                                 'text/plain',
                                 null,
                                 null,
                                 :storage_type)
                     
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/cms/tcl/form-procs-postgresql.xql}
dbqd.cms.tcl.form-procs.content::upload_content.upload_file_revision {dbqd.cms.tcl.form-procs.content::upload_content.upload_file_revision {


        update cr_revisions 
        set content = :file_path, content_length = :file_size
        where revision_id = :revision_id

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/cms/tcl/form-procs-postgresql.xql}
dbqd.cms.tcl.form-procs.content::upload_content.upload_text_revision {dbqd.cms.tcl.form-procs.content::upload_content.upload_text_revision {

        update 
          cr_revisions 
        set 
          content = '[DoubleApos [read [set __f [open $tmpfile r]]]][close $__f]',
          content_length = [file size $tmpfile]
        where 
          revision_id = :revision_id
      
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/cms/tcl/form-procs-postgresql.xql}
dbqd.cms.tcl.form-procs.content::upload_content.upload_revision {dbqd.cms.tcl.form-procs.content::upload_content.upload_revision {

             update cr_revisions 
             set lob = [set __lob_id [db_string new_lob "select empty_lob()"]],
             content_length = [file size $tmpfile]
             where revision_id = :revision_id
      
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/cms/tcl/form-procs-postgresql.xql}
dbqd.cms.tcl.form-procs.content::update_content_from_file.upload_file_revision {dbqd.cms.tcl.form-procs.content::update_content_from_file.upload_file_revision {


        update cr_revisions 
        set content = '[set file_path [cr_create_content_file $item_id $revision_id $tmpfile]]',
        content_length = '[cr_file_size $file_path]'
        where revision_id = :revision_id

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/cms/tcl/form-procs-postgresql.xql}
dbqd.cms.tcl.form-procs.content::update_content_from_file.upload_text_revision {dbqd.cms.tcl.form-procs.content::update_content_from_file.upload_text_revision {

        update 
          cr_revisions 
        set 
          content = '[DoubleApos [read [set __f [open $tmpfile r]]]][close $__f]',
          content_length = [file size $tmpfile]
        where 
          revision_id = :revision_id
      
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/cms/tcl/form-procs-postgresql.xql}
dbqd.cms.tcl.form-procs.content::update_content_from_file.upload_revision {dbqd.cms.tcl.form-procs.content::update_content_from_file.upload_revision {

             update cr_revisions 
             set lob = [set __lob_id [db_string new_lob "select empty_lob()"]],
             content_length = [file size $tmpfile]
             where revision_id = :revision_id
      
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/cms/tcl/form-procs-postgresql.xql}
dbqd.cms.tcl.form-procs.content::get_sql_value.string_to_timestamp {dbqd.cms.tcl.form-procs.content::get_sql_value.string_to_timestamp {

	to_date(:$name, 'YYYY MM DD HH24 MI SS')

	} {} {} {postgresql 7.1} c:/web/openacs-4/packages/cms/tcl/form-procs-postgresql.xql}
dbqd.cms.tcl.form-procs.content::add_child_relation_element.get_all_valid_relation_tags {dbqd.cms.tcl.form-procs.content::add_child_relation_element.get_all_valid_relation_tags {

    select 
      relation_tag as label, relation_tag as value 
    from 
      cr_type_children c
    where
      content_item__is_subclass(:parent_type, c.parent_type) = 't'
    and
      content_item__is_subclass(:content_type, c.child_type) = 't'
    and
      content_item__is_valid_child(:parent_id, c.child_type) = 't'

	} {} {} {postgresql 7.1} c:/web/openacs-4/packages/cms/tcl/form-procs-postgresql.xql}
dbqd.cms.tcl.form-procs.content::add_child_relation_element.get_parent_title {dbqd.cms.tcl.form-procs.content::add_child_relation_element.get_parent_title {

      select content_item__get_title(:parent_id, 'f')

	} {} {} {postgresql 7.1} c:/web/openacs-4/packages/cms/tcl/form-procs-postgresql.xql}
dbqd.cms.tcl.form-procs.content::set_attribute_values.timestamp_to_string {dbqd.cms.tcl.form-procs.content::set_attribute_values.timestamp_to_string {

	to_char($attr, 'YYYY MM DD HH24 MI SS') as $attr

	} {} {} {postgresql 7.1} c:/web/openacs-4/packages/cms/tcl/form-procs-postgresql.xql}
dbqd.cms.tcl.form-procs.content::get_attributes.ga_get_attributes {dbqd.cms.tcl.form-procs.content::get_attributes.ga_get_attributes {

    select
      [join $args ","]
    from
      acs_attributes,
      (
 	select 
	  o2.object_type as ancestor, tree_level(o2.tree_sortkey) as type_order
	from
	  (
	    SELECT *
	    FROM acs_object_types
	    WHERE object_type = :content_type
	  ) o1, acs_object_types o2
	where
	  o2.tree_sortkey <= o1.tree_sortkey
	AND
	  o1.tree_sortkey between o2.tree_sortkey and tree_right(o2.tree_sortkey)

      ) types
    where
      object_type = ancestor
    order by type_order desc, sort_order

	} {} {} {postgresql 7.1} c:/web/openacs-4/packages/cms/tcl/form-procs-postgresql.xql}
dbqd.cms.tcl.form-procs.content::get_attribute_enum_values.gaev_get_enum_values {dbqd.cms.tcl.form-procs.content::get_attribute_enum_values.gaev_get_enum_values {

           select
	     coalesce(pretty_name,enum_value), 
	     enum_value
	   from
	     acs_enum_values
	   where
	     attribute_id = :attribute_id
	   order by
	     sort_order

	} {} {} {postgresql 7.1} c:/web/openacs-4/packages/cms/tcl/form-procs-postgresql.xql}
dbqd.cms.tcl.form-procs.content::get_latest_revision.glr_get_latest_revision {dbqd.cms.tcl.form-procs.content::get_latest_revision.glr_get_latest_revision {

    select content_item__get_latest_revision(:item_id)

	} {} {} {postgresql 7.1} c:/web/openacs-4/packages/cms/tcl/form-procs-postgresql.xql}
dbqd.cms.tcl.form-procs.content::add_basic_revision.basic_get_revision_id {dbqd.cms.tcl.form-procs.content::add_basic_revision.basic_get_revision_id {

        select content_revision__new(
               :title,
               :description,
               now(),
               :mime_type,
               null,
               :text,
               content_symlink__resolve(:item_id),
               :revision_id,
               now(),
               :creation_user,
               :creation_ip)

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/cms/tcl/form-procs-postgresql.xql}
dbqd.cms.tcl.form-procs.content::update_content_from_file.upcff_update_cr_revisions {dbqd.cms.tcl.form-procs.content::update_content_from_file.upcff_update_cr_revisions {

    update cr_revisions 
    set lob = [set __lob_id [db_string get_id "select empty_lob()"]]
    where revision_id = :revision_id

	} {} {} {postgresql 7.1} c:/web/openacs-4/packages/cms/tcl/form-procs-postgresql.xql}
dbqd.cms.tcl.form-procs.content::copy_content.cc_copy_content {dbqd.cms.tcl.form-procs.content::copy_content.cc_copy_content {

          select content_revision__content_copy (:revision_id_src, :revision_id_dest)

	} {} {} {postgresql 7.1} c:/web/openacs-4/packages/cms/tcl/form-procs-postgresql.xql}
dbqd.cms.tcl.form-procs.content::create_form_element.get_content_type {dbqd.cms.tcl.form-procs.content::create_form_element.get_content_type {
	select content_type from cr_items i, cr_revisions r
	where r.item_id = i.item_id
	and   r.revision_id = :revision_id
	} {} {} {} c:/web/openacs-4/packages/cms/tcl/form-procs.xql}
dbqd.cms.tcl.form-procs.content::create_form_element.cfe_attribute_name {dbqd.cms.tcl.form-procs.content::create_form_element.cfe_attribute_name {

	$attribute_name

	} {} {} {} c:/web/openacs-4/packages/cms/tcl/form-procs.xql}
dbqd.cms.tcl.form-procs.content::create_form_element.get_element_value {dbqd.cms.tcl.form-procs.content::create_form_element.get_element_value {
	select $what from ${table_name}x where revision_id = :revision_id
	} {} {} {} c:/web/openacs-4/packages/cms/tcl/form-procs.xql}
dbqd.cms.tcl.form-procs.content::query_form_metadata.attributes_query_extra_where {dbqd.cms.tcl.form-procs.content::query_form_metadata.attributes_query_extra_where {

	 and $extra_where

	} {} {} {} c:/web/openacs-4/packages/cms/tcl/form-procs.xql}
dbqd.cms.tcl.form-procs.content::process_revision_form_dml.insert_revision_form {dbqd.cms.tcl.form-procs.content::process_revision_form_dml.insert_revision_form {
              insert into $__last_table (
                [join $__columns ", "]
              ) values (
                [join $__values ", "]
              )"
	} {} {} {} c:/web/openacs-4/packages/cms/tcl/form-procs.xql}
dbqd.cms.tcl.form-procs.content::insert_element_data.ied_get_objects_tree_extra_where {dbqd.cms.tcl.form-procs.content::insert_element_data.ied_get_objects_tree_extra_where {

	 and $extra_where

	} {} {} {} c:/web/openacs-4/packages/cms/tcl/form-procs.xql}
dbqd.cms.tcl.form-procs.content::insert_element_data.ied_get_objects_tree_order_by {dbqd.cms.tcl.form-procs.content::insert_element_data.ied_get_objects_tree_order_by {

          order by 
            types.inherit_level desc

	} {} {} {} c:/web/openacs-4/packages/cms/tcl/form-procs.xql}
dbqd.cms.tcl.form-procs.content::process_insert_statement.process_insert_statement {dbqd.cms.tcl.form-procs.content::process_insert_statement.process_insert_statement {
              insert into $__last_table (
                [join $__columns ", "]
              ) values (
                [join $__values ", "]
              )"
	} {} {} {} c:/web/openacs-4/packages/cms/tcl/form-procs.xql}
dbqd.cms.tcl.form-procs.content::add_revision.addrev_get_content_type {dbqd.cms.tcl.form-procs.content::add_revision.addrev_get_content_type {
    select object_type as content_type, table_name
    from acs_object_types
    where object_type = (select content_type from cr_items 
                         where item_id = :item_id)
	} {} {} {} c:/web/openacs-4/packages/cms/tcl/form-procs.xql}
dbqd.cms.tcl.form-procs.content::upload_content.update_mime_sql {dbqd.cms.tcl.form-procs.content::upload_content.update_mime_sql {

      update cr_revisions 
        set mime_type = :mime_type 
        where revision_id = :revision_id

	} {} {} {} c:/web/openacs-4/packages/cms/tcl/form-procs.xql}
dbqd.cms.tcl.form-procs.content::add_content_element.get_text_mime_types {dbqd.cms.tcl.form-procs.content::add_content_element.get_text_mime_types {

	    select
	      label, map.mime_type as value
	    from
	      cr_mime_types types, cr_content_mime_type_map map
	    where
	      types.mime_type = map.mime_type
	    and
	      map.content_type = :content_type
	    and
	      lower(types.mime_type) like ('text/%')
	    order by
	      label

	} {} {} {} c:/web/openacs-4/packages/cms/tcl/form-procs.xql}
dbqd.cms.tcl.form-procs.content::add_child_relation_element.get_parent_type {dbqd.cms.tcl.form-procs.content::add_child_relation_element.get_parent_type {

    select content_type from cr_items 
    where item_id = :parent_id

	} {} {} {} c:/web/openacs-4/packages/cms/tcl/form-procs.xql}
dbqd.cms.tcl.form-procs.content::get_widget_param_value.set_content_values {dbqd.cms.tcl.form-procs.content::get_widget_param_value.set_content_values {

	$param(value)

	} {} {} {} c:/web/openacs-4/packages/cms/tcl/form-procs.xql}
dbqd.cms.tcl.form-procs.content::get_type_attribute_params.gtap_get_attribute_data {dbqd.cms.tcl.form-procs.content::get_type_attribute_params.gtap_get_attribute_data {

    select
      [join $columns ","]
    from
      cm_attribute_widget_param_ext x
    where
      object_type in ( [join $in_list ","] )

	} {} {} {} c:/web/openacs-4/packages/cms/tcl/form-procs.xql}
dbqd.cms.tcl.form-procs.content::get_attribute_params.gap_get_attribute_data {dbqd.cms.tcl.form-procs.content::get_attribute_params.gap_get_attribute_data {

    select
      [join $columns ","]
    from
      cm_attribute_widget_param_ext
    where
      object_type = :content_type
    and
      attribute_name = :attribute_name

	} {} {} {} c:/web/openacs-4/packages/cms/tcl/form-procs.xql}
dbqd.cms.tcl.form-procs.content::set_attribute_values.get_previous_version_values {dbqd.cms.tcl.form-procs.content::set_attribute_values.get_previous_version_values {

    select 
      [join $columns ", "] 
    from 
      [get_type_info $content_type table_name]x
    where 
      revision_id = :revision_id

	} {} {} {} c:/web/openacs-4/packages/cms/tcl/form-procs.xql}
dbqd.cms.tcl.form-procs.content::get_default_content_method.count_mime_type {dbqd.cms.tcl.form-procs.content::get_default_content_method.count_mime_type {

	select count(*) from cr_content_mime_type_map
	where content_type = :content_type and mime_type like 'text/%'

	} {} {} {} c:/web/openacs-4/packages/cms/tcl/form-procs.xql}
dbqd.cms.tcl.form-procs.content::get_type_info.get_type_info_1 {dbqd.cms.tcl.form-procs.content::get_type_info.get_type_info_1 {

      select 
        $ref
      from 
        acs_object_types 
      where 
        object_type = :object_type

	} {} {} {} c:/web/openacs-4/packages/cms/tcl/form-procs.xql}
dbqd.cms.tcl.form-procs.content::get_type_info.get_type_info_2 {dbqd.cms.tcl.form-procs.content::get_type_info.get_type_info_2 {

      select 
        [join $args ","]
      from 
        acs_object_types 
      where 
        object_type = :object_type

	} {} {} {} c:/web/openacs-4/packages/cms/tcl/form-procs.xql}
dbqd.cms.tcl.form-procs.content::copy_content.cc_get_mime_type {dbqd.cms.tcl.form-procs.content::copy_content.cc_get_mime_type {

      select mime_type from cr_revisions where revision_id = :revision_id_src

	} {} {} {} c:/web/openacs-4/packages/cms/tcl/form-procs.xql}
dbqd.cms.tcl.form-procs.content::copy_content.cc_update_cr_revisions {dbqd.cms.tcl.form-procs.content::copy_content.cc_update_cr_revisions {

           update cr_revisions
           set mime_type = :mime_type
           where revision_id = :revision_id_dest

	} {} {} {} c:/web/openacs-4/packages/cms/tcl/form-procs.xql}
dbqd.cms.tcl.form-procs.content::validate_name.vn_same_name_count1 {dbqd.cms.tcl.form-procs.content::validate_name.vn_same_name_count1 {

	  select count(1)
	  from cr_items
          where name = :name

	} {} {} {} c:/web/openacs-4/packages/cms/tcl/form-procs.xql}
dbqd.cms.tcl.form-procs.content::validate_name.vn_same_name_count2 {dbqd.cms.tcl.form-procs.content::validate_name.vn_same_name_count2 {

	  select count(1)
          from cr_items
          where name = :name
            and parent_id = :parent_id

	} {} {} {} c:/web/openacs-4/packages/cms/tcl/form-procs.xql}
dbqd.cms.tcl.module-procs-oracle.cm::modules::users::getSortedPaths.users_get_paths {dbqd.cms.tcl.module-procs-oracle.cm::modules::users::getSortedPaths.users_get_paths {

          select 
            o.object_id as item_id,
            o.object_type || ': ' || acs_object.name(o.object_id) as item_path,
            o.object_type as item_type
          from
            acs_objects o, parties p
          where
            o.object_id = p.party_id
          and
            o.object_id in ($sql_id_list)
          order by
            item_path

     } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/cms/tcl/module-procs-oracle.xql}
dbqd.cms.tcl.module-procs-oracle.cm::modules::sitemap::getSortedPaths.sitemap_get_name {dbqd.cms.tcl.module-procs-oracle.cm::modules::sitemap::getSortedPaths.sitemap_get_name {

       select 
         item_id, 
         content_item.get_path(item_id, :sorted_paths_root_id) as item_path,
         content_type as item_type
       from 
         cr_items
       where
         item_id in ($sql_id_list)
       order by item_path
       

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/cms/tcl/module-procs-oracle.xql}
dbqd.cms.tcl.module-procs-oracle.cm::modules::categories::getSortedPaths.get_paths {dbqd.cms.tcl.module-procs-oracle.cm::modules::categories::getSortedPaths.get_paths {
           
          select 
            keyword_id as item_id,
            content_keyword.get_path(keyword_id) as item_path,
            'content_keyword' as item_type
          from
            cr_keywords
          where 
            keyword_id in ($sql_id_list)

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/cms/tcl/module-procs-oracle.xql}
dbqd.cms.tcl.module-procs-oracle.cm::modules::getChildFolders.module_get_result {dbqd.cms.tcl.module-procs-oracle.cm::modules::getChildFolders.module_get_result {
      
        select
	  :mount_point as mount_point,
	  r.name, 
          r.item_id,
          '' as children,
	  nvl((select 't' from dual where exists
	    (select 1 from cr_folders f_child, cr_resolved_items r_child
	       where r_child.parent_id = r.resolved_id
		 and f_child.folder_id = r_child.resolved_id)), 'f') expandable,
	  r.is_symlink symlink, 
          0 update_time
	from
	  cr_folders f, cr_resolved_items r
	where
	  r.parent_id = :id
	and
	  r.resolved_id = f.folder_id
	order by
	  name
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/cms/tcl/module-procs-oracle.xql}
dbqd.cms.tcl.module-procs-oracle.cm::modules::templates::getRootFolderID.template_get_root_id {dbqd.cms.tcl.module-procs-oracle.cm::modules::templates::getRootFolderID.template_get_root_id {
      
            select content_template.get_root_folder() from dual
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/cms/tcl/module-procs-oracle.xql}
dbqd.cms.tcl.module-procs-oracle.cm::modules::sitemap::getRootFolderID.sitemap_get_root_id {dbqd.cms.tcl.module-procs-oracle.cm::modules::sitemap::getRootFolderID.sitemap_get_root_id {
      
            select content_item.get_root_folder() from dual
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/cms/tcl/module-procs-oracle.xql}
dbqd.cms.tcl.module-procs-oracle.cm::modules::types::getTypesTree.types_get_result {dbqd.cms.tcl.module-procs-oracle.cm::modules::types::getTypesTree.types_get_result {
      
          select
            lpad(' ', level, '-') || pretty_name as label,
            object_type as value
          from
            acs_object_types t
          connect by
            supertype = prior object_type
          start with
            object_type = 'content_revision'
        
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/cms/tcl/module-procs-oracle.xql}
dbqd.cms.tcl.module-procs-oracle.cm::modules::types::getChildFolders.get_result {dbqd.cms.tcl.module-procs-oracle.cm::modules::types::getChildFolders.get_result {
      select
                     :module_name as mount_point,
                     t.pretty_name, 
                     t.object_type,
                     '' as children,
                     NVL(
                      (select 't' from dual 
                        where exists (select 1 from acs_object_types
                          where supertype = t.object_type)),
                      'f'
                     ) as expandable,
                     'f' as symlink, 
                     0 as update_time
                   from 
                     acs_object_types t
                   where 
                     supertype = :id
                   order by 
                     t.pretty_name
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/cms/tcl/module-procs-oracle.xql}
dbqd.cms.tcl.module-procs-oracle.cm::modules::categories::getChildFolders.category_get_children {dbqd.cms.tcl.module-procs-oracle.cm::modules::categories::getChildFolders.category_get_children {
      select 
                     :module_name as mount_point,
                     content_keyword.get_heading(keyword_id) as name, 
                     keyword_id, 
                     '' as children,
                     NVL( (select 't' from dual 
                             where exists (
                               select 1 from cr_keywords k2
                                 where k2.parent_id = k.keyword_id
                                   and content_keyword.is_leaf(k2.keyword_id) = 'f')),
                           'f') as expandable,
                     'f' as symlink,
                     0 as update_time           
                   from 
                     cr_keywords k
                   where 
                     $where_clause
                   and
                     content_keyword.is_leaf(keyword_id) = 'f'
                   order by 
                     name
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/cms/tcl/module-procs-oracle.xql}
dbqd.cms.tcl.module-procs-oracle.cm::modules::users::getChildFolders.users_get_result {dbqd.cms.tcl.module-procs-oracle.cm::modules::users::getChildFolders.users_get_result {
      select
                     :module_name as mount_point,
                     g.group_name as name, 
                     g.group_id, '' as children,
                     NVL(
                      (select 't' from dual 
                        where exists (
                          select 1 from group_component_map m2
                          where m2.group_id = g.group_id)),
                      'f' 
                     ) as expandable,
                     'f' as symlink,
                     0 as update_time
                   from 
                     groups g $map_table
                   where 
                     $where_clause
                   order by 
                     name
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/cms/tcl/module-procs-oracle.xql}
dbqd.cms.tcl.module-procs.cm::modules::users::getSortedPaths.users_get_paths {dbqd.cms.tcl.module-procs.cm::modules::users::getSortedPaths.users_get_paths {

          select 
            o.object_id as item_id,
            o.object_type || ': ' || acs_object__name(o.object_id) as item_path,
            o.object_type as item_type
          from
            acs_objects o, parties p
          where
            o.object_id = p.party_id
          and
            o.object_id in ($sql_id_list)
          order by
            item_path

     } {} {} {postgresql 7.1} c:/web/openacs-4/packages/cms/tcl/module-procs-postgresql.xql}
dbqd.cms.tcl.module-procs.cm::modules::sitemap::getSortedPaths.sitemap_get_name {dbqd.cms.tcl.module-procs.cm::modules::sitemap::getSortedPaths.sitemap_get_name {

       select 
         item_id, 
         content_item__get_path(item_id, :sorted_paths_root_id) as item_path,
         content_type as item_type
       from 
         cr_items
       where
         item_id in ($sql_id_list)
       order by item_path
       

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/cms/tcl/module-procs-postgresql.xql}
dbqd.cms.tcl.module-procs.cm::modules::categories::getSortedPaths.get_paths {dbqd.cms.tcl.module-procs.cm::modules::categories::getSortedPaths.get_paths {
           
          select 
            keyword_id as item_id,
            content_keyword__get_path(keyword_id) as item_path,
            'content_keyword' as item_type
          from
            cr_keywords
          where 
            keyword_id in ($sql_id_list)

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/cms/tcl/module-procs-postgresql.xql}
dbqd.cms.tcl.module-procs.cm::modules::getChildFolders.module_get_result {dbqd.cms.tcl.module-procs.cm::modules::getChildFolders.module_get_result {
      
        select
	  :mount_point as mount_point,
	  r.name, 
          r.item_id,
          '' as children,
	  coalesce((select 't'::text  where exists
	    (select 1 from cr_folders f_child, cr_resolved_items r_child
	       where r_child.parent_id = r.resolved_id
		 and f_child.folder_id = r_child.resolved_id)), 'f') as expandable,
	  r.is_symlink as symlink, 
          0 as update_time
	from
	  cr_folders f, cr_resolved_items r
	where
	  r.parent_id = :id
	and
	  r.resolved_id = f.folder_id
	order by
	  name
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/cms/tcl/module-procs-postgresql.xql}
dbqd.cms.tcl.module-procs.cm::modules::templates::getRootFolderID.template_get_root_id {dbqd.cms.tcl.module-procs.cm::modules::templates::getRootFolderID.template_get_root_id {
      
            select content_template__get_root_folder() 
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/cms/tcl/module-procs-postgresql.xql}
dbqd.cms.tcl.module-procs.cm::modules::sitemap::getRootFolderID.sitemap_get_root_id {dbqd.cms.tcl.module-procs.cm::modules::sitemap::getRootFolderID.sitemap_get_root_id {
      
            select content_item__get_root_folder(null) 
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/cms/tcl/module-procs-postgresql.xql}
dbqd.cms.tcl.module-procs.cm::modules::types::getTypesTree.types_get_result {dbqd.cms.tcl.module-procs.cm::modules::types::getTypesTree.types_get_result {

          select
            lpad(' ', tree_level(t.tree_sortkey), '-') || t.pretty_name as label,
            t.object_type as value
          from
            acs_object_types t, acs_object_types t2
          where t2.object_type = 'content_revision'
            and t.tree_sortkey between t2.tree_sortkey and tree_right(t2.tree_sortkey)
        
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/cms/tcl/module-procs-postgresql.xql}
dbqd.cms.tcl.module-procs.cm::modules::types::getChildFolders.get_result {dbqd.cms.tcl.module-procs.cm::modules::types::getChildFolders.get_result {

                select
                     :module_name as mount_point,
                     t.pretty_name, 
                     t.object_type,
                     '' as children,
                     coalesce(
                      (select 't'::text
                        where exists (select 1 from acs_object_types
                          where supertype = t.object_type)),
                      'f'
                     ) as expandable,
                     'f' as symlink, 
                     0 as update_time
                   from 
                     acs_object_types t
                   where 
                     supertype = :id
                   order by 
                     t.pretty_name
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/cms/tcl/module-procs-postgresql.xql}
dbqd.cms.tcl.module-procs.cm::modules::categories::getChildFolders.category_get_children {dbqd.cms.tcl.module-procs.cm::modules::categories::getChildFolders.category_get_children {

                  select 
                     :module_name as mount_point,
                     content_keyword__get_heading(keyword_id) as name, 
                     keyword_id, 
                     '' as children,
                     coalesce( (select 't'::text
                             where exists (
                               select 1 from cr_keywords k2
                                 where k2.parent_id = k.keyword_id
                                   and content_keyword__is_leaf(k2.keyword_id) = 'f')),
                           'f') as expandable,
                     'f' as symlink,
                     0 as update_time           
                   from 
                     cr_keywords k
                   where 
                     $where_clause
                   and
                     content_keyword__is_leaf(keyword_id) = 'f'
                   order by 
                     name
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/cms/tcl/module-procs-postgresql.xql}
dbqd.cms.tcl.module-procs.cm::modules::users::getChildFolders.users_get_result {dbqd.cms.tcl.module-procs.cm::modules::users::getChildFolders.users_get_result {

                 select
                     :module_name as mount_point,
                     g.group_name as name, 
                     g.group_id, '' as children,
                     coalesce(
                      (select 't'::text  
                        where exists (
                          select 1 from group_component_map m2
                          where m2.group_id = g.group_id)),
                      'f'::text 
                     ) as expandable,
                     'f' as symlink,
                     0 as update_time
                   from 
                     groups g $map_table
                   where 
                     $where_clause
                   order by 
                     name
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/cms/tcl/module-procs-postgresql.xql}
dbqd.cms.tcl.module-procs.cm::modules::get_module_id.module_get_id {dbqd.cms.tcl.module-procs.cm::modules::get_module_id.module_get_id {
      
        select module_id from cm_modules
          where key = :module_name
      
      } {} {} {} c:/web/openacs-4/packages/cms/tcl/module-procs.xql}
dbqd.cms.tcl.module-procs.cm::modules::getMountPoints.get_list {dbqd.cms.tcl.module-procs.cm::modules::getMountPoints.get_list {
      select 
         key, name, '' as id, 
         '' as children, 't' as expandable, 'f' as symlink,
         0 as update_time
       from cm_modules 
       order by sort_key
      } {} {} {} c:/web/openacs-4/packages/cms/tcl/module-procs.xql}
dbqd.cms.tcl.module-procs.cm::modules::clipboard::getChildFolders.clip_get_result {dbqd.cms.tcl.module-procs.cm::modules::clipboard::getChildFolders.clip_get_result {
      select
                     :module_name as mount_point,
                     name, key, '' as children,
                     'f' as expandable,
                     'f' as symlink,
                     0 as update_type
                   from cm_modules order by sort_key
      } {} {} {} c:/web/openacs-4/packages/cms/tcl/module-procs.xql}
dbqd.cms.tcl.pagination-procs-oracle.pagination::paginate_query.pg_paginate_query {dbqd.cms.tcl.pagination-procs-oracle.pagination::paginate_query.pg_paginate_query {

      select *
      from
        (
          select 
            x.*, rownum as row_id
	  from
	    ($sql) x
        ) ordered_sql_query_with_row_id
      where
        row_id between $start_row and $start_row + $rows_per_page - 1

	} {} {} {oracle 8.1.6} c:/web/openacs-4/packages/cms/tcl/pagination-procs-oracle.xql}
dbqd.cms.tcl.pagination-procs.pagination::paginate_query.pg_paginate_query {dbqd.cms.tcl.pagination-procs.pagination::paginate_query.pg_paginate_query {

      select *
      from
        (
	   $sql
        ) ordered_sql_query_with_row_id
      LIMIT
        $rows_per_page
      OFFSET
        $start_row

	} {} {} {postgresql 7.1} c:/web/openacs-4/packages/cms/tcl/pagination-procs-postgresql.xql}
dbqd.cms.tcl.pagination-procs.pagination::get_total_pages.gtp_get_total_pages {dbqd.cms.tcl.pagination-procs.pagination::get_total_pages.gtp_get_total_pages {
      
	  select 
	    ceil(count(*) / [pagination::get_rows_per_page] )
	  from
            ($sql) x
	
      } {} {} {} c:/web/openacs-4/packages/cms/tcl/pagination-procs.xql}
dbqd.cms.tcl.perm-procs-oracle.content::check_access.ca_get_perm_list {dbqd.cms.tcl.perm-procs-oracle.content::check_access.ca_get_perm_list {
      
    select 
      p.privilege,
      cms_permission.permission_p (
        :object_id, :user_id, p.privilege
      ) as is_granted
    from 
      acs_privileges p
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/cms/tcl/perm-procs-oracle.xql}
dbqd.cms.tcl.perm-procs-oracle.content::check_access.ca_get_msg_info {dbqd.cms.tcl.perm-procs-oracle.content::check_access.ca_get_msg_info {
      
	select 
	  acs_object.name(:object_id) as obj_name, 
	  pretty_name as perm_name
	from 
	  acs_privileges
	where 
	  privilege = :privilege
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/cms/tcl/perm-procs-oracle.xql}
dbqd.cms.tcl.perm-procs-oracle.content::perm_form_generate.pfg_get_permission_boxes {dbqd.cms.tcl.perm-procs-oracle.content::perm_form_generate.pfg_get_permission_boxes {

      select 
	t.child_privilege as privilege, 
	lpad(' ', t.tree_level * 24, '&nbsp;') || 
          NVL(p.pretty_name, t.child_privilege) as label,
	cms_permission.permission_p(
	 :object_id, :grantee_id, t.child_privilege
	) as permission_p,
        cms_permission.permission_p (
	 :object_id, :grantee_id, t.privilege
	) as parent_permission_p
      from (
	select privilege, child_privilege, level as tree_level
	  from acs_privilege_hierarchy
	  connect by privilege = prior child_privilege
	  start with privilege = 'cm_root'
	) t, acs_privileges p
      where
	p.privilege = t.child_privilege
      and (
	cms_permission.has_grant_authority (
	  :object_id, :user_id, t.child_privilege
	) = 't' 
	or
	cms_permission.has_revoke_authority (
	  :object_id, :user_id, t.child_privilege, :grantee_id
	) = 't' 
      )

	} {} {} {oracle 8.1.6} c:/web/openacs-4/packages/cms/tcl/perm-procs-oracle.xql}
dbqd.cms.tcl.perm-procs-oracle.content::perm_form_process.pfp_grant_permission_1 {dbqd.cms.tcl.perm-procs-oracle.content::perm_form_process.pfp_grant_permission_1 {
                     begin 
	               cms_permission.grant_permission (
		         item_id => :object_id, 
		         holder_id => :user_id,
		         privilege => :privilege, 
		         recepient_id => :grantee_id,
                         is_recursive => :pf_is_recursive
	               );
	             end;

	} {} {} {oracle 8.1.6} c:/web/openacs-4/packages/cms/tcl/perm-procs-oracle.xql}
dbqd.cms.tcl.perm-procs-oracle.content::perm_form_process.pfp_revoke_permission_1 {dbqd.cms.tcl.perm-procs-oracle.content::perm_form_process.pfp_revoke_permission_1 {
                     begin 
     	               cms_permission.revoke_permission (
		         item_id => :object_id, 
		         holder_id => :user_id,
		         privilege => :privilege, 
		         revokee_id => :grantee_id,
                         is_recursive => :pf_is_recursive
	               );
	             end;

	} {} {} {oracle 8.1.6} c:/web/openacs-4/packages/cms/tcl/perm-procs-oracle.xql}
dbqd.cms.tcl.perm-procs.content::check_access.ca_get_perm_list {dbqd.cms.tcl.perm-procs.content::check_access.ca_get_perm_list {
      
    select 
      p.privilege,
      cms_permission__permission_p (
        :object_id, :user_id, p.privilege
      ) as is_granted
    from 
      acs_privileges p
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/cms/tcl/perm-procs-postgresql.xql}
dbqd.cms.tcl.perm-procs.content::check_access.ca_get_msg_info {dbqd.cms.tcl.perm-procs.content::check_access.ca_get_msg_info {
      
	select 
	  acs_object__name(:object_id) as obj_name, 
	  pretty_name as perm_name
	from 
	  acs_privileges
	where 
	  privilege = :privilege
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/cms/tcl/perm-procs-postgresql.xql}
dbqd.cms.tcl.perm-procs.content::perm_form_generate.pfg_get_permission_boxes {dbqd.cms.tcl.perm-procs.content::perm_form_generate.pfg_get_permission_boxes {

      select 
	t.child_privilege as privilege, 
	lpad(' ', t.tree_level * 24, '&nbsp;') || coalesce(p.pretty_name, t.child_privilege) as label,
	cms_permission__permission_p(:object_id, :grantee_id, t.child_privilege) as permission_p,
        cms_permission__permission_p (:object_id, :grantee_id, t.privilege) as parent_permission_p
      from (select h1.privilege, h1.child_privilege, 
                tree_level(h1.tree_sortkey) as tree_level
	   from acs_privilege_hierarchy_index h1, acs_privilege_hierarchy_index h2
           where h2.privilege = 'cm_root'
             and h1.tree_sortkey between h2.tree_sortkey and tree_right(h2.tree_sortkey)
             and tree_ancestor_p(h2.tree_sortkey, h1.tree_sortkey)
	) t, acs_privileges p
      where
	p.privilege = t.child_privilege
      and (
	cms_permission__has_grant_authority (
	  :object_id, :user_id, t.child_privilege
	) = 't' 
	or
	cms_permission__has_revoke_authority (
	  :object_id, :user_id, t.child_privilege, :grantee_id
	) = 't' 
      )

	} {} {} {postgresql 7.1} c:/web/openacs-4/packages/cms/tcl/perm-procs-postgresql.xql}
dbqd.cms.tcl.perm-procs.content::perm_form_process.pfp_grant_permission_1 {dbqd.cms.tcl.perm-procs.content::perm_form_process.pfp_grant_permission_1 {
                 
     select cms_permission__grant_permission (:object_id, :user_id, :privilege, :grantee_id, :pf_is_recursive)

	} {} {} {postgresql 7.1} c:/web/openacs-4/packages/cms/tcl/perm-procs-postgresql.xql}
dbqd.cms.tcl.perm-procs.content::perm_form_process.pfp_revoke_permission_1 {dbqd.cms.tcl.perm-procs.content::perm_form_process.pfp_revoke_permission_1 {

     select cms_permission__revoke_permission (:object_id, :user_id, :privilege, :grantee_id, :pf_is_recursive)

	} {} {} {postgresql 7.1} c:/web/openacs-4/packages/cms/tcl/perm-procs-postgresql.xql}
dbqd.cms.tcl.perm-procs.content::check_access.ca_get_user_name {dbqd.cms.tcl.perm-procs.content::check_access.ca_get_user_name {
      
      select screen_name from users where user_id = :user_id
    
      } {} {} {} c:/web/openacs-4/packages/cms/tcl/perm-procs.xql}
dbqd.cms.tcl.publish-procs-oracle.publish::track_publish_status.tps_get_items_multilist {dbqd.cms.tcl.publish-procs-oracle.publish::track_publish_status.tps_get_items_multilist {
      
            select 
	      distinct i.item_id, i.live_revision 
            from 
      	      cr_items i, cr_release_periods p
            where
  	      i.publish_status = 'ready'
             and
	      i.live_revision is not null
             and 
              i.item_id = p.item_id
             and
              (sysdate between p.start_when and p.end_when)
          
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/cms/tcl/publish-procs-oracle.xql}
dbqd.cms.tcl.publish-procs-oracle.publish::track_publish_status.tps_get_items_onelist {dbqd.cms.tcl.publish-procs-oracle.publish::track_publish_status.tps_get_items_onelist {
      
            select 
  	      distinct i.item_id
            from 
  	      cr_items i, cr_release_periods p
            where
	      i.publish_status = 'live'
            and
  	      i.live_revision is not null
            and 
              i.item_id = p.item_id     
            and 
	      not exists (select 1 from cr_release_periods p2
		          where p2.item_id = i.item_id
		           and (sysdate between p2.start_when and p2.end_when)
	                 )
            
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/cms/tcl/publish-procs-oracle.xql}
dbqd.cms.tcl.publish-procs.publish::track_publish_status.tps_get_items_multilist {dbqd.cms.tcl.publish-procs.publish::track_publish_status.tps_get_items_multilist {
      
            select 
	      distinct i.item_id, i.live_revision 
            from 
      	      cr_items i, cr_release_periods p
            where
  	      i.publish_status = 'ready'
             and
	      i.live_revision is not null
             and 
              i.item_id = p.item_id
             and
              (current_timestamp between p.start_when and p.end_when)
          
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/cms/tcl/publish-procs-postgresql.xql}
dbqd.cms.tcl.publish-procs.publish::track_publish_status.tps_get_items_onelist {dbqd.cms.tcl.publish-procs.publish::track_publish_status.tps_get_items_onelist {
      
            select 
  	      distinct i.item_id
            from 
  	      cr_items i, cr_release_periods p
            where
	      i.publish_status = 'live'
            and
  	      i.live_revision is not null
            and 
              i.item_id = p.item_id     
            and 
	      not exists (select 1 from cr_release_periods p2
		          where p2.item_id = i.item_id
		           and (current_timestamp between p2.start_when and p2.end_when)
	                 )
            
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/cms/tcl/publish-procs-postgresql.xql}
dbqd.cms.tcl.publish-procs.publish::set_publish_status.sps_update_cr_items {dbqd.cms.tcl.publish-procs.publish::set_publish_status.sps_update_cr_items {
      update cr_items set publish_status = :new_status
                              where item_id = :item_id
      } {} {} {} c:/web/openacs-4/packages/cms/tcl/publish-procs.xql}
dbqd.cms.tcl.rel-procs.cms_rel::sort_related_item_order.get_related_items {dbqd.cms.tcl.rel-procs.cms_rel::sort_related_item_order.get_related_items {
      
            select
              rel_id
            from
              cr_item_rels
            where
              item_id = :item_id
            order by
              order_n, rel_id
        
      } {} {} {} c:/web/openacs-4/packages/cms/tcl/rel-procs.xql}
dbqd.cms.tcl.rel-procs.cms_rel::sort_related_item_order.reorder {dbqd.cms.tcl.rel-procs.cms_rel::sort_related_item_order.reorder {
  	        update cr_item_rels
                  set order_n = :i
                  where rel_id = :rel_id
      } {} {} {} c:/web/openacs-4/packages/cms/tcl/rel-procs.xql}
dbqd.cms.tcl.rel-procs.cms_rel::sort_child_item_order.get_child_order {dbqd.cms.tcl.rel-procs.cms_rel::sort_child_item_order.get_child_order {
      
            select
              rel_id
            from
              cr_child_rels
            where
              parent_id = :item_id
            order by
              order_n, rel_id
        
      } {} {} {} c:/web/openacs-4/packages/cms/tcl/rel-procs.xql}
dbqd.cms.tcl.rel-procs.cms_rel::sort_child_item_order.reorder {dbqd.cms.tcl.rel-procs.cms_rel::sort_child_item_order.reorder {
  	        update cr_child_rels
                  set order_n = :i
                  where rel_id = :rel_id
      } {} {} {} c:/web/openacs-4/packages/cms/tcl/rel-procs.xql}
dbqd.cms.tcl.user-procs-oracle.User::cms_admin_exists.cae_admin_exists {dbqd.cms.tcl.user-procs-oracle.User::cms_admin_exists.cae_admin_exists {
      
      select content_permission.cm_admin_exists from dual
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/cms/tcl/user-procs-oracle.xql}
dbqd.cms.tcl.user-procs.User::cms_admin_exists.cae_admin_exists {dbqd.cms.tcl.user-procs.User::cms_admin_exists.cae_admin_exists {
      
      select content_permission__cm_admin_exists () 
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/cms/tcl/user-procs-postgresql.xql}
dbqd.cms.tcl.user-procs.User::getName.gn_get_name {dbqd.cms.tcl.user-procs.User::getName.gn_get_name {
      select 
        $col
      from 
        persons
      where
        person_id = [getID]
      } {} {} {} c:/web/openacs-4/packages/cms/tcl/user-procs.xql}
dbqd.cms.tcl.widget-procs-oracle.widget::process_param.pp_proces_param {dbqd.cms.tcl.widget-procs-oracle.widget::process_param.pp_proces_param {
      
      begin
      cm_form_widget.set_attribute_param_value (
          content_type   => :content_type,
          attribute_name => :attribute_name,
          param          => :param_$order,
          param_type     => :param_type_$order,
          param_source   => :param_source_$order,
          value          => :param_value_$order
      );
      end;
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/cms/tcl/widget-procs-oracle.xql}
dbqd.cms.tcl.widget-procs.widget::process_param.pp_proces_param {dbqd.cms.tcl.widget-procs.widget::process_param.pp_proces_param {

	select cm_form_widget__set_attribute_param_value (:content_type, :attribute_name, :param_$order, :param_value_$order, :param_type_$order, :param_source_$order)

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/cms/tcl/widget-procs-postgresql.xql}
dbqd.cms.tcl.workflow-procs-oracle.wf_case_info.case {dbqd.cms.tcl.workflow-procs-oracle.wf_case_info.case {
      
        select case_id,
               acs_object.name(object_id) as object_name,
        
               state
        from   wf_cases
        where  case_id = :case_id
    
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/cms/tcl/workflow-procs-oracle.xql}
dbqd.cms.tcl.workflow-procs-oracle.wf_task_info.task {dbqd.cms.tcl.workflow-procs-oracle.wf_task_info.task {
      
        select t.task_id,
               t.case_id, 
               c.object_id,
               acs_object.name(c.object_id) as object_name,
               ot.pretty_name as object_type_pretty,
               c.workflow_key,
               tr.transition_name as task_name, 
               tr.instructions,
               t.state, 
               t.enabled_date,
               to_char(t.enabled_date, :date_format) as enabled_date_pretty,
               t.started_date,
               to_char(t.started_date, :date_format) as started_date_pretty,
               t.canceled_date,
               to_char(t.canceled_date, :date_format) as canceled_date_pretty,
               t.finished_date,
               to_char(t.finished_date, :date_format) as finished_date_pretty,
               t.overridden_date,
               to_char(t.overridden_date, :date_format) as overridden_date_pretty,
               t.holding_user, 
               acs_object.name(t.holding_user) as holding_user_name,
               p.email as holding_user_email,
               t.hold_timeout,
               to_char(t.hold_timeout, :date_format) as hold_timeout_pretty,
               t.deadline,
               to_char(t.deadline, :date_format) as deadline_pretty,
               t.deadline - sysdate as days_till_deadline,
               tr.estimated_minutes,
               sysdate
          from wf_tasks t, 
               wf_cases c, 
               wf_transition_info tr, 
               acs_objects o, 
               acs_object_types ot, 
               parties p
         where t.task_id = :task_id
           and c.case_id = t.case_id
           and tr.transition_key = t.transition_key
           and tr.workflow_key = t.workflow_key and tr.context_key = c.context_key
           and o.object_id = c.object_id
           and ot.object_type = o.object_type
           and p.party_id (+) = t.holding_user
    
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/cms/tcl/workflow-procs-oracle.xql}
dbqd.cms.tcl.workflow-procs-oracle.wf_task_info.task_attributes_to_set {dbqd.cms.tcl.workflow-procs-oracle.wf_task_info.task_attributes_to_set {
      
        select a.attribute_id,
               a.attribute_name, 
               a.pretty_name, 
               a.datatype, 
               acs_object.get_attribute(t.case_id, a.attribute_name) as value,
               '' as attribute_widget
          from acs_attributes a, wf_transition_attribute_map m, wf_tasks t
         where t.task_id = :task_id
           and m.workflow_key = t.workflow_key and m.transition_key = t.transition_key
           and a.attribute_id = m.attribute_id
         order by m.sort_order
    
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/cms/tcl/workflow-procs-oracle.xql}
dbqd.cms.tcl.workflow-procs-oracle.wf_task_info.task_assigned_users {dbqd.cms.tcl.workflow-procs-oracle.wf_task_info.task_assigned_users {
      
        select ut.user_id,
               acs_object.name(ut.user_id) as name,
               p.email as email
          from wf_user_tasks ut, parties p
         where ut.task_id = :task_id
           and p.party_id = ut.user_id
    
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/cms/tcl/workflow-procs-oracle.xql}
dbqd.cms.tcl.workflow-procs-oracle.wf_journal.journal {dbqd.cms.tcl.workflow-procs-oracle.wf_journal.journal {
      
        select j.journal_id,
               j.action,
               j.action_pretty,
               o.creation_date,
               to_char(o.creation_date, :date_format) as creation_date_pretty,
               o.creation_user,
               acs_object.name(o.creation_user) as creation_user_name,
               p.email as creation_user_email, 
               o.creation_ip,
               j.msg
        from   journal_entries j, acs_objects o, parties p
        where  j.object_id = :case_id
          and  o.object_id = j.journal_id
          and  p.party_id (+) =  o.creation_user
        order  by o.creation_date $sql_order
    
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/cms/tcl/workflow-procs-oracle.xql}
dbqd.cms.tcl.workflow-procs-oracle.wf_task_action.begin_task_action {dbqd.cms.tcl.workflow-procs-oracle.wf_task_action.begin_task_action {
      
            begin
                :1 := workflow_case.begin_task_action(
                    task_id => :task_id, 
                    action => :action, 
                    action_ip => :modifying_ip,
                    user_id => :user_id, 
                    msg => :msg);
            end;
        
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/cms/tcl/workflow-procs-oracle.xql}
dbqd.cms.tcl.workflow-procs-oracle.wf_task_action.set_attribute_value {dbqd.cms.tcl.workflow-procs-oracle.wf_task_action.set_attribute_value {
      
                    begin
                        workflow_case.set_attribute_value(
                            journal_id => :journal_id, 
                            attribute_name => :attribute_name, 
                            value => :value
                        );
                    end;
                
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/cms/tcl/workflow-procs-oracle.xql}
dbqd.cms.tcl.workflow-procs-oracle.wf_task_action.clear_assignments {dbqd.cms.tcl.workflow-procs-oracle.wf_task_action.clear_assignments {
       
                    begin 
                        workflow_case.clear_manual_assignments(
                            case_id => :case_id,
                            role_key => :role_key
                        );
                    end;
                
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/cms/tcl/workflow-procs-oracle.xql}
dbqd.cms.tcl.workflow-procs-oracle.wf_task_action.add_manual_assignment {dbqd.cms.tcl.workflow-procs-oracle.wf_task_action.add_manual_assignment {
      
                        begin
                            workflow_case.add_manual_assignment(
                                case_id => :case_id,
                                role_key => :role_key,
                                party_id => :party_id
                            );
                        end;
                    
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/cms/tcl/workflow-procs-oracle.xql}
dbqd.cms.tcl.workflow-procs-oracle.wf_task_action.end_task_action {dbqd.cms.tcl.workflow-procs-oracle.wf_task_action.end_task_action {
      
            begin
                workflow_case.end_task_action(
                    journal_id => :journal_id,
                    action => :action,
                    task_id => :task_id
                );
            end;
        
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/cms/tcl/workflow-procs-oracle.xql}
dbqd.cms.tcl.workflow-procs-oracle.wf_message_transition_fire.transition_fire {dbqd.cms.tcl.workflow-procs-oracle.wf_message_transition_fire.transition_fire {
      
        begin
            workflow_case.fire_message_transition(
                task_id => :task_id
            );
        end;
    
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/cms/tcl/workflow-procs-oracle.xql}
dbqd.cms.tcl.workflow-procs-oracle.wf_case_new.workflow_case_new {dbqd.cms.tcl.workflow-procs-oracle.wf_case_new.workflow_case_new {

      begin 
            :1 := workflow_case.new(case_id => :case_id,
                                    workflow_key => :workflow_key,
                                    context_key => :context_key,
                                    object_id => :object_id,
                                    creation_user => :user_id,
                                    creation_ip => :creation_ip
                                   ); 
      end;

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/cms/tcl/workflow-procs-oracle.xql}
dbqd.cms.tcl.workflow-procs-oracle.wf_case_new.workflow_case_start_case {dbqd.cms.tcl.workflow-procs-oracle.wf_case_new.workflow_case_start_case {
      begin workflow_case.start_case(case_id => :case_id,
                                     creation_user => :user_id,
                                     creation_ip => :creation_ip
                                    ); end;

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/cms/tcl/workflow-procs-oracle.xql}
dbqd.cms.tcl.workflow-procs-oracle.wf_case_suspend.case_suspend {dbqd.cms.tcl.workflow-procs-oracle.wf_case_suspend.case_suspend {
      
        begin
            workflow_case.suspend(
                case_id => :case_id, 
                user_id => :user_id,
                ip_address => :ip_address,
                msg => :msg
            );
        end;
    
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/cms/tcl/workflow-procs-oracle.xql}
dbqd.cms.tcl.workflow-procs-oracle.wf_case_resume.case_resume {dbqd.cms.tcl.workflow-procs-oracle.wf_case_resume.case_resume {
      
        begin
            workflow_case.resume(
                case_id => :case_id, 
                user_id => :user_id,
                ip_address => :ip_address,
                msg => :msg
            );
        end;
    
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/cms/tcl/workflow-procs-oracle.xql}
dbqd.cms.tcl.workflow-procs-oracle.wf_case_cancel.case_cancel {dbqd.cms.tcl.workflow-procs-oracle.wf_case_cancel.case_cancel {
      
        begin
            workflow_case.cancel(
                case_id => :case_id, 
                user_id => :user_id,
                ip_address => :ip_address,
                msg => :msg
            );
        end;
    
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/cms/tcl/workflow-procs-oracle.xql}
dbqd.cms.tcl.workflow-procs-oracle.wf_case_comment.case_comment {dbqd.cms.tcl.workflow-procs-oracle.wf_case_comment.case_comment {
      
        begin
            :1 := journal_entry.new(
                object_id => :case_id,
                action => 'comment',
                creation_user => :user_id,
                creation_ip => :ip_address,
                msg => :msg
            );
        end;
    
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/cms/tcl/workflow-procs-oracle.xql}
dbqd.cms.tcl.workflow-procs-oracle.wf_task_action.add_manual_assignment {dbqd.cms.tcl.workflow-procs-oracle.wf_task_action.add_manual_assignment {
      
                        begin
                            workflow_case.add_manual_assignment(
                                case_id => :case_id,
                                role_key => :role_key,
                                party_id => :party_id
                            );
                        end;
                    
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/cms/tcl/workflow-procs-oracle.xql}
dbqd.cms.tcl.workflow-procs-oracle.wf_case_remove_manual_assignment.remove_manual_assignment {dbqd.cms.tcl.workflow-procs-oracle.wf_case_remove_manual_assignment.remove_manual_assignment {
      
	begin
            workflow_case.remove_manual_assignment(
                case_id  => :case_id,
                role_key => :role_key,
                party_id => :party_id
            );
        end;
    
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/cms/tcl/workflow-procs-oracle.xql}
dbqd.cms.tcl.workflow-procs-oracle.wf_case_clear_manual_assignments.clear_manual_assignments {dbqd.cms.tcl.workflow-procs-oracle.wf_case_clear_manual_assignments.clear_manual_assignments {
      
	begin
            workflow_case.clear_manual_assignments(
                case_id  => :case_id,
                role_key => :role_key
            );
        end;
    
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/cms/tcl/workflow-procs-oracle.xql}
dbqd.cms.tcl.workflow-procs-oracle.wf_case_add_task_assignment.add_task_assignment {dbqd.cms.tcl.workflow-procs-oracle.wf_case_add_task_assignment.add_task_assignment {
      
	begin
            workflow_case.add_task_assignment(
                task_id  => :task_id,
                party_id => :party_id,
                permanent_p => :permanent_value
            );
        end;
    
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/cms/tcl/workflow-procs-oracle.xql}
dbqd.cms.tcl.workflow-procs-oracle.wf_case_remove_task_assignment.remove_task_assignment {dbqd.cms.tcl.workflow-procs-oracle.wf_case_remove_task_assignment.remove_task_assignment {
      
	begin
            workflow_case.remove_task_assignment(
                task_id  => :task_id,
                party_id => :party_id,
                permanent_p => :permanent_value
            );
        end;
    
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/cms/tcl/workflow-procs-oracle.xql}
dbqd.cms.tcl.workflow-procs-oracle.wf_case_clear_task_assignments.clear_task_assignments {dbqd.cms.tcl.workflow-procs-oracle.wf_case_clear_task_assignments.clear_task_assignments {
      
	begin
            workflow_case.clear_task_assignments(
                task_id  => :task_id,
                permanent_p => :permanent_value
            );
        end;
    
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/cms/tcl/workflow-procs-oracle.xql}
dbqd.cms.tcl.workflow-procs-oracle.wf_case_set_case_deadline.set_case_deadline {dbqd.cms.tcl.workflow-procs-oracle.wf_case_set_case_deadline.set_case_deadline {
      
	begin
            workflow_case.set_case_deadline(
	        case_id => :case_id,
                transition_key => :transition_key,
                deadline => :deadline
            );
        end;
    
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/cms/tcl/workflow-procs-oracle.xql}
dbqd.cms.tcl.workflow-procs-oracle.wf_case_remove_case_deadline.remove_case_deadline {dbqd.cms.tcl.workflow-procs-oracle.wf_case_remove_case_deadline.remove_case_deadline {
      
	begin
            workflow_case.remove_case_deadline(
	        case_id => :case_id,
                transition_key => :transition_key
            );
        end;
    
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/cms/tcl/workflow-procs-oracle.xql}
dbqd.cms.tcl.workflow-procs-oracle.wf_add_place.wf_add_place {dbqd.cms.tcl.workflow-procs-oracle.wf_add_place.wf_add_place {
      
        begin
            workflow.add_place(
                workflow_key => :workflow_key,
                place_key => :place_key,
                place_name => :place_name,
                sort_order => :sort_order
            );
        end;
    
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/cms/tcl/workflow-procs-oracle.xql}
dbqd.cms.tcl.workflow-procs-oracle.wf_delete_place.wf_delete_place {dbqd.cms.tcl.workflow-procs-oracle.wf_delete_place.wf_delete_place {
      
        begin
            workflow.delete_place(
                workflow_key => :workflow_key,
                place_key => :place_key
            );
        end;
    
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/cms/tcl/workflow-procs-oracle.xql}
dbqd.cms.tcl.workflow-procs-oracle.wf_add_role.wf_add_role {dbqd.cms.tcl.workflow-procs-oracle.wf_add_role.wf_add_role {
      
	begin
            workflow.add_role(
                workflow_key => :workflow_key,
                role_key => :role_key,
                role_name => :role_name,
                sort_order => :sort_order
            );
        end;
    
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/cms/tcl/workflow-procs-oracle.xql}
dbqd.cms.tcl.workflow-procs-oracle.wf_move_role_up.move_role_up {dbqd.cms.tcl.workflow-procs-oracle.wf_move_role_up.move_role_up {
      
	begin
            workflow.move_role_up(
                workflow_key => :workflow_key,
                role_key => :role_key
            );
        end;
    
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/cms/tcl/workflow-procs-oracle.xql}
dbqd.cms.tcl.workflow-procs-oracle.wf_move_role_down.move_role_down {dbqd.cms.tcl.workflow-procs-oracle.wf_move_role_down.move_role_down {
      
	begin
            workflow.move_role_down(
                workflow_key => :workflow_key,
                role_key => :role_key
            );
        end;
    
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/cms/tcl/workflow-procs-oracle.xql}
dbqd.cms.tcl.workflow-procs-oracle.wf_delete_role.wf_delete_role {dbqd.cms.tcl.workflow-procs-oracle.wf_delete_role.wf_delete_role {
      
	begin
            workflow.delete_role(
                workflow_key => :workflow_key,
                role_key => :role_key
            );
        end;
    
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/cms/tcl/workflow-procs-oracle.xql}
dbqd.cms.tcl.workflow-procs-oracle.wf_add_transition.wf_add_transition {dbqd.cms.tcl.workflow-procs-oracle.wf_add_transition.wf_add_transition {
      
	    begin
		workflow.add_transition(
		    workflow_key => :workflow_key,
		    transition_key => :transition_key,
		    transition_name => :transition_name,
		    role_key => :role_key,
		    sort_order => :sort_order,
		    trigger_type => :trigger_type
		);
	    end;
	
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/cms/tcl/workflow-procs-oracle.xql}
dbqd.cms.tcl.workflow-procs-oracle.wf_delete_transition.wf_delete_transition {dbqd.cms.tcl.workflow-procs-oracle.wf_delete_transition.wf_delete_transition {
      
	begin
            workflow.delete_transition(
                workflow_key => :workflow_key,
                transition_key => :transition_key
            );
        end;
    
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/cms/tcl/workflow-procs-oracle.xql}
dbqd.cms.tcl.workflow-procs-oracle.wf_add_arc.wf_add_arc {dbqd.cms.tcl.workflow-procs-oracle.wf_add_arc.wf_add_arc {
      
        begin
            workflow.add_arc(
                workflow_key => :workflow_key,
	        transition_key => :transition_key,
                place_key => :place_key,
                direction => :direction,
                guard_callback => :guard_callback,
                guard_custom_arg => :guard_custom_arg,
                guard_description => :guard_description
            );
        end;
    
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/cms/tcl/workflow-procs-oracle.xql}
dbqd.cms.tcl.workflow-procs-oracle.wf_add_arc_out.wf_add_arc {dbqd.cms.tcl.workflow-procs-oracle.wf_add_arc_out.wf_add_arc {
      
        begin
            workflow.add_arc(
                workflow_key => :workflow_key,
	        transition_key => :from_transition_key,
                place_key => :to_place_key,
                guard_callback => :guard_callback,
                guard_custom_arg => :guard_custom_arg,
                guard_description => :guard_description
            );
        end;
    
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/cms/tcl/workflow-procs-oracle.xql}
dbqd.cms.tcl.workflow-procs-oracle.wf_add_arc_in.wf_add_arc {dbqd.cms.tcl.workflow-procs-oracle.wf_add_arc_in.wf_add_arc {
      
        begin
            workflow.add_arc(
                workflow_key => :workflow_key,
	        transition_key => :to_transition_key,
                place_key => :from_place_key
            );
        end;
    
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/cms/tcl/workflow-procs-oracle.xql}
dbqd.cms.tcl.workflow-procs-oracle.wf_delete_arc.wf_delete_arc {dbqd.cms.tcl.workflow-procs-oracle.wf_delete_arc.wf_delete_arc {
      
        begin
            workflow.delete_arc(
                workflow_key => :workflow_key,
                transition_key => :transition_key,
                place_key => :place_key,
                direction => :direction
            );
        end;
    
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/cms/tcl/workflow-procs-oracle.xql}
dbqd.cms.tcl.workflow-procs-oracle.wf_add_trans_attribute_map.add_trans_attribute_map_attribute_id {dbqd.cms.tcl.workflow-procs-oracle.wf_add_trans_attribute_map.add_trans_attribute_map_attribute_id {
      
	    begin
	        workflow.add_trans_attribute_map(
                    workflow_key => :workflow_key,
	            transition_key => :transition_key,
	            attribute_id => :attribute_id,
	            sort_order => :sort_order
                );
	    end;
	
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/cms/tcl/workflow-procs-oracle.xql}
dbqd.cms.tcl.workflow-procs-oracle.wf_add_trans_attribute_map.add_trans_attribute_map_attribute_name {dbqd.cms.tcl.workflow-procs-oracle.wf_add_trans_attribute_map.add_trans_attribute_map_attribute_name {
      
	    begin
	        workflow.add_trans_attribute_map(
                    workflow_key => :workflow_key,
	            transition_key => :transition_key,
	            attribute_name => :attribute_name,
	            sort_order => :sort_order
                );
	    end;
	
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/cms/tcl/workflow-procs-oracle.xql}
dbqd.cms.tcl.workflow-procs-oracle.wf_delete_trans_attribute_map.delete_trans_attribute_map {dbqd.cms.tcl.workflow-procs-oracle.wf_delete_trans_attribute_map.delete_trans_attribute_map {
      
        begin
            workflow.delete_trans_attribute_map(
                workflow_key => :workflow_key,
                transition_key => :transition_key,
                attribute_id => :attribute_id
            );
        end;
    
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/cms/tcl/workflow-procs-oracle.xql}
dbqd.cms.tcl.workflow-procs-oracle.wf_add_trans_role_assign_map.add_trans_role_assign_map {dbqd.cms.tcl.workflow-procs-oracle.wf_add_trans_role_assign_map.add_trans_role_assign_map {
      
        begin
            workflow.add_trans_role_assign_map(
                workflow_key => :workflow_key,
                transition_key => :transition_key,
                assign_role_key => :assign_role_key
            );
        end;
    
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/cms/tcl/workflow-procs-oracle.xql}
dbqd.cms.tcl.workflow-procs-oracle.wf_delete_trans_role_assign_map.delete_trans_role_assign_map {dbqd.cms.tcl.workflow-procs-oracle.wf_delete_trans_role_assign_map.delete_trans_role_assign_map {
      
        begin
            workflow.delete_trans_role_assign_map(
                workflow_key => :workflow_key,
                transition_key => :transition_key,
                assign_role_key => :assign_role_key
            );
        end;
    
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/cms/tcl/workflow-procs-oracle.xql}
dbqd.cms.tcl.workflow-procs-oracle.wf_simple_workflow_p.simple_workflow {dbqd.cms.tcl.workflow-procs-oracle.wf_simple_workflow_p.simple_workflow {
      begin :1 := workflow.simple_p(:workflow_key); end;
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/cms/tcl/workflow-procs-oracle.xql}
dbqd.cms.tcl.workflow-procs-oracle.wf_export_workflow.declare_object_type {dbqd.cms.tcl.workflow-procs-oracle.wf_export_workflow.declare_object_type {
declare
    v_workflow_key varchar2(40);
begin
    v_workflow_key := workflow.create_workflow(
        workflow_key => '[db_quote $new_workflow_key]', 
        pretty_name => '[db_quote $new_workflow_pretty_name]', 
        pretty_plural => '[db_quote $new_workflow_pretty_plural]', 
        description => '[db_quote $description]', 
        table_name => '[db_quote $new_table_name]'
    );
end;
/
show errors

        } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/cms/tcl/workflow-procs-oracle.xql}
dbqd.cms.tcl.workflow-procs-oracle.wf_export_workflow.add_place {dbqd.cms.tcl.workflow-procs-oracle.wf_export_workflow.add_place {
begin
    workflow.add_place(
        workflow_key => '[db_quote $new_workflow_key]',
        place_key    => '[db_quote $place_key]', 
        place_name   => '[db_quote $place_name]', 
        sort_order   => [ad_decode $sort_order "" "null" $sort_order]
    );
end;
/
show errors 
        } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/cms/tcl/workflow-procs-oracle.xql}
dbqd.cms.tcl.workflow-procs-oracle.wf_export_workflow.add_role {dbqd.cms.tcl.workflow-procs-oracle.wf_export_workflow.add_role {
begin
    workflow.add_role(
        workflow_key => '[db_quote $new_workflow_key]',
        role_key     => '[db_quote $role_key]',
        role_name    => '[db_quote $role_name]',
        sort_order   => [ad_decode $sort_order "" "null" $sort_order]
    );
end;
/
show errors
        } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/cms/tcl/workflow-procs-oracle.xql}
dbqd.cms.tcl.workflow-procs-oracle.wf_export_workflow.add_transition {dbqd.cms.tcl.workflow-procs-oracle.wf_export_workflow.add_transition {
begin
    workflow.add_transition(
        workflow_key    => '[db_quote $new_workflow_key]',
        transition_key  => '[db_quote $transition_key]',
        transition_name => '[db_quote $transition_name]',
        role_key        => '[db_quote $role_key]',
        sort_order      => [ad_decode $sort_order "" "null" $sort_order],
        trigger_type    => '[db_quote $trigger_type]'
    );
end;
/
show errors
        } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/cms/tcl/workflow-procs-oracle.xql}
dbqd.cms.tcl.workflow-procs-oracle.wf_export_workflow.add_arc {dbqd.cms.tcl.workflow-procs-oracle.wf_export_workflow.add_arc {
begin
    workflow.add_arc(
        workflow_key          => '[db_quote $new_workflow_key]',
        transition_key        => '[db_quote $transition_key]',
        place_key             => '[db_quote $place_key]',
        direction             => '[db_quote $direction]',
        guard_callback        => '[db_quote $guard_callback]',
        guard_custom_arg      => '[db_quote $guard_custom_arg]',
        guard_description     => '[db_quote $guard_description]'
    );
end;
/
show errors
        } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/cms/tcl/workflow-procs-oracle.xql}
dbqd.cms.tcl.workflow-procs-oracle.wf_export_workflow.create_attribute {dbqd.cms.tcl.workflow-procs-oracle.wf_export_workflow.create_attribute {
declare
    v_attribute_id integer;
begin
    v_attribute_id := workflow.create_attribute(
        workflow_key => '[db_quote $new_workflow_key]',
        attribute_name => '[db_quote $attribute_name]',
        datatype => '[db_quote $datatype]',
        pretty_name => '[db_quote $pretty_name]',
        default_value => '[db_quote $default_value]'
    );
end;
/
show errors
        } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/cms/tcl/workflow-procs-oracle.xql}
dbqd.cms.tcl.workflow-procs-oracle.wf_export_workflow.add_trans_attribute_map {dbqd.cms.tcl.workflow-procs-oracle.wf_export_workflow.add_trans_attribute_map {
begin
    workflow.add_trans_attribute_map(
        workflow_key   => '[db_quote $new_workflow_key]', 
        transition_key => '[db_quote $transition_key]',
        attribute_name => '[db_quote $attribute_name]',
        sort_order     => [ad_decode $sort_order "" "null" $sort_order]
    );
end;
/
show errors
        } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/cms/tcl/workflow-procs-oracle.xql}
dbqd.cms.tcl.workflow-procs-oracle.wf_export_workflow.add_trans_role_assign_map {dbqd.cms.tcl.workflow-procs-oracle.wf_export_workflow.add_trans_role_assign_map {
begin
    workflow.add_trans_role_assign_map(
        workflow_key    => '[db_quote $new_workflow_key]',
        transition_key  => '[db_quote $transition_key]',
        assign_role_key => '[db_quote $assign_role_key]'
    );
end;
/
show errors;
        } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/cms/tcl/workflow-procs-oracle.xql}
dbqd.cms.tcl.workflow-procs-oracle.workflow::notify_of_assignments.noa_get_assignments {dbqd.cms.tcl.workflow-procs-oracle.workflow::notify_of_assignments.noa_get_assignments {
      
      select
        transition_name, party_id, 
        content_item.get_title(i.item_id, 'f') as title,
        to_char(cd.deadline,'Month DD, YYYY') as deadline_pretty,
        nvl(party.name(party_id), person.name(party_id)) as name
      from
        wf_transitions t, cr_items i,
        wf_cases c, wf_case_assignments ca, wf_case_deadlines cd,
    	wf_transition_role_assign_map trans_role
      where
        c.workflow_key = 'publishing_wf'
      and
        c.workflow_key = t.workflow_key
      and
    	ca.role_key = trans_role.assign_role_key
      and
    	t.transition_key = trans_role.transition_key
      and
        trans_role.transition_key = cd.transition_key
      and
        c.case_id = ca.case_id
      and
        c.case_id = cd.case_id
      and
        c.case_id = :case_id
      and
        c.state = 'active'
      and
        c.object_id = i.item_id
    
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/cms/tcl/workflow-procs-oracle.xql}
dbqd.cms.tcl.workflow-procs-oracle.workflow::notify_admin_of_finished_task.naoft_get_name {dbqd.cms.tcl.workflow-procs-oracle.workflow::notify_admin_of_finished_task.naoft_get_name {
      
      select person.name( :user_id ) from dual
    
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/cms/tcl/workflow-procs-oracle.xql}
dbqd.cms.tcl.workflow-procs-oracle.workflow::notify_admin_of_finished_task.naoft_get_task_info {dbqd.cms.tcl.workflow-procs-oracle.workflow::notify_admin_of_finished_task.naoft_get_task_info {
      
      select
        transition_name, 
        content_item.get_title(i.item_id,'f') as title,
        o.creation_user as admin_id,
        person.name( o.creation_user ) as admin_name,
        to_char(sysdate,'Mon DD, YYYY') as today
      from
        wf_tasks t, wf_transitions tr, wf_cases c,
        cr_items i, acs_objects o
      where
        tr.transition_key = t.transition_key
      and
        tr.workflow_key = t.workflow_key
      and
        t.case_id = c.case_id
      and
        c.object_id = i.item_id
      and
        i.item_id = o.object_id
      and
        t.task_id = :task_id
    
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/cms/tcl/workflow-procs-oracle.xql}
dbqd.cms.tcl.workflow-procs.workflow::notify_of_assignments.notify {dbqd.cms.tcl.workflow-procs.workflow::notify_of_assignments.notify {

	   select acs_mail_nt__post_request(
	      :user_id,
	      :party_id,
	      :subject,
	      :message
	  );

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/cms/tcl/workflow-procs-postgresql.xql}
dbqd.cms.tcl.workflow-procs.workflow::notify_admin_of_new_tasks.notify {dbqd.cms.tcl.workflow-procs.workflow::notify_admin_of_new_tasks.notify {

	   select acs_mail_nt__post_request(
	      null,
	      :admin_id,
	      :subject,
	      :message
	  );

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/cms/tcl/workflow-procs-postgresql.xql}
dbqd.cms.tcl.workflow-procs.workflow::notify_admin_of_finished_task.notify {dbqd.cms.tcl.workflow-procs.workflow::notify_admin_of_finished_task.notify {

	   select acs_mail_nt__post_request(
	      null,
	      :admin_id,
	      :subject,
	      :message
	  );

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/cms/tcl/workflow-procs-postgresql.xql}
dbqd.cms.tcl.workflow-procs.workflow::notify_of_assignments.noa_get_assignments {dbqd.cms.tcl.workflow-procs.workflow::notify_of_assignments.noa_get_assignments {
      
      select
        transition_name, party_id, 
        content_item__get_title(i.item_id, 'f') as title,
        to_char(cd.deadline,'Month DD, YYYY') as deadline_pretty,
        coalesce(party__name(party_id), person__name(party_id)) as name
      from
        wf_transitions t, cr_items i,
        wf_cases c, wf_case_assignments ca, wf_case_deadlines cd,
    	wf_transition_role_assign_map trans_role
      where
        c.workflow_key = 'publishing_wf'
      and
        c.workflow_key = t.workflow_key
      and
    	ca.role_key = trans_role.assign_role_key
      and
    	t.transition_key = trans_role.transition_key
      and
        trans_role.transition_key = cd.transition_key
      and
        c.case_id = ca.case_id
      and
        c.case_id = cd.case_id
      and
        c.case_id = :case_id
      and
        c.state = 'active'
      and
        c.object_id = i.item_id
    
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/cms/tcl/workflow-procs-postgresql.xql}
dbqd.cms.tcl.workflow-procs.workflow::notify_of_assignments.notify {dbqd.cms.tcl.workflow-procs.workflow::notify_of_assignments.notify {

	  begin
	    return acs_mail_nt__post_request(
	        :user_id,     -- party_from
	        :party_id,    -- party_to
	        'f',          -- expand_group
	        :subject,     -- subject
	        :message,     -- message
	        0             -- max_retries            
	    );
      end;

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/cms/tcl/workflow-procs-postgresql.xql}
dbqd.cms.tcl.workflow-procs.workflow::notify_admin_of_new_tasks.naont_get_assignments {dbqd.cms.tcl.workflow-procs.workflow::notify_admin_of_new_tasks.naont_get_assignments {
      
      select
        o.creation_user as admin_id, transition_name, party_id, 
        content_item__get_title(i.item_id, 'f') as title,
        to_char(deadline,'Month DD, YYYY') as deadline_pretty,
        coalesce(party__name(party_id),person__name(party_id)) as name,
        coalesce(party__name(admin_id),person__name(admin_id)) as admin_name
      from
        wf_cases c, wf_case_assignments ca, wf_case_deadlines cd,
        wf_transitions t, cr_items i, acs_objects o,
    	wf_transition_role_assign_map trans_role
      where
        c.workflow_key = 'publishing_wf'
      and
        c.workflow_key = t.workflow_key
      and
        c.case_id = ca.case_id
      and
        c.case_id = cd.case_id
      and
        c.case_id = :case_id
      and
    	ca.role_key = trans_role.assign_role_key
      and
    	t.transition_key = trans_role.transition_key
      and
        trans_role.transition_key = cd.transition_key
      and
        t.transition_key = :transition_key
      and
        c.state = 'active'
      and
        c.object_id = i.item_id
      and
        c.case_id = o.object_id
    
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/cms/tcl/workflow-procs-postgresql.xql}
dbqd.cms.tcl.workflow-procs.workflow::notify_admin_of_new_tasks.notify {dbqd.cms.tcl.workflow-procs.workflow::notify_admin_of_new_tasks.notify {

	  begin
	    return acs_mail_nt__post_request(
	        null,           -- party_from
	        :admin_id,    -- party_to
	        'f',          -- expand_group
	        :subject,     -- subject
	        :message,     -- message
	        0             -- max_retries            
	    );
      end;

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/cms/tcl/workflow-procs-postgresql.xql}
dbqd.cms.tcl.workflow-procs.workflow::notify_admin_of_finished_task.naoft_get_name {dbqd.cms.tcl.workflow-procs.workflow::notify_admin_of_finished_task.naoft_get_name {
      
      select person__name( :user_id ) 
    
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/cms/tcl/workflow-procs-postgresql.xql}
dbqd.cms.tcl.workflow-procs.workflow::notify_admin_of_finished_task.naoft_get_task_info {dbqd.cms.tcl.workflow-procs.workflow::notify_admin_of_finished_task.naoft_get_task_info {
      
      select
        transition_name, 
        content_item__get_title(i.item_id,'f') as title,
        o.creation_user as admin_id,
        person__name( o.creation_user ) as admin_name,
        to_char(current_timestamp,'Mon DD, YYYY') as today
      from
        wf_tasks t, wf_transitions tr, wf_cases c,
        cr_items i, acs_objects o
      where
        tr.transition_key = t.transition_key
      and
        tr.workflow_key = t.workflow_key
      and
        t.case_id = c.case_id
      and
        c.object_id = i.item_id
      and
        i.item_id = o.object_id
      and
        t.task_id = :task_id
    
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/cms/tcl/workflow-procs-postgresql.xql}
dbqd.cms.tcl.workflow-procs.workflow::notify_admin_of_finished_task.notify {dbqd.cms.tcl.workflow-procs.workflow::notify_admin_of_finished_task.notify {

	  begin
	    return acs_mail_nt__post_request(
	        null,           -- party_from
	        :admin_id,    -- party_to
	        'f',          -- expand_group
	        :subject,     -- subject
	        :message,     -- message
	        0             -- max_retries            
	    );
      end;

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/cms/tcl/workflow-procs-postgresql.xql}
dbqd.cms.tcl.workflow-procs.workflow::check_wf_permission.cwp_touch_info {dbqd.cms.tcl.workflow-procs.workflow::check_wf_permission.cwp_touch_info {
      
      select
        content_workflow__can_touch( :item_id, :user_id )
      from
        dual
    
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/cms/tcl/workflow-procs-postgresql.xql}
dbqd.cms.www.head.get_name {dbqd.cms.www.head.get_name {
      
  select first_names || ' ' || last_name 
    from persons where person_id = :user_id
      } {} {} {} c:/web/openacs-4/packages/cms/www/head.xql}
dbqd.cms.www.index-oracle.content_root {dbqd.cms.www.index-oracle.content_root {
      
      select content_item.get_root_folder from dual

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/cms/www/index-oracle.xql}
dbqd.cms.www.index-oracle.template_root {dbqd.cms.www.index-oracle.template_root {

      select content_template.get_root_folder from dual

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/cms/www/index-oracle.xql}
dbqd.cms.www.index.content_root {dbqd.cms.www.index.content_root {
      
      select content_item__get_root_folder(null)

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/cms/www/index-postgresql.xql}
dbqd.cms.www.index.template_root {dbqd.cms.www.index.template_root {

      select content_template__get_root_folder()

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/cms/www/index-postgresql.xql}
dbqd.cms.www.index.get_name {dbqd.cms.www.index.get_name {
      
  select 
    first_names || ' ' || last_name 
  from 
    persons 
  where 
    person_id = :user_id

      } {} {} {} c:/web/openacs-4/packages/cms/www/index.xql}
dbqd.cms.www.item.create-oracle.new_content_item {dbqd.cms.www.item.create-oracle.new_content_item {
      begin 
    :1 := content_item.new(:name, :context_id, :item_id, sysdate, NULL,
                           '[ns_conn peeraddr]', 'content_item'); 
  end;
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/cms/www/item/create-oracle.xql}
dbqd.cms.www.item.create-oracle.new_revision {dbqd.cms.www.item.create-oracle.new_revision {
      begin 
    :1 := content_revision.new(:title, :description, $publish_date, 
                               :mime_type, NULL, :text, 'content_revision', 
                               :item_id, :revision_id);
  end;
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/cms/www/item/create-oracle.xql}
dbqd.cms.www.item.create-oracle.get_item_id {dbqd.cms.www.item.create-oracle.get_item_id {

        select acs_object_id_seq.nextval from dual

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/cms/www/item/create-oracle.xql}
dbqd.cms.www.item.create-oracle.get_revision_id {dbqd.cms.www.item.create-oracle.get_revision_id {

        select acs_object_id_seq.nextval from dual

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/cms/www/item/create-oracle.xql}
dbqd.cms.www.item.create.new_content_item {dbqd.cms.www.item.create.new_content_item {
     
    select content_item__new(varchar :name, 
                             :context_id, 
                             :item_id, 
                             null,
                             current_timestamp, 
                             null,
                             NULL,
                             '[ns_conn peeraddr]', 
                             'content_item',
                             'content_revision',
                             null,
                             null,
                             'text/plain',
                             null,
                             null,
                             'text'); 

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/cms/www/item/create-postgresql.xql}
dbqd.cms.www.item.create.new_revision {dbqd.cms.www.item.create.new_revision {

    select content_revision__new(:title, 
                                 :description, 
                                 $publish_date, 
                                 :mime_type, 
                                 NULL, 
                                 :text, 
--                                 'content_revision', 
                                 :item_id, 
                                 :revision_id,
                                  now(),
                                  null,
                                  null,
                                  null);

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/cms/www/item/create-postgresql.xql}
dbqd.cms.www.item.create.get_item_id {dbqd.cms.www.item.create.get_item_id {

        select acs_object_id_seq.nextval

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/cms/www/item/create-postgresql.xql}
dbqd.cms.www.item.create.get_revision_id {dbqd.cms.www.item.create.get_revision_id {

        select acs_object_id_seq.nextval

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/cms/www/item/create-postgresql.xql}
dbqd.cms.www.item.create.get_mime_types {dbqd.cms.www.item.create.get_mime_types {
     
        select label, mime_type from cr_mime_types order by label

      } {} {} {} c:/web/openacs-4/packages/cms/www/item/create.xql}
dbqd.cms.www.modules.categories.create-oracle.new_keyword {dbqd.cms.www.modules.categories.create-oracle.new_keyword {
      
    begin :1 := content_keyword.new(
      heading => :heading, 
      description => :description, 
      keyword_id => :keyword_id,
      creation_user => :user_id,
      creation_ip => :ip$pid); end;
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/cms/www/modules/categories/create-oracle.xql}
dbqd.cms.www.modules.categories.create-oracle.get_keyword_id {dbqd.cms.www.modules.categories.create-oracle.get_keyword_id {
      
    select acs_object_id_seq.nextval from dual
  
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/cms/www/modules/categories/create-oracle.xql}
dbqd.cms.www.modules.categories.create-oracle.pid {dbqd.cms.www.modules.categories.create-oracle.pid {      
         ,parent_id => :parent_id  
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/cms/www/modules/categories/create-oracle.xql}
dbqd.cms.www.modules.categories.create.new_keyword {dbqd.cms.www.modules.categories.create.new_keyword {

    select content_keyword__new(
      :heading, 
      :description, 
      :pid,
      :keyword_id,
      now(),
      :user_id,
      :ip,
      'content_keyword');

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/cms/www/modules/categories/create-postgresql.xql}
dbqd.cms.www.modules.categories.create.get_keyword_id {dbqd.cms.www.modules.categories.create.get_keyword_id {
      
    select acs_object_id_seq.nextval 
  
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/cms/www/modules/categories/create-postgresql.xql}
dbqd.cms.www.modules.categories.create.pid {dbqd.cms.www.modules.categories.create.pid {      
$parent_id  
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/cms/www/modules/categories/create-postgresql.xql}
dbqd.cms.www.modules.categories.delete-oracle.delete_keyword {dbqd.cms.www.modules.categories.delete-oracle.delete_keyword {
      begin :1 := content_keyword.del(:id); end;
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/cms/www/modules/categories/delete-oracle.xql}
dbqd.cms.www.modules.categories.delete-oracle.get_empty_status {dbqd.cms.www.modules.categories.delete-oracle.get_empty_status {
      
  select content_keyword.is_leaf(:id) from dual

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/cms/www/modules/categories/delete-oracle.xql}
dbqd.cms.www.modules.categories.delete.delete_keyword {dbqd.cms.www.modules.categories.delete.delete_keyword {

     select content_keyword__delete(:id);

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/cms/www/modules/categories/delete-postgresql.xql}
dbqd.cms.www.modules.categories.delete.get_empty_status {dbqd.cms.www.modules.categories.delete.get_empty_status {
      
  select content_keyword__is_leaf(:id) 

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/cms/www/modules/categories/delete-postgresql.xql}
dbqd.cms.www.modules.categories.edit-oracle.edit_keyword {dbqd.cms.www.modules.categories.edit-oracle.edit_keyword {
      
    begin 
      content_keyword.set_heading(:keyword_id, :heading);
      content_keyword.set_description(:keyword_id, :description);
    end;
      
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/cms/www/modules/categories/edit-oracle.xql}
dbqd.cms.www.modules.categories.edit-oracle.get_info {dbqd.cms.www.modules.categories.edit-oracle.get_info {
      
  select
    content_keyword.get_heading(:id) heading,
    content_keyword.get_description(:id) description,
    case when content_keyword.is_leaf(:id) = 't' then 'keyword' else 'category' end as what
  from
    dual
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/cms/www/modules/categories/edit-oracle.xql}
dbqd.cms.www.modules.categories.edit.edit_keyword {dbqd.cms.www.modules.categories.edit.edit_keyword {


    begin 
      PERFORM content_keyword__set_heading(:keyword_id, :heading);
      PERFORM content_keyword__set_description(:keyword_id, :description);

      return null;
    end;
      
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/cms/www/modules/categories/edit-postgresql.xql}
dbqd.cms.www.modules.categories.edit.get_info {dbqd.cms.www.modules.categories.edit.get_info {
      
  select
    content_keyword__get_heading(:id) as heading,
    content_keyword__get_description(:id) as description,
    case when content_keyword__is_leaf(:id) = 't' then 'keyword' else 'category' end as what
  from
    dual

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/cms/www/modules/categories/edit-postgresql.xql}
dbqd.cms.www.modules.categories.index-oracle.get_info {dbqd.cms.www.modules.categories.index-oracle.get_info {
      
    select 
      content_keyword.is_leaf(:id) as is_leaf,
      content_keyword.get_heading(:id) as heading,
      content_keyword.get_description(:id) as description,
      content_keyword.get_path(:id) as path
    from 
      dual
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/cms/www/modules/categories/index-oracle.xql}
dbqd.cms.www.modules.categories.index-oracle.get_items {dbqd.cms.www.modules.categories.index-oracle.get_items {
      
  select
    keyword_id,
    content_keyword.is_leaf(keyword_id) as is_leaf,
    content_keyword.get_heading(keyword_id) as heading,
    (select count(*) from cr_item_keyword_map m
      where m.keyword_id = k.keyword_id) as item_count
  from
    cr_keywords k
  where
    $where_clause
  order by
    is_leaf, heading

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/cms/www/modules/categories/index-oracle.xql}
dbqd.cms.www.modules.categories.index.get_info {dbqd.cms.www.modules.categories.index.get_info {
      
    select 
      content_keyword__is_leaf(:id) as is_leaf,
      content_keyword__get_heading(:id) as heading,
      content_keyword__get_description(:id) as description,
      content_keyword__get_path(:id) as path
    from 
      dual

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/cms/www/modules/categories/index-postgresql.xql}
dbqd.cms.www.modules.categories.index.get_items {dbqd.cms.www.modules.categories.index.get_items {
      
  select
    keyword_id,
    content_keyword__is_leaf(keyword_id) as is_leaf,
    content_keyword__get_heading(keyword_id) as heading,
    (select count(*) from cr_item_keyword_map m
      where m.keyword_id = k.keyword_id) as item_count
  from
    cr_keywords k
  where
    $where_clause
  order by
    is_leaf, heading

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/cms/www/modules/categories/index-postgresql.xql}
dbqd.cms.www.modules.categories.index.get_parent_id {dbqd.cms.www.modules.categories.index.get_parent_id {
      
    select
      context_id
    from
      acs_objects
    where
      object_id = :id

      } {} {} {} c:/web/openacs-4/packages/cms/www/modules/categories/index.xql}
dbqd.cms.www.modules.categories.keyword-assign-oracle.assign_keyword {dbqd.cms.www.modules.categories.keyword-assign-oracle.assign_keyword {
      

       begin content_keyword.item_assign(:resolved_id, :item_id); end;

            
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/cms/www/modules/categories/keyword-assign-oracle.xql}
dbqd.cms.www.modules.categories.keyword-assign.assign_keyword {dbqd.cms.www.modules.categories.keyword-assign.assign_keyword {


       select content_keyword__item_assign(:resolved_id, :item_id, null, null, null)

            
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/cms/www/modules/categories/keyword-assign-postgresql.xql}
dbqd.cms.www.modules.categories.keyword-unassign-oracle.unassign_keyword {dbqd.cms.www.modules.categories.keyword-unassign-oracle.unassign_keyword {
      
  begin content_keyword.item_unassign(:resolved_id, :keyword_id); end;

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/cms/www/modules/categories/keyword-unassign-oracle.xql}
dbqd.cms.www.modules.categories.keyword-unassign.unassign_keyword {dbqd.cms.www.modules.categories.keyword-unassign.unassign_keyword {

  select content_keyword__item_unassign(:resolved_id, :keyword_id)

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/cms/www/modules/categories/keyword-unassign-postgresql.xql}
dbqd.cms.www.modules.categories.move.move_keyword_item {dbqd.cms.www.modules.categories.move.move_keyword_item {
      
       update cr_items set parent_id = $update_value
         where item_id = $item_id
         and exists (
           select 1 from cr_keywords where keyword_id = item_id
         )
      } {} {} {} c:/web/openacs-4/packages/cms/www/modules/categories/move.xql}
dbqd.cms.www.modules.categories.move.move_keyword_keyword {dbqd.cms.www.modules.categories.move.move_keyword_keyword {
      
       update cr_keywords set parent_id = $update_value
         where keyword_id = $item_id
      } {} {} {} c:/web/openacs-4/packages/cms/www/modules/categories/move.xql}
dbqd.cms.www.modules.items.assign-keywords-oracle.item_assign {dbqd.cms.www.modules.items.assign-keywords-oracle.item_assign {
      
        begin 
         :1 := content_keyword.item_assign(
          :root_id, :item_id, null, :user_id, :ip); 
        end;
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/cms/www/modules/items/assign-keywords-oracle.xql}
dbqd.cms.www.modules.items.assign-keywords.item_assign {dbqd.cms.www.modules.items.assign-keywords.item_assign {


        select content_keyword__item_assign(
          :root_id, :item_id, null, :user_id, :ip); 

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/cms/www/modules/items/assign-keywords-postgresql.xql}
dbqd.cms.www.modules.items.attributes-edit-oracle.get_item {dbqd.cms.www.modules.items.attributes-edit-oracle.get_item {
      
  select 
    i.content_type, i.name, nvl(r.title, i.name) title, i.latest_revision
  from
    cr_items i, cr_revisions r
  where
   i.item_id = :item_id
  and
   i.latest_revision = r.revision_id (+)

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/cms/www/modules/items/attributes-edit-oracle.xql}
dbqd.cms.www.modules.items.attributes-edit.get_item {dbqd.cms.www.modules.items.attributes-edit.get_item {

  select 
    i.content_type, i.name, coalesce(r.title, i.name) as title, i.latest_revision
  from
    cr_items i left outer join cr_revisions r on i.latest_revision = r.revision_id 
  where
   i.item_id = :item_id

      } {} {} {} c:/web/openacs-4/packages/cms/www/modules/items/attributes-edit.xql}
dbqd.cms.www.modules.items.attributes-oracle.get_info {dbqd.cms.www.modules.items.attributes-oracle.get_info {
      
  select
    content_item.get_revision_count(x.item_id) revision_count, 
    content_revision.get_number(:revision_id) revision_number, 
    content_item.get_live_revision(x.item_id) live_revision, 
    x.*
  from
    $type_info(table_name)x x
  where
    object_id = :revision_id
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/cms/www/modules/items/attributes-oracle.xql}
dbqd.cms.www.modules.items.attributes-oracle.get_attributes {dbqd.cms.www.modules.items.attributes-oracle.get_attributes {
      
  select 
    types.pretty_name object_label, 
    types.table_name, 
    types.id_column, 
    attr.attribute_name, 
    attr.pretty_name attribute_label
  from 
    acs_attributes attr,
    ( select 
        object_type, pretty_name, table_name, id_column, 
        level as inherit_level
      from 
        acs_object_types
      where 
        object_type ^= 'acs_object'
      connect by 
        prior supertype = object_type
      start with 
        object_type = :content_type) types        
  where 
    attr.object_type = types.object_type
  order by 
    types.inherit_level desc, attr.sort_order
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/cms/www/modules/items/attributes-oracle.xql}
dbqd.cms.www.modules.items.attributes.get_info {dbqd.cms.www.modules.items.attributes.get_info {
      
  select
    content_item__get_revision_count(x.item_id) as revision_count, 
    content_revision__get_number(:revision_id) as revision_number, 
    content_item__get_live_revision(x.item_id) as live_revision, 
    x.*
  from
    $type_info(table_name)x x
  where
    object_id = :revision_id
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/cms/www/modules/items/attributes-postgresql.xql}
dbqd.cms.www.modules.items.attributes.get_attributes {dbqd.cms.www.modules.items.attributes.get_attributes {

  select 
    types.pretty_name as object_label, 
    types.table_name, 
    types.id_column, 
    attr.attribute_name, 
    attr.pretty_name as attribute_label
  from 
    acs_attributes attr,
    ( select 
        ot2.object_type, ot2.pretty_name, ot2.table_name, ot2.id_column, 
        tree_level(ot2.tree_sortkey) as inherit_level
      from 
        (select * from acs_object_types where object_type = :content_type) ot1, 
        acs_object_types ot2
      where 
        ot2.object_type != 'acs_object'
      and ot1.tree_sortkey between ot2.tree_sortkey and tree_right(ot2.tree_sortkey)) types        
  where 
    attr.object_type = types.object_type
  order by 
    types.inherit_level desc, attr.sort_order
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/cms/www/modules/items/attributes-postgresql.xql}
dbqd.cms.www.modules.items.attributes.get_type_info {dbqd.cms.www.modules.items.attributes.get_type_info {
      
  select 
    o.object_type, t.table_name 
  from 
    acs_objects o, acs_object_types t
  where 
    o.object_id = :revision_id
  and
    o.object_type = t.object_type

      } {} {} {} c:/web/openacs-4/packages/cms/www/modules/items/attributes.xql}
dbqd.cms.www.modules.items.children-oracle.get_child_types {dbqd.cms.www.modules.items.children-oracle.get_child_types {

  select
    distinct t.pretty_name, c.child_type
  from
    acs_object_types t, cr_type_children c
  where
    c.parent_type = content_item.get_content_type(:item_id)
  and
    c.child_type = t.object_type      

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/cms/www/modules/items/children-oracle.xql}
dbqd.cms.www.modules.items.children-oracle.get_children {dbqd.cms.www.modules.items.children-oracle.get_children {
select  
     r.rel_id,  
     r.child_id item_id,  
     t.pretty_name as type_name,  
     NVL(r.relation_tag, '-') as tag,  
     trim(NVL(content_item.get_title(r.child_id), i.name)) title,  
     ot.pretty_name as content_type  
   from  
     cr_child_rels r, acs_objects o, acs_object_types t,  
     cr_items i, acs_object_types ot  
   where  
     r.parent_id = :item_id  
   and  
     o.object_id = r.rel_id  
   and  
     t.object_type = o.object_type  
   and  
     i.item_id = r.child_id  
   and  
     ot.object_type = i.content_type  
   order by  
     order_n, title

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/cms/www/modules/items/children-oracle.xql}
dbqd.cms.www.modules.items.children.get_child_types {dbqd.cms.www.modules.items.children.get_child_types {

  select
    distinct t.pretty_name, c.child_type
  from
    acs_object_types t, cr_type_children c
  where
    c.parent_type = content_item__get_content_type(:item_id)
  and
    c.child_type = t.object_type      

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/cms/www/modules/items/children-postgresql.xql}
dbqd.cms.www.modules.items.children.get_children {dbqd.cms.www.modules.items.children.get_children {

  select
    r.rel_id,
    r.child_id as item_id,
    t.pretty_name as type_name,
    coalesce(r.relation_tag, '-') as tag,
    trim(coalesce(content_item__get_title(r.child_id,'f'), i.name)) as title,
    ot.pretty_name as content_type
  from
    cr_child_rels r, acs_objects o, acs_object_types t,
    cr_items i, acs_object_types ot
  where
    r.parent_id = :item_id
  and
    o.object_id = r.rel_id
  and
    t.object_type = o.object_type
  and 
    i.item_id = r.child_id
  and
    ot.object_type = i.content_type
  order by 
    order_n, title

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/cms/www/modules/items/children-postgresql.xql}
dbqd.cms.www.modules.items.comment-add-oracle.new_entry {dbqd.cms.www.modules.items.comment-add-oracle.new_entry {
      
    begin
      :1 := journal_entry.new(
                             journal_id => :journal_id,
                             object_id => :object_id,
                             action => 'comment',
                             action_pretty => 'Comment',
                             creation_user => :user_id,
                             creation_ip  => :ip_address,
                             msg => :msg );
    end;
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/cms/www/modules/items/comment-add-oracle.xql}
dbqd.cms.www.modules.items.comment-add-oracle.get_title {dbqd.cms.www.modules.items.comment-add-oracle.get_title {
      
  select content_item.get_title(:item_id) from dual

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/cms/www/modules/items/comment-add-oracle.xql}
dbqd.cms.www.modules.items.comment-add-oracle.get_journal_id {dbqd.cms.www.modules.items.comment-add-oracle.get_journal_id {
      
    select acs_object_id_seq.nextval from dual
  
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/cms/www/modules/items/comment-add-oracle.xql}
dbqd.cms.www.modules.items.comment-add.new_entry {dbqd.cms.www.modules.items.comment-add.new_entry {

                select journal_entry__new(
                             :journal_id,
                             :object_id,
                             'comment',
                             'Comment',
                             now(),
                             :user_id,
                             :ip_address,
                             :msg );
    
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/cms/www/modules/items/comment-add-postgresql.xql}
dbqd.cms.www.modules.items.comment-add.get_title {dbqd.cms.www.modules.items.comment-add.get_title {
      
  select content_item__get_title(:item_id, 'f') 

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/cms/www/modules/items/comment-add-postgresql.xql}
dbqd.cms.www.modules.items.comment-add.get_journal_id {dbqd.cms.www.modules.items.comment-add.get_journal_id {
      
    select acs_object_id_seq.nextval 
  
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/cms/www/modules/items/comment-add-postgresql.xql}
dbqd.cms.www.modules.items.comments-oracle.get_comments {dbqd.cms.www.modules.items.comments-oracle.get_comments {
      
  select
    journal_id, action_pretty, msg, 
    decode(NVL(p.person_id, 0),
        0, 'System',
        substr(p.first_names, 1, 1) || '. ' || p.last_name) person,
    to_char(o.creation_date, 'MM/DD/YY HH24:MI:SS') when
  from
    journal_entries j, acs_objects o, persons p
  where
  (   
      j.object_id = :item_id
    or
      j.object_id in (select case_id from wf_cases c 
                      where c.object_id = :item_id)
  ) and
    j.journal_id = o.object_id
  and
    o.creation_user = p.person_id (+)
  and
    msg is not null
  and
    rownum < 11
  order by
    o.creation_date desc
  

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/cms/www/modules/items/comments-oracle.xql}
dbqd.cms.www.modules.items.comments.get_comments {dbqd.cms.www.modules.items.comments.get_comments {

  select
    journal_id, action_pretty, msg, 
    case when coalesce(p.person_id, 0) = 0 
              then 'System' 
              else 
                   substr(p.first_names, 1, 1) || '. ' || p.last_name 
         end as person,
    to_char(o.creation_date, 'MM/DD/YY HH24:MI:SS') as when
  from
    journal_entries j, acs_objects o left outer join persons p on o.creation_user = p.person_id 
  where
  (   
      j.object_id = :item_id
    or
      j.object_id in (select case_id from wf_cases c 
                      where c.object_id = :item_id)
  ) and
    j.journal_id = o.object_id
  and
    msg is not null
  order by
    o.creation_date desc
  limit 10

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/cms/www/modules/items/comments-postgresql.xql}
dbqd.cms.www.modules.items.content-add-1.get_revision {dbqd.cms.www.modules.items.content-add-1.get_revision {
      
  select
    i.item_id, content_type, title as name, mime_type
  from
    cr_revisions r, cr_items i
  where
    i.item_id = r.item_id
  and
    r.revision_id = :revision_id

      } {} {} {} c:/web/openacs-4/packages/cms/www/modules/items/content-add-1.xql}
dbqd.cms.www.modules.items.content-add-2.get_revision {dbqd.cms.www.modules.items.content-add-2.get_revision {
      
  select
    item_id, title as name
  from
    cr_revisions
  where
    revision_id = :revision_id

      } {} {} {} c:/web/openacs-4/packages/cms/www/modules/items/content-add-2.xql}
dbqd.cms.www.modules.items.content-download-oracle.get_iteminfo {dbqd.cms.www.modules.items.content-download-oracle.get_iteminfo {
      
  select
    item_id, mime_type, content_revision.is_live( revision_id ) is_live
  from
    cr_revisions
  where
    revision_id = :revision_id

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/cms/www/modules/items/content-download-oracle.xql}
dbqd.cms.www.modules.items.content-download.get_iteminfo {dbqd.cms.www.modules.items.content-download.get_iteminfo {
      
  select
    item_id, mime_type, content_revision__is_live( revision_id ) as is_live
  from
    cr_revisions
  where
    revision_id = :revision_id

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/cms/www/modules/items/content-download-postgresql.xql}
dbqd.cms.www.modules.items.create-1.get_content_typ_name {dbqd.cms.www.modules.items.create-1.get_content_typ_name {
      
  select
    pretty_name
  from
    acs_object_types
  where
    object_type = :content_type

      } {} {} {} c:/web/openacs-4/packages/cms/www/modules/items/create-1.xql}
dbqd.cms.www.modules.items.create-2-oracle.get_item {dbqd.cms.www.modules.items.create-2-oracle.get_item {
      
  select 
    nvl(content_item.get_path(:parent_id), '/') as item_path,
    pretty_name as content_type_name
  from
    acs_object_types
  where
    object_type = :content_type

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/cms/www/modules/items/create-2-oracle.xql}
dbqd.cms.www.modules.items.create-2.get_item {dbqd.cms.www.modules.items.create-2.get_item {
      
  select 
    coalesce(content_item__get_path(:parent_id,null), '/') as item_path,
    pretty_name as content_type_name
  from
    acs_object_types
  where
    object_type = :content_type

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/cms/www/modules/items/create-2-postgresql.xql}
dbqd.cms.www.modules.items.custom.cr_demo_article_image.create-1.get_content_type {dbqd.cms.www.modules.items.custom.cr_demo_article_image.create-1.get_content_type {
      
  select
    pretty_name
  from
    acs_object_types
  where
    object_type = :content_type

      } {} {} {} c:/web/openacs-4/packages/cms/www/modules/items/custom/cr_demo_article_image/create-1.xql}
dbqd.cms.www.modules.items.custom.cr_demo_article_image.create-2-oracle.new_revision {dbqd.cms.www.modules.items.custom.cr_demo_article_image.create-2-oracle.new_revision {
      
      begin
      :1 := content_revision.new (
        item_id       => :item_id,
        title         => :title,
        description   => :description,
        mime_type     => :mime_type,
        creation_user => :user_id,
        creation_ip   => :ip_address
      );
      end;
    
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/cms/www/modules/items/custom/cr_demo_article_image/create-2-oracle.xql}
dbqd.cms.www.modules.items.custom.cr_demo_article_image.create-2-oracle.update_content {dbqd.cms.www.modules.items.custom.cr_demo_article_image.create-2-oracle.update_content {
      
          update cr_revisions
            set content = empty_blob()
            where revision_id = $revision_id
            returning content into :1
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/cms/www/modules/items/custom/cr_demo_article_image/create-2-oracle.xql}
dbqd.cms.www.modules.items.custom.cr_demo_article_image.create-2.new_revision {dbqd.cms.www.modules.items.custom.cr_demo_article_image.create-2.new_revision {

        select content_revision__new (
          :title,
          :description,
          now(),
          :mime_type,
          null,
          ' ',
          :item_id,
          null,
          now(),
          :user_id,
          :ip_address
      );
      
    
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/cms/www/modules/items/custom/cr_demo_article_image/create-2-postgresql.xql}
dbqd.cms.www.modules.items.custom.cr_demo_article_image.create-2.update_content {dbqd.cms.www.modules.items.custom.cr_demo_article_image.create-2.update_content {

          update cr_revisions
            set content = empty_lob()
            where revision_id = $revision_id

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/cms/www/modules/items/custom/cr_demo_article_image/create-2-postgresql.xql}
dbqd.cms.www.modules.items.custom.cr_demo_article_image.create-2.abort {dbqd.cms.www.modules.items.custom.cr_demo_article_image.create-2.abort {
      abort transaction
      } {} {} {} c:/web/openacs-4/packages/cms/www/modules/items/custom/cr_demo_article_image/create-2.xql}
dbqd.cms.www.modules.items.custom.cr_demo_article_image.create-2.insert_image {dbqd.cms.www.modules.items.custom.cr_demo_article_image.create-2.insert_image {
      
      insert into images (
        image_id, width, height
      ) values (
        :revision_id, :width, :height
      )
      } {} {} {} c:/web/openacs-4/packages/cms/www/modules/items/custom/cr_demo_article_image/create-2.xql}
dbqd.cms.www.modules.items.custom.cr_demo_article_image.create-2.insert_art_image {dbqd.cms.www.modules.items.custom.cr_demo_article_image.create-2.insert_art_image {
      
      insert into cr_demo_article_images (
        article_image_id, caption
      ) values (
        :revision_id, :caption
      )
      } {} {} {} c:/web/openacs-4/packages/cms/www/modules/items/custom/cr_demo_article_image/create-2.xql}
dbqd.cms.www.modules.items.custom.cr_demo_article_image.create-2.get_clicks {dbqd.cms.www.modules.items.custom.cr_demo_article_image.create-2.get_clicks {
      
	  select
	    count(1)
	  from
	    cr_items
	  where
	    item_id = :item_id
	
      } {} {} {} c:/web/openacs-4/packages/cms/www/modules/items/custom/cr_demo_article_image/create-2.xql}
dbqd.cms.www.modules.items.custom.image.attributes-edit.abort {dbqd.cms.www.modules.items.custom.image.attributes-edit.abort {
      abort transaction
      } {} {} {} c:/web/openacs-4/packages/cms/www/modules/items/custom/image/attributes-edit.xql}
dbqd.cms.www.modules.items.custom.image.attributes-edit.update_revisions {dbqd.cms.www.modules.items.custom.image.attributes-edit.update_revisions {
      
      update cr_revisions
        set title = :title,
        description = :description
        where revision_id = :revision_id
      } {} {} {} c:/web/openacs-4/packages/cms/www/modules/items/custom/image/attributes-edit.xql}
dbqd.cms.www.modules.items.custom.image.attributes-edit.update_images {dbqd.cms.www.modules.items.custom.image.attributes-edit.update_images {
      
      update images
        set width = :width,
        height = :height
        where image_id = :revision_id
      } {} {} {} c:/web/openacs-4/packages/cms/www/modules/items/custom/image/attributes-edit.xql}
dbqd.cms.www.modules.items.custom.image.attributes-edit.get_item_info {dbqd.cms.www.modules.items.custom.image.attributes-edit.get_item_info {
      
  select 
    i.name, i.latest_revision, r.title 
  from 
    cr_items i, cr_revisions r
  where 
    i.item_id = :item_id
  and
    i.item_id = r.item_id
  and
    i.latest_revision = r.revision_id

      } {} {} {} c:/web/openacs-4/packages/cms/www/modules/items/custom/image/attributes-edit.xql}
dbqd.cms.www.modules.items.custom.image.attributes-edit.get_latest {dbqd.cms.www.modules.items.custom.image.attributes-edit.get_latest {
      
      select
        latest_revision
      from
        cr_items
      where
        item_id = :item_id
    
      } {} {} {} c:/web/openacs-4/packages/cms/www/modules/items/custom/image/attributes-edit.xql}
dbqd.cms.www.modules.items.custom.image.attributes-edit.get_clicks {dbqd.cms.www.modules.items.custom.image.attributes-edit.get_clicks {
      
	  select
	    count(1)
	  from
	    cr_revisions
	  where
	    revision_id = :revision_id
	
      } {} {} {} c:/web/openacs-4/packages/cms/www/modules/items/custom/image/attributes-edit.xql}
dbqd.cms.www.modules.items.custom.image.content-add-1-oracle.update_revisions {dbqd.cms.www.modules.items.custom.image.content-add-1-oracle.update_revisions {
      
      update cr_revisions
        set content = empty_blob()
        where revision_id = $revision_id
        returning content into :1
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/cms/www/modules/items/custom/image/content-add-1-oracle.xql}
dbqd.cms.www.modules.items.custom.image.content-add-1.update_revisions {dbqd.cms.www.modules.items.custom.image.content-add-1.update_revisions {

      update cr_revisions
        set content = empty_lob()
        where revision_id = $revision_id

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/cms/www/modules/items/custom/image/content-add-1-postgresql.xql}
dbqd.cms.www.modules.items.custom.image.content-add-1.update_images {dbqd.cms.www.modules.items.custom.image.content-add-1.update_images {
      
      update images
        set width = :width,
        height = :height
        where image_id = :revision_id
      } {} {} {} c:/web/openacs-4/packages/cms/www/modules/items/custom/image/content-add-1.xql}
dbqd.cms.www.modules.items.custom.image.content-add-1.get_item_id {dbqd.cms.www.modules.items.custom.image.content-add-1.get_item_id {

  select
    item_id
  from
    cr_revisions
  where
    revision_id = :revision_id

      } {} {} {} c:/web/openacs-4/packages/cms/www/modules/items/custom/image/content-add-1.xql}
dbqd.cms.www.modules.items.custom.image.create-1-oracle.new_revision {dbqd.cms.www.modules.items.custom.image.create-1-oracle.new_revision {
      
      begin
      :1 := content_revision.new (
        item_id       => :item_id,
        title         => :title,
        description   => :description,
        mime_type     => :mime_type,
        creation_user => :user_id,
        creation_ip   => :ip_address
      );
      end;
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/cms/www/modules/items/custom/image/create-1-oracle.xql}
dbqd.cms.www.modules.items.custom.image.create-1-oracle.insert_revisions {dbqd.cms.www.modules.items.custom.image.create-1-oracle.insert_revisions {
      
      update cr_revisions
        set content = empty_blob()
        where revision_id = $revision_id
        returning content into :1
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/cms/www/modules/items/custom/image/create-1-oracle.xql}
dbqd.cms.www.modules.items.custom.image.create-1.new_revision {dbqd.cms.www.modules.items.custom.image.create-1.new_revision {

        select content_revision__new (
        :title,
        :description,
        now(),
        :mime_type,
        null,
        ' ',
        :item_id,
        null,
        now(),
        :user_id,
        :ip_address
      );
      
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/cms/www/modules/items/custom/image/create-1-postgresql.xql}
dbqd.cms.www.modules.items.custom.image.create-1.insert_revisions {dbqd.cms.www.modules.items.custom.image.create-1.insert_revisions {

      update cr_revisions
        set content = empty_lob()
        where revision_id = $revision_id

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/cms/www/modules/items/custom/image/create-1-postgresql.xql}
dbqd.cms.www.modules.items.custom.image.create-1.abort {dbqd.cms.www.modules.items.custom.image.create-1.abort {
      abort transaction
      } {} {} {} c:/web/openacs-4/packages/cms/www/modules/items/custom/image/create-1.xql}
dbqd.cms.www.modules.items.custom.image.create-1.insert_images {dbqd.cms.www.modules.items.custom.image.create-1.insert_images {
      
      insert into images (
        image_id, width, height
      ) values (
        :revision_id, :width, :height
      )
      } {} {} {} c:/web/openacs-4/packages/cms/www/modules/items/custom/image/create-1.xql}
dbqd.cms.www.modules.items.custom.image.create-1.get_clicks {dbqd.cms.www.modules.items.custom.image.create-1.get_clicks {
      
	  select
	    count(1)
	  from
	    cr_items
	  where
	    item_id = :item_id
	
      } {} {} {} c:/web/openacs-4/packages/cms/www/modules/items/custom/image/create-1.xql}
dbqd.cms.www.modules.items.custom.image.revision-add-1-oracle.new_revision {dbqd.cms.www.modules.items.custom.image.revision-add-1-oracle.new_revision {
      
      begin
      :1 := content_revision.new (
        item_id       => :item_id,
        title         => :title,
        description   => :description,
        mime_type     => :mime_type,
        creation_user => :user_id,
        creation_ip   => :ip_address
      );
      end;
    
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/cms/www/modules/items/custom/image/revision-add-1-oracle.xql}
dbqd.cms.www.modules.items.custom.image.revision-add-1-oracle.update_revisions {dbqd.cms.www.modules.items.custom.image.revision-add-1-oracle.update_revisions {
      
      update cr_revisions
        set content = empty_blob()
        where revision_id = $revision_id
        returning content into :1
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/cms/www/modules/items/custom/image/revision-add-1-oracle.xql}
dbqd.cms.www.modules.items.custom.image.revision-add-1.new_revision {dbqd.cms.www.modules.items.custom.image.revision-add-1.new_revision {

        select content_revision__new (
        :title,
        :description,
        now(),
        :mime_type,
        null,
        ' ',
        :item_id,
        null,
        now(),
        :user_id,
        :ip_address
      );
      end;
    
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/cms/www/modules/items/custom/image/revision-add-1-postgresql.xql}
dbqd.cms.www.modules.items.custom.image.revision-add-1.update_revisions {dbqd.cms.www.modules.items.custom.image.revision-add-1.update_revisions {

      update cr_revisions
        set content = empty_lob()
        where revision_id = $revision_id

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/cms/www/modules/items/custom/image/revision-add-1-postgresql.xql}
dbqd.cms.www.modules.items.custom.image.revision-add-1.insert_images {dbqd.cms.www.modules.items.custom.image.revision-add-1.insert_images {
      
      insert into images (
        image_id, width, height
      ) values (
        :revision_id, :width, :height
      )
      } {} {} {} c:/web/openacs-4/packages/cms/www/modules/items/custom/image/revision-add-1.xql}
dbqd.cms.www.modules.items.custom.image.revision-add-1.get_item_info {dbqd.cms.www.modules.items.custom.image.revision-add-1.get_item_info {

  select 
    i.name, i.latest_revision, r.title 
  from 
    cr_items i, cr_revisions r
  where 
    i.item_id = :item_id
  and
    i.item_id = r.item_id
  and
    i.latest_revision = r.revision_id

      } {} {} {} c:/web/openacs-4/packages/cms/www/modules/items/custom/image/revision-add-1.xql}
dbqd.cms.www.modules.items.delete-oracle.item_delete {dbqd.cms.www.modules.items.delete-oracle.item_delete {
      
  begin 
    content_item.del(
      item_id => :item_id
    ); 
  end;
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/cms/www/modules/items/delete-oracle.xql}
dbqd.cms.www.modules.items.delete.item_delete {dbqd.cms.www.modules.items.delete.item_delete {

        select content_item__delete(:item_id)
  
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/cms/www/modules/items/delete-postgresql.xql}
dbqd.cms.www.modules.items.delete.flush {dbqd.cms.www.modules.items.delete.flush {
      
  select
    parent_id
  from
    cr_resolved_items
  where
    resolved_id = :item_id

      } {} {} {} c:/web/openacs-4/packages/cms/www/modules/items/delete.xql}
dbqd.cms.www.modules.items.export-xml-oracle.export_revision {dbqd.cms.www.modules.items.export-xml-oracle.export_revision {
      
                             begin
                                 :1 := content_revision.export_xml(:revision_id);
                             end;
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/cms/www/modules/items/export-xml-oracle.xql}
dbqd.cms.www.modules.items.export-xml.export_revision {dbqd.cms.www.modules.items.export-xml.export_revision {

-- FIXME: need to modify xml related code to work with pg.

                 select content_revision__export_xml(:revision_id);
                            

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/cms/www/modules/items/export-xml-postgresql.xql}
dbqd.cms.www.modules.items.export-xml.get_xml_doc {dbqd.cms.www.modules.items.export-xml.get_xml_doc {
      
                select doc from cr_xml_docs where doc_id = :doc_id
                
      } {} {} {} c:/web/openacs-4/packages/cms/www/modules/items/export-xml.xql}
dbqd.cms.www.modules.items.index-oracle.get_item_id {dbqd.cms.www.modules.items.index-oracle.get_item_id {
      
  select content_symlink.resolve(:item_id) from dual

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/cms/www/modules/items/index-oracle.xql}
dbqd.cms.www.modules.items.index.get_item_id {dbqd.cms.www.modules.items.index.get_item_id {
      
  select content_symlink__resolve(:item_id) 

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/cms/www/modules/items/index-postgresql.xql}
dbqd.cms.www.modules.items.index.get_info {dbqd.cms.www.modules.items.index.get_info {
      
  select 
    content_type, latest_revision
  from 
    cr_items 
  where 
   item_id = :item_id
      } {} {} {} c:/web/openacs-4/packages/cms/www/modules/items/index.xql}
dbqd.cms.www.modules.items.keywords-oracle.get_keywords {dbqd.cms.www.modules.items.keywords-oracle.get_keywords {
select
             keyword_id,
             content_keyword.get_heading(keyword_id) heading,
             NVL(content_keyword.get_description(keyword_id),
                '-') description
           from
             cr_item_keyword_map
           where
             item_id = :item_id
           order by
             heading
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/cms/www/modules/items/keywords-oracle.xql}
dbqd.cms.www.modules.items.keywords.get_keywords {dbqd.cms.www.modules.items.keywords.get_keywords {

        select
             keyword_id,
             content_keyword__get_heading(keyword_id) as heading,
             coalesce(content_keyword__get_description(keyword_id),
                '-') as description
           from
             cr_item_keyword_map
           where
             item_id = :item_id
           order by
             heading

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/cms/www/modules/items/keywords-postgresql.xql}
dbqd.cms.www.modules.items.keywords.get_name {dbqd.cms.www.modules.items.keywords.get_name {

        select name from cr_items where item_id = :item_id
 
      } {} {} {} c:/web/openacs-4/packages/cms/www/modules/items/keywords.xql}
dbqd.cms.www.modules.items.publish-oracle.set_live_revision {dbqd.cms.www.modules.items.publish-oracle.set_live_revision {
      
     begin 
       content_item.set_live_revision( 
         revision_id => :revision_id 
       );
     end;
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/cms/www/modules/items/publish-oracle.xql}
dbqd.cms.www.modules.items.publish-oracle.get_iteminfo {dbqd.cms.www.modules.items.publish-oracle.get_iteminfo {
      
  select
    item_id,
    content_item.is_publishable( item_id ) as publish_p
  from
    cr_revisions
  where
    revision_id = :revision_id

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/cms/www/modules/items/publish-oracle.xql}
dbqd.cms.www.modules.items.publish.set_live_revision {dbqd.cms.www.modules.items.publish.set_live_revision {

       select content_item__set_live_revision( 
         :revision_id 
       );
    
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/cms/www/modules/items/publish-postgresql.xql}
dbqd.cms.www.modules.items.publish.get_iteminfo {dbqd.cms.www.modules.items.publish.get_iteminfo {
      
  select
    item_id,
    content_item__is_publishable( item_id ) as publish_p
  from
    cr_revisions
  where
    revision_id = :revision_id

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/cms/www/modules/items/publish-postgresql.xql}
dbqd.cms.www.modules.items.publish-status-oracle.get_info {dbqd.cms.www.modules.items.publish-status-oracle.get_info {
      
  select
    NVL(initcap(publish_status), 'Production') publish_status, 
    NVL(to_char(start_when, 'MM/DD/YY HH:MI AM'), 'Immediate') start_when,
    NVL(to_char(end_when, 'MM/DD/YY HH:MI AM'), 'Indefinite') end_when,
    content_item.is_publishable(:item_id) is_publishable,
    live_revision
  from
    cr_items i, cr_release_periods r
  where
    i.item_id = :item_id
  and
    i.item_id = r.item_id (+)
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/cms/www/modules/items/publish-status-oracle.xql}
dbqd.cms.www.modules.items.publish-status-oracle.get_publish_info {dbqd.cms.www.modules.items.publish-status-oracle.get_publish_info {
      
  select 
    content_item.is_publishable( item_id ) is_publishable, 
    live_revision
  from
    cr_items
  where
    item_id = :item_id

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/cms/www/modules/items/publish-status-oracle.xql}
dbqd.cms.www.modules.items.publish-status-oracle.unfinished_exists {dbqd.cms.www.modules.items.publish-status-oracle.unfinished_exists {
      
  select content_workflow.unfinished_workflow_exists( :item_id ) from dual

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/cms/www/modules/items/publish-status-oracle.xql}
dbqd.cms.www.modules.items.publish-status-oracle.get_child_types {dbqd.cms.www.modules.items.publish-status-oracle.get_child_types {
      
  select
    child_type, relation_tag, min_n, 
    o.pretty_name as child_type_pretty, 
    o.pretty_plural as child_type_plural, 
    case when max_n = null then '-' else to_char(max_n) end as max_n,
    (
      select
        count(*)
      from
        cr_child_rels
      where
        parent_id = i.item_id
      and
        content_item.get_content_type( child_id ) = c.child_type
      and
        relation_tag = c.relation_tag
    ) as child_count
  from
    cr_type_children c, cr_items i, acs_object_types o
  where
    c.parent_type = i.content_type
  and
    c.child_type = o.object_type
  and
    -- this item is the parent
    i.item_id = :item_id

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/cms/www/modules/items/publish-status-oracle.xql}
dbqd.cms.www.modules.items.publish-status-oracle.get_rel_types {dbqd.cms.www.modules.items.publish-status-oracle.get_rel_types {
      
  select
    target_type, relation_tag, min_n, 
    o.pretty_name as target_type_pretty,
    o.pretty_plural as target_type_plural,
    case when max_n = null then '-' else to_char(max_n) end max_n,
    (
      select
        count(*)
      from
        cr_item_rels
      where
        item_id = i.item_id
      and
        content_item.get_content_type( related_object_id ) = r.target_type
      and
        relation_tag = r.relation_tag
    ) rel_count
  from
    cr_type_relations r, cr_items i, acs_object_types o
  where
    o.object_type = r.target_type
  and
    r.content_type = i.content_type
  and
    i.item_id = :item_id

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/cms/www/modules/items/publish-status-oracle.xql}
dbqd.cms.www.modules.items.publish-status.get_info {dbqd.cms.www.modules.items.publish-status.get_info {

  select
    coalesce(initcap(publish_status), 'Production') as publish_status, 
    coalesce(to_char(start_when, 'MM/DD/YY HH:MI AM'), 'Immediate') as start_when,
    coalesce(to_char(end_when, 'MM/DD/YY HH:MI AM'), 'Indefinite') as end_when,
    content_item__is_publishable(:item_id) as is_publishable,
    live_revision
  from
    cr_items i left outer join cr_release_periods r using (item_id)
  where
    i.item_id = :item_id

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/cms/www/modules/items/publish-status-postgresql.xql}
dbqd.cms.www.modules.items.publish-status.get_publish_info {dbqd.cms.www.modules.items.publish-status.get_publish_info {
      
  select 
    content_item__is_publishable( item_id ) as is_publishable, 
    live_revision
  from
    cr_items
  where
    item_id = :item_id

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/cms/www/modules/items/publish-status-postgresql.xql}
dbqd.cms.www.modules.items.publish-status.unfinished_exists {dbqd.cms.www.modules.items.publish-status.unfinished_exists {
      
  select content_workflow__unfinished_workflow_exists( :item_id ) 

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/cms/www/modules/items/publish-status-postgresql.xql}
dbqd.cms.www.modules.items.publish-status.get_child_types {dbqd.cms.www.modules.items.publish-status.get_child_types {
      
  select
    child_type, relation_tag, min_n, 
    o.pretty_name as child_type_pretty, 
    o.pretty_plural as child_type_plural, 
    case when max_n = null then '-'::text else max_n::text end as max_n,
    (
      select
        count(*)
      from
        cr_child_rels
      where
        parent_id = i.item_id
      and
        content_item__get_content_type( child_id ) = c.child_type
      and
        relation_tag = c.relation_tag
    ) as child_count
  from
    cr_type_children c, cr_items i, acs_object_types o
  where
    c.parent_type = i.content_type
  and
    c.child_type = o.object_type
  and
    -- this item is the parent
    i.item_id = :item_id

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/cms/www/modules/items/publish-status-postgresql.xql}
dbqd.cms.www.modules.items.publish-status.get_rel_types {dbqd.cms.www.modules.items.publish-status.get_rel_types {
      
  select
    target_type, relation_tag, min_n, 
    o.pretty_name as target_type_pretty,
    o.pretty_plural as target_type_plural,
    case when max_n is null then '-'::text else max_n::text end as max_n,
    (
      select
        count(*)
      from
        cr_item_rels
      where
        item_id = i.item_id
      and
        content_item__get_content_type( related_object_id ) = r.target_type
      and
        relation_tag = r.relation_tag
    ) as rel_count
  from
    cr_type_relations r, cr_items i, acs_object_types o
  where
    o.object_type = r.target_type
  and
    r.content_type = i.content_type
  and
    i.item_id = :item_id

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/cms/www/modules/items/publish-status-postgresql.xql}
dbqd.cms.www.modules.items.publish.abort {dbqd.cms.www.modules.items.publish.abort {
      abort transaction
      } {} {} {} c:/web/openacs-4/packages/cms/www/modules/items/publish.xql}
dbqd.cms.www.modules.items.relate-child-order.abort {dbqd.cms.www.modules.items.relate-child-order.abort {
      abort transaction
      } {} {} {} c:/web/openacs-4/packages/cms/www/modules/items/relate-child-order.xql}
dbqd.cms.www.modules.items.relate-child-order.child_swap_1 {dbqd.cms.www.modules.items.relate-child-order.child_swap_1 {
      
    update cr_child_rels set order_n = :swap_order where rel_id = :rel_id
  
      } {} {} {} c:/web/openacs-4/packages/cms/www/modules/items/relate-child-order.xql}
dbqd.cms.www.modules.items.relate-child-order.child_swap_2 {dbqd.cms.www.modules.items.relate-child-order.child_swap_2 {
      
    update cr_child_rels set order_n = :order_n where rel_id = :swap_id
  
      } {} {} {} c:/web/openacs-4/packages/cms/www/modules/items/relate-child-order.xql}
dbqd.cms.www.modules.items.relate-child-order.get_prev_swap_rel {dbqd.cms.www.modules.items.relate-child-order.get_prev_swap_rel {
      
    select rel_id, order_n from cr_child_rels r1
    where r1.parent_id = :item_id
    and r1.order_n < :order_n 
    and not exists (select order_n from cr_child_rels r2
                    where r2.parent_id = :item_id
                    and r2.order_n < :order_n
                    and r2.order_n > r1.order_n)
      } {} {} {} c:/web/openacs-4/packages/cms/www/modules/items/relate-child-order.xql}
dbqd.cms.www.modules.items.relate-child-order.get_next_swap_rel {dbqd.cms.www.modules.items.relate-child-order.get_next_swap_rel {
      
    select rel_id, order_n from cr_child_rels r1
    where r1.parent_id = :item_id
    and r1.order_n > :order_n 
    and not exists (select order_n from cr_child_rels r2
                    where r2.parent_id = :item_id
                    and r2.order_n > :order_n
                    and r2.order_n < r1.order_n)
      } {} {} {} c:/web/openacs-4/packages/cms/www/modules/items/relate-child-order.xql}
dbqd.cms.www.modules.items.relate-items-2-oracle.relate {dbqd.cms.www.modules.items.relate-items-2-oracle.relate {
      begin 
      :rel_id := content_item.relate (
          item_id       => :item_id,
          object_id     => :related_id,
          relation_tag  => :relation_tag,
          order_n       => :order_n,
          relation_type => :relation_type
      );
    end;
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/cms/www/modules/items/relate-items-2-oracle.xql}
dbqd.cms.www.modules.items.relate-items-2-oracle.get_title {dbqd.cms.www.modules.items.relate-items-2-oracle.get_title {
      
  select content_item.get_title(:item_id) from dual
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/cms/www/modules/items/relate-items-2-oracle.xql}
dbqd.cms.www.modules.items.relate-items-2.relate {dbqd.cms.www.modules.items.relate-items-2.relate {


        select content_item__relate (
          :item_id,
          :related_id,
          :relation_tag,
          :order_n,
          :relation_type
      );
   
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/cms/www/modules/items/relate-items-2-postgresql.xql}
dbqd.cms.www.modules.items.relate-items-2.get_title {dbqd.cms.www.modules.items.relate-items-2.get_title {
      
  select content_item__get_title(:item_id, 'f') 
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/cms/www/modules/items/relate-items-2-postgresql.xql}
dbqd.cms.www.modules.items.relate-items-2.get_order {dbqd.cms.www.modules.items.relate-items-2.get_order {
      
        select 
	  coalesce(max(order_n) + 1, 1) 
	from 
	  cr_item_rels
	where 
	  item_id = :item_id
        
      } {} {} {} c:/web/openacs-4/packages/cms/www/modules/items/relate-items-2.xql}
dbqd.cms.www.modules.items.relate-items-oracle.get_item_info {dbqd.cms.www.modules.items.relate-items-oracle.get_item_info {
      
    select 
      content_item.get_title(i.item_id) as title,
      i.content_type
    from 
      cr_items i
    where
      i.item_id = :item_id
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/cms/www/modules/items/relate-items-oracle.xql}
dbqd.cms.www.modules.items.relate-items-oracle.get_options {dbqd.cms.www.modules.items.relate-items-oracle.get_options {
      
    select 
      lpad(' ', level, '-') || pretty_name as pretty_name, 
      object_type
    from
      acs_object_types
    connect by
      prior object_type = supertype
    start with
      object_type = 'cr_item_rel'
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/cms/www/modules/items/relate-items-oracle.xql}
dbqd.cms.www.modules.items.relate-items-oracle.get_clip_items {dbqd.cms.www.modules.items.relate-items-oracle.get_clip_items {
      
    select
      i.item_id as related_id, 
      content_item.get_title(i.item_id) as title,
      content_item.get_path(i.item_id) as path,   
      tr.relation_tag
    from
      cr_items i, cr_type_relations tr
    where
      content_item.is_subclass(i.content_type, tr.target_type) = 't'
    and
      content_item.is_subclass(:item_type, tr.content_type) = 't'
    and (
      tr.max_n is null 
      or 
      (select count(*) from cr_item_rels 
	where item_id = :item_id 
	and relation_tag = tr.relation_tag) < tr.max_n
      )
    and 
      i.item_id in $sql_items
    and
      i.item_id ^= :item_id
    order by
      path, i.item_id, tr.relation_tag
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/cms/www/modules/items/relate-items-oracle.xql}
dbqd.cms.www.modules.items.relate-items.get_item_info {dbqd.cms.www.modules.items.relate-items.get_item_info {
      
    select 
      content_item__get_title(i.item_id,'f') as title,
      i.content_type
    from 
      cr_items i
    where
      i.item_id = :item_id

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/cms/www/modules/items/relate-items-postgresql.xql}
dbqd.cms.www.modules.items.relate-items.get_options {dbqd.cms.www.modules.items.relate-items.get_options {

    select 
      lpad(' ', tree_level(ot1.tree_sortkey), '-') || ot1.pretty_name as pretty_name, 
      ot1.object_type
    from
      acs_object_types ot1, acs_object_types ot2
    where ot2.object_type = 'cr_item_rel'
      and ot1.tree_sortkey between ot2.tree_sortkey and tree_right(ot2.tree_sortkey)

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/cms/www/modules/items/relate-items-postgresql.xql}
dbqd.cms.www.modules.items.relate-items.get_clip_items {dbqd.cms.www.modules.items.relate-items.get_clip_items {
      
    select
      i.item_id as related_id, 
      content_item__get_title(i.item_id,'f') as title,
      content_item__get_path(i.item_id,null) as path,   
      tr.relation_tag
    from
      cr_items i, cr_type_relations tr
    where
      content_item__is_subclass(i.content_type, tr.target_type) = 't'
    and
      content_item__is_subclass(:item_type, tr.content_type) = 't'
    and (
      tr.max_n is null 
      or 
      (select count(*) from cr_item_rels 
	where item_id = :item_id 
	and relation_tag = tr.relation_tag) < tr.max_n
      )
    and 
      i.item_id in $sql_items
    and
      i.item_id != :item_id
    order by
      path, i.item_id, tr.relation_tag
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/cms/www/modules/items/relate-items-postgresql.xql}
dbqd.cms.www.modules.items.relate-order.abort {dbqd.cms.www.modules.items.relate-order.abort {
      abort transaction
      } {} {} {} c:/web/openacs-4/packages/cms/www/modules/items/relate-order.xql}
dbqd.cms.www.modules.items.relate-order.relate_swap_1 {dbqd.cms.www.modules.items.relate-order.relate_swap_1 {
      
      update $rel_table 
        set order_n = :swap_order 
        where rel_id = :rel_id
      } {} {} {} c:/web/openacs-4/packages/cms/www/modules/items/relate-order.xql}
dbqd.cms.www.modules.items.relate-order.relate_swap_2 {dbqd.cms.www.modules.items.relate-order.relate_swap_2 {
      
      update $rel_table 
        set order_n = :order_n 
        where rel_id = :swap_id
      } {} {} {} c:/web/openacs-4/packages/cms/www/modules/items/relate-order.xql}
dbqd.cms.www.modules.items.relate-order.get_item_id {dbqd.cms.www.modules.items.relate-order.get_item_id {
      
  select 
    $rel_parent_column
  from 
    $rel_table
  where 
    rel_id = :rel_id
      } {} {} {} c:/web/openacs-4/packages/cms/www/modules/items/relate-order.xql}
dbqd.cms.www.modules.items.relate-order.get_order {dbqd.cms.www.modules.items.relate-order.get_order {
      
  select
    order_n
  from
    $rel_table
  where
    rel_id = :rel_id
      } {} {} {} c:/web/openacs-4/packages/cms/www/modules/items/relate-order.xql}
dbqd.cms.www.modules.items.relate-order.get_prev_swap_rel {dbqd.cms.www.modules.items.relate-order.get_prev_swap_rel {
      
      select 
        rel_id, order_n 
      from 
        $rel_table
      where 
        $rel_parent_column = :item_id
      and 
        order_n = :order_n - 1
      } {} {} {} c:/web/openacs-4/packages/cms/www/modules/items/relate-order.xql}
dbqd.cms.www.modules.items.relate-order.get_next_swap_rel {dbqd.cms.www.modules.items.relate-order.get_next_swap_rel {
      
      select 
        rel_id, order_n 
      from 
        $rel_table
      where 
        $rel_parent_column = :item_id
      and 
        order_n = :order_n + 1
      } {} {} {} c:/web/openacs-4/packages/cms/www/modules/items/relate-order.xql}
dbqd.cms.www.modules.items.related-items-oracle.get_related {dbqd.cms.www.modules.items.related-items-oracle.get_related {

  select
    r.rel_id,
    r.related_object_id item_id,
    t.pretty_name as type_name,
    NVL(r.relation_tag, '-') as tag,
    trim(NVL(content_item.get_title(r.related_object_id), i.name)) title,
    ot.pretty_name as content_type
  from
    cr_item_rels r, acs_objects o, acs_object_types t,
    cr_items i, acs_object_types ot
  where
    r.item_id = :item_id
  and
    o.object_id = r.rel_id
  and
    t.object_type = o.object_type
  and 
    i.item_id = r.related_object_id
  and
    ot.object_type = i.content_type
  order by 
    order_n, title

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/cms/www/modules/items/related-items-oracle.xql}
dbqd.cms.www.modules.items.related-items.get_related {dbqd.cms.www.modules.items.related-items.get_related {

  select
    r.rel_id,
    r.related_object_id as item_id,
    t.pretty_name as type_name,
    coalesce(r.relation_tag, '-') as tag,
    trim(coalesce(content_item__get_title(r.related_object_id,'f'), i.name)) as title,
    ot.pretty_name as content_type
  from
    cr_item_rels r, acs_objects o, acs_object_types t,
    cr_items i, acs_object_types ot
  where
    r.item_id = :item_id
  and
    o.object_id = r.rel_id
  and
    t.object_type = o.object_type
  and 
    i.item_id = r.related_object_id
  and
    ot.object_type = i.content_type
  order by 
    order_n, title

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/cms/www/modules/items/related-items-postgresql.xql}
dbqd.cms.www.modules.items.relationship-view-oracle.get_rel_info {dbqd.cms.www.modules.items.relationship-view-oracle.get_rel_info \n\ \ \ \ \ \ \n\ \ select\n\ \ \ \ t.pretty_name\ as\ type_name,\ t.object_type,\ \n\ \ \ \ r.item_id,\ r.related_object_id,\\\n\ \ \ \ content_item.get_title(i.item_id)\ as\ item_title,\n\ \ \ \ acs_object.name(r.related_object_id)\ as\ related_title,\n\ \ \ \ content_item.is_subclass(o2.object_type,\ 'content_item')\ as\ is_item,\n\ \ \ \ r.relation_tag,\ r.order_n\n\ \ from\n\ \ \ \ acs_objects\ o,\ acs_object_types\ t,\ \n\ \ \ \ cr_item_rels\ r,\ cr_items\ i,\ acs_objects\ o2\n\ \ where\n\ \ \ \ o.object_type\ =\ t.object_type\n\ \ and\n\ \ \ \ o.object_id\ =\ :rel_id\n\ \ and\n\ \ \ \ r.rel_id\ =\ :rel_id\n\ \ and\ \n\ \ \ \ i.item_id\ =\ r.item_id\n\ \ and\ \n\ \ \ \ o2.object_id\ =\ r.related_object_id\n\n\ \ \ \ \ \  {} {} {oracle 8.1.6} c:/web/openacs-4/packages/cms/www/modules/items/relationship-view-oracle.xql}
dbqd.cms.www.modules.items.relationship-view-oracle.get_rel_attrs {dbqd.cms.www.modules.items.relationship-view-oracle.get_rel_attrs {
               
  select 
    types.table_name, types.id_column, attr.attribute_name,
    attr.pretty_name as attribute_label, attr.datatype,
    types.pretty_name as type_name
  from 
    acs_attributes attr,
    (select 
        object_type, table_name, id_column, pretty_name,
        level as inherit_level
      from 
        acs_object_types
      where 
        object_type not in ('acs_object', 'cr_item_rel')
      connect by 
        prior supertype = object_type
      start with 
        object_type = :object_type) types
  where
    attr.object_type (+) = types.object_type
  order by
    inherit_level desc, attr.pretty_name
  
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/cms/www/modules/items/relationship-view-oracle.xql}
dbqd.cms.www.modules.items.relationship-view.get_rel_info {dbqd.cms.www.modules.items.relationship-view.get_rel_info {
      
  select
    t.pretty_name as type_name, t.object_type, 
    r.item_id, r.related_object_id,
    content_item__get_title(i.item_id,'f') as item_title,
    acs_object__name(r.related_object_id) as related_title,
    content_item__is_subclass(o2.object_type, 'content_item') as is_item,
    r.relation_tag, r.order_n
  from
    acs_objects o, acs_object_types t, 
    cr_item_rels r, cr_items i, acs_objects o2
  where
    o.object_type = t.object_type
  and
    o.object_id = :rel_id
  and
    r.rel_id = :rel_id
  and 
    i.item_id = r.item_id
  and 
    o2.object_id = r.related_object_id

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/cms/www/modules/items/relationship-view-postgresql.xql}
dbqd.cms.www.modules.items.relationship-view.get_rel_attrs {dbqd.cms.www.modules.items.relationship-view.get_rel_attrs {
         
  select 
    types.table_name, types.id_column, attr.attribute_name,
    attr.pretty_name as attribute_label, attr.datatype,
    types.pretty_name as type_name
  from 
    acs_attributes attr right outer join 
    (select 
        ot2.object_type, ot2.table_name, ot2.id_column, ot2.pretty_name,
        tree_level(ot2.tree_sortkey) as inherit_level
      from 
        (select * from acs_object_types where object_type = :object_type) ot1,
        acs_object_types ot2
      where 
        ot2.object_type not in ('acs_object', 'cr_item_rel')
      and
        ot2.tree_sortkey <= ot2.tree_sortkey
      and 
        ot1.tree_sortkey between ot2.tree_sortkey and tree_right(ot2.tree_sortkey)) types 
    using (object_type)
  order by
    inherit_level desc, attr.pretty_name
  
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/cms/www/modules/items/relationship-view-postgresql.xql}
dbqd.cms.www.modules.items.relationship-view.get_value {dbqd.cms.www.modules.items.relationship-view.get_value {
      
    select $what from $a_row(table_name) 
      where $a_row(id_column) = :rel_id
      } {} {} {} c:/web/openacs-4/packages/cms/www/modules/items/relationship-view.xql}
dbqd.cms.www.modules.items.rename-oracle.rename_item {dbqd.cms.www.modules.items.rename-oracle.rename_item {
      
    begin 
    content_item.rename (
        item_id => :item_id, 
        name    => :name 
    ); 
    end;
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/cms/www/modules/items/rename-oracle.xql}
dbqd.cms.www.modules.items.rename.rename_item {dbqd.cms.www.modules.items.rename.rename_item {

        select content_item__rename (
            :item_id, 
            :name 
         ); 
    
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/cms/www/modules/items/rename-postgresql.xql}
dbqd.cms.www.modules.items.rename.get_item_name {dbqd.cms.www.modules.items.rename.get_item_name {
      
  select 
    name
  from 
    cr_items
  where 
    item_id = :item_id

      } {} {} {} c:/web/openacs-4/packages/cms/www/modules/items/rename.xql}
dbqd.cms.www.modules.items.rename.get_parent_id {dbqd.cms.www.modules.items.rename.get_parent_id {
      
    select
      parent_id
    from
      cr_items
    where
      item_id = :item_id
      } {} {} {} c:/web/openacs-4/packages/cms/www/modules/items/rename.xql}
dbqd.cms.www.modules.items.revision-add-1-oracle.get_content_type {dbqd.cms.www.modules.items.revision-add-1-oracle.get_content_type {
      
  select
    content_item.get_content_type( :item_id )
  from
    dual

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/cms/www/modules/items/revision-add-1-oracle.xql}
dbqd.cms.www.modules.items.revision-add-1.get_content_type {dbqd.cms.www.modules.items.revision-add-1.get_content_type {
      
  select
    content_item__get_content_type( :item_id )
  from
    dual

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/cms/www/modules/items/revision-add-1-postgresql.xql}
dbqd.cms.www.modules.items.revision-add-1.get_name {dbqd.cms.www.modules.items.revision-add-1.get_name {
      
  select
    name
  from
    cr_items
  where
    item_id = :item_id
      } {} {} {} c:/web/openacs-4/packages/cms/www/modules/items/revision-add-1.xql}
dbqd.cms.www.modules.items.revision-add-2.get_one_item {dbqd.cms.www.modules.items.revision-add-2.get_one_item {
      
  select 
    content_type, name
  from
    cr_items
  where
   item_id = :item_id

      } {} {} {} c:/web/openacs-4/packages/cms/www/modules/items/revision-add-2.xql}
dbqd.cms.www.modules.items.revision-oracle.get_revision {dbqd.cms.www.modules.items.revision-oracle.get_revision {
      
  select 
    revision_id, title, description, item_id, mime_type, 
    content_revision.get_number( revision_id ) revision_number,
    (
     select 
       label 
     from 
       cr_mime_types 
     where 
       mime_type = cr_revisions.mime_type
    ) mime_type_pretty,
    to_char(publish_date,'Month DD, YYYY') as publish_date_pretty,
    content_length as content_size
  from 
    cr_revisions
  where 
    revision_id = :revision_id

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/cms/www/modules/items/revision-oracle.xql}
dbqd.cms.www.modules.items.revision-oracle.get_status {dbqd.cms.www.modules.items.revision-oracle.get_status {
      
  select content_item.is_publishable( :item_id ) from dual

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/cms/www/modules/items/revision-oracle.xql}
dbqd.cms.www.modules.items.revision-oracle.get_one_item {dbqd.cms.www.modules.items.revision-oracle.get_one_item {
      
  select 
    name, locale, live_revision as live_revision_id,
    (
      select 
        pretty_name
      from 
        acs_object_types
      where 
        object_type = cr_items.content_type
    ) content_type,
    content_item.get_path(item_id) as path
  from 
    cr_items
  where 
    item_id = :item_id

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/cms/www/modules/items/revision-oracle.xql}
dbqd.cms.www.modules.items.revision-oracle.get_meta_attrs {dbqd.cms.www.modules.items.revision-oracle.get_meta_attrs {
      
  select 
    attribute_id, pretty_name, 
    (select pretty_name from acs_object_types
     where object_type = attr.object_type) object_type,
    nvl(column_name,attribute_name) attribute_name,  
    nvl(attr.table_name,o.table_name) table_name,
    nvl(o.id_column,'object_id') id_column
  from
    acs_attributes attr, 
    (select 
       object_type, table_name, id_column 
     from
       acs_object_types
     where 
       object_type not in ('acs_object','content_revision')
     connect by
       prior supertype = object_type
     start with
       object_type = (select 
                        object_type 
                      from 
                        acs_objects
                      where
                        object_id = :revision_id) ) o
  where
    o.object_type = attr.object_type
  order by
    attr.object_type, attr.sort_order

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/cms/www/modules/items/revision-oracle.xql}
dbqd.cms.www.modules.items.revision-oracle.get_content {dbqd.cms.www.modules.items.revision-oracle.get_content {

      select 
        blob_to_string(content)
      from
        cr_revisions
      where
        revision_id = :revision_id
    
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/cms/www/modules/items/revision-oracle.xql}
dbqd.cms.www.modules.items.revision.get_revision {dbqd.cms.www.modules.items.revision.get_revision {
      
  select 
    revision_id, title, description, item_id, mime_type, 
    content_revision__get_number( revision_id ) as revision_number,
    (
     select 
       label 
     from 
       cr_mime_types 
     where 
       mime_type = cr_revisions.mime_type
    ) as mime_type_pretty,
    to_char(publish_date,'Month DD, YYYY') as publish_date_pretty,
    content_length as content_size
  from 
    cr_revisions
  where 
    revision_id = :revision_id

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/cms/www/modules/items/revision-postgresql.xql}
dbqd.cms.www.modules.items.revision.get_status {dbqd.cms.www.modules.items.revision.get_status {
      
  select content_item__is_publishable( :item_id ) 

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/cms/www/modules/items/revision-postgresql.xql}
dbqd.cms.www.modules.items.revision.get_one_item {dbqd.cms.www.modules.items.revision.get_one_item {
      
  select 
    name, locale, live_revision as live_revision_id,
    (
      select 
        pretty_name
      from 
        acs_object_types
      where 
        object_type = cr_items.content_type
    ) as content_type,
    content_item__get_path(item_id,null) as path
  from 
    cr_items
  where 
    item_id = :item_id

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/cms/www/modules/items/revision-postgresql.xql}
dbqd.cms.www.modules.items.revision.get_meta_attrs {dbqd.cms.www.modules.items.revision.get_meta_attrs {

  select 
    attribute_id, pretty_name, 
    (select pretty_name from acs_object_types
     where object_type = attr.object_type) as object_type,
    coalesce(column_name,attribute_name) as attribute_name,  
    coalesce(attr.table_name,o.table_name) as table_name,
    coalesce(o.id_column,'object_id') as id_column
  from
    acs_attributes attr, 
    (select 
       ot2.object_type, ot2.table_name, ot2.id_column 
     from
       (select * from acs_object_types where object_type = (select 
                        object_type 
                      from 
                        acs_objects
                      where
                        object_id = :revision_id)) ot1,
       acs_object_types ot2
     where 
       ot2.object_type not in ('acs_object','content_revision')
     and 
       ot2.tree_sortkey <= ot1.tree_sortkey
     and 
       ot1.tree_sortkey between ot2.tree_sortkey and tree_right(ot2.tree_sortkey)) o
  where
    o.object_type = attr.object_type
  order by
    attr.object_type, attr.sort_order

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/cms/www/modules/items/revision-postgresql.xql}
dbqd.cms.www.modules.items.revision.get_content {dbqd.cms.www.modules.items.revision.get_content {

      select 
        content
      from
        cr_revisions
      where
        revision_id = :revision_id
    
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/cms/www/modules/items/revision-postgresql.xql}
dbqd.cms.www.modules.items.revision-upload-oracle.new_content {dbqd.cms.www.modules.items.revision-upload-oracle.new_content {
      begin 
      :item_id := content_item.new(
          name          => :name, 
          parent_id     => :parent_id, 
          content_type  => :content_type,
          creation_user => [User::getID],
          creation_ip   => '[ns_conn peeraddr]' ); 
      end;
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/cms/www/modules/items/revision-upload-oracle.xql}
dbqd.cms.www.modules.items.revision-upload-oracle.insert_content {dbqd.cms.www.modules.items.revision-upload-oracle.insert_content {
      insert into cr_xml_docs 
  values ($revision_id, empty_clob()) returning doc into :1
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/cms/www/modules/items/revision-upload-oracle.xql}
dbqd.cms.www.modules.items.revision-upload-oracle.import_xml {dbqd.cms.www.modules.items.revision-upload-oracle.import_xml {
      begin
    :revision_id := content_revision.import_xml(
      :item_id, :revision_id, :revision_id);
  end;
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/cms/www/modules/items/revision-upload-oracle.xql}
dbqd.cms.www.modules.items.revision-upload-oracle.get_new_item {dbqd.cms.www.modules.items.revision-upload-oracle.get_new_item {
      
      select 
        NVL(content_item.get_path(:parent_id), '/') as item_path,
        pretty_name as content_type_name
      from
        acs_object_types
      where
        object_type = :content_type
    
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/cms/www/modules/items/revision-upload-oracle.xql}
dbqd.cms.www.modules.items.revision-upload-oracle.get_revision_id {dbqd.cms.www.modules.items.revision-upload-oracle.get_revision_id {

        select acs_object_id_seq.nextval from dual
      
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/cms/www/modules/items/revision-upload-oracle.xql}
dbqd.cms.www.modules.items.revision-upload.new_content {dbqd.cms.www.modules.items.revision-upload.new_content {

        select content_item__new(
          varchar :name, 
          :parent_id, 
          null,
          now(),
          [User::getID],
          null,          
          '[ns_conn peeraddr]',
          'content_item',
          :content_type,
          null,
          null,
          'text/plain',
          null,
          null,
          'text');
      
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/cms/www/modules/items/revision-upload-postgresql.xql}
dbqd.cms.www.modules.items.revision-upload.insert_content {dbqd.cms.www.modules.items.revision-upload.insert_content {

--      FIX ME LOB
insert into cr_xml_docs 
  values ($revision_id, empty_lob()) returning doc into :1

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/cms/www/modules/items/revision-upload-postgresql.xql}
dbqd.cms.www.modules.items.revision-upload.import_xml {dbqd.cms.www.modules.items.revision-upload.import_xml {

        select content_revision__import_xml(:item_id, :revision_id, :revision_id)
  
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/cms/www/modules/items/revision-upload-postgresql.xql}
dbqd.cms.www.modules.items.revision-upload.get_new_item {dbqd.cms.www.modules.items.revision-upload.get_new_item {
      
      select 
        coalesce(content_item__get_path(:parent_id,null), '/') as item_path,
        pretty_name as content_type_name
      from
        acs_object_types
      where
        object_type = :content_type
    
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/cms/www/modules/items/revision-upload-postgresql.xql}
dbqd.cms.www.modules.items.revision-upload.get_revision_id {dbqd.cms.www.modules.items.revision-upload.get_revision_id {

        select acs_object_id_seq.nextval
      
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/cms/www/modules/items/revision-upload-postgresql.xql}
dbqd.cms.www.modules.items.revision.get_count {dbqd.cms.www.modules.items.revision.get_count {
      
  select count(*) from cr_revisions where item_id = :item_id

      } {} {} {} c:/web/openacs-4/packages/cms/www/modules/items/revision.xql}
dbqd.cms.www.modules.items.revision.get_attr_values {dbqd.cms.www.modules.items.revision.get_attr_values {
      
      select 
        [join $attr_columns ", "]
      from
        [join $attr_tables ", "]
      where
        [join $column_id_cons " and "]
      } {} {} {} c:/web/openacs-4/packages/cms/www/modules/items/revision.xql}
dbqd.cms.www.modules.items.revisions-oracle.get_content_type {dbqd.cms.www.modules.items.revisions-oracle.get_content_type {
      
  select
    content_item.get_content_type( :item_id )
  from
    dual

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/cms/www/modules/items/revisions-oracle.xql}
dbqd.cms.www.modules.items.revisions-oracle.get_iteminfo {dbqd.cms.www.modules.items.revisions-oracle.get_iteminfo {
      
  select 
    item_id, name, locale, live_revision, publish_status,
    content_item.is_publishable(item_id) as is_publishable
  from 
    cr_items
  where 
    item_id = :item_id
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/cms/www/modules/items/revisions-oracle.xql}
dbqd.cms.www.modules.items.revisions-oracle.get_revisions {dbqd.cms.www.modules.items.revisions-oracle.get_revisions {

  select 
    revision_id, 
    trim(title) as title, 
    trim(description) as description,
    content_revision.get_number(revision_id) as revision_number
  from 
    cr_revisions r
  where 
    r.item_id = $item_id
  order by
    revision_number desc
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/cms/www/modules/items/revisions-oracle.xql}
dbqd.cms.www.modules.items.revisions.get_content_type {dbqd.cms.www.modules.items.revisions.get_content_type {
      
  select
    content_item__get_content_type( :item_id )
  from
    dual

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/cms/www/modules/items/revisions-postgresql.xql}
dbqd.cms.www.modules.items.revisions.get_iteminfo {dbqd.cms.www.modules.items.revisions.get_iteminfo {
      
  select 
    item_id, name, locale, live_revision, publish_status,
    content_item__is_publishable(item_id) as is_publishable
  from 
    cr_items
  where 
    item_id = :item_id
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/cms/www/modules/items/revisions-postgresql.xql}
dbqd.cms.www.modules.items.revisions.get_revisions {dbqd.cms.www.modules.items.revisions.get_revisions {
     
  select 
    revision_id, 
    trim(title) as title, 
    trim(description) as description,
    content_revision__get_number(revision_id) as revision_number
  from 
    cr_revisions r
  where 
    r.item_id = $item_id
  order by
    revision_number desc

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/cms/www/modules/items/revisions-postgresql.xql}
dbqd.cms.www.modules.items.status-edit-oracle.set_release_period {dbqd.cms.www.modules.items.status-edit-oracle.set_release_period {
      begin 
                    content_item.set_release_period(
                      item_id => :item_id,
                      start_when => $start_when,
                      end_when => $end_when
                    );
                  end;
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/cms/www/modules/items/status-edit-oracle.xql}
dbqd.cms.www.modules.items.status-edit-oracle.check_status {dbqd.cms.www.modules.items.status-edit-oracle.check_status {
      
  select content_item.is_publishable( :item_id ) from dual
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/cms/www/modules/items/status-edit-oracle.xql}
dbqd.cms.www.modules.items.status-edit-oracle.check_published {dbqd.cms.www.modules.items.status-edit-oracle.check_published {
      
  select content_item.is_published( :item_id ) from dual
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/cms/www/modules/items/status-edit-oracle.xql}
dbqd.cms.www.modules.items.status-edit-oracle.get_info {dbqd.cms.www.modules.items.status-edit-oracle.get_info {
      
    select
      NVL(publish_status, 'production') as publish_status,
      to_char(NVL(start_when, sysdate), 'YYYY MM DD HH24 MI SS') start_when,
      to_char(NVL(end_when, sysdate + 365), 'YYYY MM DD HH24 MI SS') end_when
    from
      cr_items i, cr_release_periods r
    where
      i.item_id = :item_id
    and
      i.item_id = r.item_id (+)
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/cms/www/modules/items/status-edit-oracle.xql}
dbqd.cms.www.modules.items.status-edit.set_release_period {dbqd.cms.www.modules.items.status-edit.set_release_period {

                select content_item__set_release_period(
                      :item_id,
                      $start_when,
                      $end_when
                    );
                  
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/cms/www/modules/items/status-edit-postgresql.xql}
dbqd.cms.www.modules.items.status-edit.check_status {dbqd.cms.www.modules.items.status-edit.check_status {
      
  select content_item__is_publishable( :item_id ) 

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/cms/www/modules/items/status-edit-postgresql.xql}
dbqd.cms.www.modules.items.status-edit.check_published {dbqd.cms.www.modules.items.status-edit.check_published {
      
  select content_item__is_published( :item_id ) 

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/cms/www/modules/items/status-edit-postgresql.xql}
dbqd.cms.www.modules.items.status-edit.get_info {dbqd.cms.www.modules.items.status-edit.get_info {

    select
      coalesce(publish_status, 'production') as publish_status,
      to_char(coalesce(start_when, current_timestamp), 'YYYY MM DD HH24 MI SS') as start_when,
      to_char(coalesce(end_when, current_timestamp + interval '365 days'), 'YYYY MM DD HH24 MI SS') as end_when
    from
      cr_items i left outer join cr_release_periods r using (item_id)
    where
      i.item_id = :item_id

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/cms/www/modules/items/status-edit-postgresql.xql}
dbqd.cms.www.modules.items.status-edit.get_live_revision {dbqd.cms.www.modules.items.status-edit.get_live_revision {
      
    select live_revision from cr_items where item_id = :item_id
  
      } {} {} {} c:/web/openacs-4/packages/cms/www/modules/items/status-edit.xql}
dbqd.cms.www.modules.items.symlink-oracle.do_folder_check {dbqd.cms.www.modules.items.symlink-oracle.do_folder_check {

        select parent_id, 
                 content_folder.is_folder(item_id) as folder_p
                 from cr_items
                 where item_id = :resolved_id

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/cms/www/modules/items/symlink-oracle.xql}
dbqd.cms.www.modules.items.symlink. {dbqd.cms.www.modules.items.symlink. {

        select parent_id, 
                 content_folder__is_folder(item_id) as folder_p
                 from cr_items
                 where item_id = :resolved_id  
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/cms/www/modules/items/symlink-postgresql.xql}
dbqd.cms.www.modules.items.template-register-oracle.register_template_to_item {dbqd.cms.www.modules.items.template-register-oracle.register_template_to_item {

        begin content_item.register_template(
            item_id     => :item_id,
            template_id => :template_id,
            use_context => :context ); 
         end;
  
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/cms/www/modules/items/template-register-oracle.xql}
dbqd.cms.www.modules.items.template-register.register_template_to_item {dbqd.cms.www.modules.items.template-register.register_template_to_item {

        select content_item__register_template(
            :item_id,
            :template_id,
            :context ); 
        
  
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/cms/www/modules/items/template-register-postgresql.xql}
dbqd.cms.www.modules.items.template-register.second_template_p {dbqd.cms.www.modules.items.template-register.second_template_p {
      
  select count(1) from cr_item_template_map
    where use_context = :context
    and item_id = :item_id
      } {} {} {} c:/web/openacs-4/packages/cms/www/modules/items/template-register.xql}
dbqd.cms.www.modules.items.template-unregister-oracle.template_unregister {dbqd.cms.www.modules.items.template-unregister-oracle.template_unregister {
      begin
         content_item.unregister_template(
             template_id => :template_id, 
             item_id     => :item_id, 
             use_context => :context ); 
         end;
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/cms/www/modules/items/template-unregister-oracle.xql}
dbqd.cms.www.modules.items.template-unregister.template_unregister {dbqd.cms.www.modules.items.template-unregister.template_unregister {

        select content_item__unregister_template(
             :item_id, 
             :template_id, 
             :context ); 
         
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/cms/www/modules/items/template-unregister-postgresql.xql}
dbqd.cms.www.modules.items.templates-oracle.allowed_set_p {dbqd.cms.www.modules.items.templates-oracle.allowed_set_p {
      
  select
    cms_permission.permission_p( module_id, :user_id, 'cm_write' )
  from
    cm_modules
  where
     key = 'types'

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/cms/www/modules/items/templates-oracle.xql}
dbqd.cms.www.modules.items.templates-oracle.get_iteminfo {dbqd.cms.www.modules.items.templates-oracle.get_iteminfo {
      
  select 
    object_type, pretty_name,
    content_item.get_title(:item_id) name
  from
    acs_object_types
  where 
    object_type = content_item.get_content_type(:item_id)

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/cms/www/modules/items/templates-oracle.xql}
dbqd.cms.www.modules.items.templates-oracle.get_reg_templates {dbqd.cms.www.modules.items.templates-oracle.get_reg_templates {
      
  select 
    template_id, use_context, 
    content_item.get_path( template_id ) path,
    cms_permission.permission_p( template_id, :user_id, 'cm_examine')
      as can_read_template
  from 
    cr_item_template_map t
  where     
    t.item_id = :item_id
  order by 
    path, use_context

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/cms/www/modules/items/templates-oracle.xql}
dbqd.cms.www.modules.items.templates-oracle.get_type_templates {dbqd.cms.www.modules.items.templates-oracle.get_type_templates {
      
  select 
    template_id, use_context, is_default,
    content_item.get_path( template_id ) path,
    cms_permission.permission_p( template_id, :user_id, 'cm_examine') 
      as can_read_template,
    (select 1 
     from 
       cr_item_template_map itmap 
     where 
       itmap.template_id = t.template_id
     and 
       itmap.use_context = t.use_context
     and 
       itmap.item_id = :item_id) already_registered_p
  from 
    cr_type_template_map t
  where 
    t.content_type = :content_type
  order by 
    path, use_context

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/cms/www/modules/items/templates-oracle.xql}
dbqd.cms.www.modules.items.templates.allowed_set_p {dbqd.cms.www.modules.items.templates.allowed_set_p {
      
  select
    cms_permission__permission_p( module_id, :user_id, 'cm_write' )
  from
    cm_modules
  where
     key = 'types'

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/cms/www/modules/items/templates-postgresql.xql}
dbqd.cms.www.modules.items.templates.get_iteminfo {dbqd.cms.www.modules.items.templates.get_iteminfo {
      
  select 
    object_type, pretty_name,
    content_item__get_title(:item_id,'f') as name
  from
    acs_object_types
  where 
    object_type = content_item__get_content_type(:item_id)

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/cms/www/modules/items/templates-postgresql.xql}
dbqd.cms.www.modules.items.templates.get_reg_templates {dbqd.cms.www.modules.items.templates.get_reg_templates {
      
  select 
    template_id, use_context, 
    content_item__get_path( template_id, null ) as path,
    cms_permission__permission_p( template_id, :user_id, 'cm_examine')
      as can_read_template
  from 
    cr_item_template_map t
  where     
    t.item_id = :item_id
  order by 
    path, use_context

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/cms/www/modules/items/templates-postgresql.xql}
dbqd.cms.www.modules.items.templates.get_type_templates {dbqd.cms.www.modules.items.templates.get_type_templates {
      
  select 
    template_id, use_context, is_default,
    content_item__get_path( template_id, null ) as path,
    cms_permission__permission_p( template_id, :user_id, 'cm_examine') 
      as can_read_template,
    (select 1 
     from 
       cr_item_template_map itmap 
     where 
       itmap.template_id = t.template_id
     and 
       itmap.use_context = t.use_context
     and 
       itmap.item_id = :item_id) as already_registered_p
  from 
    cr_type_template_map t
  where 
    t.content_type = :content_type
  order by 
    path, use_context

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/cms/www/modules/items/templates-postgresql.xql}
dbqd.cms.www.modules.items.unpublish-oracle.unset_live_revision {dbqd.cms.www.modules.items.unpublish-oracle.unset_live_revision {
      begin 
           content_item.unset_live_revision( :item_id );
         end;
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/cms/www/modules/items/unpublish-oracle.xql}
dbqd.cms.www.modules.items.unpublish.unset_live_revision {dbqd.cms.www.modules.items.unpublish.unset_live_revision {

        select content_item__unset_live_revision( :item_id );
        
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/cms/www/modules/items/unpublish-postgresql.xql}
dbqd.cms.www.modules.items.unrelate-item-oracle.unrelate_item {dbqd.cms.www.modules.items.unrelate-item-oracle.unrelate_item {
      
  begin
  content_item.unrelate ( 
      rel_id => :rel_id 
  );
  end;
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/cms/www/modules/items/unrelate-item-oracle.xql}
dbqd.cms.www.modules.items.unrelate-item.unrelate_item {dbqd.cms.www.modules.items.unrelate-item.unrelate_item {


        select content_item__unrelate (:rel_id )
  
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/cms/www/modules/items/unrelate-item-postgresql.xql}
dbqd.cms.www.modules.items.unrelate-item.abort {dbqd.cms.www.modules.items.unrelate-item.abort {
      abort transaction
      } {} {} {} c:/web/openacs-4/packages/cms/www/modules/items/unrelate-item.xql}
dbqd.cms.www.modules.items.unrelate-item.get_item_id {dbqd.cms.www.modules.items.unrelate-item.get_item_id {
      
  select item_id from cr_item_rels where rel_id = :rel_id
      } {} {} {} c:/web/openacs-4/packages/cms/www/modules/items/unrelate-item.xql}
dbqd.cms.www.modules.permissions.index-oracle.get_permissions {dbqd.cms.www.modules.permissions.index-oracle.get_permissions {
      
  select * from ( 
    select 
      p.pretty_name, 
      p.privilege, 
      u.party_id as grantee_id,
      n.first_names || ' ' || n.last_name as grantee_name,
      u.email
    from 
      acs_permissions per, acs_privileges p, parties u,
      persons n,
      (select object_id from acs_objects 
	 connect by prior context_id = object_id 
		and prior security_inherit_p = 't'
	 start with object_id = :object_id) o
    where
      per.privilege = p.privilege
    and
      per.grantee_id = u.party_id
    and
      per.object_id = o.object_id
    and
      u.party_id = n.person_id
  union
    select
      p.pretty_name, p.privilege, 
      -1 as grantee_id, 'All Users' as grantee_name, '&nbsp;' as email 
    from
      acs_permissions per, acs_privileges p, parties u
    where
      u.party_id = -1
    and
      per.object_id = :object_id
    and
      per.privilege = p.privilege
    and
      per.grantee_id = u.party_id
  ) order by
    grantee_name, privilege
  
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/cms/www/modules/permissions/index-oracle.xql}
dbqd.cms.www.modules.permissions.index.get_permissions {dbqd.cms.www.modules.permissions.index.get_permissions {

  select * from ( 
    select 
      p.pretty_name, 
      p.privilege, 
      u.party_id as grantee_id,
      n.first_names || ' ' || n.last_name as grantee_name,
      u.email
    from 
      acs_permissions per, acs_privileges p, parties u,
      persons n,
      (select o.object_id 
         from (select tree_ancestor_keys(acs_objects_get_tree_sortkey(:object_id)) as tree_sortkey) parents,
           acs_objects o
        where o.tree_sortkey = parents.tree_sortkey
          and tree_level(o.tree_sortkey) >= (select
                                                case when max(tree_level(ob.tree_sortkey)) is null
                                                  then 0
                                                  else max(tree_level(ob.tree_sortkey))
                                                end  
                                              from
                                                (select tree_ancestor_keys(acs_objects_get_tree_sortkey(:object_id))
                                                  as tree_sortkey) parents,
                                                acs_objects ob
                                              where ob.tree_sortkey = parents.tree_sortkey
                                                and ob.security_inherit_p = 'f')) o
    where
      per.privilege = p.privilege
    and
      per.grantee_id = u.party_id
    and
      per.object_id = o.object_id
    and
      u.party_id = n.person_id
  union
    select
      p.pretty_name, p.privilege, 
      -1 as grantee_id, 'All Users' as grantee_name, '&nbsp;' as email 
    from
      acs_permissions per, acs_privileges p, parties u
    where
      u.party_id = -1
    and
      per.object_id = :object_id
    and
      per.privilege = p.privilege
    and
      per.grantee_id = u.party_id
  ) tmp 
  order by
    grantee_name, privilege
  
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/cms/www/modules/permissions/index-postgresql.xql}
dbqd.cms.www.modules.permissions.permission-alter-oracle.get_info {dbqd.cms.www.modules.permissions.permission-alter-oracle.get_info {
      
  select 
    acs_object.name(:object_id) as object_name, 
    acs_object.name(:grantee_id) as grantee_name,
    acs_permission.permission_p(:object_id, :user_id, 'cm_perm') as user_cm_perm
  from
    dual
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/cms/www/modules/permissions/permission-alter-oracle.xql}
dbqd.cms.www.modules.permissions.permission-alter.get_info {dbqd.cms.www.modules.permissions.permission-alter.get_info {
      
  select 
    acs_object__name(:object_id) as object_name, 
    acs_object__name(:grantee_id) as grantee_name,
    acs_permission__permission_p(:object_id, :user_id, 'cm_perm') as user_cm_perm
  from
    dual
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/cms/www/modules/permissions/permission-alter-postgresql.xql}
dbqd.cms.www.modules.search.index-oracle.within_clause {dbqd.cms.www.modules.search.index-oracle.within_clause {

        ${the_or}%[string tolower $word]% within \$field

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/cms/www/modules/search/index-oracle.xql}
dbqd.cms.www.modules.search.index-oracle.contains_clause {dbqd.cms.www.modules.search.index-oracle.contains_clause {

       $the_or contains($column_name, '$search_clause', $label) > 0 

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/cms/www/modules/search/index-oracle.xql}
dbqd.cms.www.modules.search.index-oracle.score_expr {dbqd.cms.www.modules.search.index-oracle.score_expr {

        $the_plus score($label)

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/cms/www/modules/search/index-oracle.xql}
dbqd.cms.www.modules.search.index-oracle.sql_query {dbqd.cms.www.modules.search.index-oracle.sql_query {

    select 
      i.item_id, content_item.get_path(i.item_id) item_path,
      r.revision_id,
      t.pretty_name as pretty_type, t.object_type,
      r.title, to_char(r.publish_date) as pretty_date,
      NVL(NVL(m.label, r.mime_type), 'unknown') as pretty_mime_type,
      rownum as row_index,
      ($score_expr) as search_score
    from
      cr_items i, cr_revisions r, 
      cr_mime_types m, acs_object_types t $attrs_table
    where
      m.mime_type(+) = r.mime_type
    and
      t.object_type = i.content_type $attrs_where
    and
      ($contains_clause)

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/cms/www/modules/search/index-oracle.xql}
dbqd.cms.www.modules.search.index-oracle.live_revision {dbqd.cms.www.modules.search.index-oracle.live_revision {

           and r.revision_id(+) = i.live_revision 

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/cms/www/modules/search/index-oracle.xql}
dbqd.cms.www.modules.search.index.within_clause {dbqd.cms.www.modules.search.index.within_clause {

        ${the_or}%[string tolower $word]% within \\$field

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/cms/www/modules/search/index-postgresql.xql}
dbqd.cms.www.modules.search.index.contains_clause {dbqd.cms.www.modules.search.index.contains_clause {

       $the_or contains($column_name, '$search_clause', $label) > 0 

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/cms/www/modules/search/index-postgresql.xql}
dbqd.cms.www.modules.search.index.score_expr {dbqd.cms.www.modules.search.index.score_expr {

        $the_plus score($label)

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/cms/www/modules/search/index-postgresql.xql}
dbqd.cms.www.modules.search.index.sql_query {dbqd.cms.www.modules.search.index.sql_query {

    select 
      i.item_id, content_item__get_path(i.item_id,null) as item_path,
      r.revision_id,
      t.pretty_name as pretty_type, t.object_type,
      r.title, to_char(r.publish_date,'YYYY-MM-DD') as pretty_date,
      coalesce(coalesce(m.label, r.mime_type), 'unknown') as pretty_mime_type,
      1 as row_index,
      1 as search_score
    from
      cr_items i[ad_decode $live_p 1 " LEFT OUTER JOIN" ,] 
      cr_revisions r[ad_decode $live_p 1 " ON i.live_revision = r.revision_id" ""]
        LEFT OUTER JOIN 
      cr_mime_types m using (mime_type), 
      acs_object_types t
    where
      t.object_type = i.content_type
    and
      r.revision_id in ([join [content_search__search_ids $keywords] ,])

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/cms/www/modules/search/index-postgresql.xql}
dbqd.cms.www.modules.search.index.live_revision {dbqd.cms.www.modules.search.index.live_revision {} {} {} {postgresql 7.1} c:/web/openacs-4/packages/cms/www/modules/search/index-postgresql.xql}
dbqd.cms.www.modules.search.index.get_mime_types {dbqd.cms.www.modules.search.index.get_mime_types {
      
  select
    label, mime_type as value
  from 
    cr_mime_types

      } {} {} {} c:/web/openacs-4/packages/cms/www/modules/search/index.xql}
dbqd.cms.www.modules.search.index.get_results {dbqd.cms.www.modules.search.index.get_results {
      
    select count(*) from ($sql_query) x
  
      } {} {} {} c:/web/openacs-4/packages/cms/www/modules/search/index.xql}
dbqd.cms.www.modules.search.search-results.get_results {dbqd.cms.www.modules.search.search-results.get_results {
      
    select * from ($sql_query) x
    where row_index >= :start_row and row_index < (:start_row + :rows_per_page)
    order by search_score desc, title
  
      } {} {} {} c:/web/openacs-4/packages/cms/www/modules/search/search-results.xql}
dbqd.cms.www.modules.sitemap.ancestors-oracle.index_page_p {dbqd.cms.www.modules.sitemap.ancestors-oracle.index_page_p {

      decode( nvl( 
        content_folder.get_index_page( :item_id ),0)
        ,0,'f','t') has_index_page,

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/cms/www/modules/sitemap/ancestors-oracle.xql}
dbqd.cms.www.modules.sitemap.ancestors-oracle.get_context {dbqd.cms.www.modules.sitemap.ancestors-oracle.get_context {
      
  select
    t.tree_level, t.parent_id, 
    content_folder.is_folder(i.item_id) is_folder,
    content_item.get_title(t.parent_id) as title
  from 
    cr_items i,
    (
      select 
        parent_id, level as tree_level
      from 
        cr_items
      where
        parent_id ^= 0
      connect by
        prior parent_id = item_id
      start with
        item_id = :item_id
    ) t
  where
    i.item_id = t.parent_id
  order by
    tree_level desc
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/cms/www/modules/sitemap/ancestors-oracle.xql}
dbqd.cms.www.modules.sitemap.ancestors-oracle.get_preview_info {dbqd.cms.www.modules.sitemap.ancestors-oracle.get_preview_info {
      
  select
    $index_page_sql 
    -- does it have a template
    content_item.get_template( item_id, 'public' ) template_id,
    -- symlinks to this folder will have the path of this item
    content_item.get_virtual_path( item_id, :root_id ) virtual_path,
    content_item.get_path( 
      content_symlink.resolve( item_id ), :root_id ) physical_path,
    content_folder.is_folder( item_id ) is_folder,
    live_revision
  from
    cr_items
  where 
    item_id = :item_id
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/cms/www/modules/sitemap/ancestors-oracle.xql}
dbqd.cms.www.modules.sitemap.ancestors-oracle.get_template_id {dbqd.cms.www.modules.sitemap.ancestors-oracle.get_template_id {
      
      select 
        content_item.get_template( 
          nvl( content_folder.get_index_page( :item_id ), 0), 'public' )
      from
        dual
    
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/cms/www/modules/sitemap/ancestors-oracle.xql}
dbqd.cms.www.modules.sitemap.ancestors.index_page_p {dbqd.cms.www.modules.sitemap.ancestors.index_page_p {

      case when coalesce( 
        content_folder__get_index_page( :item_id ),0) =  0 then 'f' else 't' end as has_index_page,

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/cms/www/modules/sitemap/ancestors-postgresql.xql}
dbqd.cms.www.modules.sitemap.ancestors.get_context {dbqd.cms.www.modules.sitemap.ancestors.get_context {

  select
    t.tree_level, t.parent_id, 
    content_folder__is_folder(i.item_id) as is_folder,
    content_item__get_title(t.parent_id,'f') as title
  from 
    cr_items i,
    (
      select 
        i2.parent_id, tree_level(i2.tree_sortkey) as tree_level
      from 
        (select * from cr_items where item_id = :item_id) i1, cr_items i2
      where
        i2.parent_id != 0
      and
        i1.tree_sortkey between i2.tree_sortkey and tree_right(i2.tree_sortkey)
    ) t
  where
    i.item_id = t.parent_id
  order by
    tree_level desc

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/cms/www/modules/sitemap/ancestors-postgresql.xql}
dbqd.cms.www.modules.sitemap.ancestors.get_preview_info {dbqd.cms.www.modules.sitemap.ancestors.get_preview_info {
      
  select
    $index_page_sql 
    -- does it have a template
    content_item__get_template( item_id, 'public' ) as template_id,
    -- symlinks to this folder will have the path of this item
    content_item__get_virtual_path( item_id, :root_id ) as virtual_path,
    content_item__get_path( 
      content_symlink__resolve( item_id ), :root_id ) as physical_path,
    content_folder__is_folder( item_id ) as is_folder,
    live_revision
  from
    cr_items
  where 
    item_id = :item_id
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/cms/www/modules/sitemap/ancestors-postgresql.xql}
dbqd.cms.www.modules.sitemap.ancestors.get_template_id {dbqd.cms.www.modules.sitemap.ancestors.get_template_id {
      
      select 
        content_item__get_template( 
          coalesce( content_folder__get_index_page( :item_id ), 0), 'public' )
      from
        dual
    
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/cms/www/modules/sitemap/ancestors-postgresql.xql}
dbqd.cms.www.modules.sitemap.attributes-oracle.content {dbqd.cms.www.modules.sitemap.attributes-oracle.content {

             begin
               content_folder.${subfolder_method}(:folder_resolved_id,'content_folder');
               content_folder.${symlink_method}(:folder_resolved_id,'content_symlink');
             end;

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/cms/www/modules/sitemap/attributes-oracle.xql}
dbqd.cms.www.modules.sitemap.attributes-oracle.get_options {dbqd.cms.www.modules.sitemap.attributes-oracle.get_options {
      
  select
    content_folder.is_registered(:folder_id,'content_folder') allow_subfolders,
    content_folder.is_registered(:folder_id,'content_symlink') allow_symlinks,
    content_folder.is_registered(:folder_id,'content_template') allow_templates
  from dual

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/cms/www/modules/sitemap/attributes-oracle.xql}
dbqd.cms.www.modules.sitemap.attributes.content {dbqd.cms.www.modules.sitemap.attributes.content {

             begin
               PERFORM content_folder__${subfolder_method}(:folder_resolved_id,'content_folder','f');
               PERFORM content_folder__${symlink_method}(:folder_resolved_id,'content_symlink','f');

               return null;
             end;

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/cms/www/modules/sitemap/attributes-postgresql.xql}
dbqd.cms.www.modules.sitemap.attributes.get_options {dbqd.cms.www.modules.sitemap.attributes.get_options {
      
  select
    content_folder__is_registered(:folder_id,'content_folder','f') as allow_subfolders,
    content_folder__is_registered(:folder_id,'content_symlink','f') as allow_symlinks,
    content_folder__is_registered(:folder_id,'content_template','f') as allow_templates
  

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/cms/www/modules/sitemap/attributes-postgresql.xql}
dbqd.cms.www.modules.sitemap.attributes.get_folder_name {dbqd.cms.www.modules.sitemap.attributes.get_folder_name {
      
  select label from cr_folders where folder_id = :folder_id

      } {} {} {} c:/web/openacs-4/packages/cms/www/modules/sitemap/attributes.xql}
dbqd.cms.www.modules.sitemap.copy-oracle.copy_item {dbqd.cms.www.modules.sitemap.copy-oracle.copy_item {
      
	    begin
            content_item.copy(
                item_id          => :cp_item_id,
                target_folder_id => :folder_id,
	        creation_user    => :user_id,
	        creation_ip      => :ip
            ); 
            end;
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/cms/www/modules/sitemap/copy-oracle.xql}
dbqd.cms.www.modules.sitemap.copy-oracle.get_path {dbqd.cms.www.modules.sitemap.copy-oracle.get_path {
      
  select
    content_item.get_path( :folder_id )
  from 
    dual

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/cms/www/modules/sitemap/copy-oracle.xql}
dbqd.cms.www.modules.sitemap.copy-oracle.get_marked {dbqd.cms.www.modules.sitemap.copy-oracle.get_marked {
      
  select
    content_item.get_title(item_id) title, 
    content_item.get_path(item_id,:root_id) name, 
    item_id, parent_id
  from
    cr_items
  where
    item_id in ([join $clip_items ","])
  and
    -- only for those items which user has cm_examine
    cms_permission.permission_p(item_id, :user_id, 'cm_examine') = 't'

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/cms/www/modules/sitemap/copy-oracle.xql}
dbqd.cms.www.modules.sitemap.copy.copy_item {dbqd.cms.www.modules.sitemap.copy.copy_item {

        select content_item__copy(
                :cp_item_id,
                :folder_id,
	        :user_id,
	        :ip
            ); 
           
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/cms/www/modules/sitemap/copy-postgresql.xql}
dbqd.cms.www.modules.sitemap.copy.get_path {dbqd.cms.www.modules.sitemap.copy.get_path {
      
  select
    content_item__get_path( :folder_id, null )
  from 
    dual

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/cms/www/modules/sitemap/copy-postgresql.xql}
dbqd.cms.www.modules.sitemap.copy.get_marked {dbqd.cms.www.modules.sitemap.copy.get_marked {
      
  select
    content_item__get_title(item_id, 'f') as title, 
    content_item__get_path(item_id,:root_id) as name, 
    item_id, parent_id
  from
    cr_items
  where
    item_id in ([join $clip_items ","])
  and
    -- only for those items which user has cm_examine
    cms_permission__permission_p(item_id, :user_id, 'cm_examine') = 't'

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/cms/www/modules/sitemap/copy-postgresql.xql}
dbqd.cms.www.modules.sitemap.create-oracle.new_folder {dbqd.cms.www.modules.sitemap.create-oracle.new_folder {
      
    begin 
    :1 := content_folder.new(
        name          => :name, 
        label         => :label, 
        description   => :description,
        parent_id     => :create_parent_id, 
        creation_user => :user_id, 
        creation_ip   => :ip ); 
    end;
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/cms/www/modules/sitemap/create-oracle.xql}
dbqd.cms.www.modules.sitemap.create-oracle.register_content_type {dbqd.cms.www.modules.sitemap.create-oracle.register_content_type {
      
	  begin
	  content_folder.register_content_type(
	      folder_id        => :folder_id,
	      content_type     => 'content_template',
	      include_subtypes => 'f' 
	  );
	  end;
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/cms/www/modules/sitemap/create-oracle.xql}
dbqd.cms.www.modules.sitemap.create-oracle.get_path {dbqd.cms.www.modules.sitemap.create-oracle.get_path {
      
  select content_item.get_path(:create_parent_id) from dual

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/cms/www/modules/sitemap/create-oracle.xql}
dbqd.cms.www.modules.sitemap.create.new_folder {dbqd.cms.www.modules.sitemap.create.new_folder {
    
    select content_folder__new (
        :name, 
        :label, 
        :description,
        :create_parent_id, 
        null,
        null,
        now(),
        :user_id, 
        :ip ); 
    
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/cms/www/modules/sitemap/create-postgresql.xql}
dbqd.cms.www.modules.sitemap.create.register_content_type {dbqd.cms.www.modules.sitemap.create.register_content_type {
	 
	  select content_folder__register_content_type(
	      :folder_id,
	      'content_template',
	      'f' 
	  );

	  
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/cms/www/modules/sitemap/create-postgresql.xql}
dbqd.cms.www.modules.sitemap.create.get_path {dbqd.cms.www.modules.sitemap.create.get_path {
      
  select content_item__get_path(:create_parent_id, null) 

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/cms/www/modules/sitemap/create-postgresql.xql}
dbqd.cms.www.modules.sitemap.delete-items-oracle.get_marked_items {dbqd.cms.www.modules.sitemap.delete-items-oracle.get_marked_items {

  select
    item_id,
    nvl(content_item.get_title(item_id),name) title, 
    content_item.get_path(item_id) path,
    pretty_name as content_type_pretty,
    content_symlink.is_symlink(item_id) is_symlink,
    content_folder.is_folder(item_id) is_folder,
    content_template.is_template(item_id) is_template
  from
    cr_items i, acs_object_types t
  where
    i.content_type = t.object_type
  and
    item_id in ([join $clip_items ","])
  and
    -- permissions check
    cms_permission.permission_p( item_id, :user_id, 'cm_write' ) = 't'
  order by
    -- this way parents are deleted after their children
    item_id desc

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/cms/www/modules/sitemap/delete-items-oracle.xql}
dbqd.cms.www.modules.sitemap.delete-items-oracle.delete_items {dbqd.cms.www.modules.sitemap.delete-items-oracle.delete_items {
      
	  begin
	  $delete_proc (
	    $delete_key => :del_item_id
          );
          end;
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/cms/www/modules/sitemap/delete-items-oracle.xql}
dbqd.cms.www.modules.sitemap.delete-items-oracle.symlink_delete {dbqd.cms.www.modules.sitemap.delete-items-oracle.symlink_delete {

        content_symlink.del

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/cms/www/modules/sitemap/delete-items-oracle.xql}
dbqd.cms.www.modules.sitemap.delete-items-oracle.folder_delete {dbqd.cms.www.modules.sitemap.delete-items-oracle.folder_delete {

        content_folder.del

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/cms/www/modules/sitemap/delete-items-oracle.xql}
dbqd.cms.www.modules.sitemap.delete-items-oracle.template_delete {dbqd.cms.www.modules.sitemap.delete-items-oracle.template_delete {

        content_template.del

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/cms/www/modules/sitemap/delete-items-oracle.xql}
dbqd.cms.www.modules.sitemap.delete-items-oracle.item_delete {dbqd.cms.www.modules.sitemap.delete-items-oracle.item_delete {

        content_item.del

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/cms/www/modules/sitemap/delete-items-oracle.xql}
dbqd.cms.www.modules.sitemap.delete-items.get_marked_items {dbqd.cms.www.modules.sitemap.delete-items.get_marked_items {

  select
    item_id,
    coalesce(content_item__get_title(item_id,'f'),name) as title, 
    content_item__get_path(item_id, null) as path,
    pretty_name as content_type_pretty,
    content_symlink__is_symlink(item_id) as is_symlink,
    content_folder__is_folder(item_id) as is_folder,
    content_template__is_template(item_id) as is_template
  from
    cr_items i, acs_object_types t
  where
    i.content_type = t.object_type
  and
    item_id in ([join $clip_items ","])
  and
    -- permissions check
    cms_permission__permission_p( item_id, :user_id, 'cm_write' ) = 't'
  order by
    -- this way parents are deleted after their children
    item_id desc

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/cms/www/modules/sitemap/delete-items-postgresql.xql}
dbqd.cms.www.modules.sitemap.delete-items.delete_items {dbqd.cms.www.modules.sitemap.delete-items.delete_items {
	 
	  select $delete_proc (
	    :del_item_id
          );

         
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/cms/www/modules/sitemap/delete-items-postgresql.xql}
dbqd.cms.www.modules.sitemap.delete-items.symlink_delete {dbqd.cms.www.modules.sitemap.delete-items.symlink_delete {

        content_symlink__delete

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/cms/www/modules/sitemap/delete-items-postgresql.xql}
dbqd.cms.www.modules.sitemap.delete-items.folder_delete {dbqd.cms.www.modules.sitemap.delete-items.folder_delete {

        content_folder__delete

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/cms/www/modules/sitemap/delete-items-postgresql.xql}
dbqd.cms.www.modules.sitemap.delete-items.template_delete {dbqd.cms.www.modules.sitemap.delete-items.template_delete {

        content_template__delete

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/cms/www/modules/sitemap/delete-items-postgresql.xql}
dbqd.cms.www.modules.sitemap.delete-items.item_delete {dbqd.cms.www.modules.sitemap.delete-items.item_delete {

        content_item__delete

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/cms/www/modules/sitemap/delete-items-postgresql.xql}
dbqd.cms.www.modules.sitemap.delete-items.get_list {dbqd.cms.www.modules.sitemap.delete-items.get_list {
      
	  select
	    parent_id
          from
            cr_resolved_items
          where
            resolved_id = :del_item_id
	
      } {} {} {} c:/web/openacs-4/packages/cms/www/modules/sitemap/delete-items.xql}
dbqd.cms.www.modules.sitemap.delete-oracle.delete_folder {dbqd.cms.www.modules.sitemap.delete-oracle.delete_folder {
      begin content_folder.del(:id); end;
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/cms/www/modules/sitemap/delete-oracle.xql}
dbqd.cms.www.modules.sitemap.delete-oracle.check_empty {dbqd.cms.www.modules.sitemap.delete-oracle.check_empty {
      
  select content_folder.is_empty(:id) from dual

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/cms/www/modules/sitemap/delete-oracle.xql}
dbqd.cms.www.modules.sitemap.delete.delete_folder {dbqd.cms.www.modules.sitemap.delete.delete_folder {

        select content_folder__delete(:id)

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/cms/www/modules/sitemap/delete-postgresql.xql}
dbqd.cms.www.modules.sitemap.delete.check_empty {dbqd.cms.www.modules.sitemap.delete.check_empty {
      
  select content_folder__is_empty(:id) 

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/cms/www/modules/sitemap/delete-postgresql.xql}
dbqd.cms.www.modules.sitemap.index-oracle.create_folder {dbqd.cms.www.modules.sitemap.index-oracle.create_folder {
      
  select
    r.item_id, '' as context,
    decode(o.object_type, 'content_symlink', r.label,
			  'content_folder', f.label,
			  nvl(v.title, i.name)) title,
    decode(r.item_id, :index_page_id, 't', 'f') is_index_page,
    nvl(to_char(round(v.content_length / 1000, 2)), '-') file_size
  from 
    cr_resolved_items r, cr_items i, cr_folders f, cr_revisions v, 
    cr_revisions u, acs_objects o, acs_object_types t
  where
    r.parent_id = $parent_var
  and
    r.resolved_id = i.item_id
  and
    i.item_id = o.object_id
  and
    i.content_type = t.object_type
  and
    i.latest_revision = v.revision_id (+)
  and
    i.live_revision = u.revision_id (+)
  and
    i.item_id = f.folder_id (+)
  order by
    is_index_page desc $orderby_clause
  
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/cms/www/modules/sitemap/index-oracle.xql}
dbqd.cms.www.modules.sitemap.index-oracle.display_data_partial {dbqd.cms.www.modules.sitemap.index-oracle.display_data_partial {

  select
    decode(i.content_type, 'content_folder', 't', 'f') is_folder,
    decode(i.content_type, 'content_template', 't', 'f') is_template,
    r.item_id, r.resolved_id, r.is_symlink, r.name,
    NVL(trim(
      decode(o.object_type, 'content_symlink', r.label,
			  'content_folder', f.label,
			  nvl(v.title, i.name))),
      '-') title,
    decode(i.publish_status, 'live', 
      to_char(u.publish_date, 'MM/DD/YYYY'), '-') publish_date,
    o.object_type, t.pretty_name content_type,
    to_char(o.last_modified, 'MM/DD/YYYY HH24:MI') last_modified_date,
    decode(r.item_id, :index_page_id, 't', 'f') is_index_page,
    nvl(to_char(round(v.content_length / 1000, 2)), '-') file_size
  from 
    cr_resolved_items r, cr_items i, cr_folders f, cr_revisions v, 
    cr_revisions u, acs_objects o, acs_object_types t
  where
    r.parent_id = $parent_var
  and
    r.resolved_id = i.item_id
  and
    i.item_id = o.object_id
  and
    i.content_type = t.object_type
  and
    i.latest_revision = v.revision_id (+)
  and
    i.live_revision = u.revision_id (+)
  and
    i.item_id = f.folder_id (+)
  and
    -- paginator sql
    r.item_id in (CURRENT_PAGE_SET)
  order by
    is_index_page desc $orderby_clause
  
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/cms/www/modules/sitemap/index-oracle.xql}
dbqd.cms.www.modules.sitemap.index-oracle.get_resolved_id {dbqd.cms.www.modules.sitemap.index-oracle.get_resolved_id {
      
    select content_symlink.resolve( :id ) from dual
  
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/cms/www/modules/sitemap/index-oracle.xql}
dbqd.cms.www.modules.sitemap.index-oracle.get_index_page_id {dbqd.cms.www.modules.sitemap.index-oracle.get_index_page_id {
      
  select content_folder.get_index_page($parent_var) from dual

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/cms/www/modules/sitemap/index-oracle.xql}
dbqd.cms.www.modules.sitemap.index-oracle.get_symlinks {dbqd.cms.www.modules.sitemap.index-oracle.get_symlinks {
      
  select
    i.item_id id,
    content_item.get_path(i.item_id) path
  from 
    cr_items i, cr_symlinks s
  where
    i.item_id = s.target_id
  and
    i.item_id = :original_id

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/cms/www/modules/sitemap/index-oracle.xql}
dbqd.cms.www.modules.sitemap.index-oracle.get_info {dbqd.cms.www.modules.sitemap.index-oracle.get_info {
      
    select
      parent_id, NVL(label, name) label, description
    from
      cr_items i, cr_folders f
    where
      i.item_id = f.folder_id
    and
      f.folder_id = :id
  
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/cms/www/modules/sitemap/index-oracle.xql}
dbqd.cms.www.modules.sitemap.index.create_folder {dbqd.cms.www.modules.sitemap.index.create_folder {
      
  select
    r.item_id, '' as context,
    case when o.object_type = 'content_symlink' then r.label 
         when o.object_type = 'content_folder'  then f.label
         else coalesce(v.title, i.name) end as title,
    case when r.item_id = :index_page_id then 't' 
                                         else 'f' end as is_index_page,
    coalesce(round(v.content_length::numeric / 1000.0, 2)::float8::text, '-') as file_size
  from 
    cr_items i 
        LEFT OUTER JOIN 
    cr_revisions v ON i.latest_revision = v.revision_id
        LEFT OUTER JOIN 
    cr_revisions u ON i.live_revision = u.revision_id
        LEFT OUTER JOIN
    cr_folders f ON i.item_id = f.folder_id,
    cr_resolved_items r, acs_objects o, acs_object_types t
  where
    r.parent_id = $parent_var
  and
    r.resolved_id = i.item_id
  and
    i.item_id = o.object_id
  and
    i.content_type = t.object_type
  order by
    is_index_page desc $orderby_clause
  
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/cms/www/modules/sitemap/index-postgresql.xql}
dbqd.cms.www.modules.sitemap.index.display_data_partial {dbqd.cms.www.modules.sitemap.index.display_data_partial {

  select
    case when i.content_type = 'content_folder' then 't' else'f' end as is_folder,
    case when i.content_type = 'content_template' then 't' else 'f' end as is_template,
    r.item_id, r.resolved_id, r.is_symlink, r.name,
    coalesce(trim(
      case when o.object_type = 'content_symlink' then r.label
           when o.object_type = 'content_folder' then f.label
	   else coalesce(v.title, i.name) end),'-') as title,
    case when i.publish_status = 'live' then to_char(u.publish_date, 'MM/DD/YYYY') else '-' end as publish_date,
    o.object_type, t.pretty_name as content_type,
    to_char(o.last_modified, 'MM/DD/YYYY HH24:MI') as last_modified_date,
    case when r.item_id = :index_page_id then 't' else 'f' end as is_index_page,
    coalesce(round(v.content_length::numeric / 1000.0, 2)::float8::text, '-') as file_size
  from 
    cr_items i
        LEFT OUTER JOIN
    cr_revisions v ON i.latest_revision = v.revision_id
        LEFT OUTER JOIN
    cr_revisions u ON i.live_revision = u.revision_id
        LEFT OUTER JOIN
    cr_folders f ON i.item_id = f.folder_id, 
    cr_resolved_items r, acs_objects o, acs_object_types t
  where
    r.parent_id = $parent_var
  and
    r.resolved_id = i.item_id
  and
    i.item_id = o.object_id
  and
    i.content_type = t.object_type
  and
    -- paginator sql
    r.item_id in (CURRENT_PAGE_SET)
  order by
    is_index_page desc $orderby_clause
  
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/cms/www/modules/sitemap/index-postgresql.xql}
dbqd.cms.www.modules.sitemap.index.get_resolved_id {dbqd.cms.www.modules.sitemap.index.get_resolved_id {
      
    select content_symlink__resolve( :id ) 
  
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/cms/www/modules/sitemap/index-postgresql.xql}
dbqd.cms.www.modules.sitemap.index.get_index_page_id {dbqd.cms.www.modules.sitemap.index.get_index_page_id {
      
  select content_folder__get_index_page($parent_var) 

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/cms/www/modules/sitemap/index-postgresql.xql}
dbqd.cms.www.modules.sitemap.index.get_symlinks {dbqd.cms.www.modules.sitemap.index.get_symlinks {
      
  select
    i.item_id as id,
    content_item__get_path(i.item_id, null) as path
  from 
    cr_items i, cr_symlinks s
  where
    i.item_id = s.target_id
  and
    i.item_id = :original_id

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/cms/www/modules/sitemap/index-postgresql.xql}
dbqd.cms.www.modules.sitemap.index.get_info {dbqd.cms.www.modules.sitemap.index.get_info {
      
    select
      parent_id, coalesce(label, name) as label, description
    from
      cr_items i, cr_folders f
    where
      i.item_id = f.folder_id
    and
      f.folder_id = :id
  
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/cms/www/modules/sitemap/index-postgresql.xql}
dbqd.cms.www.modules.sitemap.index.get_module_name {dbqd.cms.www.modules.sitemap.index.get_module_name {
      
    select name from cm_modules where key = :mount_point
  
      } {} {} {} c:/web/openacs-4/packages/cms/www/modules/sitemap/index.xql}
dbqd.cms.www.modules.sitemap.index.get_reg_types {dbqd.cms.www.modules.sitemap.index.get_reg_types {
      
    select
      content_type
    from
      cr_folder_type_map
    where
      folder_id = :root_id
  
      } {} {} {} c:/web/openacs-4/packages/cms/www/modules/sitemap/index.xql}
dbqd.cms.www.modules.sitemap.index.get_types {dbqd.cms.www.modules.sitemap.index.get_types {
      
    select
      content_type
    from
      cr_folder_type_map
    where
      folder_id = :id
  
      } {} {} {} c:/web/openacs-4/packages/cms/www/modules/sitemap/index.xql}
dbqd.cms.www.modules.sitemap.move-oracle.move_items {dbqd.cms.www.modules.sitemap.move-oracle.move_items {
      
	    begin
            content_item.move(
                item_id          => :mv_item_id,
                target_folder_id => :folder_id
            ); 
            end;
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/cms/www/modules/sitemap/move-oracle.xql}
dbqd.cms.www.modules.sitemap.move-oracle.get_path {dbqd.cms.www.modules.sitemap.move-oracle.get_path {
      
  select
    content_item.get_path( :folder_id )
  from 
    dual

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/cms/www/modules/sitemap/move-oracle.xql}
dbqd.cms.www.modules.sitemap.move-oracle.get_marked {dbqd.cms.www.modules.sitemap.move-oracle.get_marked {
      
  select
    content_item.get_title(item_id) title, 
    content_item.get_path(item_id,:root_id) name, 
    item_id, parent_id
  from
    cr_items
  where
    item_id in ([join $clip_items ","])
  and
    -- only for those items which user has cm_write
    cms_permission.permission_p(item_id, :user_id, 'cm_write') = 't'

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/cms/www/modules/sitemap/move-oracle.xql}
dbqd.cms.www.modules.sitemap.move.move_items {dbqd.cms.www.modules.sitemap.move.move_items {

        select content_item__move(
                :mv_item_id,
                :folder_id
            ); 
           
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/cms/www/modules/sitemap/move-postgresql.xql}
dbqd.cms.www.modules.sitemap.move.get_path {dbqd.cms.www.modules.sitemap.move.get_path {
      
  select
    content_item__get_path( :folder_id, null )
  from 
    dual

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/cms/www/modules/sitemap/move-postgresql.xql}
dbqd.cms.www.modules.sitemap.move.get_marked {dbqd.cms.www.modules.sitemap.move.get_marked {
      
  select
    content_item__get_title(item_id, 'f') as title, 
    content_item__get_path(item_id,:root_id) as name, 
    item_id, parent_id
  from
    cr_items
  where
    item_id in ([join $clip_items ","])
  and
    -- only for those items which user has cm_write
    cms_permission__permission_p(item_id, :user_id, 'cm_write') = 't'

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/cms/www/modules/sitemap/move-postgresql.xql}
dbqd.cms.www.modules.sitemap.rename-oracle.rename_folder {dbqd.cms.www.modules.sitemap.rename-oracle.rename_folder {
      
    begin 
    content_folder.rename (
        folder_id   => :item_id, 
        name        => :name, 
        label       => :label, 
        description => :description
    ); 
    end;
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/cms/www/modules/sitemap/rename-oracle.xql}
dbqd.cms.www.modules.sitemap.rename.rename_folder {dbqd.cms.www.modules.sitemap.rename.rename_folder {

        select content_folder__rename (
        :item_id, 
        :name, 
        :label, 
        :description
    ); 
    
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/cms/www/modules/sitemap/rename-postgresql.xql}
dbqd.cms.www.modules.sitemap.rename.get_info {dbqd.cms.www.modules.sitemap.rename.get_info {
      
    select
      i.name, f.label, f.description
    from 
      cr_items i, cr_folders f
    where
      i.item_id = :item_id
    and
      f.folder_id = :item_id
      } {} {} {} c:/web/openacs-4/packages/cms/www/modules/sitemap/rename.xql}
dbqd.cms.www.modules.sitemap.symlink-oracle.new_link {dbqd.cms.www.modules.sitemap.symlink-oracle.new_link {
      
	    begin
            :symlink_id := content_symlink.new(
                name          => :name, 
                label         => :label,
                target_id     => :sym_item_id, 
                parent_id     => :folder_id,
                creation_date => sysdate, 
                creation_user => :user_id, 
                creation_ip   => :ip
            ); 
            end;
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/cms/www/modules/sitemap/symlink-oracle.xql}
dbqd.cms.www.modules.sitemap.symlink-oracle.get_marked {dbqd.cms.www.modules.sitemap.symlink-oracle.get_marked {
      
  select
    content_item.get_title(item_id) title, 'symlink_to_' || name as name, 
    item_id
  from
    cr_items
  where
    item_id in ([join $clip_items ","])
  and
    -- only items which have are not symlinks
    content_type ^= 'content_symlink'
  and
    -- only for those item which user has cm_examine
    cms_permission.permission_p(item_id, :user_id, 'cm_examine') = 't'

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/cms/www/modules/sitemap/symlink-oracle.xql}
dbqd.cms.www.modules.sitemap.symlink.new_link {dbqd.cms.www.modules.sitemap.symlink.new_link {


        select content_symlink__new(
                :name, 
                :label,
                :sym_item_id, 
                :folder_id,
                null,
                current_timestamp, 
                :user_id, 
                :ip
            ); 
            
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/cms/www/modules/sitemap/symlink-postgresql.xql}
dbqd.cms.www.modules.sitemap.symlink.get_marked {dbqd.cms.www.modules.sitemap.symlink.get_marked {
      
  select
    content_item__get_title(item_id,'f') as title, 'symlink_to_' || name as name, 
    item_id
  from
    cr_items
  where
    item_id in ([join $clip_items ","])
  and
    -- only items which have are not symlinks
    content_type != 'content_symlink'
  and
    -- only for those item which user has cm_examine
    cms_permission__permission_p(item_id, :user_id, 'cm_examine') = 't'

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/cms/www/modules/sitemap/symlink-postgresql.xql}
dbqd.cms.www.modules.sitemap.type-register-oracle.register_type {dbqd.cms.www.modules.sitemap.type-register-oracle.register_type {
      begin
           content_folder.register_content_type(
               folder_id        => :folder_id,
               content_type     => :type,
               include_subtypes => 'f'
           );
         end;
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/cms/www/modules/sitemap/type-register-oracle.xql}
dbqd.cms.www.modules.sitemap.type-register.register_type {dbqd.cms.www.modules.sitemap.type-register.register_type {

        select content_folder__register_content_type(
               :folder_id,
               :type,
               'f'
           );
         
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/cms/www/modules/sitemap/type-register-postgresql.xql}
dbqd.cms.www.modules.sitemap.type-unregister-oracle.unregister {dbqd.cms.www.modules.sitemap.type-unregister-oracle.unregister {
      
         begin
           content_folder.unregister_content_type(
               folder_id        => :folder_id,
               content_type     => :type_key,
               include_subtypes => 'f' 
           );
         end;
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/cms/www/modules/sitemap/type-unregister-oracle.xql}
dbqd.cms.www.modules.sitemap.type-unregister.unregister {dbqd.cms.www.modules.sitemap.type-unregister.unregister {


        select content_folder__unregister_content_type(
               :folder_id,
               :type_key,
               'f' 
           );
        
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/cms/www/modules/sitemap/type-unregister-postgresql.xql}
dbqd.cms.www.modules.templates.assets.get_image_info {dbqd.cms.www.modules.templates.assets.get_image_info {
      
          select width, height from images 
          where image_id = :revision_id
        
      } {} {} {} c:/web/openacs-4/packages/cms/www/modules/templates/assets.xql}
dbqd.cms.www.modules.templates.clipboard-oracle.get_templates {dbqd.cms.www.modules.templates.clipboard-oracle.get_templates {

        select
           template_id, content_item.get_path(template_id) path
        from
           cr_templates
        where
          template_id in ($in_list)

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/cms/www/modules/templates/clipboard-oracle.xql}
dbqd.cms.www.modules.templates.clipboard.get_templates {dbqd.cms.www.modules.templates.clipboard.get_templates {

        select
           template_id, content_item__get_path(template_id,null) as path
        from
           cr_templates
        where
          template_id in ($in_list)

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/cms/www/modules/templates/clipboard-postgresql.xql}
dbqd.cms.www.modules.templates.copy-oracle.copy_item {dbqd.cms.www.modules.templates.copy-oracle.copy_item {
      declare copy_id integer; begin 
        copy_id := content_item.copy2(
          :template_id, :folder_id, :creation_user, :creation_ip
        );
        insert into cr_templates (template_id) values (copy_id);
      end;
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/cms/www/modules/templates/copy-oracle.xql}
dbqd.cms.www.modules.templates.copy-oracle.get_path {dbqd.cms.www.modules.templates.copy-oracle.get_path {
      select content_item.get_path(:folder_id) from dual
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/cms/www/modules/templates/copy-oracle.xql}
dbqd.cms.www.modules.templates.copy.copy_item {dbqd.cms.www.modules.templates.copy.copy_item {

        declare 
                copy_id integer; 
        begin 
                copy_id := content_item__copy2(
                                :template_id, :folder_id, :creation_user, :creation_ip
                           );

                insert into cr_templates (template_id) values (copy_id);

                return null;
        end;

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/cms/www/modules/templates/copy-postgresql.xql}
dbqd.cms.www.modules.templates.copy.get_path {dbqd.cms.www.modules.templates.copy.get_path {
      select content_item__get_path(:folder_id, null) 
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/cms/www/modules/templates/copy-postgresql.xql}
dbqd.cms.www.modules.templates.delete-oracle.delete {dbqd.cms.www.modules.templates.delete-oracle.delete {
      begin content_template.del(:template_id); end;
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/cms/www/modules/templates/delete-oracle.xql}
dbqd.cms.www.modules.templates.delete.delete {dbqd.cms.www.modules.templates.delete.delete {

        select content_template__delete(:template_id)

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/cms/www/modules/templates/delete-postgresql.xql}
dbqd.cms.www.modules.templates.edit-oracle.get_path {dbqd.cms.www.modules.templates.edit-oracle.get_path {

        select content_item.get_path(:template_id) from dual

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/cms/www/modules/templates/edit-oracle.xql}
dbqd.cms.www.modules.templates.edit.get_path {dbqd.cms.www.modules.templates.edit.get_path {

        select content_item__get_path(:template_id, null)

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/cms/www/modules/templates/edit-postgresql.xql}
dbqd.cms.www.modules.templates.edit.get_mime_types {dbqd.cms.www.modules.templates.edit.get_mime_types {

  select label, m.mime_type from cr_mime_types m, cr_content_mime_type_map t
  where t.content_type = 'content_template' and t.mime_type = m.mime_type

      } {} {} {} c:/web/openacs-4/packages/cms/www/modules/templates/edit.xql}
dbqd.cms.www.modules.templates.edit.get_mime_type {dbqd.cms.www.modules.templates.edit.get_mime_type {

        select mime_type from cr_revisions where revision_id = :edit_revision

      } {} {} {} c:/web/openacs-4/packages/cms/www/modules/templates/edit.xql}
dbqd.cms.www.modules.templates.edit.get_revision_count {dbqd.cms.www.modules.templates.edit.get_revision_count {

        select count(revision_id) 
        from cr_revisions 
        where item_id = :template_id

      } {} {} {} c:/web/openacs-4/packages/cms/www/modules/templates/edit.xql}
dbqd.cms.www.modules.templates.index-oracle.get_id {dbqd.cms.www.modules.templates.index-oracle.get_id {


        select 
        content_item.get_id(:path, content_template.get_root_folder) 
        from dual

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/cms/www/modules/templates/index-oracle.xql}
dbqd.cms.www.modules.templates.index-oracle.get_root_folder_id {dbqd.cms.www.modules.templates.index-oracle.get_root_folder_id {

        select content_template.get_root_folder from dual

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/cms/www/modules/templates/index-oracle.xql}
dbqd.cms.www.modules.templates.index-oracle.get_path {dbqd.cms.www.modules.templates.index-oracle.get_path {

        select content_item.get_path(:id) from dual

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/cms/www/modules/templates/index-oracle.xql}
dbqd.cms.www.modules.templates.index-oracle.get_items {dbqd.cms.www.modules.templates.index-oracle.get_items {

  select
    t.template_id, i.name, 
    to_char(o.last_modified, 'MM/DD/YY HH:MI AM') modified,
    nvl(round(r.content_length / 1000, 2), 0) || ' KB' as file_size
  from
    cr_templates t, cr_items i, acs_objects o, cr_revisions r
  where
    i.parent_id = :id
  and
    i.item_id = t.template_id
  and
    i.item_id = o.object_id
  and
    i.latest_revision = r.revision_id (+)
  order by
    upper(i.name)
 
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/cms/www/modules/templates/index-oracle.xql}
dbqd.cms.www.modules.templates.index.get_id {dbqd.cms.www.modules.templates.index.get_id {

        select 
        content_item__get_id(:path, content_template__get_root_folder(), 'f') 

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/cms/www/modules/templates/index-postgresql.xql}
dbqd.cms.www.modules.templates.index.get_root_folder_id {dbqd.cms.www.modules.templates.index.get_root_folder_id {

        select content_template__get_root_folder()

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/cms/www/modules/templates/index-postgresql.xql}
dbqd.cms.www.modules.templates.index.get_path {dbqd.cms.www.modules.templates.index.get_path {

        select content_item__get_path(:id, null)

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/cms/www/modules/templates/index-postgresql.xql}
dbqd.cms.www.modules.templates.index.get_items {dbqd.cms.www.modules.templates.index.get_items {

  select
    t.template_id, i.name, 
    to_char(o.last_modified, 'MM/DD/YY HH:MI AM') as modified,
    coalesce(round(r.content_length::numeric / 1000,2), 0)::float8::text || ' KB'::text as file_size
  from
    cr_templates t, acs_objects o, 
    cr_revisions r 
      RIGHT OUTER JOIN 
    cr_items i ON i.latest_revision = r.revision_id
  where
    i.parent_id = :id
  and
    i.item_id = t.template_id
  and
    i.item_id = o.object_id
  order by
    upper(i.name)
 
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/cms/www/modules/templates/index-postgresql.xql}
dbqd.cms.www.modules.templates.index.get_type {dbqd.cms.www.modules.templates.index.get_type {

        select content_type from cr_items where item_id = :id
 
      } {} {} {} c:/web/openacs-4/packages/cms/www/modules/templates/index.xql}
dbqd.cms.www.modules.templates.index.get_parent {dbqd.cms.www.modules.templates.index.get_parent {

  select
    f.folder_id, f.label, i.name, 
    to_char(o.last_modified, 'MM/DD/YY HH:MI AM') as modified
  from
    cr_folders f, cr_items i, acs_objects o
  where
    i.item_id = (select parent_id from cr_items where item_id = :id)
  and
    i.item_id = f.folder_id
  and
    i.item_id = o.object_id
 
      } {} {} {} c:/web/openacs-4/packages/cms/www/modules/templates/index.xql}
dbqd.cms.www.modules.templates.index.get_folders {dbqd.cms.www.modules.templates.index.get_folders {

  select
    f.folder_id, f.label, i.name, 
    to_char(o.last_modified, 'MM/DD/YY HH:MI AM') as modified
  from
    cr_folders f, cr_items i, acs_objects o
  where
    i.parent_id = :id
  and
    i.item_id = f.folder_id
  and
    i.item_id = o.object_id
  order by
    upper(f.label), upper(i.name) 

      } {} {} {} c:/web/openacs-4/packages/cms/www/modules/templates/index.xql}
dbqd.cms.www.modules.templates.move-oracle.move_item {dbqd.cms.www.modules.templates.move-oracle.move_item {
      begin 
        content_item.move(
          :template_id, :folder_id
        );
      end;
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/cms/www/modules/templates/move-oracle.xql}
dbqd.cms.www.modules.templates.move-oracle.get_path {dbqd.cms.www.modules.templates.move-oracle.get_path {
      select content_item.get_path(:folder_id) from dual
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/cms/www/modules/templates/move-oracle.xql}
dbqd.cms.www.modules.templates.move.move_item {dbqd.cms.www.modules.templates.move.move_item {


        select content_item__move(
          :template_id, :folder_id
        );
     
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/cms/www/modules/templates/move-postgresql.xql}
dbqd.cms.www.modules.templates.move.get_path {dbqd.cms.www.modules.templates.move.get_path {
      select content_item__get_path(:folder_id, null) 
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/cms/www/modules/templates/move-postgresql.xql}
dbqd.cms.www.modules.templates.new-folder-oracle.get_path {dbqd.cms.www.modules.templates.new-folder-oracle.get_path {

        select content_item.get_path(:parent_id) from dual

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/cms/www/modules/templates/new-folder-oracle.xql}
dbqd.cms.www.modules.templates.new-folder-oracle.new_folder {dbqd.cms.www.modules.templates.new-folder-oracle.new_folder {

   begin :1 := content_folder.new(
         folder_id => :folder_id,
         name => :name,
         label => :label,
         description => :description,
         parent_id => :parent_id,
         creation_ip   => :creation_ip,
         creation_user => :creation_user
  ); end;
       } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/cms/www/modules/templates/new-folder-oracle.xql}
dbqd.cms.www.modules.templates.new-folder.get_path {dbqd.cms.www.modules.templates.new-folder.get_path {

        select content_item__get_path(:parent_id, null)

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/cms/www/modules/templates/new-folder-postgresql.xql}
dbqd.cms.www.modules.templates.new-folder.new_folder {dbqd.cms.www.modules.templates.new-folder.new_folder {

   select content_folder__new(
         :name,
         :label,
         :description,
         :parent_id,
         null,
         :folder_id,
         now(),
         :creation_user,
         :creation_ip
  )
       } {} {} {postgresql 7.1} c:/web/openacs-4/packages/cms/www/modules/templates/new-folder-postgresql.xql}
dbqd.cms.www.modules.templates.new-template-oracle.new_template {dbqd.cms.www.modules.templates.new-template-oracle.new_template {
      begin :1 := content_template.new(
         template_id => :template_id,
         name => :name,
         parent_id => :folder_id,
         creation_ip   => :creation_ip,
         creation_user => :creation_user
  ); end;
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/cms/www/modules/templates/new-template-oracle.xql}
dbqd.cms.www.modules.templates.new-template-oracle.get_path {dbqd.cms.www.modules.templates.new-template-oracle.get_path {

        select content_item.get_path(:folder_id) from dual

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/cms/www/modules/templates/new-template-oracle.xql}
dbqd.cms.www.modules.templates.new-template.new_template {dbqd.cms.www.modules.templates.new-template.new_template {

        select content_template__new(
                :name,
                :folder_id,
                :template_id,
                now(),
                :creation_user,
                :creation_ip
        );

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/cms/www/modules/templates/new-template-postgresql.xql}
dbqd.cms.www.modules.templates.new-template.get_path {dbqd.cms.www.modules.templates.new-template.get_path {

        select content_item__get_path(:folder_id, null)

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/cms/www/modules/templates/new-template-postgresql.xql}
dbqd.cms.www.modules.templates.new-template.get_mime_types {dbqd.cms.www.modules.templates.new-template.get_mime_types {

  select label, m.mime_type from cr_mime_types m, cr_content_mime_type_map t
  where t.content_type = 'content_template' and t.mime_type = m.mime_type

      } {} {} {} c:/web/openacs-4/packages/cms/www/modules/templates/new-template.xql}
dbqd.cms.www.modules.templates.properties-oracle.get_id {dbqd.cms.www.modules.templates.properties-oracle.get_id {
      
    select 
      content_item.get_id(:path, content_template.get_root_folder) 
    from dual

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/cms/www/modules/templates/properties-oracle.xql}
dbqd.cms.www.modules.templates.properties-oracle.get_root_id {dbqd.cms.www.modules.templates.properties-oracle.get_root_id {
      
        select content_template.get_root_folder from dual

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/cms/www/modules/templates/properties-oracle.xql}
dbqd.cms.www.modules.templates.properties-oracle.get_path {dbqd.cms.www.modules.templates.properties-oracle.get_path {

      select content_item.get_path(:id) from dual

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/cms/www/modules/templates/properties-oracle.xql}
dbqd.cms.www.modules.templates.properties.get_id {dbqd.cms.www.modules.templates.properties.get_id {
      
    select 
      content_item__get_id(:path, content_template__get_root_folder(), 'f')    

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/cms/www/modules/templates/properties-postgresql.xql}
dbqd.cms.www.modules.templates.properties.get_root_id {dbqd.cms.www.modules.templates.properties.get_root_id {
      
        select content_template__get_root_folder()

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/cms/www/modules/templates/properties-postgresql.xql}
dbqd.cms.www.modules.templates.properties.get_path {dbqd.cms.www.modules.templates.properties.get_path {

      select content_item__get_path(:id, null)

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/cms/www/modules/templates/properties-postgresql.xql}
dbqd.cms.www.modules.templates.properties.get_type {dbqd.cms.www.modules.templates.properties.get_type {

        select content_type from cr_items where item_id = :id

      } {} {} {} c:/web/openacs-4/packages/cms/www/modules/templates/properties.xql}
dbqd.cms.www.modules.templates.publish-oracle.get_info {dbqd.cms.www.modules.templates.publish-oracle.get_info {
      
  select 
    content_item.get_path(item_id) path, item_id 
  from 
    cr_items 
  where item_id = (
    select item_id from cr_revisions where revision_id = :revision_id)
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/cms/www/modules/templates/publish-oracle.xql}
dbqd.cms.www.modules.templates.publish.get_info {dbqd.cms.www.modules.templates.publish.get_info {
      
  select 
    content_item__get_path(item_id,null) as path, item_id 
  from 
    cr_items 
  where item_id = (
    select item_id from cr_revisions where revision_id = :revision_id)

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/cms/www/modules/templates/publish-postgresql.xql}
dbqd.cms.www.modules.templates.publish.update_items {dbqd.cms.www.modules.templates.publish.update_items {
      update cr_items set live_revision = :revision_id
                where item_id = :template_id
      } {} {} {} c:/web/openacs-4/packages/cms/www/modules/templates/publish.xql}
dbqd.cms.www.modules.templates.revisions-oracle.get_revisions {dbqd.cms.www.modules.templates.revisions-oracle.get_revisions {
      
  select
    revision_id,
    to_char(o.creation_date, 'MM/DD/YY HH:MI AM') modified,
    round(r.content_length / 1000, 2) || ' KB' as file_size,
    decode(NVL(p.person_id, 0),
        0, '-',
        substr(p.first_names, 1, 1) || substr(p.last_name, 1, 1)) modified_by,
    nvl(j.msg, '-') msg
  from 
    cr_revisions r, acs_objects o, persons p, journal_entries j
  where
    item_id = :template_id
  and
    o.object_id = r.revision_id
  and
    o.creation_user = p.person_id (+)
  and
    o.object_id = j.journal_id (+)
  order by
    o.creation_date desc

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/cms/www/modules/templates/revisions-oracle.xql}
dbqd.cms.www.modules.templates.revisions.get_revisions {dbqd.cms.www.modules.templates.revisions.get_revisions {
      
  select
    revision_id,
    to_char(o.creation_date, 'MM/DD/YY HH:MI AM') as modified,
    (round(r.content_length::numeric / 1000.0,2)::float8::text || ' KB'::text) as file_size,
    case when coalesce(p.person_id, 0) = 0 
            then '-' 
            else substr(p.first_names, 1, 1) || substr(p.last_name, 1, 1) end as modified_by,
    coalesce(j.msg, '-') as msg
  from 
    cr_revisions r, 
    acs_objects o 
      LEFT OUTER JOIN 
    journal_entries j ON o.object_id = j.journal_id 
      LEFT OUTER JOIN 
    persons p ON o.creation_user = p.person_id
  where
    item_id = :template_id
  and
    o.object_id = r.revision_id
  order by
    o.creation_date desc

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/cms/www/modules/templates/revisions-postgresql.xql}
dbqd.cms.www.modules.templates.revisions.get_live_revision {dbqd.cms.www.modules.templates.revisions.get_live_revision {

        select live_revision from cr_items where item_id = :template_id

      } {} {} {} c:/web/openacs-4/packages/cms/www/modules/templates/revisions.xql}
dbqd.cms.www.modules.templates.revisions.get_revision_count {dbqd.cms.www.modules.templates.revisions.get_revision_count {

  select
    count(*) 
  from 
    cr_revisions
  where
    item_id = :template_id

      } {} {} {} c:/web/openacs-4/packages/cms/www/modules/templates/revisions.xql}
dbqd.cms.www.modules.templates.template-create-oracle.new_template {dbqd.cms.www.modules.templates.template-create-oracle.new_template {
      begin 
        :ret_val := content_template.new(
            template_id   => :template_id,
            name          => :name,
            parent_id     => :parent_id,
            creation_user => :user_id,
            creation_ip   => :ip_address
        );
        end;
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/cms/www/modules/templates/template-create-oracle.xql}
dbqd.cms.www.modules.templates.template-create-oracle.get_template_id {dbqd.cms.www.modules.templates.template-create-oracle.get_template_id {
      
        select acs_object_id_seq.nextval from dual

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/cms/www/modules/templates/template-create-oracle.xql}
dbqd.cms.www.modules.templates.template-create.new_template {dbqd.cms.www.modules.templates.template-create.new_template {

        select content_template__new(
            :name,
            :parent_id,
            :template_id,
            now(),
            :user_id,
            :ip_address
        );
        
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/cms/www/modules/templates/template-create-postgresql.xql}
dbqd.cms.www.modules.templates.template-create.get_template_id {dbqd.cms.www.modules.templates.template-create.get_template_id {
      
        select acs_object_id_seq.nextval

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/cms/www/modules/templates/template-create-postgresql.xql}
dbqd.cms.www.modules.templates.template-create.get_folder_name {dbqd.cms.www.modules.templates.template-create.get_folder_name {
 
        select name from cr_items where item_id = :parent_id     

      } {} {} {} c:/web/openacs-4/packages/cms/www/modules/templates/template-create.xql}
dbqd.cms.www.modules.templates.template-delete-oracle.delete_template {dbqd.cms.www.modules.templates.template-delete-oracle.delete_template {
      
      begin 
        content_template.del(:template_id); 
      end;
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/cms/www/modules/templates/template-delete-oracle.xql}
dbqd.cms.www.modules.templates.template-delete-oracle.get_status {dbqd.cms.www.modules.templates.template-delete-oracle.get_status {
      
  select 't' from dual 
    where not exists (
      select 
        1 
      from
        cr_templates t, acs_objects o
      where
        o.object_id = t.template_id
      and
        o.context_id = :template_id
      and not exists (select 1 from cr_revisions 
                        where revision_id = t.template_id))

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/cms/www/modules/templates/template-delete-oracle.xql}
dbqd.cms.www.modules.templates.template-delete.delete_template {dbqd.cms.www.modules.templates.template-delete.delete_template {

        select content_template__delete(:template_id); 
      
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/cms/www/modules/templates/template-delete-postgresql.xql}
dbqd.cms.www.modules.templates.template-delete.get_status {dbqd.cms.www.modules.templates.template-delete.get_status {
      
  select 't'::text from dual 
    where not exists (
      select 
        1 
      from
        cr_templates t, acs_objects o
      where
        o.object_id = t.template_id
      and
        o.context_id = :template_id
      and not exists (select 1 from cr_revisions 
                        where revision_id = t.template_id))

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/cms/www/modules/templates/template-delete-postgresql.xql}
dbqd.cms.www.modules.templates.template-oracle.get_id {dbqd.cms.www.modules.templates.template-oracle.get_id {
      
  select content_symlink.resolve(:template_id) from dual

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/cms/www/modules/templates/template-oracle.xql}
dbqd.cms.www.modules.templates.template-oracle.get_path {dbqd.cms.www.modules.templates.template-oracle.get_path {
      
  select content_item.get_path(:template_id, :root_id) from dual

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/cms/www/modules/templates/template-oracle.xql}
dbqd.cms.www.modules.templates.template-oracle.get_items {dbqd.cms.www.modules.templates.template-oracle.get_items {
      
  select
    content_item.get_title(item_id) title, item_id, use_context
  from
    cr_item_template_map
  where
    template_id = :template_id
  order by
    use_context
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/cms/www/modules/templates/template-oracle.xql}
dbqd.cms.www.modules.templates.template-oracle.get_context {dbqd.cms.www.modules.templates.template-oracle.get_context {

select
      t.tree_level, t.context_id, content_item.get_title(t.context_id) as title
    from (
      select 
        context_id, level as tree_level
      from 
        acs_objects
      where
        context_id <> 0
      connect by
        prior context_id = object_id
      start with
        object_id = :template_id
      ) t, cr_items i
    where
      i.item_id = t.context_id
    order by
      tree_level desc

       } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/cms/www/modules/templates/template-oracle.xql}
dbqd.cms.www.modules.templates.template.get_id {dbqd.cms.www.modules.templates.template.get_id {
      
  select content_symlink__resolve(:template_id) 

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/cms/www/modules/templates/template-postgresql.xql}
dbqd.cms.www.modules.templates.template.get_path {dbqd.cms.www.modules.templates.template.get_path {
      
  select content_item__get_path(:template_id, :root_id) 

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/cms/www/modules/templates/template-postgresql.xql}
dbqd.cms.www.modules.templates.template.get_items {dbqd.cms.www.modules.templates.template.get_items {
      
  select
    content_item__get_title(item_id, 'f') as title, item_id, use_context
  from
    cr_item_template_map
  where
    template_id = :template_id
  order by
    use_context
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/cms/www/modules/templates/template-postgresql.xql}
dbqd.cms.www.modules.templates.template.get_context {dbqd.cms.www.modules.templates.template.get_context {

select
      t.tree_level, t.context_id, content_item__get_title(t.context_id) as title
    from (
      select 
        context_id, tree_level(tree_sortkey) as tree_level
      from 
        acs_objects o1, (select tree_ancestor_keys(select tree_sorkey 
                                                     from acs_objects 
                                                     where object_id = :template_id) as tree_sortkey) parents
      where
        context_id <> 0
      and 
        o1.tree_sortkey = parents.tree_sortkey
      ) t, cr_items i
    where
      i.item_id = t.context_id
    order by
      tree_level desc

       } {} {} {postgresql 7.1} c:/web/openacs-4/packages/cms/www/modules/templates/template-postgresql.xql}
dbqd.cms.www.modules.templates.template.get_types {dbqd.cms.www.modules.templates.template.get_types {
      
  select
    pretty_name, content_type, use_context
  from
    acs_object_types types, cr_type_template_map map
  where
    map.template_id = :template_id
  and
    types.object_type = map.content_type
  order by
    types.pretty_name
      } {} {} {} c:/web/openacs-4/packages/cms/www/modules/templates/template.xql}
dbqd.cms.www.modules.templates.upload-oracle.get_path {dbqd.cms.www.modules.templates.upload-oracle.get_path {

      select content_item.get_path(:template_id) from dual

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/cms/www/modules/templates/upload-oracle.xql}
dbqd.cms.www.modules.templates.upload.get_path {dbqd.cms.www.modules.templates.upload.get_path {

      select content_item__get_path(:template_id, null)

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/cms/www/modules/templates/upload-postgresql.xql}
dbqd.cms.www.modules.types.content-method-oracle.add_method {dbqd.cms.www.modules.types.content-method-oracle.add_method {
      
      begin
      content_method.add_method (
          content_type   => :content_type,
          content_method => :content_method,
          is_default     => 'f'
      );
      end;
    
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/cms/www/modules/types/content-method-oracle.xql}
dbqd.cms.www.modules.types.content-method.add_method {dbqd.cms.www.modules.types.content-method.add_method {

        select content_method__add_method (
          :content_type,
          :content_method,
          'f'
      );
    
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/cms/www/modules/types/content-method-postgresql.xql}
dbqd.cms.www.modules.types.content-method-set-default-oracle.set_content_method_default {dbqd.cms.www.modules.types.content-method-set-default-oracle.set_content_method_default {
      
  begin
  content_method.set_default_method (
      content_type   => :content_type,
      content_method => :content_method
  );
  end;
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/cms/www/modules/types/content-method-set-default-oracle.xql}
dbqd.cms.www.modules.types.content-method-set-default.set_content_method_default {dbqd.cms.www.modules.types.content-method-set-default.set_content_method_default {

        select content_method__set_default_method (
                :content_type,
                :content_method
        );
  
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/cms/www/modules/types/content-method-set-default-postgresql.xql}
dbqd.cms.www.modules.types.content-method-unregister-oracle.content_method_unregister {dbqd.cms.www.modules.types.content-method-unregister-oracle.content_method_unregister {
      
  begin
  content_method.remove_method (
      content_type   => :content_type,
      content_method => :content_method
  );
  end;

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/cms/www/modules/types/content-method-unregister-oracle.xql}
dbqd.cms.www.modules.types.content-method-unregister.content_method_unregister {dbqd.cms.www.modules.types.content-method-unregister.content_method_unregister {

        select content_method__remove_method (
                :content_type,
                :content_method
        );

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/cms/www/modules/types/content-method-unregister-postgresql.xql}
dbqd.cms.www.modules.types.content-method-unset-default-oracle.unset_content_method_default {dbqd.cms.www.modules.types.content-method-unset-default-oracle.unset_content_method_default {
      
  begin
    content_method.unset_default_method (
      content_type   => :content_type
    );
  end;

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/cms/www/modules/types/content-method-unset-default-oracle.xql}
dbqd.cms.www.modules.types.content-method-unset-default.unset_content_method_default {dbqd.cms.www.modules.types.content-method-unset-default.unset_content_method_default {

        select content_method__unset_default_method (
                :content_type
        );
 

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/cms/www/modules/types/content-method-unset-default-postgresql.xql}
dbqd.cms.www.modules.types.content-method.get_methods {dbqd.cms.www.modules.types.content-method.get_methods {
      
  select
    m.content_method, label, is_default, description
  from
    cm_content_type_method_map map, cm_content_methods m
  where
    m.content_method = map.content_method
  and
    map.content_type = :content_type
  order by
    is_default desc, label

      } {} {} {} c:/web/openacs-4/packages/cms/www/modules/types/content-method.xql}
dbqd.cms.www.modules.types.content-method.check_status {dbqd.cms.www.modules.types.content-method.check_status {
      
  select
    count( mime_type )
  from
    cr_content_mime_type_map
  where
    mime_type like ('%text/%')
  and
    content_type = :content_type

      } {} {} {} c:/web/openacs-4/packages/cms/www/modules/types/content-method.xql}
dbqd.cms.www.modules.types.content-method.get_unregistered_methods {dbqd.cms.www.modules.types.content-method.get_unregistered_methods {
      
  select
    label, m.content_method
  from
    cm_content_methods m
  where
    not exists ( 
      select 1
      from
        cm_content_type_method_map
      where
        content_method = m.content_method
      and
        content_type = :content_type )
  $text_entry_filter_sql
  order by 
    label

      } {} {} {} c:/web/openacs-4/packages/cms/www/modules/types/content-method.xql}
dbqd.cms.www.modules.types.content_symlink.delete-oracle.symlink_delete {dbqd.cms.www.modules.types.content_symlink.delete-oracle.symlink_delete {
      
         begin content_symlink.del(:id); end;
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/cms/www/modules/types/content_symlink/delete-oracle.xql}
dbqd.cms.www.modules.types.content_symlink.delete.symlink_delete {dbqd.cms.www.modules.types.content_symlink.delete.symlink_delete {


        select content_symlink__delete(:id)
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/cms/www/modules/types/content_symlink/delete-postgresql.xql}
dbqd.cms.www.modules.types.index-oracle.get_content_type {dbqd.cms.www.modules.types.index-oracle.get_content_type {
      
  select 
    decode (supertype, 'acs_object', '', supertype) as parent_type,   
    decode (object_type, 'content_revision', '', object_type) as object_type,
    pretty_name
  from 
    acs_object_types
  where
    object_type ^= 'acs_object'
  connect by 
    object_type = prior supertype
  start with 
    object_type = :content_type
  order by 
    rownum desc

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/cms/www/modules/types/index-oracle.xql}
dbqd.cms.www.modules.types.index-oracle.get_attr_types {dbqd.cms.www.modules.types.index-oracle.get_attr_types {
      
  select 
    attr.attribute_id, attr.attribute_name, attr.object_type,
    attr.pretty_name as attribute_name_pretty,
    datatype, types.pretty_name as pretty_name,
    nvl(description_key,'&nbsp;') as description_key, 
    description, widget
  from 
    acs_attributes attr, acs_attribute_descriptions d,
    cm_attribute_widgets w,
    ( select 
        object_type, pretty_name
      from 
        acs_object_types
      where 
        object_type ^= 'acs_object'
      connect by 
        prior supertype = object_type
      start with 
        object_type = :content_type
    ) types        
  where 
    attr.object_type = types.object_type
  and
    attr.attribute_id = w.attribute_id(+)
  and 
    attr.attribute_name = d.attribute_name(+)
  order by 
    types.object_type, sort_order, attr.attribute_name

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/cms/www/modules/types/index-oracle.xql}
dbqd.cms.www.modules.types.index-oracle.get_type_templates {dbqd.cms.www.modules.types.index-oracle.get_type_templates {
      
  select 
    template_id, ttmap.content_type, use_context, is_default, name, 
    content_item.get_path(
      template_id,:root_id) as path,
    (select pretty_name 
       from acs_object_types 
       where object_type = :content_type) pretty_name
  from 
    cr_type_template_map ttmap, cr_items i 
  where 
    i.item_id = ttmap.template_id
  and 
    ttmap.content_type = :content_type
  order by 
    upper(name)

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/cms/www/modules/types/index-oracle.xql}
dbqd.cms.www.modules.types.index.get_content_type {dbqd.cms.www.modules.types.index.get_content_type {

  select 
    case when ot2.supertype = 'acs_object' then '' else ot2.supertype end as parent_type,   
    case when ot2.object_type = 'content_revision' then '' else ot2.object_type end as object_type,
    ot2.pretty_name
  from 
    (select * from acs_object_types where object_type = :content_type) ot1,
    acs_object_types ot2
  where
    ot2.object_type != 'acs_object'
  and 
    ot1.tree_sortkey between ot2.tree_sortkey and tree_right(ot2.tree_sortkey)
  order by ot2.tree_sortkey asc

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/cms/www/modules/types/index-postgresql.xql}
dbqd.cms.www.modules.types.index.get_attr_types {dbqd.cms.www.modules.types.index.get_attr_types {

  select 
    attr.attribute_id, attr.attribute_name, attr.object_type,
    attr.pretty_name as attribute_name_pretty,
    datatype, types.pretty_name as pretty_name,
    coalesce(description_key,'&nbsp;') as description_key, 
    description, widget
  from 
    acs_attributes attr left outer join cm_attribute_widgets w using (attribute_id)
    left outer join acs_attribute_descriptions d using (attribute_name),
    ( select 
        o2.object_type, o2.pretty_name
      from 
        (select * from acs_object_types where object_type = :content_type)  o1,
        acs_object_types o2
      where 
        o2.object_type != 'acs_object'
      and 
        o1.tree_sortkey between o2.tree_sortkey and tree_right(o2.tree_sortkey)
    ) types        
  where 
    attr.object_type = types.object_type
  order by 
    types.object_type, sort_order, attr.attribute_name

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/cms/www/modules/types/index-postgresql.xql}
dbqd.cms.www.modules.types.index.get_type_templates {dbqd.cms.www.modules.types.index.get_type_templates {
      
  select 
    template_id, ttmap.content_type, use_context, is_default, name, 
    content_item__get_path(
      template_id,:root_id) as path,
    (select pretty_name 
       from acs_object_types 
       where object_type = :content_type) as pretty_name
  from 
    cr_type_template_map ttmap, cr_items i 
  where 
    i.item_id = ttmap.template_id
  and 
    ttmap.content_type = :content_type
  order by 
    upper(name)

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/cms/www/modules/types/index-postgresql.xql}
dbqd.cms.www.modules.types.index.get_module_id {dbqd.cms.www.modules.types.index.get_module_id {
      
  select module_id from cm_modules where key = 'types'

      } {} {} {} c:/web/openacs-4/packages/cms/www/modules/types/index.xql}
dbqd.cms.www.modules.types.index.get_object_type {dbqd.cms.www.modules.types.index.get_object_type {
      
  select 
    pretty_name
  from
    acs_object_types
  where
    object_type = :content_type

      } {} {} {} c:/web/openacs-4/packages/cms/www/modules/types/index.xql}
dbqd.cms.www.modules.types.mime-types-oracle.register_mime_type {dbqd.cms.www.modules.types.mime-types-oracle.register_mime_type {
      
      begin
        content_type.register_mime_type (
            content_type => :content_type,
            mime_type    => :mime_type
        );
      end;
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/cms/www/modules/types/mime-types-oracle.xql}
dbqd.cms.www.modules.types.mime-types.register_mime_type {dbqd.cms.www.modules.types.mime-types.register_mime_type {

        select content_type__register_mime_type (
            :content_type,
            :mime_type
        );
      
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/cms/www/modules/types/mime-types-postgresql.xql}
dbqd.cms.www.modules.types.mime-types.get_module_id {dbqd.cms.www.modules.types.mime-types.get_module_id {
      
  select module_id from cm_modules where key = 'types'

      } {} {} {} c:/web/openacs-4/packages/cms/www/modules/types/mime-types.xql}
dbqd.cms.www.modules.types.mime-types.get_name {dbqd.cms.www.modules.types.mime-types.get_name {
      
  select
    pretty_name
  from
    acs_object_types
  where
    object_type = :content_type

      } {} {} {} c:/web/openacs-4/packages/cms/www/modules/types/mime-types.xql}
dbqd.cms.www.modules.types.mime-types.get_unreg_mime_types {dbqd.cms.www.modules.types.mime-types.get_unreg_mime_types {
      
  select
    label, mime_type
  from 
    cr_mime_types
  where
    not exists ( select 1
                 from 
                   cr_content_mime_type_map
                 where
                   mime_type = cr_mime_types.mime_type
                 and
                   content_type = :content_type )
  order by
    label

      } {} {} {} c:/web/openacs-4/packages/cms/www/modules/types/mime-types.xql}
dbqd.cms.www.modules.types.mime-types.get_reg_mime_types {dbqd.cms.www.modules.types.mime-types.get_reg_mime_types {
      
  select 
    label, m.mime_type
  from
    cr_mime_types m, cr_content_mime_type_map map
  where
    m.mime_type = map.mime_type
  and
    map.content_type = :content_type
  order by
    label

      } {} {} {} c:/web/openacs-4/packages/cms/www/modules/types/mime-types.xql}
dbqd.cms.www.modules.types.register-templates-oracle.register_templates {dbqd.cms.www.modules.types.register-templates-oracle.register_templates {
      begin
                   content_type.register_template(
                       content_type => :content_type,
	               template_id  => :template_id,
	               use_context  => :context );
                 end;
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/cms/www/modules/types/register-templates-oracle.xql}
dbqd.cms.www.modules.types.register-templates-oracle.get_content_templates {dbqd.cms.www.modules.types.register-templates-oracle.get_content_templates {

  select 
    template_id, 
    content_item.get_path( template_id, content_template.get_root_folder ) 
      as name
  from 
    cr_templates t, cr_items i
  where 
    t.template_id = i.item_id
  and not exists (
    select 1 
    from 
      cr_type_template_map
    where 
      template_id = t.template_id
    and 
      content_type = :content_type )
  and 
    $marked_templates_sql

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/cms/www/modules/types/register-templates-oracle.xql}
dbqd.cms.www.modules.types.register-templates.register_templates {dbqd.cms.www.modules.types.register-templates.register_templates {

        select content_type__register_template(
                       :content_type,
	               :template_id,
	               :context,
                       'f');
                
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/cms/www/modules/types/register-templates-postgresql.xql}
dbqd.cms.www.modules.types.register-templates.get_content_templates {dbqd.cms.www.modules.types.register-templates.get_content_templates {

  select 
    template_id, 
    content_item__get_path( template_id, content_template__get_root_folder() ) 
      as name
  from 
    cr_templates t, cr_items i
  where 
    t.template_id = i.item_id
  and not exists (
    select 1 
    from 
      cr_type_template_map
    where 
      template_id = t.template_id
    and 
      content_type = :content_type )
  and 
    $marked_templates_sql

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/cms/www/modules/types/register-templates-postgresql.xql}
dbqd.cms.www.modules.types.register-templates.get_pretty_type {dbqd.cms.www.modules.types.register-templates.get_pretty_type {
      
  select 
    pretty_name
  from
    acs_object_types
  where
    object_type = :content_type  

      } {} {} {} c:/web/openacs-4/packages/cms/www/modules/types/register-templates.xql}
dbqd.cms.www.modules.types.register-templates.get_use_contexts {dbqd.cms.www.modules.types.register-templates.get_use_contexts {

         select use_context, use_context 
           from cr_template_use_contexts
       order by 1     

      } {} {} {} c:/web/openacs-4/packages/cms/www/modules/types/register-templates.xql}
dbqd.cms.www.modules.types.relation-register-oracle.get_target_types {dbqd.cms.www.modules.types.relation-register-oracle.get_target_types {
      
  select
    lpad(' ', level, '-') || pretty_name, object_type
  from
    acs_object_types
  connect by
    prior object_type = supertype
  start with
    object_type = 'content_revision'

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/cms/www/modules/types/relation-register-oracle.xql}
dbqd.cms.www.modules.types.relation-register-oracle.register_rel_types {dbqd.cms.www.modules.types.relation-register-oracle.register_rel_types {

	  begin
          content_type.${register_method} (
	      $content_key => :content_type,
	      $target_key  => :target_type,
	      relation_tag => :relation_tag,
              min_n        => :min_n,
              max_n        => :max_n
          );
          end;

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/cms/www/modules/types/relation-register-oracle.xql}
dbqd.cms.www.modules.types.relation-register.get_target_types {dbqd.cms.www.modules.types.relation-register.get_target_types {


  select
    lpad(' ', tree_level(ot1.tree_sortkey), '-') || ot1.pretty_name, 
        ot1.object_type
  from
    acs_object_types ot1, acs_object_types ot2
  where ot2.object_type = 'content_revision'
    and ot1.tree_sortkey between ot2.tree_sortkey and tree_right(ot2.tree_sortkey)

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/cms/www/modules/types/relation-register-postgresql.xql}
dbqd.cms.www.modules.types.relation-register.register_rel_types {dbqd.cms.www.modules.types.relation-register.register_rel_types {

	  
          select content_type__${register_method} (
	      :content_type,
	      :target_type,
	      :relation_tag,
              :min_n,
              :max_n
          );
          

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/cms/www/modules/types/relation-register-postgresql.xql}
dbqd.cms.www.modules.types.relation-register.get_module_id {dbqd.cms.www.modules.types.relation-register.get_module_id {
      
  select module_id from cm_modules where key = 'types'

      } {} {} {} c:/web/openacs-4/packages/cms/www/modules/types/relation-register.xql}
dbqd.cms.www.modules.types.relation-register.get_pretty_name {dbqd.cms.www.modules.types.relation-register.get_pretty_name {
      
  select
    pretty_name
  from
    acs_object_types
  where
    object_type = :content_type

      } {} {} {} c:/web/openacs-4/packages/cms/www/modules/types/relation-register.xql}
dbqd.cms.www.modules.types.relation-unregister-oracle.unregister {dbqd.cms.www.modules.types.relation-unregister-oracle.unregister {

	  begin
          content_type.${unregister_method} (
	      $content_key => :content_type,
	      $target_key  => :target_type,
	      relation_tag => :relation_tag
          );
          end;

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/cms/www/modules/types/relation-unregister-oracle.xql}
dbqd.cms.www.modules.types.relation-unregister.unregister {dbqd.cms.www.modules.types.relation-unregister.unregister {

	 
          select content_type__${unregister_method} (
	      :content_type,
	      :target_type,
	      :relation_tag
          );
         

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/cms/www/modules/types/relation-unregister-postgresql.xql}
dbqd.cms.www.modules.types.relation-unregister.get_module_id {dbqd.cms.www.modules.types.relation-unregister.get_module_id {
      
  select module_id from cm_modules where key = 'types'

      } {} {} {} c:/web/openacs-4/packages/cms/www/modules/types/relation-unregister.xql}
dbqd.cms.www.modules.types.relations.get_module_id {dbqd.cms.www.modules.types.relations.get_module_id {
      
  select module_id from cm_modules where key = 'types'

      } {} {} {} c:/web/openacs-4/packages/cms/www/modules/types/relations.xql}
dbqd.cms.www.modules.types.relations.get_rel_types {dbqd.cms.www.modules.types.relations.get_rel_types {
      
  select
    pretty_name, target_type, relation_tag, min_n, max_n
  from
    cr_type_relations r, acs_object_types o
  where
    o.object_type = r.target_type
  and
    r.content_type = :type
  order by
    pretty_name, relation_tag

      } {} {} {} c:/web/openacs-4/packages/cms/www/modules/types/relations.xql}
dbqd.cms.www.modules.types.relations.get_child_types {dbqd.cms.www.modules.types.relations.get_child_types {
      
  select
    pretty_name, child_type, relation_tag, min_n, max_n
  from
    cr_type_children c, acs_object_types o
  where
    c.child_type = o.object_type
  and
    c.parent_type = :type
  order by
    pretty_name, relation_tag

      } {} {} {} c:/web/openacs-4/packages/cms/www/modules/types/relations.xql}
dbqd.cms.www.modules.types.set-default-template-oracle.set_default_template {dbqd.cms.www.modules.types.set-default-template-oracle.set_default_template {
      
  begin
  content_type.set_default_template(
      template_id  => :template_id,
      content_type => :content_type,
      use_context  => :context );
  end;
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/cms/www/modules/types/set-default-template-oracle.xql}
dbqd.cms.www.modules.types.set-default-template.set_default_template {dbqd.cms.www.modules.types.set-default-template.set_default_template {

        select content_type__set_default_template(
                        :content_type,
                        :template_id,
                        :context );
  
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/cms/www/modules/types/set-default-template-postgresql.xql}
dbqd.cms.www.modules.types.unregister-mime-type-oracle.unregister_mime_type {dbqd.cms.www.modules.types.unregister-mime-type-oracle.unregister_mime_type {
      
  begin
    content_type.unregister_mime_type(
        content_type => :content_type,
        mime_type    => :mime_type
    );
  end;
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/cms/www/modules/types/unregister-mime-type-oracle.xql}
dbqd.cms.www.modules.types.unregister-mime-type.unregister_mime_type {dbqd.cms.www.modules.types.unregister-mime-type.unregister_mime_type {

        select content_type__unregister_mime_type(
                :content_type,
                :mime_type
        );
 
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/cms/www/modules/types/unregister-mime-type-postgresql.xql}
dbqd.cms.www.modules.types.unregister-mime-type.get_module_id {dbqd.cms.www.modules.types.unregister-mime-type.get_module_id {
      
  select module_id from cm_modules where key = 'types'

      } {} {} {} c:/web/openacs-4/packages/cms/www/modules/types/unregister-mime-type.xql}
dbqd.cms.www.modules.types.unregister-template-oracle.unregister_template {dbqd.cms.www.modules.types.unregister-template-oracle.unregister_template {
      
  begin
    content_type.unregister_template(
      template_id  => :template_id,
      content_type => :content_type,
      use_context  => :context );
  end;
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/cms/www/modules/types/unregister-template-oracle.xql}
dbqd.cms.www.modules.types.unregister-template.unregister_template {dbqd.cms.www.modules.types.unregister-template.unregister_template {


        select content_type__unregister_template(
                :content_type,
                :template_id,
                :context );

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/cms/www/modules/types/unregister-template-postgresql.xql}
dbqd.cms.www.modules.types.widget-register-1-oracle.register_widget {dbqd.cms.www.modules.types.widget-register-1-oracle.register_widget {
      
	  begin
	  cm_form_widget.register_attribute_widget(
              content_type   => :content_type,
              attribute_name => :attribute_name,
              widget         => :widget,
              is_required    => :is_required
          );
	  end;
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/cms/www/modules/types/widget-register-1-oracle.xql}
dbqd.cms.www.modules.types.widget-register-1-oracle.update_widgets {dbqd.cms.www.modules.types.widget-register-1-oracle.update_widgets {
      
	  update cm_attribute_widgets
            set is_required = case when is_required = 't' then 'f' else 't' end
            where attribute_id = :attribute_id
            and widget = :widget
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/cms/www/modules/types/widget-register-1-oracle.xql}
dbqd.cms.www.modules.types.widget-register-1.register_widget {dbqd.cms.www.modules.types.widget-register-1.register_widget {

        select cm_form_widget__register_attribute_widget(
              :content_type,
              :attribute_name,
              :widget,
              :is_required
          );
	 
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/cms/www/modules/types/widget-register-1-postgresql.xql}
dbqd.cms.www.modules.types.widget-register-1.update_widgets {dbqd.cms.www.modules.types.widget-register-1.update_widgets {
      
	  update cm_attribute_widgets
            set is_required = case when is_required = 't'::bool then 'f'::bool else 't'::bool end
            where attribute_id = :attribute_id
            and widget = :widget
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/cms/www/modules/types/widget-register-1-postgresql.xql}
dbqd.cms.www.modules.types.widget-register-1.get_form_widgets {dbqd.cms.www.modules.types.widget-register-1.get_form_widgets {
 select
    widget, widget
  from
    cm_form_widgets    
      } {} {} {} c:/web/openacs-4/packages/cms/www/modules/types/widget-register-1.xql}
dbqd.cms.www.modules.types.widget-register-1.check_registered {dbqd.cms.www.modules.types.widget-register-1.check_registered {
      
      select 1
      from
        cm_attribute_widgets
      where
        attribute_id = :attribute_id
      and
        widget = :widget
    
      } {} {} {} c:/web/openacs-4/packages/cms/www/modules/types/widget-register-1.xql}
dbqd.cms.www.modules.types.widget-register-1.get_reg_widget {dbqd.cms.www.modules.types.widget-register-1.get_reg_widget {
      select
        widget as registered_widget, is_required
      from
        cm_attribute_widgets
      where
        attribute_id = :attribute_id
      } {} {} {} c:/web/openacs-4/packages/cms/www/modules/types/widget-register-1.xql}
dbqd.cms.www.modules.types.widget-register-1.get_attr_info {dbqd.cms.www.modules.types.widget-register-1.get_attr_info {
      select
        a.pretty_name as attribute_name_pretty, 
        t.pretty_name as content_type_pretty,
        t.object_type as content_type,
        a.attribute_name
      from
        acs_attributes a, acs_object_types t
      where
        a.object_type = t.object_type
      and
        a.attribute_id = :attribute_id
      } {} {} {} c:/web/openacs-4/packages/cms/www/modules/types/widget-register-1.xql}
dbqd.cms.www.modules.types.widget-register-2-oracle.get_params {dbqd.cms.www.modules.types.widget-register-2-oracle.get_params {
      
  select
    f.param_id, param, 
    case when f.is_required = 't' then 't' else w.is_required end is_required, is_html, 
    nvl(w.value,f.default_value) default_value,
    nvl(w.param_source,'literal') param_source
  from
    cm_form_widget_params f, 
    ( select 
        is_required, param_id, param_source, value
      from 
        cm_attribute_widget_params awp, cm_attribute_widgets aw
      where 
        awp.attribute_id = :attribute_id
      and
        awp.attribute_id = aw.attribute_id
    ) w
  where
    widget = :widget
  and
    f.param_id = w.param_id (+)

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/cms/www/modules/types/widget-register-2-oracle.xql}
dbqd.cms.www.modules.types.widget-register-2.get_attr_info {dbqd.cms.www.modules.types.widget-register-2.get_attr_info {
      
  select
    a.pretty_name as attribute_name_pretty, 
    a.attribute_name,
    t.pretty_name as content_type_pretty,
    a.object_type as content_type
  from
    acs_attributes a, acs_object_types t
  where
    a.object_type = t.object_type
  and
    a.attribute_id = :attribute_id

      } {} {} {} c:/web/openacs-4/packages/cms/www/modules/types/widget-register-2.xql}
dbqd.cms.www.modules.types.widget-register-2.get_params {dbqd.cms.www.modules.types.widget-register-2.get_params {


  select
    f.param_id, param, 
    case when f.is_required = 't' then 't' else w.is_required end as is_required, is_html, 
    coalesce(w.value,f.default_value) as default_value,
    coalesce(w.param_source,'literal') as param_source
  from
    cm_form_widget_params f left outer join
    ( select 
        is_required, param_id, param_source, value
      from 
        cm_attribute_widget_params awp, cm_attribute_widgets aw
      where 
        awp.attribute_id = :attribute_id
      and
        awp.attribute_id = aw.attribute_id
    ) w using (param_id)
  where
    widget = :widget

      } {} {} {} c:/web/openacs-4/packages/cms/www/modules/types/widget-register-2.xql}
dbqd.cms.www.modules.types.widget-register-3.get_outstanding {dbqd.cms.www.modules.types.widget-register-3.get_outstanding {
      
      select
        distinct param
      from
        cm_form_widget_params f
      where
        is_required = 't'
      and
        widget = :widget
      and
        not exists (
          select 1
          from
            cm_attribute_widget_params
          where
            attribute_id = :attribute_id
          and
            param_id = f.param_id )
    
      } {} {} {} c:/web/openacs-4/packages/cms/www/modules/types/widget-register-3.xql}
dbqd.cms.www.modules.types.widget-register-3.get_name {dbqd.cms.www.modules.types.widget-register-3.get_name {
      
      select
        pretty_name, attribute_name, object_type
      from
        acs_attributes
      where
        attribute_id = :attribute_id
    
      } {} {} {} c:/web/openacs-4/packages/cms/www/modules/types/widget-register-3.xql}
dbqd.cms.www.modules.types.widget-register.get_module_id {dbqd.cms.www.modules.types.widget-register.get_module_id {
      
  select
    module_id
  from
    cm_modules
  where
    key = 'types'

      } {} {} {} c:/web/openacs-4/packages/cms/www/modules/types/widget-register.xql}
dbqd.cms.www.modules.types.widget-register.get_form_widgets {dbqd.cms.www.modules.types.widget-register.get_form_widgets {

  select
    widget, widget
  from
    cm_form_widgets

      } {} {} {} c:/web/openacs-4/packages/cms/www/modules/types/widget-register.xql}
dbqd.cms.www.modules.types.widget-register.get_attr_info {dbqd.cms.www.modules.types.widget-register.get_attr_info {

      select
        a.pretty_name as attribute_name_pretty, 
        t.pretty_name as content_type_pretty,
        t.object_type as content_type,
        a.attribute_name
      from
        acs_attributes a, acs_object_types t
      where
        a.object_type = t.object_type
      and
        a.attribute_id = :attribute_id

      } {} {} {} c:/web/openacs-4/packages/cms/www/modules/types/widget-register.xql}
dbqd.cms.www.modules.types.widget-register.get_reg_widget {dbqd.cms.www.modules.types.widget-register.get_reg_widget {

      select
        widget as registered_widget, is_required
      from
        cm_attribute_widgets
      where
        attribute_id = :attribute_id

      } {} {} {} c:/web/openacs-4/packages/cms/www/modules/types/widget-register.xql}
dbqd.cms.www.modules.types.widget-unregister-oracle.unregister {dbqd.cms.www.modules.types.widget-unregister-oracle.unregister {
      
  begin
  cm_form_widget.unregister_attribute_widget (
      content_type   => :content_type,
      attribute_name => :attribute_name
  );
  end;

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/cms/www/modules/types/widget-unregister-oracle.xql}
dbqd.cms.www.modules.types.widget-unregister.unregister {dbqd.cms.www.modules.types.widget-unregister.unregister {

        select cm_form_widget__unregister_attribute_widget (
                        :content_type,
                        :attribute_name
        );
 
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/cms/www/modules/types/widget-unregister-postgresql.xql}
dbqd.cms.www.modules.types.widget-unregister.get_module_id {dbqd.cms.www.modules.types.widget-unregister.get_module_id {
      
  select
    module_id
  from
    cm_modules
  where
    key = 'types'

      } {} {} {} c:/web/openacs-4/packages/cms/www/modules/types/widget-unregister.xql}
dbqd.cms.www.modules.types.widget-unregister.get_attr_info {dbqd.cms.www.modules.types.widget-unregister.get_attr_info {
      
  select
    attribute_name, object_type as content_type
  from
    acs_attributes
  where
    attribute_id = :attribute_id

      } {} {} {} c:/web/openacs-4/packages/cms/www/modules/types/widget-unregister.xql}
dbqd.cms.www.modules.users.create-oracle.new_group {dbqd.cms.www.modules.users.create-oracle.new_group {
      begin :1 := acs_group.new(
    group_id => :group_id, 
    group_name => :group_name, 
    email => :email,
    url => :url,
    creation_user => :user_id, 
    creation_ip => :ip ); end;
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/cms/www/modules/users/create-oracle.xql}
dbqd.cms.www.modules.users.create-oracle.new_rel {dbqd.cms.www.modules.users.create-oracle.new_rel {
      begin :1 := composition_rel.new(
    object_id_one => :parent_id,
    object_id_two => :group_id,
    creation_user => :user_id, 
    creation_ip => :ip ); end;
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/cms/www/modules/users/create-oracle.xql}
dbqd.cms.www.modules.users.create-oracle.get_group_id {dbqd.cms.www.modules.users.create-oracle.get_group_id {
      
    select acs_object_id_seq.nextval from dual
  
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/cms/www/modules/users/create-oracle.xql}
dbqd.cms.www.modules.users.create.new_group {dbqd.cms.www.modules.users.create.new_group {


        select acs_group__new(
                        :group_id, 
                        'group',
                        now(),
                        :user_id, 
                        :ip,
                        :email,
                        :url,
                        :group_name, 
                        null,
                        null);

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/cms/www/modules/users/create-postgresql.xql}
dbqd.cms.www.modules.users.create.new_rel {dbqd.cms.www.modules.users.create.new_rel {

        select composition_rel__new(
                        null,
                        'composition_rel',
                        :parent_id,
                        :group_id,
                        :user_id, 
                        :ip )
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/cms/www/modules/users/create-postgresql.xql}
dbqd.cms.www.modules.users.create.get_group_id {dbqd.cms.www.modules.users.create.get_group_id {
      
    select acs_object_id_seq.nextval 
  
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/cms/www/modules/users/create-postgresql.xql}
dbqd.cms.www.modules.users.delete-oracle.delete_group {dbqd.cms.www.modules.users.delete-oracle.delete_group {
      begin acs_group.del(:id); end;
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/cms/www/modules/users/delete-oracle.xql}
dbqd.cms.www.modules.users.delete-oracle.get_status {dbqd.cms.www.modules.users.delete-oracle.get_status {
      
  select NVL((select 'f' from dual where exists (
            select 1 from acs_rels 
              where object_id_one = :id 
              and rel_type in ('composition_rel', 'membership_rel'))),
          't') as is_empty from dual
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/cms/www/modules/users/delete-oracle.xql}
dbqd.cms.www.modules.users.delete.delete_group {dbqd.cms.www.modules.users.delete.delete_group {

        select acs_group__delete(:id)
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/cms/www/modules/users/delete-postgresql.xql}
dbqd.cms.www.modules.users.delete.get_status {dbqd.cms.www.modules.users.delete.get_status {
      
  select coalesce((select 'f'  where exists (
            select 1 from acs_rels 
              where object_id_one = :id 
              and rel_type in ('composition_rel', 'membership_rel'))),
          't') as is_empty 
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/cms/www/modules/users/delete-postgresql.xql}
dbqd.cms.www.modules.users.edit-user.get_user_info {dbqd.cms.www.modules.users.edit-user.get_user_info {

    select
      p.first_names, p.last_name, 
      pp.email, pp.url, 
      u.screen_name,
      to_char(u.no_alerts_until, 'YYYY/MM/DD') as no_alerts_until
    from
      persons p, parties pp, users u
    where
      p.person_id = :id
    and
      pp.party_id = :id
    and
      u.user_id = :id

      } {} {} {} c:/web/openacs-4/packages/cms/www/modules/users/edit-user.xql}
dbqd.cms.www.modules.users.edit-user.edit_user_1 {dbqd.cms.www.modules.users.edit-user.edit_user_1 {
      
    update users $users_update where user_id = :item_id
  
      } {} {} {} c:/web/openacs-4/packages/cms/www/modules/users/edit-user.xql}
dbqd.cms.www.modules.users.edit-user.edit_user_2 {dbqd.cms.www.modules.users.edit-user.edit_user_2 {
      
    update persons set first_names=:first_names, last_name = :last_name 
      where person_id=:item_id
  
      } {} {} {} c:/web/openacs-4/packages/cms/www/modules/users/edit-user.xql}
dbqd.cms.www.modules.users.edit-user.edit_user_3 {dbqd.cms.www.modules.users.edit-user.edit_user_3 {
      
    update parties set email=:email, url=:url where party_id = :item_id
  
      } {} {} {} c:/web/openacs-4/packages/cms/www/modules/users/edit-user.xql}
dbqd.cms.www.modules.users.edit.edit_group_1 {dbqd.cms.www.modules.users.edit.edit_group_1 {
      
    update groups 
      set group_name = :group_name
      where group_id = :group_id
      } {} {} {} c:/web/openacs-4/packages/cms/www/modules/users/edit.xql}
dbqd.cms.www.modules.users.edit.edit_group_2 {dbqd.cms.www.modules.users.edit.edit_group_2 {
      
    update parties
      set email = :email, url = :url
      where party_id = :group_id
      } {} {} {} c:/web/openacs-4/packages/cms/www/modules/users/edit.xql}
dbqd.cms.www.modules.users.edit.get_group_info {dbqd.cms.www.modules.users.edit.get_group_info {

    select
      g.group_name, p.url, p.email
    from
      groups g, parties p
    where
      g.group_id = :id
    and
      p.party_id = :id

     } {} {} {} c:/web/openacs-4/packages/cms/www/modules/users/edit.xql}
dbqd.cms.www.modules.users.index-oracle.get_groups_1 {dbqd.cms.www.modules.users.index-oracle.get_groups_1 {

    select
      g.group_id, g.group_name,
      NVL(pg.email, '&nbsp;') as email,
      (select count(*) from group_member_map 
       where group_id = g.group_id) as user_count
    from 
      groups g, parties pg, acs_rels rg, composition_rels rc
    where
      g.group_id = pg.party_id
    and
      rg.object_id_one = :id
    and
      rg.object_id_two = g.group_id
    and
      rc.rel_id = rg.rel_id
    order by
      upper(g.group_name)

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/cms/www/modules/users/index-oracle.xql}
dbqd.cms.www.modules.users.index-oracle.get_users_1 {dbqd.cms.www.modules.users.index-oracle.get_users_1 {

    select
      u.user_id, ppu.first_names || ' ' || ppu.last_name as pretty_name,
      NVL(u.screen_name, '&nbsp;') as screen_name,
      pu.email, aru.member_state,
      aru.rel_id
    from
      users u, persons ppu, parties pu, 
      acs_rels ru, membership_rels aru
    where
      u.user_id = ppu.person_id
    and
      u.user_id = pu.party_id
    and
      ru.object_id_one = :id
    and
      ru.object_id_two = u.user_id
    and
      aru.rel_id = ru.rel_id
    and
      (aru.member_state <> 'deleted' or aru.member_state is null)
    order by
      upper(pretty_name)

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/cms/www/modules/users/index-oracle.xql}
dbqd.cms.www.modules.users.index-oracle.get_groups_2 {dbqd.cms.www.modules.users.index-oracle.get_groups_2 {

    select
      g.group_id, g.group_name,
      NVL(pg.email, '&nbsp;') as email, 
      (select count(*) from group_member_map 
       where group_id = g.group_id) as user_count
    from 
      groups g, parties pg
    where
      g.group_id = pg.party_id
    and
      not exists (
        select 1 from acs_rels ar, composition_rels cr
        where ar.rel_id = cr.rel_id
        and ar.object_id_two = g.group_id)
    order by
      g.group_name

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/cms/www/modules/users/index-oracle.xql}
dbqd.cms.www.modules.users.index-oracle.get_users_2 {dbqd.cms.www.modules.users.index-oracle.get_users_2 {

    select
      u.user_id, ppu.first_names || ' ' || ppu.last_name as pretty_name,
      NVL(u.screen_name, '&nbsp;') as screen_name,
      pu.email, '' as member_state,
      null as rel_id       
    from
      users u, persons ppu, parties pu
    where
      u.user_id = ppu.person_id
    and
      u.user_id = pu.party_id
    and
      not exists (
        select 1 from acs_rels ar, membership_rels mr
        where ar.rel_id = mr.rel_id
        and ar.object_id_two = u.user_id)
    order by
      pretty_name

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/cms/www/modules/users/index-oracle.xql}
dbqd.cms.www.modules.users.index-oracle.check_admin {dbqd.cms.www.modules.users.index-oracle.check_admin {
      
  select 
    cms_permission.permission_p (:module_id, :user_id, 'cm_admin')
  from
    dual
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/cms/www/modules/users/index-oracle.xql}
dbqd.cms.www.modules.users.index-oracle.check_perm {dbqd.cms.www.modules.users.index-oracle.check_perm {
      
  select 
    cms_permission.permission_p (:module_id, :user_id, 'cm_perm')
  from
    dual
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/cms/www/modules/users/index-oracle.xql}
dbqd.cms.www.modules.users.index-oracle.get_info1 {dbqd.cms.www.modules.users.index-oracle.get_info1 {
      
    select 
      g.group_id, g.group_name, p.email, p.url,
      NVL((select 'f' from dual where exists (
            select 1 from acs_rels 
              where object_id_one = :id 
              and rel_type in ('composition_rel', 'membership_rel'))),
          't') as is_empty 
    from 
      groups g, parties p
    where
      g.group_id = :id
    and
      p.party_id = :id
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/cms/www/modules/users/index-oracle.xql}
dbqd.cms.www.modules.users.index.get_groups_1 {dbqd.cms.www.modules.users.index.get_groups_1 {

    select
      g.group_id, g.group_name,
      coalesce(pg.email, '&nbsp;') as email,
      (select count(*) from group_member_map 
       where group_id = g.group_id) as user_count
    from 
      groups g, parties pg, acs_rels rg, composition_rels rc
    where
      g.group_id = pg.party_id
    and
      rg.object_id_one = :id
    and
      rg.object_id_two = g.group_id
    and
      rc.rel_id = rg.rel_id
    order by
      upper(g.group_name)

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/cms/www/modules/users/index-postgresql.xql}
dbqd.cms.www.modules.users.index.get_users_1 {dbqd.cms.www.modules.users.index.get_users_1 {

    select
      u.user_id, ppu.first_names || ' ' || ppu.last_name as pretty_name,
      coalesce(u.screen_name, '&nbsp;') as screen_name,
      pu.email, aru.member_state,
      aru.rel_id
    from
      users u, persons ppu, parties pu, 
      acs_rels ru, membership_rels aru
    where
      u.user_id = ppu.person_id
    and
      u.user_id = pu.party_id
    and
      ru.object_id_one = :id
    and
      ru.object_id_two = u.user_id
    and
      aru.rel_id = ru.rel_id
    and
      (aru.member_state <> 'deleted' or aru.member_state is null)
    order by
      pretty_name

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/cms/www/modules/users/index-postgresql.xql}
dbqd.cms.www.modules.users.index.get_groups_2 {dbqd.cms.www.modules.users.index.get_groups_2 {

    select
      g.group_id, g.group_name,
      coalesce(pg.email, '&nbsp;') as email, 
      (select count(*) from group_member_map 
       where group_id = g.group_id) as user_count
    from 
      groups g, parties pg
    where
      g.group_id = pg.party_id
    and
      not exists (
        select 1 from acs_rels ar, composition_rels cr
        where ar.rel_id = cr.rel_id
        and ar.object_id_two = g.group_id)
    order by
      g.group_name

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/cms/www/modules/users/index-postgresql.xql}
dbqd.cms.www.modules.users.index.get_users_2 {dbqd.cms.www.modules.users.index.get_users_2 {

    select
      u.user_id, ppu.first_names || ' ' || ppu.last_name as pretty_name,
      coalesce(u.screen_name, '&nbsp;') as screen_name,
      pu.email, '' as member_state,
      null as rel_id       
    from
      users u, persons ppu, parties pu
    where
      u.user_id = ppu.person_id
    and
      u.user_id = pu.party_id
    and
      not exists (
        select 1 from acs_rels ar, membership_rels mr
        where ar.rel_id = mr.rel_id
        and ar.object_id_two = u.user_id)
    order by
      pretty_name 

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/cms/www/modules/users/index-postgresql.xql}
dbqd.cms.www.modules.users.index.check_admin {dbqd.cms.www.modules.users.index.check_admin {
      
  select 
    cms_permission__permission_p (:module_id, :user_id, 'cm_admin')
  from
    dual
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/cms/www/modules/users/index-postgresql.xql}
dbqd.cms.www.modules.users.index.check_perm {dbqd.cms.www.modules.users.index.check_perm {
      
  select 
    cms_permission__permission_p (:module_id, :user_id, 'cm_perm')
  from
    dual
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/cms/www/modules/users/index-postgresql.xql}
dbqd.cms.www.modules.users.index.get_info1 {dbqd.cms.www.modules.users.index.get_info1 {
      
    select 
      g.group_id, g.group_name, p.email, p.url,
      coalesce((select 'f'::text  where exists (
            select 1 from acs_rels 
              where object_id_one = :id 
              and rel_type in ('composition_rel', 'membership_rel'))),
          't') as is_empty 
    from 
      groups g, parties p
    where
      g.group_id = :id
    and
      p.party_id = :id
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/cms/www/modules/users/index-postgresql.xql}
dbqd.cms.www.modules.users.index.get_groups_1 {dbqd.cms.www.modules.users.index.get_groups_1 {

    select
      g.group_id, g.group_name,
      coalesce(pg.email, '&nbsp;') as email,
      (select count(*) from group_member_map 
       where group_id = g.group_id) as user_count
    from 
      groups g, parties pg, acs_rels rg, composition_rels rc
    where
      g.group_id = pg.party_id
    and
      rg.object_id_one = :id
    and
      rg.object_id_two = g.group_id
    and
      rc.rel_id = rg.rel_id
    order by
      upper(g.group_name)

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/cms/www/modules/users/index-postgresql.xql}
dbqd.cms.www.modules.users.index.get_users_1 {dbqd.cms.www.modules.users.index.get_users_1 {

    select
      u.user_id, ppu.first_names || ' ' || ppu.last_name as pretty_name,
      coalesce(u.screen_name, '&nbsp;') as screen_name,
      pu.email, aru.member_state,
      aru.rel_id
    from
      users u, persons ppu, parties pu, 
      acs_rels ru, membership_rels aru
    where
      u.user_id = ppu.person_id
    and
      u.user_id = pu.party_id
    and
      ru.object_id_one = :id
    and
      ru.object_id_two = u.user_id
    and
      aru.rel_id = ru.rel_id
    and
      (aru.member_state <> 'deleted' or aru.member_state is null)
    order by
      pretty_name

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/cms/www/modules/users/index-postgresql.xql}
dbqd.cms.www.modules.users.index.get_groups_2 {dbqd.cms.www.modules.users.index.get_groups_2 {

    select
      g.group_id, g.group_name,
      coalesce(pg.email, '&nbsp;') as email, 
      (select count(*) from group_member_map 
       where group_id = g.group_id) as user_count
    from 
      groups g, parties pg
    where
      g.group_id = pg.party_id
    and
      not exists (
        select 1 from acs_rels ar, composition_rels cr
        where ar.rel_id = cr.rel_id
        and ar.object_id_two = g.group_id)
    order by
      g.group_name

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/cms/www/modules/users/index-postgresql.xql}
dbqd.cms.www.modules.users.index.get_users_2 {dbqd.cms.www.modules.users.index.get_users_2 {

    select
      u.user_id, ppu.first_names || ' ' || ppu.last_name as pretty_name,
      coalesce(u.screen_name, '&nbsp;') as screen_name,
      pu.email, '' as member_state,
      null as rel_id       
    from
      users u, persons ppu, parties pu
    where
      u.user_id = ppu.person_id
    and
      u.user_id = pu.party_id
    and
      not exists (
        select 1 from acs_rels ar, membership_rels mr
        where ar.rel_id = mr.rel_id
        and ar.object_id_two = u.user_id)
    order by
      pretty_name 

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/cms/www/modules/users/index-postgresql.xql}
dbqd.cms.www.modules.users.index.get_info2 {dbqd.cms.www.modules.users.index.get_info2 {
      
    select
      party_id as group_id, 'All Users' as group_name, 
      email, url, 'f' as is_empty
    from
      parties
    where
      party_id = -1
  
      } {} {} {} c:/web/openacs-4/packages/cms/www/modules/users/index.xql}
dbqd.cms.www.modules.users.make-admin-oracle.grant_permission {dbqd.cms.www.modules.users.make-admin-oracle.grant_permission {
      
  declare
    cursor c_module_cur is
      select module_id from cm_modules;
    v_module_id cm_modules.module_id%TYPE;
  begin
    open c_module_cur;
    loop
      fetch c_module_cur into v_module_id;
      exit when c_module_cur%NOTFOUND;
      cms_permission.grant_permission (
        v_module_id, :user_id, 'cm_admin', :target_user_id, 't'
      );
    end loop;
    close c_module_cur;

    cms_permission.grant_permission (
      content_item.get_root_folder, :user_id, 'cm_admin', :target_user_id, 't'
    );

    cms_permission.grant_permission (
      content_template.get_root_folder, :user_id, 'cm_admin', :target_user_id, 't'
    );
  end;
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/cms/www/modules/users/make-admin-oracle.xql}
dbqd.cms.www.modules.users.make-admin.grant_permission {dbqd.cms.www.modules.users.make-admin.grant_permission {

  declare
    c_module_cur         record;
  begin
    for c_module_cur in select module_id from cm_modules
    loop
      PERFORM cms_permission__grant_permission (
        c_module_cur.module_id, :user_id, 'cm_admin', :target_user_id, 't'
      );
    end loop;

    PERFORM cms_permission__grant_permission (
      content_item__get_root_folder(null), :user_id, 'cm_admin', :target_user_id, 't'
    );

    PERFORM cms_permission__grant_permission (
      content_template__get_root_folder(), :user_id, 'cm_admin', :target_user_id, 't'
    );

    return null;
  end;
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/cms/www/modules/users/make-admin-postgresql.xql}
dbqd.cms.www.modules.users.one-user-oracle.get_info {dbqd.cms.www.modules.users.one-user-oracle.get_info {
      
  select
    p.first_names, p.last_name, 
    pp.email, pp.url, 
    u.screen_name,
    to_char(u.last_visit, 'YYYY/MM/DD HH24:MI') as last_visit,
    to_char(u.no_alerts_until, 'YYYY/MM/DD') as no_alerts_until
  from
    persons p, parties pp, users u
  where
    p.person_id = :id
  and
    pp.party_id = :id
  and
    u.user_id = :id

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/cms/www/modules/users/one-user-oracle.xql}
dbqd.cms.www.modules.users.one-user.get_info {dbqd.cms.www.modules.users.one-user.get_info {
      
  select
    p.first_names, p.last_name, 
    pp.email, pp.url, 
    u.screen_name,
    to_char(u.last_visit, 'YYYY/MM/DD HH24:MI') as last_visit,
    to_char(u.no_alerts_until, 'YYYY/MM/DD') as no_alerts_until
  from
    persons p, parties pp, users u
  where
    p.person_id = :id
  and
    pp.party_id = :id
  and
    u.user_id = :id

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/cms/www/modules/users/one-user-postgresql.xql}
dbqd.cms.www.modules.users.one-user.get_groups {dbqd.cms.www.modules.users.one-user.get_groups {
      
  select 
    g.group_name, g.group_id
  from
    groups g, group_member_map m
  where
    m.group_id = g.group_id
  and
    m.member_id = :id

      } {} {} {} c:/web/openacs-4/packages/cms/www/modules/users/one-user.xql}
dbqd.cms.www.modules.users.user-assoc-oracle.user_assoc_root {dbqd.cms.www.modules.users.user-assoc-oracle.user_assoc_root {
      
        declare
          v_id membership_rels.rel_id%TYPE;
          cursor c_rel_cur is
            select 
              m.rel_id
            from 
              acs_rels r, membership_rels m
            where 
              r.object_id_two=$item_id
            and 
              m.rel_id = r.rel_id;
        begin 
          open c_rel_cur;
          loop
            fetch c_rel_cur into v_id;
            exit when c_rel_cur%NOTFOUND;
            membership_rel.del(v_id);
          end loop;
        end;
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/cms/www/modules/users/user-assoc-oracle.xql}
dbqd.cms.www.modules.users.user-assoc-oracle.user_assoc_root2 {dbqd.cms.www.modules.users.user-assoc-oracle.user_assoc_root2 {
      
        declare
          v_group_id groups.group_id%TYPE;
          v_user_id users.user_id%TYPE;
        begin 
          select g.group_id, u.user_id into v_group_id, v_user_id
            from groups g, users u
            where g.group_id = :id and u.user_id = :item_id;

          :1 := membership_rel.new(
          object_id_one => :id, object_id_two => :item_id,
          creation_user => :user_id, creation_ip => :ip); 

          exception when no_data_found then null;
        end;
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/cms/www/modules/users/user-assoc-oracle.xql}
dbqd.cms.www.modules.users.user-assoc.user_assoc_root {dbqd.cms.www.modules.users.user-assoc.user_assoc_root {

        declare
          c_rel_cur     record;
        begin 
          for c_rel_cur in 
            select 
              m.rel_id
            from 
              acs_rels r, membership_rels m
            where 
              r.object_id_two = $item_id
            and 
              m.rel_id = r.rel_id
          loop
            PERFORM membership_rel__delete(c_rel_cur.rel_id);
          end loop;

          return null;
        end;
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/cms/www/modules/users/user-assoc-postgresql.xql}
dbqd.cms.www.modules.users.user-assoc.user_assoc_root2 {dbqd.cms.www.modules.users.user-assoc.user_assoc_root2 {

        declare
          v_group_id    groups.group_id%TYPE;
          v_user_id     users.user_id%TYPE;
        begin 
          select g.group_id, u.user_id into v_group_id, v_user_id
            from groups g, users u
            where g.group_id = :id and u.user_id = :item_id;

          if not found then 
                return null;
          else 

                return membership_rel__new(
                        null,
                        'membership_rel',
                        :id, 
                        :item_id,
                        'approved',
                        :user_id, 
                        :ip); 
          end if;

          return null;
        end;
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/cms/www/modules/users/user-assoc-postgresql.xql}
dbqd.cms.www.modules.users.user-search-oracle.get_who {dbqd.cms.www.modules.users.user-search-oracle.get_who {
      select acs_object.name(:group_id) from dual
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/cms/www/modules/users/user-search-oracle.xql}
dbqd.cms.www.modules.users.user-search.get_who {dbqd.cms.www.modules.users.user-search.get_who {
      select acs_object__name(:group_id) 
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/cms/www/modules/users/user-search-postgresql.xql}
dbqd.cms.www.modules.users.user-search.get_results {dbqd.cms.www.modules.users.user-search.get_results {

    select 
      distinct u.user_id, u.screen_name,
      p.first_names || ' ' || p.last_name as name,
      pp.email
    from
      users u, persons p, parties pp $extra_table
    where 
      ($clauses)
    and
      p.person_id = u.user_id
    and
      pp.party_id = u.user_id
      $where_clause

      } {} {} {} c:/web/openacs-4/packages/cms/www/modules/users/user-search.xql}
dbqd.cms.www.modules.workflow.case-create-oracle.new_case {dbqd.cms.www.modules.workflow.case-create-oracle.new_case {
      begin :1 := workflow_case.new(
	    workflow_key  => 'publishing_wf', 
	    context_key   => NULL,
	    object_id     => :item_id,
	    creation_user => :user_id, 
	    creation_ip   => :creation_ip,
	    case_id       => :case_id
        ); 
        end;
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/cms/www/modules/workflow/case-create-oracle.xql}
dbqd.cms.www.modules.workflow.case-create-oracle.add_assignment {dbqd.cms.www.modules.workflow.case-create-oracle.add_assignment {
      
		  begin
		  workflow_case.add_manual_assignment(
		      case_id        => :case_id,
		      role_key 	     => 'authoring',
		      party_id       => :value
		  );
		  end;
		
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/cms/www/modules/workflow/case-create-oracle.xql}
dbqd.cms.www.modules.workflow.case-create-oracle.add_new_assignment {dbqd.cms.www.modules.workflow.case-create-oracle.add_new_assignment {
      
		      begin
	    	      workflow_case.add_manual_assignment(
		          case_id         => :case_id,
	                  role_key        => :transition,
	                  party_id        => :new_value
		      );
		      end;
		    
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/cms/www/modules/workflow/case-create-oracle.xql}
dbqd.cms.www.modules.workflow.case-create-oracle.start_case {dbqd.cms.www.modules.workflow.case-create-oracle.start_case {
      
      begin
      workflow_case.start_case(
          case_id       => :case_id,
          creation_user => :user_id,
          creation_ip   => :creation_ip,
          msg           => :msg
      );
      end;
    
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/cms/www/modules/workflow/case-create-oracle.xql}
dbqd.cms.www.modules.workflow.case-create-oracle.get_users {dbqd.cms.www.modules.workflow.case-create-oracle.get_users {
      
  select 
    person.name(user_id) name, user_id 
  from 
    users 
  where 
    user_id > 0 
  order by 
    name

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/cms/www/modules/workflow/case-create-oracle.xql}
dbqd.cms.www.modules.workflow.case-create-oracle.get_case_id {dbqd.cms.www.modules.workflow.case-create-oracle.get_case_id {
      
          select acs_object_id_seq.nextval from dual
	
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/cms/www/modules/workflow/case-create-oracle.xql}
dbqd.cms.www.modules.workflow.case-create.new_case {dbqd.cms.www.modules.workflow.case-create.new_case {

        select  workflow_case__new(
	    :case_id,
	    'publishing_wf', 
	    NULL,
	    :item_id,
            now(),
	    :user_id, 
	    :creation_ip
        ); 
       
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/cms/www/modules/workflow/case-create-postgresql.xql}
dbqd.cms.www.modules.workflow.case-create.add_assignment {dbqd.cms.www.modules.workflow.case-create.add_assignment {

        select workflow_case__add_manual_assignment(
		      :case_id,
		      'authoring',
		      :value
		  );
		 
		
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/cms/www/modules/workflow/case-create-postgresql.xql}
dbqd.cms.www.modules.workflow.case-create.add_new_assignment {dbqd.cms.www.modules.workflow.case-create.add_new_assignment {

        select  workflow_case__add_manual_assignment(
		          :case_id,
	                  :transition,
	                  :new_value
		      );
		   
		    
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/cms/www/modules/workflow/case-create-postgresql.xql}
dbqd.cms.www.modules.workflow.case-create.start_case {dbqd.cms.www.modules.workflow.case-create.start_case {

        select workflow_case__start_case(
          :case_id,
          :user_id,
          :creation_ip,
          :msg
      );
     
    
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/cms/www/modules/workflow/case-create-postgresql.xql}
dbqd.cms.www.modules.workflow.case-create.get_users {dbqd.cms.www.modules.workflow.case-create.get_users {
      
  select 
    person__name(user_id) as name, user_id 
  from 
    users 
  where 
    user_id > 0 
  order by 
    name

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/cms/www/modules/workflow/case-create-postgresql.xql}
dbqd.cms.www.modules.workflow.case-create.get_case_id {dbqd.cms.www.modules.workflow.case-create.get_case_id {
      
          select acs_object_id_seq.nextval 
	
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/cms/www/modules/workflow/case-create-postgresql.xql}
dbqd.cms.www.modules.workflow.case-create.insert_deadlines {dbqd.cms.www.modules.workflow.case-create.insert_deadlines {
      
	      insert into wf_case_deadlines (
	        case_id, workflow_key, transition_key, deadline
	      ) values (
	        :case_id, 'publishing_wf', :transition, $dead_sql
	      )
      } {} {} {} c:/web/openacs-4/packages/cms/www/modules/workflow/case-create.xql}
dbqd.cms.www.modules.workflow.case-create.update_deadlines {dbqd.cms.www.modules.workflow.case-create.update_deadlines {
      
	      update 
	        wf_case_deadlines 
	      set
	        deadline = $new_dead_sql
	      where
	        workflow_key = 'publishing_wf' 
	      and 
	        transition_key = :transition
	      and 
	        case_id = :case_id
      } {} {} {} c:/web/openacs-4/packages/cms/www/modules/workflow/case-create.xql}
dbqd.cms.www.modules.workflow.case-create.get_name_key {dbqd.cms.www.modules.workflow.case-create.get_name_key {
  select 
    transition_name, transition_key 
  from 
    wf_transitions
  where 
    workflow_key = 'publishing_wf' 
  order by 
    sort_order      
      } {} {} {} c:/web/openacs-4/packages/cms/www/modules/workflow/case-create.xql}
dbqd.cms.www.modules.workflow.case-status-oracle.get_transinfo {dbqd.cms.www.modules.workflow.case-status-oracle.get_transinfo {
      select k.transition_key, k.task_id, t.transition_name,
             k.holding_user, 
             content_workflow.get_holding_user_name(k.task_id) hold_name
             from wf_tasks k, wf_transitions t
	     where k.case_id = :case_id 
             and k.state in ('enabled', 'started')
             and k.transition_key = t.transition_key
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/cms/www/modules/workflow/case-status-oracle.xql}
dbqd.cms.www.modules.workflow.case-status-oracle.get_deadline {dbqd.cms.www.modules.workflow.case-status-oracle.get_deadline {
      select to_char(deadline, 'DD MON') deadline 
		 from wf_case_deadlines 
		 where case_id = :case_id 
                 and transition_key = :transition_key
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/cms/www/modules/workflow/case-status-oracle.xql}
dbqd.cms.www.modules.workflow.case-status.get_transinfo {dbqd.cms.www.modules.workflow.case-status.get_transinfo {
      select k.transition_key, k.task_id, t.transition_name,
             k.holding_user, 
             content_workflow__get_holding_user_name(k.task_id) as hold_name
             from wf_tasks k, wf_transitions t
	     where k.case_id = :case_id 
             and k.state in ('enabled', 'started')
             and k.transition_key = t.transition_key
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/cms/www/modules/workflow/case-status-postgresql.xql}
dbqd.cms.www.modules.workflow.case-status.get_deadline {dbqd.cms.www.modules.workflow.case-status.get_deadline {
      select to_char(deadline, 'DD MON') as deadline 
		 from wf_case_deadlines 
		 where case_id = :case_id 
                 and transition_key = :transition_key
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/cms/www/modules/workflow/case-status-postgresql.xql}
dbqd.cms.www.modules.workflow.case-status.get_caseinfo {dbqd.cms.www.modules.workflow.case-status.get_caseinfo {
      select case_id, initcap(state) as state
           from wf_cases where object_id = :item_id
      } {} {} {} c:/web/openacs-4/packages/cms/www/modules/workflow/case-status.xql}
dbqd.cms.www.modules.workflow.case-status.get_status {dbqd.cms.www.modules.workflow.case-status.get_status {
      select case when count(*) = 0 then 'no' else 'yes' end
               from wf_case_assignments ca,
		    wf_transitions trans
               where case_id = :case_id 
	       and ca.role_key = trans.role_key
               and trans.transition_key = :transition_key 
               and party_id = :user_id
      } {} {} {} c:/web/openacs-4/packages/cms/www/modules/workflow/case-status.xql}
dbqd.cms.www.modules.workflow.index-oracle.get_stats {dbqd.cms.www.modules.workflow.index-oracle.get_stats {
      
  select
    count( decode(content_workflow.is_finished(c.case_id, transition_key),
             'f',1,null)
    ) as total_count,
    count( decode(content_workflow.is_overdue(c.case_id, transition_key),
             't',1,null)
    ) as overdue_count,
    count( decode(content_workflow.is_active(c.case_id, transition_key),
             't',1,null)
    ) as active_count,
    count( decode(content_workflow.is_checked_out(c.case_id, transition_key),
             't',1,null)
    ) as checkout_count
  from
    wf_cases c, wf_transitions trans
  where
    c.workflow_key = trans.workflow_key
  and
    c.workflow_key = 'publishing_wf'
  and
    c.state = 'active'

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/cms/www/modules/workflow/index-oracle.xql}
dbqd.cms.www.modules.workflow.index-oracle.get_transitions {dbqd.cms.www.modules.workflow.index-oracle.get_transitions {
      
  select 
    trans.transition_key, transition_name, sort_order,
    count(transition_name) as transition_count,
    count(decode (
            content_workflow.is_overdue(c.case_id, trans.transition_key),
            't',1,null)
         ) as overdue_count,
    count(decode (
            content_workflow.is_active(c.case_id, trans.transition_key),
            't',1,null)
         ) as active_count,
    count( decode(
             content_workflow.is_checked_out(c.case_id, trans.transition_key),
             't',1,null)
         ) as checkout_count
  from
    wf_cases c, wf_transitions trans
  where
    trans.workflow_key = c.workflow_key
  and
    trans.workflow_key = 'publishing_wf'
  and
    c.state in ('active')
  and
    -- don't include tasks that have been finished or canceled
    content_workflow.is_finished(c.case_id, trans.transition_key) = 'f'
  group by
    sort_order, transition_name, trans.transition_key

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/cms/www/modules/workflow/index-oracle.xql}
dbqd.cms.www.modules.workflow.index-oracle.get_user_tasks {dbqd.cms.www.modules.workflow.index-oracle.get_user_tasks {
      
  select
    p.person_id, p.first_names, p.last_name,
    count(transition_name) as transition_count,
    count(decode (
            content_workflow.is_overdue(c.case_id, t.transition_key),
            't',1,null)
         ) as overdue_count,
    count(decode (
            content_workflow.is_active(c.case_id, t.transition_key),
            't',1,null)
         ) as active_count,
    count( decode(
             content_workflow.is_checked_out(c.case_id, t.transition_key, ca.party_id),
             't',1,null)
         ) as checkout_count
  from
    wf_cases c, wf_case_assignments ca, 
    wf_transitions t, persons p
  where
    t.workflow_key = 'publishing_wf'
  and
    t.workflow_key = c.workflow_key
  and
    c.state = 'active'
  and
    c.case_id = ca.case_id
  and
    ca.role_key = t.role_key
  and
    p.person_id = ca.party_id
  and
    -- don't include tasks that have been finished or canceled
    content_workflow.is_finished(c.case_id, t.transition_key) = 'f'
  group by
    first_names, last_name, person_id 

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/cms/www/modules/workflow/index-oracle.xql}
dbqd.cms.www.modules.workflow.index.get_stats {dbqd.cms.www.modules.workflow.index.get_stats {

  select
    count( case when content_workflow__is_finished(c.case_id, transition_key) = 'f' then 1 else null end
    ) as total_count,
    count( case when content_workflow__is_overdue(c.case_id, transition_key) = 't' then 1 else null end
    ) as overdue_count,
    count( case when content_workflow__is_active(c.case_id, transition_key) = 't' then 1 else null end
    ) as active_count,
    count( case when content_workflow__is_checked_out(c.case_id, transition_key) = 't' then 1 else null end
    ) as checkout_count
  from
    wf_cases c, wf_transitions trans
  where
    c.workflow_key = trans.workflow_key
  and
    c.workflow_key = 'publishing_wf'
  and
    c.state = 'active'

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/cms/www/modules/workflow/index-postgresql.xql}
dbqd.cms.www.modules.workflow.index.get_transitions {dbqd.cms.www.modules.workflow.index.get_transitions {

  select 
    trans.transition_key, transition_name, sort_order,
    count(transition_name) as transition_count,
    count( case when content_workflow__is_overdue(c.case_id, trans.transition_key) = 't' then 1 else null end
         ) as overdue_count,
    count(case  when content_workflow__is_active(c.case_id, trans.transition_key) = 't' then 1 else null end
         ) as active_count,
    count( case when content_workflow__is_checked_out(c.case_id, trans.transition_key) = 't' then 1 else null end
         ) as checkout_count
  from
    wf_cases c, wf_transitions trans
  where
    trans.workflow_key = c.workflow_key
  and
    trans.workflow_key = 'publishing_wf'
  and
    c.state in ('active')
  and
    -- don't include tasks that have been finished or canceled
    content_workflow__is_finished(c.case_id, trans.transition_key) = 'f'
  group by
    sort_order, transition_name, trans.transition_key

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/cms/www/modules/workflow/index-postgresql.xql}
dbqd.cms.www.modules.workflow.index.get_user_tasks {dbqd.cms.www.modules.workflow.index.get_user_tasks {

  select
    p.person_id, p.first_names, p.last_name,
    count(transition_name) as transition_count,
    count(case when content_workflow__is_overdue(c.case_id, t.transition_key) = 't' then 1 else null end
         ) as overdue_count,
    count(case when content_workflow__is_active(c.case_id, t.transition_key) = 't' then 1 else null end
         ) as active_count,
    count( case when content_workflow__is_checked_out(c.case_id, t.transition_key, ca.party_id) = 't' then 1 else null end 
         ) as checkout_count
  from
    wf_cases c, wf_case_assignments ca, 
    wf_transitions t, persons p
  where
    t.workflow_key = 'publishing_wf'
  and
    t.workflow_key = c.workflow_key
  and
    c.state = 'active'
  and
    c.case_id = ca.case_id
  and
    ca.role_key = t.role_key
  and
    p.person_id = ca.party_id
  and
    -- don't include tasks that have been finished or canceled
    content_workflow__is_finished(c.case_id, t.transition_key) = 'f'
  group by
    first_names, last_name, person_id 

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/cms/www/modules/workflow/index-postgresql.xql}
dbqd.cms.www.modules.workflow.overdue-items-oracle.get_overdue_tasks {dbqd.cms.www.modules.workflow.overdue-items-oracle.get_overdue_tasks {
      
  select
    trans.transition_key, transition_name, ca.party_id, 
    item_id, content_item.get_title(item_id) as title,
    nvl(party.name(ca.party_id),person.name(ca.party_id)) as assigned_party,
    to_char(dead.deadline,'Mon. DD, YYYY') as deadline_pretty,
    content_workflow.get_status(c.case_id, trans.transition_key) as status
  from 
    wf_transitions trans, wf_cases c, wf_case_deadlines dead, 
    wf_case_assignments ca, cr_items i
  where 
    c.case_id = dead.case_id
  and
    c.case_id = ca.case_id
  and
    ca.role_key = trans.role_key
  and
    dead.transition_key = trans.transition_key
  and
    c.workflow_key = 'publishing_wf'
  and
    c.workflow_key = trans.workflow_key
  and
    c.state = 'active'
  and 
    c.object_id = i.item_id
  and
    content_workflow.is_overdue(c.case_id, trans.transition_key) = 't'
  $transition_sql
  order by
    transition_name, dead.deadline desc, title, assigned_party

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/cms/www/modules/workflow/overdue-items-oracle.xql}
dbqd.cms.www.modules.workflow.overdue-items.get_overdue_tasks {dbqd.cms.www.modules.workflow.overdue-items.get_overdue_tasks {
      
  select
    trans.transition_key, transition_name, ca.party_id, 
    item_id, content_item__get_title(item_id,'f') as title,
    coalesce(party__name(ca.party_id),person__name(ca.party_id)) as assigned_party,
    to_char(dead.deadline,'Mon. DD, YYYY') as deadline_pretty,
    content_workflow__get_status(c.case_id, trans.transition_key) as status
  from 
    wf_transitions trans, wf_cases c, wf_case_deadlines dead, 
    wf_case_assignments ca, cr_items i
  where 
    c.case_id = dead.case_id
  and
    c.case_id = ca.case_id
  and
    ca.role_key = trans.role_key
  and
    dead.transition_key = trans.transition_key
  and
    c.workflow_key = 'publishing_wf'
  and
    c.workflow_key = trans.workflow_key
  and
    c.state = 'active'
  and 
    c.object_id = i.item_id
  and
    content_workflow__is_overdue(c.case_id, trans.transition_key) = 't'
  $transition_sql
  order by
    transition_name, dead.deadline desc, title, assigned_party

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/cms/www/modules/workflow/overdue-items-postgresql.xql}
dbqd.cms.www.modules.workflow.overdue-items.get_transition_name {dbqd.cms.www.modules.workflow.overdue-items.get_transition_name {
      
      select transition_name
        from wf_transitions
        where transition_key = :transition
        and workflow_key = 'publishing_wf'

      } {} {} {} c:/web/openacs-4/packages/cms/www/modules/workflow/overdue-items.xql}
dbqd.cms.www.modules.workflow.task-checkin-oracle.workflow_checkin {dbqd.cms.www.modules.workflow.task-checkin-oracle.workflow_checkin {
      
      begin
      content_workflow.checkin(
          task_id      => :task_id,             
          user_id      => :user_id,
          ip_address   => :ip_address,
          msg          => :msg
      );
      end;
    
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/cms/www/modules/workflow/task-checkin-oracle.xql}
dbqd.cms.www.modules.workflow.task-checkin-oracle.check_valid {dbqd.cms.www.modules.workflow.task-checkin-oracle.check_valid {
      
  select content_workflow.can_approve( :task_id, :user_id ) from dual

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/cms/www/modules/workflow/task-checkin-oracle.xql}
dbqd.cms.www.modules.workflow.task-checkin-oracle.get_task_info {dbqd.cms.www.modules.workflow.task-checkin-oracle.get_task_info {
      
  select
    c.object_id, tr.transition_name,
    content_item.get_title(c.object_id) title,
    tk.holding_user as holding_user, 
    to_char(tk.hold_timeout,'Mon. DD, YYYY') hold_timeout,
    content_workflow.get_holding_user_name(tk.task_id) holding_user_name
  from
    wf_tasks tk, wf_transitions tr, wf_cases c
  where
    tk.task_id = :task_id
  and
    tk.transition_key = tr.transition_key
  and
    tk.case_id = c.case_id

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/cms/www/modules/workflow/task-checkin-oracle.xql}
dbqd.cms.www.modules.workflow.task-checkin-oracle.get_task_status {dbqd.cms.www.modules.workflow.task-checkin-oracle.get_task_status {
      
      select content_workflow.can_approve( :task_id, :user_id ) from dual
    
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/cms/www/modules/workflow/task-checkin-oracle.xql}
dbqd.cms.www.modules.workflow.task-checkin.workflow_checkin {dbqd.cms.www.modules.workflow.task-checkin.workflow_checkin {

        select content_workflow__checkin(
          :task_id,             
          :user_id,
          :ip_address,
          :msg
      );
      
    
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/cms/www/modules/workflow/task-checkin-postgresql.xql}
dbqd.cms.www.modules.workflow.task-checkin.check_valid {dbqd.cms.www.modules.workflow.task-checkin.check_valid {
      
  select content_workflow__can_approve( :task_id, :user_id ) 

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/cms/www/modules/workflow/task-checkin-postgresql.xql}
dbqd.cms.www.modules.workflow.task-checkin.get_task_info {dbqd.cms.www.modules.workflow.task-checkin.get_task_info {
      
  select
    c.object_id, tr.transition_name,
    content_item__get_title(c.object_id, 'f') as title,
    tk.holding_user as holding_user, 
    to_char(tk.hold_timeout,'Mon. DD, YYYY') as hold_timeout,
    content_workflow__get_holding_user_name(tk.task_id) as holding_user_name
  from
    wf_tasks tk, wf_transitions tr, wf_cases c
  where
    tk.task_id = :task_id
  and
    tk.transition_key = tr.transition_key
  and
    tk.case_id = c.case_id

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/cms/www/modules/workflow/task-checkin-postgresql.xql}
dbqd.cms.www.modules.workflow.task-checkin.get_task_status {dbqd.cms.www.modules.workflow.task-checkin.get_task_status {
      
      select content_workflow__can_approve( :task_id, :user_id ) 
    
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/cms/www/modules/workflow/task-checkin-postgresql.xql}
dbqd.cms.www.modules.workflow.task-checkin.abort {dbqd.cms.www.modules.workflow.task-checkin.abort {
      abort transaction
      } {} {} {} c:/web/openacs-4/packages/cms/www/modules/workflow/task-checkin.xql}
dbqd.cms.www.modules.workflow.task-finish-oracle.workflow_approve {dbqd.cms.www.modules.workflow.task-finish-oracle.workflow_approve {
      
           begin
               content_workflow.approve(
                       task_id    => :task_id,
                       user_id    => :user_id,
                       ip_address => :ip_address,
                       msg        => :msg
                 );
            end;
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/cms/www/modules/workflow/task-finish-oracle.xql}
dbqd.cms.www.modules.workflow.task-finish-oracle.get_status {dbqd.cms.www.modules.workflow.task-finish-oracle.get_status {
      
  select content_workflow.can_approve( :task_id, :user_id ) from dual

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/cms/www/modules/workflow/task-finish-oracle.xql}
dbqd.cms.www.modules.workflow.task-finish-oracle.get_task_info {dbqd.cms.www.modules.workflow.task-finish-oracle.get_task_info {
      
  select
    c.object_id, content_item.get_title(c.object_id) title, 
    tr.transition_name
  from
    wf_tasks tk, wf_cases c,
    wf_transitions tr
  where
    tk.task_id = :task_id
  and
    tk.transition_key = tr.transition_key
  and
    tk.workflow_key = tr.workflow_key
  and
    tk.workflow_key = 'publishing_wf'
  and
    c.case_id = tk.case_id
  and
    content_workflow.can_approve( tk.task_id, :user_id ) = 't'

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/cms/www/modules/workflow/task-finish-oracle.xql}
dbqd.cms.www.modules.workflow.task-finish-oracle.get_status {dbqd.cms.www.modules.workflow.task-finish-oracle.get_status {
      
             select content_workflow.can_approve( :task_id, :user_id ) from dual
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/cms/www/modules/workflow/task-finish-oracle.xql}
dbqd.cms.www.modules.workflow.task-finish.workflow_approve {dbqd.cms.www.modules.workflow.task-finish.workflow_approve {

        select content_workflow__approve(
                       :task_id,
                       :user_id,
                       :ip_address,
                       :msg
                 );
            
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/cms/www/modules/workflow/task-finish-postgresql.xql}
dbqd.cms.www.modules.workflow.task-finish.get_status {dbqd.cms.www.modules.workflow.task-finish.get_status {
      
  select content_workflow__can_approve( :task_id, :user_id ) 

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/cms/www/modules/workflow/task-finish-postgresql.xql}
dbqd.cms.www.modules.workflow.task-finish.get_task_info {dbqd.cms.www.modules.workflow.task-finish.get_task_info {
      
  select
    c.object_id, content_item__get_title(c.object_id,'f') as title, 
    tr.transition_name
  from
    wf_tasks tk, wf_cases c,
    wf_transitions tr
  where
    tk.task_id = :task_id
  and
    tk.transition_key = tr.transition_key
  and
    tk.workflow_key = tr.workflow_key
  and
    tk.workflow_key = 'publishing_wf'
  and
    c.case_id = tk.case_id
  and
    content_workflow__can_approve( tk.task_id, :user_id ) = 't'

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/cms/www/modules/workflow/task-finish-postgresql.xql}
dbqd.cms.www.modules.workflow.task-finish.get_status {dbqd.cms.www.modules.workflow.task-finish.get_status {
      
             select content_workflow__can_approve( :task_id, :user_id ) 
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/cms/www/modules/workflow/task-finish-postgresql.xql}
dbqd.cms.www.modules.workflow.task-finish.abort {dbqd.cms.www.modules.workflow.task-finish.abort {
      abort transaction
      } {} {} {} c:/web/openacs-4/packages/cms/www/modules/workflow/task-finish.xql}
dbqd.cms.www.modules.workflow.task-reject-oracle.workflow_reject {dbqd.cms.www.modules.workflow.task-reject-oracle.workflow_reject {
      
                      begin
                        content_workflow.reject(
                             task_id        => :task_id,
                             user_id        => :user_id,
                             ip_address     => :ip_address,
                             transition_key => :transition_key,
                             msg            => :msg
                         );
                       end;
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/cms/www/modules/workflow/task-reject-oracle.xql}
dbqd.cms.www.modules.workflow.task-reject-oracle.get_status {dbqd.cms.www.modules.workflow.task-reject-oracle.get_status {
      
  select content_workflow.can_reject( :task_id, :user_id ) from dual

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/cms/www/modules/workflow/task-reject-oracle.xql}
dbqd.cms.www.modules.workflow.task-reject-oracle.get_task_info {dbqd.cms.www.modules.workflow.task-reject-oracle.get_task_info {
      
  select
    c.object_id, content_item.get_title(c.object_id) title, 
    tr.transition_name
  from
    wf_tasks tk, wf_cases c,
    wf_transitions tr
  where
    tk.task_id = :task_id
  and
    tk.transition_key = tr.transition_key
  and
    tk.workflow_key = tr.workflow_key
  and
    tk.workflow_key = 'publishing_wf'
  and
    tk.case_id = c.case_id
  and
    content_workflow.can_reject( tk.task_id, :user_id ) = 't'

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/cms/www/modules/workflow/task-reject-oracle.xql}
dbqd.cms.www.modules.workflow.task-reject-oracle.get_rejects {dbqd.cms.www.modules.workflow.task-reject-oracle.get_rejects {
      
  select
    trans.transition_name, trans.transition_key
  from
    wf_places src, wf_places dest, wf_tasks t, wf_transitions trans
  where
    src.workflow_key = dest.workflow_key
  and
    src.workflow_key = 'publishing_wf'
  and
    src.workflow_key = trans.workflow_key
  and
    src.place_key = content_workflow.get_this_place( t.transition_key )
  and
    -- for the publishing_wf, past transitions have a lower sort order
    dest.sort_order < src.sort_order
  and
    -- get the transition associated with that place
    content_workflow.get_this_place( trans.transition_key ) = dest.place_key
  and
    t.task_id = :task_id
  order by
    dest.sort_order desc

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/cms/www/modules/workflow/task-reject-oracle.xql}
dbqd.cms.www.modules.workflow.task-reject-oracle.is_valid_task {dbqd.cms.www.modules.workflow.task-reject-oracle.is_valid_task {

             select content_workflow.can_reject( :task_id, :user_id ) from dual

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/cms/www/modules/workflow/task-reject-oracle.xql}
dbqd.cms.www.modules.workflow.task-reject.workflow_reject {dbqd.cms.www.modules.workflow.task-reject.workflow_reject {


        select content_workflow__reject(
                             :task_id,
                             :user_id,
                             :ip_address,
                             :transition_key,
                             :msg
                         );
                       
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/cms/www/modules/workflow/task-reject-postgresql.xql}
dbqd.cms.www.modules.workflow.task-reject.get_status {dbqd.cms.www.modules.workflow.task-reject.get_status {
      
  select content_workflow__can_reject( :task_id, :user_id ) 

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/cms/www/modules/workflow/task-reject-postgresql.xql}
dbqd.cms.www.modules.workflow.task-reject.get_task_info {dbqd.cms.www.modules.workflow.task-reject.get_task_info {
      
  select
    c.object_id, content_item__get_title(c.object_id,'f') as title, 
    tr.transition_name
  from
    wf_tasks tk, wf_cases c,
    wf_transitions tr
  where
    tk.task_id = :task_id
  and
    tk.transition_key = tr.transition_key
  and
    tk.workflow_key = tr.workflow_key
  and
    tk.workflow_key = 'publishing_wf'
  and
    tk.case_id = c.case_id
  and
    content_workflow__can_reject( tk.task_id, :user_id ) = 't'

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/cms/www/modules/workflow/task-reject-postgresql.xql}
dbqd.cms.www.modules.workflow.task-reject.get_rejects {dbqd.cms.www.modules.workflow.task-reject.get_rejects {
      
  select
    trans.transition_name, trans.transition_key
  from
    wf_places src, wf_places dest, wf_tasks t, wf_transitions trans
  where
    src.workflow_key = dest.workflow_key
  and
    src.workflow_key = 'publishing_wf'
  and
    src.workflow_key = trans.workflow_key
  and
    src.place_key = content_workflow__get_this_place( t.transition_key )
  and
    -- for the publishing_wf, past transitions have a lower sort order
    dest.sort_order < src.sort_order
  and
    -- get the transition associated with that place
    content_workflow__get_this_place( trans.transition_key ) = dest.place_key
  and
    t.task_id = :task_id
  order by
    dest.sort_order desc

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/cms/www/modules/workflow/task-reject-postgresql.xql}
dbqd.cms.www.modules.workflow.task-reject.is_valid_task {dbqd.cms.www.modules.workflow.task-reject.is_valid_task {

             select content_workflow__can_reject( :task_id, :user_id ) from dual

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/cms/www/modules/workflow/task-reject-postgresql.xql}
dbqd.cms.www.modules.workflow.task-reject.abort {dbqd.cms.www.modules.workflow.task-reject.abort {
      abort transaction
      } {} {} {} c:/web/openacs-4/packages/cms/www/modules/workflow/task-reject.xql}
dbqd.cms.www.modules.workflow.task-start-oracle.workflow_checkout {dbqd.cms.www.modules.workflow.task-start-oracle.workflow_checkout {
      
      begin
      content_workflow.checkout(
          task_id      => :task_id,             
          hold_timeout => $hold_timeout_sql,
          user_id      => :user_id,
          ip_address   => :ip_address,
          msg          => :msg
      );
      end;
    
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/cms/www/modules/workflow/task-start-oracle.xql}
dbqd.cms.www.modules.workflow.task-start-oracle.get_status {dbqd.cms.www.modules.workflow.task-start-oracle.get_status {
      
  select content_workflow.can_start( :task_id, :user_id ) from dual

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/cms/www/modules/workflow/task-start-oracle.xql}
dbqd.cms.www.modules.workflow.task-start-oracle.get_task_info {dbqd.cms.www.modules.workflow.task-start-oracle.get_task_info {
      
  select
    c.object_id, tr.transition_name,
    content_item.get_title(c.object_id) title,
    tk.holding_user as holding_user, 
    to_char(tk.hold_timeout,'Mon. DD, YYYY') hold_timeout,
    content_workflow.get_holding_user_name(tk.task_id) holding_user_name
  from
    wf_tasks tk,
    wf_transitions tr,
    wf_cases c
  where
    tk.task_id = :task_id
  and
    tk.transition_key = tr.transition_key
  and
    tk.case_id = c.case_id

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/cms/www/modules/workflow/task-start-oracle.xql}
dbqd.cms.www.modules.workflow.task-start-oracle.get_status {dbqd.cms.www.modules.workflow.task-start-oracle.get_status {
      
      select content_workflow.can_start( :task_id, :user_id ) from dual
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/cms/www/modules/workflow/task-start-oracle.xql}
dbqd.cms.www.modules.workflow.task-start.workflow_checkout {dbqd.cms.www.modules.workflow.task-start.workflow_checkout {


        select content_workflow__checkout(
          :task_id,             
          $hold_timeout_sql,
          :user_id,
          :ip_address,
          :msg
      );
      
    
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/cms/www/modules/workflow/task-start-postgresql.xql}
dbqd.cms.www.modules.workflow.task-start.get_status {dbqd.cms.www.modules.workflow.task-start.get_status {
      
  select content_workflow__can_start( :task_id, :user_id ) 

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/cms/www/modules/workflow/task-start-postgresql.xql}
dbqd.cms.www.modules.workflow.task-start.get_task_info {dbqd.cms.www.modules.workflow.task-start.get_task_info {
      
  select
    c.object_id, tr.transition_name,
    content_item__get_title(c.object_id,'f') as title,
    tk.holding_user as holding_user, 
    to_char(tk.hold_timeout,'Mon. DD, YYYY') as hold_timeout,
    content_workflow__get_holding_user_name(tk.task_id) as holding_user_name
  from
    wf_tasks tk,
    wf_transitions tr,
    wf_cases c
  where
    tk.task_id = :task_id
  and
    tk.transition_key = tr.transition_key
  and
    tk.case_id = c.case_id

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/cms/www/modules/workflow/task-start-postgresql.xql}
dbqd.cms.www.modules.workflow.task-start.get_status {dbqd.cms.www.modules.workflow.task-start.get_status {
      
      select content_workflow__can_start( :task_id, :user_id ) 
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/cms/www/modules/workflow/task-start-postgresql.xql}
dbqd.cms.www.modules.workflow.task-start.abort {dbqd.cms.www.modules.workflow.task-start.abort {
      abort transaction
      } {} {} {} c:/web/openacs-4/packages/cms/www/modules/workflow/task-start.xql}
dbqd.cms.www.modules.workflow.user-tasks-oracle.get_party_name {dbqd.cms.www.modules.workflow.user-tasks-oracle.get_party_name {
      
  select nvl(party.name(:party_id),person.name(:party_id)) from dual

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/cms/www/modules/workflow/user-tasks-oracle.xql}
dbqd.cms.www.modules.workflow.user-tasks-oracle.get_active {dbqd.cms.www.modules.workflow.user-tasks-oracle.get_active {
      
  select
    trans.transition_key, transition_name, 
    item_id, content_item.get_title(item_id) as title,
    t.state,
    to_char(deadline,'Mon. DD, YYYY') as deadline_pretty,
    to_char(enabled_date,$date_format) as enabled_date_pretty,
    to_char(started_date,$date_format) as started_date_pretty,
    to_char(hold_timeout,'Mon. DD, YYYY') as hold_timeout_pretty,
    holding_user, person.name(holding_user) as holding_user_name,
    content_workflow.is_overdue(c.case_id, trans.transition_key) as is_overdue
  from
    wf_transitions trans, wf_tasks t, cr_items i,
    wf_cases c, wf_case_assignments ca
  where
    c.workflow_key = 'publishing_wf'
  and
    c.workflow_key = trans.workflow_key
  and
    c.case_id = ca.case_id
  and
    c.case_id = t.case_id
  and
    c.object_id = i.item_id
  and
    t.transition_key = trans.transition_key
  and
    ca.role_key = trans.role_key
  and
    c.state = 'active'
  and
    t.state in ('enabled','started')
  and
    ca.party_id = :party_id
  order by
    trans.sort_order, title
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/cms/www/modules/workflow/user-tasks-oracle.xql}
dbqd.cms.www.modules.workflow.user-tasks-oracle.get_waiting {dbqd.cms.www.modules.workflow.user-tasks-oracle.get_waiting {
      
  select
    trans.transition_key, transition_name, 
    item_id, content_item.get_title(item_id) as title,
    to_char(deadline,'Mon. DD, YYYY') as deadline_pretty,
    content_workflow.is_overdue(c.case_id, trans.transition_key) as is_overdue
  from
    wf_case_assignments ca, wf_case_deadlines dead, wf_cases c,
    cr_items i, wf_transitions trans
  where
    c.workflow_key = 'publishing_wf'
  and
    c.workflow_key = trans.workflow_key
  and
    c.case_id = ca.case_id
  and
    c.case_id = dead.case_id
  and
    ca.role_key = trans.role_key
  and
    dead.transition_key = trans.transition_key
  and
    c.object_id = i.item_id
  and
    c.state = 'active'
  and
    content_workflow.is_finished(c.case_id, trans.transition_key) = 'f'
  and
    not exists ( select 1
                 from
                   wf_tasks
                 where
                   case_id = c.case_id
                 and
                   transition_key = trans.transition_key
                 and
                   state in ('enabled','started') )
  and
    ca.party_id = :party_id
  order by
    trans.sort_order, title
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/cms/www/modules/workflow/user-tasks-oracle.xql}
dbqd.cms.www.modules.workflow.user-tasks.get_party_name {dbqd.cms.www.modules.workflow.user-tasks.get_party_name {
      
  select coalesce(party__name(:party_id),person__name(:party_id)) 

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/cms/www/modules/workflow/user-tasks-postgresql.xql}
dbqd.cms.www.modules.workflow.user-tasks.get_active {dbqd.cms.www.modules.workflow.user-tasks.get_active {
      
  select
    trans.transition_key, transition_name, 
    item_id, content_item__get_title(item_id,'f') as title,
    t.state,
    to_char(deadline,'Mon. DD, YYYY') as deadline_pretty,
    to_char(enabled_date,$date_format) as enabled_date_pretty,
    to_char(started_date,$date_format) as started_date_pretty,
    to_char(hold_timeout,'Mon. DD, YYYY') as hold_timeout_pretty,
    holding_user, person__name(holding_user) as holding_user_name,
    content_workflow__is_overdue(c.case_id, trans.transition_key) as is_overdue
  from
    wf_transitions trans, wf_tasks t, cr_items i,
    wf_cases c, wf_case_assignments ca
  where
    c.workflow_key = 'publishing_wf'
  and
    c.workflow_key = trans.workflow_key
  and
    c.case_id = ca.case_id
  and
    c.case_id = t.case_id
  and
    c.object_id = i.item_id
  and
    t.transition_key = trans.transition_key
  and
    ca.role_key = trans.role_key
  and
    c.state = 'active'
  and
    t.state in ('enabled','started')
  and
    ca.party_id = :party_id
  order by
    trans.sort_order, title
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/cms/www/modules/workflow/user-tasks-postgresql.xql}
dbqd.cms.www.modules.workflow.user-tasks.get_waiting {dbqd.cms.www.modules.workflow.user-tasks.get_waiting {
      
  select
    trans.transition_key, transition_name, 
    item_id, content_item__get_title(item_id) as title,
    to_char(deadline,'Mon. DD, YYYY') as deadline_pretty,
    content_workflow__is_overdue(c.case_id, trans.transition_key) as is_overdue
  from
    wf_case_assignments ca, wf_case_deadlines dead, wf_cases c,
    cr_items i, wf_transitions trans
  where
    c.workflow_key = 'publishing_wf'
  and
    c.workflow_key = trans.workflow_key
  and
    c.case_id = ca.case_id
  and
    c.case_id = dead.case_id
  and
    ca.role_key = trans.role_key
  and
    dead.transition_key = trans.transition_key
  and
    c.object_id = i.item_id
  and
    c.state = 'active'
  and
    content_workflow__is_finished(c.case_id, trans.transition_key) = 'f'
  and
    not exists ( select 1
                 from
                   wf_tasks
                 where
                   case_id = c.case_id
                 and
                   transition_key = trans.transition_key
                 and
                   state in ('enabled','started') )
  and
    ca.party_id = :party_id
  order by
    trans.sort_order, title
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/cms/www/modules/workflow/user-tasks-postgresql.xql}
dbqd.cms.www.modules.workflow.workflow-oracle.get_active {dbqd.cms.www.modules.workflow.workflow-oracle.get_active {
      
  select
    t.transition_key, transition_name, 
    item_id, content_item.get_title(item_id) as title,
    t.state, ca.party_id,
    nvl(party.name(ca.party_id),person.name(ca.party_id)) as assigned_party,
    holding_user,
    person.name(holding_user) as holding_user_name,
    to_char(hold_timeout,'Mon. DD, YYYY') as hold_timeout_pretty,
    to_char(deadline,'Mon., DD, YYYY') as deadline_pretty,
    to_char(enabled_date,$date_format) as enabled_date_pretty, 
    to_char(started_date,$date_format) as started_date_pretty,
    content_workflow.is_overdue(c.case_id, t.transition_key) as is_overdue
  from
    wf_tasks t, wf_transitions trans, cr_items i,
    wf_cases c, wf_case_assignments ca
  where
    c.workflow_key = 'publishing_wf'
  and
    c.workflow_key = trans.workflow_key
  and
    c.case_id = t.case_id
  and
    c.case_id = ca.case_id
  and
    c.state = 'active'
  and
    -- the workflow item is a content item
    c.object_id = i.item_id
  and
    t.transition_key = trans.transition_key
  and
    ca.role_key = trans.role_key
  and
    t.state in ('started','enabled')
  $transition_sql
  order by
    trans.sort_order, title, assigned_party, deadline desc, state

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/cms/www/modules/workflow/workflow-oracle.xql}
dbqd.cms.www.modules.workflow.workflow-oracle.get_waiting {dbqd.cms.www.modules.workflow.workflow-oracle.get_waiting {
      
  select
    trans.transition_key, transition_name, ca.party_id,
    item_id, content_item.get_title(item_id) as title,
    nvl(party.name(ca.party_id),person.name(ca.party_id)) as assigned_party,
    to_char(dead.deadline,'Mon.DD, YYYY') as deadline_pretty,
    content_workflow.is_overdue(c.case_id, trans.transition_key) as is_overdue
  from
    wf_cases c, wf_case_assignments ca, wf_case_deadlines dead,
    wf_transitions trans, cr_items i
  where
    c.workflow_key = 'publishing_wf'
  and
    c.workflow_key = trans.workflow_key
  and
    c.object_id = i.item_id
  and
    c.case_id = ca.case_id
  and
    c.case_id = dead.case_id
  and
    ca.role_key = trans.role_key
  and
    dead.transition_key = trans.transition_key
  and
    c.state = 'active'
  and
    -- non active task
    not exists ( select 1
                 from 
                   wf_tasks
                 where
                   state in ('enabled','started')
                 and
                   case_id = c.case_id
                 and
                   transition_key = trans.transition_key )
  and
    -- its finished
    content_workflow.is_finished(c.case_id, trans.transition_key) = 'f'
  -- trans.transition_key = transition 
  $transition_sql
  order by
    trans.sort_order, title, assigned_party, dead.deadline desc
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/cms/www/modules/workflow/workflow-oracle.xql}
dbqd.cms.www.modules.workflow.workflow.get_active {dbqd.cms.www.modules.workflow.workflow.get_active {
      
  select
    t.transition_key, transition_name, 
    item_id, content_item__get_title(item_id,'f') as title,
    t.state, ca.party_id,
    coalesce(party__name(ca.party_id),person__name(ca.party_id)) as assigned_party,
    holding_user,
    person__name(holding_user) as holding_user_name,
    to_char(hold_timeout,'Mon. DD, YYYY') as hold_timeout_pretty,
    to_char(deadline,'Mon., DD, YYYY') as deadline_pretty,
    to_char(enabled_date,$date_format) as enabled_date_pretty, 
    to_char(started_date,$date_format) as started_date_pretty,
    content_workflow__is_overdue(c.case_id, t.transition_key) as is_overdue
  from
    wf_tasks t, wf_transitions trans, cr_items i,
    wf_cases c, wf_case_assignments ca
  where
    c.workflow_key = 'publishing_wf'
  and
    c.workflow_key = trans.workflow_key
  and
    c.case_id = t.case_id
  and
    c.case_id = ca.case_id
  and
    c.state = 'active'
  and
    -- the workflow item is a content item
    c.object_id = i.item_id
  and
    t.transition_key = trans.transition_key
  and
    ca.role_key = trans.role_key
  and
    t.state in ('started','enabled')
  $transition_sql
  order by
    trans.sort_order, title, assigned_party, deadline desc, state

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/cms/www/modules/workflow/workflow-postgresql.xql}
dbqd.cms.www.modules.workflow.workflow.get_waiting {dbqd.cms.www.modules.workflow.workflow.get_waiting {
      
  select
    trans.transition_key, transition_name, ca.party_id,
    item_id, content_item__get_title(item_id,'f') as title,
    coalesce(party__name(ca.party_id),person__name(ca.party_id)) as assigned_party,
    to_char(dead.deadline,'Mon.DD, YYYY') as deadline_pretty,
    content_workflow__is_overdue(c.case_id, trans.transition_key) as is_overdue
  from
    wf_cases c, wf_case_assignments ca, wf_case_deadlines dead,
    wf_transitions trans, cr_items i
  where
    c.workflow_key = 'publishing_wf'
  and
    c.workflow_key = trans.workflow_key
  and
    c.object_id = i.item_id
  and
    c.case_id = ca.case_id
  and
    c.case_id = dead.case_id
  and
    ca.role_key = trans.role_key
  and
    dead.transition_key = trans.transition_key
  and
    c.state = 'active'
  and
    -- non active task
    not exists ( select 1
                 from 
                   wf_tasks
                 where
                   state in ('enabled','started')
                 and
                   case_id = c.case_id
                 and
                   transition_key = trans.transition_key )
  and
    -- its finished
    content_workflow__is_finished(c.case_id, trans.transition_key) = 'f'
  -- trans.transition_key = transition 
  $transition_sql
  order by
    trans.sort_order, title, assigned_party, dead.deadline desc
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/cms/www/modules/workflow/workflow-postgresql.xql}
dbqd.cms.www.modules.workflow.workflow.get_name {dbqd.cms.www.modules.workflow.workflow.get_name {
      
      select 
        transition_name 
      from 
        wf_transitions
      where 
        transition_key = :transition
      and 
        workflow_key = 'publishing_wf'
    
      } {} {} {} c:/web/openacs-4/packages/cms/www/modules/workflow/workflow.xql}
dbqd.cms.www.modules.workspace.assignments-oracle.get_locked_tasks {dbqd.cms.www.modules.workspace.assignments-oracle.get_locked_tasks {
      
  select
    types.pretty_name, 
    obj.object_id item_id, 
    content_item.get_title(obj.object_id) title,
    task.task_id,
    content_workflow.get_holding_user_name(task.task_id) holding_user_name,
    to_char(task.hold_timeout,'Mon. DD, YYYY') hold_timeout,
    assign.case_id, 
    trans.transition_name, trans.transition_key,
    to_char(dead.deadline,'Mon. DD, YYYY') deadline
  from
    acs_object_types types,
    acs_objects obj,
    wf_case_assignments assign,
    wf_transitions trans, 
    wf_tasks task,
    wf_cases case,
    wf_case_deadlines dead,
    wf_transition_role_assign_map trans_role
  where 
    dead.case_id = case.case_id
  and
    dead.transition_key = task.transition_key
  and
    assign.party_id = :user_id
  and
    assign.case_id = task.case_id
  and
    assign.role_key = trans_role.assign_role_key
  and
    task.transition_key = trans_role.transition_key
  and 
    task.state = 'started'
  and
    task.transition_key = trans.transition_key
  and
    assign.case_id = case.case_id
  and
    case.object_id = obj.object_id
  and
    types.object_type = content_item.get_content_type(obj.object_id)
  and
    task.holding_user ^= :user_id
  order by
    dead.deadline

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/cms/www/modules/workspace/assignments-oracle.xql}
dbqd.cms.www.modules.workspace.assignments.get_locked_tasks {dbqd.cms.www.modules.workspace.assignments.get_locked_tasks {
      
  select
    types.pretty_name, 
    obj.object_id as item_id, 
    content_item__get_title(obj.object_id,'f') as title,
    task.task_id,
    content_workflow__get_holding_user_name(task.task_id) as holding_user_name,
    to_char(task.hold_timeout,'Mon. DD, YYYY') as hold_timeout,
    assign.case_id, 
    trans.transition_name, trans.transition_key,
    to_char(dead.deadline,'Mon. DD, YYYY') as deadline
  from
    acs_object_types types,
    acs_objects obj,
    wf_case_assignments assign,
    wf_transitions trans, 
    wf_tasks task,
    wf_cases cases,
    wf_case_deadlines dead,
    wf_transition_role_assign_map trans_role
  where 
    dead.case_id = cases.case_id
  and
    dead.transition_key = task.transition_key
  and
    assign.party_id = :user_id
  and
    assign.case_id = task.case_id
  and
    assign.role_key = trans_role.assign_role_key
  and
    task.transition_key = trans_role.transition_key
  and 
    task.state = 'started'
  and
    task.transition_key = trans.transition_key
  and
    assign.case_id = cases.case_id
  and
    cases.object_id = obj.object_id
  and
    types.object_type = content_item__get_content_type(obj.object_id)
  and
    task.holding_user != :user_id
  order by
    dead.deadline

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/cms/www/modules/workspace/assignments-postgresql.xql}
dbqd.cms.www.modules.workspace.index-oracle.get_workspace_items {dbqd.cms.www.modules.workspace.index-oracle.get_workspace_items {
      
  select
    types.pretty_name, 
    obj.object_id item_id, 
    content_item.get_title(obj.object_id) title,
    task.task_id,
    task.holding_user,
    task.state,
    assign.case_id, 
    trans.transition_name, trans.transition_key,
    to_char(dead.deadline,'Mon. DD, YYYY') deadline,
    content_workflow.can_reject(task.task_id, :user_id) can_reject,
    content_workflow.approve_string(task.task_id, :user_id) approve_string
  from
    acs_object_types types,
    acs_objects obj,
    wf_case_assignments assign,
    wf_transitions trans, 
    wf_tasks task,
    wf_cases case,
    wf_case_deadlines dead
  where 
    dead.case_id = case.case_id
  and
    dead.transition_key = task.transition_key
  and
    assign.party_id = :user_id
  and
    assign.case_id = task.case_id
  and
    assign.role_key = trans.role_key
  and
    task.transition_key = trans.transition_key
  and (
    task.state = 'enabled'
    or (task.state = 'started' and task.holding_user = :user_id)
  ) and
    task.transition_key = trans.transition_key
  and
    assign.case_id = case.case_id
  and
    case.object_id = obj.object_id
  and
    types.object_type = content_item.get_content_type(obj.object_id)
  order by
    dead.deadline

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/cms/www/modules/workspace/index-oracle.xql}
dbqd.cms.www.modules.workspace.index.get_workspace_items {dbqd.cms.www.modules.workspace.index.get_workspace_items {
      
  select
    types.pretty_name, 
    obj.object_id as item_id, 
    content_item__get_title(obj.object_id,'f') as title,
    task.task_id,
    task.holding_user,
    task.state,
    assign.case_id, 
    trans.transition_name, trans.transition_key,
    to_char(dead.deadline,'Mon. DD, YYYY') as deadline,
    content_workflow__can_reject(task.task_id, :user_id) as can_reject,
    content_workflow__approve_string(task.task_id, :user_id) as approve_string
  from
    acs_object_types types,
    acs_objects obj,
    wf_case_assignments assign,
    wf_transitions trans, 
    wf_tasks task,
    wf_cases cases,
    wf_case_deadlines dead
  where 
    dead.case_id = cases.case_id
  and
    dead.transition_key = task.transition_key
  and
    assign.party_id = :user_id
  and
    assign.case_id = task.case_id
  and
    assign.role_key = trans.role_key
  and
    task.transition_key = trans.transition_key
  and (
    task.state = 'enabled'
    or (task.state = 'started' and task.holding_user = :user_id)
  ) and
    task.transition_key = trans.transition_key
  and
    assign.case_id = cases.case_id
  and
    cases.object_id = obj.object_id
  and
    types.object_type = content_item__get_content_type(obj.object_id)
  order by
    dead.deadline

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/cms/www/modules/workspace/index-postgresql.xql}
dbqd.cms.www.register-oracle.grant_permissions {dbqd.cms.www.register-oracle.grant_permissions {
      
	declare
	  cursor c_item_cur is
	    select item_id from cr_items
	    connect by parent_id = prior item_id
	    start with parent_id = 0;
	
          cursor c_module_cur is
	    select module_id from cm_modules;

	begin
  
	  for item_row in c_item_cur loop 
	    acs_permission.grant_permission (
	        object_id  => item_row.item_id, 
	        grantee_id => :user_id, 
	        privilege  => 'cm_admin'
	    );
	  end loop;

	  for v_module in c_module_cur loop
	    acs_permission.grant_permission (
	        object_id  => v_module.module_id,
	        grantee_id => :user_id,
	        privilege  => 'cm_admin'
            );
	  end loop;

	end;
	
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/cms/www/register-oracle.xql}
dbqd.cms.www.register-oracle.get_user_id {dbqd.cms.www.register-oracle.get_user_id {
      
      select acs_object_id_seq.nextval from dual
    
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/cms/www/register-oracle.xql}
dbqd.cms.www.register.grant_permissions {dbqd.cms.www.register.grant_permissions {

	declare
          v_module      record;
          item_row      record;
	begin
  
	  for item_row in 
	    select c1.item_id from cr_items c1, cr_items c2
            where c2.parent_id = 0
              and c1.tree_sortkey between c2.tree_sortkey and tree_right(c2.tree_sortkey)
          LOOP 
	    PERFORM acs_permission__grant_permission (
	        item_row.item_id, 
	        :user_id, 
	        'cm_admin'
	    );
	  end loop;

	  for v_module in
	    select module_id from cm_modules
          LOOP
	    PERFORM acs_permission__grant_permission (
	        v_module.module_id,
	        :user_id,
	        'cm_admin'
            );
	  end loop;

          return null;
	end;
	
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/cms/www/register-postgresql.xql}
dbqd.cms.www.register.get_user_id {dbqd.cms.www.register.get_user_id {
      
      select acs_object_id_seq.nextval 
    
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/cms/www/register-postgresql.xql}
dbqd.cms.www.register.update_users {dbqd.cms.www.register.update_users {
      
      update users
        set screen_name = :screen_name
        where user_id = :user_id
      } {} {} {} c:/web/openacs-4/packages/cms/www/register.xql}
dbqd.cms.www.signin.get_info {dbqd.cms.www.signin.get_info {
      select user_id, salt, password 
      from users
      where screen_name = :screen_name      

      } {} {} {} c:/web/openacs-4/packages/cms/www/signin.xql}
dbqd.cronjob.tcl.cronjob-procs.cronjob_check.cronjob_sched_foreach {dbqd.cronjob.tcl.cronjob-procs.cronjob_check.cronjob_sched_foreach {
      select cronjob_id
      from cronjobs
      where disabled_p = 'f' 
      and approved_p = 't' 
      and ((minute = :minute) or (minute = '*')) 
      and ((hr = :hr ) or (hr = '*')) 
      and ((mon = :mon ) or (mon = '*')) 
      and ((day = :day ) or (day = '*'))
      and ((dayofweek = :dayofweek ) or (dayofweek = '*'))
    } {} {} {} c:/web/openacs-4/packages/cronjob/tcl/cronjob-procs.xql}
dbqd.cronjob.tcl.cronjob-procs.cronjob_run.cronjob_query {dbqd.cronjob.tcl.cronjob-procs.cronjob_run.cronjob_query {
      select description, run_sql, run_tcl, email
      from cronjobs
      where cronjob_id = :cronjob_id
    } {} {} {} c:/web/openacs-4/packages/cronjob/tcl/cronjob-procs.xql}
dbqd.cronjob.www.admin.cronjob-add-oracle.add_cronjob {dbqd.cronjob.www.admin.cronjob-add-oracle.add_cronjob {
      declare v_cronjob_id integer;
      begin
        v_cronjob_id := cronjob.new(
        user_id => :user_id,
        description => :description,
        approved_p => :approved_p,
        disabled_p => :disabled_p,
        minute => :minute,
        hr => :hr,
        mon => :mon,
        day => :day,
        dayofweek => :dayofweek,
        run_sql => :run_sql,
        run_tcl => :run_tcl,
        email => :email);
      end;
    } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/cronjob/www/admin/cronjob-add-oracle.xql}
dbqd.cronjob.www.admin.cronjob-add.add_cronjob {dbqd.cronjob.www.admin.cronjob-add.add_cronjob {
      select [qd_write_query_select cronjob__new {
      user_id => :user_id
      description => :description
      approved_p => :approved_p
      disabled_p => :disabled_p
      minute => :minute
      hr => :hr
      mon => :mon
      day => :day
      dayofweek => :dayofweek
      run_sql => :run_sql
      run_tcl => :run_tcl
      email => :email } ]

    } {} {} {postgresql 7.1} c:/web/openacs-4/packages/cronjob/www/admin/cronjob-add-postgresql.xql}
dbqd.cronjob.www.admin.cronjob-delete-oracle.edit_cronjob {dbqd.cronjob.www.admin.cronjob-delete-oracle.edit_cronjob {
      begin
        cronjob.del(cronjob_id => :cronjob_id);
      end;
    } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/cronjob/www/admin/cronjob-delete-oracle.xql}
dbqd.cronjob.www.admin.cronjob-delete.edit_cronjob {dbqd.cronjob.www.admin.cronjob-delete.edit_cronjob {
      select [qd_write_query_select cronjob__delete {
      cronjob_id => :cronjob_id } ]
    } {} {} {postgresql 7.1} c:/web/openacs-4/packages/cronjob/www/admin/cronjob-delete-postgresql.xql}
dbqd.cronjob.www.admin.cronjob-edit-oracle.edit_cronjob {dbqd.cronjob.www.admin.cronjob-edit-oracle.edit_cronjob {
      begin
        cronjob.set_attrs(
          cronjob_id => :cronjob_id,
          description => :description,
          approved_p => :approved_p,
          disabled_p => :disabled_p,
          minute => :minute,
          hr => :hr,
          mon => :mon,
          day => :day,
          dayofweek => :dayofweek,
          run_sql => :run_sql,
          run_tcl => :run_tcl,
          email => :email);
      end;
    } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/cronjob/www/admin/cronjob-edit-oracle.xql}
dbqd.cronjob.www.admin.cronjob-edit.edit_cronjob {dbqd.cronjob.www.admin.cronjob-edit.edit_cronjob {
      select [qd_write_query_select cronjob__set_attrs {
      cronjob_id => :cronjob_id
      description => :description
      approved_p => :approved_p
      disabled_p => :disabled_p
      minute => :minute
      hr => :hr
      mon => :mon
      day => :day
      dayofweek => :dayofweek
      run_sql => :run_sql
      run_tcl => :run_tcl
      email => :email } ]
    } {} {} {postgresql 7.1} c:/web/openacs-4/packages/cronjob/www/admin/cronjob-edit-postgresql.xql}
dbqd.cronjob.www.admin.cronjob.cronjob_query {dbqd.cronjob.www.admin.cronjob.cronjob_query {
      select *
      from cronjobs
      where cronjob_id = :cronjob_id
    } {} {} {} c:/web/openacs-4/packages/cronjob/www/admin/cronjob.xql}
dbqd.cronjob.www.admin.cronjobs.cronjobs_query {dbqd.cronjob.www.admin.cronjobs.cronjobs_query {
      select *
      from cronjobs
      order by user_id
    } {} {} {} c:/web/openacs-4/packages/cronjob/www/admin/cronjobs.xql}
dbqd.cronjob.www.index.get_package_name {dbqd.cronjob.www.index.get_package_name {
      select p.instance_name 
      from apm_packages p, apm_package_versions v
      where p.package_id = :package_id
      and p.package_key = v.package_key
      and v.enabled_p = 't'
    } {} {} {} c:/web/openacs-4/packages/cronjob/www/index.xql}
dbqd.curriculum.lib.admin-curriculums-oracle.select_curriculums {dbqd.curriculum.lib.admin-curriculums-oracle.select_curriculums {
    select   cc.curriculum_id,
             cc.name as curriculum_name,
             dbms_lob.substr(cc.description,:truncation_length,1) as curriculum_desc,
             case when dbms_lob.getlength(cc.description) > :truncation_length
                  then 1 else 0 end as curr_desc_trunc_p,
             cc.sort_key as curriculum_sort_order,
             ce.element_id,
             ce.name as element_name,
             dbms_lob.substr(ce.description,:truncation_length,1) as element_desc,
             case when dbms_lob.getlength(ce.description) > :truncation_length
                  then 1 else 0 end as elem_desc_trunc_p,
             ce.url as element_url,
             ce.enabled_p as element_enabled_p,
             ce.sort_key as element_sort_order,
             author.first_names as author_first_names,
             author.last_name as author_last_name,
             author.email as author_email,
             st.pretty_name as pretty_state,
             st.short_name as state_short_name,
             st.state_id,
             st.hide_fields,
             assignee.party_id as assignee_party_id,
             assignee.email as assignee_email,
             assignee.name as assignee_name
    from     cu_curriculums cc,
             cu_elements ce,
             cc_users author,
             (select rpm.case_id,
                     p.party_id,
                     p.email,
                     acs_object.name(p.party_id) as name
              from   workflow_case_role_party_map rpm,
                     parties p
              where  rpm.role_id = :action_role
              and    p.party_id = rpm.party_id
             ) assignee,
             workflow_cases cas,
             workflow_case_fsm cfsm,
             workflow_fsm_states st 
    where    cc.curriculum_id = ce.curriculum_id(+)
    and      cc.package_id = :package_id
    and      author.user_id = cc.owner_id
    and      cfsm.case_id = cas.case_id
    and      st.state_id = cfsm.current_state
    and      cas.workflow_id = :workflow_id
    and      cas.object_id = cc.curriculum_id
    and      cas.case_id = assignee.case_id(+)
    $where_clauses
    order by cc.sort_key,
             ce.sort_key
        } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/curriculum/lib/admin-curriculums-oracle.xql}
dbqd.curriculum.lib.admin-curriculums.select_curriculums {dbqd.curriculum.lib.admin-curriculums.select_curriculums {
    select    cc.curriculum_id,
              cc.name as curriculum_name,
              substring(cc.description from 1 for :truncation_length) as curriculum_desc,
              case when length(cc.description) > :truncation_length
                   then 1 else 0 end as curr_desc_trunc_p,
              cc.sort_key as curriculum_sort_order,
              ce.element_id,
              ce.name as element_name,
              substring(ce.description from 1 for :truncation_length) as element_desc,
              case when length(ce.description) > :truncation_length
                   then 1 else 0 end as elem_desc_trunc_p,
              ce.url as element_url,
              ce.enabled_p as element_enabled_p,
              ce.sort_key as element_sort_order,
              author.first_names as author_first_names,
              author.last_name as author_last_name,
              author.email as author_email,
              st.pretty_name as pretty_state,
              st.short_name as state_short_name,
              st.state_id,
              st.hide_fields,
              assignee.party_id as assignee_party_id,
              assignee.email as assignee_email,
              assignee.name as assignee_name
    from      cu_curriculums cc left outer join
              cu_elements ce using (curriculum_id),
              cc_users author,
              workflow_cases cas left outer join
              (select rpm.case_id,
                     p.party_id,
                     p.email,
                     acs_object__name(p.party_id) as name
               from   workflow_case_role_party_map rpm,
                     parties p
               where  rpm.role_id = :action_role
               and    p.party_id = rpm.party_id
              ) assignee using (case_id),
              workflow_case_fsm cfsm,
              workflow_fsm_states st 
    where     cc.package_id = :package_id
    and       author.user_id = cc.owner_id
    and       cfsm.case_id = cas.case_id
    and       st.state_id = cfsm.current_state
    and       cas.workflow_id = :workflow_id
    and       cas.object_id = cc.curriculum_id
    $where_clauses
    order by  cc.sort_key,
              ce.sort_key
        } {} {} {postgresql 7.1} c:/web/openacs-4/packages/curriculum/lib/admin-curriculums-postgresql.xql}
dbqd.curriculum.lib.admin-curriculums.select_resolve_role {dbqd.curriculum.lib.admin-curriculums.select_resolve_role {
      
    select a.assigned_role
    from   workflow_actions a,
           workflow_fsm_action_en_in_st aeis
    where  a.action_id = aeis.action_id
    and    aeis.state_id = :initial_state_id
    and    a.workflow_id = :workflow_id
    and    a.assigned_role is not null

      } {} {} {} c:/web/openacs-4/packages/curriculum/lib/admin-curriculums.xql}
dbqd.curriculum.lib.curriculum-ave-oracle.user_search {dbqd.curriculum.lib.curriculum-ave-oracle.user_search {
	    select distinct u.first_names || ' ' || u.last_name || ' (' || u.email || ')' as name,
	           u.user_id
	    from   cc_users u
	    where  upper(nvl(u.first_names || ' ', '')  ||
			nvl(u.last_name || ' ', '') ||
			u.email || ' ' ||
			nvl(u.screen_name, '')) like upper('%'||:value||'%')
	    order  by name
  } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/curriculum/lib/curriculum-ave-oracle.xql}
dbqd.curriculum.lib.curriculum-ave.user_search {dbqd.curriculum.lib.curriculum-ave.user_search {
	    select distinct u.first_names || ' ' || u.last_name || ' (' || u.email || ')' as name,
	           u.user_id
	    from   cc_users u
	    where  upper(coalesce(u.first_names || ' ', '')  ||
			coalesce(u.last_name || ' ', '') ||
			u.email || ' ' ||
			coalesce(u.screen_name, '')) like upper('%'||:value||'%')
	    order  by name
  } {} {} {postgresql 7.1} c:/web/openacs-4/packages/curriculum/lib/curriculum-ave-postgresql.xql}
dbqd.curriculum.tcl.curriculum-init.get_all_curriculum_package_ids {dbqd.curriculum.tcl.curriculum-init.get_all_curriculum_package_ids {
            select distinct package_id
            from   cu_curriculums
        } {} {} {} c:/web/openacs-4/packages/curriculum/tcl/curriculum-init.xql}
dbqd.curriculum.tcl.curriculum-procs-oracle.curriculum::delete.delete_curriculum {dbqd.curriculum.tcl.curriculum-procs-oracle.curriculum::delete.delete_curriculum {
		 declare begin
		     cu_curriculum.del(:curriculum_id);
		 end;
        } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/curriculum/tcl/curriculum-procs-oracle.xql}
dbqd.curriculum.tcl.curriculum-procs-oracle.curriculum::delete.delete_workflow_case {dbqd.curriculum.tcl.curriculum-procs-oracle.curriculum::delete.delete_workflow_case {
		declare begin
			:1 := workflow_case.del(:case_id);
		end;
        } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/curriculum/tcl/curriculum-procs-oracle.xql}
dbqd.curriculum.tcl.curriculum-procs.curriculum::delete.delete_curriculum {dbqd.curriculum.tcl.curriculum-procs.curriculum::delete.delete_curriculum {
	      select cu_curriculum__del(:curriculum_id);
        } {} {} {postgresql 7.1} c:/web/openacs-4/packages/curriculum/tcl/curriculum-procs-postgresql.xql}
dbqd.curriculum.tcl.curriculum-procs.curriculum::delete.delete_workflow_case {dbqd.curriculum.tcl.curriculum-procs.curriculum::delete.delete_workflow_case {
		select workflow_case__delete(:case_id);
        } {} {} {postgresql 7.1} c:/web/openacs-4/packages/curriculum/tcl/curriculum-procs-postgresql.xql}
dbqd.curriculum.tcl.curriculum-procs.curriculum::edit.update_curriculum {dbqd.curriculum.tcl.curriculum-procs.curriculum::edit.update_curriculum {
            update cu_curriculums
            set    name = :name,
                   description = :description,
                   desc_format = :desc_format,
                   owner_id = :owner_id
		 where  curriculum_id = :curriculum_id
        } {} {} {} c:/web/openacs-4/packages/curriculum/tcl/curriculum-procs.xql}
dbqd.curriculum.tcl.curriculum-procs.curriculum::change_owner.update_curriculum_owner {dbqd.curriculum.tcl.curriculum-procs.curriculum::change_owner.update_curriculum_owner {
	    update cu_curriculums
	    set    owner_id = :owner_id
	    where  curriculum_id = :curriculum_id
        } {} {} {} c:/web/openacs-4/packages/curriculum/tcl/curriculum-procs.xql}
dbqd.curriculum.tcl.curriculum-procs.curriculum::get.get_curriculum_data {dbqd.curriculum.tcl.curriculum-procs.curriculum::get.get_curriculum_data {
	    select *
	    from   cu_curriculums
	    where  curriculum_id = :curriculum_id
        } {} {} {} c:/web/openacs-4/packages/curriculum/tcl/curriculum-procs.xql}
dbqd.curriculum.tcl.curriculum-procs.curriculum::owner::get_assignees.select_curriculum_owner {dbqd.curriculum.tcl.curriculum-procs.curriculum::owner::get_assignees.select_curriculum_owner {
	    select owner_id
	    from   cu_curriculums
	    where  curriculum_id = :object_id
        } {} {} {} c:/web/openacs-4/packages/curriculum/tcl/curriculum-procs.xql}
dbqd.curriculum.tcl.element-procs-oracle.curriculum::element::delete.delete_element {dbqd.curriculum.tcl.element-procs-oracle.curriculum::element::delete.delete_element {
		 declare begin
		     cu_element.del(:element_id);
		 end;
        } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/curriculum/tcl/element-procs-oracle.xql}
dbqd.curriculum.tcl.element-procs.curriculum::element::delete.delete_element {dbqd.curriculum.tcl.element-procs.curriculum::element::delete.delete_element {
	      select cu_element__del(:element_id);
        } {} {} {postgresql 7.1} c:/web/openacs-4/packages/curriculum/tcl/element-procs-postgresql.xql}
dbqd.curriculum.tcl.element-procs.curriculum::element::edit.update_curriculum_element {dbqd.curriculum.tcl.element-procs.curriculum::element::edit.update_curriculum_element {
	    update cu_elements
	    set    name = :name,
	           description = :description,
	           desc_format = :desc_format,
	           url = :url,
			external_p = :external_p
	    where  element_id = :element_id
        } {} {} {} c:/web/openacs-4/packages/curriculum/tcl/element-procs.xql}
dbqd.curriculum.tcl.element-procs.curriculum::element::enable.update_element_enabled_p {dbqd.curriculum.tcl.element-procs.curriculum::element::enable.update_element_enabled_p {
	    update cu_elements
	    set    enabled_p = 't'
	    where  element_id = :element_id
        } {} {} {} c:/web/openacs-4/packages/curriculum/tcl/element-procs.xql}
dbqd.curriculum.tcl.element-procs.curriculum::element::disable.update_element_disabled_p {dbqd.curriculum.tcl.element-procs.curriculum::element::disable.update_element_disabled_p {
	    update cu_elements
	    set    enabled_p = 'f'
	    where  element_id = :element_id
        } {} {} {} c:/web/openacs-4/packages/curriculum/tcl/element-procs.xql}
dbqd.curriculum.tcl.element-procs.curriculum::element::get.get_element_data {dbqd.curriculum.tcl.element-procs.curriculum::element::get.get_element_data {
          select *
          from   cu_elements
          where  element_id = :element_id
        } {} {} {} c:/web/openacs-4/packages/curriculum/tcl/element-procs.xql}
dbqd.curriculum.tcl.misc-procs-oracle.curriculum::curriculum_filter_internal.map_insert {dbqd.curriculum.tcl.misc-procs-oracle.curriculum::curriculum_filter_internal.map_insert {
         insert into cu_user_element_map
         (user_id, element_id, curriculum_id, package_id, completion_date)
         select :user_id,
                :element_id,
                :curriculum_id,
                :package_id,
                sysdate
         from   dual
         where  not exists (select 1
                            from   cu_user_element_map
                            where  user_id = :user_id
                            and    element_id = :element_id)
        } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/curriculum/tcl/misc-procs-oracle.xql}
dbqd.curriculum.tcl.misc-procs-oracle.curriculum::enabled_elements.element_ns_set_list {dbqd.curriculum.tcl.misc-procs-oracle.curriculum::enabled_elements.element_ns_set_list {

            select   cee.element_id,
                     cc.curriculum_id,
                     cc.name as curriculum_name,
                     cee.url,
                     cee.external_p,
                     cee.name
            from    (select   curriculum_id
                     from     cu_curriculums
                     where    package_id = :package_id
                     MINUS
                     select   curriculum_id
                     from     cu_user_curriculum_map
                     where    user_id = :user_id
                     and      package_id = :package_id) desired,
                     workflow_cases cas,
                     workflow_case_fsm cfsm,
                     cu_curriculums cc,
                     cu_elements_enabled cee
            where    cc.package_id = :package_id
            and      desired.curriculum_id = cc.curriculum_id
            and      cc.curriculum_id = cee.curriculum_id
            and      cas.object_id = cc.curriculum_id
            and      cfsm.case_id = cas.case_id
            and      cfsm.current_state = :state_id
            order by cc.sort_key,
                     cee.sort_key

        } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/curriculum/tcl/misc-procs-oracle.xql}
dbqd.curriculum.tcl.misc-procs-oracle.curriculum::user_elements.user_element_ns_set_list {dbqd.curriculum.tcl.misc-procs-oracle.curriculum::user_elements.user_element_ns_set_list {

    select   published.curriculum_id,
             published.name as curriculum_name,
             dbms_lob.substr(published.description,:truncation_length,1) as curriculum_desc,
             case when dbms_lob.getlength(published.description) > :truncation_length
                  then 1 else 0 end as curr_desc_trunc_p,
             case when ucm.curriculum_id is null
                  then 0 else 1 end as undesired_p,
             cee.element_id,
             cee.name as element_name,
             dbms_lob.substr(cee.description,:truncation_length,1) as element_desc,
             case when dbms_lob.getlength(cee.description) > :truncation_length
                  then 1 else 0 end as elem_desc_trunc_p,
             cee.url,
             cee.external_p
    from     (select   cc.*
              from     cu_curriculums cc,
                       workflow_cases cas,
                       workflow_case_fsm cfsm
              where    cc.package_id = :package_id
              and      cas.object_id = cc.curriculum_id
              and      cfsm.case_id = cas.case_id
              and      cfsm.current_state = :state_id
             ) published,
             cu_user_curriculum_map ucm,
             cu_elements_enabled cee
    where    published.package_id = ucm.package_id(+)
    and      published.curriculum_id = ucm.curriculum_id(+)
    and      :user_id = ucm.user_id(+)
    and      published.curriculum_id = cee.curriculum_id
    order by published.sort_key,
             cee.sort_key

        } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/curriculum/tcl/misc-procs-oracle.xql}
dbqd.curriculum.tcl.misc-procs.curriculum::curriculum_filter_internal.map_insert {dbqd.curriculum.tcl.misc-procs.curriculum::curriculum_filter_internal.map_insert {
         insert into cu_user_element_map
         (user_id, element_id, curriculum_id, package_id, completion_date)
         select :user_id,
                :element_id,
                :curriculum_id,
                :package_id,
                current_timestamp
         where  not exists (select 1
                            from   cu_user_element_map
                            where  user_id = :user_id
                            and    element_id = :element_id)
        } {} {} {postgresql 7.1} c:/web/openacs-4/packages/curriculum/tcl/misc-procs-postgresql.xql}
dbqd.curriculum.tcl.misc-procs.curriculum::enabled_elements.element_ns_set_list {dbqd.curriculum.tcl.misc-procs.curriculum::enabled_elements.element_ns_set_list {

            select   cee.element_id,
                     cc.curriculum_id,
                     cc.name as curriculum_name,
                     cee.url,
                     cee.external_p,
                     cee.name
            from    (select   curriculum_id
                     from     cu_curriculums
                     where    package_id = :package_id
                     EXCEPT
                     select   curriculum_id
                     from     cu_user_curriculum_map
                     where    user_id = :user_id
                     and      package_id = :package_id) desired,
                     workflow_cases cas,
                     workflow_case_fsm cfsm,
                     cu_curriculums cc,
                     cu_elements_enabled cee
            where    cc.package_id = :package_id
            and      desired.curriculum_id = cc.curriculum_id
            and      cc.curriculum_id = cee.curriculum_id
            and      cas.object_id = cc.curriculum_id
            and      cfsm.case_id = cas.case_id
            and      cfsm.current_state = :state_id
            order by cc.sort_key,
                     cee.sort_key

        } {} {} {postgresql 7.1} c:/web/openacs-4/packages/curriculum/tcl/misc-procs-postgresql.xql}
dbqd.curriculum.tcl.misc-procs.curriculum::user_elements.user_element_ns_set_list {dbqd.curriculum.tcl.misc-procs.curriculum::user_elements.user_element_ns_set_list {

    select   published.curriculum_id,
             published.name as curriculum_name,
             substring(published.description from 1 for :truncation_length) as curriculum_desc,
             case when length(published.description) > :truncation_length
                  then 1 else 0 end as curr_desc_trunc_p,
             case when ucm.curriculum_id is null
                  then 0 else 1 end as undesired_p,
             cee.element_id,
             cee.name as element_name,
             substring(cee.description from 1 for :truncation_length) as element_desc,
             case when length(cee.description) > :truncation_length
                  then 1 else 0 end as elem_desc_trunc_p,
             cee.url,
             cee.external_p
    from     (select   cc.*
              from     cu_curriculums cc,
                       workflow_cases cas,
                       workflow_case_fsm cfsm
              where    cc.package_id = :package_id
              and      cas.object_id = cc.curriculum_id
              and      cfsm.case_id = cas.case_id
              and      cfsm.current_state = :state_id
             ) published left outer join
             cu_user_curriculum_map ucm
             on  published.package_id = ucm.package_id
             and published.curriculum_id = ucm.curriculum_id
             and ucm.user_id = :user_id,
             cu_elements_enabled cee
    where    published.curriculum_id = cee.curriculum_id
    order by published.sort_key,
             cee.sort_key

        } {} {} {postgresql 7.1} c:/web/openacs-4/packages/curriculum/tcl/misc-procs-postgresql.xql}
dbqd.curriculum.tcl.misc-procs.curriculum::get_curriculum_info.curriculum_info {dbqd.curriculum.tcl.misc-procs.curriculum::get_curriculum_info.curriculum_info {
            select   curriculum_id as curriculum_ids,
                     name as curriculum_names
            from     cu_curriculums
            where    package_id = :package_id
            order by sort_key
        } {} {} {} c:/web/openacs-4/packages/curriculum/tcl/misc-procs.xql}
dbqd.curriculum.tcl.misc-procs.curriculum::reset_one_curriculum.element_ids {dbqd.curriculum.tcl.misc-procs.curriculum::reset_one_curriculum.element_ids {
            select element_id
            from   cu_elements_enabled
            where  curriculum_id = :curriculum_id
            and    package_id = :package_id
        } {} {} {} c:/web/openacs-4/packages/curriculum/tcl/misc-procs.xql}
dbqd.curriculum.tcl.misc-procs.curriculum::get_curriculum_stats.curriculum_stats {dbqd.curriculum.tcl.misc-procs.curriculum::get_curriculum_stats.curriculum_stats {
            select count(*) as curriculum_count
            from   cu_curriculums
            where  package_id = :package_id
        } {} {} {} c:/web/openacs-4/packages/curriculum/tcl/misc-procs.xql}
dbqd.curriculum.www.add-to-bar.add_published_curriculums_to_bar {dbqd.curriculum.www.add-to-bar.add_published_curriculums_to_bar {
	delete from cu_user_curriculum_map
      where user_id = :user_id
      and package_id = :package_id
	$extra_where_clause
        } {} {} {} c:/web/openacs-4/packages/curriculum/www/add-to-bar.xql}
dbqd.curriculum.www.admin.curriculum-swap.prior_sort_order {dbqd.curriculum.www.admin.curriculum-swap.prior_sort_order {
       
	select max(sort_key) 
	from   cu_curriculums
	where  package_id = :package_id
	and    sort_key < :sort_order
    
      } {} {} {} c:/web/openacs-4/packages/curriculum/www/admin/curriculum-swap.xql}
dbqd.curriculum.www.admin.curriculum-swap.next_sort_order {dbqd.curriculum.www.admin.curriculum-swap.next_sort_order {
       
	select min(sort_key) 
	from   cu_curriculums
	where  package_id = :package_id
	and    sort_key > :sort_order
    
      } {} {} {} c:/web/openacs-4/packages/curriculum/www/admin/curriculum-swap.xql}
dbqd.curriculum.www.admin.curriculum-swap.swap_sort_orders {dbqd.curriculum.www.admin.curriculum-swap.swap_sort_orders {

      update cu_curriculums
      set    sort_key = case when sort_key = :sort_order
                             then $new_sort_order
                             when sort_key = :new_sort_order
                             then $sort_order end
      where  package_id = :package_id
      and    sort_key in (:sort_order, :new_sort_order)

      } {} {} {} c:/web/openacs-4/packages/curriculum/www/admin/curriculum-swap.xql}
dbqd.curriculum.www.admin.element-swap.prior_sort_order {dbqd.curriculum.www.admin.element-swap.prior_sort_order {
       
	select max(sort_key) 
	from   cu_elements
	where  curriculum_id = :curriculum_id
	and    sort_key < :sort_order
    
      } {} {} {} c:/web/openacs-4/packages/curriculum/www/admin/element-swap.xql}
dbqd.curriculum.www.admin.element-swap.next_sort_order {dbqd.curriculum.www.admin.element-swap.next_sort_order {
       
	select min(sort_key) 
	from   cu_elements
	where  curriculum_id = :curriculum_id
	and    sort_key > :sort_order
    
      } {} {} {} c:/web/openacs-4/packages/curriculum/www/admin/element-swap.xql}
dbqd.curriculum.www.admin.element-swap.swap_sort_orders {dbqd.curriculum.www.admin.element-swap.swap_sort_orders {

      update cu_elements
      set    sort_key = case when sort_key = :sort_order
                             then $new_sort_order
                             when sort_key = :new_sort_order
                             then $sort_order end
      where  curriculum_id = :curriculum_id
      and    sort_key in (:sort_order, :new_sort_order)

      } {} {} {} c:/web/openacs-4/packages/curriculum/www/admin/element-swap.xql}
dbqd.curriculum.www.ext-oracle.insert_into_map_table {dbqd.curriculum.www.ext-oracle.insert_into_map_table {
        insert into cu_user_element_map
               (user_id, element_id, curriculum_id, package_id, completion_date)
               select :user_id,
                      :element_id,
                      :curriculum_id,
                      :package_id,
                      sysdate
               from dual
        where not exists
       (select 1 from cu_user_element_map 
	 where user_id = :user_id
	 and   element_id = :element_id)
        } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/curriculum/www/ext-oracle.xql}
dbqd.curriculum.www.ext.insert_into_map_table {dbqd.curriculum.www.ext.insert_into_map_table {
        insert into cu_user_element_map
               (user_id, element_id, curriculum_id, package_id, completion_date)
               select :user_id,
                      :element_id,
                      :curriculum_id,
                      :package_id,
                      current_timestamp
        where not exists
       (select 1 from cu_user_element_map 
	 where user_id = :user_id
	 and   element_id = :element_id)
        } {} {} {postgresql 7.1} c:/web/openacs-4/packages/curriculum/www/ext-postgresql.xql}
dbqd.curriculum.www.ext.get_destination_url {dbqd.curriculum.www.ext.get_destination_url {
    select url
    from   cu_elements
    where  element_id = :element_id
        } {} {} {} c:/web/openacs-4/packages/curriculum/www/ext.xql}
dbqd.curriculum.www.remove-from-bar-oracle.user_curriculum_map_insert {dbqd.curriculum.www.remove-from-bar-oracle.user_curriculum_map_insert {
         insert into cu_user_curriculum_map
         (user_id, curriculum_id, package_id)
         select :user_id,
                :curriculum_id,
                :package_id
         from   dual
         where  not exists (select 1
                            from   cu_user_curriculum_map
                            where  user_id = :user_id
                            and    curriculum_id = :curriculum_id)
        } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/curriculum/www/remove-from-bar-oracle.xql}
dbqd.curriculum.www.remove-from-bar-oracle.desired_curriculums {dbqd.curriculum.www.remove-from-bar-oracle.desired_curriculums {
            select   curriculum_id
            from     cu_curriculums
            where    package_id = :package_id
            MINUS
            select   curriculum_id
            from     cu_user_curriculum_map
            where    user_id = :user_id
            and      package_id = :package_id
        } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/curriculum/www/remove-from-bar-oracle.xql}
dbqd.curriculum.www.remove-from-bar.user_curriculum_map_insert {dbqd.curriculum.www.remove-from-bar.user_curriculum_map_insert {
         insert into cu_user_curriculum_map
         (user_id, curriculum_id, package_id)
         select :user_id,
                :curriculum_id,
                :package_id
         where  not exists (select 1
                            from   cu_user_curriculum_map
                            where  user_id = :user_id
                            and    curriculum_id = :curriculum_id)
        } {} {} {postgresql 7.1} c:/web/openacs-4/packages/curriculum/www/remove-from-bar-postgresql.xql}
dbqd.curriculum.www.remove-from-bar.desired_curriculums {dbqd.curriculum.www.remove-from-bar.desired_curriculums {
            select   curriculum_id
            from     cu_curriculums
            where    package_id = :package_id
            EXCEPT
            select   curriculum_id
            from     cu_user_curriculum_map
            where    user_id = :user_id
            and      package_id = :package_id
        } {} {} {postgresql 7.1} c:/web/openacs-4/packages/curriculum/www/remove-from-bar-postgresql.xql}
dbqd.curriculum.www.start-over.start_over {dbqd.curriculum.www.start-over.start_over {
	delete from cu_user_element_map
      where user_id = :user_id
      and package_id = :package_id
	$extra_where_clause
        } {} {} {} c:/web/openacs-4/packages/curriculum/www/start-over.xql}
dbqd.directory.tcl.directory-procs-oracle.dir_app_group_info.subsite_p_1 {dbqd.directory.tcl.directory-procs-oracle.dir_app_group_info.subsite_p_1 {
      
        select * from (
          select object_id as subsite_id
            from site_nodes n
           where (select package_key from apm_packages p where p.package_id = n.object_id) = 'acs-subsite' 
         connect by node_id = prior parent_id 
           start with node_id = :node_id 
           order by level
        ) where rownum = 1
    
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/directory/tcl/directory-procs-oracle.xql}
dbqd.directory.tcl.directory-procs-oracle.dir_app_group_info.subsite_p_2 {dbqd.directory.tcl.directory-procs-oracle.dir_app_group_info.subsite_p_2 {
      
          select object_id as subsite_id, acs_object.name(object_id) as subsite_name
            from site_nodes n
           where (select package_key from apm_packages p where p.package_id = n.object_id) = 'acs-subsite' 
         connect by node_id = prior parent_id 
           start with node_id = :node_id 
           order by level
    
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/directory/tcl/directory-procs-oracle.xql}
dbqd.directory.tcl.directory-procs.dir_app_group_info.subsite_p_1 {dbqd.directory.tcl.directory-procs.dir_app_group_info.subsite_p_1 {
    
         select s2.object_id as subsite_id, tree_level(s2.tree_sortkey) as level
         from site_nodes s1, site_nodes s2, apm_packages p
         where s1.node_id = :node_id
            and s1.tree_sortkey between s2.tree_sortkey and tree_right(s2.tree_sortkey)
            and p.package_id = s2.object_id and p.package_key = 'acs-subsite'
         order by level
         limit 1

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/directory/tcl/directory-procs-postgresql.xql}
dbqd.directory.tcl.directory-procs.dir_app_group_info.subsite_p_2 {dbqd.directory.tcl.directory-procs.dir_app_group_info.subsite_p_2 {
    
         select s2.object_id as subsite_id,
             tree_level(s2.tree_sortkey) as level,
             acs_object__name(object_id) as subsite_name
         from site_nodes s1, site_nodes s2, apm_packages p
         where s1.node_id = :node_id
            and s1.tree_sortkey between s2.tree_sortkey and tree_right(s2.tree_sortkey)
            and p.package_id = s2.object_id and p.package_key = 'acs-subsite'
         order by level
         limit 1

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/directory/tcl/directory-procs-postgresql.xql}
dbqd.directory.tcl.directory-procs.dir_alpha_nav_bar.initial_list {dbqd.directory.tcl.directory-procs.dir_alpha_nav_bar.initial_list {
      
	select distinct upper(substr(last_name,1,1)) 
          from $table_and_group
      } {} {} {} c:/web/openacs-4/packages/directory/tcl/directory-procs.xql}
dbqd.directory.tcl.directory-procs.dir_app_group_info.n_id {dbqd.directory.tcl.directory-procs.dir_app_group_info.n_id {
      
        select node_id from site_nodes
        where object_id = :package_id
    
      } {} {} {} c:/web/openacs-4/packages/directory/tcl/directory-procs.xql}
dbqd.directory.tcl.directory-procs.dir_app_group_info.g_i {dbqd.directory.tcl.directory-procs.dir_app_group_info.g_i {
      
      select g.group_id, g.group_name
        from groups g, application_groups a
       where a.package_id = :subsite_id
         and a.group_id = g.group_id
    
      } {} {} {} c:/web/openacs-4/packages/directory/tcl/directory-procs.xql}
dbqd.directory.tcl.directory-procs.dir_subsite_info.n_id {dbqd.directory.tcl.directory-procs.dir_subsite_info.n_id {
      
        select node_id from site_nodes
        where object_id = :package_id
    
      } {} {} {} c:/web/openacs-4/packages/directory/tcl/directory-procs.xql}
dbqd.directory.tcl.directory-procs.dir_alpha_nav_bar.table_and_group_1 {dbqd.directory.tcl.directory-procs.dir_alpha_nav_bar.table_and_group_1 {
          dir_all_users m where 1=1
      } {} {} {} c:/web/openacs-4/packages/directory/tcl/directory-procs.xql}
dbqd.directory.tcl.directory-procs.dir_alpha_nav_bar.table_and_group_2 {dbqd.directory.tcl.directory-procs.dir_alpha_nav_bar.table_and_group_2 {
          dir_group_members m where group_id = :group_id
      } {} {} {} c:/web/openacs-4/packages/directory/tcl/directory-procs.xql}
dbqd.directory.www.index-oracle.get_all_n_users {dbqd.directory.www.index-oracle.get_all_n_users {
         select * from (
           select first_names, last_name, email, user_id, rownum as my_rownum from (
              select m.* from $table_and_group
              $where_clause
              $order_clause
           )
         ) where my_rownum between :start_row and [expr $start_row + $num_rows - 1]
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/directory/www/index-oracle.xql}
dbqd.directory.www.index.get_all_n_users {dbqd.directory.www.index.get_all_n_users {
         select m.* from $table_and_group
         $where_clause
         $order_clause
         offset [expr $start_row - 1] limit $num_rows
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/directory/www/index-postgresql.xql}
dbqd.directory.www.index.total_users_1 {dbqd.directory.www.index.total_users_1 {
         select count(1)
         from $table_and_group
      } {} {} {} c:/web/openacs-4/packages/directory/www/index.xql}
dbqd.directory.www.index.total_users_2 {dbqd.directory.www.index.total_users_2 {
         select count(1)
         from $table_and_group
         $where_clause
      } {} {} {} c:/web/openacs-4/packages/directory/www/index.xql}
dbqd.directory.www.index.table_and_group_1 {dbqd.directory.www.index.table_and_group_1 {
          dir_all_users m where 1=1
      } {} {} {} c:/web/openacs-4/packages/directory/www/index.xql}
dbqd.directory.www.index.table_and_group_2 {dbqd.directory.www.index.table_and_group_2 {
          dir_group_members m where group_id = :group_id
      } {} {} {} c:/web/openacs-4/packages/directory/www/index.xql}
dbqd.directory.www.index.order_by_name {dbqd.directory.www.index.order_by_name {
        order by lower(last_name)
      } {} {} {} c:/web/openacs-4/packages/directory/www/index.xql}
dbqd.directory.www.index.order_by_email {dbqd.directory.www.index.order_by_email {
        order by email
      } {} {} {} c:/web/openacs-4/packages/directory/www/index.xql}
dbqd.directory.www.index.order_by_name- {dbqd.directory.www.index.order_by_name- {
        order by lower(last_name) desc
      } {} {} {} c:/web/openacs-4/packages/directory/www/index.xql}
dbqd.directory.www.index.order_by_email- {dbqd.directory.www.index.order_by_email- {
        order by email desc
      } {} {} {} c:/web/openacs-4/packages/directory/www/index.xql}
dbqd.directory.www.index.where_1 {dbqd.directory.www.index.where_1 {
         and (lower(first_names) like '%' || lower(:search) || '%'
              or lower(last_name) like '%' || lower(:search) || '%'
              or email like '%' || lower(:search) || '%')
      } {} {} {} c:/web/openacs-4/packages/directory/www/index.xql}
dbqd.directory.www.index.where_2 {dbqd.directory.www.index.where_2 {
         and upper(last_name) like :letter || '%'
      } {} {} {} c:/web/openacs-4/packages/directory/www/index.xql}
dbqd.directory.www.index.get_all_users {dbqd.directory.www.index.get_all_users {
         select m.* from $table_and_group
           $where_clause
           $order_clause
      } {} {} {} c:/web/openacs-4/packages/directory/www/index.xql}
dbqd.download.tcl.download-procs-oracle.download_file_downloader.download_insert {dbqd.download.tcl.download-procs-oracle.download_file_downloader.download_insert {
      
                insert into download_downloads (
                download_id, 
                user_id, 
                revision_id, 
                download_date, 
                download_ip,
                download_hostname,
                user_agent,
                reason_id,
                reason)
                values
                (:download_id, 
                :user_id, 
                :revision_id, 
                sysdate, 
                :download_ip,
                :download_hostname,
                :user_agent,
                :reason_id,
                :reason_other)
            
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/download/tcl/download-procs-oracle.xql}
dbqd.download.tcl.download-procs-oracle.download_insert_revision.revision_new {dbqd.download.tcl.download-procs-oracle.download_insert_revision.revision_new {
      
        declare
          v_revision_id integer;
        begin
          v_revision_id := content_revision.new(
           item_id => :archive_id,
           title => :filename,
           description => :version_name,
           revision_id => :revision_id,
           mime_type => :mime_type,
           creation_user => :user_id,
           creation_ip => :creation_ip
          );

          insert into download_archive_revisions (revision_id,    approved_p) values
                                                 (v_revision_id, :approved_p);
        end;
    
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/download/tcl/download-procs-oracle.xql}
dbqd.download.tcl.download-procs-oracle.download_insert_revision.content_add {dbqd.download.tcl.download-procs-oracle.download_insert_revision.content_add {
      
        update cr_revisions
        set    content = empty_blob()
        where  revision_id = :revision_id
        returning content into :1
    
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/download/tcl/download-procs-oracle.xql}
dbqd.download.tcl.download-procs-oracle.download_insert_revision.make_live {dbqd.download.tcl.download-procs-oracle.download_insert_revision.make_live {
      
        begin
        content_item.set_live_revision(:revision_id);
        end;
    
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/download/tcl/download-procs-oracle.xql}
dbqd.download.tcl.download-procs.download_file_downloader.download_insert {dbqd.download.tcl.download-procs.download_file_downloader.download_insert {

insert into download_downloads (
  download_id, 
  user_id, 
  revision_id, 
  download_date, 
  download_ip,
  download_hostname,
  user_agent,
  reason_id,
  reason)
values (
  :download_id, 
  :user_id, 
  :revision_id, 
  current_timestamp, 
  :download_ip,
  :download_hostname,
  :user_agent,
  :reason_id,
  :reason_other)
            
} {} {} {postgresql 7.1} c:/web/openacs-4/packages/download/tcl/download-procs-postgresql.xql}
dbqd.download.tcl.download-procs.download_insert_revision.revision_new {dbqd.download.tcl.download-procs.download_insert_revision.revision_new {

declare
  v_revision_id integer;
begin
  v_revision_id := content_revision__new(
    :filename,
    :version_name,
    now(),
    :mime_type,
    null,
    ' ',
    :archive_id,
    :revision_id,
    now(),
    :user_id,
    :creation_ip
   );

  insert into download_archive_revisions 
  (revision_id, approved_p, file_size) 
  values
  (v_revision_id, :approved_p, :file_size);

  return v_revision_id;
end;
    
} {} {} {postgresql 7.1} c:/web/openacs-4/packages/download/tcl/download-procs-postgresql.xql}
dbqd.download.tcl.download-procs.download_insert_revision.content_add {dbqd.download.tcl.download-procs.download_insert_revision.content_add {

update cr_revisions
set    content = '[cr_create_content_file $archive_id $revision_id $tmpfile]'
where  revision_id = :revision_id
    
} {} {} {postgresql 7.1} c:/web/openacs-4/packages/download/tcl/download-procs-postgresql.xql}
dbqd.download.tcl.download-procs.download_insert_revision.make_live {dbqd.download.tcl.download-procs.download_insert_revision.make_live {

select content_item__set_live_revision( :revision_id );
    
} {} {} {postgresql 7.1} c:/web/openacs-4/packages/download/tcl/download-procs-postgresql.xql}
dbqd.download.tcl.download-procs.download_repository_info.repository_info {dbqd.download.tcl.download-procs.download_repository_info.repository_info {

select repository_id, title, description, help_text 
from download_repository_obj 
where parent_id = :package_id

} {} {} {} c:/web/openacs-4/packages/download/tcl/download-procs.xql}
dbqd.download.tcl.download-procs.download_repository_info.type_info {dbqd.download.tcl.download-procs.download_repository_info.type_info {

select count(*) from download_archive_types 
where repository_id = :repository_id
            
} {} {} {} c:/web/openacs-4/packages/download/tcl/download-procs.xql}
dbqd.download.tcl.download-procs.download_metadata_widget.download_metadata_choices {dbqd.download.tcl.download-procs.download_metadata_widget.download_metadata_choices {

select choice_id, label
from download_metadata_choices
where metadata_id = :metadata_id
order by sort_order

} {} {} {} c:/web/openacs-4/packages/download/tcl/download-procs.xql}
dbqd.download.tcl.download-procs.download_file_downloader.download_count {dbqd.download.tcl.download-procs.download_file_downloader.download_count {

select count(*) from download_downloads 
where download_id = :download_id

} {} {} {} c:/web/openacs-4/packages/download/tcl/download-procs.xql}
dbqd.download.tcl.download-procs.download_validate_metadata.metadata {dbqd.download.tcl.download-procs.download_validate_metadata.metadata {
      
select 
  dam.metadata_id,
  dam.pretty_name,
  dam.data_type,
  dam.required_p
from download_archive_metadata dam
where dam.repository_id = :repository_id and
      dam.computed_p = 'f' and
      (dam.archive_type_id = :archive_type_id or
       dam.archive_type_id is null)
order by sort_key
    
} {} {} {} c:/web/openacs-4/packages/download/tcl/download-procs.xql}
dbqd.download.tcl.download-procs.download_insert_metadata.survsimp_question_info_list {dbqd.download.tcl.download-procs.download_insert_metadata.survsimp_question_info_list {
      
select 
  dam.metadata_id,
  dam.data_type
from download_archive_metadata dam
where dam.repository_id = :repository_id and
      dam.computed_p = 'f' and
      (dam.archive_type_id = :archive_type_id or
       dam.archive_type_id is null)
order by sort_key
    
} {} {} {} c:/web/openacs-4/packages/download/tcl/download-procs.xql}
dbqd.download.tcl.download-procs.download_insert_metadata.metadata_inserts {dbqd.download.tcl.download-procs.download_insert_metadata.metadata_inserts {
      
insert into download_revision_data
(revision_id, metadata_id, $answer_column)
values 
( :revision_id, :metadata_id, :response )
        
} {} {} {} c:/web/openacs-4/packages/download/tcl/download-procs.xql}
dbqd.download.www.admin.approve-or-reject-2-oracle.version_approve {dbqd.download.www.admin.approve-or-reject-2-oracle.version_approve {
      
       update download_archive_revisions
         set approved_p = :approved_p,
             approved_comment = :approved_comment,
             approved_user = :user_id,
             approved_date = sysdate
       where revision_id = :revision_id
    
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/download/www/admin/approve-or-reject-2-oracle.xql}
dbqd.download.www.admin.approve-or-reject-2-oracle.sendmail {dbqd.download.www.admin.approve-or-reject-2-oracle.sendmail {
      
        begin
           :1 := acs_mail_nt.post_request(
                party_from => :user_id,
                party_to => :creation_user,
                expand_group => 'f',
                subject => :subject,
                message => :body);
        end;
    
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/download/www/admin/approve-or-reject-2-oracle.xql}
dbqd.download.www.admin.approve-or-reject-2.version_approve {dbqd.download.www.admin.approve-or-reject-2.version_approve {
      
       update download_archive_revisions
         set approved_p = :approved_p,
             approved_comment = :approved_comment,
             approved_user = :user_id,
             approved_date = current_timestamp
       where revision_id = :revision_id
    
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/download/www/admin/approve-or-reject-2-postgresql.xql}
dbqd.download.www.admin.approve-or-reject-2.sendmail {dbqd.download.www.admin.approve-or-reject-2.sendmail {

		declare
			v_id   integer;
        begin
          v_id := acs_mail_nt__post_request(
                :user_id,           -- p_party_from
                :creation_user,     -- p_party_to
                'f',                -- p_expand_group
                :subject,           -- p_subject
                :message,           -- p_message
                0                   -- p_max_retries
          );

		  return v_id;
        end;
    
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/download/www/admin/approve-or-reject-2-postgresql.xql}
dbqd.download.www.admin.approve-or-reject-2.creation_email_select {dbqd.download.www.admin.approve-or-reject-2.creation_email_select {
      
        select da.archive_name,
               dar.creation_user,
               dar.version_name
          from download_arch_revisions_obj dar, download_archives_obj da
         where da.archive_id = dar.archive_id and dar.revision_id = :revision_id
    
      } {} {} {} c:/web/openacs-4/packages/download/www/admin/approve-or-reject-2.xql}
dbqd.download.www.admin.approve-or-reject-2.approving_user_select {dbqd.download.www.admin.approve-or-reject-2.approving_user_select {
      
        select email as approving_email,
               first_names || ' ' || last_name as approving_name
          from cc_users 
         where user_id = :user_id
    
      } {} {} {} c:/web/openacs-4/packages/download/www/admin/approve-or-reject-2.xql}
dbqd.download.www.admin.approve-or-reject-oracle.revision_info_select {dbqd.download.www.admin.approve-or-reject-oracle.revision_info_select {
      
select da.repository_id as repository_id,
       da.archive_id,
       da.archive_name,
       da.summary,
       dar.revision_id,
       dar.file_name,
       dar.version_name,
       round(dbms_lob.getlength(dar.content)/1024) as file_size,
       decode(da.latest_revision, dar.revision_id, 't', 'f') as current_version_p,
       dar.creation_user,
       dar.creation_date,
       u.last_name || ', ' || u.first_names as creation_user_name
from   download_archives_obj da,
       download_arch_revisions_obj dar,
       cc_users u
where  da.archive_id = dar.archive_id and
       dar.revision_id = :revision_id and
       u.user_id = dar.creation_user

} {} {} {oracle 8.1.6} c:/web/openacs-4/packages/download/www/admin/approve-or-reject-oracle.xql}
dbqd.download.www.admin.approve-or-reject.revision_info_select {dbqd.download.www.admin.approve-or-reject.revision_info_select {
      
select da.repository_id as repository_id,
       da.archive_id,
       da.archive_name,
       da.summary,
       dar.revision_id,
       dar.file_name,
       dar.version_name,
       dar.file_size / 1024 as file_size,
       case when da.latest_revision = dar.revision_id then 't' else 'f' end 
         as current_version_p,
       dar.creation_user,
       dar.creation_date,
       u.last_name || ', ' || u.first_names as creation_user_name
from   download_archives_obj da,
       download_arch_revisions_obj dar,
       cc_users u
where  da.archive_id = dar.archive_id and
       dar.revision_id = :revision_id and
       u.user_id = dar.creation_user

} {} {} {postgresql 7.1} c:/web/openacs-4/packages/download/www/admin/approve-or-reject-postgresql.xql}
dbqd.download.www.admin.report-by-ip-oracle.download_table {dbqd.download.www.admin.report-by-ip-oracle.download_table {
      
    select d.download_ip,
           nvl(min(d.download_hostname),'unavailable') as download_hostname,
           count(*) as num_downloads
     from download_downloads_repository d, cc_users u
     where d.repository_id = :repository_id and
           d.user_id = u.user_id
           [ad_dimensional_sql $dimensional where]
     group by d.download_ip
     order by 2

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/download/www/admin/report-by-ip-oracle.xql}
dbqd.download.www.admin.report-by-ip-oracle.date_clause_1 {dbqd.download.www.admin.report-by-ip-oracle.date_clause_1 {

	d.download_date + 1 > SYSDATE

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/download/www/admin/report-by-ip-oracle.xql}
dbqd.download.www.admin.report-by-ip-oracle.date_clause_7 {dbqd.download.www.admin.report-by-ip-oracle.date_clause_7 {

	d.download_date + 7 > SYSDATE

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/download/www/admin/report-by-ip-oracle.xql}
dbqd.download.www.admin.report-by-ip-oracle.date_clause_30 {dbqd.download.www.admin.report-by-ip-oracle.date_clause_30 {

	d.download_date + 30 > SYSDATE

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/download/www/admin/report-by-ip-oracle.xql}
dbqd.download.www.admin.report-by-ip.download_table {dbqd.download.www.admin.report-by-ip.download_table {
      
    select d.download_ip,
           coalesce(min(d.download_hostname),'unavailable') as download_hostname,
           count(*) as num_downloads
     from download_downloads_repository d, cc_users u
     where d.repository_id = :repository_id and
           d.user_id = u.user_id
           [ad_dimensional_sql $dimensional where]
     group by d.download_ip
     order by 2

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/download/www/admin/report-by-ip-postgresql.xql}
dbqd.download.www.admin.report-by-ip.date_clause_1 {dbqd.download.www.admin.report-by-ip.date_clause_1 {

	d.download_date + '1 days'::interval > current_timestamp

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/download/www/admin/report-by-ip-postgresql.xql}
dbqd.download.www.admin.report-by-ip.date_clause_7 {dbqd.download.www.admin.report-by-ip.date_clause_7 {

	d.download_date + '7 days'::interval > current_timestamp

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/download/www/admin/report-by-ip-postgresql.xql}
dbqd.download.www.admin.report-by-ip.date_clause_30 {dbqd.download.www.admin.report-by-ip.date_clause_30 {

	d.download_date + '30 days'::interval > current_timestamp

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/download/www/admin/report-by-ip-postgresql.xql}
dbqd.download.www.admin.report-by-ip.users_to_spam {dbqd.download.www.admin.report-by-ip.users_to_spam {
      
    select distinct d.user_id
     from download_downloads_repository d
     where d.repository_id = :repository_id 
           [ad_dimensional_sql $dimensional where]

      } {} {} {} c:/web/openacs-4/packages/download/www/admin/report-by-ip.xql}
dbqd.download.www.admin.report-by-user-oracle.download_table {dbqd.download.www.admin.report-by-user-oracle.download_table {
      
    select d.user_id,
           min(u.last_name || ', ' || u.first_names) as user_name,
           min(u.email) as email,
           count(*) as num_downloads
     from download_downloads_repository d, cc_users u
     where d.repository_id = :repository_id and
           d.user_id = u.user_id
           [ad_dimensional_sql $dimensional where]
     group by d.user_id
     order by 2

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/download/www/admin/report-by-user-oracle.xql}
dbqd.download.www.admin.report-by-user-oracle.date_clause_1 {dbqd.download.www.admin.report-by-user-oracle.date_clause_1 {

	d.download_date + 1 > SYSDATE

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/download/www/admin/report-by-user-oracle.xql}
dbqd.download.www.admin.report-by-user-oracle.date_clause_7 {dbqd.download.www.admin.report-by-user-oracle.date_clause_7 {

	d.download_date + 7 > SYSDATE

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/download/www/admin/report-by-user-oracle.xql}
dbqd.download.www.admin.report-by-user-oracle.date_clause_30 {dbqd.download.www.admin.report-by-user-oracle.date_clause_30 {

	d.download_date + 30 > SYSDATE

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/download/www/admin/report-by-user-oracle.xql}
dbqd.download.www.admin.report-by-user.download_table {dbqd.download.www.admin.report-by-user.download_table {
      
    select d.user_id,
           min(u.last_name || ', ' || u.first_names) as user_name,
           min(u.email) as email,
           count(*) as num_downloads
     from download_downloads_repository d, cc_users u
     where d.repository_id = :repository_id and
           d.user_id = u.user_id
           [ad_dimensional_sql $dimensional where]
     group by d.user_id
     order by 2

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/download/www/admin/report-by-user-postgresql.xql}
dbqd.download.www.admin.report-by-user.date_clause_1 {dbqd.download.www.admin.report-by-user.date_clause_1 {

	d.download_date + '1 days'::interval > current_timestamp

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/download/www/admin/report-by-user-postgresql.xql}
dbqd.download.www.admin.report-by-user.date_clause_7 {dbqd.download.www.admin.report-by-user.date_clause_7 {

	d.download_date + '7 days'::interval > current_timestamp

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/download/www/admin/report-by-user-postgresql.xql}
dbqd.download.www.admin.report-by-user.date_clause_30 {dbqd.download.www.admin.report-by-user.date_clause_30 {

	d.download_date + '30 days'::interval > current_timestamp

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/download/www/admin/report-by-user-postgresql.xql}
dbqd.download.www.admin.report-by-user.users_to_spam {dbqd.download.www.admin.report-by-user.users_to_spam {
      
    select distinct d.user_id
     from download_downloads_repository d
     where d.repository_id = :repository_id
           [ad_dimensional_sql $dimensional where]

      } {} {} {} c:/web/openacs-4/packages/download/www/admin/report-by-user.xql}
dbqd.download.www.admin.report-one-ip-oracle.download_table {dbqd.download.www.admin.report-one-ip-oracle.download_table {

    select u.user_id,
           u.last_name || ', ' || u.first_names as user_name,
           u.email,
           da.archive_name, 
           da.archive_id, 
           dar.revision_id,
           dar.version_name,
           d.download_date,
           nvl(d.download_hostname,'unavailable') as download_hostname,
           nvl2(d.reason_id, dr.reason, d.reason) as reason
      from download_archives_obj da, download_arch_revisions_obj dar, download_downloads d, download_reasons dr, cc_users u
     where da.repository_id = :repository_id
       and da.archive_id = dar.archive_id
       and d.revision_id = dar.revision_id
       and d.download_ip = :download_ip
       and dr.download_reason_id(+) = d.reason_id
       and u.user_id = d.user_id
       [ad_dimensional_sql $dimensional where]
       [ad_order_by_from_sort_spec $orderby $table_def]
      
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/download/www/admin/report-one-ip-oracle.xql}
dbqd.download.www.admin.report-one-ip-oracle.date_clause_1 {dbqd.download.www.admin.report-one-ip-oracle.date_clause_1 {

	d.download_date + 1 > SYSDATE

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/download/www/admin/report-one-ip-oracle.xql}
dbqd.download.www.admin.report-one-ip-oracle.date_clause_7 {dbqd.download.www.admin.report-one-ip-oracle.date_clause_7 {

	d.download_date + 7 > SYSDATE

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/download/www/admin/report-one-ip-oracle.xql}
dbqd.download.www.admin.report-one-ip-oracle.date_clause_30 {dbqd.download.www.admin.report-one-ip-oracle.date_clause_30 {

	d.download_date + 30 > SYSDATE

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/download/www/admin/report-one-ip-oracle.xql}
dbqd.download.www.admin.report-one-ip.download_table {dbqd.download.www.admin.report-one-ip.download_table {

    select u.user_id,
           u.last_name || ', ' || u.first_names as user_name,
           u.email,
           da.archive_name, 
           da.archive_id, 
           dar.revision_id,
           dar.version_name,
           d.download_date,
           coalesce(d.download_hostname,'unavailable') as download_hostname,
           case when d.reason_id is null then d.reason else dr.reason end as reason
      from download_downloads d left join download_reasons dr 
			on (d.reason_id=dr.download_reason_id),
		   download_archives_obj da, 
		   download_arch_revisions_obj dar, 
		   cc_users u
     where da.repository_id = :repository_id
       and da.archive_id = dar.archive_id
       and d.revision_id = dar.revision_id
       and d.download_ip = :download_ip
       and u.user_id = d.user_id
       [ad_dimensional_sql $dimensional where]
       [ad_order_by_from_sort_spec $orderby $table_def]

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/download/www/admin/report-one-ip-postgresql.xql}
dbqd.download.www.admin.report-one-ip.date_clause_1 {dbqd.download.www.admin.report-one-ip.date_clause_1 {

	d.download_date + '1 days'::interval > current_timestamp

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/download/www/admin/report-one-ip-postgresql.xql}
dbqd.download.www.admin.report-one-ip.date_clause_7 {dbqd.download.www.admin.report-one-ip.date_clause_7 {

	d.download_date + '7 days'::interval > current_timestamp

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/download/www/admin/report-one-ip-postgresql.xql}
dbqd.download.www.admin.report-one-ip.date_clause_30 {dbqd.download.www.admin.report-one-ip.date_clause_30 {

	d.download_date + '30 days'::interval > current_timestamp

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/download/www/admin/report-one-ip-postgresql.xql}
dbqd.download.www.admin.report-one-ip.users_to_spam {dbqd.download.www.admin.report-one-ip.users_to_spam {
      
    select distinct user_id
      from download_downloads_repository d 
      where d.repository_id = :repository_id
        and d.download_ip = :download_ip
            [ad_dimensional_sql $dimensional where]

      } {} {} {} c:/web/openacs-4/packages/download/www/admin/report-one-ip.xql}
dbqd.download.www.admin.report-one-user-oracle.download_table {dbqd.download.www.admin.report-one-user-oracle.download_table {

    select da.repository_id,
           da.archive_name, 
           da.archive_id, 
           dar.revision_id,
           dar.version_name,
           d.download_date,
           d.download_ip,
           nvl(d.download_hostname,'unavailable') as download_hostname,
           nvl2(d.reason_id, dr.reason, d.reason) as reason
      from download_archives_obj da, download_arch_revisions_obj dar, download_downloads d, download_reasons dr
     where da.repository_id = :repository_id
       and da.archive_id = dar.archive_id
       and d.revision_id = dar.revision_id
       and d.user_id = :user_id
       and dr.download_reason_id(+) = d.reason_id
       [ad_dimensional_sql $dimensional where]
       [ad_order_by_from_sort_spec $orderby $table_def]
      
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/download/www/admin/report-one-user-oracle.xql}
dbqd.download.www.admin.report-one-user-oracle.date_clause_1 {dbqd.download.www.admin.report-one-user-oracle.date_clause_1 {

	d.download_date + 1 > SYSDATE

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/download/www/admin/report-one-user-oracle.xql}
dbqd.download.www.admin.report-one-user-oracle.date_clause_7 {dbqd.download.www.admin.report-one-user-oracle.date_clause_7 {

	d.download_date + 7 > SYSDATE

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/download/www/admin/report-one-user-oracle.xql}
dbqd.download.www.admin.report-one-user-oracle.date_clause_30 {dbqd.download.www.admin.report-one-user-oracle.date_clause_30 {

	d.download_date + 30 > SYSDATE

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/download/www/admin/report-one-user-oracle.xql}
dbqd.download.www.admin.report-one-user.download_table {dbqd.download.www.admin.report-one-user.download_table {

    select da.repository_id,
           da.archive_name, 
           da.archive_id, 
           dar.revision_id,
           dar.version_name,
           d.download_date,
           d.download_ip,
           coalesce(d.download_hostname,'unavailable') as download_hostname,
           case when d.reason_id is null then d.reason else dr.reason end as reason
      from download_downloads d left join download_reasons dr 
			on (d.reason_id = dr.download_reason_id),
		   download_archives_obj da, 
           download_arch_revisions_obj dar 
     where da.repository_id = :repository_id
       and da.archive_id = dar.archive_id
       and d.revision_id = dar.revision_id
       and d.user_id = :user_id
       [ad_dimensional_sql $dimensional where]
       [ad_order_by_from_sort_spec $orderby $table_def]

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/download/www/admin/report-one-user-postgresql.xql}
dbqd.download.www.admin.report-one-user.date_clause_1 {dbqd.download.www.admin.report-one-user.date_clause_1 {

	d.download_date + '1 days'::interval > current_timestamp

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/download/www/admin/report-one-user-postgresql.xql}
dbqd.download.www.admin.report-one-user.date_clause_7 {dbqd.download.www.admin.report-one-user.date_clause_7 {

	d.download_date + '7 days'::interval > current_timestamp

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/download/www/admin/report-one-user-postgresql.xql}
dbqd.download.www.admin.report-one-user.date_clause_30 {dbqd.download.www.admin.report-one-user.date_clause_30 {

	d.download_date + '30 days'::interval > current_timestamp

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/download/www/admin/report-one-user-postgresql.xql}
dbqd.download.www.admin.report-one-user.name_select {dbqd.download.www.admin.report-one-user.name_select {
      select u.last_name, u.first_names
        from cc_users u
        where u.user_id = :user_id 
      } {} {} {} c:/web/openacs-4/packages/download/www/admin/report-one-user.xql}
dbqd.download.www.admin.report-version-downloads-oracle.download_table {dbqd.download.www.admin.report-version-downloads-oracle.download_table {
      
    select u.user_id,
           u.email,
           u.last_name || ', ' || u.first_names as user_name,
           d.download_date,
           d.download_ip,
           nvl(d.download_hostname,'unavailable') as download_hostname,
           nvl(dar.version_name, 'unnamed') as version_name,
           dar.revision_id,
           nvl2(d.reason_id, dr.reason, d.reason) as reason
      from download_arch_revisions_obj dar, download_downloads d, download_reasons dr, cc_users u
     where d.user_id = u.user_id
       and dar.archive_id = :archive_id
       and dar.revision_id = d.revision_id
       and dr.download_reason_id(+) = d.reason_id
       [ad_dimensional_sql $dimensional where]
       [ad_order_by_from_sort_spec $orderby $table_def]

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/download/www/admin/report-version-downloads-oracle.xql}
dbqd.download.www.admin.report-version-downloads-oracle.version_clause {dbqd.download.www.admin.report-version-downloads-oracle.version_clause {

	dar.revision_id = content_item.get_live_revision(dar.archive_id)

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/download/www/admin/report-version-downloads-oracle.xql}
dbqd.download.www.admin.report-version-downloads-oracle.date_clause_1 {dbqd.download.www.admin.report-version-downloads-oracle.date_clause_1 {

	d.download_date + 1  > sysdate

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/download/www/admin/report-version-downloads-oracle.xql}
dbqd.download.www.admin.report-version-downloads-oracle.date_clause_7 {dbqd.download.www.admin.report-version-downloads-oracle.date_clause_7 {

	d.download_date + 7 > sysdate

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/download/www/admin/report-version-downloads-oracle.xql}
dbqd.download.www.admin.report-version-downloads-oracle.date_clause_30 {dbqd.download.www.admin.report-version-downloads-oracle.date_clause_30 {

	d.download_date + 30 > sysdate

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/download/www/admin/report-version-downloads-oracle.xql}
dbqd.download.www.admin.report-version-downloads.download_table {dbqd.download.www.admin.report-version-downloads.download_table {
      
select u.user_id,
       u.email,
       u.last_name || ', ' || u.first_names as user_name,
       d.download_date,
       d.download_ip,
       coalesce(d.download_hostname,'unavailable') as download_hostname,
       coalesce(dar.version_name, 'unnamed') as version_name,
       dar.revision_id,
       case when d.reason_id is null then d.reason else dr.reason end as reason
from download_downloads d left join download_reasons dr
  on (d.reason_id=dr.download_reason_id),
     download_arch_revisions_obj dar, 
     cc_users u
where d.user_id = u.user_id
      and dar.archive_id = :archive_id
      and dar.revision_id = d.revision_id
      [ad_dimensional_sql $dimensional where]
      [ad_order_by_from_sort_spec $orderby $table_def]

} {} {} {postgresql 7.1} c:/web/openacs-4/packages/download/www/admin/report-version-downloads-postgresql.xql}
dbqd.download.www.admin.report-version-downloads.version_clause {dbqd.download.www.admin.report-version-downloads.version_clause {

dar.revision_id = content_item__get_live_revision(dar.archive_id)

} {} {} {postgresql 7.1} c:/web/openacs-4/packages/download/www/admin/report-version-downloads-postgresql.xql}
dbqd.download.www.admin.report-version-downloads.date_clause_1 {dbqd.download.www.admin.report-version-downloads.date_clause_1 {

d.download_date + '1 days'::interval > current_timestamp

} {} {} {postgresql 7.1} c:/web/openacs-4/packages/download/www/admin/report-version-downloads-postgresql.xql}
dbqd.download.www.admin.report-version-downloads.date_clause_7 {dbqd.download.www.admin.report-version-downloads.date_clause_7 {

d.download_date + '7 days'::interval > current_timestamp

} {} {} {postgresql 7.1} c:/web/openacs-4/packages/download/www/admin/report-version-downloads-postgresql.xql}
dbqd.download.www.admin.report-version-downloads.date_clause_30 {dbqd.download.www.admin.report-version-downloads.date_clause_30 {

d.download_date + '30 days'::interval > current_timestamp

} {} {} {postgresql 7.1} c:/web/openacs-4/packages/download/www/admin/report-version-downloads-postgresql.xql}
dbqd.download.www.admin.report-version-downloads.name_select {dbqd.download.www.admin.report-version-downloads.name_select {
      
    select da.archive_name from download_archives_obj da where da.archive_id = :archive_id

      } {} {} {} c:/web/openacs-4/packages/download/www/admin/report-version-downloads.xql}
dbqd.download.www.admin.report-version-downloads.current_count {dbqd.download.www.admin.report-version-downloads.current_count {
      select count(*)
from   download_downloads d, download_arch_revisions_obj dar
where  dar.archive_id = :archive_id and
       d.revision_id = dar.revision_id
       [ad_dimensional_sql $dimensional where]

      } {} {} {} c:/web/openacs-4/packages/download/www/admin/report-version-downloads.xql}
dbqd.download.www.admin.report-version-downloads.total_count {dbqd.download.www.admin.report-version-downloads.total_count {
      select count(*)
from   download_downloads d, download_arch_revisions_obj dar
where  dar.archive_id = :archive_id and
       d.revision_id = dar.revision_id 

      } {} {} {} c:/web/openacs-4/packages/download/www/admin/report-version-downloads.xql}
dbqd.download.www.admin.report-version-downloads.users_to_spam {dbqd.download.www.admin.report-version-downloads.users_to_spam {
      
select distinct d.user_id
from download_downloads_repository d,
     download_arch_revisions_obj dar
where d.repository_id = :repository_id
      and dar.archive_id = :archive_id
      and dar.revision_id = d.revision_id
      [ad_dimensional_sql $dimensional where]

      } {} {} {} c:/web/openacs-4/packages/download/www/admin/report-version-downloads.xql}
dbqd.download.www.admin.repository-ae-oracle.todo_insert {dbqd.download.www.admin.repository-ae-oracle.todo_insert {
      
         declare
          the_id integer;
         begin
          the_id := download_rep.new(repository_id  => :repository_id,
                             title => :title,
                             description => :description,
                             help_text => :help_text,
                             creation_user => :user_id,
                             parent_id => :package_id,
                             context_id => :package_id);
                    end;
        
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/download/www/admin/repository-ae-oracle.xql}
dbqd.download.www.admin.repository-ae-oracle.repository_edit {dbqd.download.www.admin.repository-ae-oracle.repository_edit {
      
             begin
                download_rep.edit(repository_id  => :repository_id,
                                         title => :title,
                                         description => :description,
                                         help_text => :help_text,
                                  modifying_user => :user_id
                );
             end;
        
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/download/www/admin/repository-ae-oracle.xql}
dbqd.download.www.admin.repository-ae.todo_insert {dbqd.download.www.admin.repository-ae.todo_insert {
          select download_rep__new(
			:repository_id,
			:title,
			:description,
			:help_text,
			now(),
			:user_id,
			:package_id,
			:package_id,
			null
		  );
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/download/www/admin/repository-ae-postgresql.xql}
dbqd.download.www.admin.repository-ae.repository_edit {dbqd.download.www.admin.repository-ae.repository_edit {
                select download_rep__edit(
				  :repository_id,
                  :title,
                  :description,
                  :help_text,
                  now(),
				  :user_id,
				  null
                );
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/download/www/admin/repository-ae-postgresql.xql}
dbqd.download.www.admin.repository-ae.repository_info {dbqd.download.www.admin.repository-ae.repository_info {
      
    select title, description, help_text from download_repository_obj where repository_id = :repository_id

      } {} {} {} c:/web/openacs-4/packages/download/www/admin/repository-ae.xql}
dbqd.download.www.admin.repository-ae.rep_count_get {dbqd.download.www.admin.repository-ae.rep_count_get {
      select count(*) from download_repository_obj where repository_id = :repository_id
      } {} {} {} c:/web/openacs-4/packages/download/www/admin/repository-ae.xql}
dbqd.download.www.admin.repository-metadata-delete.metadata_delete {dbqd.download.www.admin.repository-metadata-delete.metadata_delete {
      
    delete from download_archive_metadata where metadata_id = :metadata_id

      } {} {} {} c:/web/openacs-4/packages/download/www/admin/repository-metadata-delete.xql}
dbqd.download.www.admin.repository-metadata-edit-oracle.metadata_select {dbqd.download.www.admin.repository-metadata-edit-oracle.metadata_select {
      
    select 
      dam.metadata_id,
      dam.repository_id,
      dam.archive_type_id,
      nvl(dat.pretty_name, 'All') as archive_name,
      dam.sort_key,
      dam.pretty_name,
      dam.data_type,
      dam.required_p,      
      dam.linked_p,        
      dam.mainpage_p,
      dam.computed_p      
    from download_archive_metadata dam, download_archive_types dat
         where dam.repository_id = :repository_id and
               dam.metadata_id = :metadata_id and
               dam.archive_type_id = dat.archive_type_id(+) 
    order by archive_type_id

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/download/www/admin/repository-metadata-edit-oracle.xql}
dbqd.download.www.admin.repository-metadata-edit.metadata_select {dbqd.download.www.admin.repository-metadata-edit.metadata_select {

    select 
      dam.metadata_id,
      dam.repository_id,
      dam.archive_type_id,
      coalesce(dat.pretty_name, 'All') as archive_name,
      dam.sort_key,
      dam.pretty_name,
      dam.data_type,
      dam.required_p,      
      dam.linked_p,        
      dam.mainpage_p,
      dam.computed_p      
    from download_archive_metadata dam left join download_archive_types dat
      using archive_type_id
    where dam.repository_id = :repository_id and
          dam.metadata_id = :metadata_id 
    order by archive_type_id

      } {} {} {} c:/web/openacs-4/packages/download/www/admin/repository-metadata-edit.xql}
dbqd.download.www.admin.repository-metadata-edit.choices {dbqd.download.www.admin.repository-metadata-edit.choices {
      
    select label from download_metadata_choices where metadata_id = :metadata_id

      } {} {} {} c:/web/openacs-4/packages/download/www/admin/repository-metadata-edit.xql}
dbqd.download.www.admin.repository-metadata-edit.archiv_types {dbqd.download.www.admin.repository-metadata-edit.archiv_types {
      
    select pretty_name, archive_type_id from download_archive_types where repository_id = $repository_id
      } {} {} {} c:/web/openacs-4/packages/download/www/admin/repository-metadata-edit.xql}
dbqd.download.www.admin.repository-metadata-edit.metadata_update {dbqd.download.www.admin.repository-metadata-edit.metadata_update {
      
            update download_archive_metadata set
                  archive_type_id = :archive_type_id,
                  sort_key = :sort_key,
                  pretty_name = :pretty_name,
                  data_type = :data_type,
                  required_p = :required_p,
                  linked_p = :linked_p,
                  mainpage_p = :mainpage_p,
                  computed_p = :computed_p
            where metadata_id = :metadata_id and
                  repository_id = :repository_id 
        
      } {} {} {} c:/web/openacs-4/packages/download/www/admin/repository-metadata-edit.xql}
dbqd.download.www.admin.repository-metadata-edit.choices_delete {dbqd.download.www.admin.repository-metadata-edit.choices_delete {
      
            delete from download_metadata_choices where metadata_id = :metadata_id
        
      } {} {} {} c:/web/openacs-4/packages/download/www/admin/repository-metadata-edit.xql}
dbqd.download.www.admin.repository-metadata-edit.choice_insert {dbqd.download.www.admin.repository-metadata-edit.choice_insert {
      
insert into download_metadata_choices (choice_id, metadata_id, label, sort_order)
values (download_md_choice_id_sequence.nextval, :metadata_id, :choice, :count)
                
      } {} {} {} c:/web/openacs-4/packages/download/www/admin/repository-metadata-edit.xql}
dbqd.download.www.admin.repository-metadata-oracle.metadata_select {dbqd.download.www.admin.repository-metadata-oracle.metadata_select {
      
    select 
      dam.metadata_id,
      dam.repository_id,
      dam.archive_type_id,
      nvl(dat.pretty_name, 'All') as archive_name,
      dam.sort_key,
      dam.pretty_name,
      dam.data_type,
      dam.required_p,      
      dam.linked_p,        
      dam.mainpage_p,
      dam.computed_p      
    from download_archive_metadata dam, download_archive_types dat
         where dam.repository_id = :repository_id and
               dam.archive_type_id = dat.archive_type_id(+)
    order by archive_type_id, sort_key

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/download/www/admin/repository-metadata-oracle.xql}
dbqd.download.www.admin.repository-metadata.archiv_types {dbqd.download.www.admin.repository-metadata.archiv_types {
      
select pretty_name, archive_type_id 
from download_archive_types 
where repository_id = $repository_id

} {} {} {} c:/web/openacs-4/packages/download/www/admin/repository-metadata.xql}
dbqd.download.www.admin.repository-metadata.metadata_insert {dbqd.download.www.admin.repository-metadata.metadata_insert {
      
insert into download_archive_metadata (
    metadata_id,
    repository_id, 
    archive_type_id,
    sort_key,
    pretty_name,
    data_type,
    required_p,
    linked_p,
    mainpage_p,
    computed_p)
values (
    :metadata_id,
    :repository_id, 
    :archive_type_id,
    :sort_key,
    :pretty_name,
    :data_type,
    :required_p,
    :linked_p,
    :mainpage_p,
    :computed_p)
        
} {} {} {} c:/web/openacs-4/packages/download/www/admin/repository-metadata.xql}
dbqd.download.www.admin.repository-metadata.choice_insert {dbqd.download.www.admin.repository-metadata.choice_insert {
      
insert into download_metadata_choices 
(choice_id, metadata_id, label, sort_order)
values 
(download_md_choice_id_sequence.nextval, :metadata_id, :choice, :count)
                
} {} {} {} c:/web/openacs-4/packages/download/www/admin/repository-metadata.xql}
dbqd.download.www.admin.repository-metadata.metadata_select {dbqd.download.www.admin.repository-metadata.metadata_select {

select 
  dam.metadata_id,
  dam.repository_id,
  dam.archive_type_id,
  coalesce(dat.pretty_name, 'All') as archive_name,
  dam.sort_key,
  dam.pretty_name,
  dam.data_type,
  dam.required_p,      
  dam.linked_p,        
  dam.mainpage_p,
  dam.computed_p      
from download_archive_metadata dam left join download_archive_types dat
  using (archive_type_id)
where dam.repository_id = :repository_id 
order by archive_type_id, sort_key

} {} {} {} c:/web/openacs-4/packages/download/www/admin/repository-metadata.xql}
dbqd.download.www.admin.repository-reasons-delete.reason_delete {dbqd.download.www.admin.repository-reasons-delete.reason_delete {
      
    delete from download_reasons where download_reason_id = :download_reason_id

      } {} {} {} c:/web/openacs-4/packages/download/www/admin/repository-reasons-delete.xql}
dbqd.download.www.admin.repository-reasons-edit.edit_info {dbqd.download.www.admin.repository-reasons-edit.edit_info {
      select download_reason_id, reason from download_reasons where download_reason_id = :download_reason_id
      } {} {} {} c:/web/openacs-4/packages/download/www/admin/repository-reasons-edit.xql}
dbqd.download.www.admin.repository-reasons-edit.edit_reason {dbqd.download.www.admin.repository-reasons-edit.edit_reason {
      
        update download_reasons set reason = :reason
        where download_reason_id = :download_reason_id
    
      } {} {} {} c:/web/openacs-4/packages/download/www/admin/repository-reasons-edit.xql}
dbqd.download.www.admin.repository-reasons.repository_reasons_insert {dbqd.download.www.admin.repository-reasons.repository_reasons_insert {
      
        insert into download_reasons (download_reason_id, repository_id, reason) values (:download_reason_id, :repository_id, :reason)
    
      } {} {} {} c:/web/openacs-4/packages/download/www/admin/repository-reasons.xql}
dbqd.download.www.admin.repository-reasons.reasons_select {dbqd.download.www.admin.repository-reasons.reasons_select {
      
    select download_reason_id, reason from download_reasons where repository_id = :repository_id

      } {} {} {} c:/web/openacs-4/packages/download/www/admin/repository-reasons.xql}
dbqd.download.www.admin.repository-types-delete.type_delete {dbqd.download.www.admin.repository-types-delete.type_delete {
      
    delete from download_archive_types where repository_id = :repository_id and archive_type_id = :archive_type_id

      } {} {} {} c:/web/openacs-4/packages/download/www/admin/repository-types-delete.xql}
dbqd.download.www.admin.repository-types-edit.edit_info {dbqd.download.www.admin.repository-types-edit.edit_info {
      select archive_type_id, pretty_name, description from download_archive_types where archive_type_id = :archive_type_id
      } {} {} {} c:/web/openacs-4/packages/download/www/admin/repository-types-edit.xql}
dbqd.download.www.admin.repository-types-edit.edit_type {dbqd.download.www.admin.repository-types-edit.edit_type {
      
        update download_archive_types set pretty_name = :pretty_name, description = :description
        where archive_type_id = :archive_type_id
    
      } {} {} {} c:/web/openacs-4/packages/download/www/admin/repository-types-edit.xql}
dbqd.download.www.admin.repository-types.repository_types_insert {dbqd.download.www.admin.repository-types.repository_types_insert {
      
        insert into download_archive_types (archive_type_id, repository_id, pretty_name, description) values (:archive_type_id, :repository_id, :pretty_name, :description)
    
      } {} {} {} c:/web/openacs-4/packages/download/www/admin/repository-types.xql}
dbqd.download.www.admin.repository-types.types_select {dbqd.download.www.admin.repository-types.types_select {
      
    select archive_type_id, pretty_name, description from download_archive_types where repository_id = :repository_id

      } {} {} {} c:/web/openacs-4/packages/download/www/admin/repository-types.xql}
dbqd.download.www.admin.spam-users-2-oracle.sendmail {dbqd.download.www.admin.spam-users-2-oracle.sendmail {
      
        begin
           :1 := acs_mail_nt.post_request(
                party_from => :user_id,
                party_to => :to_user_id,
                expand_group => 'f',
                subject => :subject,
                message => :msgbody);
        end;
    
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/download/www/admin/spam-users-2-oracle.xql}
dbqd.download.www.admin.spam-users-2.sendmail {dbqd.download.www.admin.spam-users-2.sendmail {

select acs_mail_nt__post_request (
    :user_id,    -- p_party_from
    :to_user_id, -- p_party_to
    :subject,    -- p_subject
    :msgbody     -- p_message
);
    
} {} {} {postgresql 7.1} c:/web/openacs-4/packages/download/www/admin/spam-users-2-postgresql.xql}
dbqd.download.www.admin.spam-users.user_select {dbqd.download.www.admin.spam-users.user_select {
      select u.email, 
             u.user_id, 
             u.last_name || ', ' || u.first_names as user_name 
        from cc_users u, user_preferences up
        where u.user_id in ([join $user_id_list ,]) and
              u.user_id = up.user_id and
              up.dont_spam_me_p = 'f'
      } {} {} {} c:/web/openacs-4/packages/download/www/admin/spam-users.xql}
dbqd.download.www.all-metadata.metadata {dbqd.download.www.all-metadata.metadata {
      
    select dam.pretty_name,
           dam.data_type
    from download_archive_metadata dam
    where dam.linked_p = 't' and
          dam.metadata_id = :metadata_id

      } {} {} {} c:/web/openacs-4/packages/download/www/all-metadata.xql}
dbqd.download.www.archive-add-2-oracle.archive_new {dbqd.download.www.archive-add-2-oracle.archive_new {
      
        declare
          v_archive_id integer;
          v_archive_desc_id integer;
          v_name       cr_items.name%TYPE;
        begin
          v_name := 'Download Archive Desc for ' || :archive_id;

          v_archive_desc_id := content_item.new (
           content_type => 'cr_download_archive_desc',
           item_id => :archive_desc_id,
           name => v_name,
           title => :summary,
           description => :description,
           mime_type => :description_format,
           parent_id => :repository_id,
           context_id => :repository_id,
           creation_user => :user_id,
           creation_ip => :creation_ip,
           is_live => 't'
          );
          insert into download_archive_descs (archive_desc_id) values (content_item.get_live_revision(v_archive_desc_id));

          v_archive_id := content_item.new(
           content_type => 'cr_download_archive',
           item_id => :archive_id,
           name => :archive_name,
           parent_id => :repository_id,
           context_id => :repository_id,
           creation_user => :user_id,
           creation_ip => :creation_ip
          );

          insert into download_archives (archive_id, archive_type_id, archive_desc_id) values (v_archive_id, :archive_type_id, content_item.get_live_revision(v_archive_desc_id));
        end;
    
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/download/www/archive-add-2-oracle.xql}
dbqd.download.www.archive-add-2.archive_new {dbqd.download.www.archive-add-2.archive_new {
        declare
          v_archive_id 			  integer;
          v_archive_desc_id 	  integer;
		  v_live_archive_desc_id  integer;
		  v_id			  		  integer;
          v_name       			  cr_items.name%TYPE;
          v_archive_name                  cr_items.name%TYPE;
        begin
          v_name := 'Download Archive Desc for ' || :archive_id;

          v_archive_desc_id := content_item__new (
			v_name,
			:repository_id,
			:archive_desc_id,
			null,
			now(),
			:user_id,
			:repository_id,
			:creation_ip,
			'content_item',
			'cr_download_archive_desc',
			:summary,
			:description,
			:description_format,
			null,
			null,
			'file'
          );

		  -- get the latest revision
	 	  select into v_live_archive_desc_id 
			content_item__get_latest_revision (v_archive_desc_id);

	 	  -- make it live
	 	  select into v_id 
			content_item__set_live_revision ( v_live_archive_desc_id );
			
          insert into download_archive_descs 
			(archive_desc_id) 
			values 
			(v_live_archive_desc_id);

          v_archive_id := content_item__new(
			varchar :archive_name,
			:repository_id,
			:archive_id,
			null,
			now(),
			:user_id,
			:repository_id,
			:creation_ip,
			'content_item',
			'cr_download_archive',
			null,
			null,
			'text/plain',
			null,
			null,
			'file'
		  );

		  -- get the latest revision
	 	  select into v_id 
			content_item__get_latest_revision (v_archive_id);

	 	  -- make it live
	 	  select into v_id 
			content_item__set_live_revision ( v_id );
			
          insert into download_archives 
			(archive_id, archive_type_id, archive_desc_id) 
			values 
			(v_archive_id, :archive_type_id, v_live_archive_desc_id);

		  return 0;
        end;
    
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/download/www/archive-add-2-postgresql.xql}
dbqd.download.www.archive-add.metadata {dbqd.download.www.archive-add.metadata {
      
    select 
      dam.metadata_id,
      dam.pretty_name,
      dam.data_type
    from download_archive_metadata dam
         where dam.repository_id = :repository_id and
               dam.computed_p = 'f' and
               (dam.archive_type_id = :archive_type_id or
                dam.archive_type_id is null)
    order by sort_key

      } {} {} {} c:/web/openacs-4/packages/download/www/archive-add.xql}
dbqd.download.www.archive-version-add-2.get_archive_type {dbqd.download.www.archive-version-add-2.get_archive_type {
      select archive_type_id from download_archives where archive_id = :archive_id
      } {} {} {} c:/web/openacs-4/packages/download/www/archive-version-add-2.xql}
dbqd.download.www.archive-version-add-oracle.archive_info_select {dbqd.download.www.archive-version-add-oracle.archive_info_select {
      
   select da.archive_name, 
          da.archive_type_id,
          da.summary,
          da.description, 
          da.description_type, 
          u.last_name || ', ' || u.first_names as creation_user_name,
          da.creation_user, 
          to_char(da.creation_date,'Mon DD, YYYY') as creation_date
     from download_archives_obj da, cc_users u
    where da.archive_id = :archive_id
      and u.user_id = da.creation_user

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/download/www/archive-version-add-oracle.xql}
dbqd.download.www.archive-version-add.archive_info_select {dbqd.download.www.archive-version-add.archive_info_select {
      
   select da.archive_name, 
          da.archive_type_id,
          da.summary,
          da.description, 
          da.description_type, 
          u.last_name || ', ' || u.first_names as creation_user_name,
          da.creation_user, 
          to_char(da.creation_date,'Mon DD, YYYY') as creation_date
     from download_archives_obj da, cc_users u
    where da.archive_id = :archive_id
      and u.user_id = da.creation_user

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/download/www/archive-version-add-postgresql.xql}
dbqd.download.www.archive-version-add.metadata {dbqd.download.www.archive-version-add.metadata {
      
    select 
      dam.metadata_id,
      dam.pretty_name,
      dam.data_type
    from download_archive_metadata dam
         where dam.repository_id = :repository_id and
               dam.computed_p = 'f' and
               (dam.archive_type_id = :archive_type_id or
                dam.archive_type_id is null)
    order by sort_key

      } {} {} {} c:/web/openacs-4/packages/download/www/archive-version-add.xql}
dbqd.download.www.download-verify-oracle.revision_info_select {dbqd.download.www.download-verify-oracle.revision_info_select {
      
select da.archive_id,
       da.repository_id as repository_id,
       da.archive_name,
       da.summary,
       dar.revision_id,
       dar.file_name,
       dar.version_name,
       round(dbms_lob.getlength(dar.content)/1024) as file_size       
from   download_archives_obj da,
       download_arch_revisions_obj dar
where  da.archive_id = dar.archive_id and
       dar.revision_id = :revision_id 
       $approval

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/download/www/download-verify-oracle.xql}
dbqd.download.www.download-verify.revision_info_select {dbqd.download.www.download-verify.revision_info_select {
      
select da.archive_id,
       da.repository_id as repository_id,
       da.archive_name,
       da.summary,
       dar.revision_id,
       dar.file_name,
       dar.version_name,
       dar.file_size / 1024 as file_size
from   download_archives_obj da,
       download_arch_revisions_obj dar
where  da.archive_id = dar.archive_id and
       dar.revision_id = :revision_id 
       $approval

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/download/www/download-verify-postgresql.xql}
dbqd.download.www.index-oracle.my_revisions {dbqd.download.www.index-oracle.my_revisions {
      
        select da.archive_name,
               dar.version_name,
               dar.revision_id,
               dar.approved_p,
               nvl(dar.approved_comment, 'No comment') approved_comment,
               to_char(dar.creation_date,'Mon DD, YYYY') as creation_date
    from download_arch_revisions_obj dar, download_archives_obj da
    where da.repository_id = :repository_id and
          dar.archive_id = da.archive_id and
          approved_p != 't' and
          dar.creation_user = :user_id
    order by creation_date

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/download/www/index-oracle.xql}
dbqd.download.www.index-oracle.download_index_query {dbqd.download.www.index-oracle.download_index_query {
select da.archive_id,
       dat.pretty_name as archive_type,
       da.archive_type_id,
       da.archive_name,
       da.summary,
       dar.revision_id,
       dar.file_name,
       dar.version_name,
       round(dbms_lob.getlength(dar.content)/1024) as file_size,       
       (select count(*) from download_downloads where revision_id = dar.revision_id) as downloads,
       dar.approved_p 
       $metadata_selects
from   download_archives_obj da,
       download_archive_types dat,
       download_arch_revisions_obj dar
where  da.repository_id = :repository_id and
       dat.archive_type_id = da.archive_type_id and
       da.archive_id = dar.archive_id and
       acs_permission.permission_p(dar.revision_id, :user_id, 'read') = 't'
       $approval
       [ad_dimensional_sql $dimensional where]
       [ad_order_by_from_sort_spec $orderby $table_def]
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/download/www/index-oracle.xql}
dbqd.download.www.index-oracle.archive_where_clause {dbqd.download.www.index-oracle.archive_where_clause {
      
   dar.revision_id = content_item.get_live_revision(da.archive_id)

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/download/www/index-oracle.xql}
dbqd.download.www.index-oracle.date_clause_1 {dbqd.download.www.index-oracle.date_clause_1 {

	dar.publish_date + 1 > sysdate

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/download/www/index-oracle.xql}
dbqd.download.www.index-oracle.date_clause_7 {dbqd.download.www.index-oracle.date_clause_7 {

	dar.publish_date + 7 > sysdate

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/download/www/index-oracle.xql}
dbqd.download.www.index-oracle.date_clause_30 {dbqd.download.www.index-oracle.date_clause_30 {

	dar.publish_date + 30 > sysdate

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/download/www/index-oracle.xql}
dbqd.download.www.index.my_revisions {dbqd.download.www.index.my_revisions {
      
        select da.archive_name,
               dar.version_name,
               dar.revision_id,
               dar.approved_p,
               coalesce(dar.approved_comment, 'No comment') as approved_comment,
               to_char(dar.creation_date,'Mon DD, YYYY') as creation_date
    from download_arch_revisions_obj dar, download_archives_obj da
    where da.repository_id = :repository_id and
          dar.archive_id = da.archive_id and
          approved_p != 't' and
          dar.creation_user = :user_id
    order by creation_date

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/download/www/index-postgresql.xql}
dbqd.download.www.index.download_index_query {dbqd.download.www.index.download_index_query {
select da.archive_id,
       dat.pretty_name as archive_type,
       da.archive_type_id,
       da.archive_name,
       da.summary,
       dar.revision_id,
       dar.file_name,
       dar.version_name,
       dar.file_size / 1024 as file_size,       
       (select count(*) from download_downloads where revision_id = dar.revision_id) as downloads,
       dar.approved_p 
       $metadata_selects
from   download_archives_obj da,
       download_archive_types dat,
       download_arch_revisions_obj dar
where  da.repository_id = :repository_id and
       dat.archive_type_id = da.archive_type_id and
       da.archive_id = dar.archive_id and
       acs_permission__permission_p(dar.revision_id, :user_id, 'read') = 't'
       $approval
       [ad_dimensional_sql $dimensional where]
       [ad_order_by_from_sort_spec $orderby $table_def]
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/download/www/index-postgresql.xql}
dbqd.download.www.index.archive_where_clause {dbqd.download.www.index.archive_where_clause {
      
   dar.revision_id = content_item__get_live_revision(da.archive_id)

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/download/www/index-postgresql.xql}
dbqd.download.www.index.date_clause_1 {dbqd.download.www.index.date_clause_1 {

	dar.publish_date + '1 days'::interval > current_timestamp

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/download/www/index-postgresql.xql}
dbqd.download.www.index.date_clause_7 {dbqd.download.www.index.date_clause_7 {

	dar.publish_date + '7 days'::interval > current_timestamp

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/download/www/index-postgresql.xql}
dbqd.download.www.index.date_clause_30 {dbqd.download.www.index.date_clause_30 {

	dar.publish_date + '30 days'::interval > current_timestamp

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/download/www/index-postgresql.xql}
dbqd.download.www.index.archive_type {dbqd.download.www.index.archive_type {
      
    select archive_type_id as at_id, pretty_name from download_archive_types where repository_id = :repository_id

      } {} {} {} c:/web/openacs-4/packages/download/www/index.xql}
dbqd.download.www.index.metadata {dbqd.download.www.index.metadata {
      
    select dam.metadata_id,
           dam.pretty_name,
           dam.data_type,
           dam.linked_p
    from download_archive_metadata dam
    where dam.mainpage_p = 't' and
          dam.repository_id = :repository_id and
          (dam.archive_type_id = :archive_type_id or dam.archive_type_id is null)
    order by sort_key

      } {} {} {} c:/web/openacs-4/packages/download/www/index.xql}
dbqd.download.www.index.types_select {dbqd.download.www.index.types_select {
      
    select archive_type_id, pretty_name, description from download_archive_types where repository_id = :repository_id

      } {} {} {} c:/web/openacs-4/packages/download/www/index.xql}
dbqd.download.www.one-archive-oracle.archive_info_select {dbqd.download.www.one-archive-oracle.archive_info_select {
      
   select da.archive_name, 
          da.summary,
          da.description, 
          da.description_type, 
          u.last_name || ', ' || u.first_names as creation_user_name,
          da.creation_user, 
          to_char(da.creation_date,'Mon DD, YYYY') as creation_date
     from download_archives_obj da, cc_users u
    where da.archive_id = :archive_id
      and u.user_id = da.creation_user

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/download/www/one-archive-oracle.xql}
dbqd.download.www.one-archive-oracle.rep_get_revisions {dbqd.download.www.one-archive-oracle.rep_get_revisions {
      
    select dar.file_name,
           dar.version_name,
           dar.revision_id,
           u.last_name || ', ' || u.first_names as creation_user_name,
           dar.creation_user, 
           to_char(dar.creation_date,'Mon DD, YYYY') as creation_date
           
    from download_arch_revisions_obj dar, cc_users u
    where dar.archive_id = :archive_id
          and approved_p = 't' and
          u.user_id = dar.creation_user
    order by version_name

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/download/www/one-archive-oracle.xql}
dbqd.download.www.one-archive.archive_info_select {dbqd.download.www.one-archive.archive_info_select {
      
   select da.archive_name, 
          da.summary,
          da.description, 
          da.description_type, 
          u.last_name || ', ' || u.first_names as creation_user_name,
          da.creation_user, 
          to_char(da.creation_date,'Mon DD, YYYY') as creation_date
     from download_archives_obj da, cc_users u
    where da.archive_id = :archive_id
      and u.user_id = da.creation_user

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/download/www/one-archive-postgresql.xql}
dbqd.download.www.one-archive.rep_get_revisions {dbqd.download.www.one-archive.rep_get_revisions {
      
    select dar.file_name,
           dar.version_name,
           dar.revision_id,
           u.last_name || ', ' || u.first_names as creation_user_name,
           dar.creation_user, 
           to_char(dar.creation_date,'Mon DD, YYYY') as creation_date
           
    from download_arch_revisions_obj dar, cc_users u
    where dar.archive_id = :archive_id
          and approved_p = 't' and
          u.user_id = dar.creation_user
    order by version_name

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/download/www/one-archive-postgresql.xql}
dbqd.download.www.one-archive.pending_count_select {dbqd.download.www.one-archive.pending_count_select {
      
        select count(*)
          from download_arch_revisions_obj dar
         where dar.archive_id = :archive_id
           and approved_p is null
    
      } {} {} {} c:/web/openacs-4/packages/download/www/one-archive.xql}
dbqd.download.www.one-metadata.metadata {dbqd.download.www.one-metadata.metadata {
      
    select dam.pretty_name,
           dam.data_type
    from download_archive_metadata dam
    where dam.linked_p = 't' and
          dam.metadata_id = :metadata_id

      } {} {} {} c:/web/openacs-4/packages/download/www/one-metadata.xql}
dbqd.download.www.one-metadata.archives {dbqd.download.www.one-metadata.archives {
      
        select da.archive_name,
               da.archive_id,
               count(dar.revision_id) as num_versions
        from download_arch_revisions_obj dar, download_archives_obj da
        where dar.archive_id = da.archive_id and
              dar.revision_id in (select revision_id from download_revision_data where $answer_column = :value and metadata_id = :metadata_id)
        group by da.archive_name, da.archive_id

      } {} {} {} c:/web/openacs-4/packages/download/www/one-metadata.xql}
dbqd.download.www.one-revision-oracle.revision_info_select {dbqd.download.www.one-revision-oracle.revision_info_select {
               
select da.archive_id,
       dat.pretty_name as archive_type,
       da.archive_type_id,
       da.archive_name,
       da.summary,
       da.description,
       da.description_type,
       dar.revision_id,
       dar.file_name,
       dar.version_name,
       dar.version_name,
       round(dbms_lob.getlength(dar.content) / 1024) as file_size,       
       (select count(*) from download_downloads where revision_id = dar.revision_id) as downloads,
       dar.approved_p,
       u.last_name || ', ' || u.first_names as creation_user_name,
       dar.creation_user, 
       dar.creation_date 
       $metadata_selects
from   download_archives_obj da,
       download_archive_types dat,
       download_arch_revisions_obj dar,
       cc_users u
where  da.repository_id = :repository_id and
       dat.archive_type_id = da.archive_type_id and
       da.archive_id = dar.archive_id and
       dar.revision_id = :revision_id and
       dar.creation_user = u.user_id

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/download/www/one-revision-oracle.xql}
dbqd.download.www.one-revision.revision_info_select {dbqd.download.www.one-revision.revision_info_select {
               
select da.archive_id,
       dat.pretty_name as archive_type,
       da.archive_type_id,
       da.archive_name,
       da.summary,
       da.description,
       da.description_type,
       dar.revision_id,
       dar.file_name,
       dar.version_name,
       dar.version_name,
       dar.file_size / 1024 as file_size,       
       (select count(*) from download_downloads where revision_id = dar.revision_id) as downloads,
       dar.approved_p,
       u.last_name || ', ' || u.first_names as creation_user_name,
       dar.creation_user, 
       dar.creation_date 
       $metadata_selects
from   download_archives_obj da,
       download_archive_types dat,
       download_arch_revisions_obj dar,
       cc_users u
where  da.repository_id = :repository_id and
       dat.archive_type_id = da.archive_type_id and
       da.archive_id = dar.archive_id and
       dar.revision_id = :revision_id and
       dar.creation_user = u.user_id

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/download/www/one-revision-postgresql.xql}
dbqd.download.www.one-revision.get_archive_type {dbqd.download.www.one-revision.get_archive_type {
      select archive_type_id from download_arch_revisions_obj dar, download_archives da where dar.archive_id = da.archive_id and dar.revision_id = :revision_id
      } {} {} {} c:/web/openacs-4/packages/download/www/one-revision.xql}
dbqd.download.www.one-revision.metadata {dbqd.download.www.one-revision.metadata {
      
    select dam.metadata_id,
           dam.pretty_name,
           dam.data_type
    from download_archive_metadata dam
    where dam.repository_id = :repository_id and
          (dam.archive_type_id = :archive_type_id or dam.archive_type_id is null)
    order by sort_key

      } {} {} {} c:/web/openacs-4/packages/download/www/one-revision.xql}
dbqd.ecommerce.tcl.ec-audit-trail-procs-oracle.ec_audit_delete_row.audit_table_insert {dbqd.ecommerce.tcl.ec-audit-trail-procs-oracle.ec_audit_delete_row.audit_table_insert {
      
    insert into $audit_table_name
           ($id_column_join last_modified,
           last_modifying_user, modified_ip_address, delete_p)
    values ($id_column_bind_join sysdate,
            :last_modifying_user, :modified_ip_address, :delete_p)
    
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/ecommerce/tcl/ec-audit-trail-procs-oracle.xql}
dbqd.ecommerce.tcl.ec-audit-trail-procs-oracle.ec_audit_trail.get_entries_sql {dbqd.ecommerce.tcl.ec-audit-trail-procs-oracle.ec_audit_trail.get_entries_sql {

      select $audit_table_name.*,
           $audit_table_name.rowid,
           to_char($audit_table_name.last_modified,
                   'Mon DD, YYYY HH12:MI AM') as last_modified,
           users.first_names || ' ' || users.last_name
                   as modifying_user_name
      from $audit_table_name, cc_users users
     where users.user_id = $audit_table_name.last_modifying_user $audit_table_id_clause $date_clause
  order by $audit_table_name.last_modified asc

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/ecommerce/tcl/ec-audit-trail-procs-oracle.xql}
dbqd.ecommerce.tcl.ec-audit-trail-procs.ec_audit_delete_row.audit_table_insert {dbqd.ecommerce.tcl.ec-audit-trail-procs.ec_audit_delete_row.audit_table_insert {
      insert into $audit_table_name
      ($id_column_join last_modified, last_modifying_user, modified_ip_address, delete_p)
      values 
      ($id_column_bind_join current_timestamp, :last_modifying_user, :modified_ip_address, :delete_p)
    } {} {} {postgresql 7.1} c:/web/openacs-4/packages/ecommerce/tcl/ec-audit-trail-procs-postgresql.xql}
dbqd.ecommerce.tcl.ec-audit-trail-procs.ec_audit_trail.get_entries_sql {dbqd.ecommerce.tcl.ec-audit-trail-procs.ec_audit_trail.get_entries_sql {
      select $audit_table_name.*, $audit_table_name.oid as rowid, to_char($audit_table_name.last_modified, 'Mon DD, YYYY HH12:MI AM') as last_modified, 
      	  users.first_names || ' ' || users.last_name as modifying_user_name
      from $audit_table_name, cc_users users
      where users.user_id = $audit_table_name.last_modifying_user $audit_table_id_clause $date_clause
      order by $audit_table_name.last_modified asc
    } {} {} {postgresql 7.1} c:/web/openacs-4/packages/ecommerce/tcl/ec-audit-trail-procs-postgresql.xql}
dbqd.ecommerce.tcl.ec-audit-trail-procs.ec_audit_process_row.audit_table_column_select {dbqd.ecommerce.tcl.ec-audit-trail-procs.ec_audit_process_row.audit_table_column_select {
      select distinct $id_column
      from $main_table_name
      where [join $date_clause_list "\nand "]
    } {} {} {} c:/web/openacs-4/packages/ecommerce/tcl/ec-audit-trail-procs.xql}
dbqd.ecommerce.tcl.ec-audit-trail-procs.ec_audit_process_row.audit_table_column_select {dbqd.ecommerce.tcl.ec-audit-trail-procs.ec_audit_process_row.audit_table_column_select {
      select distinct $id_column
      from $main_table_name
      where [join $date_clause_list "\nand "]
    } {} {} {} c:/web/openacs-4/packages/ecommerce/tcl/ec-audit-trail-procs.xql}
dbqd.ecommerce.tcl.ecommerce-credit-procs-oracle.ec_creditcard_authorization.creditcard_data_select {dbqd.ecommerce.tcl.ecommerce-credit-procs-oracle.ec_creditcard_authorization.creditcard_data_select {
      select c.creditcard_number as card_number, substr(creditcard_expire,1,2) as card_exp_month, substr(creditcard_expire,4,2) as card_exp_year, 
	  c.creditcard_type, p.first_names || ' ' || p.last_name as card_name,
          a.zip_code as billing_zip,
          a.line1 as billing_address, 
          a.city as billing_city, 
          nvl(a.usps_abbrev, a.full_state_name) as billing_state, 
          a.country_code as billing_country
      from ec_creditcards c, persons p, ec_addresses a 
      where c.user_id=p.person_id 
      and c.creditcard_id = :creditcard_id
      and c.billing_address = a.address_id
    } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/ecommerce/tcl/ecommerce-credit-procs-oracle.xql}
dbqd.ecommerce.tcl.ecommerce-credit-procs-oracle.ec_creditcard_marking.transaction_select {dbqd.ecommerce.tcl.ecommerce-credit-procs-oracle.ec_creditcard_marking.transaction_select {
      select f.transaction_amount, f.transaction_id, c.creditcard_type, p.first_names || ' ' || p.last_name as card_name, 
	  c.creditcard_number as card_number, substr(creditcard_expire,1,2) as card_exp_month, substr(creditcard_expire,4,2) as card_exp_year, c.creditcard_type, 
          a.zip_code as billing_zip,
          a.line1 as billing_address, 
          a.city as billing_city, 
          nvl(a.usps_abbrev, a.full_state_name) as billing_state, 
          a.country_code as billing_country
      from ec_financial_transactions f, ec_creditcards c, persons p, ec_addresses a  
      where transaction_id = :transaction_id
      and f.creditcard_id = c.creditcard_id 
      and c.user_id = p.person_id
      and c.billing_address = a.address_id
    } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/ecommerce/tcl/ecommerce-credit-procs-oracle.xql}
dbqd.ecommerce.tcl.ecommerce-credit-procs-oracle.ec_creditcard_return.transaction_info_select {dbqd.ecommerce.tcl.ecommerce-credit-procs-oracle.ec_creditcard_return.transaction_info_select {
      select t.refunded_transaction_id, t.transaction_amount, 
          c.creditcard_number as card_number, substr(creditcard_expire,1,2) as card_exp_month, substr(creditcard_expire,4,2) as card_exp_year, c.creditcard_type,
          p.first_names || ' ' || p.last_name as card_name, 
          a.zip_code as billing_zip,
          a.line1 as billing_address, 
          a.city as billing_city, 
          nvl(a.usps_abbrev, a.full_state_name) as billing_state, 
          a.country_code as billing_country
      from ec_financial_transactions t, ec_creditcards c, persons p, ec_addresses a  
      where t.transaction_id = :transaction_id 
      and c.creditcard_id = t.creditcard_id
      and c.user_id = p.person_id
      and c.billing_address = a.address_id
    } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/ecommerce/tcl/ecommerce-credit-procs-oracle.xql}
dbqd.ecommerce.tcl.ecommerce-credit-procs.ec_creditcard_authorization.creditcard_data_select {dbqd.ecommerce.tcl.ecommerce-credit-procs.ec_creditcard_authorization.creditcard_data_select {
      select c.creditcard_number as card_number, substring(creditcard_expire for 2) as card_exp_month, substring(creditcard_expire from 4 for 2) as card_exp_year, 
	  c.creditcard_type, p.first_names || ' ' || p.last_name as card_name,
          a.zip_code as billing_zip,
          a.line1 as billing_address, 
          a.city as billing_city, 
          coalesce(a.usps_abbrev, a.full_state_name) as billing_state, 
          a.country_code as billing_country
      from ec_creditcards c, persons p, ec_addresses a 
      where c.user_id=p.person_id 
      and c.creditcard_id = :creditcard_id
      and c.billing_address = a.address_id
    } {} {} {postgresql 7.1} c:/web/openacs-4/packages/ecommerce/tcl/ecommerce-credit-procs-postgresql.xql}
dbqd.ecommerce.tcl.ecommerce-credit-procs.ec_creditcard_marking.transaction_select {dbqd.ecommerce.tcl.ecommerce-credit-procs.ec_creditcard_marking.transaction_select {
      select f.transaction_amount, f.transaction_id, c.creditcard_type, p.first_names || ' ' || p.last_name as card_name, 
	  c.creditcard_number as card_number, substring(creditcard_expire for 2) as card_exp_month, substring(creditcard_expire from 4 for 2) as card_exp_year, c.creditcard_type, 
          a.zip_code as billing_zip,
          a.line1 as billing_address, 
          a.city as billing_city, 
          coalesce(a.usps_abbrev, a.full_state_name) as billing_state, 
          a.country_code as billing_country
      from ec_financial_transactions f, ec_creditcards c, persons p, ec_addresses a  
      where transaction_id = :transaction_id
      and f.creditcard_id = c.creditcard_id 
      and c.user_id = p.person_id
      and c.billing_address = a.address_id
    } {} {} {postgresql 7.1} c:/web/openacs-4/packages/ecommerce/tcl/ecommerce-credit-procs-postgresql.xql}
dbqd.ecommerce.tcl.ecommerce-credit-procs.ec_creditcard_return.transaction_info_select {dbqd.ecommerce.tcl.ecommerce-credit-procs.ec_creditcard_return.transaction_info_select {
      select t.refunded_transaction_id, t.transaction_amount, 
          c.creditcard_number as card_number, substring(creditcard_expire for 2) as card_exp_month, substring(creditcard_expire from 4 for 2) as card_exp_year, c.creditcard_type,
          p.first_names || ' ' || p.last_name as card_name, 
          a.zip_code as billing_zip,
          a.line1 as billing_address, 
          a.city as billing_city, 
          coalesce(a.usps_abbrev, a.full_state_name) as billing_state, 
          a.country_code as billing_country
      from ec_financial_transactions t, ec_creditcards c, persons p, ec_addresses a  
      where t.transaction_id = :transaction_id 
      and c.creditcard_id = t.creditcard_id
      and c.user_id = p.person_id
      and c.billing_address = a.address_id
    } {} {} {postgresql 7.1} c:/web/openacs-4/packages/ecommerce/tcl/ecommerce-credit-procs-postgresql.xql}
dbqd.ecommerce.tcl.ecommerce-credit-procs.ec_creditcard_authorization.order_data_select {dbqd.ecommerce.tcl.ecommerce-credit-procs.ec_creditcard_authorization.order_data_select {
      select ec_order_cost(:order_id) as total_amount, creditcard_id
      from ec_orders
      where order_id = :order_id
    } {} {} {} c:/web/openacs-4/packages/ecommerce/tcl/ecommerce-credit-procs.xql}
dbqd.ecommerce.tcl.ecommerce-credit-procs.ec_creditcard_authorization.transaction_data_select {dbqd.ecommerce.tcl.ecommerce-credit-procs.ec_creditcard_authorization.transaction_data_select {
      select transaction_amount as total_amount, creditcard_id
      from ec_financial_transactions
      where transaction_id = :transaction_id
    } {} {} {} c:/web/openacs-4/packages/ecommerce/tcl/ecommerce-credit-procs.xql}
dbqd.ecommerce.tcl.ecommerce-credit-procs.ec_creditcard_authorization.update_transaction_id {dbqd.ecommerce.tcl.ecommerce-credit-procs.ec_creditcard_authorization.update_transaction_id {
      update ec_financial_transactions 
      set transaction_id = :pgw_transaction_id
      where transaction_id = :transaction_id
    } {} {} {} c:/web/openacs-4/packages/ecommerce/tcl/ecommerce-credit-procs.xql}
dbqd.ecommerce.tcl.ecommerce-credit-procs.ec_creditcard_marking.update_transaction_id {dbqd.ecommerce.tcl.ecommerce-credit-procs.ec_creditcard_marking.update_transaction_id {
      update ec_financial_transactions 
      set transaction_id = :pgw_transaction_id
      where transaction_id = :transaction_id
    } {} {} {} c:/web/openacs-4/packages/ecommerce/tcl/ecommerce-credit-procs.xql}
dbqd.ecommerce.tcl.ecommerce-credit-procs.ec_creditcard_return.transaction_failure_update {dbqd.ecommerce.tcl.ecommerce-credit-procs.ec_creditcard_return.transaction_failure_update {
      update ec_financial_transactions 
      set failed_p = 't'
      where transaction_id = :transaction_id
    } {} {} {} c:/web/openacs-4/packages/ecommerce/tcl/ecommerce-credit-procs.xql}
dbqd.ecommerce.tcl.ecommerce-customer-service-procs-oracle.ec_customer_service_simple_issue.get_ec_issue_seq {dbqd.ecommerce.tcl.ecommerce-customer-service-procs-oracle.ec_customer_service_simple_issue.get_ec_issue_seq {
      select ec_issue_id_sequence.NEXTVAL from dual
    } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/ecommerce/tcl/ecommerce-customer-service-procs-oracle.xql}
dbqd.ecommerce.tcl.ecommerce-customer-service-procs-oracle.ec_customer_service_simple_issue.customer_service_interaction_insert {dbqd.ecommerce.tcl.ecommerce-customer-service-procs-oracle.ec_customer_service_simple_issue.customer_service_interaction_insert {
      insert into ec_customer_serv_interactions
      (interaction_id, customer_service_rep, user_identification_id, interaction_date, interaction_originator, interaction_type, interaction_headers)
      values
      (:interaction_id, :customer_service_rep, :user_identification_id, sysdate, :interaction_originator, :interaction_type, :interaction_headers)
    } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/ecommerce/tcl/ecommerce-customer-service-procs-oracle.xql}
dbqd.ecommerce.tcl.ecommerce-customer-service-procs-oracle.ec_customer_service_simple_issue.customer_service_issue_insert {dbqd.ecommerce.tcl.ecommerce-customer-service-procs-oracle.ec_customer_service_simple_issue.customer_service_issue_insert {
      insert into ec_customer_service_issues
      (issue_id, user_identification_id, order_id, open_date, close_date, closed_by, gift_certificate_id)
      values
      (:issue_id, :user_identification_id, :order_id, sysdate, sysdate, :customer_service_rep, :gift_certificate_id)
    } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/ecommerce/tcl/ecommerce-customer-service-procs-oracle.xql}
dbqd.ecommerce.tcl.ecommerce-customer-service-procs.ec_customer_service_simple_issue.get_ec_issue_seq {dbqd.ecommerce.tcl.ecommerce-customer-service-procs.ec_customer_service_simple_issue.get_ec_issue_seq {
      select ec_issue_id_sequence.nextval 
    } {} {} {postgresql 7.1} c:/web/openacs-4/packages/ecommerce/tcl/ecommerce-customer-service-procs-postgresql.xql}
dbqd.ecommerce.tcl.ecommerce-customer-service-procs.ec_customer_service_simple_issue.customer_service_interaction_insert {dbqd.ecommerce.tcl.ecommerce-customer-service-procs.ec_customer_service_simple_issue.customer_service_interaction_insert {
      insert into ec_customer_serv_interactions
      (interaction_id, customer_service_rep, user_identification_id, interaction_date, interaction_originator, interaction_type, interaction_headers)
      values
      (:interaction_id, :customer_service_rep, :user_identification_id, current_timestamp, :interaction_originator, :interaction_type, :interaction_headers)
    } {} {} {postgresql 7.1} c:/web/openacs-4/packages/ecommerce/tcl/ecommerce-customer-service-procs-postgresql.xql}
dbqd.ecommerce.tcl.ecommerce-customer-service-procs.ec_customer_service_simple_issue.customer_service_issue_insert {dbqd.ecommerce.tcl.ecommerce-customer-service-procs.ec_customer_service_simple_issue.customer_service_issue_insert {
      insert into ec_customer_service_issues
      (issue_id, user_identification_id, order_id, open_date, close_date, closed_by, gift_certificate_id)
      values
      (:issue_id, :user_identification_id, :order_id, current_timestamp, current_timestamp, :customer_service_rep, :gift_certificate_id)
    } {} {} {postgresql 7.1} c:/web/openacs-4/packages/ecommerce/tcl/ecommerce-customer-service-procs-postgresql.xql}
dbqd.ecommerce.tcl.ecommerce-customer-service-procs.ec_customer_service_simple_issue.user_identification_select {dbqd.ecommerce.tcl.ecommerce-customer-service-procs.ec_customer_service_simple_issue.user_identification_select {
      select user_identification_id from ec_user_identification where user_id = :user_id
    } {} {} {} c:/web/openacs-4/packages/ecommerce/tcl/ecommerce-customer-service-procs.xql}
dbqd.ecommerce.tcl.ecommerce-customer-service-procs.ec_customer_service_simple_issue.user_identification_insert {dbqd.ecommerce.tcl.ecommerce-customer-service-procs.ec_customer_service_simple_issue.user_identification_insert {
      insert into ec_user_identification
      (user_identification_id, user_id)
      values
      (:user_identification_id, :user_id)
    } {} {} {} c:/web/openacs-4/packages/ecommerce/tcl/ecommerce-customer-service-procs.xql}
dbqd.ecommerce.tcl.ecommerce-customer-service-procs.ec_customer_service_simple_issue.issue_type_map_insert {dbqd.ecommerce.tcl.ecommerce-customer-service-procs.ec_customer_service_simple_issue.issue_type_map_insert {
      insert into ec_cs_issue_type_map
      (issue_id, issue_type)
      values
      (:issue_id, :issue_type)
    } {} {} {} c:/web/openacs-4/packages/ecommerce/tcl/ecommerce-customer-service-procs.xql}
dbqd.ecommerce.tcl.ecommerce-customer-service-procs.ec_customer_service_simple_issue.customer_service_action_insert {dbqd.ecommerce.tcl.ecommerce-customer-service-procs.ec_customer_service_simple_issue.customer_service_action_insert {
      insert into ec_customer_service_actions
      (action_id, issue_id, interaction_id, action_details)
      values
      (:action_id, :issue_id, :interaction_id, :action_details)
    } {} {} {} c:/web/openacs-4/packages/ecommerce/tcl/ecommerce-customer-service-procs.xql}
dbqd.ecommerce.tcl.ecommerce-email-procs-oracle.ec_email_new_order.email_info_select {dbqd.ecommerce.tcl.ecommerce-email-procs-oracle.ec_email_new_order.email_info_select {
      select u.email,
      to_char(confirmed_date,'MM/DD/YY') as confirmed_date,
      shipping_address, u.user_id
      from ec_orders, cc_users u
      where ec_orders.user_id = u.user_id
      and order_id = :order_id
    } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/ecommerce/tcl/ecommerce-email-procs-oracle.xql}
dbqd.ecommerce.tcl.ecommerce-email-procs-oracle.ec_email_new_order.email_log_insert_1 {dbqd.ecommerce.tcl.ecommerce-email-procs-oracle.ec_email_new_order.email_log_insert_1 {
      insert into ec_automatic_email_log
      (user_identification_id, email_template_id, order_id, date_sent)
      values
      (:user_identification_id, 1, :order_id, sysdate)
    } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/ecommerce/tcl/ecommerce-email-procs-oracle.xql}
dbqd.ecommerce.tcl.ecommerce-email-procs-oracle.ec_email_order_shipped.email_log_insert_2 {dbqd.ecommerce.tcl.ecommerce-email-procs-oracle.ec_email_order_shipped.email_log_insert_2 {
      insert into ec_automatic_email_log
      (user_identification_id, email_template_id, order_id, shipment_id, date_sent)
      values
      (:user_identification_id, 2, :order_id, :shipment_id, sysdate)
    } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/ecommerce/tcl/ecommerce-email-procs-oracle.xql}
dbqd.ecommerce.tcl.ecommerce-email-procs-oracle.ec_email_delayed_credit_denied.email_log_insert_3 {dbqd.ecommerce.tcl.ecommerce-email-procs-oracle.ec_email_delayed_credit_denied.email_log_insert_3 {
      insert into ec_automatic_email_log
      (user_identification_id, email_template_id, order_id, date_sent)
      values
      (:user_identification_id, 3, :order_id, sysdate)
    } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/ecommerce/tcl/ecommerce-email-procs-oracle.xql}
dbqd.ecommerce.tcl.ecommerce-email-procs-oracle.ec_email_new_gift_certificate_order.email_log_insert_4 {dbqd.ecommerce.tcl.ecommerce-email-procs-oracle.ec_email_new_gift_certificate_order.email_log_insert_4 {
      insert into ec_automatic_email_log
      (user_identification_id, email_template_id, gift_certificate_id, date_sent)
      values
      (:user_identification_id, 4, :gift_certificate_id, sysdate)
    } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/ecommerce/tcl/ecommerce-email-procs-oracle.xql}
dbqd.ecommerce.tcl.ecommerce-email-procs-oracle.ec_email_gift_certificate_recipient.email_log_insert_5 {dbqd.ecommerce.tcl.ecommerce-email-procs-oracle.ec_email_gift_certificate_recipient.email_log_insert_5 {
      insert into ec_automatic_email_log
      (user_identification_id, email_template_id, gift_certificate_id, date_sent)
      values
      (:user_identification_id, 5, :gift_certificate_id, sysdate)
    } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/ecommerce/tcl/ecommerce-email-procs-oracle.xql}
dbqd.ecommerce.tcl.ecommerce-email-procs-oracle.ec_email_gift_certificate_order_failure.email_log_insert_6 {dbqd.ecommerce.tcl.ecommerce-email-procs-oracle.ec_email_gift_certificate_order_failure.email_log_insert_6 {
      insert into ec_automatic_email_log
      (user_identification_id, email_template_id, gift_certificate_id, date_sent)
      values
      (:user_identification_id, 6, :gift_certificate_id, sysdate)
    } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/ecommerce/tcl/ecommerce-email-procs-oracle.xql}
dbqd.ecommerce.tcl.ecommerce-email-procs.ec_email_new_order.email_info_select {dbqd.ecommerce.tcl.ecommerce-email-procs.ec_email_new_order.email_info_select {
      select u.email,
      to_char(confirmed_date,'MM/DD/YY') as confirmed_date,
      shipping_address, u.user_id
      from ec_orders, cc_users u
      where ec_orders.user_id = u.user_id
      and order_id = :order_id
    } {} {} {postgresql 7.1} c:/web/openacs-4/packages/ecommerce/tcl/ecommerce-email-procs-postgresql.xql}
dbqd.ecommerce.tcl.ecommerce-email-procs.ec_email_new_order.email_log_insert_1 {dbqd.ecommerce.tcl.ecommerce-email-procs.ec_email_new_order.email_log_insert_1 {
      insert into ec_automatic_email_log
      (user_identification_id, email_template_id, order_id, date_sent)
      values
      (:user_identification_id, 1, :order_id, current_timestamp)
    } {} {} {postgresql 7.1} c:/web/openacs-4/packages/ecommerce/tcl/ecommerce-email-procs-postgresql.xql}
dbqd.ecommerce.tcl.ecommerce-email-procs.ec_email_order_shipped.email_log_insert_2 {dbqd.ecommerce.tcl.ecommerce-email-procs.ec_email_order_shipped.email_log_insert_2 {
      insert into ec_automatic_email_log
      (user_identification_id, email_template_id, order_id, shipment_id, date_sent)
      values
      (:user_identification_id, 2, :order_id, :shipment_id, current_timestamp)
    } {} {} {postgresql 7.1} c:/web/openacs-4/packages/ecommerce/tcl/ecommerce-email-procs-postgresql.xql}
dbqd.ecommerce.tcl.ecommerce-email-procs.ec_email_delayed_credit_denied.email_log_insert_3 {dbqd.ecommerce.tcl.ecommerce-email-procs.ec_email_delayed_credit_denied.email_log_insert_3 {
      insert into ec_automatic_email_log
      (user_identification_id, email_template_id, order_id, date_sent)
      values
      (:user_identification_id, 3, :order_id, current_timestamp)
    } {} {} {postgresql 7.1} c:/web/openacs-4/packages/ecommerce/tcl/ecommerce-email-procs-postgresql.xql}
dbqd.ecommerce.tcl.ecommerce-email-procs.ec_email_new_gift_certificate_order.email_log_insert_4 {dbqd.ecommerce.tcl.ecommerce-email-procs.ec_email_new_gift_certificate_order.email_log_insert_4 {
      insert into ec_automatic_email_log
      (user_identification_id, email_template_id, gift_certificate_id, date_sent)
      values
      (:user_identification_id, 4, :gift_certificate_id, current_timestamp)
    } {} {} {postgresql 7.1} c:/web/openacs-4/packages/ecommerce/tcl/ecommerce-email-procs-postgresql.xql}
dbqd.ecommerce.tcl.ecommerce-email-procs.ec_email_gift_certificate_recipient.email_log_insert_5 {dbqd.ecommerce.tcl.ecommerce-email-procs.ec_email_gift_certificate_recipient.email_log_insert_5 {
      insert into ec_automatic_email_log
      (user_identification_id, email_template_id, gift_certificate_id, date_sent)
      values
      (:user_identification_id, 5, :gift_certificate_id, current_timestamp)
    } {} {} {postgresql 7.1} c:/web/openacs-4/packages/ecommerce/tcl/ecommerce-email-procs-postgresql.xql}
dbqd.ecommerce.tcl.ecommerce-email-procs.ec_email_gift_certificate_order_failure.email_log_insert_6 {dbqd.ecommerce.tcl.ecommerce-email-procs.ec_email_gift_certificate_order_failure.email_log_insert_6 {
      insert into ec_automatic_email_log
      (user_identification_id, email_template_id, gift_certificate_id, date_sent)
      values
      (:user_identification_id, 6, :gift_certificate_id, current_timestamp)
    } {} {} {postgresql 7.1} c:/web/openacs-4/packages/ecommerce/tcl/ecommerce-email-procs-postgresql.xql}
dbqd.ecommerce.tcl.ecommerce-email-procs.ec_email_new_order.template_select_1 {dbqd.ecommerce.tcl.ecommerce-email-procs.ec_email_new_order.template_select_1 {
      select subject as email_subject, message as email_body, issue_type_list
      from ec_email_templates
      where email_template_id = 1
    } {} {} {} c:/web/openacs-4/packages/ecommerce/tcl/ecommerce-email-procs.xql}
dbqd.ecommerce.tcl.ecommerce-email-procs.ec_email_product_notification.notification_select {dbqd.ecommerce.tcl.ecommerce-email-procs.ec_email_product_notification.notification_select {
      select ep.email_on_purchase_list, ep.product_name
      from ec_items ei, ec_products ep
      where ei.product_id = ep.product_id
      and ei.order_id = :order_id
      and email_on_purchase_list is not null
      group by ep.email_on_purchase_list, ep.product_name
    } {} {} {} c:/web/openacs-4/packages/ecommerce/tcl/ecommerce-email-procs.xql}
dbqd.ecommerce.tcl.ecommerce-email-procs.ec_email_delayed_credit_denied.user_select {dbqd.ecommerce.tcl.ecommerce-email-procs.ec_email_delayed_credit_denied.user_select {
      select u.email, u.user_id
      from ec_orders, cc_users u
      where ec_orders.user_id = u.user_id
      and order_id = :order_id
    } {} {} {} c:/web/openacs-4/packages/ecommerce/tcl/ecommerce-email-procs.xql}
dbqd.ecommerce.tcl.ecommerce-email-procs.ec_email_delayed_credit_denied.template_select_3 {dbqd.ecommerce.tcl.ecommerce-email-procs.ec_email_delayed_credit_denied.template_select_3 {
      select subject as email_subject, message as email_body, issue_type_list
      from ec_email_templates
      where email_template_id = 3
    } {} {} {} c:/web/openacs-4/packages/ecommerce/tcl/ecommerce-email-procs.xql}
dbqd.ecommerce.tcl.ecommerce-email-procs.ec_email_order_shipped.shipment_select {dbqd.ecommerce.tcl.ecommerce-email-procs.ec_email_order_shipped.shipment_select {
      select u.email, u.user_id, s.shipment_date, s.address_id, o.order_state, o.order_id
      from ec_orders o, cc_users u, ec_shipments s
      where o.user_id = u.user_id
      and o.order_id = s.order_id
      and s.shipment_id = :shipment_id
    } {} {} {} c:/web/openacs-4/packages/ecommerce/tcl/ecommerce-email-procs.xql}
dbqd.ecommerce.tcl.ecommerce-email-procs.ec_email_order_shipped.item_summary_select {dbqd.ecommerce.tcl.ecommerce-email-procs.ec_email_order_shipped.item_summary_select {
      select p.product_name, p.one_line_description, p.product_id, i.price_charged, i.price_name, count(*) as quantity
      from ec_items i, ec_products p
      where i.product_id=p.product_id
      and i.shipment_id=:shipment_id
      group by p.product_name, p.one_line_description, p.product_id, i.price_charged, i.price_name
    } {} {} {} c:/web/openacs-4/packages/ecommerce/tcl/ecommerce-email-procs.xql}
dbqd.ecommerce.tcl.ecommerce-email-procs.ec_email_order_shipped.template_select_2 {dbqd.ecommerce.tcl.ecommerce-email-procs.ec_email_order_shipped.template_select_2 {
      select subject as email_subject, message as email_body, issue_type_list
      from ec_email_templates
      where email_template_id = 2
    } {} {} {} c:/web/openacs-4/packages/ecommerce/tcl/ecommerce-email-procs.xql}
dbqd.ecommerce.tcl.ecommerce-email-procs.ec_email_new_gift_certificate_order.gift_certificate_select {dbqd.ecommerce.tcl.ecommerce-email-procs.ec_email_new_gift_certificate_order.gift_certificate_select {
      select g.purchased_by as user_id, u.email, g.recipient_email, g.amount
      from ec_gift_certificates g, cc_users u
      where g.purchased_by=u.user_id
      and g.gift_certificate_id=:gift_certificate_id
    } {} {} {} c:/web/openacs-4/packages/ecommerce/tcl/ecommerce-email-procs.xql}
dbqd.ecommerce.tcl.ecommerce-email-procs.ec_email_new_gift_certificate_order.template_select_4 {dbqd.ecommerce.tcl.ecommerce-email-procs.ec_email_new_gift_certificate_order.template_select_4 {
      select subject as email_subject, message as email_body, issue_type_list
      from ec_email_templates
      where email_template_id = 4
    } {} {} {} c:/web/openacs-4/packages/ecommerce/tcl/ecommerce-email-procs.xql}
dbqd.ecommerce.tcl.ecommerce-email-procs.ec_email_gift_certificate_order_failure.gift_certificate_select_2 {dbqd.ecommerce.tcl.ecommerce-email-procs.ec_email_gift_certificate_order_failure.gift_certificate_select_2 {
      select g.purchased_by as user_id, u.email, g.recipient_email, g.amount, g.certificate_to, g.certificate_from, g.certificate_message
      from ec_gift_certificates g, cc_users u
      where g.purchased_by=u.user_id
      and g.gift_certificate_id=:gift_certificate_id
    } {} {} {} c:/web/openacs-4/packages/ecommerce/tcl/ecommerce-email-procs.xql}
dbqd.ecommerce.tcl.ecommerce-email-procs.ec_email_gift_certificate_order_failure.template_select_6 {dbqd.ecommerce.tcl.ecommerce-email-procs.ec_email_gift_certificate_order_failure.template_select_6 {
      select subject as email_subject, message as email_body, issue_type_list
      from ec_email_templates
      where email_template_id = 6
    } {} {} {} c:/web/openacs-4/packages/ecommerce/tcl/ecommerce-email-procs.xql}
dbqd.ecommerce.tcl.ecommerce-email-procs.ec_email_gift_certificate_recipient.gift_certificate_select_3 {dbqd.ecommerce.tcl.ecommerce-email-procs.ec_email_gift_certificate_recipient.gift_certificate_select_3 {
      select g.recipient_email as email, g.amount, g.certificate_to, g.certificate_from, g.certificate_message, g.claim_check
      from ec_gift_certificates g
      where g.gift_certificate_id=:gift_certificate_id
    } {} {} {} c:/web/openacs-4/packages/ecommerce/tcl/ecommerce-email-procs.xql}
dbqd.ecommerce.tcl.ecommerce-email-procs.ec_email_gift_certificate_recipient.template_select_5 {dbqd.ecommerce.tcl.ecommerce-email-procs.ec_email_gift_certificate_recipient.template_select_5 {
      select subject as email_subject, message as email_body, issue_type_list from ec_email_templates where email_template_id=5
    } {} {} {} c:/web/openacs-4/packages/ecommerce/tcl/ecommerce-email-procs.xql}
dbqd.ecommerce.tcl.ecommerce-email-procs.ec_email_gift_certificate_recipient.user_id_select {dbqd.ecommerce.tcl.ecommerce-email-procs.ec_email_gift_certificate_recipient.user_id_select {
      select user_id
      from cc_users
      where email=lower(:email)
    } {} {} {} c:/web/openacs-4/packages/ecommerce/tcl/ecommerce-email-procs.xql}
dbqd.ecommerce.tcl.ecommerce-email-procs.ec_email_gift_certificate_recipient.user_identification_id_select {dbqd.ecommerce.tcl.ecommerce-email-procs.ec_email_gift_certificate_recipient.user_identification_id_select {
      select user_identification_id from ec_user_identification where email=lower(:email)
    } {} {} {} c:/web/openacs-4/packages/ecommerce/tcl/ecommerce-email-procs.xql}
dbqd.ecommerce.tcl.ecommerce-email-procs.ec_email_gift_certificate_recipient.user_identification_id_insert {dbqd.ecommerce.tcl.ecommerce-email-procs.ec_email_gift_certificate_recipient.user_identification_id_insert {
      insert into ec_user_identification
      (user_identification_id, email)
      values
      (:user_identification_id, :trimmed_email)
    } {} {} {} c:/web/openacs-4/packages/ecommerce/tcl/ecommerce-email-procs.xql}
dbqd.ecommerce.tcl.ecommerce-money-computations-procs-oracle.ec_price_shipping_gift_certificate_and_tax_in_an_order.get_ec_gc_bal {dbqd.ecommerce.tcl.ecommerce-money-computations-procs-oracle.ec_price_shipping_gift_certificate_and_tax_in_an_order.get_ec_gc_bal {
      select ec_gift_certificate_balance(:user_id) from dual
    } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/ecommerce/tcl/ecommerce-money-computations-procs-oracle.xql}
dbqd.ecommerce.tcl.ecommerce-money-computations-procs-oracle.ec_price_shipping_gift_certificate_and_tax_in_an_order.get_gc_amount {dbqd.ecommerce.tcl.ecommerce-money-computations-procs-oracle.ec_price_shipping_gift_certificate_and_tax_in_an_order.get_gc_amount {
      select ec_order_gift_cert_amount(:order_id) from dual
    } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/ecommerce/tcl/ecommerce-money-computations-procs-oracle.xql}
dbqd.ecommerce.tcl.ecommerce-money-computations-procs.ec_price_shipping_gift_certificate_and_tax_in_an_order.get_ec_gc_bal {dbqd.ecommerce.tcl.ecommerce-money-computations-procs.ec_price_shipping_gift_certificate_and_tax_in_an_order.get_ec_gc_bal {
      select ec_gift_certificate_balance(:user_id) 
    } {} {} {postgresql 7.1} c:/web/openacs-4/packages/ecommerce/tcl/ecommerce-money-computations-procs-postgresql.xql}
dbqd.ecommerce.tcl.ecommerce-money-computations-procs.ec_price_shipping_gift_certificate_and_tax_in_an_order.get_gc_amount {dbqd.ecommerce.tcl.ecommerce-money-computations-procs.ec_price_shipping_gift_certificate_and_tax_in_an_order.get_gc_amount {
      select ec_order_gift_cert_amount(:order_id) 
    } {} {} {postgresql 7.1} c:/web/openacs-4/packages/ecommerce/tcl/ecommerce-money-computations-procs-postgresql.xql}
dbqd.ecommerce.tcl.ecommerce-money-computations-procs.ec_lowest_price_and_price_name_for_an_item.get_price {dbqd.ecommerce.tcl.ecommerce-money-computations-procs.ec_lowest_price_and_price_name_for_an_item.get_price {
      select price from ec_products where product_id=:product_id
    } {} {} {} c:/web/openacs-4/packages/ecommerce/tcl/ecommerce-money-computations-procs.xql}
dbqd.ecommerce.tcl.ecommerce-money-computations-procs.ec_lowest_price_and_price_name_for_an_item.get_product_infos {dbqd.ecommerce.tcl.ecommerce-money-computations-procs.ec_lowest_price_and_price_name_for_an_item.get_product_infos {
      select p.price, c.user_class_name
      from ec_product_user_class_prices p, ec_user_classes c
      where p.product_id=:product_id
      and p.user_class_id=c.user_class_id
      and p.user_class_id in (select m.user_class_id 
	  from ec_user_class_user_map m 
	  where m.user_id=:user_id $additional_user_class_restriction)
    } {} {} {} c:/web/openacs-4/packages/ecommerce/tcl/ecommerce-money-computations-procs.xql}
dbqd.ecommerce.tcl.ecommerce-money-computations-procs.ec_lowest_price_and_price_name_for_an_item.get_sale_prices {dbqd.ecommerce.tcl.ecommerce-money-computations-procs.ec_lowest_price_and_price_name_for_an_item.get_sale_prices {
      select sale_price, sale_name
      from ec_sale_prices_current
      where product_id=:product_id
      and (offer_code is null $or_part_of_query)
    } {} {} {} c:/web/openacs-4/packages/ecommerce/tcl/ecommerce-money-computations-procs.xql}
dbqd.ecommerce.tcl.ecommerce-money-computations-procs.ec_shipping_price_for_one_item.get_shipping_info {dbqd.ecommerce.tcl.ecommerce-money-computations-procs.ec_shipping_price_for_one_item.get_shipping_info {
      select shipping, shipping_additional, weight 
      from ec_products 
      where product_id=:product_id
    } {} {} {} c:/web/openacs-4/packages/ecommerce/tcl/ecommerce-money-computations-procs.xql}
dbqd.ecommerce.tcl.ecommerce-money-computations-procs.ec_shipping_price_for_one_item.get_default_shipping_info {dbqd.ecommerce.tcl.ecommerce-money-computations-procs.ec_shipping_price_for_one_item.get_default_shipping_info {
      select default_shipping_per_item, weight_shipping_cost 
      from ec_admin_settings
    } {} {} {} c:/web/openacs-4/packages/ecommerce/tcl/ecommerce-money-computations-procs.xql}
dbqd.ecommerce.tcl.ecommerce-money-computations-procs.ec_shipping_price_for_one_item.get_first_item {dbqd.ecommerce.tcl.ecommerce-money-computations-procs.ec_shipping_price_for_one_item.get_first_item {
      select min(item_id) 
      from ec_items 
      where product_id = :product_id
      and order_id:order_id
    } {} {} {} c:/web/openacs-4/packages/ecommerce/tcl/ecommerce-money-computations-procs.xql}
dbqd.ecommerce.tcl.ecommerce-money-computations-procs.ec_shipping_price_for_one_item.get_exp_info {dbqd.ecommerce.tcl.ecommerce-money-computations-procs.ec_shipping_price_for_one_item.get_exp_info {
      select add_exp_amount_per_item, add_exp_amount_by_weight 
      from ec_admin_settings
    } {} {} {} c:/web/openacs-4/packages/ecommerce/tcl/ecommerce-money-computations-procs.xql}
dbqd.ecommerce.tcl.ecommerce-money-computations-procs.ec_price_price_name_shipping_price_tax_shipping_tax_for_one_item.get_item_price {dbqd.ecommerce.tcl.ecommerce-money-computations-procs.ec_price_price_name_shipping_price_tax_shipping_tax_for_one_item.get_item_price {
      select price from ec_products
      where product_id=:product_id
    } {} {} {} c:/web/openacs-4/packages/ecommerce/tcl/ecommerce-money-computations-procs.xql}
dbqd.ecommerce.tcl.ecommerce-money-computations-procs.ec_price_price_name_shipping_price_tax_shipping_tax_for_one_item.get_price_and_name {dbqd.ecommerce.tcl.ecommerce-money-computations-procs.ec_price_price_name_shipping_price_tax_shipping_tax_for_one_item.get_price_and_name {
      select p.price, c.user_class_name
      from ec_product_user_class_prices p, ec_user_classes c
      where p.product_id=:product_id
      and p.user_class_id=c.user_class_id
      and p.user_class_id in ([join $user_class_id_list ", "])
    } {} {} {} c:/web/openacs-4/packages/ecommerce/tcl/ecommerce-money-computations-procs.xql}
dbqd.ecommerce.tcl.ecommerce-money-computations-procs.ec_lowest_price_and_price_name_for_an_item.get_sale_prices {dbqd.ecommerce.tcl.ecommerce-money-computations-procs.ec_lowest_price_and_price_name_for_an_item.get_sale_prices {
      select sale_price, sale_name
      from ec_sale_prices_current
      where product_id=:product_id
      and (offer_code is null $or_part_of_query)
    } {} {} {} c:/web/openacs-4/packages/ecommerce/tcl/ecommerce-money-computations-procs.xql}
dbqd.ecommerce.tcl.ecommerce-money-computations-procs.ec_price_price_name_shipping_price_tax_shipping_tax_for_one_item.get_shipping_costs {dbqd.ecommerce.tcl.ecommerce-money-computations-procs.ec_price_price_name_shipping_price_tax_shipping_tax_for_one_item.get_shipping_costs {
      select case when no_shipping_avail_p = 'f' then shipping else null end as shipping, 
	  case when no_shipping_avail_p = 'f' then shipping_additional else null end as shipping_additional, 
	  case when no_shipping_avail_p = 'f' then weight else null end as weight
      from ec_products 
      where product_id = :product_id
    } {} {} {} c:/web/openacs-4/packages/ecommerce/tcl/ecommerce-money-computations-procs.xql}
dbqd.ecommerce.tcl.ecommerce-money-computations-procs.ec_price_price_name_shipping_price_tax_shipping_tax_for_one_item.get_first_instance {dbqd.ecommerce.tcl.ecommerce-money-computations-procs.ec_price_price_name_shipping_price_tax_shipping_tax_for_one_item.get_first_instance {
      select min(item_id) 
      from ec_items 
      where product_id = :product_id
      and order_id=:order_id
    } {} {} {} c:/web/openacs-4/packages/ecommerce/tcl/ecommerce-money-computations-procs.xql}
dbqd.ecommerce.tcl.ecommerce-money-computations-procs.ec_price_shipping_gift_certificate_and_tax_in_an_order.get_confirmed_info {dbqd.ecommerce.tcl.ecommerce-money-computations-procs.ec_price_shipping_gift_certificate_and_tax_in_an_order.get_confirmed_info {
      select confirmed_date, user_id,
      ec_total_price(:order_id) as total_price,
      ec_total_shipping(:order_id) as total_shipping,
      ec_total_tax(:order_id) as total_tax
      from ec_orders
      where order_id = :order_id
    } {} {} {} c:/web/openacs-4/packages/ecommerce/tcl/ecommerce-money-computations-procs.xql}
dbqd.ecommerce.tcl.ecommerce-procs-oracle.ec_url_mem.ec_mountpoint {dbqd.ecommerce.tcl.ecommerce-procs-oracle.ec_url_mem.ec_mountpoint {
      select site_node.url(s.node_id)
      from site_nodes s, apm_packages a
      where s.object_id = a.package_id
      and a.package_key = 'ecommerce'
    } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/ecommerce/tcl/ecommerce-procs-oracle.xql}
dbqd.ecommerce.tcl.ecommerce-procs-oracle.ec_package_url_lookup_mem.ec_mountpoint {dbqd.ecommerce.tcl.ecommerce-procs-oracle.ec_package_url_lookup_mem.ec_mountpoint {
      select site_node.url(s.node_id)
      from site_nodes s, apm_packages a
      where s.object_id = a.package_id
      and a.package_key = '$package_key'
    } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/ecommerce/tcl/ecommerce-procs-oracle.xql}
dbqd.ecommerce.tcl.ecommerce-procs-oracle.ec_customer_comments.product_comment_info_select {dbqd.ecommerce.tcl.ecommerce-procs-oracle.ec_customer_comments.product_comment_info_select {
      select c.one_line_summary,
      c.rating,
      c.user_comment,
      to_char(c.last_modified,'Day Month DD, YYYY') as last_modified_pretty,
      u.email,
      u.user_id
      from ec_product_comments c,
      cc_users u
      where c.user_id = u.user_id
      and c.product_id = :product_id
      $end_of_comment_query
    } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/ecommerce/tcl/ecommerce-procs-oracle.xql}
dbqd.ecommerce.tcl.ecommerce-procs-oracle.ec_mailing_list_link_for_a_product.mailing_categories {dbqd.ecommerce.tcl.ecommerce-procs-oracle.ec_mailing_list_link_for_a_product.mailing_categories {
      select category_id, subcategory_id, subsubcategory_id, product_id 
      from ($common_sql) as dummy 
      where rownum < 2
    } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/ecommerce/tcl/ecommerce-procs-oracle.xql}
dbqd.ecommerce.tcl.ecommerce-procs-oracle.ec_add_to_cart_link.get_product_info_1 {dbqd.ecommerce.tcl.ecommerce-procs-oracle.ec_add_to_cart_link.get_product_info_1 {
      select decode(sign(sysdate-available_date),1,1,null,1,0) as available_p,
      color_list, size_list, style_list, no_shipping_avail_p
      from ec_products
      where product_id = :product_id
    } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/ecommerce/tcl/ecommerce-procs-oracle.xql}
dbqd.ecommerce.tcl.ecommerce-procs-oracle.ec_add_to_cart_link.available_date_select {dbqd.ecommerce.tcl.ecommerce-procs-oracle.ec_add_to_cart_link.available_date_select {
      select to_char(available_date,'Month DD, YYYY') available_date
      from ec_products
      where product_id = :product_id
    } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/ecommerce/tcl/ecommerce-procs-oracle.xql}
dbqd.ecommerce.tcl.ecommerce-procs-oracle.ec_order_summary_for_customer.order_info_select {dbqd.ecommerce.tcl.ecommerce-procs-oracle.ec_order_summary_for_customer.order_info_select {
      select eco.confirmed_date, eco.creditcard_id, eco.shipping_method,
      u.email, eco.shipping_address as shipping_address_id, 
      ecc.billing_address as billing_address_id
      from ec_orders eco,
      cc_users u,
      ec_creditcards ecc
      where eco.order_id = :order_id
      and eco.user_id = u.user_id(+)
      and eco.creditcard_id = ecc.creditcard_id(+)
    } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/ecommerce/tcl/ecommerce-procs-oracle.xql}
dbqd.ecommerce.tcl.ecommerce-procs-oracle.ec_create_new_session_if_necessary.insert_user_session_sql {dbqd.ecommerce.tcl.ecommerce-procs-oracle.ec_create_new_session_if_necessary.insert_user_session_sql {
      insert into ec_user_sessions
      (user_session_id, ip_address, start_time, http_user_agent)
      values
      (:user_session_id, :ip_address, sysdate, :http_user_agent)
    } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/ecommerce/tcl/ecommerce-procs-oracle.xql}
dbqd.ecommerce.tcl.ecommerce-procs-oracle.ec_price_line.get_regular_approvalrequired_price {dbqd.ecommerce.tcl.ecommerce-procs-oracle.ec_price_line.get_regular_approvalrequired_price {
      select min(decode(ucp.price,null,p.price,
      decode(sign(ucp.price-p.price),1,p.price,ucp.price))) as regular_price,
      ucp.user_class_name
      from ec_products p, (select * from (select uc.product_id, uc.price, c.user_class_name 
      from ec_product_user_class_prices uc, ec_user_classes c, 
      ec_user_class_user_map m 
      where uc.user_class_id = c.user_class_id 
      and uc.product_id = :product_id
      and uc.user_class_id = m.user_class_id
      and m.user_id = :user_id 
      and m.user_class_approved_p = 't' order by uc.price)
      where rownum=1) ucp
      where p.product_id = :product_id and ucp.product_id(+)=p.product_id
      group by p.product_id, p.price, ucp.user_class_name, ucp.price
    } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/ecommerce/tcl/ecommerce-procs-oracle.xql}
dbqd.ecommerce.tcl.ecommerce-procs-oracle.ec_price_line.get_regular_no_approval_required_price {dbqd.ecommerce.tcl.ecommerce-procs-oracle.ec_price_line.get_regular_no_approval_required_price {
      select min(decode(ucp.price,null,p.price,
      decode(sign(ucp.price-p.price),1,p.price,ucp.price))) as regular_price,
      ucp.user_class_name
      from ec_products p, (select * from (select uc.product_id, uc.price, c.user_class_name 
      from ec_product_user_class_prices uc, ec_user_classes c, 
      ec_user_class_user_map m 
      where uc.user_class_id = c.user_class_id 
      and uc.product_id = :product_id
      and uc.user_class_id = m.user_class_id
      and m.user_id = :user_id 
      and (m.user_class_approved_p is null or m.user_class_approved_p = 't') order by uc.price)
      where rownum=1) ucp
      where p.product_id = :product_id and ucp.product_id(+)=p.product_id
      group by p.product_id, p.price, ucp.user_class_name, ucp.price
    } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/ecommerce/tcl/ecommerce-procs-oracle.xql}
dbqd.ecommerce.tcl.ecommerce-procs.ec_url_mem.ec_mountpoint {dbqd.ecommerce.tcl.ecommerce-procs.ec_url_mem.ec_mountpoint {
      select site_node__url(s.node_id)
      from site_nodes s, apm_packages a
      where s.object_id = a.package_id
      and a.package_key = 'ecommerce'
    } {} {} {postgresql 7.1} c:/web/openacs-4/packages/ecommerce/tcl/ecommerce-procs-postgresql.xql}
dbqd.ecommerce.tcl.ecommerce-procs.ec_package_url_lookup_mem.ec_mountpoint {dbqd.ecommerce.tcl.ecommerce-procs.ec_package_url_lookup_mem.ec_mountpoint {
      select site_node__url(s.node_id)
      from site_nodes s, apm_packages a
      where s.object_id = a.package_id
      and a.package_key = '$package_key'
    } {} {} {postgresql 7.1} c:/web/openacs-4/packages/ecommerce/tcl/ecommerce-procs-postgresql.xql}
dbqd.ecommerce.tcl.ecommerce-procs.ec_customer_comments.product_comment_info_select {dbqd.ecommerce.tcl.ecommerce-procs.ec_customer_comments.product_comment_info_select {
      select c.one_line_summary,
      c.rating,
      c.user_comment,
      to_char(c.last_modified,'Day Month DD, YYYY') as last_modified_pretty,
      u.email,
      u.user_id
      from ec_product_comments c,
      cc_users u
      where c.user_id = u.user_id
      and c.product_id = :product_id
      $end_of_comment_query
    } {} {} {postgresql 7.1} c:/web/openacs-4/packages/ecommerce/tcl/ecommerce-procs-postgresql.xql}
dbqd.ecommerce.tcl.ecommerce-procs.ec_mailing_list_link_for_a_product.mailing_categories {dbqd.ecommerce.tcl.ecommerce-procs.ec_mailing_list_link_for_a_product.mailing_categories {
      select category_id, subcategory_id, subsubcategory_id, product_id 
      from ($common_sql) as dummy 
      limit 1
    } {} {} {postgresql 7.1} c:/web/openacs-4/packages/ecommerce/tcl/ecommerce-procs-postgresql.xql}
dbqd.ecommerce.tcl.ecommerce-procs.ec_add_to_cart_link.get_product_info_1 {dbqd.ecommerce.tcl.ecommerce-procs.ec_add_to_cart_link.get_product_info_1 {
      select case when current_timestamp > available_date  then 1 when current_timestamp-available_date is NULL then 1 else 0 end as available_p,
      color_list, size_list, style_list, no_shipping_avail_p
      from ec_products
      where product_id = :product_id
    } {} {} {postgresql 7.1} c:/web/openacs-4/packages/ecommerce/tcl/ecommerce-procs-postgresql.xql}
dbqd.ecommerce.tcl.ecommerce-procs.ec_add_to_cart_link.available_date_select {dbqd.ecommerce.tcl.ecommerce-procs.ec_add_to_cart_link.available_date_select {
      select to_char(available_date,'Month DD, YYYY') as available_date
      from ec_products
      where product_id = :product_id
    } {} {} {postgresql 7.1} c:/web/openacs-4/packages/ecommerce/tcl/ecommerce-procs-postgresql.xql}
dbqd.ecommerce.tcl.ecommerce-procs.ec_create_new_session_if_necessary.insert_user_session_sql {dbqd.ecommerce.tcl.ecommerce-procs.ec_create_new_session_if_necessary.insert_user_session_sql {
      insert into ec_user_sessions
      (user_session_id, ip_address, start_time, http_user_agent)
      values
      (:user_session_id, :ip_address, current_timestamp, :http_user_agent)
    } {} {} {postgresql 7.1} c:/web/openacs-4/packages/ecommerce/tcl/ecommerce-procs-postgresql.xql}
dbqd.ecommerce.tcl.ecommerce-procs.ec_price_line.get_regular_approvalrequired_price {dbqd.ecommerce.tcl.ecommerce-procs.ec_price_line.get_regular_approvalrequired_price {
      select min(case when ucp.price is null then p.price 
          when p.price < ucp.price then p.price 
          else ucp.price end) as regular_price, ucp.user_class_name 
      from ec_products p left join (select uc.product_id, uc.price, c.user_class_name 
          from ec_product_user_class_prices uc, ec_user_classes c, ec_user_class_user_map m 
          where uc.user_class_id = c.user_class_id 
          and uc.product_id = :product_id
          and uc.user_class_id = m.user_class_id
          and m.user_id = :user_id 
          and m.user_class_approved_p = 't' 
          order by uc.price
          limit 1) as ucp using (product_id) 
      where p.product_id = :product_id 
      group by p.product_id, ucp.user_class_name
    } {} {} {postgresql 7.1} c:/web/openacs-4/packages/ecommerce/tcl/ecommerce-procs-postgresql.xql}
dbqd.ecommerce.tcl.ecommerce-procs.ec_price_line.get_regular_no_approval_required_price {dbqd.ecommerce.tcl.ecommerce-procs.ec_price_line.get_regular_no_approval_required_price {
      select min(case when ucp.price is null then p.price 
          when p.price < ucp.price then p.price 
          else ucp.price end) as regular_price, ucp.user_class_name 
      from ec_products p left join (select uc.product_id, uc.price, c.user_class_name 
          from ec_product_user_class_prices uc, ec_user_classes c, ec_user_class_user_map m 
          where uc.user_class_id = c.user_class_id 
          and uc.product_id = :product_id
          and uc.user_class_id = m.user_class_id
          and m.user_id = :user_id 
          and (m.user_class_approved_p is null 
          or m.user_class_approved_p = 't')
          order by uc.price
          limit 1) as ucp using (product_id) 
      where p.product_id = :product_id 
      group by p.product_id, ucp.user_class_name
    } {} {} {postgresql 7.1} c:/web/openacs-4/packages/ecommerce/tcl/ecommerce-procs-postgresql.xql}
dbqd.ecommerce.tcl.ecommerce-procs.ec_id_mem.acs_ec_id_get {dbqd.ecommerce.tcl.ecommerce-procs.ec_id_mem.acs_ec_id_get {
      select package_id from apm_packages
      where package_key = 'ecommerce'
    } {} {} {} c:/web/openacs-4/packages/ecommerce/tcl/ecommerce-procs.xql}
dbqd.ecommerce.tcl.ecommerce-procs.ec_category_subcategory_and_subsubcategory_display.subcategories_select {dbqd.ecommerce.tcl.ecommerce-procs.ec_category_subcategory_and_subsubcategory_display.subcategories_select {
      select subcategory_id 
      from ec_subcategories 
      where category_id = :category_id 
      and subcategory_id in ([join $subcategory_list ", "]) 
      order by subcategory_name
    } {} {} {} c:/web/openacs-4/packages/ecommerce/tcl/ecommerce-procs.xql}
dbqd.ecommerce.tcl.ecommerce-procs.ec_category_subcategory_and_subsubcategory_display.category_name_select_1 {dbqd.ecommerce.tcl.ecommerce-procs.ec_category_subcategory_and_subsubcategory_display.category_name_select_1 {
      select category_name 
      from ec_categories 
      where category_id = :category_id
    } {} {} {} c:/web/openacs-4/packages/ecommerce/tcl/ecommerce-procs.xql}
dbqd.ecommerce.tcl.ecommerce-procs.ec_category_subcategory_and_subsubcategory_display.category_name_select_2 {dbqd.ecommerce.tcl.ecommerce-procs.ec_category_subcategory_and_subsubcategory_display.category_name_select_2 {
      select category_name 
      from ec_categories 
      where category_id = :category_id
    } {} {} {} c:/web/openacs-4/packages/ecommerce/tcl/ecommerce-procs.xql}
dbqd.ecommerce.tcl.ecommerce-procs.ec_category_subcategory_and_subsubcategory_display.subcategory_name_select_1 {dbqd.ecommerce.tcl.ecommerce-procs.ec_category_subcategory_and_subsubcategory_display.subcategory_name_select_1 {
      select subcategory_name 
      from ec_subcategories 
      where subcategory_id = :subcategory_id
    } {} {} {} c:/web/openacs-4/packages/ecommerce/tcl/ecommerce-procs.xql}
dbqd.ecommerce.tcl.ecommerce-procs.ec_category_subcategory_and_subsubcategory_display.subcategory_name_select_2 {dbqd.ecommerce.tcl.ecommerce-procs.ec_category_subcategory_and_subsubcategory_display.subcategory_name_select_2 {
      select subsubcategory_name 
      from ec_subsubcategories 
      where subcategory_id = :subcategory_id 
      and subsubcategory_id in ([join $subsubcategory_list ","]) 
      order by subsubcategory_name
    } {} {} {} c:/web/openacs-4/packages/ecommerce/tcl/ecommerce-procs.xql}
dbqd.ecommerce.tcl.ecommerce-procs.ec_product_name_internal.product_name_select {dbqd.ecommerce.tcl.ecommerce-procs.ec_product_name_internal.product_name_select {
      select product_name 
      from ec_products 
      where product_id = :product_id
    } {} {} {} c:/web/openacs-4/packages/ecommerce/tcl/ecommerce-procs.xql}
dbqd.ecommerce.tcl.ecommerce-procs.ec_full_categorization_display.subcategory_id_select {dbqd.ecommerce.tcl.ecommerce-procs.ec_full_categorization_display.subcategory_id_select {
      select subcategory_id 
      from ec_subsubcategories 
      where subsubcategory_id = :subsubcategory_id
    } {} {} {} c:/web/openacs-4/packages/ecommerce/tcl/ecommerce-procs.xql}
dbqd.ecommerce.tcl.ecommerce-procs.ec_full_categorization_display.category_id_select {dbqd.ecommerce.tcl.ecommerce-procs.ec_full_categorization_display.category_id_select {
      select category_id 
      from ec_subcategories 
      where subcategory_id = :subcategory_id
    } {} {} {} c:/web/openacs-4/packages/ecommerce/tcl/ecommerce-procs.xql}
dbqd.ecommerce.tcl.ecommerce-procs.ec_full_categorization_display.category_name_select {dbqd.ecommerce.tcl.ecommerce-procs.ec_full_categorization_display.category_name_select {
      select category_name
      from ec_categories
      where category_id = :category_id
    } {} {} {} c:/web/openacs-4/packages/ecommerce/tcl/ecommerce-procs.xql}
dbqd.ecommerce.tcl.ecommerce-procs.ec_full_categorization_display.subcategory_name_select {dbqd.ecommerce.tcl.ecommerce-procs.ec_full_categorization_display.subcategory_name_select {
      select subcategory_name
      from ec_subcategories
      where subcategory_id = :subcategory_id
    } {} {} {} c:/web/openacs-4/packages/ecommerce/tcl/ecommerce-procs.xql}
dbqd.ecommerce.tcl.ecommerce-procs.ec_full_categorization_display.subsubcategory_name_select {dbqd.ecommerce.tcl.ecommerce-procs.ec_full_categorization_display.subsubcategory_name_select {
      select subsubcategory_name
      from ec_subsubcategories 
      where subsubcategory_id = :subsubcategory_id
    } {} {} {} c:/web/openacs-4/packages/ecommerce/tcl/ecommerce-procs.xql}
dbqd.ecommerce.tcl.ecommerce-procs.ec_full_categorization_display.category_id_select {dbqd.ecommerce.tcl.ecommerce-procs.ec_full_categorization_display.category_id_select {
      select category_id
      from ec_subcategories
      where subcategory_id = :subcategory_id
    } {} {} {} c:/web/openacs-4/packages/ecommerce/tcl/ecommerce-procs.xql}
dbqd.ecommerce.tcl.ecommerce-procs.ec_full_categorization_display.category_name_select {dbqd.ecommerce.tcl.ecommerce-procs.ec_full_categorization_display.category_name_select {
      select category_name
      from ec_categories 
      where category_id = :category_id
    } {} {} {} c:/web/openacs-4/packages/ecommerce/tcl/ecommerce-procs.xql}
dbqd.ecommerce.tcl.ecommerce-procs.ec_full_categorization_display.subcategory_name_select {dbqd.ecommerce.tcl.ecommerce-procs.ec_full_categorization_display.subcategory_name_select {
      select subcategory_name
      from ec_subcategories 
      where subcategory_id = :subcategory_id
    } {} {} {} c:/web/openacs-4/packages/ecommerce/tcl/ecommerce-procs.xql}
dbqd.ecommerce.tcl.ecommerce-procs.ec_full_categorization_display.category_name_select {dbqd.ecommerce.tcl.ecommerce-procs.ec_full_categorization_display.category_name_select {
      select category_name
      from ec_categories 
      where category_id = :category_id
    } {} {} {} c:/web/openacs-4/packages/ecommerce/tcl/ecommerce-procs.xql}
dbqd.ecommerce.tcl.ecommerce-procs.ec_full_categorization_display.category_id_select {dbqd.ecommerce.tcl.ecommerce-procs.ec_full_categorization_display.category_id_select {
      select category_id
      from ec_category_product_map
      where product_id = :product_id
    } {} {} {} c:/web/openacs-4/packages/ecommerce/tcl/ecommerce-procs.xql}
dbqd.ecommerce.tcl.ecommerce-procs.ec_full_categorization_display.subcategory_id_select {dbqd.ecommerce.tcl.ecommerce-procs.ec_full_categorization_display.subcategory_id_select {
      select s.subcategory_id
      from ec_subcategory_product_map m, ec_subcategories s
      where m.subcategory_id = s.subcategory_id
      and s.category_id = :category_id
      and m.product_id = :product_id
    } {} {} {} c:/web/openacs-4/packages/ecommerce/tcl/ecommerce-procs.xql}
dbqd.ecommerce.tcl.ecommerce-procs.ec_mailing_list_link_for_a_product.mailing_categories_common {dbqd.ecommerce.tcl.ecommerce-procs.ec_mailing_list_link_for_a_product.mailing_categories_common {
      (select cpm.category_id, bla.subcategory_id, cpm.product_id
               from ec_category_product_map cpm 
               left join (select sc.category_id, spm.subcategory_id, spm.product_id
                          from ec_subcategory_product_map spm, ec_subcategories sc 
                          where sc.subcategory_id = spm.subcategory_id) as bla 
               using (category_id, product_id)
      		   where cpm.product_id = :product_id
               ) as bogus 
              left join (select sc.category_id, ssc.subcategory_id, sspm.subsubcategory_id, sspm.product_id
                         from ec_subsubcategory_product_map sspm, ec_subcategories sc, ec_subsubcategories ssc 
                         where sspm.subsubcategory_id = ssc.subsubcategory_id 
                         and ssc.subcategory_id = sc.subcategory_id
                         ) as boring 
              using (category_id, subcategory_id, product_id)
    } {} {} {} c:/web/openacs-4/packages/ecommerce/tcl/ecommerce-procs.xql}
dbqd.ecommerce.tcl.ecommerce-procs.ec_product_links_if_they_exist.product_link_info_select {dbqd.ecommerce.tcl.ecommerce-procs.ec_product_links_if_they_exist.product_link_info_select {
      select p.product_id, p.product_name
      from ec_products_displayable p, ec_product_links l
      where l.product_a = :product_id
      and l.product_b = p.product_id
    } {} {} {} c:/web/openacs-4/packages/ecommerce/tcl/ecommerce-procs.xql}
dbqd.ecommerce.tcl.ecommerce-procs.ec_professional_reviews_if_they_exist.professional_reviews_info_select {dbqd.ecommerce.tcl.ecommerce-procs.ec_professional_reviews_if_they_exist.professional_reviews_info_select {
      select publication, author_name, review_date, review 
      from ec_product_reviews 
      where product_id = :product_id
      and display_p = 't'
    } {} {} {} c:/web/openacs-4/packages/ecommerce/tcl/ecommerce-procs.xql}
dbqd.ecommerce.tcl.ecommerce-procs.ec_customer_comments.avg_rating_select {dbqd.ecommerce.tcl.ecommerce-procs.ec_customer_comments.avg_rating_select {
      select avg(rating) 
      from ec_product_comments
      where product_id = :product_id
      and approved_p = 't'
    } {} {} {} c:/web/openacs-4/packages/ecommerce/tcl/ecommerce-procs.xql}
dbqd.ecommerce.tcl.ecommerce-procs.ec_customer_comments.n_reviews_select {dbqd.ecommerce.tcl.ecommerce-procs.ec_customer_comments.n_reviews_select {
      select count(*) 
      from ec_product_comments
      where product_id = :product_id
      and (approved_p='t' [ec_decode [util_memoize {ad_parameter -package_id [ec_id] ProductCommentsNeedApprovalP ecommerce} [ec_cache_refresh]] "0" "or approved_p is null" ""])
    } {} {} {} c:/web/openacs-4/packages/ecommerce/tcl/ecommerce-procs.xql}
dbqd.ecommerce.tcl.ecommerce-procs.ec_navbar.category_select {dbqd.ecommerce.tcl.ecommerce-procs.ec_navbar.category_select {
      select category_id, category_name
      from ec_categories
      order by sort_key
    } {} {} {} c:/web/openacs-4/packages/ecommerce/tcl/ecommerce-procs.xql}
dbqd.ecommerce.tcl.ecommerce-procs.ec_order_summary_for_customer.correct_user_id {dbqd.ecommerce.tcl.ecommerce-procs.ec_order_summary_for_customer.correct_user_id {
      select user_id as correct_user_id
      from ec_orders 
      where order_id = :order_id
    } {} {} {} c:/web/openacs-4/packages/ecommerce/tcl/ecommerce-procs.xql}
dbqd.ecommerce.tcl.ecommerce-procs.ec_order_summary_for_customer.order_info_select {dbqd.ecommerce.tcl.ecommerce-procs.ec_order_summary_for_customer.order_info_select {
      select o.confirmed_date, o.creditcard_id, o.shipping_method,
      u.email, o.shipping_address as shipping_address_id, c.billing_address as billing_address_id
      from ec_orders o
      left join cc_users u on (o.user_id = u.user_id)
      left join ec_creditcards c on (o.creditcard_id = c.creditcard_id)
      where o.order_id = :order_id
    } {} {} {} c:/web/openacs-4/packages/ecommerce/tcl/ecommerce-procs.xql}
dbqd.ecommerce.tcl.ecommerce-procs.ec_order_summary_for_customer.order_details_select {dbqd.ecommerce.tcl.ecommerce-procs.ec_order_summary_for_customer.order_details_select {
      select i.price_name, i.price_charged, i.color_choice, i.size_choice, i.style_choice, p.product_name, p.one_line_description, p.product_id, count(*) as quantity
      from ec_items i, ec_products p
      where i.order_id = :order_id
      and i.product_id = p.product_id
      group by p.product_name, p.one_line_description, p.product_id, i.price_name, i.price_charged, i.color_choice, i.size_choice, i.style_choice
    } {} {} {} c:/web/openacs-4/packages/ecommerce/tcl/ecommerce-procs.xql}
dbqd.ecommerce.tcl.ecommerce-procs.ec_item_summary_in_confirmed_order.item_summary_info_select {dbqd.ecommerce.tcl.ecommerce-procs.ec_item_summary_in_confirmed_order.item_summary_info_select {
      select i.price_charged, i.price_name, i.color_choice, i.size_choice, i.style_choice, p.product_name, p.one_line_description, p.product_id, count(*) as quantity
      from ec_items i, ec_products p
      where i.order_id = :order_id
      and i.product_id = p.product_id
      group by p.product_name, p.one_line_description, p.product_id, i.price_charged, i.price_name, i.color_choice, i.size_choice, i.style_choice
    } {} {} {} c:/web/openacs-4/packages/ecommerce/tcl/ecommerce-procs.xql}
dbqd.ecommerce.tcl.ecommerce-procs.ec_item_summary_in_confirmed_order.item_summary_info_select {dbqd.ecommerce.tcl.ecommerce-procs.ec_item_summary_in_confirmed_order.item_summary_info_select {
      select i.price_charged, i.price_name, i.color_choice, i.size_choice, i.style_choice, p.product_name, p.one_line_description, p.product_id, count(*) as quantity
      from ec_items i, ec_products p
      where i.order_id = :order_id
      and i.product_id = p.product_id
      group by p.product_name, p.one_line_description, p.product_id,
      i.price_charged, i.price_name, i.color_choice, i.size_choice, i.style_choice
    } {} {} {} c:/web/openacs-4/packages/ecommerce/tcl/ecommerce-procs.xql}
dbqd.ecommerce.tcl.ecommerce-procs.ec_items_for_fulfillment_or_return.n_items_in_an_order_select {dbqd.ecommerce.tcl.ecommerce-procs.ec_items_for_fulfillment_or_return.n_items_in_an_order_select {
      select count(*) 
      from $item_view 
      where order_id = :order_id
    } {} {} {} c:/web/openacs-4/packages/ecommerce/tcl/ecommerce-procs.xql}
dbqd.ecommerce.tcl.ecommerce-procs.ec_all_orders_by_one_user.all_orders_one_user_select {dbqd.ecommerce.tcl.ecommerce-procs.ec_all_orders_by_one_user.all_orders_one_user_select {
      select o.order_id, o.confirmed_date, o.order_state
      from ec_orders o
      where o.user_id = :user_id
      order by o.order_id
    } {} {} {} c:/web/openacs-4/packages/ecommerce/tcl/ecommerce-procs.xql}
dbqd.ecommerce.tcl.ecommerce-procs.ec_display_product_purchase_combinations.get_pp_combs {dbqd.ecommerce.tcl.ecommerce-procs.ec_display_product_purchase_combinations.get_pp_combs {
      select * 
      from ec_product_purchase_comb 
      where product_id = :product_id
    } {} {} {} c:/web/openacs-4/packages/ecommerce/tcl/ecommerce-procs.xql}
dbqd.ecommerce.tcl.ecommerce-procs.ec_product_name_internal.product_name_select {dbqd.ecommerce.tcl.ecommerce-procs.ec_product_name_internal.product_name_select {
      select product_name 
      from ec_products 
      where product_id = :product_id
    } {} {} {} c:/web/openacs-4/packages/ecommerce/tcl/ecommerce-procs.xql}
dbqd.ecommerce.tcl.ecommerce-procs.ec_product_name_internal.product_name_select {dbqd.ecommerce.tcl.ecommerce-procs.ec_product_name_internal.product_name_select {
      select product_name 
      from ec_products 
      where product_id = :product_id
    } {} {} {} c:/web/openacs-4/packages/ecommerce/tcl/ecommerce-procs.xql}
dbqd.ecommerce.tcl.ecommerce-procs.ec_shipment_summary_sub.items_shipped_select {dbqd.ecommerce.tcl.ecommerce-procs.ec_shipment_summary_sub.items_shipped_select {
      select s.shipment_date, s.carrier, s.tracking_number, s.shipment_id, s.shippable_p, count(*) as n_items
      from ec_items i, ec_shipments s
      where i.order_id = :order_id
      and i.shipment_id = s.shipment_id
      and i.product_id = :product_id
      and i.color_choice [ec_decode $color_choice "" "is null" "= :color_choice"]
      and i.size_choice [ec_decode $size_choice "" "is null" "= :size_choice"]
      and i.style_choice [ec_decode $style_choice "" "is null" "= :style_choice"]
      and i.price_charged [ec_decode $price_charged "" "is null" "= :price_charged"]
      and i.price_name [ec_decode $price_name "" "is null" "= :price_name"]
      group by s.shipment_date, s.carrier, s.tracking_number, s.shipment_id, s.shippable_p
    } {} {} {} c:/web/openacs-4/packages/ecommerce/tcl/ecommerce-procs.xql}
dbqd.ecommerce.tcl.ecommerce-procs.ec_canned_response_selector.canned_response_select {dbqd.ecommerce.tcl.ecommerce-procs.ec_canned_response_selector.canned_response_select {
      select response_id, one_line, response_text
      from ec_canned_responses
      order by one_line
    } {} {} {} c:/web/openacs-4/packages/ecommerce/tcl/ecommerce-procs.xql}
dbqd.ecommerce.tcl.ecommerce-procs.ec_user_class_display.user_class_info_select {dbqd.ecommerce.tcl.ecommerce-procs.ec_user_class_display.user_class_info_select {
      select c.user_class_name, m.user_class_approved_p, c.user_class_id
      from ec_user_classes c, ec_user_class_user_map m
      where m.user_id = :user_id
      and m.user_class_id = c.user_class_id
      order by c.user_class_id
    } {} {} {} c:/web/openacs-4/packages/ecommerce/tcl/ecommerce-procs.xql}
dbqd.ecommerce.tcl.ecommerce-procs.ec_log_user_as_user_id_for_this_session.user_session_update {dbqd.ecommerce.tcl.ecommerce-procs.ec_log_user_as_user_id_for_this_session.user_session_update {
      update ec_user_sessions 
      set user_id = :user_id 
      where user_session_id = :user_session_id
    } {} {} {} c:/web/openacs-4/packages/ecommerce/tcl/ecommerce-procs.xql}
dbqd.ecommerce.tcl.ecommerce-procs.ec_state_name_from_usps_abbrev.state_name_from_usps_abbrev {dbqd.ecommerce.tcl.ecommerce-procs.ec_state_name_from_usps_abbrev.state_name_from_usps_abbrev {
      select state_name 
      from us_states 
      where abbrev = :usps_abbrev
    } {} {} {} c:/web/openacs-4/packages/ecommerce/tcl/ecommerce-procs.xql}
dbqd.ecommerce.tcl.ecommerce-procs.ec_country_name_from_country_code.country_name_from_country_code {dbqd.ecommerce.tcl.ecommerce-procs.ec_country_name_from_country_code.country_name_from_country_code {
      select default_name 
      from countries 
      where iso = :country_code
    } {} {} {} c:/web/openacs-4/packages/ecommerce/tcl/ecommerce-procs.xql}
dbqd.ecommerce.tcl.ecommerce-scheduled-procs-oracle.ec_sweep_for_payment_zombies.transactions_select {dbqd.ecommerce.tcl.ecommerce-scheduled-procs-oracle.ec_sweep_for_payment_zombies.transactions_select {
      select o.order_id, ec_order_cost(o.order_id) as total_order_price,
	  f.transaction_id, f.inserted_date, f.transaction_amount, 
	  c.creditcard_type as card_type, p.first_names || ' ' || p.last_name as card_name, 
	  c.creditcard_number as card_number, substring(creditcard_expire for 2) as card_exp_month, substring(creditcard_expire from 4 for 2) as card_exp_year, c.creditcard_type,
          a.zip_code as billing_zip,
          a.line1 as billing_address, 
	  a.city as billing_city, 
          coalesce(a.usps_abbrev, a.full_state_name) as billing_state, 
          a.country_code as billing_country
      from ec_orders o, ec_financial_transactions f, ec_creditcards c, persons p , ec_addresses a
      where order_state = 'confirmed' 
      and (sysdate - confirmed_date) > 1/96
      and f.failed_p = 'f'
      and f.order_id = o.order_id
      and f.creditcard_id = c.creditcard_id 
      and c.user_id = p.person_id 
      and c.billing_address = a.address_id
    } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/ecommerce/tcl/ecommerce-scheduled-procs-oracle.xql}
dbqd.ecommerce.tcl.ecommerce-scheduled-procs-oracle.ec_sweep_for_payment_zombies.problems_insert {dbqd.ecommerce.tcl.ecommerce-scheduled-procs-oracle.ec_sweep_for_payment_zombies.problems_insert {
      insert into ec_problems_log
      (problem_id, problem_date, problem_details, order_id)
      values
      (ec_problem_id_sequence.nextval, sysdate, :problem_details, :order_id)
    } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/ecommerce/tcl/ecommerce-scheduled-procs-oracle.xql}
dbqd.ecommerce.tcl.ecommerce-scheduled-procs-oracle.ec_sweep_for_payment_zombie_gift_certificates.transactions_select {dbqd.ecommerce.tcl.ecommerce-scheduled-procs-oracle.ec_sweep_for_payment_zombie_gift_certificates.transactions_select {
      select g.gift_certificate_id, f.transaction_id, f.transaction_amount, f.inserted_date,
	  c.creditcard_type, c.creditcard_number as card_number, c.creditcard_expire as card_expiration, 
          p.first_names || ' ' || p.last_name as card_name, 
          a.zip_code as billing_zip,
          a.line1 as billing_address, 
	  a.city as billing_city, 
          coalesce(a.usps_abbrev, a.full_state_name) as billing_state, 
          a.country_code as billing_country
      from ec_gift_certificates g, ec_financial_transactions f, ec_creditcards c, persons p, ec_addresses a
      where g.gift_certificate_state = 'confirmed' 
      and (sysdate - g.issue_date) > 1/96
      and f.failed_p = 'f'
      and g.gift_certificate_id = f.gift_certificate_id
      and f.creditcard_id = c.creditcard_id 
      and c.user_id = p.person_id 
      and c.billing_address = a.address_id
    } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/ecommerce/tcl/ecommerce-scheduled-procs-oracle.xql}
dbqd.ecommerce.tcl.ecommerce-scheduled-procs-oracle.ec_sweep_for_payment_zombie_gift_certificates.transaction_success_update {dbqd.ecommerce.tcl.ecommerce-scheduled-procs-oracle.ec_sweep_for_payment_zombie_gift_certificates.transaction_success_update {
      update ec_financial_transactions
      set transaction_id = :pgw_transaction_id, authorized_date=sysdate,
      to_be_captured_p='t'
      where transaction_id = :transaction_id
    } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/ecommerce/tcl/ecommerce-scheduled-procs-oracle.xql}
dbqd.ecommerce.tcl.ecommerce-scheduled-procs-oracle.ec_sweep_for_payment_zombie_gift_certificates.certificate_success_update {dbqd.ecommerce.tcl.ecommerce-scheduled-procs-oracle.ec_sweep_for_payment_zombie_gift_certificates.certificate_success_update {
      update ec_gift_certificates
      set authorized_date = sysdate,
      gift_certificate_state = 'authorized'
      where gift_certificate_id = :gift_certificate_id
    } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/ecommerce/tcl/ecommerce-scheduled-procs-oracle.xql}
dbqd.ecommerce.tcl.ecommerce-scheduled-procs-oracle.ec_sweep_for_payment_zombie_gift_certificates.problems_log_insert {dbqd.ecommerce.tcl.ecommerce-scheduled-procs-oracle.ec_sweep_for_payment_zombie_gift_certificates.problems_log_insert {
      insert into ec_problems_log
      (problem_id, problem_date, problem_details, order_id)
      values
      (ec_problem_id_sequence.nextval, current_timestamp, :problem_details, :order_id)
    } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/ecommerce/tcl/ecommerce-scheduled-procs-oracle.xql}
dbqd.ecommerce.tcl.ecommerce-scheduled-procs-oracle.ec_expire_old_carts.expired_carts_update {dbqd.ecommerce.tcl.ecommerce-scheduled-procs-oracle.ec_expire_old_carts.expired_carts_update {
      update ec_orders 
      set order_state='expired', expired_date=sysdate 
      where order_state='in_basket' 
      and sysdate-in_basket_date > :cart_duration
    } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/ecommerce/tcl/ecommerce-scheduled-procs-oracle.xql}
dbqd.ecommerce.tcl.ecommerce-scheduled-procs-oracle.ec_expire_old_carts.item_state_update {dbqd.ecommerce.tcl.ecommerce-scheduled-procs-oracle.ec_expire_old_carts.item_state_update {
      update ec_items 
      set item_state='expired', expired_date=sysdate 
      where item_state='in_basket' 
      and order_id in (select order_id from ec_orders where order_state='expired')
    } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/ecommerce/tcl/ecommerce-scheduled-procs-oracle.xql}
dbqd.ecommerce.tcl.ecommerce-scheduled-procs-oracle.ec_remove_creditcard_data.creditcard_update {dbqd.ecommerce.tcl.ecommerce-scheduled-procs-oracle.ec_remove_creditcard_data.creditcard_update {
      update ec_creditcards
      set creditcard_number=null
      where creditcard_id in (select unique c.creditcard_id
          from ec_creditcards c, ec_orders o
          where c.creditcard_id = o.creditcard_id
          and c.creditcard_number is not null
          and 0=(select count(*)
             from ec_orders o2
             where o2.creditcard_id=c.creditcard_id
             and o2.order_state not in ('fulfilled','returned','void','expired'))
          and 0=(select count(*)
	     from ec_financial_transactions f
	     where f.transaction_type = 'refund'
             and f.creditcard_id = c.creditcard_id
	     and refunded_date is null))
    } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/ecommerce/tcl/ecommerce-scheduled-procs-oracle.xql}
dbqd.ecommerce.tcl.ecommerce-scheduled-procs-oracle.ec_unauthorized_transactions.transactions_select {dbqd.ecommerce.tcl.ecommerce-scheduled-procs-oracle.ec_unauthorized_transactions.transactions_select {
      select f.transaction_id, f.order_id, f.transaction_amount, f.to_be_captured_date, 
          p.first_names || ' ' || p.last_name as card_name, 
          c.creditcard_expire as card_expiration, c.creditcard_number as card_number, c.creditcard_type,
          a.zip_code as billing_zip,
          a.line1 as billing_address, 
	  a.city as billing_city, 
          coalesce(a.usps_abbrev, a.full_state_name) as billing_state, 
          a.country_code as billing_country
      from ec_financial_transactions f, ec_creditcards c, persons p, ec_addresses a
      where to_be_captured_p='t'
      and sysdate-to_be_captured_date > 1/48
      and authorized_date is null
      and f.failed_p='f'
      and f.creditcard_id=c.creditcard_id 
      and c.user_id=p.person_id
      and c.billing_address = a.address_id
    } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/ecommerce/tcl/ecommerce-scheduled-procs-oracle.xql}
dbqd.ecommerce.tcl.ecommerce-scheduled-procs-oracle.ec_unauthorized_transactions.problems_insert {dbqd.ecommerce.tcl.ecommerce-scheduled-procs-oracle.ec_unauthorized_transactions.problems_insert {
      insert into ec_problems_log
      (problem_id, problem_date, problem_details, order_id)
      values
      (ec_problem_id_sequence.nextval, sysdate, :problem_details, :order_id)
    } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/ecommerce/tcl/ecommerce-scheduled-procs-oracle.xql}
dbqd.ecommerce.tcl.ecommerce-scheduled-procs-oracle.ec_unauthorized_transactions.transaction_success_update {dbqd.ecommerce.tcl.ecommerce-scheduled-procs-oracle.ec_unauthorized_transactions.transaction_success_update {
      update ec_financial_transactions 
      set transaction_id = :pgw_transaction_id, authorized_date=sysdate 
      where transaction_id=:transaction_id
    } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/ecommerce/tcl/ecommerce-scheduled-procs-oracle.xql}
dbqd.ecommerce.tcl.ecommerce-scheduled-procs-oracle.ec_unmarked_transactions.problems_log_insert {dbqd.ecommerce.tcl.ecommerce-scheduled-procs-oracle.ec_unmarked_transactions.problems_log_insert {
      insert into ec_problems_log
      (problem_id, problem_date, problem_details, order_id)
      values
      (ec_problem_id_sequence.nextval, sysdate, :problem_details, :order_id)
    } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/ecommerce/tcl/ecommerce-scheduled-procs-oracle.xql}
dbqd.ecommerce.tcl.ecommerce-scheduled-procs-oracle.ec_unmarked_transactions.transaction_success_update {dbqd.ecommerce.tcl.ecommerce-scheduled-procs-oracle.ec_unmarked_transactions.transaction_success_update {
      update ec_financial_transactions 
      set marked_date=sysdate 
      where transaction_id=:transaction_id
    } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/ecommerce/tcl/ecommerce-scheduled-procs-oracle.xql}
dbqd.ecommerce.tcl.ecommerce-scheduled-procs-oracle.ec_unrefunded_transactions.transactions_select {dbqd.ecommerce.tcl.ecommerce-scheduled-procs-oracle.ec_unrefunded_transactions.transactions_select {
      select f.transaction_id, f.order_id, f.transaction_amount, f.to_be_captured_date, 
          p.first_names || ' ' || p.last_name as card_name, 
	  c.creditcard_number as card_number, c.creditcard_type, c.creditcard_expire as card_expiration, 
          a.zip_code as billing_zip,
	  a.line1 as billing_address, 
	  a.city as billing_city, 
          coalesce(a.usps_abbrev, a.full_state_name) as billing_state, 
          a.country_code as billing_country
      from ec_financial_transactions f, ec_creditcards c, persons p, ec_addresses a 
      where transaction_type='refund'
      and sysdate-to_be_captured_date > 1/48
      and f.refunded_date is null
      and f.failed_p='f'
      and f.creditcard_id=c.creditcard_id 
      and c.user_id=p.person_id
      and c.billing_address = a.address_id
    } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/ecommerce/tcl/ecommerce-scheduled-procs-oracle.xql}
dbqd.ecommerce.tcl.ecommerce-scheduled-procs-oracle.ec_unrefunded_transactions.transaction_failure_update {dbqd.ecommerce.tcl.ecommerce-scheduled-procs-oracle.ec_unrefunded_transactions.transaction_failure_update {
      update ec_financial_transactions 
      set refunded_date=sysdate 
      where transaction_id=:transaction_id
    } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/ecommerce/tcl/ecommerce-scheduled-procs-oracle.xql}
dbqd.ecommerce.tcl.ecommerce-scheduled-procs-oracle.ec_unrefunded_transactions.problems_log_insert {dbqd.ecommerce.tcl.ecommerce-scheduled-procs-oracle.ec_unrefunded_transactions.problems_log_insert {
      insert into ec_problems_log
      (problem_id, problem_date, problem_details, order_id)
      values
      (ec_problem_id_sequence.nextval, sysdate, :problem_details, :order_id)
    } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/ecommerce/tcl/ecommerce-scheduled-procs-oracle.xql}
dbqd.ecommerce.tcl.ecommerce-scheduled-procs-oracle.ec_unrefunded_transactions.transaction_success_update {dbqd.ecommerce.tcl.ecommerce-scheduled-procs-oracle.ec_unrefunded_transactions.transaction_success_update {
      update ec_financial_transactions 
      set transaction_id = :pgw_transaction_id, refunded_date=sysdate 
      where transaction_id=:transaction_id
    } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/ecommerce/tcl/ecommerce-scheduled-procs-oracle.xql}
dbqd.ecommerce.tcl.ecommerce-scheduled-procs.ec_sweep_for_payment_zombies.transactions_select {dbqd.ecommerce.tcl.ecommerce-scheduled-procs.ec_sweep_for_payment_zombies.transactions_select {
      select o.order_id, ec_order_cost(o.order_id) as total_order_price, 
	  f.transaction_id, f.inserted_date, f.transaction_amount, 
	  c.creditcard_type as card_type, p.first_names || ' ' || p.last_name as card_name, 
	  c.creditcard_number as card_number, substring(creditcard_expire for 2) as card_exp_month, substring(creditcard_expire from 4 for 2) as card_exp_year, c.creditcard_type,
          a.zip_code as billing_zip,
          a.line1 as billing_address, 
	  a.city as billing_city, 
          coalesce(a.usps_abbrev, a.full_state_name) as billing_state, 
          a.country_code as billing_country
      from ec_orders o, ec_financial_transactions f, ec_creditcards c, persons p , ec_addresses a
      where order_state = 'confirmed' 
      and (current_timestamp - confirmed_date) > timespan_days(1/96::float)
      and f.failed_p = 'f'
      and f.order_id = o.order_id
      and f.creditcard_id = c.creditcard_id 
      and c.user_id = p.person_id
      and c.billing_address = a.address_id
    } {} {} {postgresql 7.1} c:/web/openacs-4/packages/ecommerce/tcl/ecommerce-scheduled-procs-postgresql.xql}
dbqd.ecommerce.tcl.ecommerce-scheduled-procs.ec_sweep_for_payment_zombies.problems_log_insert {dbqd.ecommerce.tcl.ecommerce-scheduled-procs.ec_sweep_for_payment_zombies.problems_log_insert {
      insert into ec_problems_log
      (problem_id, problem_date, problem_details, order_id)
      values
      (ec_problem_id_sequence.nextval, current_timestamp, :problem_details, :order_id)
    } {} {} {postgresql 7.1} c:/web/openacs-4/packages/ecommerce/tcl/ecommerce-scheduled-procs-postgresql.xql}
dbqd.ecommerce.tcl.ecommerce-scheduled-procs.ec_sweep_for_payment_zombie_gift_certificates.transactions_select {dbqd.ecommerce.tcl.ecommerce-scheduled-procs.ec_sweep_for_payment_zombie_gift_certificates.transactions_select {
      select g.gift_certificate_id, f.transaction_id, f.transaction_amount, f.inserted_date,
	  c.creditcard_type, c.creditcard_number as card_number, substring(creditcard_expire for 2) as card_exp_month, substring(creditcard_expire from 4 for 2) as card_exp_year,
          p.first_names || ' ' || p.last_name as card_name, 
          a.zip_code as billing_zip,
          a.line1 as billing_address, 
	  a.city as billing_city, 
          coalesce(a.usps_abbrev, a.full_state_name) as billing_state, 
          a.country_code as billing_country
      from ec_gift_certificates g, ec_financial_transactions f, ec_creditcards c, persons p, ec_addresses a
      where g.gift_certificate_state = 'confirmed' 
      and (current_timestamp - g.issue_date) > timespan_days(1/96::float)
      and f.failed_p = 'f'
      and g.gift_certificate_id = f.gift_certificate_id
      and f.creditcard_id = c.creditcard_id 
      and c.user_id = p.person_id 
      and c.billing_address = a.address_id
    } {} {} {postgresql 7.1} c:/web/openacs-4/packages/ecommerce/tcl/ecommerce-scheduled-procs-postgresql.xql}
dbqd.ecommerce.tcl.ecommerce-scheduled-procs.ec_sweep_for_payment_zombie_gift_certificates.transaction_success_update {dbqd.ecommerce.tcl.ecommerce-scheduled-procs.ec_sweep_for_payment_zombie_gift_certificates.transaction_success_update {
      update ec_financial_transactions
      set transaction_id = :pgw_transaction_id, authorized_date=current_timestamp, to_be_captured_p='t'
      where transaction_id = :transaction_id
    } {} {} {postgresql 7.1} c:/web/openacs-4/packages/ecommerce/tcl/ecommerce-scheduled-procs-postgresql.xql}
dbqd.ecommerce.tcl.ecommerce-scheduled-procs.ec_sweep_for_payment_zombie_gift_certificates.certificate_success_update {dbqd.ecommerce.tcl.ecommerce-scheduled-procs.ec_sweep_for_payment_zombie_gift_certificates.certificate_success_update {
      update ec_gift_certificates
      set authorized_date = current_timestamp, gift_certificate_state = 'authorized'
      where gift_certificate_id = :gift_certificate_id
    } {} {} {postgresql 7.1} c:/web/openacs-4/packages/ecommerce/tcl/ecommerce-scheduled-procs-postgresql.xql}
dbqd.ecommerce.tcl.ecommerce-scheduled-procs.ec_sweep_for_payment_zombie_gift_certificates.problems_log_insert {dbqd.ecommerce.tcl.ecommerce-scheduled-procs.ec_sweep_for_payment_zombie_gift_certificates.problems_log_insert {
      insert into ec_problems_log
      (problem_id, problem_date, problem_details, order_id)
      values
      (ec_problem_id_sequence.nextval, current_timestamp, :problem_details, :order_id)
    } {} {} {postgresql 7.1} c:/web/openacs-4/packages/ecommerce/tcl/ecommerce-scheduled-procs-postgresql.xql}
dbqd.ecommerce.tcl.ecommerce-scheduled-procs.ec_expire_old_carts.expired_carts_update {dbqd.ecommerce.tcl.ecommerce-scheduled-procs.ec_expire_old_carts.expired_carts_update {
      update ec_orders 
      set order_state='expired', expired_date=current_timestamp 
      where order_state='in_basket' 
      and current_timestamp-in_basket_date > timespan_days(:cart_duration::float)
    } {} {} {postgresql 7.1} c:/web/openacs-4/packages/ecommerce/tcl/ecommerce-scheduled-procs-postgresql.xql}
dbqd.ecommerce.tcl.ecommerce-scheduled-procs.ec_expire_old_carts.item_state_update {dbqd.ecommerce.tcl.ecommerce-scheduled-procs.ec_expire_old_carts.item_state_update {
      update ec_items 
      set item_state='expired', expired_date=current_timestamp 
      where item_state='in_basket' and order_id in (select order_id 
          from ec_orders 
          where order_state='expired')
    } {} {} {postgresql 7.1} c:/web/openacs-4/packages/ecommerce/tcl/ecommerce-scheduled-procs-postgresql.xql}
dbqd.ecommerce.tcl.ecommerce-scheduled-procs.ec_remove_creditcard_data.creditcard_update {dbqd.ecommerce.tcl.ecommerce-scheduled-procs.ec_remove_creditcard_data.creditcard_update {
      update ec_creditcards
      set creditcard_number=null
      where creditcard_id in (select distinct c.creditcard_id
          from ec_creditcards c, ec_orders o
          where c.creditcard_id = o.creditcard_id
          and c.creditcard_number is not null
          and 0=(select count(*)
             from ec_orders o2
             where o2.creditcard_id=c.creditcard_id
             and o2.order_state not in ('fulfilled','returned','void','expired'))
      	  and 0=(select count(*)
	     from ec_financial_transactions f
	     where f.transaction_type = 'refund'
             and f.creditcard_id = c.creditcard_id
	     and refunded_date is null))
    } {} {} {postgresql 7.1} c:/web/openacs-4/packages/ecommerce/tcl/ecommerce-scheduled-procs-postgresql.xql}
dbqd.ecommerce.tcl.ecommerce-scheduled-procs.ec_unauthorized_transactions.transactions_select {dbqd.ecommerce.tcl.ecommerce-scheduled-procs.ec_unauthorized_transactions.transactions_select {
      select f.transaction_id, f.order_id, f.transaction_amount, f.to_be_captured_date, 
          p.first_names || ' ' || p.last_name as card_name, 
          substring(creditcard_expire for 2) as card_exp_month, substring(creditcard_expire from 4 for 2) as card_exp_year, c.creditcard_number as card_number, c.creditcard_type,
          a.zip_code as billing_zip,
          a.line1 as billing_address, 
	  a.city as billing_city, 
          coalesce(a.usps_abbrev, a.full_state_name) as billing_state, 
          a.country_code as billing_country
      from ec_financial_transactions f, ec_creditcards c, persons p, ec_addresses a
      where to_be_captured_p='t'
      and current_timestamp-to_be_captured_date > timespan_days(1/48::float)
      and authorized_date is null
      and f.failed_p='f'
      and f.creditcard_id=c.creditcard_id 
      and c.user_id=p.person_id
      and c.billing_address = a.address_id
    } {} {} {postgresql 7.1} c:/web/openacs-4/packages/ecommerce/tcl/ecommerce-scheduled-procs-postgresql.xql}
dbqd.ecommerce.tcl.ecommerce-scheduled-procs.ec_unauthorized_transactions.problems_log_insert {dbqd.ecommerce.tcl.ecommerce-scheduled-procs.ec_unauthorized_transactions.problems_log_insert {
      insert into ec_problems_log
      (problem_id, problem_date, problem_details, order_id)
      values
      (ec_problem_id_sequence.nextval, current_timestamp, :problem_details, :order_id)
    } {} {} {postgresql 7.1} c:/web/openacs-4/packages/ecommerce/tcl/ecommerce-scheduled-procs-postgresql.xql}
dbqd.ecommerce.tcl.ecommerce-scheduled-procs.ec_unauthorized_transactions.transaction_success_update {dbqd.ecommerce.tcl.ecommerce-scheduled-procs.ec_unauthorized_transactions.transaction_success_update {
      update ec_financial_transactions 
      set transaction_id = :pgw_transaction_id, authorized_date=current_timestamp 
      where transaction_id=:transaction_id
    } {} {} {postgresql 7.1} c:/web/openacs-4/packages/ecommerce/tcl/ecommerce-scheduled-procs-postgresql.xql}
dbqd.ecommerce.tcl.ecommerce-scheduled-procs.ec_unmarked_transactions.problems_log_insert {dbqd.ecommerce.tcl.ecommerce-scheduled-procs.ec_unmarked_transactions.problems_log_insert {
      insert into ec_problems_log
      (problem_id, problem_date, problem_details, order_id)
      values
      (ec_problem_id_sequence.nextval, current_timestamp, :problem_details, :order_id)
    } {} {} {postgresql 7.1} c:/web/openacs-4/packages/ecommerce/tcl/ecommerce-scheduled-procs-postgresql.xql}
dbqd.ecommerce.tcl.ecommerce-scheduled-procs.ec_unmarked_transactions.transaction_success_update {dbqd.ecommerce.tcl.ecommerce-scheduled-procs.ec_unmarked_transactions.transaction_success_update {
      update ec_financial_transactions 
      set marked_date=current_timestamp, transaction_id = :pgw_transaction_id 
      where transaction_id=:transaction_id
    } {} {} {postgresql 7.1} c:/web/openacs-4/packages/ecommerce/tcl/ecommerce-scheduled-procs-postgresql.xql}
dbqd.ecommerce.tcl.ecommerce-scheduled-procs.ec_unrefunded_transactions.transactions_select {dbqd.ecommerce.tcl.ecommerce-scheduled-procs.ec_unrefunded_transactions.transactions_select {
      select f.transaction_id, f.order_id, f.transaction_amount, f.to_be_captured_date, 
          p.first_names || ' ' || p.last_name as card_name, 
	  c.creditcard_number as card_number, c.creditcard_type, substring(creditcard_expire for 2) as card_exp_month, substring(creditcard_expire from 4 for 2) as card_exp_year,
          a.zip_code as billing_zip,
	  a.line1 as billing_address, 
	  a.city as billing_city, 
          coalesce(a.usps_abbrev, a.full_state_name) as billing_state, 
          a.country_code as billing_country
      from ec_financial_transactions f, ec_creditcards c, persons p, ec_addresses a 
      where transaction_type = 'refund'
      and f.refunded_date is null
      and f.failed_p='f'
      and f.creditcard_id = c.creditcard_id 
      and c.user_id = p.person_id
      and c.billing_address = a.address_id
      and current_timestamp-to_be_captured_date > timespan_days(1/48::float)
    } {} {} {postgresql 7.1} c:/web/openacs-4/packages/ecommerce/tcl/ecommerce-scheduled-procs-postgresql.xql}
dbqd.ecommerce.tcl.ecommerce-scheduled-procs.ec_unrefunded_transactions.problems_log_insert {dbqd.ecommerce.tcl.ecommerce-scheduled-procs.ec_unrefunded_transactions.problems_log_insert {
      insert into ec_problems_log
      (problem_id, problem_date, problem_details, order_id)
      values
      (ec_problem_id_sequence.nextval, current_timestamp, :problem_details, :order_id)
    } {} {} {postgresql 7.1} c:/web/openacs-4/packages/ecommerce/tcl/ecommerce-scheduled-procs-postgresql.xql}
dbqd.ecommerce.tcl.ecommerce-scheduled-procs.ec_unrefunded_transactions.transaction_success_update {dbqd.ecommerce.tcl.ecommerce-scheduled-procs.ec_unrefunded_transactions.transaction_success_update {
      update ec_financial_transactions 
      set transaction_id = :pgw_transaction_id, refunded_date=current_timestamp 
      where transaction_id=:transaction_id
    } {} {} {postgresql 7.1} c:/web/openacs-4/packages/ecommerce/tcl/ecommerce-scheduled-procs-postgresql.xql}
dbqd.ecommerce.tcl.ecommerce-scheduled-procs.ec_calculate_product_purchase_combinations.products_select {dbqd.ecommerce.tcl.ecommerce-scheduled-procs.ec_calculate_product_purchase_combinations.products_select {
      select product_id from ec_products where active_p = 't'
    } {} {} {} c:/web/openacs-4/packages/ecommerce/tcl/ecommerce-scheduled-procs.xql}
dbqd.ecommerce.tcl.ecommerce-scheduled-procs.ec_calculate_product_purchase_combinations.correlated_products_select {dbqd.ecommerce.tcl.ecommerce-scheduled-procs.ec_calculate_product_purchase_combinations.correlated_products_select {
      select i2.product_id as correlated_product_id,
      count(*) as n_product_occurrences
      from ec_items i2, ec_products p
      where i2.order_id in (select o2.order_id
          from ec_orders o2
          where o2.user_id in (select user_id
              from ec_orders o
              where o.order_id in (select i.order_id
                  from ec_items i
                  where product_id = :product_id)))
      and i2.product_id = p.product_id
      and p.active_p = 't'
      and i2.product_id <> :product_id
      group by i2.product_id
      order by n_product_occurrences desc
    } {} {} {} c:/web/openacs-4/packages/ecommerce/tcl/ecommerce-scheduled-procs.xql}
dbqd.ecommerce.tcl.ecommerce-scheduled-procs.ec_calculate_product_purchase_combinations.product_purchase_comb_select {dbqd.ecommerce.tcl.ecommerce-scheduled-procs.ec_calculate_product_purchase_combinations.product_purchase_comb_select {
      select count(*) 
      from ec_product_purchase_comb 
      where product_id = :product_id
    } {} {} {} c:/web/openacs-4/packages/ecommerce/tcl/ecommerce-scheduled-procs.xql}
dbqd.ecommerce.tcl.ecommerce-scheduled-procs.ec_calculate_product_purchase_combinations.product_purchase_comb_insert {dbqd.ecommerce.tcl.ecommerce-scheduled-procs.ec_calculate_product_purchase_combinations.product_purchase_comb_insert {
      insert into ec_product_purchase_comb
      (product_id, [join $insert_cols ", "])
      values
      (:product_id, [join $insert_vals ", "])
    } {} {} {} c:/web/openacs-4/packages/ecommerce/tcl/ecommerce-scheduled-procs.xql}
dbqd.ecommerce.tcl.ecommerce-scheduled-procs.ec_calculate_product_purchase_combinations.product_purchase_comb_update {dbqd.ecommerce.tcl.ecommerce-scheduled-procs.ec_calculate_product_purchase_combinations.product_purchase_comb_update {
      update ec_product_purchase_comb
      set [join $update_items ", "]
      where product_id = :product_id
    } {} {} {} c:/web/openacs-4/packages/ecommerce/tcl/ecommerce-scheduled-procs.xql}
dbqd.ecommerce.tcl.ecommerce-scheduled-procs.ec_sweep_for_payment_zombies.order_failure_update {dbqd.ecommerce.tcl.ecommerce-scheduled-procs.ec_sweep_for_payment_zombies.order_failure_update {
      update ec_orders 
      set order_state = 'failed_authorization'
      where order_id = :order_id
    } {} {} {} c:/web/openacs-4/packages/ecommerce/tcl/ecommerce-scheduled-procs.xql}
dbqd.ecommerce.tcl.ecommerce-scheduled-procs.ec_sweep_for_payment_zombies.transaction_failure_update {dbqd.ecommerce.tcl.ecommerce-scheduled-procs.ec_sweep_for_payment_zombies.transaction_failure_update {
      update ec_financial_transactions 
      set failed_p = 't'
      where transaction_id = :transaction_id
    } {} {} {} c:/web/openacs-4/packages/ecommerce/tcl/ecommerce-scheduled-procs.xql}
dbqd.ecommerce.tcl.ecommerce-scheduled-procs.ec_sweep_for_payment_zombie_gift_certificates.transaction_failure_update {dbqd.ecommerce.tcl.ecommerce-scheduled-procs.ec_sweep_for_payment_zombie_gift_certificates.transaction_failure_update {
      update ec_financial_transactions 
      set failed_p = 't', to_be_captured_p = 'f' 
      where transaction_id = :transaction_id
    } {} {} {} c:/web/openacs-4/packages/ecommerce/tcl/ecommerce-scheduled-procs.xql}
dbqd.ecommerce.tcl.ecommerce-scheduled-procs.ec_sweep_for_payment_zombie_gift_certificates.certificate_failure_update {dbqd.ecommerce.tcl.ecommerce-scheduled-procs.ec_sweep_for_payment_zombie_gift_certificates.certificate_failure_update {
      update ec_gift_certificates 
      set gift_certificate_state = 'failed_authorization' 
      where gift_certificate_id = :gift_certificate_id
    } {} {} {} c:/web/openacs-4/packages/ecommerce/tcl/ecommerce-scheduled-procs.xql}
dbqd.ecommerce.tcl.ecommerce-scheduled-procs.ec_send_unsent_new_order_email.orders_select {dbqd.ecommerce.tcl.ecommerce-scheduled-procs.ec_send_unsent_new_order_email.orders_select {
      select order_id
      from ec_orders o
      where order_state = 'authorized'
      and (0 = (select count(*) 
         from ec_automatic_email_log log 
         where log.order_id = o.order_id and email_template_id = 1))
    } {} {} {} c:/web/openacs-4/packages/ecommerce/tcl/ecommerce-scheduled-procs.xql}
dbqd.ecommerce.tcl.ecommerce-scheduled-procs.ec_send_unsent_new_gift_certificate_order_email.certificates_select {dbqd.ecommerce.tcl.ecommerce-scheduled-procs.ec_send_unsent_new_gift_certificate_order_email.certificates_select {
      select gift_certificate_id
      from ec_gift_certificates g
      where gift_certificate_state = 'authorized' 
      and (0 = (select count(*) 
          from ec_automatic_email_log log 
          where log.gift_certificate_id = g.gift_certificate_id 
          and email_template_id = 4))
    } {} {} {} c:/web/openacs-4/packages/ecommerce/tcl/ecommerce-scheduled-procs.xql}
dbqd.ecommerce.tcl.ecommerce-scheduled-procs.ec_send_unsent_gift_certificate_recipient_email.certificates_select {dbqd.ecommerce.tcl.ecommerce-scheduled-procs.ec_send_unsent_gift_certificate_recipient_email.certificates_select {
      select gift_certificate_id
      from ec_gift_certificates g
      where gift_certificate_state = 'authorized' 
      and (0 = (select count(*) 
          from ec_automatic_email_log log 
          where log.gift_certificate_id = g.gift_certificate_id 
          and email_template_id = 5))
    } {} {} {} c:/web/openacs-4/packages/ecommerce/tcl/ecommerce-scheduled-procs.xql}
dbqd.ecommerce.tcl.ecommerce-scheduled-procs.ec_delayed_credit_denied.orders_select {dbqd.ecommerce.tcl.ecommerce-scheduled-procs.ec_delayed_credit_denied.orders_select {
      select order_id 
      from ec_orders 
      where order_state = 'failed_authorization'
    } {} {} {} c:/web/openacs-4/packages/ecommerce/tcl/ecommerce-scheduled-procs.xql}
dbqd.ecommerce.tcl.ecommerce-scheduled-procs.ec_delayed_credit_denied.order_state_update {dbqd.ecommerce.tcl.ecommerce-scheduled-procs.ec_delayed_credit_denied.order_state_update {
      update ec_orders 
      set order_state = 'in_basket', saved_p = 't' 
      where order_id = :order_id
    } {} {} {} c:/web/openacs-4/packages/ecommerce/tcl/ecommerce-scheduled-procs.xql}
dbqd.ecommerce.tcl.ecommerce-scheduled-procs.ec_unauthorized_transactions.transaction_failed_update {dbqd.ecommerce.tcl.ecommerce-scheduled-procs.ec_unauthorized_transactions.transaction_failed_update {
      update ec_financial_transactions 
      set failed_p = 't' 
      where transaction_id = :transaction_id
    } {} {} {} c:/web/openacs-4/packages/ecommerce/tcl/ecommerce-scheduled-procs.xql}
dbqd.ecommerce.tcl.ecommerce-scheduled-procs.ec_unmarked_transactions.transactions_select {dbqd.ecommerce.tcl.ecommerce-scheduled-procs.ec_unmarked_transactions.transactions_select {
      select f.transaction_id, f.order_id, f.transaction_amount, f.to_be_captured_date, 
          p.first_names || ' ' || p.last_name as card_name, 
	  c.creditcard_number as card_number, substring(creditcard_expire for 2) as card_exp_month, substring(creditcard_expire from 4 for 2) as card_exp_year, c.creditcard_type, 
          a.zip_code as billing_zip,
	  a.line1 as billing_address, 
	  a.city as billing_city, 
          coalesce(a.usps_abbrev, a.full_state_name) as billing_state, 
          a.country_code as billing_country
      from ec_financial_transactions f, ec_creditcards c, persons p, ec_addresses a
      where to_be_captured_p = 't'
      and marked_date is null
      and f.failed_p = 'f'
      and f.creditcard_id = c.creditcard_id 
      and c.user_id = p.person_id
      and c.billing_address = a.address_id
    } {} {} {} c:/web/openacs-4/packages/ecommerce/tcl/ecommerce-scheduled-procs.xql}
dbqd.ecommerce.tcl.ecommerce-scheduled-procs.ec_unmarked_transactions.transaction_failed_update {dbqd.ecommerce.tcl.ecommerce-scheduled-procs.ec_unmarked_transactions.transaction_failed_update {
      update ec_financial_transactions 
      set failed_p = 't' 
      where transaction_id = :transaction_id
    } {} {} {} c:/web/openacs-4/packages/ecommerce/tcl/ecommerce-scheduled-procs.xql}
dbqd.ecommerce.tcl.ecommerce-state-changes-procs-oracle.ec_update_state_to_in_basket.reinst_gift_cert_on_order {dbqd.ecommerce.tcl.ecommerce-state-changes-procs-oracle.ec_update_state_to_in_basket.reinst_gift_cert_on_order {
      declare 
      begin 
          ec_reinst_gift_cert_on_order (:order_id); 
      end;
    } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/ecommerce/tcl/ecommerce-state-changes-procs-oracle.xql}
dbqd.ecommerce.tcl.ecommerce-state-changes-procs-oracle.ec_update_state_to_authorized.order_cost_select {dbqd.ecommerce.tcl.ecommerce-state-changes-procs-oracle.ec_update_state_to_authorized.order_cost_select {
      select ec_order_cost(:order_id) 
      from dual
    } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/ecommerce/tcl/ecommerce-state-changes-procs-oracle.xql}
dbqd.ecommerce.tcl.ecommerce-state-changes-procs-oracle.ec_update_state_to_authorized.order_state_update {dbqd.ecommerce.tcl.ecommerce-state-changes-procs-oracle.ec_update_state_to_authorized.order_state_update {
      update ec_orders 
      set order_state='authorized', authorized_date=sysdate 
      where order_id=:order_id
    } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/ecommerce/tcl/ecommerce-state-changes-procs-oracle.xql}
dbqd.ecommerce.tcl.ecommerce-state-changes-procs-oracle.ec_update_state_to_authorized.authorized_date_update {dbqd.ecommerce.tcl.ecommerce-state-changes-procs-oracle.ec_update_state_to_authorized.authorized_date_update {
      update ec_financial_transactions 
      set authorized_date=sysdate 
      where transaction_id=:transaction_id
    } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/ecommerce/tcl/ecommerce-state-changes-procs-oracle.xql}
dbqd.ecommerce.tcl.ecommerce-state-changes-procs-oracle.ec_update_state_to_confirmed.order_state_update {dbqd.ecommerce.tcl.ecommerce-state-changes-procs-oracle.ec_update_state_to_confirmed.order_state_update {
      update ec_orders 
      set order_state='confirmed', confirmed_date=sysdate 
      where order_id=:order_id
    } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/ecommerce/tcl/ecommerce-state-changes-procs-oracle.xql}
dbqd.ecommerce.tcl.ecommerce-state-changes-procs-oracle.ec_update_state_to_confirmed.total_amount_select {dbqd.ecommerce.tcl.ecommerce-state-changes-procs-oracle.ec_update_state_to_confirmed.total_amount_select {
      select ec_order_cost(:order_id) 
      from dual
    } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/ecommerce/tcl/ecommerce-state-changes-procs-oracle.xql}
dbqd.ecommerce.tcl.ecommerce-state-changes-procs-oracle.ec_update_state_to_confirmed.financial_transaction_insert {dbqd.ecommerce.tcl.ecommerce-state-changes-procs-oracle.ec_update_state_to_confirmed.financial_transaction_insert {
      insert into ec_financial_transactions
      (transaction_id, order_id, transaction_amount, transaction_type, inserted_date)
      values
      (:transaction_id, :order_id, :total_amount, 'charge', sysdate)
    } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/ecommerce/tcl/ecommerce-state-changes-procs-oracle.xql}
dbqd.ecommerce.tcl.ecommerce-state-changes-procs-oracle.ec_apply_gift_certificate_balance.amount_owed_select {dbqd.ecommerce.tcl.ecommerce-state-changes-procs-oracle.ec_apply_gift_certificate_balance.amount_owed_select {
      select ec_order_amount_owed(:order_id) 
      from dual
    } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/ecommerce/tcl/ecommerce-state-changes-procs-oracle.xql}
dbqd.ecommerce.tcl.ecommerce-state-changes-procs-oracle.ec_apply_gift_certificate_balance.available_gift_certificates {dbqd.ecommerce.tcl.ecommerce-state-changes-procs-oracle.ec_apply_gift_certificate_balance.available_gift_certificates {
      select gift_certificate_id, gift_certificate_amount_left(gift_certificate_id) as amount_available
      from ec_gift_certificates_approved
      where user_id = :user_id
      and sysdate - expires < 0
      and amount_remaining_p = 't'
      and gift_certificate_amount_left(gift_certificate_id) > 0
      order by expires
    } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/ecommerce/tcl/ecommerce-state-changes-procs-oracle.xql}
dbqd.ecommerce.tcl.ecommerce-state-changes-procs-oracle.ec_apply_gift_certificate_balance.gift_certificate_usage_insert {dbqd.ecommerce.tcl.ecommerce-state-changes-procs-oracle.ec_apply_gift_certificate_balance.gift_certificate_usage_insert {
      insert into ec_gift_certificate_usage
      (gift_certificate_id, order_id, amount_used, used_date)
      values
      (:gift_certificate_id, :order_id, least(to_number(:amount_available), to_number(:amount_owed)), sysdate)
    } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/ecommerce/tcl/ecommerce-state-changes-procs-oracle.xql}
dbqd.ecommerce.tcl.ecommerce-state-changes-procs-oracle.ec_update_state_to_authorized.order_contains_soft_goods {dbqd.ecommerce.tcl.ecommerce-state-changes-procs-oracle.ec_update_state_to_authorized.order_contains_soft_goods {
	select item_id
	from ec_items i, ec_products p 
	where i.order_id = :order_id
	and i.product_id = p.product_id
	and p.no_shipping_avail_p = 't'
	and rownum=1
    } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/ecommerce/tcl/ecommerce-state-changes-procs-oracle.xql}
dbqd.ecommerce.tcl.ecommerce-state-changes-procs-oracle.ec_update_state_to_authorized.set_hard_goods_to_be_shipped {dbqd.ecommerce.tcl.ecommerce-state-changes-procs-oracle.ec_update_state_to_authorized.set_hard_goods_to_be_shipped {
      update ec_items 
      set item_state = 'to_be_shipped'
      where ec_items.order_id = :order_id
      and exists 
      (select product_id from ec_products p 
      where ec_items.product_id=p.product_id
      and p.no_shipping_avail_p = 'f')
    } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/ecommerce/tcl/ecommerce-state-changes-procs-oracle.xql}
dbqd.ecommerce.tcl.ecommerce-state-changes-procs-oracle.ec_update_state_to_authorized.set_soft_goods_shipped {dbqd.ecommerce.tcl.ecommerce-state-changes-procs-oracle.ec_update_state_to_authorized.set_soft_goods_shipped {
      update ec_items
      set item_state = 'shipped', shipment_id = :shipment_id
      where ec_items.order_id = :order_id
      and exists 
      (select product_id from ec_products p 
      where ec_items.product_id=p.product_id
      and p.no_shipping_avail_p = 't')
    } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/ecommerce/tcl/ecommerce-state-changes-procs-oracle.xql}
dbqd.ecommerce.tcl.ecommerce-state-changes-procs.ec_update_state_to_in_basket.reinst_gift_cert_on_order {dbqd.ecommerce.tcl.ecommerce-state-changes-procs.ec_update_state_to_in_basket.reinst_gift_cert_on_order {
      select ec_reinst_gift_cert_on_order (:order_id)
    } {} {} {postgresql 7.1} c:/web/openacs-4/packages/ecommerce/tcl/ecommerce-state-changes-procs-postgresql.xql}
dbqd.ecommerce.tcl.ecommerce-state-changes-procs.ec_update_state_to_authorized.set_order_authorized {dbqd.ecommerce.tcl.ecommerce-state-changes-procs.ec_update_state_to_authorized.set_order_authorized {
      update ec_orders 
      set order_state = 'authorized', authorized_date = current_timestamp 
      where order_id = :order_id
    } {} {} {postgresql 7.1} c:/web/openacs-4/packages/ecommerce/tcl/ecommerce-state-changes-procs-postgresql.xql}
dbqd.ecommerce.tcl.ecommerce-state-changes-procs.ec_update_state_to_authorized.record_soft_goods_shipment {dbqd.ecommerce.tcl.ecommerce-state-changes-procs.ec_update_state_to_authorized.record_soft_goods_shipment {
      insert into ec_shipments
      (shipment_id, order_id, shipment_date, expected_arrival_date, carrier, shippable_p, last_modified, last_modifying_user, modified_ip_address)
      select :shipment_id, :order_id, current_timestamp, current_timestamp, 'none', 'f', current_timestamp, user_id, :peeraddr from ec_orders where order_id = :order_id
    } {} {} {postgresql 7.1} c:/web/openacs-4/packages/ecommerce/tcl/ecommerce-state-changes-procs-postgresql.xql}
dbqd.ecommerce.tcl.ecommerce-state-changes-procs.ec_update_state_to_confirmed.order_state_update {dbqd.ecommerce.tcl.ecommerce-state-changes-procs.ec_update_state_to_confirmed.order_state_update {
      update ec_orders 
      set order_state='confirmed', confirmed_date=current_timestamp
      where order_id=:order_id
    } {} {} {postgresql 7.1} c:/web/openacs-4/packages/ecommerce/tcl/ecommerce-state-changes-procs-postgresql.xql}
dbqd.ecommerce.tcl.ecommerce-state-changes-procs.ec_update_state_to_confirmed.total_amount_select {dbqd.ecommerce.tcl.ecommerce-state-changes-procs.ec_update_state_to_confirmed.total_amount_select {
      select ec_order_cost(:order_id) 
    } {} {} {postgresql 7.1} c:/web/openacs-4/packages/ecommerce/tcl/ecommerce-state-changes-procs-postgresql.xql}
dbqd.ecommerce.tcl.ecommerce-state-changes-procs.ec_update_state_to_confirmed.financial_transaction_insert {dbqd.ecommerce.tcl.ecommerce-state-changes-procs.ec_update_state_to_confirmed.financial_transaction_insert {
      insert into ec_financial_transactions
      (transaction_id, order_id, transaction_amount, transaction_type, inserted_date)
      values
      (:transaction_id, :order_id, :total_amount, 'charge', current_timestamp)
    } {} {} {postgresql 7.1} c:/web/openacs-4/packages/ecommerce/tcl/ecommerce-state-changes-procs-postgresql.xql}
dbqd.ecommerce.tcl.ecommerce-state-changes-procs.ec_apply_gift_certificate_balance.amount_owed_select {dbqd.ecommerce.tcl.ecommerce-state-changes-procs.ec_apply_gift_certificate_balance.amount_owed_select {
      select ec_order_amount_owed(:order_id) 
    } {} {} {postgresql 7.1} c:/web/openacs-4/packages/ecommerce/tcl/ecommerce-state-changes-procs-postgresql.xql}
dbqd.ecommerce.tcl.ecommerce-state-changes-procs.ec_apply_gift_certificate_balance.available_gift_certificates {dbqd.ecommerce.tcl.ecommerce-state-changes-procs.ec_apply_gift_certificate_balance.available_gift_certificates {
      select gift_certificate_id, gift_certificate_amount_left(gift_certificate_id) as amount_available
      from ec_gift_certificates_approved
      where user_id = :user_id
      and current_timestamp - expires < 0
      and amount_remaining_p = 't'
      and gift_certificate_amount_left(gift_certificate_id) > 0
      order by expires
    } {} {} {postgresql 7.1} c:/web/openacs-4/packages/ecommerce/tcl/ecommerce-state-changes-procs-postgresql.xql}
dbqd.ecommerce.tcl.ecommerce-state-changes-procs.ec_apply_gift_certificate_balance.gift_certificate_usage_insert {dbqd.ecommerce.tcl.ecommerce-state-changes-procs.ec_apply_gift_certificate_balance.gift_certificate_usage_insert {
      insert into ec_gift_certificate_usage
      (gift_certificate_id, order_id, amount_used, used_date)
      values
      (:gift_certificate_id, :order_id, 
      least(:amount_available, :amount_owed), current_timestamp)
    } {} {} {postgresql 7.1} c:/web/openacs-4/packages/ecommerce/tcl/ecommerce-state-changes-procs-postgresql.xql}
dbqd.ecommerce.tcl.ecommerce-state-changes-procs.ec_apply_gift_certificate_balance.gift_certificate_balance_select {dbqd.ecommerce.tcl.ecommerce-state-changes-procs.ec_apply_gift_certificate_balance.gift_certificate_balance_select {
      select ec_gift_certificate_balance(:user_id) 
    } {} {} {postgresql 7.1} c:/web/openacs-4/packages/ecommerce/tcl/ecommerce-state-changes-procs-postgresql.xql}
dbqd.ecommerce.tcl.ecommerce-state-changes-procs.ec_apply_gift_certificate_balance.amount_owed_select {dbqd.ecommerce.tcl.ecommerce-state-changes-procs.ec_apply_gift_certificate_balance.amount_owed_select {
      select ec_order_amount_owed(:order_id) 
    } {} {} {postgresql 7.1} c:/web/openacs-4/packages/ecommerce/tcl/ecommerce-state-changes-procs-postgresql.xql}
dbqd.ecommerce.tcl.ecommerce-state-changes-procs.ec_update_state_to_authorized.order_contains_soft_goods {dbqd.ecommerce.tcl.ecommerce-state-changes-procs.ec_update_state_to_authorized.order_contains_soft_goods {
	select item_id
	from ec_items i, ec_products p 
	where i.order_id = :order_id
	and i.product_id = p.product_id
	and p.no_shipping_avail_p = 't'
	limit 1
    } {} {} {postgresql 7.1} c:/web/openacs-4/packages/ecommerce/tcl/ecommerce-state-changes-procs-postgresql.xql}
dbqd.ecommerce.tcl.ecommerce-state-changes-procs.ec_update_state_to_authorized.set_hard_goods_to_be_shipped {dbqd.ecommerce.tcl.ecommerce-state-changes-procs.ec_update_state_to_authorized.set_hard_goods_to_be_shipped {
      update ec_items 
      set item_state = 'to_be_shipped' 
      from ec_products p
      where ec_items.order_id = :order_id
      and ec_items.product_id = p.product_id
      and p.no_shipping_avail_p = 'f'
    } {} {} {postgresql 7.1} c:/web/openacs-4/packages/ecommerce/tcl/ecommerce-state-changes-procs-postgresql.xql}
dbqd.ecommerce.tcl.ecommerce-state-changes-procs.ec_update_state_to_authorized.set_soft_goods_shipped {dbqd.ecommerce.tcl.ecommerce-state-changes-procs.ec_update_state_to_authorized.set_soft_goods_shipped {
      update ec_items
      set item_state = 'shipped', shipment_id = :shipment_id
      from ec_products p
      where ec_items.order_id = :order_id
      and ec_items.product_id = p.product_id
      and p.no_shipping_avail_p = 't'
    } {} {} {postgresql 7.1} c:/web/openacs-4/packages/ecommerce/tcl/ecommerce-state-changes-procs-postgresql.xql}
dbqd.ecommerce.tcl.ecommerce-state-changes-procs.ec_update_state_to_in_basket.credit_user_select {dbqd.ecommerce.tcl.ecommerce-state-changes-procs.ec_update_state_to_in_basket.credit_user_select {
      select creditcard_id, user_id 
      from ec_orders 
      where order_id=:order_id
    } {} {} {} c:/web/openacs-4/packages/ecommerce/tcl/ecommerce-state-changes-procs.xql}
dbqd.ecommerce.tcl.ecommerce-state-changes-procs.ec_update_state_to_in_basket.order_state_update {dbqd.ecommerce.tcl.ecommerce-state-changes-procs.ec_update_state_to_in_basket.order_state_update {
      update ec_orders 
      set order_state='in_basket', confirmed_date=null 
      where order_id=:order_id
    } {} {} {} c:/web/openacs-4/packages/ecommerce/tcl/ecommerce-state-changes-procs.xql}
dbqd.ecommerce.tcl.ecommerce-state-changes-procs.ec_update_state_to_in_basket.creditcard_update {dbqd.ecommerce.tcl.ecommerce-state-changes-procs.ec_update_state_to_in_basket.creditcard_update {
      update ec_creditcards 
      set failed_p='t' 
      where creditcard_id=:creditcard_id
    } {} {} {} c:/web/openacs-4/packages/ecommerce/tcl/ecommerce-state-changes-procs.xql}
dbqd.ecommerce.tcl.ecommerce-state-changes-procs.ec_update_state_to_authorized.transaction_select {dbqd.ecommerce.tcl.ecommerce-state-changes-procs.ec_update_state_to_authorized.transaction_select {
      select max(transaction_id) 
      from ec_financial_transactions 
      where order_id=:order_id
    } {} {} {} c:/web/openacs-4/packages/ecommerce/tcl/ecommerce-state-changes-procs.xql}
dbqd.ecommerce.tcl.ecommerce-state-changes-procs.ec_update_state_to_in_basket.order_state_update {dbqd.ecommerce.tcl.ecommerce-state-changes-procs.ec_update_state_to_in_basket.order_state_update {
      update ec_orders 
      set order_state='in_basket', confirmed_date=null 
      where order_id=:order_id
    } {} {} {} c:/web/openacs-4/packages/ecommerce/tcl/ecommerce-state-changes-procs.xql}
dbqd.ecommerce.tcl.ecommerce-state-changes-procs.ec_update_state_to_confirmed.user_id_select {dbqd.ecommerce.tcl.ecommerce-state-changes-procs.ec_update_state_to_confirmed.user_id_select {
      select user_id 
      from ec_orders 
      where order_id=:order_id
    } {} {} {} c:/web/openacs-4/packages/ecommerce/tcl/ecommerce-state-changes-procs.xql}
dbqd.ecommerce.tcl.ecommerce-state-changes-procs.ec_update_state_to_in_basket.order_state_update {dbqd.ecommerce.tcl.ecommerce-state-changes-procs.ec_update_state_to_in_basket.order_state_update {
      update ec_orders 
      set order_state='in_basket', confirmed_date=null 
      where order_id=:order_id
    } {} {} {} c:/web/openacs-4/packages/ecommerce/tcl/ecommerce-state-changes-procs.xql}
dbqd.ecommerce.tcl.ecommerce-user-contributions-summary-procs-oracle.ecommerce_user_contributions.get_gift_certificate_balances {dbqd.ecommerce.tcl.ecommerce-user-contributions-summary-procs-oracle.ecommerce_user_contributions.get_gift_certificate_balances {
      select ec_gift_certificate_balance(:user_id) from dual
    } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/ecommerce/tcl/ecommerce-user-contributions-summary-procs-oracle.xql}
dbqd.ecommerce.tcl.ecommerce-user-contributions-summary-procs.ecommerce_user_contributions.get_gift_certificate_balances {dbqd.ecommerce.tcl.ecommerce-user-contributions-summary-procs.ecommerce_user_contributions.get_gift_certificate_balances {
      select ec_gift_certificate_balance(:user_id) 
    } {} {} {postgresql 7.1} c:/web/openacs-4/packages/ecommerce/tcl/ecommerce-user-contributions-summary-procs-postgresql.xql}
dbqd.ecommerce.tcl.ecommerce-user-contributions-summary-procs.ecommerce_user_contributions.get_addresses {dbqd.ecommerce.tcl.ecommerce-user-contributions-summary-procs.ecommerce_user_contributions.get_addresses {
      select address_id
      from ec_addresses where user_id = :user_id
    } {} {} {} c:/web/openacs-4/packages/ecommerce/tcl/ecommerce-user-contributions-summary-procs.xql}
dbqd.ecommerce.tcl.ecommerce-user-contributions-summary-procs.ecommerce_user_contributions.get_product_reviews_for_user {dbqd.ecommerce.tcl.ecommerce-user-contributions-summary-procs.ecommerce_user_contributions.get_product_reviews_for_user {
      select c.comment_id, p.product_name, comment_date
      from ec_product_comments c, ec_products p
      where c.product_id = p.product_id
      and user_id = :user_id
    } {} {} {} c:/web/openacs-4/packages/ecommerce/tcl/ecommerce-user-contributions-summary-procs.xql}
dbqd.ecommerce.tcl.ecommerce-utilities-procs.ec_best_price.get_min_price {dbqd.ecommerce.tcl.ecommerce-utilities-procs.ec_best_price.get_min_price {
      select min(price) 
      from ec_offers
      where product_id = :product_id
    } {} {} {} c:/web/openacs-4/packages/ecommerce/tcl/ecommerce-utilities-procs.xql}
dbqd.ecommerce.tcl.ecommerce-utilities-procs.ec_savings.get_retailprice {dbqd.ecommerce.tcl.ecommerce-utilities-procs.ec_savings.get_retailprice {
      select retailprice 
      from ec_custom_product_field_values
      where product_id = :product_id
    } {} {} {} c:/web/openacs-4/packages/ecommerce/tcl/ecommerce-utilities-procs.xql}
dbqd.ecommerce.tcl.ecommerce-utilities-procs.ec_savings.get_best_price {dbqd.ecommerce.tcl.ecommerce-utilities-procs.ec_savings.get_best_price {
      select min(price) 
      from ec_offers
      where product_id = :product_id
    } {} {} {} c:/web/openacs-4/packages/ecommerce/tcl/ecommerce-utilities-procs.xql}
dbqd.ecommerce.tcl.ecommerce-utilities-procs.ec_user_identification_summary.get_row_exists {dbqd.ecommerce.tcl.ecommerce-utilities-procs.ec_user_identification_summary.get_row_exists {
      select user_id, first_names, last_name, email, other_id_info, postal_code 
      from ec_user_identification 
      where user_identification_id = :user_identification_id
    } {} {} {} c:/web/openacs-4/packages/ecommerce/tcl/ecommerce-utilities-procs.xql}
dbqd.ecommerce.tcl.ecommerce-utilities-procs.ec_user_identification_summary.get_user_name {dbqd.ecommerce.tcl.ecommerce-utilities-procs.ec_user_identification_summary.get_user_name {
      select first_names || ' ' || last_name 
      from cc_users
      where user_id = :user_id
    } {} {} {} c:/web/openacs-4/packages/ecommerce/tcl/ecommerce-utilities-procs.xql}
dbqd.ecommerce.tcl.ecommerce-utilities-procs.ec_pretty_mailing_address_from_ec_addresses.get_row_exists_p {dbqd.ecommerce.tcl.ecommerce-utilities-procs.ec_pretty_mailing_address_from_ec_addresses.get_row_exists_p {
      select line1, line2, city, usps_abbrev, zip_code, country_code, full_state_name, attn, phone, phone_time 
      from ec_addresses
      where address_id = :address_id
    } {} {} {} c:/web/openacs-4/packages/ecommerce/tcl/ecommerce-utilities-procs.xql}
dbqd.ecommerce.tcl.ecommerce-utilities-procs.ec_creditcard_summary.get_creditcard_summary {dbqd.ecommerce.tcl.ecommerce-utilities-procs.ec_creditcard_summary.get_creditcard_summary {
      select c.creditcard_type, c.creditcard_last_four, c.creditcard_expire, a.address_id
      from ec_creditcards c, ec_addresses a
      where creditcard_id = :creditcard_id
      and c.billing_address = a.address_id
    } {} {} {} c:/web/openacs-4/packages/ecommerce/tcl/ecommerce-utilities-procs.xql}
dbqd.ecommerce.tcl.ecommerce-utilities-procs.ec_country_name_from_country_code.country_name {dbqd.ecommerce.tcl.ecommerce-utilities-procs.ec_country_name_from_country_code.country_name { 
      select default_name from countries where iso = :country_code
    } {} {} {} c:/web/openacs-4/packages/ecommerce/tcl/ecommerce-utilities-procs.xql}
dbqd.ecommerce.tcl.ecommerce-utilities-procs.ec_order_status.get_shippable_p {dbqd.ecommerce.tcl.ecommerce-utilities-procs.ec_order_status.get_shippable_p {
      select case when shipping_method = 'no shipping' then 0 else 1 end as shippable_p
      from ec_orders
      where order_id = :order_id
    } {} {} {} c:/web/openacs-4/packages/ecommerce/tcl/ecommerce-utilities-procs.xql}
dbqd.ecommerce.tcl.ecommerce-utilities-procs.ec_gift_certificate_status.get_gift_certificate_info {dbqd.ecommerce.tcl.ecommerce-utilities-procs.ec_gift_certificate_status.get_gift_certificate_info {
      select 
      gift_certificate_state, user_id
      from ec_gift_certificates
      where gift_certificate_id = :gift_certificate_id
    } {} {} {} c:/web/openacs-4/packages/ecommerce/tcl/ecommerce-utilities-procs.xql}
dbqd.ecommerce.tcl.ecommerce-utilities-procs.ec_prune_product_purchase_combinations.prune_expired_combinations {dbqd.ecommerce.tcl.ecommerce-utilities-procs.ec_prune_product_purchase_combinations.prune_expired_combinations {
      delete from ec_product_purchase_comb
      where exists (select product_id 
		    from ec_products p
		    where p.active_p = 'f'
		    and p.product_id in (ec_product_purchase_comb.product_id, ec_product_purchase_comb.product_0, 
					 ec_product_purchase_comb.product_1, ec_product_purchase_comb.product_2, 
					 ec_product_purchase_comb.product_3, ec_product_purchase_comb.product_4))
    } {} {} {} c:/web/openacs-4/packages/ecommerce/tcl/ecommerce-utilities-procs.xql}
dbqd.ecommerce.tcl.ecommerce-widgets-procs-oracle.ec_combocategory_widget.get_combocategories {dbqd.ecommerce.tcl.ecommerce-widgets-procs-oracle.ec_combocategory_widget.get_combocategories {
      select c.category_id, s.subcategory_id, category_name, subcategory_name 
      from ec_categories c, ec_subcategories s
      where c.category_id(+)=s.category_id
    } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/ecommerce/tcl/ecommerce-widgets-procs-oracle.xql}
dbqd.ecommerce.tcl.ecommerce-widgets-procs-oracle.ec_gift_certificate_expires_widget.now {dbqd.ecommerce.tcl.ecommerce-widgets-procs-oracle.ec_gift_certificate_expires_widget.now {
      sysdate
    } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/ecommerce/tcl/ecommerce-widgets-procs-oracle.xql}
dbqd.ecommerce.tcl.ecommerce-widgets-procs-oracle.ec_date_widget.date_widget_select {dbqd.ecommerce.tcl.ecommerce-widgets-procs-oracle.ec_date_widget.date_widget_select {
      select to_char(sysdate, 'YYYY-MM-DD') from dual
    } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/ecommerce/tcl/ecommerce-widgets-procs-oracle.xql}
dbqd.ecommerce.tcl.ecommerce-widgets-procs-oracle.ec_time_widget.time_widget_select {dbqd.ecommerce.tcl.ecommerce-widgets-procs-oracle.ec_time_widget.time_widget_select {
      select to_char(sysdate, 'HH24:MI:SS') from dual
    } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/ecommerce/tcl/ecommerce-widgets-procs-oracle.xql}
dbqd.ecommerce.tcl.ecommerce-widgets-procs-oracle.ec_category_widget.get_category_info_joined_w_children {dbqd.ecommerce.tcl.ecommerce-widgets-procs-oracle.ec_category_widget.get_category_info_joined_w_children {
      select c.category_id, c.category_name,
      s.subcategory_id, s.subcategory_name,
      ss.subsubcategory_id, ss.subsubcategory_name
      from ec_categories c, ec_subcategories s, ec_subsubcategories ss
      where c.category_id = s.category_id (+)
      and s.subcategory_id = ss.subcategory_id (+)
      order by c.sort_key, s.sort_key, ss.sort_key
    } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/ecommerce/tcl/ecommerce-widgets-procs-oracle.xql}
dbqd.ecommerce.tcl.ecommerce-widgets-procs-oracle.ec_mailing_list_widget.get_category_children {dbqd.ecommerce.tcl.ecommerce-widgets-procs-oracle.ec_mailing_list_widget.get_category_children {
      select c.category_id, c.category_name, s.subcategory_id, s.subcategory_name, ss.subsubcategory_id, ss.subsubcategory_name
      from ec_categories c, ec_subcategories s, ec_subsubcategories ss, ec_cat_mailing_lists m
      where m.category_id=c.category_id(+)
      and m.subcategory_id=s.subcategory_id(+)
      and m.subsubcategory_id=ss.subsubcategory_id(+)
      order by decode(c.category_id, null, 0, c.sort_key), decode(s.subcategory_id, null, 0, s.sort_key), decode(ss.subcategory_id, null, 0, ss.sort_key)
    } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/ecommerce/tcl/ecommerce-widgets-procs-oracle.xql}
dbqd.ecommerce.tcl.ecommerce-widgets-procs.ec_combocategory_widget.get_combocategories {dbqd.ecommerce.tcl.ecommerce-widgets-procs.ec_combocategory_widget.get_combocategories {
      select c.category_id, s.subcategory_id, category_name, subcategory_name 
      from ec_categories c left
      outer join ec_subcategories s using (category_id)
    } {} {} {postgresql 7.1} c:/web/openacs-4/packages/ecommerce/tcl/ecommerce-widgets-procs-postgresql.xql}
dbqd.ecommerce.tcl.ecommerce-widgets-procs.ec_gift_certificate_expires_widget.now {dbqd.ecommerce.tcl.ecommerce-widgets-procs.ec_gift_certificate_expires_widget.now {
      current_timestamp
    } {} {} {postgresql 7.1} c:/web/openacs-4/packages/ecommerce/tcl/ecommerce-widgets-procs-postgresql.xql}
dbqd.ecommerce.tcl.ecommerce-widgets-procs.ec_date_widget.date_widget_select {dbqd.ecommerce.tcl.ecommerce-widgets-procs.ec_date_widget.date_widget_select {
      select to_char(current_timestamp, 'YYYY-MM-DD') 
    } {} {} {postgresql 7.1} c:/web/openacs-4/packages/ecommerce/tcl/ecommerce-widgets-procs-postgresql.xql}
dbqd.ecommerce.tcl.ecommerce-widgets-procs.ec_time_widget.time_widget_select {dbqd.ecommerce.tcl.ecommerce-widgets-procs.ec_time_widget.time_widget_select {
      select to_char(current_timestamp, 'HH24:MI:SS') 
    } {} {} {postgresql 7.1} c:/web/openacs-4/packages/ecommerce/tcl/ecommerce-widgets-procs-postgresql.xql}
dbqd.ecommerce.tcl.ecommerce-widgets-procs.ec_category_widget.get_category_info_joined_w_children {dbqd.ecommerce.tcl.ecommerce-widgets-procs.ec_category_widget.get_category_info_joined_w_children {
      select c.category_id, c.category_name,
      s.subcategory_id, s.subcategory_name,
      ss.subsubcategory_id, ss.subsubcategory_name
      from ec_categories c
      left join ec_subcategories s using (category_id)
      left join ec_subsubcategories ss on (s.subcategory_id = ss.subcategory_id)
      order by c.sort_key, s.sort_key, ss.sort_key
    } {} {} {postgresql 7.1} c:/web/openacs-4/packages/ecommerce/tcl/ecommerce-widgets-procs-postgresql.xql}
dbqd.ecommerce.tcl.ecommerce-widgets-procs.ec_mailing_list_widget.get_category_children {dbqd.ecommerce.tcl.ecommerce-widgets-procs.ec_mailing_list_widget.get_category_children {
      select c.category_id, c.category_name, s.subcategory_id, s.subcategory_name, ss.subsubcategory_id, ss.subsubcategory_name
      from ec_cat_mailing_lists m
      left join ec_categories c on (m.category_id=c.category_id)
      left join ec_subcategories s on (m.subcategory_id=s.subcategory_id)
      left join ec_subsubcategories ss on (m.subsubcategory_id=ss.subsubcategory_id)
      order by 
      case when c.category_id is null then 0 else c.sort_key end, 
      case when s.subcategory_id is null then 0 else s.sort_key end, 
      case when ss.subcategory_id is null then 0 else ss.sort_key end
    } {} {} {postgresql 7.1} c:/web/openacs-4/packages/ecommerce/tcl/ecommerce-widgets-procs-postgresql.xql}
dbqd.ecommerce.tcl.ecommerce-widgets-procs.ec_only_category_widget.get_ec_categories {dbqd.ecommerce.tcl.ecommerce-widgets-procs.ec_only_category_widget.get_ec_categories {
      select category_id, category_name
      from ec_categories
      order by category_name
    } {} {} {} c:/web/openacs-4/packages/ecommerce/tcl/ecommerce-widgets-procs.xql}
dbqd.ecommerce.tcl.ecommerce-widgets-procs.ec_subcategory_widget.get_subcats_by_name {dbqd.ecommerce.tcl.ecommerce-widgets-procs.ec_subcategory_widget.get_subcats_by_name {
      select subcategory_id, subcategory_name
      from ec_subcategories
      where category_id = :category_id
      order by subcategory_name
    } {} {} {} c:/web/openacs-4/packages/ecommerce/tcl/ecommerce-widgets-procs.xql}
dbqd.ecommerce.tcl.ecommerce-widgets-procs.ec_subcategory_with_subsubcategories_widget.get_subcategory_ids {dbqd.ecommerce.tcl.ecommerce-widgets-procs.ec_subcategory_with_subsubcategories_widget.get_subcategory_ids {
      select subcategory_id
      from ec_subcategories 
      where category_id = :category_id
    } {} {} {} c:/web/openacs-4/packages/ecommerce/tcl/ecommerce-widgets-procs.xql}
dbqd.ecommerce.tcl.ecommerce-widgets-procs.ec_subcategory_with_subsubcategories_widget.get_subcategory_names {dbqd.ecommerce.tcl.ecommerce-widgets-procs.ec_subcategory_with_subsubcategories_widget.get_subcategory_names {
      select subcategory_name
      from ec_subcategories 
      where subcategory_id = :subcategory_id
    } {} {} {} c:/web/openacs-4/packages/ecommerce/tcl/ecommerce-widgets-procs.xql}
dbqd.ecommerce.tcl.ecommerce-widgets-procs.ec_determine_categorization_widget_defaults.get_sub_list {dbqd.ecommerce.tcl.ecommerce-widgets-procs.ec_determine_categorization_widget_defaults.get_sub_list {
      select subcategory_id
      from ec_subcategories 
      where category_id = :category_id
      and subcategory_id in ([join $subcategory_list ","]) 
      order by subcategory_name
    } {} {} {} c:/web/openacs-4/packages/ecommerce/tcl/ecommerce-widgets-procs.xql}
dbqd.ecommerce.tcl.ecommerce-widgets-procs.ec_determine_categorization_widget_defaults.get_subsub_list {dbqd.ecommerce.tcl.ecommerce-widgets-procs.ec_determine_categorization_widget_defaults.get_subsub_list {
      select subsubcategory_id
      from ec_subsubcategories 
      where subcategory_id = :subcategory_id
      and subsubcategory_id in ([join $subsubcategory_list ","]) 
      order by subsubcategory_name
    } {} {} {} c:/web/openacs-4/packages/ecommerce/tcl/ecommerce-widgets-procs.xql}
dbqd.ecommerce.tcl.ecommerce-widgets-procs.ec_issue_type_widget.get_picklist_items {dbqd.ecommerce.tcl.ecommerce-widgets-procs.ec_issue_type_widget.get_picklist_items {
      select picklist_item
      from ec_picklist_items
      where picklist_name = 'issue_type'
      order by sort_key
    } {} {} {} c:/web/openacs-4/packages/ecommerce/tcl/ecommerce-widgets-procs.xql}
dbqd.ecommerce.tcl.ecommerce-widgets-procs.ec_info_used_widget.get_info_used_list {dbqd.ecommerce.tcl.ecommerce-widgets-procs.ec_info_used_widget.get_info_used_list {
      select picklist_item
      from ec_picklist_items
      where picklist_name = 'info_used'
      order by sort_key
    } {} {} {} c:/web/openacs-4/packages/ecommerce/tcl/ecommerce-widgets-procs.xql}
dbqd.ecommerce.tcl.ecommerce-widgets-procs.ec_interaction_type_widget.get_interaction_type_list {dbqd.ecommerce.tcl.ecommerce-widgets-procs.ec_interaction_type_widget.get_interaction_type_list {
      select picklist_item
      from ec_picklist_items
      where picklist_name='interaction_type'
      order by sort_key
    } {} {} {} c:/web/openacs-4/packages/ecommerce/tcl/ecommerce-widgets-procs.xql}
dbqd.ecommerce.www.account-oracle.get_gift_certificate_balance {dbqd.ecommerce.www.account-oracle.get_gift_certificate_balance {
      select ec_gift_certificate_balance(:user_id) 
      from dual
    } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/ecommerce/www/account-oracle.xql}
dbqd.ecommerce.www.account-oracle.get_user_view_classes {dbqd.ecommerce.www.account-oracle.get_user_view_classes {
      select 1 
      from dual where exists (select 1 
          from ec_user_classes)
    } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/ecommerce/www/account-oracle.xql}
dbqd.ecommerce.www.account-oracle.get_mailing_lists {dbqd.ecommerce.www.account-oracle.get_mailing_lists {
      select ml.category_id, c.category_name, ml.subcategory_id, s.subcategory_name, ml.subsubcategory_id, ss.subsubcategory_name
      from ec_cat_mailing_lists ml, ec_categories c, ec_subcategories s, ec_subsubcategories ss
      where ml.user_id = :user_id
      and ml.category_id = c.category_id(+)
      and ml.subcategory_id = s.subcategory_id(+)
      and ml.subsubcategory_id = ss.subsubcategory_id(+)
    } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/ecommerce/www/account-oracle.xql}
dbqd.ecommerce.www.account.get_gift_certificate_balance {dbqd.ecommerce.www.account.get_gift_certificate_balance {
      select ec_gift_certificate_balance(:user_id)
    } {} {} {postgresql 7.1} c:/web/openacs-4/packages/ecommerce/www/account-postgresql.xql}
dbqd.ecommerce.www.account.get_user_view_classes {dbqd.ecommerce.www.account.get_user_view_classes {
      select 1  where exists (select 1 from ec_user_classes)
    } {} {} {postgresql 7.1} c:/web/openacs-4/packages/ecommerce/www/account-postgresql.xql}
dbqd.ecommerce.www.account.get_orders {dbqd.ecommerce.www.account.get_orders {
      select order_id, confirmed_date 
      from ec_orders
      where user_id=:user_id
      and order_state not in ('in_basket','void','expired')
      order by order_id
    } {} {} {} c:/web/openacs-4/packages/ecommerce/www/account.xql}
dbqd.ecommerce.www.account.get_gift_certificates {dbqd.ecommerce.www.account.get_gift_certificates {
      select gift_certificate_id, issue_date, amount
      from ec_gift_certificates
      where purchased_by=:user_id
      and gift_certificate_state in ('authorized', 'confirmed')
    } {} {} {} c:/web/openacs-4/packages/ecommerce/www/account.xql}
dbqd.ecommerce.www.account.get_mailing_lists {dbqd.ecommerce.www.account.get_mailing_lists {
      select ml.category_id, c.category_name, ml.subcategory_id, s.subcategory_name, ml.subsubcategory_id, ss.subsubcategory_name
      from ec_cat_mailing_lists ml
      left join ec_categories c using(category_id)
      left join ec_subcategories s using (subcategory_id)
      left join ec_subsubcategories ss on (ml.subsubcategory_id = ss.subsubcategory_id)
      where ml.user_id = :user_id
    } {} {} {} c:/web/openacs-4/packages/ecommerce/www/account.xql}
dbqd.ecommerce.www.address-2.get_order_id {dbqd.ecommerce.www.address-2.get_order_id {
      select order_id 
      from ec_orders 
      where user_session_id=:user_session_id 
      and order_state='in_basket'
    } {} {} {} c:/web/openacs-4/packages/ecommerce/www/address-2.xql}
dbqd.ecommerce.www.address-2.update_address {dbqd.ecommerce.www.address-2.update_address {
      update ec_addresses 
      set attn=:attn, line1=:line1, line2=:line2, city=:city, usps_abbrev=:usps_abbrev, zip_code=:zip_code, phone=:phone, phone_time=:phone_time
      where address_id=:address_id
    } {} {} {} c:/web/openacs-4/packages/ecommerce/www/address-2.xql}
dbqd.ecommerce.www.address-2.insert_new_address {dbqd.ecommerce.www.address-2.insert_new_address {
      insert into ec_addresses
      (address_id, user_id, address_type, attn, line1, line2, city, usps_abbrev, zip_code, country_code, phone, phone_time)
      values
      (:address_id, :user_id, :address_type, :attn, :line1,:line2,:city,:usps_abbrev,:zip_code,'US',:phone,:phone_time)
    } {} {} {} c:/web/openacs-4/packages/ecommerce/www/address-2.xql}
dbqd.ecommerce.www.address-2.set_shipping_on_order {dbqd.ecommerce.www.address-2.set_shipping_on_order {
      update ec_orders 
      set shipping_address=:address_id 
      where order_id=:order_id
    } {} {} {} c:/web/openacs-4/packages/ecommerce/www/address-2.xql}
dbqd.ecommerce.www.address-international-2.get_order_id {dbqd.ecommerce.www.address-international-2.get_order_id {
      select order_id 
      from ec_orders 
      where user_session_id=:user_session_id 
      and order_state='in_basket'
    } {} {} {} c:/web/openacs-4/packages/ecommerce/www/address-international-2.xql}
dbqd.ecommerce.www.address-international-2.update_address {dbqd.ecommerce.www.address-international-2.update_address {
      update ec_addresses
      set attn = :attn, line1 = :line1, line2 = :line2, 
      city = :city, full_state_name = :full_state_name, zip_code = :zip_code, country_code = :country_code, phone = :phone, phone_time = :phone_time
      where address_id = :address_id
    } {} {} {} c:/web/openacs-4/packages/ecommerce/www/address-international-2.xql}
dbqd.ecommerce.www.address-international-2.set_shipping_on_order {dbqd.ecommerce.www.address-international-2.set_shipping_on_order {
      update ec_orders 
      set shipping_address=:address_id 
      where order_id=:order_id
    } {} {} {} c:/web/openacs-4/packages/ecommerce/www/address-international-2.xql}
dbqd.ecommerce.www.address-international-2.insert_new_address {dbqd.ecommerce.www.address-international-2.insert_new_address {
      insert into ec_addresses
      (address_id, user_id, address_type, attn, line1, line2, city, full_state_name, zip_code, country_code, phone, phone_time)
      values
      (:address_id, :user_id, :address_type, :attn, :line1,:line2,:city,:full_state_name,:zip_code,:country_code,:phone,:phone_time)
    } {} {} {} c:/web/openacs-4/packages/ecommerce/www/address-international-2.xql}
dbqd.ecommerce.www.address-international-2.update_order_shipping_address {dbqd.ecommerce.www.address-international-2.update_order_shipping_address {
      update ec_orders 
      set shipping_address=:address_id 
      where order_id=:order_id
    } {} {} {} c:/web/openacs-4/packages/ecommerce/www/address-international-2.xql}
dbqd.ecommerce.www.address-international.get_full_name {dbqd.ecommerce.www.address-international.get_full_name {
      select first_names || ' ' || last_name as name 
      from cc_users
      where user_id=:user_id
    } {} {} {} c:/web/openacs-4/packages/ecommerce/www/address-international.xql}
dbqd.ecommerce.www.address.get_full_name {dbqd.ecommerce.www.address.get_full_name {
      select first_names || ' ' || last_name as name 
      from cc_users
      where user_id=:user_id
    } {} {} {} c:/web/openacs-4/packages/ecommerce/www/address.xql}
dbqd.ecommerce.www.address.select_address {dbqd.ecommerce.www.address.select_address {
      select attn, line1, line2, city, usps_abbrev, zip_code, phone, country_code, full_state_name, phone_time 
      from ec_addresses
      where address_id=:address_id
    } {} {} {} c:/web/openacs-4/packages/ecommerce/www/address.xql}
dbqd.ecommerce.www.admin.audit-table-oracle.select_one {dbqd.ecommerce.www.admin.audit-table-oracle.select_one {
      select 1
      from dual
      where to_date('$start_date(date)','YYYY-MM-DD HH24:MI:SS')  > to_date('$end_date(date)', 'YYYY-MM-DD HH24:MI:SS')
    } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/ecommerce/www/admin/audit-table-oracle.xql}
dbqd.ecommerce.www.admin.audit-table.select_one {dbqd.ecommerce.www.admin.audit-table.select_one {
      select 1 where to_date('$start_date(date)','YYYY-MM-DD HH24:MI:SS')  > to_date('$end_date(date)', 'YYYY-MM-DD HH24:MI:SS')
    } {} {} {postgresql 7.1} c:/web/openacs-4/packages/ecommerce/www/admin/audit-table-postgresql.xql}
dbqd.ecommerce.www.admin.cat.category-add-0.get_n_conflicts {dbqd.ecommerce.www.admin.cat.category-add-0.get_n_conflicts {
      select count(*)
from ec_categories
where sort_key = :sort_key
      } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/cat/category-add-0.xql}
dbqd.ecommerce.www.admin.cat.category-add-2-oracle.insert_into_ec_categories {dbqd.ecommerce.www.admin.cat.category-add-2-oracle.insert_into_ec_categories {
      insert into ec_categories
(category_id, category_name, sort_key, last_modified, last_modifying_user, modified_ip_address)
values
(:category_id, :category_name, :sort_key, sysdate, :user_id, :peeraddr)
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/ecommerce/www/admin/cat/category-add-2-oracle.xql}
dbqd.ecommerce.www.admin.cat.category-add-2.insert_into_ec_categories {dbqd.ecommerce.www.admin.cat.category-add-2.insert_into_ec_categories {
      insert into ec_categories
(category_id, category_name, sort_key, last_modified, last_modifying_user, modified_ip_address)
values
(:category_id, :category_name, :sort_key, current_timestamp, :user_id, :peeraddr)
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/ecommerce/www/admin/cat/category-add-2-postgresql.xql}
dbqd.ecommerce.www.admin.cat.category-add-2.get_category_confirmation {dbqd.ecommerce.www.admin.cat.category-add-2.get_category_confirmation {
      select category_id from ec_categories
where category_id=:category_id
      } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/cat/category-add-2.xql}
dbqd.ecommerce.www.admin.cat.category-add-2.get_n_conflicts {dbqd.ecommerce.www.admin.cat.category-add-2.get_n_conflicts {
      select count(*)
from ec_categories
where sort_key = :sort_key
      } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/cat/category-add-2.xql}
dbqd.ecommerce.www.admin.cat.category-add.get_n_conflicts {dbqd.ecommerce.www.admin.cat.category-add.get_n_conflicts {
      select count(*)
from ec_categories
where sort_key = :sort_key
      } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/cat/category-add.xql}
dbqd.ecommerce.www.admin.cat.category-delete-2.get_subcategory_list {dbqd.ecommerce.www.admin.cat.category-delete-2.get_subcategory_list {
      select subsubcategory_id from ec_subsubcategories where subcategory_id in (select subcategory_id from ec_subcategories where category_id=:category_id)
      } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/cat/category-delete-2.xql}
dbqd.ecommerce.www.admin.cat.category-delete-2.get_subcategory_list_2 {dbqd.ecommerce.www.admin.cat.category-delete-2.get_subcategory_list_2 {
      select subcategory_id from ec_subcategories where category_id=:category_id
      } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/cat/category-delete-2.xql}
dbqd.ecommerce.www.admin.cat.category-delete-2.delete_ec_subcat_map {dbqd.ecommerce.www.admin.cat.category-delete-2.delete_ec_subcat_map {
      delete from ec_subsubcategory_product_map 
where subsubcategory_id in (select subsubcategory_id from ec_subsubcategories where subcategory_id in (select subcategory_id from ec_subcategories where category_id=:category_id))
      } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/cat/category-delete-2.xql}
dbqd.ecommerce.www.admin.cat.category-delete-2.delete_ec_subcats {dbqd.ecommerce.www.admin.cat.category-delete-2.delete_ec_subcats {
      delete from ec_subsubcategories where subcategory_id in (select subcategory_id from ec_subcategories where category_id=:category_id)
      } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/cat/category-delete-2.xql}
dbqd.ecommerce.www.admin.cat.category-delete-2.delete_ec_subcat_map_1 {dbqd.ecommerce.www.admin.cat.category-delete-2.delete_ec_subcat_map_1 {
      delete from ec_subcategory_product_map
where subcategory_id in (select subcategory_id from ec_subcategories where category_id=:category_id)
      } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/cat/category-delete-2.xql}
dbqd.ecommerce.www.admin.cat.category-delete-2.delete_ec_subcats {dbqd.ecommerce.www.admin.cat.category-delete-2.delete_ec_subcats {
      delete from ec_subsubcategories where subcategory_id in (select subcategory_id from ec_subcategories where category_id=:category_id)
      } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/cat/category-delete-2.xql}
dbqd.ecommerce.www.admin.cat.category-delete-2.delete_ec_cat_prodmap {dbqd.ecommerce.www.admin.cat.category-delete-2.delete_ec_cat_prodmap {
      delete from ec_category_product_map where category_id=:category_id
      } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/cat/category-delete-2.xql}
dbqd.ecommerce.www.admin.cat.category-delete-2.delete_ec_cat_templates {dbqd.ecommerce.www.admin.cat.category-delete-2.delete_ec_cat_templates {
      delete from ec_category_template_map where category_id=:category_id
      } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/cat/category-delete-2.xql}
dbqd.ecommerce.www.admin.cat.category-delete-2.delete_from_session_info {dbqd.ecommerce.www.admin.cat.category-delete-2.delete_from_session_info {
      delete from ec_user_session_info where category_id=:category_id
      } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/cat/category-delete-2.xql}
dbqd.ecommerce.www.admin.cat.category-delete-2.delete_ec_categories {dbqd.ecommerce.www.admin.cat.category-delete-2.delete_ec_categories {
      delete from ec_categories where category_id=:category_id
      } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/cat/category-delete-2.xql}
dbqd.ecommerce.www.admin.cat.category-edit-oracle.update_ec_categories {dbqd.ecommerce.www.admin.cat.category-edit-oracle.update_ec_categories {
      update ec_categories
set category_name=:category_name,
last_modified=sysdate,
last_modifying_user=:user_id,
modified_ip_address=:address
where category_id=:category_id
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/ecommerce/www/admin/cat/category-edit-oracle.xql}
dbqd.ecommerce.www.admin.cat.category-edit.update_ec_categories {dbqd.ecommerce.www.admin.cat.category-edit.update_ec_categories {
      update ec_categories
set category_name=:category_name,
last_modified=current_timestamp,
last_modifying_user=:user_id,
modified_ip_address=:address
where category_id=:category_id
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/ecommerce/www/admin/cat/category-edit-postgresql.xql}
dbqd.ecommerce.www.admin.cat.category-swap.get_item_match_count {dbqd.ecommerce.www.admin.cat.category-swap.get_item_match_count {
      select count(*) from ec_categories where category_id=:category_id and sort_key=:sort_key
      } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/cat/category-swap.xql}
dbqd.ecommerce.www.admin.cat.category-swap.get_next_item_match_count {dbqd.ecommerce.www.admin.cat.category-swap.get_next_item_match_count {
      select count(*) from ec_categories where category_id=:next_category_id and sort_key=:next_sort_key
      } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/cat/category-swap.xql}
dbqd.ecommerce.www.admin.cat.category-swap.update_swap_cat_1 {dbqd.ecommerce.www.admin.cat.category-swap.update_swap_cat_1 {
      update ec_categories set sort_key=:next_sort_key where category_id=:category_id
      } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/cat/category-swap.xql}
dbqd.ecommerce.www.admin.cat.category-swap.update_swap_cat_2 {dbqd.ecommerce.www.admin.cat.category-swap.update_swap_cat_2 {
      update ec_categories set sort_key=:sort_key where category_id=:next_category_id
      } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/cat/category-swap.xql}
dbqd.ecommerce.www.admin.cat.category.get_subcat_info_loop {dbqd.ecommerce.www.admin.cat.category.get_subcat_info_loop {
      select subcategory_id, sort_key, subcategory_name from ec_subcategories where category_id=:category_id order by sort_key
      } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/cat/category.xql}
dbqd.ecommerce.www.admin.cat.index.get_categories_loop {dbqd.ecommerce.www.admin.cat.index.get_categories_loop {
      select category_id, sort_key, category_name from ec_categories order by sort_key
      } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/cat/index.xql}
dbqd.ecommerce.www.admin.cat.subcategory-add-0.get_n_conflicts {dbqd.ecommerce.www.admin.cat.subcategory-add-0.get_n_conflicts {
      select count(*)
from ec_subcategories
where category_id=:category_id
and sort_key = :sort_key
      } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/cat/subcategory-add-0.xql}
dbqd.ecommerce.www.admin.cat.subcategory-add-2-oracle.ec_subcat_insert {dbqd.ecommerce.www.admin.cat.subcategory-add-2-oracle.ec_subcat_insert {
      insert into ec_subcategories
    (category_id, subcategory_id, subcategory_name, sort_key, last_modified, last_modifying_user, modified_ip_address)
    values
    (:category_id, :subcategory_id, :subcategory_name, :sort_key, sysdate, :user_id, :address)
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/ecommerce/www/admin/cat/subcategory-add-2-oracle.xql}
dbqd.ecommerce.www.admin.cat.subcategory-add-2.ec_subcat_insert {dbqd.ecommerce.www.admin.cat.subcategory-add-2.ec_subcat_insert {
      insert into ec_subcategories
    (category_id, subcategory_id, subcategory_name, sort_key, last_modified, last_modifying_user, modified_ip_address)
    values
    (:category_id, :subcategory_id, :subcategory_name, :sort_key, current_timestamp, :user_id, :address)
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/ecommerce/www/admin/cat/subcategory-add-2-postgresql.xql}
dbqd.ecommerce.www.admin.cat.subcategory-add-2.sub_id_select {dbqd.ecommerce.www.admin.cat.subcategory-add-2.sub_id_select {
      select subcategory_id from ec_subcategories
where subcategory_id=:subcategory_id
      } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/cat/subcategory-add-2.xql}
dbqd.ecommerce.www.admin.cat.subcategory-add-2.get_n_conflicts {dbqd.ecommerce.www.admin.cat.subcategory-add-2.get_n_conflicts {
      select count(*)
from ec_subcategories
where category_id=:category_id
and sort_key = :sort_key
      } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/cat/subcategory-add-2.xql}
dbqd.ecommerce.www.admin.cat.subcategory-add.get_n_conflicts {dbqd.ecommerce.www.admin.cat.subcategory-add.get_n_conflicts {
      select count(*)
from ec_subcategories
where category_id=:category_id
and sort_key = :sort_key
      } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/cat/subcategory-add.xql}
dbqd.ecommerce.www.admin.cat.subcategory-delete-2.get_subsublist {dbqd.ecommerce.www.admin.cat.subcategory-delete-2.get_subsublist {
      select subsubcategory_id from ec_subsubcategories where subcategory_id=:subcategory_id
      } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/cat/subcategory-delete-2.xql}
dbqd.ecommerce.www.admin.cat.subcategory-delete-2.delete_from_subsubmap {dbqd.ecommerce.www.admin.cat.subcategory-delete-2.delete_from_subsubmap {
      delete from ec_subsubcategory_product_map 
    where subsubcategory_id in (select subsubcategory_id from ec_subsubcategories where subcategory_id=:subcategory_id)
      } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/cat/subcategory-delete-2.xql}
dbqd.ecommerce.www.admin.cat.subcategory-delete-2.delete_from_ecsubsub {dbqd.ecommerce.www.admin.cat.subcategory-delete-2.delete_from_ecsubsub {
      delete from ec_subsubcategories where subcategory_id=:subcategory_id
      } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/cat/subcategory-delete-2.xql}
dbqd.ecommerce.www.admin.cat.subcategory-delete-2.delete_from_ec_sub_map {dbqd.ecommerce.www.admin.cat.subcategory-delete-2.delete_from_ec_sub_map {
      delete from ec_subcategory_product_map where subcategory_id=:subcategory_id
      } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/cat/subcategory-delete-2.xql}
dbqd.ecommerce.www.admin.cat.subcategory-delete-2.delete_from_ec_subcats {dbqd.ecommerce.www.admin.cat.subcategory-delete-2.delete_from_ec_subcats {
      delete from ec_subcategories where subcategory_id=:subcategory_id
      } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/cat/subcategory-delete-2.xql}
dbqd.ecommerce.www.admin.cat.subcategory-edit-oracle.update_ec_subcats {dbqd.ecommerce.www.admin.cat.subcategory-edit-oracle.update_ec_subcats {
      update ec_subcategories
set subcategory_name=:subcategory_name,
last_modified=sysdate,
last_modifying_user=:user_id,
modified_ip_address=:address
where subcategory_id=:subcategory_id
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/ecommerce/www/admin/cat/subcategory-edit-oracle.xql}
dbqd.ecommerce.www.admin.cat.subcategory-edit.update_ec_subcats {dbqd.ecommerce.www.admin.cat.subcategory-edit.update_ec_subcats {
      update ec_subcategories
set subcategory_name=:subcategory_name,
last_modified=current_timestamp,
last_modifying_user=:user_id,
modified_ip_address=:address
where subcategory_id=:subcategory_id
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/ecommerce/www/admin/cat/subcategory-edit-postgresql.xql}
dbqd.ecommerce.www.admin.cat.subcategory-swap.get_item_match {dbqd.ecommerce.www.admin.cat.subcategory-swap.get_item_match {
      select count(*) from ec_subcategories where subcategory_id=:subcategory_id and sort_key=:sort_key
      } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/cat/subcategory-swap.xql}
dbqd.ecommerce.www.admin.cat.subcategory-swap.get_next_item_match {dbqd.ecommerce.www.admin.cat.subcategory-swap.get_next_item_match {
      select count(*) from ec_subcategories where subcategory_id=:next_subcategory_id and sort_key=:next_sort_key
      } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/cat/subcategory-swap.xql}
dbqd.ecommerce.www.admin.cat.subcategory-swap.update_swap_subcat {dbqd.ecommerce.www.admin.cat.subcategory-swap.update_swap_subcat {
      update ec_subcategories set sort_key=:next_sort_key where subcategory_id=:subcategory_id
      } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/cat/subcategory-swap.xql}
dbqd.ecommerce.www.admin.cat.subcategory-swap.update_swap_subcat_2 {dbqd.ecommerce.www.admin.cat.subcategory-swap.update_swap_subcat_2 {
      update ec_subcategories set sort_key=:sort_key where subcategory_id=:next_subcategory_id
      } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/cat/subcategory-swap.xql}
dbqd.ecommerce.www.admin.cat.subcategory.get_subcategory_infos {dbqd.ecommerce.www.admin.cat.subcategory.get_subcategory_infos {
      select subsubcategory_id, sort_key, subsubcategory_name from ec_subsubcategories where subcategory_id=:subcategory_id order by sort_key
      } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/cat/subcategory.xql}
dbqd.ecommerce.www.admin.cat.subsubcategory-add-0.get_n_conflicts {dbqd.ecommerce.www.admin.cat.subsubcategory-add-0.get_n_conflicts {
      select count(*)
from ec_subsubcategories
where subcategory_id=:subcategory_id
and sort_key = :sort_key
      } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/cat/subsubcategory-add-0.xql}
dbqd.ecommerce.www.admin.cat.subsubcategory-add-2-oracle.insert_ec_subsubcat {dbqd.ecommerce.www.admin.cat.subsubcategory-add-2-oracle.insert_ec_subsubcat {
      insert into ec_subsubcategories
(subcategory_id, subsubcategory_id, subsubcategory_name, sort_key, last_modified, last_modifying_user, modified_ip_address)
values
(:subcategory_id, :subsubcategory_id, :subsubcategory_name, :sort_key, sysdate, :user_id,:address)
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/ecommerce/www/admin/cat/subsubcategory-add-2-oracle.xql}
dbqd.ecommerce.www.admin.cat.subsubcategory-add-2.insert_ec_subsubcat {dbqd.ecommerce.www.admin.cat.subsubcategory-add-2.insert_ec_subsubcat {
      insert into ec_subsubcategories
(subcategory_id, subsubcategory_id, subsubcategory_name, sort_key, last_modified, last_modifying_user, modified_ip_address)
values
(:subcategory_id, :subsubcategory_id, :subsubcategory_name, :sort_key, current_timestamp, :user_id,:address)
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/ecommerce/www/admin/cat/subsubcategory-add-2-postgresql.xql}
dbqd.ecommerce.www.admin.cat.subsubcategory-add-2.get_subcat_id {dbqd.ecommerce.www.admin.cat.subsubcategory-add-2.get_subcat_id {
      select subsubcategory_id from ec_subsubcategories
where subsubcategory_id=:subsubcategory_id
      } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/cat/subsubcategory-add-2.xql}
dbqd.ecommerce.www.admin.cat.subsubcategory-add-2.get_n_conflicts {dbqd.ecommerce.www.admin.cat.subsubcategory-add-2.get_n_conflicts {
      select count(*)
from ec_subsubcategories
where subcategory_id=:subcategory_id
and sort_key = :sort_key
      } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/cat/subsubcategory-add-2.xql}
dbqd.ecommerce.www.admin.cat.subsubcategory-add.get_n_conflicts {dbqd.ecommerce.www.admin.cat.subsubcategory-add.get_n_conflicts {
      select count(*)
from ec_subsubcategories
where subcategory_id=:subcategory_id
and sort_key = :sort_key
      } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/cat/subsubcategory-add.xql}
dbqd.ecommerce.www.admin.cat.subsubcategory-delete-2.delete_subsub_map {dbqd.ecommerce.www.admin.cat.subsubcategory-delete-2.delete_subsub_map {
      delete from ec_subsubcategory_product_map where subsubcategory_id=:subsubcategory_id
      } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/cat/subsubcategory-delete-2.xql}
dbqd.ecommerce.www.admin.cat.subsubcategory-delete-2.delete_subsubcats {dbqd.ecommerce.www.admin.cat.subsubcategory-delete-2.delete_subsubcats {
      delete from ec_subsubcategories where subsubcategory_id = :subsubcategory_id
      } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/cat/subsubcategory-delete-2.xql}
dbqd.ecommerce.www.admin.cat.subsubcategory-edit-oracle.update_subsubcategory {dbqd.ecommerce.www.admin.cat.subsubcategory-edit-oracle.update_subsubcategory {
      update ec_subsubcategories
set subsubcategory_name=:subsubcategory_name,
last_modified=sysdate,
last_modifying_user=:user_id,
modified_ip_address=:address
where subsubcategory_id=:subsubcategory_id
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/ecommerce/www/admin/cat/subsubcategory-edit-oracle.xql}
dbqd.ecommerce.www.admin.cat.subsubcategory-edit.update_subsubcategory {dbqd.ecommerce.www.admin.cat.subsubcategory-edit.update_subsubcategory {
      update ec_subsubcategories
set subsubcategory_name=:subsubcategory_name,
last_modified=current_timestamp,
last_modifying_user=:user_id,
modified_ip_address=:address
where subsubcategory_id=:subsubcategory_id
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/ecommerce/www/admin/cat/subsubcategory-edit-postgresql.xql}
dbqd.ecommerce.www.admin.cat.subsubcategory-swap.get_item_match_no {dbqd.ecommerce.www.admin.cat.subsubcategory-swap.get_item_match_no {
      select count(*) from ec_subsubcategories where subsubcategory_id=:subsubcategory_id and sort_key=:sort_key
      } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/cat/subsubcategory-swap.xql}
dbqd.ecommerce.www.admin.cat.subsubcategory-swap.get_next_item_match {dbqd.ecommerce.www.admin.cat.subsubcategory-swap.get_next_item_match {
      select count(*) from ec_subsubcategories where subsubcategory_id=:next_subsubcategory_id and sort_key=:next_sort_key
      } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/cat/subsubcategory-swap.xql}
dbqd.ecommerce.www.admin.cat.subsubcategory-swap.update_ec_subsubcat {dbqd.ecommerce.www.admin.cat.subsubcategory-swap.update_ec_subsubcat {
      update ec_subsubcategories set sort_key=:next_sort_key where subsubcategory_id=:subsubcategory_id
      } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/cat/subsubcategory-swap.xql}
dbqd.ecommerce.www.admin.cat.subsubcategory-swap.update_ec_subsubcat_2 {dbqd.ecommerce.www.admin.cat.subsubcategory-swap.update_ec_subsubcat_2 {
      update ec_subsubcategories set sort_key=:sort_key where subsubcategory_id=:next_subsubcategory_id
      } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/cat/subsubcategory-swap.xql}
dbqd.ecommerce.www.admin.customer-reviews.approval-change-oracle.update_set_approved_satus {dbqd.ecommerce.www.admin.customer-reviews.approval-change-oracle.update_set_approved_satus {
      update ec_product_comments set 
approved_p=:approved_p,
last_modified = sysdate,
last_modifying_user = :user_id,
modified_ip_address = '[ns_conn peeraddr]'
where comment_id=:comment_id
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/ecommerce/www/admin/customer-reviews/approval-change-oracle.xql}
dbqd.ecommerce.www.admin.customer-reviews.approval-change.update_set_approved_satus {dbqd.ecommerce.www.admin.customer-reviews.approval-change.update_set_approved_satus {
      update ec_product_comments set 
approved_p=:approved_p,
last_modified = current_timestamp,
last_modifying_user = :user_id,
modified_ip_address = '[ns_conn peeraddr]'
where comment_id=:comment_id
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/ecommerce/www/admin/customer-reviews/approval-change-postgresql.xql}
dbqd.ecommerce.www.admin.customer-reviews.one.get_product_info {dbqd.ecommerce.www.admin.customer-reviews.one.get_product_info {
      select c.product_id, c.user_id, c.user_comment, c.one_line_summary, c.rating, p.product_name, u.email, c.comment_date, c.approved_p
from ec_product_comments c, ec_products p, cc_users u
where c.product_id = p.product_id
and c. user_id = u.user_id 
and c.comment_id=:comment_id
      } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/customer-reviews/one.xql}
dbqd.ecommerce.www.admin.customer-service.actions-oracle.none_sql {dbqd.ecommerce.www.admin.customer-service.actions-oracle.none_sql {

select a.action_id, a.interaction_id, a.issue_id,
           i.interaction_date, i.customer_service_rep, i.interaction_originator, i.interaction_type,
           to_char(i.interaction_date,'YYYY-MM-DD HH24:MI:SS') as full_interaction_date,
           reps.first_names as rep_first_names, reps.last_name as rep_last_name,
           i.user_identification_id, customer_info.user_id as customer_user_id,
           customer_info.first_names as customer_first_names, customer_info.last_name as customer_last_name
      from ec_customer_service_actions a, ec_customer_serv_interactions i, cc_users reps,
           (select id.user_identification_id, id.user_id, u2.first_names, u2.last_name
              from ec_user_identification id, cc_users u2
             where id.user_id=u2.user_id(+)) customer_info
     where a.interaction_id = i.interaction_id
       and i.user_identification_id=customer_info.user_identification_id
       and i.customer_service_rep=reps.user_id(+)
       and 0 = (select count(*) from ec_cs_action_info_used_map map where map.action_id=a.action_id)
           $interaction_date_query_bit $rep_query_bit
  order by $order_by

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/ecommerce/www/admin/customer-service/actions-oracle.xql}
dbqd.ecommerce.www.admin.customer-service.actions-oracle.all_others_sql {dbqd.ecommerce.www.admin.customer-service.actions-oracle.all_others_sql {

      select a.action_id, a.interaction_id, a.issue_id,
           i.interaction_date, i.customer_service_rep, i.user_identification_id, i.interaction_originator, i.interaction_type,
           to_char(i.interaction_date,'YYYY-MM-DD HH24:MI:SS') as full_interaction_date,
           reps.first_names as rep_first_names, reps.last_name as rep_last_name,
           customer_info.user_id as customer_user_id, customer_info.first_names as customer_first_names, customer_info.last_name as customer_last_name
      from ec_customer_service_actions a, ec_customer_serv_interactions i, ec_cs_action_info_used_map map, cc_users reps,
           (select id.user_identification_id, id.user_id, u2.first_names, u2.last_name
              from ec_user_identification id, cc_users u2
             where id.user_id=u2.user_id(+)) customer_info
     where a.interaction_id = i.interaction_id
       and i.user_identification_id=customer_info.user_identification_id
       and a.action_id=map.action_id
       and i.customer_service_rep=reps.user_id(+) $info_used_query_bit
           $interaction_date_query_bit $rep_query_bit
  order by $order_by

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/ecommerce/www/admin/customer-service/actions-oracle.xql}
dbqd.ecommerce.www.admin.customer-service.actions-oracle.default_sql {dbqd.ecommerce.www.admin.customer-service.actions-oracle.default_sql {

      select a.action_id, a.interaction_id, a.issue_id,
             i.interaction_date, i.customer_service_rep, i.user_identification_id, i.interaction_originator, i.interaction_type,
             to_char(i.interaction_date,'YYYY-MM-DD HH24:MI:SS') as full_interaction_date,
             reps.first_names as rep_first_names, reps.last_name as rep_last_name,
             customer_info.user_id as customer_user_id, customer_info.first_names as customer_first_names, customer_info.last_name as customer_last_name
       from ec_customer_service_actions a, ec_customer_serv_interactions i, ec_cs_action_info_used_map map, cc_users reps,
            (select id.user_identification_id, id.user_id, u2.first_names, u2.last_name
               from ec_user_identification id, cc_users u2
              where id.user_id=u2.user_id(+)) customer_info
      where a.interaction_id = i.interaction_id
        and i.user_identification_id=customer_info.user_identification_id
        and reps.user_id=i.customer_service_rep
        and a.action_id=map.action_id
        and map.info_used=:view_info_used
           $interaction_date_query_bit $rep_query_bit
  order by $order_by


      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/ecommerce/www/admin/customer-service/actions-oracle.xql}
dbqd.ecommerce.www.admin.customer-service.actions-oracle.last_24 {dbqd.ecommerce.www.admin.customer-service.actions-oracle.last_24 {

      and sysdate-i.interaction_date <= 1

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/ecommerce/www/admin/customer-service/actions-oracle.xql}
dbqd.ecommerce.www.admin.customer-service.actions-oracle.last_week {dbqd.ecommerce.www.admin.customer-service.actions-oracle.last_week {

      and sysdate-i.interaction_date <= 7

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/ecommerce/www/admin/customer-service/actions-oracle.xql}
dbqd.ecommerce.www.admin.customer-service.actions-oracle.last_month {dbqd.ecommerce.www.admin.customer-service.actions-oracle.last_month {

      and months_between(sysdate,i.interaction_date) <= 1

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/ecommerce/www/admin/customer-service/actions-oracle.xql}
dbqd.ecommerce.www.admin.customer-service.actions.none_sql {dbqd.ecommerce.www.admin.customer-service.actions.none_sql {

      select a.action_id, a.interaction_id, a.issue_id,
      i.interaction_date, i.customer_service_rep, i.interaction_originator, i.interaction_type,
      to_char(i.interaction_date,'YYYY-MM-DD HH24:MI:SS') as full_interaction_date,
      reps.first_names as rep_first_names, reps.last_name as rep_last_name,
      i.user_identification_id, customer_info.user_id as customer_user_id,
      customer_info.first_names as customer_first_names, customer_info.last_name as customer_last_name
      from ec_customer_service_actions a, ec_customer_serv_interactions i
          LEFT JOIN cc_users reps on (i.customer_service_rep=reps.user_id),
      (select id.user_identification_id, id.user_id, u2.first_names, u2.last_name
              from ec_user_identification id LEFT JOIN cc_users u2
              on (id.user_id=u2.user_id)) customer_info
      where a.interaction_id = i.interaction_id
      and i.user_identification_id=customer_info.user_identification_id
      and 0 = (select count(*) from ec_cs_action_info_used_map map where map.action_id=a.action_id)
      $interaction_date_query_bit $rep_query_bit
      order by $order_by

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/ecommerce/www/admin/customer-service/actions-postgresql.xql}
dbqd.ecommerce.www.admin.customer-service.actions.all_others_sql {dbqd.ecommerce.www.admin.customer-service.actions.all_others_sql {

      select a.action_id, a.interaction_id, a.issue_id,
      i.interaction_date, i.customer_service_rep, i.user_identification_id, i.interaction_originator, i.interaction_type,
      to_char(i.interaction_date,'YYYY-MM-DD HH24:MI:SS') as full_interaction_date,
      reps.first_names as rep_first_names, reps.last_name as rep_last_name,
      customer_info.user_id as customer_user_id, customer_info.first_names as customer_first_names, customer_info.last_name as customer_last_name
      from ec_customer_service_actions a, ec_customer_serv_interactions i
          LEFT JOIN cc_users reps
             on (i.customer_service_rep=reps.user_id), 
      ec_cs_action_info_used_map map,
      (select id.user_identification_id, id.user_id, u2.first_names, u2.last_name
          from ec_user_identification id LEFT JOIN cc_users u2
          on (id.user_id=u2.user_id)) customer_info
     where a.interaction_id = i.interaction_id
     and i.user_identification_id=customer_info.user_identification_id
     and a.action_id=map.action_id
     $info_used_query_bit
     $interaction_date_query_bit $rep_query_bit
     order by $order_by

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/ecommerce/www/admin/customer-service/actions-postgresql.xql}
dbqd.ecommerce.www.admin.customer-service.actions.default_sql {dbqd.ecommerce.www.admin.customer-service.actions.default_sql {

      select a.action_id, a.interaction_id, a.issue_id,
      i.interaction_date, i.customer_service_rep, i.user_identification_id, i.interaction_originator, i.interaction_type,
      to_char(i.interaction_date,'YYYY-MM-DD HH24:MI:SS') as full_interaction_date,
      reps.first_names as rep_first_names, reps.last_name as rep_last_name,
      customer_info.user_id as customer_user_id, customer_info.first_names as customer_first_names, customer_info.last_name as customer_last_name
      from ec_customer_service_actions a, ec_customer_serv_interactions i, ec_cs_action_info_used_map map, cc_users reps,
      (select id.user_identification_id, id.user_id, u2.first_names, u2.last_name
          from ec_user_identification id LEFT JOIN cc_users u2
          on (id.user_id=u2.user_id)) customer_info
      where a.interaction_id = i.interaction_id
      and i.user_identification_id=customer_info.user_identification_id
      and reps.user_id=i.customer_service_rep
      and a.action_id=map.action_id
      and map.info_used=:view_info_used
      $interaction_date_query_bit $rep_query_bit
      order by $order_by

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/ecommerce/www/admin/customer-service/actions-postgresql.xql}
dbqd.ecommerce.www.admin.customer-service.actions.last_24 {dbqd.ecommerce.www.admin.customer-service.actions.last_24 {

      and now()-i.interaction_date <= timespan_days(1)

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/ecommerce/www/admin/customer-service/actions-postgresql.xql}
dbqd.ecommerce.www.admin.customer-service.actions.last_week {dbqd.ecommerce.www.admin.customer-service.actions.last_week {

      and now()-i.interaction_date <= timespan_days(7)

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/ecommerce/www/admin/customer-service/actions-postgresql.xql}
dbqd.ecommerce.www.admin.customer-service.actions.last_month {dbqd.ecommerce.www.admin.customer-service.actions.last_month {

      and now()-i.interaction_date <= '1 month'::interval

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/ecommerce/www/admin/customer-service/actions-postgresql.xql}
dbqd.ecommerce.www.admin.customer-service.actions.get_picklist_items {dbqd.ecommerce.www.admin.customer-service.actions.get_picklist_items {
      
  select picklist_item
    from ec_picklist_items
   where picklist_name='info_used'
order by sort_key

      } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/customer-service/actions.xql}
dbqd.ecommerce.www.admin.customer-service.actions.get_customer_service_data_sql {dbqd.ecommerce.www.admin.customer-service.actions.get_customer_service_data_sql {

select i.customer_service_rep as rep, u.first_names as rep_first_names, u.last_name as rep_last_name
    from ec_customer_serv_interactions i, cc_users u
   where i.customer_service_rep=u.user_id
group by i.customer_service_rep, u.first_names, u.last_name
order by u.last_name, u.first_names

      } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/customer-service/actions.xql}
dbqd.ecommerce.www.admin.customer-service.active-toggle.update_customer_service_table {dbqd.ecommerce.www.admin.customer-service.active-toggle.update_customer_service_table {
      update $table_name
set active_p=:active_p
where $primary_key_name=:primary_key_value
      } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/customer-service/active-toggle.xql}
dbqd.ecommerce.www.admin.customer-service.canned-response-add-2.get_response_id {dbqd.ecommerce.www.admin.customer-service.canned-response-add-2.get_response_id {
      select response_id from ec_canned_responses where one_line = :one_line
      } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/customer-service/canned-response-add-2.xql}
dbqd.ecommerce.www.admin.customer-service.canned-response-add-2.insert_new_canned_response {dbqd.ecommerce.www.admin.customer-service.canned-response-add-2.insert_new_canned_response {
      insert into ec_canned_responses (response_id, one_line, response_text)
values (ec_canned_response_id_sequence.nextval, :one_line, :response_text)
      } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/customer-service/canned-response-add-2.xql}
dbqd.ecommerce.www.admin.customer-service.canned-response-delete-2.delete_a_canned_response {dbqd.ecommerce.www.admin.customer-service.canned-response-delete-2.delete_a_canned_response {
      delete from ec_canned_responses where response_id = :response_id
      } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/customer-service/canned-response-delete-2.xql}
dbqd.ecommerce.www.admin.customer-service.canned-response-delete.get_response_info {dbqd.ecommerce.www.admin.customer-service.canned-response-delete.get_response_info {
      select one_line, response_text
from ec_canned_responses
where response_id = :response_id
      } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/customer-service/canned-response-delete.xql}
dbqd.ecommerce.www.admin.customer-service.canned-response-edit-2.update_cs_canned_response {dbqd.ecommerce.www.admin.customer-service.canned-response-edit-2.update_cs_canned_response {
      update ec_canned_responses
set one_line = :one_line, response_text = :response_text
where response_id = :response_id
      } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/customer-service/canned-response-edit-2.xql}
dbqd.ecommerce.www.admin.customer-service.canned-response-edit.get_response_info {dbqd.ecommerce.www.admin.customer-service.canned-response-edit.get_response_info {
      select one_line, response_text
from ec_canned_responses
where response_id = :response_id
      } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/customer-service/canned-response-edit.xql}
dbqd.ecommerce.www.admin.customer-service.customer-search-oracle.user_id_sql {dbqd.ecommerce.www.admin.customer-service.customer-search-oracle.user_id_sql {

      select unique o.user_id, u.first_names, u.last_name, u.email
      from ec_orders o, cc_users u
      where o.user_id=u.user_id
      and o.order_state not in ('void','in_basket')
      and sysdate - o.confirmed_date <= :days
      and :amount <= (select sum(i.price_charged) from ec_items i where i.order_id=o.order_id and (i.item_state is null or i.item_state not in ('void','received_back')))

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/ecommerce/www/admin/customer-service/customer-search-oracle.xql}
dbqd.ecommerce.www.admin.customer-service.customer-search.user_id_sql {dbqd.ecommerce.www.admin.customer-service.customer-search.user_id_sql {

      select distinct o.user_id, u.first_names, u.last_name, u.email
      from ec_orders o, cc_users u
      where o.user_id=u.user_id
      and o.order_state not in ('void','in_basket')
      and current_timestamp - o.confirmed_date <= timespan_days(:days)
      and :amount <= (select sum(i.price_charged) from ec_items i where i.order_id=o.order_id and (i.item_state is null or i.item_state not in ('void','received_back')))

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/ecommerce/www/admin/customer-service/customer-search-postgresql.xql}
dbqd.ecommerce.www.admin.customer-service.email-send-2-oracle.insert_new_cs_interaction {dbqd.ecommerce.www.admin.customer-service.email-send-2-oracle.insert_new_cs_interaction {
      insert into ec_customer_serv_interactions
(interaction_id, customer_service_rep, user_identification_id, interaction_date, interaction_originator, interaction_type)
values
(:interaction_id, :customer_service_rep, :user_identification_id, sysdate, 'rep', 'email')

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/ecommerce/www/admin/customer-service/email-send-2-oracle.xql}
dbqd.ecommerce.www.admin.customer-service.email-send-2.insert_new_cs_interaction {dbqd.ecommerce.www.admin.customer-service.email-send-2.insert_new_cs_interaction {
      insert into ec_customer_serv_interactions
(interaction_id, customer_service_rep, user_identification_id, interaction_date, interaction_originator, interaction_type)
values
(:interaction_id, :customer_service_rep, :user_identification_id, current_timestamp, 'rep', 'email')

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/ecommerce/www/admin/customer-service/email-send-2-postgresql.xql}
dbqd.ecommerce.www.admin.customer-service.email-send-2.check_csa_doubleclick {dbqd.ecommerce.www.admin.customer-service.email-send-2.check_csa_doubleclick {
      select count(*) from ec_customer_service_actions where action_id=:action_id
      } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/customer-service/email-send-2.xql}
dbqd.ecommerce.www.admin.customer-service.email-send-2.insert_new_action_into_actions {dbqd.ecommerce.www.admin.customer-service.email-send-2.insert_new_action_into_actions {
      insert into ec_customer_service_actions
(action_id, issue_id, interaction_id, action_details)
values
(:action_id, :issue_id, :interaction_id, :action_details)

      } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/customer-service/email-send-2.xql}
dbqd.ecommerce.www.admin.customer-service.email-send-oracle.get_user_information {dbqd.ecommerce.www.admin.customer-service.email-send-oracle.get_user_information {
      select u.email as user_email, id.email as id_email
      from cc_users u, ec_user_identification id
      where id.user_id = u.user_id(+)
      and id.user_identification_id=:user_identification_id
    } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/ecommerce/www/admin/customer-service/email-send-oracle.xql}
dbqd.ecommerce.www.admin.customer-service.email-send.get_user_information {dbqd.ecommerce.www.admin.customer-service.email-send.get_user_information {
      select u.email as user_email, id.email as id_email
      from ec_user_identification id
      left join cc_users u using (user_id)
      where id.user_identification_id=:user_identification_id
    } {} {} {postgresql 7.1} c:/web/openacs-4/packages/ecommerce/www/admin/customer-service/email-send-postgresql.xql}
dbqd.ecommerce.www.admin.customer-service.email-send.get_full_name {dbqd.ecommerce.www.admin.customer-service.email-send.get_full_name {
      select first_names || ' ' || last_name 
      from cc_users 
      where user_id=:customer_service_rep
    } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/customer-service/email-send.xql}
dbqd.ecommerce.www.admin.customer-service.gift-certificate-add-2-oracle.insert_new_ec_gift_cert {dbqd.ecommerce.www.admin.customer-service.gift-certificate-add-2-oracle.insert_new_ec_gift_cert {
      insert into ec_gift_certificates
(gift_certificate_id, user_id, amount, expires, issue_date, issued_by, gift_certificate_state, last_modified, last_modifying_user, modified_ip_address)
values
(ec_gift_cert_id_sequence.nextval, :user_id, :amount, :expires_to_insert, sysdate, :customer_service_rep, 'authorized', sysdate, :customer_service_rep, address)

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/ecommerce/www/admin/customer-service/gift-certificate-add-2-oracle.xql}
dbqd.ecommerce.www.admin.customer-service.gift-certificate-add-2.insert_new_ec_gift_cert {dbqd.ecommerce.www.admin.customer-service.gift-certificate-add-2.insert_new_ec_gift_cert {
      insert into ec_gift_certificates
(gift_certificate_id, user_id, amount, expires, issue_date, issued_by, gift_certificate_state, last_modified, last_modifying_user, modified_ip_address)
values
(ec_gift_cert_id_sequence.nextval, :user_id, :amount, :expires_to_insert, current_timestamp, :customer_service_rep, 'authorized', current_timestamp, :customer_service_rep, address)

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/ecommerce/www/admin/customer-service/gift-certificate-add-2-postgresql.xql}
dbqd.ecommerce.www.admin.customer-service.gift-certificate-add-oracle.get_exipre_from_Db {dbqd.ecommerce.www.admin.customer-service.gift-certificate-add-oracle.get_exipre_from_Db {
      select [ec_decode $expires "" "null" $expires] from dual
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/ecommerce/www/admin/customer-service/gift-certificate-add-oracle.xql}
dbqd.ecommerce.www.admin.customer-service.gift-certificate-add.get_exipre_from_Db {dbqd.ecommerce.www.admin.customer-service.gift-certificate-add.get_exipre_from_Db {
      select [ec_decode $expires "" "null" $expires] 
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/ecommerce/www/admin/customer-service/gift-certificate-add-postgresql.xql}
dbqd.ecommerce.www.admin.customer-service.gift-certificate-add.get_full_name {dbqd.ecommerce.www.admin.customer-service.gift-certificate-add.get_full_name {
      select first_names || ' ' || last_name from cc_users where user_id=:user_id
      } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/customer-service/gift-certificate-add.xql}
dbqd.ecommerce.www.admin.customer-service.gift-certificate-edit-oracle.update_ec_gc_info {dbqd.ecommerce.www.admin.customer-service.gift-certificate-edit-oracle.update_ec_gc_info {
      update ec_gift_certificates
set expires=sysdate, last_modified=sysdate, last_modifying_user=:customer_service_rep, 
modified_ip_address= :address
where gift_certificate_id=:gift_certificate_id
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/ecommerce/www/admin/customer-service/gift-certificate-edit-oracle.xql}
dbqd.ecommerce.www.admin.customer-service.gift-certificate-edit.update_ec_gc_info {dbqd.ecommerce.www.admin.customer-service.gift-certificate-edit.update_ec_gc_info {
      update ec_gift_certificates
set expires=current_timestamp, last_modified=current_timestamp, last_modifying_user=:customer_service_rep, 
modified_ip_address= :address
where gift_certificate_id=:gift_certificate_id
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/ecommerce/www/admin/customer-service/gift-certificate-edit-postgresql.xql}
dbqd.ecommerce.www.admin.customer-service.gift-certificate-void-2-oracle.update_void_gift_c {dbqd.ecommerce.www.admin.customer-service.gift-certificate-void-2-oracle.update_void_gift_c {
      update ec_gift_certificates set gift_certificate_state='void', voided_date=sysdate, voided_by=:customer_service_rep, reason_for_void=:reason_for_void where gift_certificate_id=:gift_certificate_id
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/ecommerce/www/admin/customer-service/gift-certificate-void-2-oracle.xql}
dbqd.ecommerce.www.admin.customer-service.gift-certificate-void-2.update_void_gift_c {dbqd.ecommerce.www.admin.customer-service.gift-certificate-void-2.update_void_gift_c {
      update ec_gift_certificates set gift_certificate_state='void', voided_date=current_timestamp, voided_by=:customer_service_rep, reason_for_void=:reason_for_void where gift_certificate_id=:gift_certificate_id
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/ecommerce/www/admin/customer-service/gift-certificate-void-2-postgresql.xql}
dbqd.ecommerce.www.admin.customer-service.gift-certificate-void-2.get_the_user_id {dbqd.ecommerce.www.admin.customer-service.gift-certificate-void-2.get_the_user_id {
      select user_id from ec_gift_certificates where gift_certificate_id=:gift_certificate_id
      } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/customer-service/gift-certificate-void-2.xql}
dbqd.ecommerce.www.admin.customer-service.gift-certificates-oracle.get_pretty_price {dbqd.ecommerce.www.admin.customer-service.gift-certificates-oracle.get_pretty_price {
      select ec_gift_certificate_balance(:user_id) from dual
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/ecommerce/www/admin/customer-service/gift-certificates-oracle.xql}
dbqd.ecommerce.www.admin.customer-service.gift-certificates.get_pretty_price {dbqd.ecommerce.www.admin.customer-service.gift-certificates.get_pretty_price {
      select ec_gift_certificate_balance(:user_id) 
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/ecommerce/www/admin/customer-service/gift-certificates-postgresql.xql}
dbqd.ecommerce.www.admin.customer-service.gift-certificates.get_customer_info {dbqd.ecommerce.www.admin.customer-service.gift-certificates.get_customer_info {
      select first_names || ' ' || last_name from cc_users where user_id=:user_id
      } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/customer-service/gift-certificates.xql}
dbqd.ecommerce.www.admin.customer-service.index.get_open_issues {dbqd.ecommerce.www.admin.customer-service.index.get_open_issues {
      select count(*) 
from ec_customer_service_issues issues, ec_user_identification id
where issues.user_identification_id = id.user_identification_id
and close_date is NULL 
and deleted_p = 'f'
and 0 = (select count(*) from ec_cs_issue_type_map map where map.issue_id=issues.issue_id)
      } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/customer-service/index.xql}
dbqd.ecommerce.www.admin.customer-service.index.get_issue_type_list {dbqd.ecommerce.www.admin.customer-service.index.get_issue_type_list {
      select picklist_item from ec_picklist_items where picklist_name='issue_type' order by sort_key
      } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/customer-service/index.xql}
dbqd.ecommerce.www.admin.customer-service.index.get_open_issues_of_type {dbqd.ecommerce.www.admin.customer-service.index.get_open_issues_of_type {
      select count(*) 
from ec_customer_service_issues issues, ec_user_identification id
where issues.user_identification_id = id.user_identification_id
and close_date is NULL 
and deleted_p = 'f'
and 1 <= (select count(*) from ec_cs_issue_type_map map where map.issue_id=issues.issue_id and map.issue_type=:issue_type)
      } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/customer-service/index.xql}
dbqd.ecommerce.www.admin.customer-service.index.get_num_open_issues_2 {dbqd.ecommerce.www.admin.customer-service.index.get_num_open_issues_2 {
      select count(*) 
from ec_customer_service_issues issues, ec_user_identification id
where issues.user_identification_id = id.user_identification_id
and close_date is NULL 
and deleted_p = 'f'
$last_bit_of_query
      } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/customer-service/index.xql}
dbqd.ecommerce.www.admin.customer-service.interaction-add-2-oracle.select_time {dbqd.ecommerce.www.admin.customer-service.interaction-add-2-oracle.select_time {
      select to_char(sysdate, 'YYYY-MM-DD HH24:MI:SS') from dual
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/ecommerce/www/admin/customer-service/interaction-add-2-oracle.xql}
dbqd.ecommerce.www.admin.customer-service.interaction-add-2.select_time {dbqd.ecommerce.www.admin.customer-service.interaction-add-2.select_time {
      select to_char(current_timestamp, 'YYYY-MM-DD HH24:MI:SS') 
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/ecommerce/www/admin/customer-service/interaction-add-2-postgresql.xql}
dbqd.ecommerce.www.admin.customer-service.interaction-add-2.get_order_id {dbqd.ecommerce.www.admin.customer-service.interaction-add-2.get_order_id {
      select order_id from ec_customer_service_issues where issue_id=:issue_id
      } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/customer-service/interaction-add-2.xql}
dbqd.ecommerce.www.admin.customer-service.interaction-add-2.get_issue_type_list {dbqd.ecommerce.www.admin.customer-service.interaction-add-2.get_issue_type_list {
      select issue_type from ec_cs_issue_type_map where issue_id=:issue_id
      } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/customer-service/interaction-add-2.xql}
dbqd.ecommerce.www.admin.customer-service.interaction-add-2.get_does_row_exist_p {dbqd.ecommerce.www.admin.customer-service.interaction-add-2.get_does_row_exist_p {
      select first_names as d_first_names, last_name as d_last_name, user_id as d_user_id from cc_users where email =lower(:email)
      } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/customer-service/interaction-add-2.xql}
dbqd.ecommerce.www.admin.customer-service.interaction-add-3-oracle.get_interaction_date {dbqd.ecommerce.www.admin.customer-service.interaction-add-3-oracle.get_interaction_date {
      select to_char(interaction_date, 'YYYY-MM-DD HH24:MI:SS') as open_date_str from ec_customer_serv_interactions where interaction_id=:interaction_id
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/ecommerce/www/admin/customer-service/interaction-add-3-oracle.xql}
dbqd.ecommerce.www.admin.customer-service.interaction-add-3-oracle.date_string_sql {dbqd.ecommerce.www.admin.customer-service.interaction-add-3-oracle.date_string_sql {

      to_date(:open_date_str,'YYYY-MM-DD HH24:MI:SS')

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/ecommerce/www/admin/customer-service/interaction-add-3-oracle.xql}
dbqd.ecommerce.www.admin.customer-service.interaction-add-3-oracle.customer_service_rep_bit_null_sql {dbqd.ecommerce.www.admin.customer-service.interaction-add-3-oracle.customer_service_rep_bit_null_sql {

      null

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/ecommerce/www/admin/customer-service/interaction-add-3-oracle.xql}
dbqd.ecommerce.www.admin.customer-service.interaction-add-3-oracle.close_date_null_sql {dbqd.ecommerce.www.admin.customer-service.interaction-add-3-oracle.close_date_null_sql {
      
      null                                                                      
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/ecommerce/www/admin/customer-service/interaction-add-3-oracle.xql}
dbqd.ecommerce.www.admin.customer-service.interaction-add-3-oracle.insert_new_ec_cs_issue {dbqd.ecommerce.www.admin.customer-service.interaction-add-3-oracle.insert_new_ec_cs_issue {
      insert into ec_customer_service_issues
      (issue_id, user_identification_id, order_id, open_date, close_date, closed_by)
      values
      (:issue_id, :uiid_to_insert, :order_id, $date_string, $close_date, $customer_service_rep_bit)

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/ecommerce/www/admin/customer-service/interaction-add-3-oracle.xql}
dbqd.ecommerce.www.admin.customer-service.interaction-add-3.get_interaction_date {dbqd.ecommerce.www.admin.customer-service.interaction-add-3.get_interaction_date {
      select to_char(interaction_date, 'YYYY-MM-DD HH24:MI:SS') as open_date_str from ec_customer_serv_interactions where interaction_id=:interaction_id
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/ecommerce/www/admin/customer-service/interaction-add-3-postgresql.xql}
dbqd.ecommerce.www.admin.customer-service.interaction-add-3.date_string_sql {dbqd.ecommerce.www.admin.customer-service.interaction-add-3.date_string_sql {

      to_timestamp(:open_date_str,'YYYY-MM-DD HH24:MI:SS')

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/ecommerce/www/admin/customer-service/interaction-add-3-postgresql.xql}
dbqd.ecommerce.www.admin.customer-service.interaction-add-3.customer_service_rep_bit_null_sql {dbqd.ecommerce.www.admin.customer-service.interaction-add-3.customer_service_rep_bit_null_sql {

      null

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/ecommerce/www/admin/customer-service/interaction-add-3-postgresql.xql}
dbqd.ecommerce.www.admin.customer-service.interaction-add-3.close_date_null_sql {dbqd.ecommerce.www.admin.customer-service.interaction-add-3.close_date_null_sql {

      null

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/ecommerce/www/admin/customer-service/interaction-add-3-postgresql.xql}
dbqd.ecommerce.www.admin.customer-service.interaction-add-3.insert_new_ec_cs_issue {dbqd.ecommerce.www.admin.customer-service.interaction-add-3.insert_new_ec_cs_issue {
      insert into ec_customer_service_issues
      (issue_id, user_identification_id, order_id, open_date, close_date, closed_by)
      values
      (:issue_id, :uiid_to_insert, :order_id, $date_string, $close_date, $customer_service_rep_bit)

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/ecommerce/www/admin/customer-service/interaction-add-3-postgresql.xql}
dbqd.ecommerce.www.admin.customer-service.interaction-add-3.get_service_action_count {dbqd.ecommerce.www.admin.customer-service.interaction-add-3.get_service_action_count {
      select count(*) from ec_customer_service_actions where action_id=:action_id
      } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/customer-service/interaction-add-3.xql}
dbqd.ecommerce.www.admin.customer-service.interaction-add-3.get_user_id_info {dbqd.ecommerce.www.admin.customer-service.interaction-add-3.get_user_id_info {
      select i.user_identification_id as c_user_identification_id, a.interaction_id
	from ec_customer_service_actions a, ec_customer_serv_interactions i
	where i.interaction_id=a.interaction_id
	and a.action_id=:action_id
      } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/customer-service/interaction-add-3.xql}
dbqd.ecommerce.www.admin.customer-service.interaction-add-3.get_user_issue_id_info {dbqd.ecommerce.www.admin.customer-service.interaction-add-3.get_user_issue_id_info {
      select u.user_id as issue_user_id, u.user_identification_id as issue_user_identification_id
    from ec_user_identification u, ec_customer_service_issues i
    where u.user_identification_id = i.user_identification_id
    and i.issue_id=:issue_id
      } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/customer-service/interaction-add-3.xql}
dbqd.ecommerce.www.admin.customer-service.interaction-add-3.get_full_name {dbqd.ecommerce.www.admin.customer-service.interaction-add-3.get_full_name {
      select first_names || ' ' || last_name from cc_users where user_id=:issue_user_id
      } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/customer-service/interaction-add-3.xql}
dbqd.ecommerce.www.admin.customer-service.interaction-add-3.get_user_id {dbqd.ecommerce.www.admin.customer-service.interaction-add-3.get_user_id {
      select user_id from ec_user_identification where user_identification_id=:c_user_identification_id
      } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/customer-service/interaction-add-3.xql}
dbqd.ecommerce.www.admin.customer-service.interaction-add-3.get_full_name {dbqd.ecommerce.www.admin.customer-service.interaction-add-3.get_full_name {
      select first_names || ' ' || last_name from cc_users where user_id=:issue_user_id
      } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/customer-service/interaction-add-3.xql}
dbqd.ecommerce.www.admin.customer-service.interaction-add-3.get_order_owner {dbqd.ecommerce.www.admin.customer-service.interaction-add-3.get_order_owner {
      select user_id as order_user_id from ec_orders where order_id=:order_id
      } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/customer-service/interaction-add-3.xql}
dbqd.ecommerce.www.admin.customer-service.interaction-add-3.get_user_name {dbqd.ecommerce.www.admin.customer-service.interaction-add-3.get_user_name {
      select first_names || ' ' || last_name from cc_users where user_id=:order_user_id
      } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/customer-service/interaction-add-3.xql}
dbqd.ecommerce.www.admin.customer-service.interaction-add-3.get_user_id_user {dbqd.ecommerce.www.admin.customer-service.interaction-add-3.get_user_id_user {
      select user_id from ec_user_identification where user_identification_id=:c_user_identification_id
      } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/customer-service/interaction-add-3.xql}
dbqd.ecommerce.www.admin.customer-service.interaction-add-3.get_uiid_to_insert {dbqd.ecommerce.www.admin.customer-service.interaction-add-3.get_uiid_to_insert {
      select user_identification_id as uiid_to_insert from ec_user_identification where user_id=:d_user_id
      } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/customer-service/interaction-add-3.xql}
dbqd.ecommerce.www.admin.customer-service.interaction-add-3.insert_new_uiid {dbqd.ecommerce.www.admin.customer-service.interaction-add-3.insert_new_uiid {
      insert into ec_user_identification
	    (user_identification_id, user_id, email, first_names, last_name, postal_code, other_id_info)
	    values
	    (:uiid_to_insert, :user_id_to_insert, :email,:first_names,:last_name,:postal_code,:other_id_info)
	    
      } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/customer-service/interaction-add-3.xql}
dbqd.ecommerce.www.admin.customer-service.interaction-add-3.insert_new_cs_interaction {dbqd.ecommerce.www.admin.customer-service.interaction-add-3.insert_new_cs_interaction {
      insert into ec_customer_serv_interactions
    (interaction_id, customer_service_rep, user_identification_id, interaction_date, interaction_originator, interaction_type)
    values
    (:interaction_id, :customer_service_rep, :uiid_to_insert, $date_string, :interaction_originator, [ec_decode $interaction_type "other" ":interaction_type_other" ":interaction_type"])
    
      } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/customer-service/interaction-add-3.xql}
dbqd.ecommerce.www.admin.customer-service.interaction-add-3.insert_into_issue_tm {dbqd.ecommerce.www.admin.customer-service.interaction-add-3.insert_into_issue_tm {
      insert into ec_cs_issue_type_map
	(issue_id, issue_type)
	values
	(:issue_id, :issue_type)
	
      } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/customer-service/interaction-add-3.xql}
dbqd.ecommerce.www.admin.customer-service.interaction-add-3.insert_new_ec_service_action {dbqd.ecommerce.www.admin.customer-service.interaction-add-3.insert_new_ec_service_action {
      insert into ec_customer_service_actions
(action_id, issue_id, interaction_id, action_details, follow_up_required)
values
(:action_id, :issue_id, :interaction_id, :action_details,:follow_up_required)

      } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/customer-service/interaction-add-3.xql}
dbqd.ecommerce.www.admin.customer-service.interaction-add-3.insert_into_cs_action_info_map {dbqd.ecommerce.www.admin.customer-service.interaction-add-3.insert_into_cs_action_info_map {
      insert into ec_cs_action_info_used_map
    (action_id, info_used)
    values
    (:action_id, :info_used)
    
      } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/customer-service/interaction-add-3.xql}
dbqd.ecommerce.www.admin.customer-service.interaction-add.get_full_name {dbqd.ecommerce.www.admin.customer-service.interaction-add.get_full_name {
      select first_names || ' ' || last_name from cc_users where user_id=:customer_service_rep
      } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/customer-service/interaction-add.xql}
dbqd.ecommerce.www.admin.customer-service.interaction-oracle.get_one_interaction_info {dbqd.ecommerce.www.admin.customer-service.interaction-oracle.get_one_interaction_info {
      select user_identification_id, customer_service_rep, to_char(interaction_date,'YYYY-MM-DD HH24:MI:SS') as full_interaction_date, interaction_originator, interaction_type, interaction_headers from ec_customer_serv_interactions where interaction_id=:interaction_id
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/ecommerce/www/admin/customer-service/interaction-oracle.xql}
dbqd.ecommerce.www.admin.customer-service.interaction.get_one_interaction_info {dbqd.ecommerce.www.admin.customer-service.interaction.get_one_interaction_info {
      select user_identification_id, customer_service_rep, to_char(interaction_date,'YYYY-MM-DD HH24:MI:SS') as full_interaction_date, interaction_originator, interaction_type, interaction_headers from ec_customer_serv_interactions where interaction_id=:interaction_id
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/ecommerce/www/admin/customer-service/interaction-postgresql.xql}
dbqd.ecommerce.www.admin.customer-service.interaction-summary.get_full_name {dbqd.ecommerce.www.admin.customer-service.interaction-summary.get_full_name {
      select first_names || ' ' || last_name from cc_users where user_id=:user_id
      } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/customer-service/interaction-summary.xql}
dbqd.ecommerce.www.admin.customer-service.interactions-oracle.get_interation_originator_list {dbqd.ecommerce.www.admin.customer-service.interactions-oracle.get_interation_originator_list {
      
      select unique interaction_originator from ec_customer_serv_interactions 

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/ecommerce/www/admin/customer-service/interactions-oracle.xql}
dbqd.ecommerce.www.admin.customer-service.interactions-oracle.get_customer_interaction_detail {dbqd.ecommerce.www.admin.customer-service.interactions-oracle.get_customer_interaction_detail {

      select i.interaction_id, i.customer_service_rep, i.interaction_date,            to_char(i.interaction_date,'YYYY-MM-DD HH24:MI:SS') as full_interaction_date, i.interaction_originator,                                                         i.interaction_type, i.user_identification_id, reps.first_names as rep_first_names,                                                                              reps.last_name as rep_last_name, customer_info.user_identification_id,
      customer_info.user_id as customer_user_id, customer_info.first_names as customer_first_names,                                                                   customer_info.last_name as customer_last_name
      from ec_customer_serv_interactions i, cc_users reps,
      (select id.user_identification_id, id.user_id, u2.first_names, u2.last_name from ec_user_identification id, cc_users u2 where id.user_id=u2.user_id(+)) customer_info                                                                           where i.customer_service_rep=reps.user_id(+)
      and i.user_identification_id=customer_info.user_identification_id
      $rep_query_bit $interaction_originator_query_bit $interaction_type_query_bit $interaction_date_query_bit                                                        order by $order_by

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/ecommerce/www/admin/customer-service/interactions-oracle.xql}
dbqd.ecommerce.www.admin.customer-service.interactions-oracle.last_24 {dbqd.ecommerce.www.admin.customer-service.interactions-oracle.last_24 {

      and sysdate-i.interaction_date <= 1

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/ecommerce/www/admin/customer-service/interactions-oracle.xql}
dbqd.ecommerce.www.admin.customer-service.interactions-oracle.last_week {dbqd.ecommerce.www.admin.customer-service.interactions-oracle.last_week {

      and sysdate-i.interaction_date <= 7

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/ecommerce/www/admin/customer-service/interactions-oracle.xql}
dbqd.ecommerce.www.admin.customer-service.interactions-oracle.last_month {dbqd.ecommerce.www.admin.customer-service.interactions-oracle.last_month {

      and months_between(sysdate,i.interaction_date) <= 1

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/ecommerce/www/admin/customer-service/interactions-oracle.xql}
dbqd.ecommerce.www.admin.customer-service.interactions.get_interation_originator_list {dbqd.ecommerce.www.admin.customer-service.interactions.get_interation_originator_list {
      
      select distinct interaction_originator from ec_customer_serv_interactions 

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/ecommerce/www/admin/customer-service/interactions-postgresql.xql}
dbqd.ecommerce.www.admin.customer-service.interactions.get_customer_interaction_detail {dbqd.ecommerce.www.admin.customer-service.interactions.get_customer_interaction_detail {

      select i.interaction_id, i.customer_service_rep, i.interaction_date,
      to_char(i.interaction_date,'YYYY-MM-DD HH24:MI:SS') as full_interaction_date, i.interaction_originator,
      i.interaction_type, i.user_identification_id, reps.first_names as rep_first_names,
      reps.last_name as rep_last_name, customer_info.user_identification_id,
      customer_info.user_id as customer_user_id, customer_info.first_names as customer_first_names,
      customer_info.last_name as customer_last_name
      from ec_customer_serv_interactions i
          LEFT JOIN cc_users reps on (i.customer_service_rep=reps.user_id),
          (select id.user_identification_id, id.user_id, u2.first_names, 
                u2.last_name 
                from ec_user_identification id
	        LEFT JOIN cc_users u2 on (id.user_id=u2.user_id)) 
            as customer_info 
            where i.user_identification_id=customer_info.user_identification_id
      $rep_query_bit $interaction_originator_query_bit $interaction_type_query_bit $interaction_date_query_bit
      order by $order_by

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/ecommerce/www/admin/customer-service/interactions-postgresql.xql}
dbqd.ecommerce.www.admin.customer-service.interactions.last_24 {dbqd.ecommerce.www.admin.customer-service.interactions.last_24 {

      and now()-i.interaction_date <= timespan_days(1)

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/ecommerce/www/admin/customer-service/interactions-postgresql.xql}
dbqd.ecommerce.www.admin.customer-service.interactions.last_week {dbqd.ecommerce.www.admin.customer-service.interactions.last_week {

      and now()-i.interaction_date <= timespan_days(7)

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/ecommerce/www/admin/customer-service/interactions-postgresql.xql}
dbqd.ecommerce.www.admin.customer-service.interactions.last_month {dbqd.ecommerce.www.admin.customer-service.interactions.last_month {

      and now()-i.interaction_date <= '1 month'::interval

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/ecommerce/www/admin/customer-service/interactions-postgresql.xql}
dbqd.ecommerce.www.admin.customer-service.interactions.get_interaction_type_list {dbqd.ecommerce.www.admin.customer-service.interactions.get_interaction_type_list {
      select picklist_item from ec_picklist_items where picklist_name='interaction_type' order by sort_key
      } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/customer-service/interactions.xql}
dbqd.ecommerce.www.admin.customer-service.interactions.get_rep_info_by_rep_sql {dbqd.ecommerce.www.admin.customer-service.interactions.get_rep_info_by_rep_sql {

      select i.customer_service_rep as rep, u.first_names as rep_first_names, 
      u.last_name as rep_last_name 
      from ec_customer_serv_interactions i, cc_users u 
      where i.customer_service_rep=u.user_id
      group by i.customer_service_rep, u.first_names, u.last_name 
      order by u.last_name, u.first_names

      } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/customer-service/interactions.xql}
dbqd.ecommerce.www.admin.customer-service.issue-edit-2.delete_from_issue_type_map {dbqd.ecommerce.www.admin.customer-service.issue-edit-2.delete_from_issue_type_map {
      delete from ec_cs_issue_type_map where issue_id=:issue_id
    } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/customer-service/issue-edit-2.xql}
dbqd.ecommerce.www.admin.customer-service.issue-edit-2.insert_into_type_map {dbqd.ecommerce.www.admin.customer-service.issue-edit-2.insert_into_type_map {
      insert into ec_cs_issue_type_map (issue_id, issue_type) values (:issue_id,:issue_type)
    } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/customer-service/issue-edit-2.xql}
dbqd.ecommerce.www.admin.customer-service.issue-edit.get_issue_types {dbqd.ecommerce.www.admin.customer-service.issue-edit.get_issue_types {
      select issue_type from ec_cs_issue_type_map where issue_id=:issue_id
      } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/customer-service/issue-edit.xql}
dbqd.ecommerce.www.admin.customer-service.issue-edit.get_user_name {dbqd.ecommerce.www.admin.customer-service.issue-edit.get_user_name {
      select first_names || ' ' || last_name from cc_users where user_id=:customer_service_rep
      } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/customer-service/issue-edit.xql}
dbqd.ecommerce.www.admin.customer-service.issue-open-or-close-2-oracle.update_service_issue {dbqd.ecommerce.www.admin.customer-service.issue-open-or-close-2-oracle.update_service_issue {
      update ec_customer_service_issues set close_date=sysdate, closed_by=:customer_service_rep where issue_id=:issue_id
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/ecommerce/www/admin/customer-service/issue-open-or-close-2-oracle.xql}
dbqd.ecommerce.www.admin.customer-service.issue-open-or-close-2.update_service_issue {dbqd.ecommerce.www.admin.customer-service.issue-open-or-close-2.update_service_issue {
      update ec_customer_service_issues set close_date=current_timestamp, closed_by=:customer_service_rep where issue_id=:issue_id
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/ecommerce/www/admin/customer-service/issue-open-or-close-2-postgresql.xql}
dbqd.ecommerce.www.admin.customer-service.issue-open-or-close-2.update_service_issue_state {dbqd.ecommerce.www.admin.customer-service.issue-open-or-close-2.update_service_issue_state {
      update ec_customer_service_issues set close_date=null where issue_id=:issue_id
      } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/customer-service/issue-open-or-close-2.xql}
dbqd.ecommerce.www.admin.customer-service.issue-open-or-close.get_user_name {dbqd.ecommerce.www.admin.customer-service.issue-open-or-close.get_user_name {
      select first_names || ' ' || last_name from cc_users where user_id=:customer_service_rep
      } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/customer-service/issue-open-or-close.xql}
dbqd.ecommerce.www.admin.customer-service.issue-oracle.get_user_info {dbqd.ecommerce.www.admin.customer-service.issue-oracle.get_user_info {
      select i.user_identification_id, i.order_id, i.closed_by, i.deleted_p, i.open_date, i.close_date, to_char(i.open_date,'YYYY-MM-DD HH24:MI:SS') as full_open_date, to_char(i.close_date,'YYYY-MM-DD HH24:MI:SS') as full_close_date, u.first_names || ' ' || u.last_name as closed_rep_name
from ec_customer_service_issues i, cc_users u
where i.closed_by=u.user_id(+)
and issue_id=:issue_id
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/ecommerce/www/admin/customer-service/issue-oracle.xql}
dbqd.ecommerce.www.admin.customer-service.issue-oracle.get_actions_assoc_w_user {dbqd.ecommerce.www.admin.customer-service.issue-oracle.get_actions_assoc_w_user {
select a.action_id, a.interaction_id, a.action_details, a.follow_up_required, i.customer_service_rep, i.interaction_date, to_char(i.interaction_date,'YYYY-MM-DD HH24:MI:SS') as full_interaction_date, i.interaction_originator, i.interaction_type, m.info_used
from ec_customer_service_actions a, ec_customer_serv_interactions i, ec_cs_action_info_used_map m
where a.interaction_id=i.interaction_id
and a.action_id=m.action_id(+)
and a.issue_id=:issue_id
order by a.action_id desc
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/ecommerce/www/admin/customer-service/issue-oracle.xql}
dbqd.ecommerce.www.admin.customer-service.issue.get_user_info {dbqd.ecommerce.www.admin.customer-service.issue.get_user_info {
select i.user_identification_id, i.order_id, i.closed_by, i.deleted_p, i.open_date, i.close_date, to_char(i.open_date,'YYYY-MM-DD HH24:MI:SS') as full_open_date, to_char(i.close_date,'YYYY-MM-DD HH24:MI:SS') as full_close_date, u.first_names || ' ' || u.last_name as closed_rep_name
from ec_customer_service_issues i
    left join cc_users u on (i.closed_by=u.user_id)
where issue_id=:issue_id
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/ecommerce/www/admin/customer-service/issue-postgresql.xql}
dbqd.ecommerce.www.admin.customer-service.issue.get_actions_assoc_w_user {dbqd.ecommerce.www.admin.customer-service.issue.get_actions_assoc_w_user { 
select a.action_id, a.interaction_id, a.action_details, a.follow_up_required, i.customer_service_rep, i.interaction_date, to_char(i.interaction_date,'YYYY-MM-DD HH24:MI:SS') as full_interaction_date, i.interaction_originator, i.interaction_type, m.info_used
from ec_customer_service_actions a
    JOIN ec_customer_serv_interactions i on (a.interaction_id=i.interaction_id)
    LEFT JOIN ec_cs_action_info_used_map m on (a.action_id=m.action_id)
where a.issue_id=:issue_id
order by a.action_id desc
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/ecommerce/www/admin/customer-service/issue-postgresql.xql}
dbqd.ecommerce.www.admin.customer-service.issue.get_issue_type_list {dbqd.ecommerce.www.admin.customer-service.issue.get_issue_type_list {
      select issue_type from ec_cs_issue_type_map where issue_id=:issue_id
      } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/customer-service/issue.xql}
dbqd.ecommerce.www.admin.customer-service.issues-oracle.last_24 {dbqd.ecommerce.www.admin.customer-service.issues-oracle.last_24 {
        and sysdate-i.open_date <= 1
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/ecommerce/www/admin/customer-service/issues-oracle.xql}
dbqd.ecommerce.www.admin.customer-service.issues-oracle.last_week {dbqd.ecommerce.www.admin.customer-service.issues-oracle.last_week {
        and sysdate-i.open_date <= 7
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/ecommerce/www/admin/customer-service/issues-oracle.xql}
dbqd.ecommerce.www.admin.customer-service.issues-oracle.last_month {dbqd.ecommerce.www.admin.customer-service.issues-oracle.last_month {
        and months_between(sysdate,i.open_date) <= 1
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/ecommerce/www/admin/customer-service/issues-oracle.xql}
dbqd.ecommerce.www.admin.customer-service.issues-oracle.uncategorized {dbqd.ecommerce.www.admin.customer-service.issues-oracle.uncategorized {

    select i.issue_id, u.user_id, u.first_names as users_first_names,
    u.last_name as users_last_name, id.user_identification_id, i.order_id,
    to_char(open_date,'YYYY-MM-DD HH24:MI:SS') as full_open_date,
    to_char(close_date,'YYYY-MM-DD HH24:MI:SS') as full_close_date
    from ec_customer_service_issues i, cc_users u, ec_user_identification id
    where i.user_identification_id = id.user_identification_id
    and id.user_id = u.user_id(+)
    and 0 = (select count(*) from ec_cs_issue_type_map m where m.issue_id=i.issue_id)
    $open_date_query_bit $status_query_bit
    order by i.issue_id desc

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/ecommerce/www/admin/customer-service/issues-oracle.xql}
dbqd.ecommerce.www.admin.customer-service.issues-oracle.all_others {dbqd.ecommerce.www.admin.customer-service.issues-oracle.all_others {

    select i.issue_id, u.user_id, u.first_names as users_first_names,
    u.last_name as users_last_name, id.user_identification_id, i.order_id,
    to_char(open_date,'YYYY-MM-DD HH24:MI:SS') as full_open_date,
    to_char(close_date,'YYYY-MM-DD HH24:MI:SS') as full_close_date,
    m.issue_type
    from ec_customer_service_issues i, cc_users u, ec_user_identification id, ec_cs_issue_type_map m
    where i.user_identification_id = id.user_identification_id
    and id.user_id = u.user_id (+)
    and i.issue_id = m.issue_id
    $open_date_query_bit $status_query_bit
    $issue_type_query_bit
    order by $order_by_sql

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/ecommerce/www/admin/customer-service/issues-oracle.xql}
dbqd.ecommerce.www.admin.customer-service.issues-oracle.default_query {dbqd.ecommerce.www.admin.customer-service.issues-oracle.default_query {

    select i.issue_id, u.user_id, u.first_names as users_first_names,
    u.last_name as users_last_name, id.user_identification_id, i.order_id,
    to_char(open_date,'YYYY-MM-DD HH24:MI:SS') as full_open_date,
    to_char(close_date,'YYYY-MM-DD HH24:MI:SS') as full_close_date,
    m.issue_type
    from ec_customer_service_issues i, cc_users u, ec_user_identification id, ec_cs_issue_type_map m
    where i.user_identification_id = id.user_identification_id
    and id.user_id = u.user_id (+)
    and i.issue_id = m.issue_id
    and m.issue_type=:view_issue_type
    $open_date_query_bit $status_query_bit
    order by $order_by_sql

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/ecommerce/www/admin/customer-service/issues-oracle.xql}
dbqd.ecommerce.www.admin.customer-service.issues.last_24 {dbqd.ecommerce.www.admin.customer-service.issues.last_24 {
	and now()-i.open_date <= timespan_days(1)
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/ecommerce/www/admin/customer-service/issues-postgresql.xql}
dbqd.ecommerce.www.admin.customer-service.issues.last_week {dbqd.ecommerce.www.admin.customer-service.issues.last_week {
	and now()-i.open_date <= timespan_days(7)
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/ecommerce/www/admin/customer-service/issues-postgresql.xql}
dbqd.ecommerce.www.admin.customer-service.issues.last_month {dbqd.ecommerce.www.admin.customer-service.issues.last_month {
	and now()-i.open_date <= '1 month'::interval
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/ecommerce/www/admin/customer-service/issues-postgresql.xql}
dbqd.ecommerce.www.admin.customer-service.issues.uncategorized {dbqd.ecommerce.www.admin.customer-service.issues.uncategorized {

    select i.issue_id, u.user_id, u.first_names as users_first_names,
    u.last_name as users_last_name, id.user_identification_id, i.order_id,
    to_char(open_date,'YYYY-MM-DD HH24:MI:SS') as full_open_date,
    to_char(close_date,'YYYY-MM-DD HH24:MI:SS') as full_close_date
    from ec_customer_service_issues i
	JOIN ec_user_identification id using (user_identification_id)
	LEFT JOIN cc_users u on (id.user_id = u.user_id)
    where 0 = (select count(*) from ec_cs_issue_type_map m where m.issue_id=i.issue_id)
    $open_date_query_bit $status_query_bit
    order by i.issue_id desc

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/ecommerce/www/admin/customer-service/issues-postgresql.xql}
dbqd.ecommerce.www.admin.customer-service.issues.all_others {dbqd.ecommerce.www.admin.customer-service.issues.all_others {

    select i.issue_id, u.user_id, u.first_names as users_first_names,
    u.last_name as users_last_name, id.user_identification_id, i.order_id,
    to_char(open_date,'YYYY-MM-DD HH24:MI:SS') as full_open_date,
    to_char(close_date,'YYYY-MM-DD HH24:MI:SS') as full_close_date,
    m.issue_type
    from ec_cs_issue_type_map m, ec_customer_service_issues i
	JOIN ec_user_identification id using (user_identification_id)
	LEFT JOIN cc_users u on (id.user_id = u.user_id)
	-- gilbertw
	-- removed this and used a normal where contraint so I dont have to
	-- worry about setting up the correct and/where statement for the
	-- dynamic queries
	-- JOIN ec_cs_issue_type_map m on (i.issue_id = m.issue_id)
    where i.issue_id = m.issue_id
    $open_date_query_bit $status_query_bit
    $issue_type_query_bit
    order by $order_by_sql

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/ecommerce/www/admin/customer-service/issues-postgresql.xql}
dbqd.ecommerce.www.admin.customer-service.issues.default_query {dbqd.ecommerce.www.admin.customer-service.issues.default_query {     

    select i.issue_id, u.user_id, u.first_names as users_first_names,
    u.last_name as users_last_name, id.user_identification_id, i.order_id,
    to_char(open_date,'YYYY-MM-DD HH24:MI:SS') as full_open_date,
    to_char(close_date,'YYYY-MM-DD HH24:MI:SS') as full_close_date,
    m.issue_type
    from ec_customer_service_issues i
	JOIN ec_user_identification id using (user_identification_id)
	LEFT JOIN cc_users u on (id.user_id = u.user_id)
	JOIN ec_cs_issue_type_map m on (i.issue_id = m.issue_id)
    where m.issue_type=:view_issue_type
    $open_date_query_bit $status_query_bit
    order by $order_by_sql

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/ecommerce/www/admin/customer-service/issues-postgresql.xql}
dbqd.ecommerce.www.admin.customer-service.issues.get_issue_type_list {dbqd.ecommerce.www.admin.customer-service.issues.get_issue_type_list {
      select picklist_item from ec_picklist_items where picklist_name='issue_type' order by sort_key
      } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/customer-service/issues.xql}
dbqd.ecommerce.www.admin.customer-service.picklist-item-add-2-oracle.insert_new_picklist_item {dbqd.ecommerce.www.admin.customer-service.picklist-item-add-2-oracle.insert_new_picklist_item {
      insert into ec_picklist_items
(picklist_item_id, picklist_item, picklist_name, sort_key, last_modified, last_modifying_user, modified_ip_address)
values
(:picklist_item_id, :picklist_item, :picklist_name, (:prev_sort_key + :next_sort_key)/2, sysdate, :user_id,:address)
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/ecommerce/www/admin/customer-service/picklist-item-add-2-oracle.xql}
dbqd.ecommerce.www.admin.customer-service.picklist-item-add-2.insert_new_picklist_item {dbqd.ecommerce.www.admin.customer-service.picklist-item-add-2.insert_new_picklist_item {
      insert into ec_picklist_items
(picklist_item_id, picklist_item, picklist_name, sort_key, last_modified, last_modifying_user, modified_ip_address)
values
(:picklist_item_id, :picklist_item, :picklist_name, ($prev_sort_key + $next_sort_key)/2, current_timestamp, :user_id,:address)
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/ecommerce/www/admin/customer-service/picklist-item-add-2-postgresql.xql}
dbqd.ecommerce.www.admin.customer-service.picklist-item-add-2.get_picklist_item_id {dbqd.ecommerce.www.admin.customer-service.picklist-item-add-2.get_picklist_item_id {
      select picklist_item_id from ec_picklist_items
where picklist_item_id=:picklist_item_id
      } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/customer-service/picklist-item-add-2.xql}
dbqd.ecommerce.www.admin.customer-service.picklist-item-add-2.get_n_conflicts {dbqd.ecommerce.www.admin.customer-service.picklist-item-add-2.get_n_conflicts {
      select count(*)
from ec_picklist_items
where picklist_name=:picklist_name
and sort_key = :sort_key
      } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/customer-service/picklist-item-add-2.xql}
dbqd.ecommerce.www.admin.customer-service.picklist-item-add.get_count_items {dbqd.ecommerce.www.admin.customer-service.picklist-item-add.get_count_items {
      select count(*)
from ec_picklist_items
where picklist_name=:picklist_name
and sort_key = :sort_key
      } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/customer-service/picklist-item-add.xql}
dbqd.ecommerce.www.admin.customer-service.picklist-item-delete-2.delete_item_from_picklist {dbqd.ecommerce.www.admin.customer-service.picklist-item-delete-2.delete_item_from_picklist {
      delete from ec_picklist_items where picklist_item_id=:picklist_item_id
      } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/customer-service/picklist-item-delete-2.xql}
dbqd.ecommerce.www.admin.customer-service.picklist-item-swap.get_item_match {dbqd.ecommerce.www.admin.customer-service.picklist-item-swap.get_item_match {
      select count(*) from ec_picklist_items where picklist_item_id=:picklist_item_id and sort_key=:sort_key
      } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/customer-service/picklist-item-swap.xql}
dbqd.ecommerce.www.admin.customer-service.picklist-item-swap.get_next_item_match {dbqd.ecommerce.www.admin.customer-service.picklist-item-swap.get_next_item_match {
      select count(*) from ec_picklist_items where picklist_item_id=:next_picklist_item_id and sort_key=:next_sort_key
      } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/customer-service/picklist-item-swap.xql}
dbqd.ecommerce.www.admin.customer-service.picklist-item-swap.update_current_item {dbqd.ecommerce.www.admin.customer-service.picklist-item-swap.update_current_item {
      update ec_picklist_items set sort_key=:next_sort_key where picklist_item_id=:picklist_item_id
      } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/customer-service/picklist-item-swap.xql}
dbqd.ecommerce.www.admin.customer-service.picklist-item-swap.update_next_item {dbqd.ecommerce.www.admin.customer-service.picklist-item-swap.update_next_item {
      update ec_picklist_items set sort_key=:sort_key where picklist_item_id=:next_picklist_item_id
      } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/customer-service/picklist-item-swap.xql}
dbqd.ecommerce.www.admin.customer-service.picklist-row-delete-oracle.telere_from_picklist_table {dbqd.ecommerce.www.admin.customer-service.picklist-row-delete-oracle.telere_from_picklist_table {
      delete from $table_name where rowid=:rowid
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/ecommerce/www/admin/customer-service/picklist-row-delete-oracle.xql}
dbqd.ecommerce.www.admin.customer-service.picklist-row-delete.telere_from_picklist_table {dbqd.ecommerce.www.admin.customer-service.picklist-row-delete.telere_from_picklist_table {
      delete from $table_name where oid as rowid=:rowid
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/ecommerce/www/admin/customer-service/picklist-row-delete-postgresql.xql}
dbqd.ecommerce.www.admin.customer-service.picklist-value-add.insert_new_picklist_value {dbqd.ecommerce.www.admin.customer-service.picklist-value-add.insert_new_picklist_value {
      insert into $table_name
($col_to_insert)
values
(:val_to_insert)

      } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/customer-service/picklist-value-add.xql}
dbqd.ecommerce.www.admin.customer-service.spam-2-oracle.bought_product {dbqd.ecommerce.www.admin.customer-service.spam-2-oracle.bought_product {
      select unique u.user_id, first_names, last_name from cc_users u, ec_items i, ec_orders o, ec_products p where i.order_id=o.order_id and o.user_id=u.user_id and i.product_id = p.product_id and p.sku=:product_sku
    } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/ecommerce/www/admin/customer-service/spam-2-oracle.xql}
dbqd.ecommerce.www.admin.customer-service.spam-2-oracle.viewed_product {dbqd.ecommerce.www.admin.customer-service.spam-2-oracle.viewed_product {
      select unique u.user_id, first_names, last_name from cc_users u, ec_user_session_info ui, ec_user_sessions us, ec_products p where us.user_session_id=ui.user_session_id and us.user_id=u.user_id and ui.product_id = p.product_id and p.sku=:viewed_product_sku
    } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/ecommerce/www/admin/customer-service/spam-2-oracle.xql}
dbqd.ecommerce.www.admin.customer-service.spam-2-oracle.viewed_category {dbqd.ecommerce.www.admin.customer-service.spam-2-oracle.viewed_category {
      select unique u.user_id, first_names, last_name from cc_users u, ec_user_session_info ui, ec_user_sessions us where us.user_session_id=ui.user_session_id and us.user_id=u.user_id and ui.category_id=:category_id
    } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/ecommerce/www/admin/customer-service/spam-2-oracle.xql}
dbqd.ecommerce.www.admin.customer-service.spam-2.bought_product {dbqd.ecommerce.www.admin.customer-service.spam-2.bought_product {
      select distinct u.user_id, first_names, last_name 
      from cc_users u, ec_items i, ec_orders o, ec_products p 
      where i.order_id=o.order_id and o.user_id=u.user_id and i.product_id = p.product_id and p.sku=:product_sku
    } {} {} {postgresql 7.1} c:/web/openacs-4/packages/ecommerce/www/admin/customer-service/spam-2-postgresql.xql}
dbqd.ecommerce.www.admin.customer-service.spam-2.viewed_product {dbqd.ecommerce.www.admin.customer-service.spam-2.viewed_product {
      select distinct u.user_id, first_names, last_name 
      from cc_users u, ec_user_session_info ui, ec_user_sessions us, ec_products p 
      where us.user_session_id=ui.user_session_id and us.user_id=u.user_id and ui.product_id = p.product_id and p.sku=:viewed_product_sku
    } {} {} {postgresql 7.1} c:/web/openacs-4/packages/ecommerce/www/admin/customer-service/spam-2-postgresql.xql}
dbqd.ecommerce.www.admin.customer-service.spam-2.viewed_category {dbqd.ecommerce.www.admin.customer-service.spam-2.viewed_category {
      select distinct u.user_id, first_names, last_name 
      from cc_users u, ec_user_session_info ui, ec_user_sessions us 
      where us.user_session_id=ui.user_session_id and us.user_id=u.user_id and ui.category_id=:category_id
    } {} {} {postgresql 7.1} c:/web/openacs-4/packages/ecommerce/www/admin/customer-service/spam-2-postgresql.xql}
dbqd.ecommerce.www.admin.customer-service.spam-2.mailing_list {dbqd.ecommerce.www.admin.customer-service.spam-2.mailing_list {
      select user_id, first_names, last_name from cc_users where user_id in ([join $user_id_list ", "])
    } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/customer-service/spam-2.xql}
dbqd.ecommerce.www.admin.customer-service.spam-2.null_categories {dbqd.ecommerce.www.admin.customer-service.spam-2.null_categories {
      (category_id is null and subcategory_id is null and subsubcategory_id is null)
    } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/customer-service/spam-2.xql}
dbqd.ecommerce.www.admin.customer-service.spam-2.null_subcategory {dbqd.ecommerce.www.admin.customer-service.spam-2.null_subcategory {
      (category_id=:mailing_list and subcategory_id is null)
    } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/customer-service/spam-2.xql}
dbqd.ecommerce.www.admin.customer-service.spam-2.null_subsubcategory {dbqd.ecommerce.www.admin.customer-service.spam-2.null_subsubcategory {
      (subcategory_id=[lindex $mailing_list 1] and subsubcategory_id is null)
    } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/customer-service/spam-2.xql}
dbqd.ecommerce.www.admin.customer-service.spam-2.subsubcategory {dbqd.ecommerce.www.admin.customer-service.spam-2.subsubcategory {
      subsubcategory_id=[lindex $mailing_list 2]
    } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/customer-service/spam-2.xql}
dbqd.ecommerce.www.admin.customer-service.spam-2.null_categories {dbqd.ecommerce.www.admin.customer-service.spam-2.null_categories {
      select users.user_id, first_names, last_name from cc_users, ec_cat_mailing_lists where users.user_id=ec_cat_mailing_lists.user_id
    } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/customer-service/spam-2.xql}
dbqd.ecommerce.www.admin.customer-service.spam-2.user_class {dbqd.ecommerce.www.admin.customer-service.spam-2.user_class {
      select u.user_id, first_names, last_name from cc_users u, ec_user_class_user_map m where m.user_class_id=:user_class_id and m.user_id=u.user_id
    } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/customer-service/spam-2.xql}
dbqd.ecommerce.www.admin.customer-service.spam-2.all_users {dbqd.ecommerce.www.admin.customer-service.spam-2.all_users {
      select user_id, first_names, last_name from cc_users
    } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/customer-service/spam-2.xql}
dbqd.ecommerce.www.admin.customer-service.spam-2.last_visit {dbqd.ecommerce.www.admin.customer-service.spam-2.last_visit {
      select user_id, first_names, last_name from cc_users where last_visit >= to_date(:start,'YYYY-MM-DD HH24:MI:SS') and last_visit <= to_date(:end,'YYYY-MM-DD HH24:MI:SS')
    } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/customer-service/spam-2.xql}
dbqd.ecommerce.www.admin.customer-service.spam-3-oracle.bought_product {dbqd.ecommerce.www.admin.customer-service.spam-3-oracle.bought_product {
      select unique u.user_id as user_id, first_names, last_name, email 
      from cc_users u, ec_items i, ec_orders o, ec_products p 
      where i.order_id = o.order_id 
      and o.user_id = u.user_id
      and i.product_id = p.product_id
      and p.sku = :product_sku
    } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/ecommerce/www/admin/customer-service/spam-3-oracle.xql}
dbqd.ecommerce.www.admin.customer-service.spam-3-oracle.viewed_product {dbqd.ecommerce.www.admin.customer-service.spam-3-oracle.viewed_product {
      select unique u.user_id as user_id, first_names, last_name, email 
      from cc_users u, ec_user_session_info ui, ec_user_sessions us, ec_products p 
      where us.user_session_id=ui.user_session_id and us.user_id=u.user_id and ui.product_id=p.product_ud and p.sku=:viewed_product_sku
    } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/ecommerce/www/admin/customer-service/spam-3-oracle.xql}
dbqd.ecommerce.www.admin.customer-service.spam-3-oracle.viewed_category {dbqd.ecommerce.www.admin.customer-service.spam-3-oracle.viewed_category {
      select unique u.user_id as user_id, first_names, last_name, email 
      from cc_users u, ec_user_session_info ui, ec_user_sessions us 
      where us.user_session_id=ui.user_session_id and us.user_id=u.user_id and ui.category_id=:category_id
    } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/ecommerce/www/admin/customer-service/spam-3-oracle.xql}
dbqd.ecommerce.www.admin.customer-service.spam-3-oracle.insert_record_for_gift_certificates {dbqd.ecommerce.www.admin.customer-service.spam-3-oracle.insert_record_for_gift_certificates {
      insert into ec_gift_certificates
      (gift_certificate_id, user_id, amount, 
      expires, 
      issue_date, issued_by, gift_certificate_state, 
      last_modified, last_modifying_user, modified_ip_address)
      values
      (ec_gift_cert_id_sequence.nextval, :user_id, :amount, 
      $expires_to_insert, 
      sysdate, :customer_service_rep, 'authorized', 
      sysdate, :customer_service_rep, '[ns_conn peeraddr]')
    } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/ecommerce/www/admin/customer-service/spam-3-oracle.xql}
dbqd.ecommerce.www.admin.customer-service.spam-3-oracle.insert_log_for_spam {dbqd.ecommerce.www.admin.customer-service.spam-3-oracle.insert_log_for_spam {
      insert into ec_spam_log
      (spam_id, spam_date, spam_text, mailing_list_category_id, 
      mailing_list_subcategory_id, mailing_list_subsubcategory_id, 
      user_class_id, product_id, 
      last_visit_start_date, last_visit_end_date)
      values
      (:spam_id, sysdate, :message, :mailing_list_category_id, 
      :mailing_list_subcategory_id, :mailing_list_subsubcategory_id, 
      :user_class_id, :product_id, 
      to_date(:start,'YYYY-MM-DD HH24:MI:SS'), 
      to_date(:end,'YYYY-MM-DD HH24:MI:SS'))
    } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/ecommerce/www/admin/customer-service/spam-3-oracle.xql}
dbqd.ecommerce.www.admin.customer-service.spam-3.bought_product {dbqd.ecommerce.www.admin.customer-service.spam-3.bought_product {
      select distinct u.user_id as user_id, first_names, last_name, email 
      from cc_users u, ec_items i, ec_orders o, ec_products p 
      where i.order_id = o.order_id 
      and o.user_id = u.user_id 
      and i.product_id = p.product_id
      and p.sku = :product_sku
    } {} {} {postgresql 7.1} c:/web/openacs-4/packages/ecommerce/www/admin/customer-service/spam-3-postgresql.xql}
dbqd.ecommerce.www.admin.customer-service.spam-3.viewed_product {dbqd.ecommerce.www.admin.customer-service.spam-3.viewed_product {
      select distinct u.user_id as user_id, first_names, last_name, email 
      from cc_users u, ec_user_session_info ui, ec_user_sessions us, ec_products p 
      where us.user_session_id=ui.user_session_id and us.user_id=u.user_id and ui.product_id=p.product_ud and p.sku=:viewed_product_sku
    } {} {} {postgresql 7.1} c:/web/openacs-4/packages/ecommerce/www/admin/customer-service/spam-3-postgresql.xql}
dbqd.ecommerce.www.admin.customer-service.spam-3.viewed_category {dbqd.ecommerce.www.admin.customer-service.spam-3.viewed_category {
      select distinct u.user_id as user_id, first_names, last_name, email 
      from cc_users u, ec_user_session_info ui, ec_user_sessions us 
      where us.user_session_id=ui.user_session_id and us.user_id=u.user_id and ui.category_id=:category_id
    } {} {} {postgresql 7.1} c:/web/openacs-4/packages/ecommerce/www/admin/customer-service/spam-3-postgresql.xql}
dbqd.ecommerce.www.admin.customer-service.spam-3.insert_record_for_gift_certificates {dbqd.ecommerce.www.admin.customer-service.spam-3.insert_record_for_gift_certificates {
      insert into ec_gift_certificates
      (gift_certificate_id, user_id, amount, 
      expires, 
      issue_date, issued_by, gift_certificate_state, 
      last_modified, last_modifying_user, modified_ip_address)
      values
      (ec_gift_cert_id_sequence.nextval, :user_id, :amount, 
      $expires_to_insert, 
      current_timestamp, :customer_service_rep, 'authorized', 
      current_timestamp, :customer_service_rep, '[ns_conn peeraddr]')
    } {} {} {postgresql 7.1} c:/web/openacs-4/packages/ecommerce/www/admin/customer-service/spam-3-postgresql.xql}
dbqd.ecommerce.www.admin.customer-service.spam-3.insert_log_for_spam {dbqd.ecommerce.www.admin.customer-service.spam-3.insert_log_for_spam {
      insert into ec_spam_log
      (spam_id, spam_date, spam_text, mailing_list_category_id, 
      mailing_list_subcategory_id, mailing_list_subsubcategory_id, 
      user_class_id, product_id, 
      last_visit_start_date, last_visit_end_date)
      values
      (:spam_id, current_timestamp, :message, :mailing_list_category_id, 
      :mailing_list_subcategory_id, :mailing_list_subsubcategory_id, 
      :user_class_id, :product_id, 
      to_date(:start,'YYYY-MM-DD HH24:MI:SS'), 
      to_date(:end,'YYYY-MM-DD HH24:MI:SS'))
    } {} {} {postgresql 7.1} c:/web/openacs-4/packages/ecommerce/www/admin/customer-service/spam-3-postgresql.xql}
dbqd.ecommerce.www.admin.customer-service.spam-3.users_list {dbqd.ecommerce.www.admin.customer-service.spam-3.users_list {
      select user_id, email from cc_users where user_id in ([join $user_id_list ", "])
    } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/customer-service/spam-3.xql}
dbqd.ecommerce.www.admin.customer-service.spam-3.null_categories {dbqd.ecommerce.www.admin.customer-service.spam-3.null_categories {
      (category_id is null and subcategory_id is null and subsubcategory_id is null)
    } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/customer-service/spam-3.xql}
dbqd.ecommerce.www.admin.customer-service.spam-3.null_subcategory {dbqd.ecommerce.www.admin.customer-service.spam-3.null_subcategory {
      (category_id=:mailing_list and subcategory_id is null)
    } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/customer-service/spam-3.xql}
dbqd.ecommerce.www.admin.customer-service.spam-3.null_subsubcategory {dbqd.ecommerce.www.admin.customer-service.spam-3.null_subsubcategory {
      (subcategory_id=[lindex $mailing_list 1] and subsubcategory_id is null)
    } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/customer-service/spam-3.xql}
dbqd.ecommerce.www.admin.customer-service.spam-3.null_subsubcategory {dbqd.ecommerce.www.admin.customer-service.spam-3.null_subsubcategory {
      (subcategory_id=[lindex $mailing_list 1] and subsubcategory_id is null)
    } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/customer-service/spam-3.xql}
dbqd.ecommerce.www.admin.customer-service.spam-3.users_email {dbqd.ecommerce.www.admin.customer-service.spam-3.users_email {
      select u.user_id as user_id, email from cc_users u, ec_cat_mailing_lists l where u.user_id=l.user_id 
    } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/customer-service/spam-3.xql}
dbqd.ecommerce.www.admin.customer-service.spam-3.user_class {dbqd.ecommerce.www.admin.customer-service.spam-3.user_class {
      select u.user_id as user_id, first_names, last_name, email from cc_users u, ec_user_class_user_map m where m.user_class_id=:user_class_id and m.user_id=u.user_id
    } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/customer-service/spam-3.xql}
dbqd.ecommerce.www.admin.customer-service.spam-3.all_users {dbqd.ecommerce.www.admin.customer-service.spam-3.all_users {
      select user_id, first_names, last_name, email from cc_users
    } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/customer-service/spam-3.xql}
dbqd.ecommerce.www.admin.customer-service.spam-3.last_visit {dbqd.ecommerce.www.admin.customer-service.spam-3.last_visit {
      select user_id, first_names, last_name, email 
      from cc_users 
      where last_visit >= to_date(:start,'YYYY-MM-DD HH24:MI:SS') and last_visit <= to_date(:end,'YYYY-MM-DD HH24:MI:SS')
    } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/customer-service/spam-3.xql}
dbqd.ecommerce.www.admin.customer-service.spam-3.get_log_entries_cnt {dbqd.ecommerce.www.admin.customer-service.spam-3.get_log_entries_cnt {
      select count(*) from ec_spam_log where spam_id=:spam_id
    } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/customer-service/spam-3.xql}
dbqd.ecommerce.www.admin.customer-service.spam-log-oracle.get_spam_people {dbqd.ecommerce.www.admin.customer-service.spam-log-oracle.get_spam_people {
      select spam_text, mailing_list_category_id, mailing_list_subcategory_id, mailing_list_subsubcategory_id, user_class_id, product_id, to_char(last_visit_start_date,'YYYY-MM-DD HH24:MI:SS') as full_last_visit_start_date, to_char(last_visit_end_date,'YYYY-MM-DD HH24:MI:SS') as full_last_visit_end_date, to_char(spam_date,'YYYY-MM-DD HH24:MI:SS') as full_spam_date 
      from ec_spam_log 
      where (spam_date >= to_date('$start 00:00:00','YYYY-MM-DD HH24:MI:SS') and spam_date <= to_date('$end 23:59:59','YYYY-MM-DD HH24:MI:SS')) 
      order by spam_date desc
    } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/ecommerce/www/admin/customer-service/spam-log-oracle.xql}
dbqd.ecommerce.www.admin.customer-service.spam-log.get_spam_people {dbqd.ecommerce.www.admin.customer-service.spam-log.get_spam_people {
      select spam_text, mailing_list_category_id, mailing_list_subcategory_id, mailing_list_subsubcategory_id, user_class_id, product_id, to_char(last_visit_start_date,'YYYY-MM-DD HH24:MI:SS') as full_last_visit_start_date, to_char(last_visit_end_date,'YYYY-MM-DD HH24:MI:SS') as full_last_visit_end_date, to_char(spam_date,'YYYY-MM-DD HH24:MI:SS') as full_spam_date 
      from ec_spam_log 
      where (spam_date >= to_date('$start 00:00:00','YYYY-MM-DD HH24:MI:SS') and spam_date <= to_timestamp('$end 23:59:59','YYYY-MM-DD HH24:MI:SS')) 
      order by spam_date desc
    } {} {} {postgresql 7.1} c:/web/openacs-4/packages/ecommerce/www/admin/customer-service/spam-log-postgresql.xql}
dbqd.ecommerce.www.admin.customer-service.spam-log.get_user_class_name {dbqd.ecommerce.www.admin.customer-service.spam-log.get_user_class_name {
      select user_class_name from ec_user_classes where user_class_id=:user_class_id
      } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/customer-service/spam-log.xql}
dbqd.ecommerce.www.admin.customer-service.spam-log.get_product_name {dbqd.ecommerce.www.admin.customer-service.spam-log.get_product_name {
      select product_name from ec_products where product_id=:product_id
      } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/customer-service/spam-log.xql}
dbqd.ecommerce.www.admin.customer-service.statistics-oracle.get_issues_type_counts_sql {dbqd.ecommerce.www.admin.customer-service.statistics-oracle.get_issues_type_counts_sql {

      select issue_type, count(*) as n_issues
from ec_customer_service_issues, ec_cs_issue_type_map
where ec_customer_service_issues.issue_id=ec_cs_issue_type_map.issue_id(+)
group by issue_type
order by decode(issue_type,null,1,0) $issue_type_decode

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/ecommerce/www/admin/customer-service/statistics-oracle.xql}
dbqd.ecommerce.www.admin.customer-service.statistics-oracle.get_info_used_query_sql {dbqd.ecommerce.www.admin.customer-service.statistics-oracle.get_info_used_query_sql {

select info_used, count(*) as n_actions
from ec_customer_service_actions, ec_cs_action_info_used_map
where ec_customer_service_actions.action_id=ec_cs_action_info_used_map.action_id(+)
group by info_used
order by decode(info_used,null,1,0) $info_used_decode

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/ecommerce/www/admin/customer-service/statistics-oracle.xql}
dbqd.ecommerce.www.admin.customer-service.statistics-oracle.get_actions_by_originator_sql {dbqd.ecommerce.www.admin.customer-service.statistics-oracle.get_actions_by_originator_sql {

      select interaction_originator, count(*) as n_interactions
      from ec_customer_serv_interactions
      group by interaction_originator
      order by decode(interaction_originator,'customer',0,'rep',1,'automatic',2)

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/ecommerce/www/admin/customer-service/statistics-oracle.xql}
dbqd.ecommerce.www.admin.customer-service.statistics-oracle.initial_issue_type_decode_bit {dbqd.ecommerce.www.admin.customer-service.statistics-oracle.initial_issue_type_decode_bit {

      , decode(issue_type,

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/ecommerce/www/admin/customer-service/statistics-oracle.xql}
dbqd.ecommerce.www.admin.customer-service.statistics-oracle.middle_issue_type_decode_bit {dbqd.ecommerce.www.admin.customer-service.statistics-oracle.middle_issue_type_decode_bit {

      '[DoubleApos $issue_type]',$issue_type_counter,

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/ecommerce/www/admin/customer-service/statistics-oracle.xql}
dbqd.ecommerce.www.admin.customer-service.statistics-oracle.end_issue_type_decode_bit {dbqd.ecommerce.www.admin.customer-service.statistics-oracle.end_issue_type_decode_bit {

      $issue_type_counter)

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/ecommerce/www/admin/customer-service/statistics-oracle.xql}
dbqd.ecommerce.www.admin.customer-service.statistics-oracle.initial_info_used_decode_bit {dbqd.ecommerce.www.admin.customer-service.statistics-oracle.initial_info_used_decode_bit {

      , decode(info_used,

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/ecommerce/www/admin/customer-service/statistics-oracle.xql}
dbqd.ecommerce.www.admin.customer-service.statistics-oracle.middle_info_used_decode_bit {dbqd.ecommerce.www.admin.customer-service.statistics-oracle.middle_info_used_decode_bit {

      '[DoubleApos $info_used]',$info_used_counter,

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/ecommerce/www/admin/customer-service/statistics-oracle.xql}
dbqd.ecommerce.www.admin.customer-service.statistics-oracle.end_info_used_decode_bit {dbqd.ecommerce.www.admin.customer-service.statistics-oracle.end_info_used_decode_bit {

      $info_used_counter)

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/ecommerce/www/admin/customer-service/statistics-oracle.xql}
dbqd.ecommerce.www.admin.customer-service.statistics.get_issues_type_counts_sql {dbqd.ecommerce.www.admin.customer-service.statistics.get_issues_type_counts_sql {
      
      select issue_type, count(*) as n_issues
      from ec_customer_service_issues
          LEFT JOIN ec_cs_issue_type_map on
          (ec_customer_service_issues.issue_id=ec_cs_issue_type_map.issue_id)
      group by issue_type
      order by case when issue_type is null then 1 else 0 end $issue_type_decode
	
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/ecommerce/www/admin/customer-service/statistics-postgresql.xql}
dbqd.ecommerce.www.admin.customer-service.statistics.get_info_used_query_sql {dbqd.ecommerce.www.admin.customer-service.statistics.get_info_used_query_sql {

      select info_used, count(*) as n_actions
      from ec_customer_service_actions
          LEFT JOIN ec_cs_action_info_used_map on
          (ec_customer_service_actions.action_id =
	  ec_cs_action_info_used_map.action_id)
      group by info_used
      order by case when info_used is null then 1 else 0 end $info_used_decode

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/ecommerce/www/admin/customer-service/statistics-postgresql.xql}
dbqd.ecommerce.www.admin.customer-service.statistics.get_actions_by_originator_sql {dbqd.ecommerce.www.admin.customer-service.statistics.get_actions_by_originator_sql {

      select interaction_originator, count(*) as n_interactions
      from ec_customer_serv_interactions
      group by interaction_originator
      order by case when interaction_originator='customer' then 0 when interaction_originator='rep' then 1 when interaction_originator='automatic' then 2 end

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/ecommerce/www/admin/customer-service/statistics-postgresql.xql}
dbqd.ecommerce.www.admin.customer-service.statistics.initial_issue_type_decode_bit {dbqd.ecommerce.www.admin.customer-service.statistics.initial_issue_type_decode_bit {

      , case 

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/ecommerce/www/admin/customer-service/statistics-postgresql.xql}
dbqd.ecommerce.www.admin.customer-service.statistics.middle_issue_type_decode_bit {dbqd.ecommerce.www.admin.customer-service.statistics.middle_issue_type_decode_bit {

      when issue_type='[DoubleApos $issue_type]' then $issue_type_counter

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/ecommerce/www/admin/customer-service/statistics-postgresql.xql}
dbqd.ecommerce.www.admin.customer-service.statistics.end_issue_type_decode_bit {dbqd.ecommerce.www.admin.customer-service.statistics.end_issue_type_decode_bit {

      else $issue_type_counter end

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/ecommerce/www/admin/customer-service/statistics-postgresql.xql}
dbqd.ecommerce.www.admin.customer-service.statistics.initial_info_used_decode_bit {dbqd.ecommerce.www.admin.customer-service.statistics.initial_info_used_decode_bit {

      , case 

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/ecommerce/www/admin/customer-service/statistics-postgresql.xql}
dbqd.ecommerce.www.admin.customer-service.statistics.middle_info_used_decode_bit {dbqd.ecommerce.www.admin.customer-service.statistics.middle_info_used_decode_bit {

      when info_used='[DoubleApos $info_used]' then $info_used_counter

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/ecommerce/www/admin/customer-service/statistics-postgresql.xql}
dbqd.ecommerce.www.admin.customer-service.statistics.end_info_used_decode_bit {dbqd.ecommerce.www.admin.customer-service.statistics.end_info_used_decode_bit {

      else $info_used_counter end

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/ecommerce/www/admin/customer-service/statistics-postgresql.xql}
dbqd.ecommerce.www.admin.customer-service.statistics.get_actions_by_cs_rep_sql {dbqd.ecommerce.www.admin.customer-service.statistics.get_actions_by_cs_rep_sql {

      select customer_service_rep, first_names, last_name, count(*) as n_interactions
      from ec_customer_serv_interactions, cc_users
      where ec_customer_serv_interactions.customer_service_rep=cc_users.user_id
      group by customer_service_rep, first_names, last_name
      order by count(*) desc

      } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/customer-service/statistics.xql}
dbqd.ecommerce.www.admin.customer-service.statistics.get_issue_type_list {dbqd.ecommerce.www.admin.customer-service.statistics.get_issue_type_list {

      select picklist_item from ec_picklist_items where picklist_name='issue_type' order by sort_key

      } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/customer-service/statistics.xql}
dbqd.ecommerce.www.admin.customer-service.statistics.get_important_info_list {dbqd.ecommerce.www.admin.customer-service.statistics.get_important_info_list {

      select picklist_item from ec_picklist_items where picklist_name='info_used' order by sort_key

      } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/customer-service/statistics.xql}
dbqd.ecommerce.www.admin.customer-service.user-identification-edit.unused {dbqd.ecommerce.www.admin.customer-service.user-identification-edit.unused {
      update ec_user_identification
set first_names=:first_names,
last_name=:last_name,
email=:email,
postal_code=:postal_code,
other_id_info=:other_id_info
where user_identification_id=:user_identification_id
      } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/customer-service/user-identification-edit.xql}
dbqd.ecommerce.www.admin.customer-service.user-identification-match-2.update_user_id_set_new_uid {dbqd.ecommerce.www.admin.customer-service.user-identification-match-2.update_user_id_set_new_uid {
      update ec_user_identification set user_id=:d_user_id where user_identification_id=:user_identification_id
      } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/customer-service/user-identification-match-2.xql}
dbqd.ecommerce.www.admin.customer-service.user-identification.get_user_id_info {dbqd.ecommerce.www.admin.customer-service.user-identification.get_user_id_info {
      select * from ec_user_identification where user_identification_id=:user_identification_id
      } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/customer-service/user-identification.xql}
dbqd.ecommerce.www.admin.customer-service.user-identification.get_row_exists_name {dbqd.ecommerce.www.admin.customer-service.user-identification.get_row_exists_name {
      select first_names as d_first_names, last_name as d_last_name, user_id as d_user_id from cc_users where email = lower(:email)
      } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/customer-service/user-identification.xql}
dbqd.ecommerce.www.admin.email-templates.add-2-oracle.unused {dbqd.ecommerce.www.admin.email-templates.add-2-oracle.unused {
      insert into ec_email_templates
(email_template_id, title, subject, message, variables, when_sent, issue_type_list, last_modified, last_modifying_user, modified_ip_address)
values
(ec_email_template_id_sequence.nextval, :title, :subject, :message, :variables, :when_sent, :issue_type, sysdate, :user_id, '[DoubleApos [ns_conn peeraddr]]')
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/ecommerce/www/admin/email-templates/add-2-oracle.xql}
dbqd.ecommerce.www.admin.email-templates.add-2.unused {dbqd.ecommerce.www.admin.email-templates.add-2.unused {
      insert into ec_email_templates
(email_template_id, title, subject, message, variables, when_sent, issue_type_list, last_modified, last_modifying_user, modified_ip_address)
values
(ec_email_template_id_sequence.nextval, :title, :subject, :message, :variables, :when_sent, :issue_type, current_timestamp, :user_id, '[DoubleApos [ns_conn peeraddr]]')
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/ecommerce/www/admin/email-templates/add-2-postgresql.xql}
dbqd.ecommerce.www.admin.email-templates.edit-2-oracle.update_ec_email_template {dbqd.ecommerce.www.admin.email-templates.edit-2-oracle.update_ec_email_template {
      
     update ec_email_templates
     set title=:title, 
         subject=:subject, 
         message=:message, 
         variables=:variables, 
         when_sent=:when_sent, 
         issue_type_list=:issue_type, 
         last_modified=sysdate, 
         last_modifying_user=:user_id, 
         modified_ip_address='[DoubleApos [ns_conn peeraddr]]'
     where email_template_id=:email_template_id
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/ecommerce/www/admin/email-templates/edit-2-oracle.xql}
dbqd.ecommerce.www.admin.email-templates.edit-2.update_ec_email_template {dbqd.ecommerce.www.admin.email-templates.edit-2.update_ec_email_template {
      
     update ec_email_templates
     set title=:title, 
         subject=:subject, 
         message=:message, 
         variables=:variables, 
         when_sent=:when_sent, 
         issue_type_list=:issue_type, 
         last_modified=current_timestamp, 
         last_modifying_user=:user_id, 
         modified_ip_address='[DoubleApos [ns_conn peeraddr]]'
     where email_template_id=:email_template_id
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/ecommerce/www/admin/email-templates/edit-2-postgresql.xql}
dbqd.ecommerce.www.admin.email-templates.edit.unused {dbqd.ecommerce.www.admin.email-templates.edit.unused {
      select * from ec_email_templates where email_template_id=:email_template_id
      } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/email-templates/edit.xql}
dbqd.ecommerce.www.admin.index.unresolved_problem_count_select {dbqd.ecommerce.www.admin.index.unresolved_problem_count_select {
      select count(*) 
      from ec_problems_log
      where resolved_date is null
    } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/index.xql}
dbqd.ecommerce.www.admin.index.num_orders_select {dbqd.ecommerce.www.admin.index.num_orders_select {
      select sum(one_if_within_n_days(confirmed_date,1)) as n_in_last_24_hours, sum(one_if_within_n_days(confirmed_date,7)) as n_in_last_7_days
      from ec_orders_reportable
    } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/index.xql}
dbqd.ecommerce.www.admin.index.num_products_select {dbqd.ecommerce.www.admin.index.num_products_select {
      select count(*) as n_products, round(avg(price),2) as avg_price 
      from ec_products_displayable
    } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/index.xql}
dbqd.ecommerce.www.admin.index.open_issues_select {dbqd.ecommerce.www.admin.index.open_issues_select {
      select count(*) 
      from ec_customer_service_issues 
      where close_date is null
    } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/index.xql}
dbqd.ecommerce.www.admin.index.non_approved_comments_select {dbqd.ecommerce.www.admin.index.non_approved_comments_select {
      select count(*) 
      from ec_product_comments 
      where approved_p is null
    } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/index.xql}
dbqd.ecommerce.www.admin.index.non_approved_users_select {dbqd.ecommerce.www.admin.index.non_approved_users_select {
      select count(*) 
      from ec_user_class_user_map
      where user_class_approved_p is null 
      or user_class_approved_p='f'
    } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/index.xql}
dbqd.ecommerce.www.admin.mailing-lists.member-add.get_user_info {dbqd.ecommerce.www.admin.mailing-lists.member-add.get_user_info {
      
select user_id, first_names, last_name, email
  from cc_users
 where $last_bit_of_query

      } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/mailing-lists/member-add.xql}
dbqd.ecommerce.www.admin.mailing-lists.member-remove-2.delete_from_mailing_lists {dbqd.ecommerce.www.admin.mailing-lists.member-remove-2.delete_from_mailing_lists {
      delete from ec_cat_mailing_lists where user_id=:user_id and subsubcategory_id=:subsubcategory_id
      } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/mailing-lists/member-remove-2.xql}
dbqd.ecommerce.www.admin.mailing-lists.member-remove-2.delete_from_mailing_lists_2 {dbqd.ecommerce.www.admin.mailing-lists.member-remove-2.delete_from_mailing_lists_2 {
      delete from ec_cat_mailing_lists where user_id=:user_id and subcategory_id=:subcategory_id and subsubcategory_id is null
      } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/mailing-lists/member-remove-2.xql}
dbqd.ecommerce.www.admin.mailing-lists.member-remove-2.delete_just_from_category {dbqd.ecommerce.www.admin.mailing-lists.member-remove-2.delete_just_from_category {
      delete from ec_cat_mailing_lists where user_id=:user_id and category_id is null
      } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/mailing-lists/member-remove-2.xql}
dbqd.ecommerce.www.admin.orders.address-add-3.user_id_select {dbqd.ecommerce.www.admin.orders.address-add-3.user_id_select {
      select user_id
      from ec_orders
      where order_id = :order_id
    } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/orders/address-add-3.xql}
dbqd.ecommerce.www.admin.orders.address-add-3.address_insert {dbqd.ecommerce.www.admin.orders.address-add-3.address_insert {
      insert into ec_addresses
      (address_id, user_id, address_type, attn, line1, line2, city, usps_abbrev, full_state_name, zip_code, country_code, phone, phone_time)
      values
      (:address_id, :user_id, 'shipping', :attn, :line1, :line2, :city, :usps_abbrev, :full_state_name, :zip_code, :country_code, :phone, :phone_time)
    } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/orders/address-add-3.xql}
dbqd.ecommerce.www.admin.orders.address-add-3.ec_orders_update {dbqd.ecommerce.www.admin.orders.address-add-3.ec_orders_update {
      update ec_orders
      set shipping_address = :address_id
      where order_id = :order_id
    } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/orders/address-add-3.xql}
dbqd.ecommerce.www.admin.orders.address-add-3.ec_orders_update {dbqd.ecommerce.www.admin.orders.address-add-3.ec_orders_update {
      update ec_creditcards
      set billing_address = :address_id
      where creditcard_id = :creditcard_id
    } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/orders/address-add-3.xql}
dbqd.ecommerce.www.admin.orders.address-add.user_name_select {dbqd.ecommerce.www.admin.orders.address-add.user_name_select {
      select first_names || ' ' || last_name from cc_users, ec_orders where ec_orders.user_id=cc_users.user_id and order_id=:order_id
      } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/orders/address-add.xql}
dbqd.ecommerce.www.admin.orders.by-order-state-and-time-oracle.last_24 {dbqd.ecommerce.www.admin.orders.by-order-state-and-time-oracle.last_24 {
      and sysdate-o.confirmed_date <= 1
    } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/ecommerce/www/admin/orders/by-order-state-and-time-oracle.xql}
dbqd.ecommerce.www.admin.orders.by-order-state-and-time-oracle.last_week {dbqd.ecommerce.www.admin.orders.by-order-state-and-time-oracle.last_week {
      and sysdate-o.confirmed_date <= 7
    } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/ecommerce/www/admin/orders/by-order-state-and-time-oracle.xql}
dbqd.ecommerce.www.admin.orders.by-order-state-and-time-oracle.last_month {dbqd.ecommerce.www.admin.orders.by-order-state-and-time-oracle.last_month {
      and months_between(sysdate,o.confirmed_date) <= 1
    } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/ecommerce/www/admin/orders/by-order-state-and-time-oracle.xql}
dbqd.ecommerce.www.admin.orders.by-order-state-and-time-oracle.all {dbqd.ecommerce.www.admin.orders.by-order-state-and-time-oracle.all {
      and 1=1
    } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/ecommerce/www/admin/orders/by-order-state-and-time-oracle.xql}
dbqd.ecommerce.www.admin.orders.by-order-state-and-time-oracle.orders_select {dbqd.ecommerce.www.admin.orders.by-order-state-and-time-oracle.orders_select {
      select o.order_id, o.confirmed_date, o.order_state, ec_total_price(o.order_id) as price_to_display, o.user_id, u.first_names, u.last_name, count(*) as n_items
      from ec_orders o, ec_items i, cc_users u
      where o.order_id=i.order_id
      and o.user_id(+)=u.user_id
      $confirmed_query_bit 
      $order_state_query_bit
      group by o.order_id, o.confirmed_date, o.order_state, ec_total_price(o.order_id), o.user_id, u.first_names, u.last_name
      order by $order_by_clause
    } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/ecommerce/www/admin/orders/by-order-state-and-time-oracle.xql}
dbqd.ecommerce.www.admin.orders.by-order-state-and-time.last_24 {dbqd.ecommerce.www.admin.orders.by-order-state-and-time.last_24 {
      where now()-o.confirmed_date <= timespan_days(1)
    } {} {} {postgresql 7.1} c:/web/openacs-4/packages/ecommerce/www/admin/orders/by-order-state-and-time-postgresql.xql}
dbqd.ecommerce.www.admin.orders.by-order-state-and-time.last_week {dbqd.ecommerce.www.admin.orders.by-order-state-and-time.last_week {
      where now()-o.confirmed_date <= timespan_days(7)
    } {} {} {postgresql 7.1} c:/web/openacs-4/packages/ecommerce/www/admin/orders/by-order-state-and-time-postgresql.xql}
dbqd.ecommerce.www.admin.orders.by-order-state-and-time.last_month {dbqd.ecommerce.www.admin.orders.by-order-state-and-time.last_month {
      where now()-o.confirmed_date <= '1 month'::interval
    } {} {} {postgresql 7.1} c:/web/openacs-4/packages/ecommerce/www/admin/orders/by-order-state-and-time-postgresql.xql}
dbqd.ecommerce.www.admin.orders.by-order-state-and-time.all {dbqd.ecommerce.www.admin.orders.by-order-state-and-time.all {
      where true
    } {} {} {postgresql 7.1} c:/web/openacs-4/packages/ecommerce/www/admin/orders/by-order-state-and-time-postgresql.xql}
dbqd.ecommerce.www.admin.orders.by-order-state-and-time.orders_select {dbqd.ecommerce.www.admin.orders.by-order-state-and-time.orders_select {
      select o.order_id, o.confirmed_date, o.order_state, ec_total_price(o.order_id) as price_to_display, o.user_id, u.first_names, u.last_name, count(*) as n_items
      from ec_orders o
      join ec_items i using (order_id)
      left join cc_users u on (o.user_id=u.user_id)
      $confirmed_query_bit 
      $order_state_query_bit
      group by o.order_id, o.confirmed_date, o.order_state, ec_total_price(o.order_id), o.user_id, u.first_names, u.last_name
      order by $order_by_clause
    } {} {} {postgresql 7.1} c:/web/openacs-4/packages/ecommerce/www/admin/orders/by-order-state-and-time-postgresql.xql}
dbqd.ecommerce.www.admin.orders.comments-edit.cs_comments_update {dbqd.ecommerce.www.admin.orders.comments-edit.cs_comments_update {
      update ec_orders set cs_comments=:cs_comments where order_id=:order_id
      } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/orders/comments-edit.xql}
dbqd.ecommerce.www.admin.orders.comments.comments_select {dbqd.ecommerce.www.admin.orders.comments.comments_select {
      select cs_comments from ec_orders where order_id=:order_id
      } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/orders/comments.xql}
dbqd.ecommerce.www.admin.orders.creditcard-add-3.user_id_select {dbqd.ecommerce.www.admin.orders.creditcard-add-3.user_id_select {
      select user_id 
      from ec_orders 
      where order_id = :order_id
    } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/orders/creditcard-add-3.xql}
dbqd.ecommerce.www.admin.orders.creditcard-add-3.creditcard_insert_select {dbqd.ecommerce.www.admin.orders.creditcard-add-3.creditcard_insert_select {
      insert into ec_creditcards
      (creditcard_id, user_id, creditcard_number, creditcard_last_four, creditcard_type, creditcard_expire, billing_address)
      values
      (:creditcard_id, :user_id, :creditcard_number, :creditcard_last_four, :creditcard_type, :creditcard_expire, :address_id)
    } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/orders/creditcard-add-3.xql}
dbqd.ecommerce.www.admin.orders.creditcard-add-3.ec_orders_update {dbqd.ecommerce.www.admin.orders.creditcard-add-3.ec_orders_update {
      update ec_orders 
      set creditcard_id = :creditcard_id 
      where order_id = :order_id
    } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/orders/creditcard-add-3.xql}
dbqd.ecommerce.www.admin.orders.creditcard-add.select_billing_address {dbqd.ecommerce.www.admin.orders.creditcard-add.select_billing_address {
      select c.billing_address, a.country_code
      from ec_creditcards c, ec_orders o, ec_addresses a
      where o.creditcard_id = c.creditcard_id
      and a.address_id = c.billing_address
      and o.order_id = :order_id
      limit 1
    } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/orders/creditcard-add.xql}
dbqd.ecommerce.www.admin.orders.fulfill-2.shipping_method_select {dbqd.ecommerce.www.admin.orders.fulfill-2.shipping_method_select {
      select shipping_method
      from ec_orders
      where order_id=:order_id
    } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/orders/fulfill-2.xql}
dbqd.ecommerce.www.admin.orders.fulfill-2.selected_items_select {dbqd.ecommerce.www.admin.orders.fulfill-2.selected_items_select {
      select i.item_id, p.product_name, p.one_line_description, p.product_id, i.price_charged, i.price_name, i.color_choice, i.size_choice, i.style_choice
      from ec_items i, ec_products p
      where i.product_id=p.product_id
      and i.order_id=:order_id
      and i.item_id in (:selected_items)
    } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/orders/fulfill-2.xql}
dbqd.ecommerce.www.admin.orders.fulfill-2.all_items_select {dbqd.ecommerce.www.admin.orders.fulfill-2.all_items_select {
      select i.item_id, p.product_name, p.one_line_description, p.product_id, i.price_charged, i.price_name, i.color_choice, i.size_choice, i.style_choice
      from ec_items i, ec_products p
      where i.product_id=p.product_id
      and i.order_id=:order_id
      and i.item_state='to_be_shipped'
    } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/orders/fulfill-2.xql}
dbqd.ecommerce.www.admin.orders.fulfill-2.get_pretty_mailing_address {dbqd.ecommerce.www.admin.orders.fulfill-2.get_pretty_mailing_address {
      select shipping_address 
      from ec_orders 
      where order_id=:order_id
    } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/orders/fulfill-2.xql}
dbqd.ecommerce.www.admin.orders.fulfill-3-oracle.total_price_of_items_select {dbqd.ecommerce.www.admin.orders.fulfill-3-oracle.total_price_of_items_select {
      select nvl(sum(price_charged),0) 
      from ec_items
      where item_id in ([join $item_id_list ", "])
    } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/ecommerce/www/admin/orders/fulfill-3-oracle.xql}
dbqd.ecommerce.www.admin.orders.fulfill-3-oracle.shipping_of_items_select {dbqd.ecommerce.www.admin.orders.fulfill-3-oracle.shipping_of_items_select {
      select nvl(sum(shipping_charged),0) 
      from ec_items
      where item_id in ([join $item_id_list ", "])
    } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/ecommerce/www/admin/orders/fulfill-3-oracle.xql}
dbqd.ecommerce.www.admin.orders.fulfill-3-oracle.total_tax_of_items_select {dbqd.ecommerce.www.admin.orders.fulfill-3-oracle.total_tax_of_items_select {
      select ec_tax(:total_price_of_items, :total_shipping_of_items, :order_id) 
      from dual
    } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/ecommerce/www/admin/orders/fulfill-3-oracle.xql}
dbqd.ecommerce.www.admin.orders.fulfill-3-oracle.insert_shipment_info {dbqd.ecommerce.www.admin.orders.fulfill-3-oracle.insert_shipment_info {
      insert into ec_shipments
      (shipment_id, order_id, shipment_date, expected_arrival_date, carrier, tracking_number, shippable_p, last_modified, last_modifying_user, modified_ip_address)
      values
      (:shipment_id, :order_id, to_date(:shipment_date, 'YYYY-MM-DD HH12:MI:SSAM'), to_date(:expected_arrival_date, 'YYYY-MM-DD HH12:MI:SSAM'), :carrier, :tracking_number, :shippable_p_tf, sysdate, :customer_service_rep, :peeraddr)
    } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/ecommerce/www/admin/orders/fulfill-3-oracle.xql}
dbqd.ecommerce.www.admin.orders.fulfill-3-oracle.shipment_cost_select {dbqd.ecommerce.www.admin.orders.fulfill-3-oracle.shipment_cost_select {
      select ec_shipment_cost(:shipment_id)
      from dual
    } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/ecommerce/www/admin/orders/fulfill-3-oracle.xql}
dbqd.ecommerce.www.admin.orders.fulfill-3-oracle.hard_goods_cost_select {dbqd.ecommerce.www.admin.orders.fulfill-3-oracle.hard_goods_cost_select {
      select nvl(sum(i.price_charged),0) - nvl(sum(i.price_refunded),0)
      from ec_items i, ec_products p
      where i.order_id = :order_id
      and i.item_state <> 'void'
      and i.product_id = p.product_id
      and p.no_shipping_avail_p = 'f'
    } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/ecommerce/www/admin/orders/fulfill-3-oracle.xql}
dbqd.ecommerce.www.admin.orders.fulfill-3-oracle.transaction_update {dbqd.ecommerce.www.admin.orders.fulfill-3-oracle.transaction_update {
      update ec_financial_transactions 
      set shipment_id=:shipment_id, to_be_captured_p='t', to_be_captured_date=sysdate 
      where transaction_id=:transaction_id
    } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/ecommerce/www/admin/orders/fulfill-3-oracle.xql}
dbqd.ecommerce.www.admin.orders.fulfill-3-oracle.transaction_insert {dbqd.ecommerce.www.admin.orders.fulfill-3-oracle.transaction_insert {
      insert into ec_financial_transactions
      (transaction_id, order_id, shipment_id, transaction_amount, transaction_type, to_be_captured_p, inserted_date, to_be_captured_date)
      values
      (:transaction_id, :order_id, :shipment_id, :shipment_cost, 'charge','t',sysdate, sysdate)
    } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/ecommerce/www/admin/orders/fulfill-3-oracle.xql}
dbqd.ecommerce.www.admin.orders.fulfill-3-oracle.problems_log_insert {dbqd.ecommerce.www.admin.orders.fulfill-3-oracle.problems_log_insert {
      insert into ec_problems_log
      (problem_id, problem_date, problem_details, order_id)
      values
      (ec_problem_id_sequence.nextval, sysdate, :problem_details, :order_id)
    } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/ecommerce/www/admin/orders/fulfill-3-oracle.xql}
dbqd.ecommerce.www.admin.orders.fulfill-3-oracle.transaction_success_update {dbqd.ecommerce.www.admin.orders.fulfill-3-oracle.transaction_success_update {
      update ec_financial_transactions
      set marked_date=sysdate 
      where transaction_id=:pgw_transaction_id
    } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/ecommerce/www/admin/orders/fulfill-3-oracle.xql}
dbqd.ecommerce.www.admin.orders.fulfill-3-oracle.problems_insert {dbqd.ecommerce.www.admin.orders.fulfill-3-oracle.problems_insert {
      insert into ec_problems_log
      (problem_id, problem_date, problem_details, order_id)
      values
      (ec_problem_id_sequence.nextval, sysdate, :problem_details, :order_id)
    } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/ecommerce/www/admin/orders/fulfill-3-oracle.xql}
dbqd.ecommerce.www.admin.orders.fulfill-3-oracle.transaction_authorized_udpate {dbqd.ecommerce.www.admin.orders.fulfill-3-oracle.transaction_authorized_udpate {
      update ec_financial_transactions 
      set authorized_date=sysdate
      where transaction_id=:pgw_transaction_id
    } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/ecommerce/www/admin/orders/fulfill-3-oracle.xql}
dbqd.ecommerce.www.admin.orders.fulfill-3-oracle.problems_insert {dbqd.ecommerce.www.admin.orders.fulfill-3-oracle.problems_insert {
      insert into ec_problems_log
      (problem_id, problem_date, problem_details, order_id)
      values
      (ec_problem_id_sequence.nextval, sysdate, :problem_details, :order_id)
    } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/ecommerce/www/admin/orders/fulfill-3-oracle.xql}
dbqd.ecommerce.www.admin.orders.fulfill-3-oracle.get_order_shipping {dbqd.ecommerce.www.admin.orders.fulfill-3-oracle.get_order_shipping {
      select nvl(shipping_charged, 0)
      from ec_orders
      where order_id = :order_id
    } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/ecommerce/www/admin/orders/fulfill-3-oracle.xql}
dbqd.ecommerce.www.admin.orders.fulfill-3-oracle.get_order_shipping_tax {dbqd.ecommerce.www.admin.orders.fulfill-3-oracle.get_order_shipping_tax {
      select ec_tax(0, :order_shipping, :order_id) from dual
    } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/ecommerce/www/admin/orders/fulfill-3-oracle.xql}
dbqd.ecommerce.www.admin.orders.fulfill-3.total_price_of_items_select {dbqd.ecommerce.www.admin.orders.fulfill-3.total_price_of_items_select {
      select coalesce(sum(price_charged),0) 
      from ec_items
      where item_id in ([join $item_id_list ", "])
    } {} {} {postgresql 7.1} c:/web/openacs-4/packages/ecommerce/www/admin/orders/fulfill-3-postgresql.xql}
dbqd.ecommerce.www.admin.orders.fulfill-3.shipping_of_items_select {dbqd.ecommerce.www.admin.orders.fulfill-3.shipping_of_items_select {
      select coalesce(sum(shipping_charged),0) 
      from ec_items
      where item_id in ([join $item_id_list ", "])
    } {} {} {postgresql 7.1} c:/web/openacs-4/packages/ecommerce/www/admin/orders/fulfill-3-postgresql.xql}
dbqd.ecommerce.www.admin.orders.fulfill-3.total_tax_of_items_select {dbqd.ecommerce.www.admin.orders.fulfill-3.total_tax_of_items_select {
      select ec_tax(:total_price_of_items, :total_shipping_of_items, :order_id) 
    } {} {} {postgresql 7.1} c:/web/openacs-4/packages/ecommerce/www/admin/orders/fulfill-3-postgresql.xql}
dbqd.ecommerce.www.admin.orders.fulfill-3.insert_shipment_info {dbqd.ecommerce.www.admin.orders.fulfill-3.insert_shipment_info {
      insert into ec_shipments
      (shipment_id, order_id, shipment_date, expected_arrival_date, carrier, tracking_number, shippable_p, last_modified, last_modifying_user, modified_ip_address)
      values
      (:shipment_id, :order_id, to_date(:shipment_date, 'YYYY-MM-DD HH12:MI:SSAM'), to_date(:expected_arrival_date, 'YYYY-MM-DD HH12:MI:SSAM'), 
       :carrier, :tracking_number, :shippable_p_tf, current_timestamp, :customer_service_rep, :peeraddr)
    } {} {} {postgresql 7.1} c:/web/openacs-4/packages/ecommerce/www/admin/orders/fulfill-3-postgresql.xql}
dbqd.ecommerce.www.admin.orders.fulfill-3.shipment_cost_select {dbqd.ecommerce.www.admin.orders.fulfill-3.shipment_cost_select {
      select ec_shipment_cost(:shipment_id) 
    } {} {} {postgresql 7.1} c:/web/openacs-4/packages/ecommerce/www/admin/orders/fulfill-3-postgresql.xql}
dbqd.ecommerce.www.admin.orders.fulfill-3.order_cost_select {dbqd.ecommerce.www.admin.orders.fulfill-3.order_cost_select {
      select coalesce(sum(i.price_charged),0) - coalesce(sum(i.price_refunded),0)
      from ec_items i, ec_products p
      where i.order_id = :order_id
      and i.item_state <> 'void'
      and i.product_id = p.product_id
      and p.no_shipping_avail_p = 'f'
    } {} {} {postgresql 7.1} c:/web/openacs-4/packages/ecommerce/www/admin/orders/fulfill-3-postgresql.xql}
dbqd.ecommerce.www.admin.orders.fulfill-3.transaction_update {dbqd.ecommerce.www.admin.orders.fulfill-3.transaction_update {
      update ec_financial_transactions 
      set shipment_id=:shipment_id, to_be_captured_p='t', to_be_captured_date=current_timestamp 
      where transaction_id=:transaction_id
    } {} {} {postgresql 7.1} c:/web/openacs-4/packages/ecommerce/www/admin/orders/fulfill-3-postgresql.xql}
dbqd.ecommerce.www.admin.orders.fulfill-3.transaction_insert {dbqd.ecommerce.www.admin.orders.fulfill-3.transaction_insert {
      insert into ec_financial_transactions
      (transaction_id, order_id, shipment_id, transaction_amount, transaction_type, to_be_captured_p, inserted_date, to_be_captured_date)
      values
      (:transaction_id, :order_id, :shipment_id, :shipment_cost, 'charge','t', current_timestamp, current_timestamp)
    } {} {} {postgresql 7.1} c:/web/openacs-4/packages/ecommerce/www/admin/orders/fulfill-3-postgresql.xql}
dbqd.ecommerce.www.admin.orders.fulfill-3.problems_log_insert {dbqd.ecommerce.www.admin.orders.fulfill-3.problems_log_insert {
      insert into ec_problems_log
      (problem_id, problem_date, problem_details, order_id)
      values
      (ec_problem_id_sequence.nextval, current_timestamp, :problem_details, :order_id)
    } {} {} {postgresql 7.1} c:/web/openacs-4/packages/ecommerce/www/admin/orders/fulfill-3-postgresql.xql}
dbqd.ecommerce.www.admin.orders.fulfill-3.transaction_success_update {dbqd.ecommerce.www.admin.orders.fulfill-3.transaction_success_update {
      update ec_financial_transactions
      set marked_date = current_timestamp
      where transaction_id=:pgw_transaction_id
    } {} {} {postgresql 7.1} c:/web/openacs-4/packages/ecommerce/www/admin/orders/fulfill-3-postgresql.xql}
dbqd.ecommerce.www.admin.orders.fulfill-3.transaction_authorized_update {dbqd.ecommerce.www.admin.orders.fulfill-3.transaction_authorized_update {
      update ec_financial_transactions
      set authorized_date=current_timestamp 
      where transaction_id=:pgw_transaction_id
    } {} {} {postgresql 7.1} c:/web/openacs-4/packages/ecommerce/www/admin/orders/fulfill-3-postgresql.xql}
dbqd.ecommerce.www.admin.orders.fulfill-3.problems_insert {dbqd.ecommerce.www.admin.orders.fulfill-3.problems_insert {
      insert into ec_problems_log
      (problem_id, problem_date, problem_details, order_id)
      values
      (ec_problem_id_sequence.nextval, current_timestamp, :problem_details, :order_id)
    } {} {} {postgresql 7.1} c:/web/openacs-4/packages/ecommerce/www/admin/orders/fulfill-3-postgresql.xql}
dbqd.ecommerce.www.admin.orders.fulfill-3.get_order_shipping {dbqd.ecommerce.www.admin.orders.fulfill-3.get_order_shipping {
      select coalesce(shipping_charged, 0)
      from ec_orders
      where order_id = :order_id
    } {} {} {postgresql 7.1} c:/web/openacs-4/packages/ecommerce/www/admin/orders/fulfill-3-postgresql.xql}
dbqd.ecommerce.www.admin.orders.fulfill-3.get_order_shipping_tax {dbqd.ecommerce.www.admin.orders.fulfill-3.get_order_shipping_tax {
      select ec_tax(0, :order_shipping, :order_id)
    } {} {} {postgresql 7.1} c:/web/openacs-4/packages/ecommerce/www/admin/orders/fulfill-3-postgresql.xql}
dbqd.ecommerce.www.admin.orders.fulfill-3.doubleclick_select {dbqd.ecommerce.www.admin.orders.fulfill-3.doubleclick_select {
      select count(*) 
      from ec_shipments
      where shipment_id=:shipment_id
    } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/orders/fulfill-3.xql}
dbqd.ecommerce.www.admin.orders.fulfill-3.shipping_method_select {dbqd.ecommerce.www.admin.orders.fulfill-3.shipping_method_select {
      select shipping_method
      from ec_orders
      where order_id=:order_id
    } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/orders/fulfill-3.xql}
dbqd.ecommerce.www.admin.orders.fulfill-3.shippable_p_select {dbqd.ecommerce.www.admin.orders.fulfill-3.shippable_p_select {
      select shipping_method 
      from ec_orders
      where order_id=:order_id
    } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/orders/fulfill-3.xql}
dbqd.ecommerce.www.admin.orders.fulfill-3.total_price_of_items_select {dbqd.ecommerce.www.admin.orders.fulfill-3.total_price_of_items_select {
      select coalesce(sum(price_charged),0) 
      from ec_items
      where item_id in ([join $item_id_list ", "])
    } {} {} {postgresql 7.1} c:/web/openacs-4/packages/ecommerce/www/admin/orders/fulfill-3-postgresql.xql}
dbqd.ecommerce.www.admin.orders.fulfill-3.n_shipments_already_select {dbqd.ecommerce.www.admin.orders.fulfill-3.n_shipments_already_select {
      select count(*) 
      from ec_shipments
      where order_id=:order_id
    } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/orders/fulfill-3.xql}
dbqd.ecommerce.www.admin.orders.fulfill-3.shipping_of_items_select {dbqd.ecommerce.www.admin.orders.fulfill-3.shipping_of_items_select {
      select coalesce(sum(shipping_charged),0) 
      from ec_items
      where item_id in ([join $item_id_list ", "])
    } {} {} {postgresql 7.1} c:/web/openacs-4/packages/ecommerce/www/admin/orders/fulfill-3-postgresql.xql}
dbqd.ecommerce.www.admin.orders.fulfill-3.item_state_update {dbqd.ecommerce.www.admin.orders.fulfill-3.item_state_update {
      update ec_items
      set item_state='shipped', shipment_id=:shipment_id
      where item_id in ([join $item_id_list ", "])
    } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/orders/fulfill-3.xql}
dbqd.ecommerce.www.admin.orders.fulfill-3.authorized_amount_select {dbqd.ecommerce.www.admin.orders.fulfill-3.authorized_amount_select {
      select transaction_amount
      from ec_financial_transactions
      where order_id = :order_id
      and to_be_captured_p is null
      and authorized_date is not null
      and transaction_type = 'charge'
    } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/orders/fulfill-3.xql}
dbqd.ecommerce.www.admin.orders.fulfill-3.transaction_id_select {dbqd.ecommerce.www.admin.orders.fulfill-3.transaction_id_select {
      select transaction_id
      from ec_financial_transactions 
      where order_id=:order_id
      and to_be_captured_p is null
      and transaction_type = 'charge'
    } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/orders/fulfill-3.xql}
dbqd.ecommerce.www.admin.orders.fulfill-3.count_remaining_items {dbqd.ecommerce.www.admin.orders.fulfill-3.count_remaining_items {
      select count(*)
      from ec_items
      where order_id = :order_id
      and item_state = 'to_be_shipped'
      and item_id not in ([join $item_id_list ", "])
    } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/orders/fulfill-3.xql}
dbqd.ecommerce.www.admin.orders.fulfill-3.transaction_failed_update {dbqd.ecommerce.www.admin.orders.fulfill-3.transaction_failed_update {
      update ec_financial_transactions 
      set failed_p='t'
      where transaction_id=:transaction_id
    } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/orders/fulfill-3.xql}
dbqd.ecommerce.www.admin.orders.fulfill.user_id_select {dbqd.ecommerce.www.admin.orders.fulfill.user_id_select {
      
select user_id
  from ec_orders
 where order_id=:order_id
      } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/orders/fulfill.xql}
dbqd.ecommerce.www.admin.orders.fulfill.shipping_method_select {dbqd.ecommerce.www.admin.orders.fulfill.shipping_method_select {
      
select shipping_method
  from ec_orders
 where order_id=:order_id

      } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/orders/fulfill.xql}
dbqd.ecommerce.www.admin.orders.fulfillment-items-needed.items_needed_select {dbqd.ecommerce.www.admin.orders.fulfillment-items-needed.items_needed_select {
      
    select p.product_id, p.product_name, p.sku, 
           i.color_choice, i.size_choice, i.style_choice,
           count(*) as quantity
      from ec_products p, ec_items_shippable i
     where p.product_id=i.product_id
  group by p.product_id, p.product_name, p.sku, 
           i.color_choice, i.size_choice, i.style_choice
  order by quantity desc

      } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/orders/fulfillment-items-needed.xql}
dbqd.ecommerce.www.admin.orders.fulfillment.orders_select {dbqd.ecommerce.www.admin.orders.fulfillment.orders_select {
      
    select o.order_id, to_char(o.confirmed_date, 'YYYY-MM-DD') as confirmed_date, o.order_state, o.shipping_method,
           u.first_names, u.last_name, u.user_id
      from ec_orders_shippable o, cc_users u
     where o.user_id=u.user_id
  order by o.shipping_method, o.order_state, o.order_id

      } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/orders/fulfillment.xql}
dbqd.ecommerce.www.admin.orders.gift-certificate-oracle.gift_certificate_select {dbqd.ecommerce.www.admin.orders.gift-certificate-oracle.gift_certificate_select {
      
select c.*, i.first_names || ' ' || i.last_name as issuer, i.user_id as issuer_user_id, p.first_names || ' ' || p.last_name as purchaser, p.user_id as purchaser_user_id, gift_certificate_amount_left(c.gift_certificate_id) as amount_left, decode(sign(sysdate-expires),1,'t',0,'t','f') as expired_p, v.first_names as voided_by_first_names, v.last_name as voided_by_last_name, o.first_names || ' ' || o.last_name as owned_by
from ec_gift_certificates c, cc_users i, cc_users p, cc_users v, cc_users o
where c.issued_by=i.user_id(+)
and c.purchased_by=p.user_id(+)
and c.voided_by=v.user_id(+)
and c.user_id=o.user_id(+)
and c.gift_certificate_id=:gift_certificate_id

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/ecommerce/www/admin/orders/gift-certificate-oracle.xql}
dbqd.ecommerce.www.admin.orders.gift-certificate.gift_certificate_select {dbqd.ecommerce.www.admin.orders.gift-certificate.gift_certificate_select {

select c.*, i.first_names || ' ' || i.last_name as issuer, i.user_id as issuer_user_id, p.first_names || ' ' || p.last_name as purchaser, p.user_id as purchaser_user_id, gift_certificate_amount_left(c.gift_certificate_id) as amount_left, case when current_timestamp-expires >= 0 then 't' else 'f' end as expired_p, v.first_names as voided_by_first_names, v.last_name as voided_by_last_name, o.first_names || ' ' || o.last_name as owned_by
from ec_gift_certificates c
    LEFT JOIN cc_users i on (c.issued_by=i.user_id)
    LEFT JOIN cc_users p on (c.purchased_by=p.user_id)
    LEFT JOIN cc_users v on (c.voided_by=v.user_id)
    LEFT JOIN cc_users o on (c.user_id=o.user_id)
where c.gift_certificate_id=:gift_certificate_id

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/ecommerce/www/admin/orders/gift-certificate-postgresql.xql}
dbqd.ecommerce.www.admin.orders.gift-certificate-void-2-oracle.gift_certificate_void {dbqd.ecommerce.www.admin.orders.gift-certificate-void-2-oracle.gift_certificate_void {
      
update ec_gift_certificates
set gift_certificate_state='void',
    voided_date=sysdate,
    voided_by=:customer_service_rep,
    reason_for_void=:reason_for_void
where gift_certificate_id=:gift_certificate_id

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/ecommerce/www/admin/orders/gift-certificate-void-2-oracle.xql}
dbqd.ecommerce.www.admin.orders.gift-certificate-void-2.gift_certificate_void {dbqd.ecommerce.www.admin.orders.gift-certificate-void-2.gift_certificate_void {
      
update ec_gift_certificates
set gift_certificate_state='void',
    voided_date=current_timestamp,
    voided_by=:customer_service_rep,
    reason_for_void=:reason_for_void
where gift_certificate_id=:gift_certificate_id

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/ecommerce/www/admin/orders/gift-certificate-void-2-postgresql.xql}
dbqd.ecommerce.www.admin.orders.gift-certificates-issued-oracle.last_24 {dbqd.ecommerce.www.admin.orders.gift-certificates-issued-oracle.last_24 {
      and sysdate-g.issue_date <= 1
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/ecommerce/www/admin/orders/gift-certificates-issued-oracle.xql}
dbqd.ecommerce.www.admin.orders.gift-certificates-issued-oracle.last_week {dbqd.ecommerce.www.admin.orders.gift-certificates-issued-oracle.last_week {
      and sysdate-g.issue_date <= 7
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/ecommerce/www/admin/orders/gift-certificates-issued-oracle.xql}
dbqd.ecommerce.www.admin.orders.gift-certificates-issued-oracle.last_month {dbqd.ecommerce.www.admin.orders.gift-certificates-issued-oracle.last_month {
      and months_between(sysdate,g.issue_date) <= 1
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/ecommerce/www/admin/orders/gift-certificates-issued-oracle.xql}
dbqd.ecommerce.www.admin.orders.gift-certificates-issued.last_24 {dbqd.ecommerce.www.admin.orders.gift-certificates-issued.last_24 {
      and now()-g.issue_date <= timespan_days(1)
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/ecommerce/www/admin/orders/gift-certificates-issued-postgresql.xql}
dbqd.ecommerce.www.admin.orders.gift-certificates-issued.last_week {dbqd.ecommerce.www.admin.orders.gift-certificates-issued.last_week {
      and now()-g.issue_date <= timespan_days(7)
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/ecommerce/www/admin/orders/gift-certificates-issued-postgresql.xql}
dbqd.ecommerce.www.admin.orders.gift-certificates-issued.last_month {dbqd.ecommerce.www.admin.orders.gift-certificates-issued.last_month {
      and now()-g.issue_date <= '1 month'::interval
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/ecommerce/www/admin/orders/gift-certificates-issued-postgresql.xql}
dbqd.ecommerce.www.admin.orders.gift-certificates-issued.ec_customer_service_reps_select {dbqd.ecommerce.www.admin.orders.gift-certificates-issued.ec_customer_service_reps_select {
      
SELECT user_id as rep, first_names as rep_first_names, last_name as rep_last_name
FROM ec_customer_service_reps
ORDER BY last_name, first_names

      } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/orders/gift-certificates-issued.xql}
dbqd.ecommerce.www.admin.orders.gift-certificates-issued.gift_certificates_select {dbqd.ecommerce.www.admin.orders.gift-certificates-issued.gift_certificates_select {
      
SELECT g.gift_certificate_id, g.issue_date, g.amount,
       g.issued_by, u.first_names, u.last_name,
       g.user_id as issued_to, r.first_names as issued_to_first_names, r.last_name as issued_to_last_name
from ec_gift_certificates_issued g, cc_users u, cc_users r
where g.issued_by=u.user_id and g.user_id=r.user_id
$issue_date_query_bit $rep_query_bit
order by $order_by_clause

      } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/orders/gift-certificates-issued.xql}
dbqd.ecommerce.www.admin.orders.gift-certificates-oracle.last_24 {dbqd.ecommerce.www.admin.orders.gift-certificates-oracle.last_24 {
      and sysdate-g.issue_date <= 1
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/ecommerce/www/admin/orders/gift-certificates-oracle.xql}
dbqd.ecommerce.www.admin.orders.gift-certificates-oracle.last_week {dbqd.ecommerce.www.admin.orders.gift-certificates-oracle.last_week {
      and sysdate-g.issue_date <= 7
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/ecommerce/www/admin/orders/gift-certificates-oracle.xql}
dbqd.ecommerce.www.admin.orders.gift-certificates-oracle.last_month {dbqd.ecommerce.www.admin.orders.gift-certificates-oracle.last_month {
      and months_between(sysdate,g.issue_date) <= 1
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/ecommerce/www/admin/orders/gift-certificates-oracle.xql}
dbqd.ecommerce.www.admin.orders.gift-certificates.last_24 {dbqd.ecommerce.www.admin.orders.gift-certificates.last_24 {
      and now()-g.issue_date <= timespan_days(1)
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/ecommerce/www/admin/orders/gift-certificates-postgresql.xql}
dbqd.ecommerce.www.admin.orders.gift-certificates.last_week {dbqd.ecommerce.www.admin.orders.gift-certificates.last_week {
      and now()-g.issue_date <= timespan_days(7)
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/ecommerce/www/admin/orders/gift-certificates-postgresql.xql}
dbqd.ecommerce.www.admin.orders.gift-certificates.last_month {dbqd.ecommerce.www.admin.orders.gift-certificates.last_month {
      and now()-g.issue_date <= '1 month'::interval
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/ecommerce/www/admin/orders/gift-certificates-postgresql.xql}
dbqd.ecommerce.www.admin.orders.gift-certificates.gift_certificates_select {dbqd.ecommerce.www.admin.orders.gift-certificates.gift_certificates_select {
      select g.gift_certificate_id, g.issue_date, g.gift_certificate_state, g.recipient_email, g.purchased_by, g.amount, u.first_names, u.last_name
from ec_gift_certificates g, cc_users u
where g.purchased_by=u.user_id
$issue_date_query_bit $gift_certificate_state_query_bit
order by $order_by_clause

      } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/orders/gift-certificates.xql}
dbqd.ecommerce.www.admin.orders.index-oracle.shipping_method_counts {dbqd.ecommerce.www.admin.orders.index-oracle.shipping_method_counts {
      select shipping_method, nvl(count(*),0) as shipping_method_count
    from ec_orders_shippable
    where shipping_method not in ('no_shipping', 'pickup')
    and shipping_method is not null
    group by shipping_method
    } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/ecommerce/www/admin/orders/index-oracle.xql}
dbqd.ecommerce.www.admin.orders.index.shipping_method_counts {dbqd.ecommerce.www.admin.orders.index.shipping_method_counts {
      select shipping_method, coalesce(count(*), 0) as shipping_method_count
    from ec_orders_shippable
    where shipping_method not in ('no_shipping', 'pickup')
    and shipping_method is not null
    group by shipping_method
    } {} {} {postgresql 7.1} c:/web/openacs-4/packages/ecommerce/www/admin/orders/index-postgresql.xql}
dbqd.ecommerce.www.admin.orders.index.recent_orders_select {dbqd.ecommerce.www.admin.orders.index.recent_orders_select {
      select 
      	sum(one_if_within_n_days(confirmed_date,1)) as n_o_in_last_24_hours,
      	sum(one_if_within_n_days(confirmed_date,7)) as n_o_in_last_7_days
      from ec_orders_reportable
    } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/orders/index.xql}
dbqd.ecommerce.www.admin.orders.index.recent_gift_certificates_purchased_select {dbqd.ecommerce.www.admin.orders.index.recent_gift_certificates_purchased_select {
      select
      	sum(one_if_within_n_days(issue_date,1)) as n_g_in_last_24_hours,
      	sum(one_if_within_n_days(issue_date,7)) as n_g_in_last_7_days
      from ec_gift_certificates_purchased
    } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/orders/index.xql}
dbqd.ecommerce.www.admin.orders.index.recent_gift_certificates_issued_select {dbqd.ecommerce.www.admin.orders.index.recent_gift_certificates_issued_select {
      select
      	sum(one_if_within_n_days(issue_date,1)) as n_gi_in_last_24_hours,
      	sum(one_if_within_n_days(issue_date,7)) as n_gi_in_last_7_days
      from ec_gift_certificates_issued
    } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/orders/index.xql}
dbqd.ecommerce.www.admin.orders.index.recent_shipments_select {dbqd.ecommerce.www.admin.orders.index.recent_shipments_select {
      select
      	sum(one_if_within_n_days(shipment_date,1)) as n_s_in_last_24_hours,
      	sum(one_if_within_n_days(shipment_date,7)) as n_s_in_last_7_days
      from ec_shipments
    } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/orders/index.xql}
dbqd.ecommerce.www.admin.orders.index.recent_refunds_select {dbqd.ecommerce.www.admin.orders.index.recent_refunds_select {
      select
      	sum(one_if_within_n_days(refund_date,1)) as n_r_in_last_24_hours,
      	sum(one_if_within_n_days(refund_date,7)) as n_r_in_last_7_days
      from ec_refunds
    } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/orders/index.xql}
dbqd.ecommerce.www.admin.orders.items-add-2.products_select {dbqd.ecommerce.www.admin.orders.items-add-2.products_select {
      select product_id, product_name from ec_products where $additional_query_part
      } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/orders/items-add-2.xql}
dbqd.ecommerce.www.admin.orders.items-add-3.user_id_select {dbqd.ecommerce.www.admin.orders.items-add-3.user_id_select {
      select user_id from ec_orders where order_id=:order_id
      } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/orders/items-add-3.xql}
dbqd.ecommerce.www.admin.orders.items-add-4-oracle.ec_items_insert {dbqd.ecommerce.www.admin.orders.items-add-4-oracle.ec_items_insert {
      insert into ec_items
  (item_id, product_id, color_choice, size_choice, style_choice, order_id, in_cart_date, item_state, price_charged, price_name)
  values
  (:item_id, :product_id, :color_choice, :size_choice, :style_choice, :order_id, sysdate, 'to_be_shipped', :price_charged, :price_name)
  
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/ecommerce/www/admin/orders/items-add-4-oracle.xql}
dbqd.ecommerce.www.admin.orders.items-add-4.ec_items_insert {dbqd.ecommerce.www.admin.orders.items-add-4.ec_items_insert {
      insert into ec_items
  (item_id, product_id, color_choice, size_choice, style_choice, order_id, in_cart_date, item_state, price_charged, price_name)
  values
  (:item_id, :product_id, :color_choice, :size_choice, :style_choice, :order_id, current_timestamp, 'to_be_shipped', :price_charged, :price_name)
  
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/ecommerce/www/admin/orders/items-add-4-postgresql.xql}
dbqd.ecommerce.www.admin.orders.items-add-4.doublclick_select {dbqd.ecommerce.www.admin.orders.items-add-4.doublclick_select {
      select count(*) from ec_items where item_id=:item_id
      } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/orders/items-add-4.xql}
dbqd.ecommerce.www.admin.orders.items-add-4.creditcard_id_select {dbqd.ecommerce.www.admin.orders.items-add-4.creditcard_id_select {
      select creditcard_id from ec_orders where order_id=:order_id
      } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/orders/items-add-4.xql}
dbqd.ecommerce.www.admin.orders.items-add-4.shipping_method_select {dbqd.ecommerce.www.admin.orders.items-add-4.shipping_method_select {
      select shipping_method from ec_orders where order_id=:order_id
      } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/orders/items-add-4.xql}
dbqd.ecommerce.www.admin.orders.items-add-4.ec_items_update {dbqd.ecommerce.www.admin.orders.items-add-4.ec_items_update {
      update ec_items set shipping_charged=:shipping_price where item_id=:item_id
      } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/orders/items-add-4.xql}
dbqd.ecommerce.www.admin.orders.items-return-2-oracle.base_shipping_select {dbqd.ecommerce.www.admin.orders.items-return-2-oracle.base_shipping_select {
      select nvl(shipping_charged,0) - nvl(shipping_refunded,0) 
      from ec_orders 
      where order_id=:order_id
    } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/ecommerce/www/admin/orders/items-return-2-oracle.xql}
dbqd.ecommerce.www.admin.orders.items-return-2-oracle.all_items_select {dbqd.ecommerce.www.admin.orders.items-return-2-oracle.all_items_select {
      select i.item_id, p.product_name, i.price_charged, nvl(i.shipping_charged,0) as shipping_charged
      from ec_items i, ec_products p
      where i.product_id=p.product_id
      and i.item_id in ([join $item_id_list ", "])
      and i.item_state in ('shipped','arrived')  
    } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/ecommerce/www/admin/orders/items-return-2-oracle.xql}
dbqd.ecommerce.www.admin.orders.items-return-2-oracle.selected_items_select {dbqd.ecommerce.www.admin.orders.items-return-2-oracle.selected_items_select {
      select i.item_id, p.product_name, i.price_charged, nvl(i.shipping_charged,0) as shipping_charged
      from ec_items i, ec_products p
      where i.product_id=p.product_id
      and i.order_id=:order_id
      and i.item_state in ('shipped','arrived')
    } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/ecommerce/www/admin/orders/items-return-2-oracle.xql}
dbqd.ecommerce.www.admin.orders.items-return-2.base_shipping_select {dbqd.ecommerce.www.admin.orders.items-return-2.base_shipping_select {
      select coalesce(shipping_charged,0) - coalesce(shipping_refunded,0) 
      from ec_orders 
      where order_id=:order_id
    } {} {} {postgresql 7.1} c:/web/openacs-4/packages/ecommerce/www/admin/orders/items-return-2-postgresql.xql}
dbqd.ecommerce.www.admin.orders.items-return-2.all_items_select {dbqd.ecommerce.www.admin.orders.items-return-2.all_items_select {
      select i.item_id, p.product_name, i.price_charged, coalesce(i.shipping_charged,0) as shipping_charged
      from ec_items i, ec_products p
      where i.product_id=p.product_id
      and i.item_id in ([join $item_id_list ", "])
      and i.item_state in ('shipped','arrived')  
    } {} {} {postgresql 7.1} c:/web/openacs-4/packages/ecommerce/www/admin/orders/items-return-2-postgresql.xql}
dbqd.ecommerce.www.admin.orders.items-return-2.selected_items_select {dbqd.ecommerce.www.admin.orders.items-return-2.selected_items_select {
      select i.item_id, p.product_name, i.price_charged, coalesce(i.shipping_charged,0) as shipping_charged
      from ec_items i, ec_products p
      where i.product_id=p.product_id
      and i.order_id=:order_id
      and i.item_state in ('shipped','arrived')
    } {} {} {postgresql 7.1} c:/web/openacs-4/packages/ecommerce/www/admin/orders/items-return-2-postgresql.xql}
dbqd.ecommerce.www.admin.orders.items-return-2.get_refund_count {dbqd.ecommerce.www.admin.orders.items-return-2.get_refund_count {
      select count(*) 
      from ec_refunds
      where refund_id=:refund_id
    } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/orders/items-return-2.xql}
dbqd.ecommerce.www.admin.orders.items-return-3-oracle.get_items_for_return {dbqd.ecommerce.www.admin.orders.items-return-3-oracle.get_items_for_return {
      select i.item_id, p.product_name, nvl(i.price_charged,0) as price_charged, nvl(i.shipping_charged,0) as shipping_charged, 
        nvl(i.price_tax_charged,0) as price_tax_charged, nvl(i.shipping_tax_charged,0) as shipping_tax_charged
      from ec_items i, ec_products p
      where i.product_id=p.product_id
      and i.item_id in ([join $item_id_list ", "])
    } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/ecommerce/www/admin/orders/items-return-3-oracle.xql}
dbqd.ecommerce.www.admin.orders.items-return-3-oracle.get_ec_tax {dbqd.ecommerce.www.admin.orders.items-return-3-oracle.get_ec_tax {
      select nvl(ec_tax(:tax_price_to_refund, 0, :order_id),0) 
      from dual
    } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/ecommerce/www/admin/orders/items-return-3-oracle.xql}
dbqd.ecommerce.www.admin.orders.items-return-3-oracle.get_it_shipping_tax_refund {dbqd.ecommerce.www.admin.orders.items-return-3-oracle.get_it_shipping_tax_refund {
      select nvl(ec_tax(0, $shipping_to_refund($item_id), :order_id),0) 
      from dual
    } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/ecommerce/www/admin/orders/items-return-3-oracle.xql}
dbqd.ecommerce.www.admin.orders.items-return-3-oracle.get_shipping_charged_values {dbqd.ecommerce.www.admin.orders.items-return-3-oracle.get_shipping_charged_values {
      select nvl(shipping_charged,0) - nvl(shipping_refunded,0) as base_shipping, nvl(shipping_tax_charged,0) - nvl(shipping_tax_refunded,0) as base_shipping_tax 
      from ec_orders 
      where order_id = :order_id
    } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/ecommerce/www/admin/orders/items-return-3-oracle.xql}
dbqd.ecommerce.www.admin.orders.items-return-3-oracle.get_base_shipping_it_refund {dbqd.ecommerce.www.admin.orders.items-return-3-oracle.get_base_shipping_it_refund {
      select nvl(ec_tax(0, :base_shipping, :order_id),0)
      from dual
    } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/ecommerce/www/admin/orders/items-return-3-oracle.xql}
dbqd.ecommerce.www.admin.orders.items-return-3-oracle.get_cash_refunded {dbqd.ecommerce.www.admin.orders.items-return-3-oracle.get_cash_refunded {
      select nvl(ec_cash_amount_to_refund(:total_amount_to_refund, :order_id),0)
      from dual
    } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/ecommerce/www/admin/orders/items-return-3-oracle.xql}
dbqd.ecommerce.www.admin.orders.items-return-3.get_items_for_return {dbqd.ecommerce.www.admin.orders.items-return-3.get_items_for_return {
      select i.item_id, p.product_name, coalesce(i.price_charged,0) as price_charged, coalesce(i.shipping_charged,0) as shipping_charged, coalesce(i.price_tax_charged,0) as price_tax_charged, 
        coalesce(i.shipping_tax_charged,0) as shipping_tax_charged
      from ec_items i, ec_products p
      where i.product_id=p.product_id
      and i.item_id in ([join $item_id_list ", "])
    } {} {} {postgresql 7.1} c:/web/openacs-4/packages/ecommerce/www/admin/orders/items-return-3-postgresql.xql}
dbqd.ecommerce.www.admin.orders.items-return-3.get_ec_tax {dbqd.ecommerce.www.admin.orders.items-return-3.get_ec_tax {
      select coalesce(ec_tax(:tax_price_to_refund, 0, :order_id),0)
    } {} {} {postgresql 7.1} c:/web/openacs-4/packages/ecommerce/www/admin/orders/items-return-3-postgresql.xql}
dbqd.ecommerce.www.admin.orders.items-return-3.get_it_shipping_tax_refund {dbqd.ecommerce.www.admin.orders.items-return-3.get_it_shipping_tax_refund {
      select coalesce(ec_tax(0, $shipping_to_refund($item_id), :order_id),0) 
    } {} {} {postgresql 7.1} c:/web/openacs-4/packages/ecommerce/www/admin/orders/items-return-3-postgresql.xql}
dbqd.ecommerce.www.admin.orders.items-return-3.get_shipping_charged_values {dbqd.ecommerce.www.admin.orders.items-return-3.get_shipping_charged_values {
      select coalesce(shipping_charged,0) - coalesce(shipping_refunded,0) as base_shipping, coalesce(shipping_tax_charged,0) - coalesce(shipping_tax_refunded,0) as base_shipping_tax 
      from ec_orders 
      where order_id = :order_id
    } {} {} {postgresql 7.1} c:/web/openacs-4/packages/ecommerce/www/admin/orders/items-return-3-postgresql.xql}
dbqd.ecommerce.www.admin.orders.items-return-3.get_base_shipping_it_refund {dbqd.ecommerce.www.admin.orders.items-return-3.get_base_shipping_it_refund {
      select coalesce(ec_tax(0, :base_shipping, :order_id),0)
    } {} {} {postgresql 7.1} c:/web/openacs-4/packages/ecommerce/www/admin/orders/items-return-3-postgresql.xql}
dbqd.ecommerce.www.admin.orders.items-return-3.get_cash_refunded {dbqd.ecommerce.www.admin.orders.items-return-3.get_cash_refunded {
      select coalesce(ec_cash_amount_to_refund(:total_amount_to_refund, :order_id),0) 
    } {} {} {postgresql 7.1} c:/web/openacs-4/packages/ecommerce/www/admin/orders/items-return-3-postgresql.xql}
dbqd.ecommerce.www.admin.orders.items-return-3.get_count_refunds {dbqd.ecommerce.www.admin.orders.items-return-3.get_count_refunds {
      select count(*) 
      from ec_refunds 
      where refund_id=:refund_id
    } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/orders/items-return-3.xql}
dbqd.ecommerce.www.admin.orders.items-return-3.get_billing_info {dbqd.ecommerce.www.admin.orders.items-return-3.get_billing_info {
      select c.creditcard_id, c.creditcard_type, c.creditcard_number, c.creditcard_last_four, 
	  c.creditcard_expire as card_expiration, 
	  p.first_names || ' ' || p.last_name as card_name,
	  a.line1 as billing_street, a.city as billing_city, a.usps_abbrev as billing_state, a.zip_code as billing_zip, a.country_code as billing_country
      from ec_orders o, ec_creditcards c, persons p, ec_addresses a 
      where o.creditcard_id = c.creditcard_id
      and c.billing_address=a.address_id 
      and c.user_id = p.person_id
      and o.order_id=:order_id
    } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/orders/items-return-3.xql}
dbqd.ecommerce.www.admin.orders.items-return-4-oracle.insert_new_ec_refund {dbqd.ecommerce.www.admin.orders.items-return-4-oracle.insert_new_ec_refund {
      insert into ec_refunds
      (refund_id, order_id, refund_amount, refund_date, refunded_by, refund_reasons)
      values
      (:refund_id, :order_id, :cash_amount_to_refund, sysdate, :customer_service_rep,:reason_for_return)
    } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/ecommerce/www/admin/orders/items-return-4-oracle.xql}
dbqd.ecommerce.www.admin.orders.items-return-4-oracle.get_tax_charged_on_item {dbqd.ecommerce.www.admin.orders.items-return-4-oracle.get_tax_charged_on_item {
      select nvl(price_tax_charged,0) as price_tax_charged, 
          nvl(shipping_tax_charged,0) as shipping_tax_charged 
      from ec_items
      where item_id=:item_id
    } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/ecommerce/www/admin/orders/items-return-4-oracle.xql}
dbqd.ecommerce.www.admin.orders.items-return-4-oracle.get_tax_charged {dbqd.ecommerce.www.admin.orders.items-return-4-oracle.get_tax_charged {
      select ec_tax(:price_bind_variable,0,:order_id) 
      from dual
    } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/ecommerce/www/admin/orders/items-return-4-oracle.xql}
dbqd.ecommerce.www.admin.orders.items-return-4-oracle.get_tax_shipping_to_refund {dbqd.ecommerce.www.admin.orders.items-return-4-oracle.get_tax_shipping_to_refund {
      select ec_tax(0,:shipping_bind_variable,:order_id) 
      from dual
    } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/ecommerce/www/admin/orders/items-return-4-oracle.xql}
dbqd.ecommerce.www.admin.orders.items-return-4-oracle.get_base_shipping_tax {dbqd.ecommerce.www.admin.orders.items-return-4-oracle.get_base_shipping_tax {
      select nvl(shipping_tax_charged,0)
      from ec_orders
      where order_id=:order_id
    } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/ecommerce/www/admin/orders/items-return-4-oracle.xql}
dbqd.ecommerce.www.admin.orders.items-return-4-oracle.get_base_tax_to_refund {dbqd.ecommerce.www.admin.orders.items-return-4-oracle.get_base_tax_to_refund {
      select ec_tax(0,:base_shipping_to_refund,:order_id) 
      from dual
    } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/ecommerce/www/admin/orders/items-return-4-oracle.xql}
dbqd.ecommerce.www.admin.orders.items-return-4-oracle.insert_new_financial_trans {dbqd.ecommerce.www.admin.orders.items-return-4-oracle.insert_new_financial_trans {
      insert into ec_financial_transactions
      (transaction_id, order_id, refund_id, creditcard_id, transaction_amount, transaction_type, inserted_date)
      values
      (:transaction_id, :order_id, :refund_id, :creditcard_id, :cash_amount_to_refund, 'refund', sysdate)
    } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/ecommerce/www/admin/orders/items-return-4-oracle.xql}
dbqd.ecommerce.www.admin.orders.items-return-4-oracle.get_gc_amount_used {dbqd.ecommerce.www.admin.orders.items-return-4-oracle.get_gc_amount_used {
      select ec_order_gift_cert_amount(:order_id) 
      from dual
    } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/ecommerce/www/admin/orders/items-return-4-oracle.xql}
dbqd.ecommerce.www.admin.orders.items-return-4-oracle.record_reinstate_problem {dbqd.ecommerce.www.admin.orders.items-return-4-oracle.record_reinstate_problem {
      insert into ec_problems_log
      (problem_id, problem_date, problem_details, order_id)
      values
      (ec_problem_id_sequence.nextval, sysdate, :errorstring, :order_id)
    } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/ecommerce/www/admin/orders/items-return-4-oracle.xql}
dbqd.ecommerce.www.admin.orders.items-return-4-oracle.reinstateable_gift_certificates {dbqd.ecommerce.www.admin.orders.items-return-4-oracle.reinstateable_gift_certificates {
      select u.gift_certificate_id, nvl(sum(u.amount_used),0) - nvl(sum(u.amount_reinstated),0) as reinstateable_amount
      from ec_gift_certificate_usage u, ec_gift_certificates c
      where u.gift_certificate_id = c.gift_certificate_id
      and u.order_id = :order_id
      group by u.gift_certificate_id, c.expires
      order by expires desc, gift_certificate_id desc
    } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/ecommerce/www/admin/orders/items-return-4-oracle.xql}
dbqd.ecommerce.www.admin.orders.items-return-4-oracle.reinstate_gift_certificate {dbqd.ecommerce.www.admin.orders.items-return-4-oracle.reinstate_gift_certificate {
      insert into ec_gift_certificate_usage
      (gift_certificate_id, order_id, amount_reinstated, reinstated_date)
      values
      (:gift_certificate_id, :order_id, least(to_number(:certificate_amount_to_reinstate), to_number(:reinstateable_amount)), sysdate)
    } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/ecommerce/www/admin/orders/items-return-4-oracle.xql}
dbqd.ecommerce.www.admin.orders.items-return-4-oracle.insert_cc_refund_problem {dbqd.ecommerce.www.admin.orders.items-return-4-oracle.insert_cc_refund_problem {
      insert into ec_problems_log
      (problem_id, problem_date, problem_details, order_id)
      values
      (ec_problem_id_sequence.nextval, sysdate, :errorstring, :order_id)
    } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/ecommerce/www/admin/orders/items-return-4-oracle.xql}
dbqd.ecommerce.www.admin.orders.items-return-4-oracle.update_ft_set_success {dbqd.ecommerce.www.admin.orders.items-return-4-oracle.update_ft_set_success {
      update ec_financial_transactions 
      set refunded_date=sysdate 
      where transaction_id=:pgw_transaction_id
    } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/ecommerce/www/admin/orders/items-return-4-oracle.xql}
dbqd.ecommerce.www.admin.orders.items-return-4-oracle.reschedule_refund {dbqd.ecommerce.www.admin.orders.items-return-4-oracle.reschedule_refund {
      update ec_financial_transactions
      set to_be_captured_date = sysdate
      where transaction_id = :transaction_id
    } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/ecommerce/www/admin/orders/items-return-4-oracle.xql}
dbqd.ecommerce.www.admin.orders.items-return-4-oracle.select_matching_charge_transaction {dbqd.ecommerce.www.admin.orders.items-return-4-oracle.select_matching_charge_transaction {
      select * from (
      select transaction_id as charged_transaction_id, marked_date 
      from ec_financial_transactions 
      where order_id = :order_id
      and transaction_type = 'charge' 
      and (transaction_amount - :refund_amount) < 0.01 
      and (transaction_amount - :refund_amount) > 0
      and refunded_amount is null
      and marked_date is not null
      and failed_p = 'f'
      order by transaction_id)
      where rownum=1
    } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/ecommerce/www/admin/orders/items-return-4-oracle.xql}
dbqd.ecommerce.www.admin.orders.items-return-4-oracle.select_unrefunded_charge_transaction {dbqd.ecommerce.www.admin.orders.items-return-4-oracle.select_unrefunded_charge_transaction {
      select * from (
      select transaction_id as charged_transaction_id, (transaction_amount - nvl(refunded_amount, 0)) as unrefunded_amount, marked_date
      from ec_financial_transactions
      where order_id = :order_id
      and transaction_type = 'charge' 
      and (transaction_amount - nvl(refunded_amount, 0)) > 0.01
      and marked_date is not null
      and failed_p = 'f'
      order by (transaction_amount - nvl(refunded_amount, 0)) desc
      )
      where rownum=1
    } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/ecommerce/www/admin/orders/items-return-4-oracle.xql}
dbqd.ecommerce.www.admin.orders.items-return-4-oracle.record_refunded_amount {dbqd.ecommerce.www.admin.orders.items-return-4-oracle.record_refunded_amount {
      update ec_financial_transactions
      set refunded_amount = nvl(refunded_amount, 0) + :refund_amount
      where transaction_id = :charged_transaction_id
    } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/ecommerce/www/admin/orders/items-return-4-oracle.xql}
dbqd.ecommerce.www.admin.orders.items-return-4-oracle.record_unrefunded_amount {dbqd.ecommerce.www.admin.orders.items-return-4-oracle.record_unrefunded_amount {
      update ec_financial_transactions
      set refunded_amount = coalesce(refunded_amount, 0) + :unrefunded_amount
      where transaction_id = :charged_transaction_id
    } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/ecommerce/www/admin/orders/items-return-4-oracle.xql}
dbqd.ecommerce.www.admin.orders.items-return-4-oracle.insert_refund_transaction {dbqd.ecommerce.www.admin.orders.items-return-4-oracle.insert_refund_transaction {
      insert into ec_financial_transactions
      (transaction_id, refunded_transaction_id, order_id, refund_id, creditcard_id, transaction_amount, transaction_type, inserted_date, to_be_captured_date)
      values
      (:refund_transaction_id, :charged_transaction_id, :order_id, :refund_id, :creditcard_id, :refund_amount, 'refund', sysdate, to_date(:scheduled_hour,'YYYY-MM-DD HH12:MI:SSAM'))
    } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/ecommerce/www/admin/orders/items-return-4-oracle.xql}
dbqd.ecommerce.www.admin.orders.items-return-4-oracle.insert_unrefund_transaction {dbqd.ecommerce.www.admin.orders.items-return-4-oracle.insert_unrefund_transaction {
      insert into ec_financial_transactions
      (transaction_id, refunded_transaction_id, order_id, refund_id, creditcard_id, transaction_amount, transaction_type, inserted_date, to_be_captured_date)
      values
      (:refund_transaction_id, :charged_transaction_id, :order_id, :refund_id, :creditcard_id, :unrefunded_amount, 'refund', sysdate, to_date(:scheduled_hour,'YYYY-MM-DD HH12:MI:SSAM'))
    } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/ecommerce/www/admin/orders/items-return-4-oracle.xql}
dbqd.ecommerce.www.admin.orders.items-return-4.insert_new_ec_refund {dbqd.ecommerce.www.admin.orders.items-return-4.insert_new_ec_refund {
      insert into ec_refunds
      (refund_id, order_id, refund_amount, refund_date, refunded_by, refund_reasons)
      values
      (:refund_id, :order_id, :cash_amount_to_refund, current_timestamp, :customer_service_rep,:reason_for_return)
    } {} {} {postgresql 7.1} c:/web/openacs-4/packages/ecommerce/www/admin/orders/items-return-4-postgresql.xql}
dbqd.ecommerce.www.admin.orders.items-return-4.get_tax_charged_on_item {dbqd.ecommerce.www.admin.orders.items-return-4.get_tax_charged_on_item {
      select coalesce(price_tax_charged,0) as price_tax_charged, 
          coalesce(shipping_tax_charged,0) as shipping_tax_charged 
      from ec_items
      where item_id=:item_id
    } {} {} {postgresql 7.1} c:/web/openacs-4/packages/ecommerce/www/admin/orders/items-return-4-postgresql.xql}
dbqd.ecommerce.www.admin.orders.items-return-4.get_tax_charged {dbqd.ecommerce.www.admin.orders.items-return-4.get_tax_charged {
      select ec_tax(:price_bind_variable, 0, :order_id) 
    } {} {} {postgresql 7.1} c:/web/openacs-4/packages/ecommerce/www/admin/orders/items-return-4-postgresql.xql}
dbqd.ecommerce.www.admin.orders.items-return-4.get_base_shipping_tax {dbqd.ecommerce.www.admin.orders.items-return-4.get_base_shipping_tax {
      select coalesce(shipping_tax_charged,0) 
      from ec_orders 
      where order_id=:order_id
    } {} {} {postgresql 7.1} c:/web/openacs-4/packages/ecommerce/www/admin/orders/items-return-4-postgresql.xql}
dbqd.ecommerce.www.admin.orders.items-return-4.get_tax_shipping_to_refund {dbqd.ecommerce.www.admin.orders.items-return-4.get_tax_shipping_to_refund {
      select ec_tax(0,:shipping_bind_variable,:order_id) 
    } {} {} {postgresql 7.1} c:/web/openacs-4/packages/ecommerce/www/admin/orders/items-return-4-postgresql.xql}
dbqd.ecommerce.www.admin.orders.items-return-4.get_base_tax_to_refund {dbqd.ecommerce.www.admin.orders.items-return-4.get_base_tax_to_refund {
      select ec_tax(0,:base_shipping_to_refund,:order_id) 
    } {} {} {postgresql 7.1} c:/web/openacs-4/packages/ecommerce/www/admin/orders/items-return-4-postgresql.xql}
dbqd.ecommerce.www.admin.orders.items-return-4.select_matching_charge_transaction {dbqd.ecommerce.www.admin.orders.items-return-4.select_matching_charge_transaction {
      select transaction_id as charged_transaction_id, marked_date 
      from ec_financial_transactions 
      where order_id = :order_id
      and transaction_type = 'charge' 
      and (transaction_amount - :refund_amount) < 0.01::numeric 
      and (transaction_amount - :refund_amount) > 0::numeric 
      and refunded_amount is null
      and marked_date is not null
      and failed_p = 'f'
      order by transaction_id
      limit 1
    } {} {} {postgresql 7.1} c:/web/openacs-4/packages/ecommerce/www/admin/orders/items-return-4-postgresql.xql}
dbqd.ecommerce.www.admin.orders.items-return-4.insert_refund_transaction {dbqd.ecommerce.www.admin.orders.items-return-4.insert_refund_transaction {
      insert into ec_financial_transactions
      (transaction_id, refunded_transaction_id, order_id, refund_id, creditcard_id, transaction_amount, transaction_type, inserted_date, to_be_captured_date)
      values
      (:refund_transaction_id, :charged_transaction_id, :order_id, :refund_id, :creditcard_id, :refund_amount, 'refund', current_timestamp, :scheduled_hour)
    } {} {} {postgresql 7.1} c:/web/openacs-4/packages/ecommerce/www/admin/orders/items-return-4-postgresql.xql}
dbqd.ecommerce.www.admin.orders.items-return-4.record_refunded_amount {dbqd.ecommerce.www.admin.orders.items-return-4.record_refunded_amount {
      update ec_financial_transactions
      set refunded_amount = coalesce(refunded_amount, 0) + :refund_amount
      where transaction_id = :charged_transaction_id
    } {} {} {postgresql 7.1} c:/web/openacs-4/packages/ecommerce/www/admin/orders/items-return-4-postgresql.xql}
dbqd.ecommerce.www.admin.orders.items-return-4.select_unrefunded_charge_transaction {dbqd.ecommerce.www.admin.orders.items-return-4.select_unrefunded_charge_transaction {
      select transaction_id as charged_transaction_id, (transaction_amount - coalesce(refunded_amount, 0)) as unrefunded_amount, marked_date
      from ec_financial_transactions
      where order_id = :order_id
      and transaction_type = 'charge' 
      and (transaction_amount - coalesce(refunded_amount, 0)) > 0.01::numeric
      and marked_date is not null
      and failed_p = 'f'
      order by (transaction_amount - coalesce(refunded_amount, 0)) desc
      limit 1
    } {} {} {postgresql 7.1} c:/web/openacs-4/packages/ecommerce/www/admin/orders/items-return-4-postgresql.xql}
dbqd.ecommerce.www.admin.orders.items-return-4.insert_unrefund_transaction {dbqd.ecommerce.www.admin.orders.items-return-4.insert_unrefund_transaction {
      insert into ec_financial_transactions
      (transaction_id, refunded_transaction_id, order_id, refund_id, creditcard_id, transaction_amount, transaction_type, inserted_date, to_be_captured_date)
      values
      (:refund_transaction_id, :charged_transaction_id, :order_id, :refund_id, :creditcard_id, :unrefunded_amount, 'refund', current_timestamp, :scheduled_hour)
    } {} {} {postgresql 7.1} c:/web/openacs-4/packages/ecommerce/www/admin/orders/items-return-4-postgresql.xql}
dbqd.ecommerce.www.admin.orders.items-return-4.record_unrefunded_amount {dbqd.ecommerce.www.admin.orders.items-return-4.record_unrefunded_amount {
      update ec_financial_transactions
      set refunded_amount = coalesce(refunded_amount, 0) + :unrefunded_amount
      where transaction_id = :charged_transaction_id
    } {} {} {postgresql 7.1} c:/web/openacs-4/packages/ecommerce/www/admin/orders/items-return-4-postgresql.xql}
dbqd.ecommerce.www.admin.orders.items-return-4.get_gc_amount_used {dbqd.ecommerce.www.admin.orders.items-return-4.get_gc_amount_used {
      select ec_order_gift_cert_amount(:order_id) 
    } {} {} {postgresql 7.1} c:/web/openacs-4/packages/ecommerce/www/admin/orders/items-return-4-postgresql.xql}
dbqd.ecommerce.www.admin.orders.items-return-4.record_reinstate_problem {dbqd.ecommerce.www.admin.orders.items-return-4.record_reinstate_problem {
      insert into ec_problems_log
      (problem_id, problem_date, problem_details, order_id)
      values
      (ec_problem_id_sequence.nextval, current_timestamp, :errorstring, :order_id)
    } {} {} {postgresql 7.1} c:/web/openacs-4/packages/ecommerce/www/admin/orders/items-return-4-postgresql.xql}
dbqd.ecommerce.www.admin.orders.items-return-4.reinstateable_gift_certificates {dbqd.ecommerce.www.admin.orders.items-return-4.reinstateable_gift_certificates {
      select u.gift_certificate_id, coalesce(sum(u.amount_used),0) - coalesce(sum(u.amount_reinstated),0) as reinstateable_amount
      from ec_gift_certificate_usage u, ec_gift_certificates c
      where u.gift_certificate_id = c.gift_certificate_id
      and u.order_id = :order_id
      group by u.gift_certificate_id, c.expires
      order by expires desc, gift_certificate_id desc
    } {} {} {postgresql 7.1} c:/web/openacs-4/packages/ecommerce/www/admin/orders/items-return-4-postgresql.xql}
dbqd.ecommerce.www.admin.orders.items-return-4.reinstate_gift_certificate {dbqd.ecommerce.www.admin.orders.items-return-4.reinstate_gift_certificate {
      insert into ec_gift_certificate_usage
      (gift_certificate_id, order_id, amount_reinstated, reinstated_date)
      values
      (:gift_certificate_id, :order_id, least(:certificate_amount_to_reinstate, :reinstateable_amount), current_timestamp)
    } {} {} {postgresql 7.1} c:/web/openacs-4/packages/ecommerce/www/admin/orders/items-return-4-postgresql.xql}
dbqd.ecommerce.www.admin.orders.items-return-4.insert_cc_refund_problem {dbqd.ecommerce.www.admin.orders.items-return-4.insert_cc_refund_problem {
      insert into ec_problems_log
      (problem_id, problem_date, problem_details, order_id)
      values
      (ec_problem_id_sequence.nextval, current_timestamp, :errorstring, :order_id)
    } {} {} {postgresql 7.1} c:/web/openacs-4/packages/ecommerce/www/admin/orders/items-return-4-postgresql.xql}
dbqd.ecommerce.www.admin.orders.items-return-4.update_ft_set_success {dbqd.ecommerce.www.admin.orders.items-return-4.update_ft_set_success {
      update ec_financial_transactions 
      set refunded_date = current_timestamp 
      where transaction_id=:pgw_transaction_id
    } {} {} {postgresql 7.1} c:/web/openacs-4/packages/ecommerce/www/admin/orders/items-return-4-postgresql.xql}
dbqd.ecommerce.www.admin.orders.items-return-4.reschedule_refund {dbqd.ecommerce.www.admin.orders.items-return-4.reschedule_refund {
      update ec_financial_transactions
      set to_be_captured_date = current_timestamp
      where transaction_id = :transaction_id
    } {} {} {postgresql 7.1} c:/web/openacs-4/packages/ecommerce/www/admin/orders/items-return-4-postgresql.xql}
dbqd.ecommerce.www.admin.orders.items-return-4.select_matching_charge_transaction {dbqd.ecommerce.www.admin.orders.items-return-4.select_matching_charge_transaction {
      select transaction_id as charged_transaction_id, marked_date 
      from ec_financial_transactions 
      where order_id = :order_id
      and transaction_type = 'charge' 
      and (transaction_amount - :refund_amount) < 0.01::numeric 
      and (transaction_amount - :refund_amount) > 0::numeric
      and refunded_amount is null
      and marked_date is not null
      and failed_p = 'f'
      order by transaction_id
      limit 1
    } {} {} {postgresql 7.1} c:/web/openacs-4/packages/ecommerce/www/admin/orders/items-return-4-postgresql.xql}
dbqd.ecommerce.www.admin.orders.items-return-4.select_unrefunded_charge_transaction {dbqd.ecommerce.www.admin.orders.items-return-4.select_unrefunded_charge_transaction {
      select transaction_id as charged_transaction_id, (transaction_amount - coalesce(refunded_amount, 0)) as unrefunded_amount, marked_date
      from ec_financial_transactions
      where order_id = :order_id
      and transaction_type = 'charge' 
      and (transaction_amount - coalesce(refunded_amount, 0)) > 0.01::numeric
      and marked_date is not null
      and failed_p = 'f'
      order by (transaction_amount - coalesce(refunded_amount, 0)) desc
      limit 1
    } {} {} {postgresql 7.1} c:/web/openacs-4/packages/ecommerce/www/admin/orders/items-return-4-postgresql.xql}
dbqd.ecommerce.www.admin.orders.items-return-4.record_refunded_amount {dbqd.ecommerce.www.admin.orders.items-return-4.record_refunded_amount {
      update ec_financial_transactions
      set refunded_amount = coalesce(refunded_amount, 0) + :refund_amount
      where transaction_id = :charged_transaction_id
    } {} {} {postgresql 7.1} c:/web/openacs-4/packages/ecommerce/www/admin/orders/items-return-4-postgresql.xql}
dbqd.ecommerce.www.admin.orders.items-return-4.record_unrefunded_amount {dbqd.ecommerce.www.admin.orders.items-return-4.record_unrefunded_amount {
      update ec_financial_transactions
      set refunded_amount = coalesce(refunded_amount, 0) + :unrefunded_amount
      where transaction_id = :charged_transaction_id
    } {} {} {postgresql 7.1} c:/web/openacs-4/packages/ecommerce/www/admin/orders/items-return-4-postgresql.xql}
dbqd.ecommerce.www.admin.orders.items-return-4.insert_refund_transaction {dbqd.ecommerce.www.admin.orders.items-return-4.insert_refund_transaction {
      insert into ec_financial_transactions
      (transaction_id, refunded_transaction_id, order_id, refund_id, creditcard_id, transaction_amount, transaction_type, inserted_date, to_be_captured_date)
      values
      (:refund_transaction_id, :charged_transaction_id, :order_id, :refund_id, :creditcard_id, :refund_amount, 'refund', sysdate, :scheduled_hour)
    } {} {} {postgresql 7.1} c:/web/openacs-4/packages/ecommerce/www/admin/orders/items-return-4-postgresql.xql}
dbqd.ecommerce.www.admin.orders.items-return-4.insert_unrefund_transaction {dbqd.ecommerce.www.admin.orders.items-return-4.insert_unrefund_transaction {
      insert into ec_financial_transactions
      (transaction_id, refunded_transaction_id, order_id, refund_id, creditcard_id, transaction_amount, transaction_type, inserted_date, to_be_captured_date)
      values
      (:refund_transaction_id, :charged_transaction_id, :order_id, :refund_id, :creditcard_id, :unrefunded_amount, 'refund', sysdate, :scheduled_hour)
    } {} {} {postgresql 7.1} c:/web/openacs-4/packages/ecommerce/www/admin/orders/items-return-4-postgresql.xql}
dbqd.ecommerce.www.admin.orders.items-return-4.get_user_id {dbqd.ecommerce.www.admin.orders.items-return-4.get_user_id {
      select user_id 
      from ec_orders 
      where order_id=:order_id
    } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/orders/items-return-4.xql}
dbqd.ecommerce.www.admin.orders.items-return-4.get_refund_id_check {dbqd.ecommerce.www.admin.orders.items-return-4.get_refund_id_check {
      select count(*) 
      from ec_refunds 
      where refund_id=:refund_id
    } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/orders/items-return-4.xql}
dbqd.ecommerce.www.admin.orders.items-return-4.get_credit_card_id {dbqd.ecommerce.www.admin.orders.items-return-4.get_credit_card_id {
      select creditcard_number 
      from ec_orders o, ec_creditcards c
      where o.creditcard_id=c.creditcard_id
      and o.order_id=:order_id
    } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/orders/items-return-4.xql}
dbqd.ecommerce.www.admin.orders.items-return-4.get_creditcard_id {dbqd.ecommerce.www.admin.orders.items-return-4.get_creditcard_id {
      select creditcard_id
      from ec_orders 
      where order_id=:order_id
    } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/orders/items-return-4.xql}
dbqd.ecommerce.www.admin.orders.items-return-4.get_transaction_to_query {dbqd.ecommerce.www.admin.orders.items-return-4.get_transaction_to_query {
      select max(transaction_id)
      from ec_financial_transactions
      where creditcard_id=:creditcard_id
      and (authorized_date is not null or 0=(select count(*) 
          from ec_financial_transactions 
          where creditcard_id=:creditcard_id
          and authorized_date is not null)
    } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/orders/items-return-4.xql}
dbqd.ecommerce.www.admin.orders.items-return-4.get_creditcard_id {dbqd.ecommerce.www.admin.orders.items-return-4.get_creditcard_id {
      select creditcard_id
      from ec_orders 
      where order_id=:order_id
    } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/orders/items-return-4.xql}
dbqd.ecommerce.www.admin.orders.items-return-4.update_cc_number_incctable {dbqd.ecommerce.www.admin.orders.items-return-4.update_cc_number_incctable {
      update ec_creditcards
      set creditcard_number=:creditcard_number
      where creditcard_id=:creditcard_id
    } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/orders/items-return-4.xql}
dbqd.ecommerce.www.admin.orders.items-return-4.insert_new_cc {dbqd.ecommerce.www.admin.orders.items-return-4.insert_new_cc {
      insert into ec_creditcards
      (creditcard_id, user_id, creditcard_number, creditcard_last_four, creditcard_type, creditcard_expire, billing_address)
      values
      (:creditcard_id, :user_id, :creditcard_number, :cc_thing, :creditcard_type, :expires, :address_id)
    } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/orders/items-return-4.xql}
dbqd.ecommerce.www.admin.orders.items-return-4.update_item_return {dbqd.ecommerce.www.admin.orders.items-return-4.update_item_return {      
      update ec_items
      set item_state='received_back',
          received_back_date=to_date(:received_back_datetime,'YYYY-MM-DD HH12:MI:SSAM'),
          price_refunded=:price_bind_variable,
          shipping_refunded=:shipping_bind_variable,
          price_tax_refunded=:price_tax_to_refund,
          shipping_tax_refunded=:shipping_tax_to_refund,
          refund_id=:refund_id
      where item_id=:item_id
    } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/orders/items-return-4.xql}
dbqd.ecommerce.www.admin.orders.items-return-4.update_ec_order_set_shipping_refunds {dbqd.ecommerce.www.admin.orders.items-return-4.update_ec_order_set_shipping_refunds {
      update ec_orders 
      set shipping_refunded=:base_shipping_to_refund, shipping_tax_refunded=:base_shipping_tax_to_refund 
      where order_id=:order_id
    } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/orders/items-return-4.xql}
dbqd.ecommerce.www.admin.orders.items-return-4.select_unrefund_transactions {dbqd.ecommerce.www.admin.orders.items-return-4.select_unrefund_transactions {
      select transaction_id, transaction_amount, refunded_transaction_id, to_be_captured_date
      from ec_financial_transactions
      where order_id = :order_id
      and transaction_type = 'refund'
      and refunded_date is null
      and failed_p = 'f'
    } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/orders/items-return-4.xql}
dbqd.ecommerce.www.admin.orders.items-return.doubleclick_select {dbqd.ecommerce.www.admin.orders.items-return.doubleclick_select {
      select count(*) from ec_items_refundable where order_id=:order_id
      } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/orders/items-return.xql}
dbqd.ecommerce.www.admin.orders.items-void-2-oracle.gift_certificate_amount_select {dbqd.ecommerce.www.admin.orders.items-void-2-oracle.gift_certificate_amount_select {
      select ec_order_gift_cert_amount(:order_id) from dual
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/ecommerce/www/admin/orders/items-void-2-oracle.xql}
dbqd.ecommerce.www.admin.orders.items-void-2-oracle.item_state_update {dbqd.ecommerce.www.admin.orders.items-void-2-oracle.item_state_update {
      update ec_items set item_state='void', voided_date=sysdate, voided_by=:customer_service_rep where item_id in ([join $item_id_list ", "])
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/ecommerce/www/admin/orders/items-void-2-oracle.xql}
dbqd.ecommerce.www.admin.orders.items-void-2-oracle.item_state_update2 {dbqd.ecommerce.www.admin.orders.items-void-2-oracle.item_state_update2 {
      update ec_items set item_state='void', voided_date=sysdate, voided_by=:customer_service_rep where order_id=:order_id and product_id=:product_id
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/ecommerce/www/admin/orders/items-void-2-oracle.xql}
dbqd.ecommerce.www.admin.orders.items-void-2-oracle.amount_charged_minus_refunded_for_nonvoid_items_select {dbqd.ecommerce.www.admin.orders.items-void-2-oracle.amount_charged_minus_refunded_for_nonvoid_items_select {
      select nvl(sum(nvl(price_charged,0)) + sum(nvl(shipping_charged,0)) + sum(nvl(price_tax_charged,0)) + sum(nvl(shipping_tax_charged,0)) - sum(nvl(price_refunded,0)) - sum(nvl(shipping_refunded,0)) + sum(nvl(price_tax_refunded,0)) - sum(nvl(shipping_tax_refunded,0)),0) from ec_items where item_state <> 'void' and order_id=:order_id
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/ecommerce/www/admin/orders/items-void-2-oracle.xql}
dbqd.ecommerce.www.admin.orders.items-void-2-oracle.certificate_amount_used_select {dbqd.ecommerce.www.admin.orders.items-void-2-oracle.certificate_amount_used_select {
      select ec_order_gift_cert_amount(:order_id) from dual
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/ecommerce/www/admin/orders/items-void-2-oracle.xql}
dbqd.ecommerce.www.admin.orders.items-void-2-oracle.problems_log_insert {dbqd.ecommerce.www.admin.orders.items-void-2-oracle.problems_log_insert {
      insert into ec_problems_log
      (problem_id, problem_date, problem_details, order_id)
      values
      (ec_problem_id_sequence.nextval, sysdate, 'We were unable to reinstate the customer''s gift certificate balance because the amount to be reinstated was larger than the original amount used.  This shouldn''t have happened unless there was a programming error or unless the database was incorrectly updated manually.  The voiding of this order has been aborted.', :order_id)
      
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/ecommerce/www/admin/orders/items-void-2-oracle.xql}
dbqd.ecommerce.www.admin.orders.items-void-2-oracle.reinstatable_amount_select {dbqd.ecommerce.www.admin.orders.items-void-2-oracle.reinstatable_amount_select {
      select ec_one_gift_cert_on_one_order(:cert,:order_id) from dual
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/ecommerce/www/admin/orders/items-void-2-oracle.xql}
dbqd.ecommerce.www.admin.orders.items-void-2-oracle.reinstate_gift_certificate_insert {dbqd.ecommerce.www.admin.orders.items-void-2-oracle.reinstate_gift_certificate_insert {
      insert into ec_gift_certificate_usage
	    (gift_certificate_id, order_id, amount_reinstated, reinstated_date)
	    values
	    (:cert, :order_id, :iteration_reinstate_amount, sysdate)
	    
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/ecommerce/www/admin/orders/items-void-2-oracle.xql}
dbqd.ecommerce.www.admin.orders.items-void-2.gift_certificate_amount_select {dbqd.ecommerce.www.admin.orders.items-void-2.gift_certificate_amount_select {
      select ec_order_gift_cert_amount(:order_id) 
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/ecommerce/www/admin/orders/items-void-2-postgresql.xql}
dbqd.ecommerce.www.admin.orders.items-void-2.item_state_update {dbqd.ecommerce.www.admin.orders.items-void-2.item_state_update {
      update ec_items set item_state='void', voided_date=current_timestamp, voided_by=:customer_service_rep where item_id in ([join $item_id_list ", "])
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/ecommerce/www/admin/orders/items-void-2-postgresql.xql}
dbqd.ecommerce.www.admin.orders.items-void-2.item_state_update2 {dbqd.ecommerce.www.admin.orders.items-void-2.item_state_update2 {
      update ec_items set item_state='void', voided_date=current_timestamp, voided_by=:customer_service_rep where order_id=:order_id and product_id=:product_id
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/ecommerce/www/admin/orders/items-void-2-postgresql.xql}
dbqd.ecommerce.www.admin.orders.items-void-2.certificate_amount_used_select {dbqd.ecommerce.www.admin.orders.items-void-2.certificate_amount_used_select {
      select ec_order_gift_cert_amount(:order_id) 
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/ecommerce/www/admin/orders/items-void-2-postgresql.xql}
dbqd.ecommerce.www.admin.orders.items-void-2.problems_log_insert {dbqd.ecommerce.www.admin.orders.items-void-2.problems_log_insert {
      insert into ec_problems_log
      (problem_id, problem_date, problem_details, order_id)
      values
      (ec_problem_id_sequence.nextval, current_timestamp, 'We were unable to reinstate the customer''s gift certificate balance because the amount to be reinstated was larger than the original amount used.  This shouldn''t have happened unless there was a programming error or unless the database was incorrectly updated manually.  The voiding of this order has been aborted.', :order_id)
      
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/ecommerce/www/admin/orders/items-void-2-postgresql.xql}
dbqd.ecommerce.www.admin.orders.items-void-2.reinstatable_amount_select {dbqd.ecommerce.www.admin.orders.items-void-2.reinstatable_amount_select {
      select ec_one_gift_cert_on_one_order(:cert,:order_id) 
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/ecommerce/www/admin/orders/items-void-2-postgresql.xql}
dbqd.ecommerce.www.admin.orders.items-void-2.reinstate_gift_certificate_insert {dbqd.ecommerce.www.admin.orders.items-void-2.reinstate_gift_certificate_insert {
      insert into ec_gift_certificate_usage
	    (gift_certificate_id, order_id, amount_reinstated, reinstated_date)
	    values
	    (:cert, :order_id, :iteration_reinstate_amount, current_timestamp)
	    
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/ecommerce/www/admin/orders/items-void-2-postgresql.xql}
dbqd.ecommerce.www.admin.orders.items-void-2.num_items_select {dbqd.ecommerce.www.admin.orders.items-void-2.num_items_select {
      select count(*) from ec_items where order_id=:order_id and product_id=:product_id
      } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/orders/items-void-2.xql}
dbqd.ecommerce.www.admin.orders.items-void-2.amount_charged_minus_refunded_for_nonvoid_items_select {dbqd.ecommerce.www.admin.orders.items-void-2.amount_charged_minus_refunded_for_nonvoid_items_select {
      select coalesce(sum(coalesce(price_charged,0)) + sum(coalesce(shipping_charged,0)) + sum(coalesce(price_tax_charged,0)) + sum(coalesce(shipping_tax_charged,0)) - sum(coalesce(price_refunded,0)) - sum(coalesce(shipping_refunded,0)) + sum(coalesce(price_tax_refunded,0)) - sum(coalesce(shipping_tax_refunded,0)),0) from ec_items where item_state <> 'void' and order_id=:order_id
      } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/orders/items-void-2.xql}
dbqd.ecommerce.www.admin.orders.items-void-2.certs_to_reinstate_list_select {dbqd.ecommerce.www.admin.orders.items-void-2.certs_to_reinstate_list_select {
      select u.gift_certificate_id
    from ec_gift_certificate_usage u, ec_gift_certificates c
    where u.gift_certificate_id = c.gift_certificate_id
    and u.order_id = :order_id
    order by expires desc
      } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/orders/items-void-2.xql}
dbqd.ecommerce.www.admin.orders.items-void.num_non_void_items_select {dbqd.ecommerce.www.admin.orders.items-void.num_non_void_items_select {
      select count(*) from ec_items where order_id=:order_id and product_id=:product_id and item_state <> 'void'
      } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/orders/items-void.xql}
dbqd.ecommerce.www.admin.orders.items-void.num_items_select {dbqd.ecommerce.www.admin.orders.items-void.num_items_select {
      select count(*) from ec_items where order_id=:order_id and product_id=:product_id
      } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/orders/items-void.xql}
dbqd.ecommerce.www.admin.orders.items-void.item_state_select {dbqd.ecommerce.www.admin.orders.items-void.item_state_select {
      select item_state from ec_items where order_id=:order_id and product_id=:product_id
      } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/orders/items-void.xql}
dbqd.ecommerce.www.admin.orders.items-void.num_shipped_items_select {dbqd.ecommerce.www.admin.orders.items-void.num_shipped_items_select {
      select count(*) from ec_items where order_id=:order_id and product_id=:product_id and item_state in ('shipped','arrived','received_back')
      } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/orders/items-void.xql}
dbqd.ecommerce.www.admin.orders.items-void.order_products_select {dbqd.ecommerce.www.admin.orders.items-void.order_products_select {
      select i.item_id, i.item_state, p.product_name, i.price_name, i.price_charged
    from ec_items i, ec_products p
    where i.product_id=p.product_id
    and i.order_id=:order_id
    and i.product_id=:product_id
      } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/orders/items-void.xql}
dbqd.ecommerce.www.admin.orders.one-oracle.order_select {dbqd.ecommerce.www.admin.orders.one-oracle.order_select {
	select o.order_state, o.creditcard_id, o.confirmed_date, o.cs_comments,
        o.shipping_method, o.shipping_address, o.in_basket_date,
        o.authorized_date, o.shipping_charged, o.voided_by, o.voided_date,
        o.reason_for_void, u.user_id, u.first_names, u.last_name, c.billing_address
        from ec_orders o, cc_users u, ec_creditcards c
        where order_id=:order_id
        and o.user_id = u.user_id(+)
        and o.creditcard_id = c.creditcard_id(+)
    } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/ecommerce/www/admin/orders/one-oracle.xql}
dbqd.ecommerce.www.admin.orders.one.order_select {dbqd.ecommerce.www.admin.orders.one.order_select {
      select o.order_state, o.creditcard_id, o.confirmed_date, o.cs_comments,
         o.shipping_method, o.shipping_address, o.in_basket_date,
         o.authorized_date, o.shipping_charged, o.voided_by, o.voided_date,
         o.reason_for_void, u.user_id, u.first_names, u.last_name, c.billing_address
      from ec_orders o
      left join cc_users u using (user_id)
      left join ec_creditcards c using (creditcard_id)
      where order_id=:order_id
    } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/orders/one-postgresql.xql}
dbqd.ecommerce.www.admin.orders.one.voided_by_name_select {dbqd.ecommerce.www.admin.orders.one.voided_by_name_select {
      select first_names || ' ' || last_name 
      from cc_users
      where user_id=:voided_by
    } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/orders/one.xql}
dbqd.ecommerce.www.admin.orders.one.products_select {dbqd.ecommerce.www.admin.orders.one.products_select {
      select p.product_name, p.product_id, i.price_name, i.price_charged, count(*) as quantity, i.item_state, i.color_choice, i.size_choice, i.style_choice
      from ec_items i, ec_products p
      where i.product_id=p.product_id
      and i.order_id=:order_id
      group by p.product_name, p.product_id, i.price_name, i.price_charged, i.item_state, i.color_choice, i.size_choice, i.style_choice
    } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/orders/one.xql}
dbqd.ecommerce.www.admin.orders.one.financial_transactions_select {dbqd.ecommerce.www.admin.orders.one.financial_transactions_select {
      select t.transaction_id, t.inserted_date, t.transaction_amount, t.transaction_type, t.to_be_captured_p, 
          t.authorized_date, t.marked_date, t.refunded_date, t.failed_p, c.creditcard_last_four
      from ec_financial_transactions t, ec_creditcards c
      where t.creditcard_id=c.creditcard_id
      and t.order_id=:order_id
      order by transaction_id
    } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/orders/one.xql}
dbqd.ecommerce.www.admin.orders.one.shipments_items_products_select {dbqd.ecommerce.www.admin.orders.one.shipments_items_products_select {
      select s.shipment_id, s.address_id, s.shipment_date, s.expected_arrival_date, s.carrier, s.tracking_number, 
          s.actual_arrival_date, s.actual_arrival_detail, p.product_name, p.product_id, i.price_name, i.price_charged, count(*) as quantity
      from ec_shipments s, ec_items i, ec_products p
      where i.shipment_id=s.shipment_id
      and i.product_id=p.product_id
      and s.order_id=:order_id
      group by s.shipment_id, s.address_id, s.shipment_date, s.expected_arrival_date, s.carrier, s.tracking_number, 
          s.actual_arrival_date, s.actual_arrival_detail, p.product_name, p.product_id, i.price_name, i.price_charged
      order by s.shipment_id
    } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/orders/one.xql}
dbqd.ecommerce.www.admin.orders.one.refunds_select {dbqd.ecommerce.www.admin.orders.one.refunds_select {
      select r.refund_id, r.refund_date, r.refunded_by, r.refund_reasons, r.refund_amount, u.first_names, u.last_name,
          p.product_name, p.product_id, i.price_name, i.price_charged, count(*) as quantity
      from ec_refunds r, cc_users u, ec_items i, ec_products p
      where r.order_id=:order_id
      and r.refunded_by=u.user_id
      and i.refund_id=r.refund_id
      and p.product_id=i.product_id
      group by r.refund_id, r.refund_date, r.refunded_by, r.refund_reasons, r.refund_amount, u.first_names, u.last_name, 
          p.product_name, p.product_id, i.price_name, i.price_charged
    } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/orders/one.xql}
dbqd.ecommerce.www.admin.orders.refunds-oracle.last_24 {dbqd.ecommerce.www.admin.orders.refunds-oracle.last_24 {
      and sysdate-r.refund_date <= 1
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/ecommerce/www/admin/orders/refunds-oracle.xql}
dbqd.ecommerce.www.admin.orders.refunds-oracle.last_week {dbqd.ecommerce.www.admin.orders.refunds-oracle.last_week {
      and sysdate-r.refund_date <= 7
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/ecommerce/www/admin/orders/refunds-oracle.xql}
dbqd.ecommerce.www.admin.orders.refunds-oracle.last_month {dbqd.ecommerce.www.admin.orders.refunds-oracle.last_month {
      and months_between(sysdate,r.refund_date) <= 1
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/ecommerce/www/admin/orders/refunds-oracle.xql}
dbqd.ecommerce.www.admin.orders.refunds.last_24 {dbqd.ecommerce.www.admin.orders.refunds.last_24 {
      and now()-r.refund_date <= timespan_days(1)
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/ecommerce/www/admin/orders/refunds-postgresql.xql}
dbqd.ecommerce.www.admin.orders.refunds.last_week {dbqd.ecommerce.www.admin.orders.refunds.last_week {
      and now()-r.refund_date <= timespan_days(7)
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/ecommerce/www/admin/orders/refunds-postgresql.xql}
dbqd.ecommerce.www.admin.orders.refunds.last_month {dbqd.ecommerce.www.admin.orders.refunds.last_month {
      and now()-r.refund_date <= '1 month'::interval
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/ecommerce/www/admin/orders/refunds-postgresql.xql}
dbqd.ecommerce.www.admin.orders.refunds.refunds_select {dbqd.ecommerce.www.admin.orders.refunds.refunds_select {
      select r.refund_id, r.refund_date, r.order_id, r.refund_amount, r.refunded_by, u.first_names, u.last_name, count(*) as n_items
from ec_refunds r, cc_users u, ec_items i
where r.refunded_by=u.user_id
and i.refund_id=r.refund_id
$refund_date_query_bit
group by r.refund_id, r.refund_date, r.order_id, r.refund_amount, r.refunded_by, u.first_names, u.last_name
order by $order_by_clause
      } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/orders/refunds.xql}
dbqd.ecommerce.www.admin.orders.revenue-oracle.reportable_transactions_select {dbqd.ecommerce.www.admin.orders.revenue-oracle.reportable_transactions_select {
      select to_char(inserted_date,'YYYY') as transaction_year, to_char(inserted_date,'Q') as transaction_quarter, 
          sum(case when transaction_type = 'charge' then transaction_amount else -1*transaction_amount end) as revenue
      from ec_fin_transactions_reportable
      group by to_char(inserted_date,'YYYY'), to_char(inserted_date,'Q')
      order by to_char(inserted_date,'YYYY') || to_char(inserted_date,'Q')
    } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/ecommerce/www/admin/orders/revenue-oracle.xql}
dbqd.ecommerce.www.admin.orders.revenue-oracle.money_select {dbqd.ecommerce.www.admin.orders.revenue-oracle.money_select {
      select to_char(shipment_date,'YYYY') as shipment_year,
      to_char(shipment_date,'Q') as shipment_quarter,
      nvl(sum(bal_price_charged),0) as total_price_charged,
      nvl(sum(bal_shipping_charged + case when mv.shipment_id = (
          select min(s2.shipment_id) 
          from ec_shipments s2 
          where s2.order_id=mv.order_id) then (
          (select nvl(o.shipping_charged,0)-nvl(o.shipping_refunded,0) from
           ec_orders o where o.order_id=mv.order_id) else 0 end),0)  as total_shipping_charged,
      nvl(sum(bal_tax_charged + case when mv.shipment_id = (
           select min(s2.shipment_id) 
           from ec_shipments s2 where s2.order_id=mv.order_id) then (
               select nvl(o.shipping_tax_charged,0)-nvl(o.shipping_tax_refunded,0) from
               ec_orders o where o.order_id=mv.order_id) else 0 end),0) as total_tax_charged
      from ec_items_money_view mv
      group by to_char(shipment_date,'YYYY'), to_char(shipment_date,'Q')
      order by to_char(shipment_date,'YYYY') || to_char(shipment_date,'Q')
    } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/ecommerce/www/admin/orders/revenue-oracle.xql}
dbqd.ecommerce.www.admin.orders.revenue-oracle.gift_certificates_select {dbqd.ecommerce.www.admin.orders.revenue-oracle.gift_certificates_select {
      select to_char(issue_date,'YYYY') as issue_year,
      to_char(issue_date,'Q') as issue_quarter,
      nvl(sum(amount),0) as amount
      from ec_gift_certificates where gift_certificate_state = 'authorized'
      group by to_char(issue_date,'YYYY'), to_char(issue_date,'Q')
      order by to_char(issue_date,'YYYY') || to_char(issue_date,'Q')
    } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/ecommerce/www/admin/orders/revenue-oracle.xql}
dbqd.ecommerce.www.admin.orders.revenue-oracle.gift_certificates_select {dbqd.ecommerce.www.admin.orders.revenue-oracle.gift_certificates_select {
      select to_char(issue_date,'YYYY') as issue_year,
      to_char(issue_date,'Q') as issue_quarter,
      nvl(sum(amount),0) as amount
      from ec_gift_certificates where gift_certificate_state = 'authorized'
      group by to_char(issue_date,'YYYY'), to_char(issue_date,'Q')
      order by to_char(issue_date,'YYYY') || to_char(issue_date,'Q')
    } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/ecommerce/www/admin/orders/revenue-oracle.xql}
dbqd.ecommerce.www.admin.orders.revenue-oracle.gift_certificates_approved_select {dbqd.ecommerce.www.admin.orders.revenue-oracle.gift_certificates_approved_select {
      select to_char(expires,'YYYY') as expires_year,
      to_char(expires,'Q') as expires_quarter,
      nvl(sum(gift_certificate_amount_left(gift_certificate_id)),0) + nvl(sum(ec_gift_cert_unshipped_amount(gift_certificate_id)),0) as amount_outstanding
      from ec_gift_certificates_approved
      group by to_char(expires,'YYYY'), to_char(expires,'Q')
      order by to_char(expires,'YYYY') || to_char(expires,'Q')
    } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/ecommerce/www/admin/orders/revenue-oracle.xql}
dbqd.ecommerce.www.admin.orders.revenue.reportable_transactions_select {dbqd.ecommerce.www.admin.orders.revenue.reportable_transactions_select {
      select to_char(inserted_date,'YYYY') as transaction_year, to_char(inserted_date,'Q') as transaction_quarter, 
      sum(case when transaction_type = 'charge' then transaction_amount else -1*transaction_amount end) as revenue
      from ec_fin_transactions_reportable
      group by to_char(inserted_date,'YYYY'), to_char(inserted_date,'Q')
      order by to_char(inserted_date,'YYYY') || to_char(inserted_date,'Q')
    } {} {} {postgresql 7.1} c:/web/openacs-4/packages/ecommerce/www/admin/orders/revenue-postgresql.xql}
dbqd.ecommerce.www.admin.orders.revenue.money_select {dbqd.ecommerce.www.admin.orders.revenue.money_select {
      select to_char(shipment_date,'YYYY') as shipment_year,
      to_char(shipment_date,'Q') as shipment_quarter,
      coalesce(sum(bal_price_charged),0) as total_price_charged,
      coalesce(sum(bal_shipping_charged + 
          case when mv.shipment_id = (select min(s2.shipment_id) from ec_shipments s2 where s2.order_id=mv.order_id) 
          then (select coalesce(o.shipping_charged,0) - coalesce(o.shipping_refunded,0) from ec_orders o where o.order_id=mv.order_id) 
          else 0 end), 0) as total_shipping_charged,
      coalesce(sum(bal_tax_charged + 
          case when mv.shipment_id = (select min(s2.shipment_id) from ec_shipments s2 where s2.order_id=mv.order_id) 
          then (select coalesce(o.shipping_tax_charged,0) - coalesce(o.shipping_tax_refunded,0) from ec_orders o where o.order_id=mv.order_id)
          else 0 end), 0) as total_tax_charged
      from ec_items_money_view mv
      group by to_char(shipment_date,'YYYY'), to_char(shipment_date,'Q')
      order by to_char(shipment_date,'YYYY') || to_char(shipment_date,'Q')
    } {} {} {postgresql 7.1} c:/web/openacs-4/packages/ecommerce/www/admin/orders/revenue-postgresql.xql}
dbqd.ecommerce.www.admin.orders.revenue.gift_certificates_select {dbqd.ecommerce.www.admin.orders.revenue.gift_certificates_select {
      select to_char(issue_date,'YYYY') as issue_year,
      to_char(issue_date,'Q') as issue_quarter,
      coalesce(sum(amount),0) as amount
      from ec_gift_certificates where gift_certificate_state = 'authorized'
      group by to_char(issue_date,'YYYY'), to_char(issue_date,'Q')
      order by to_char(issue_date,'YYYY') || to_char(issue_date,'Q')
    } {} {} {postgresql 7.1} c:/web/openacs-4/packages/ecommerce/www/admin/orders/revenue-postgresql.xql}
dbqd.ecommerce.www.admin.orders.revenue.gift_certificates_select {dbqd.ecommerce.www.admin.orders.revenue.gift_certificates_select {
      select to_char(issue_date,'YYYY') as issue_year,
      to_char(issue_date,'Q') as issue_quarter,
      coalesce(sum(amount),0) as amount
      from ec_gift_certificates where gift_certificate_state = 'authorized'
      group by to_char(issue_date,'YYYY'), to_char(issue_date,'Q')
      order by to_char(issue_date,'YYYY') || to_char(issue_date,'Q')
    } {} {} {postgresql 7.1} c:/web/openacs-4/packages/ecommerce/www/admin/orders/revenue-postgresql.xql}
dbqd.ecommerce.www.admin.orders.revenue.gift_certificates_approved_select {dbqd.ecommerce.www.admin.orders.revenue.gift_certificates_approved_select {
      select to_char(expires,'YYYY') as expires_year,
      to_char(expires,'Q') as expires_quarter,
      coalesce(sum(gift_certificate_amount_left(gift_certificate_id)),0) + coalesce(sum(ec_gift_cert_unshipped_amount(gift_certificate_id)),0) as amount_outstanding
      from ec_gift_certificates_approved
      group by to_char(expires,'YYYY'), to_char(expires,'Q')
      order by to_char(expires,'YYYY') || to_char(expires,'Q')
    } {} {} {postgresql 7.1} c:/web/openacs-4/packages/ecommerce/www/admin/orders/revenue-postgresql.xql}
dbqd.ecommerce.www.admin.orders.search-oracle.order_id_query_string_sql {dbqd.ecommerce.www.admin.orders.search-oracle.order_id_query_string_sql {
      
    select o.order_id, o.confirmed_date, o.order_state,
           ec_total_price(o.order_id) as price_to_display,
           o.user_id,
           u.first_names, u.last_name,
           count(*) as n_items
      from ec_orders o, cc_users u, ec_items i
     where o.order_id like :order_id_query_string
       and o.user_id=u.user_id(+)
       and o.order_id=i.order_id
  group by o.order_id, o.confirmed_date, o.order_state,
           ec_total_price(o.order_id), o.user_id,
           u.first_names, u.last_name
  order by order_id
  
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/ecommerce/www/admin/orders/search-oracle.xql}
dbqd.ecommerce.www.admin.orders.search-oracle.product_sku_query_string_sql {dbqd.ecommerce.www.admin.orders.search-oracle.product_sku_query_string_sql {

    select o.order_id, o.confirmed_date, o.order_state,
           ec_total_price(o.order_id) as price_to_display,
           o.user_id,
           u.first_names, u.last_name,
           p.product_name,
           count(*) as n_items
      from ec_orders o, cc_users u, ec_items i, ec_products p
     where upper(p.sku) like upper(:product_sku_query_string)
       and i.product_id=p.product_id
       and o.user_id=u.user_id(+)
       and o.order_id=i.order_id
  group by o.order_id, o.confirmed_date, o.order_state,
           ec_total_price(o.order_id),
           o.user_id,
           u.first_names, u.last_name, p.product_name
  order by order_id

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/ecommerce/www/admin/orders/search-oracle.xql}
dbqd.ecommerce.www.admin.orders.search-oracle.product_name_query_string_sql {dbqd.ecommerce.www.admin.orders.search-oracle.product_name_query_string_sql {

    select o.order_id, o.confirmed_date, o.order_state,
           ec_total_price(o.order_id) as price_to_display,
           o.user_id,
           u.first_names, u.last_name,
           p.product_name,
           count(*) as n_items
      from ec_orders o, cc_users u, ec_items i, ec_products p
     where upper(p.product_name) like upper(:product_name_query_string)
       and i.product_id=p.product_id
       and o.user_id=u.user_id(+)
       and o.order_id=i.order_id
  group by o.order_id, o.confirmed_date, o.order_state,
           ec_total_price(o.order_id),
           o.user_id,
           u.first_names, u.last_name, p.product_name
  order by order_id

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/ecommerce/www/admin/orders/search-oracle.xql}
dbqd.ecommerce.www.admin.orders.search-oracle.default_sql {dbqd.ecommerce.www.admin.orders.search-oracle.default_sql {

    select o.order_id, o.confirmed_date, o.order_state,
           ec_total_price(o.order_id) as price_to_display,
           o.user_id,
           u.first_names, u.last_name,
           count(*) as n_items
      from ec_orders o, cc_users u, ec_items i
     where upper(u.last_name) like upper(:cust_last_name_query_string)
       and o.user_id=u.user_id(+)
       and o.order_id=i.order_id
  group by o.order_id, o.confirmed_date, o.order_state,
           ec_total_price(o.order_id),
           o.user_id,
           u.first_names, u.last_name
  order by order_id

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/ecommerce/www/admin/orders/search-oracle.xql}
dbqd.ecommerce.www.admin.orders.search.order_id_query_string_sql {dbqd.ecommerce.www.admin.orders.search.order_id_query_string_sql {
      
    select o.order_id, o.confirmed_date, o.order_state,
           ec_total_price(o.order_id) as price_to_display,
           o.user_id,
           u.first_names, u.last_name,
           count(*) as n_items
      from ec_orders o
           LEFT JOIN cc_users u on (o.user_id=u.user_id)
           JOIN ec_items i on (o.order_id=i.order_id)
     where o.order_id like :order_id_query_string
  group by o.order_id, o.confirmed_date, o.order_state,
           ec_total_price(o.order_id), o.user_id,
           u.first_names, u.last_name
  order by order_id
  
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/ecommerce/www/admin/orders/search-postgresql.xql}
dbqd.ecommerce.www.admin.orders.search.product_sku_query_string_sql {dbqd.ecommerce.www.admin.orders.search.product_sku_query_string_sql {

    select o.order_id, o.confirmed_date, o.order_state,
           ec_total_price(o.order_id) as price_to_display,
           o.user_id,
           u.first_names, u.last_name,
           p.product_name,
           count(*) as n_items
      from ec_orders o
           JOIN ec_items i on (o.order_id=i.order_id)
           JOIN ec_products p on (i.product_id=p.product_id)
           LEFT JOIN cc_users u on (o.user_id=u.user_id)
     where upper(p.sku) like upper(:product_sku_query_string)
  group by o.order_id, o.confirmed_date, o.order_state,
           ec_total_price(o.order_id),
           o.user_id,
           u.first_names, u.last_name, p.product_name
  order by order_id

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/ecommerce/www/admin/orders/search-postgresql.xql}
dbqd.ecommerce.www.admin.orders.search.product_name_query_string_sql {dbqd.ecommerce.www.admin.orders.search.product_name_query_string_sql {

    select o.order_id, o.confirmed_date, o.order_state,
           ec_total_price(o.order_id) as price_to_display,
           o.user_id,
           u.first_names, u.last_name,
           p.product_name,
           count(*) as n_items
      from ec_orders o
           JOIN ec_items i on (o.order_id=i.order_id)
           JOIN ec_products p on (i.product_id=p.product_id)
           LEFT JOIN cc_users u on (o.user_id=u.user_id)
     where upper(p.product_name) like upper(:product_name_query_string)
  group by o.order_id, o.confirmed_date, o.order_state,
           ec_total_price(o.order_id),
           o.user_id,
           u.first_names, u.last_name, p.product_name
  order by order_id

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/ecommerce/www/admin/orders/search-postgresql.xql}
dbqd.ecommerce.www.admin.orders.search.default_sql {dbqd.ecommerce.www.admin.orders.search.default_sql {

    select o.order_id, o.confirmed_date, o.order_state,
           ec_total_price(o.order_id) as price_to_display,
           o.user_id,
           u.first_names, u.last_name,
           count(*) as n_items
      from ec_orders o
           LEFT JOIN cc_users u on (o.user_id=u.user_id)
	   JOIN ec_items i on (o.order_id=i.order_id)
     where upper(u.last_name) like upper(:cust_last_name_query_string)
  group by o.order_id, o.confirmed_date, o.order_state,
           ec_total_price(o.order_id),
           o.user_id,
           u.first_names, u.last_name
  order by order_id

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/ecommerce/www/admin/orders/search-postgresql.xql}
dbqd.ecommerce.www.admin.orders.shipments-oracle.get_carrier_list {dbqd.ecommerce.www.admin.orders.shipments-oracle.get_carrier_list {
      select unique carrier from ec_shipments where carrier is not null order by carrier
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/ecommerce/www/admin/orders/shipments-oracle.xql}
dbqd.ecommerce.www.admin.orders.shipments-oracle.shipments_select {dbqd.ecommerce.www.admin.orders.shipments-oracle.shipments_select {
      
select s.shipment_id,
       s.shipment_date,
       s.order_id,
       s.carrier,
       decode(nvl((select count(*) from ec_items where order_id=s.order_id),0),nvl((select count(*) from ec_items where shipment_id=s.shipment_id),0),'Full','Partial') as full_or_partial,
       nvl((select count(*) from ec_items where shipment_id=s.shipment_id),0) as n_items
from ec_shipments s
$where_clause
order by $order_by_clause

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/ecommerce/www/admin/orders/shipments-oracle.xql}
dbqd.ecommerce.www.admin.orders.shipments.get_carrier_list {dbqd.ecommerce.www.admin.orders.shipments.get_carrier_list {
      select distinct carrier from ec_shipments where carrier is not null order by carrier
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/ecommerce/www/admin/orders/shipments-postgresql.xql}
dbqd.ecommerce.www.admin.orders.shipments.last_24 {dbqd.ecommerce.www.admin.orders.shipments.last_24 {
        now()-s.shipment_date <= timespan_days(1)
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/ecommerce/www/admin/orders/shipments-postgresql.xql}
dbqd.ecommerce.www.admin.orders.shipments.last_week {dbqd.ecommerce.www.admin.orders.shipments.last_week {
        now()-s.shipment_date <= timespan_days(7)
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/ecommerce/www/admin/orders/shipments-postgresql.xql}
dbqd.ecommerce.www.admin.orders.shipments.last_month {dbqd.ecommerce.www.admin.orders.shipments.last_month {
        now()-s.shipment_date <= '1 month'::interval
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/ecommerce/www/admin/orders/shipments-postgresql.xql}
dbqd.ecommerce.www.admin.orders.shipments.shipments_select {dbqd.ecommerce.www.admin.orders.shipments.shipments_select {
      
select s.shipment_id, 
       s.shipment_date, 
       s.order_id, 
       s.carrier, 
       case when coalesce((select count(*) from ec_items where order_id=s.order_id),0) = coalesce((select count(*) from ec_items where shipment_id=s.shipment_id),0) then 'Full' else 'Partial' end as full_or_partial,
       coalesce((select count(*) from ec_items where shipment_id=s.shipment_id),0) as n_items
from ec_shipments s
$where_clause
order by $order_by_clause

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/ecommerce/www/admin/orders/shipments-postgresql.xql}
dbqd.ecommerce.www.admin.orders.track-oracle.shipment_select {dbqd.ecommerce.www.admin.orders.track-oracle.shipment_select {
      
select to_char(shipment_date, 'MMDDYY') as ship_date_for_fedex, to_char(shipment_date, 'MM/DD/YYYY') as pretty_ship_date, carrier, tracking_number
from ec_shipments
where shipment_id = :shipment_id

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/ecommerce/www/admin/orders/track-oracle.xql}
dbqd.ecommerce.www.admin.orders.track.shipment_select {dbqd.ecommerce.www.admin.orders.track.shipment_select {
      
select to_char(shipment_date, 'MMDDYY') as ship_date_for_fedex, to_char(shipment_date, 'MM/DD/YYYY') as pretty_ship_date, carrier, tracking_number
from ec_shipments
where shipment_id = :shipment_id

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/ecommerce/www/admin/orders/track-postgresql.xql}
dbqd.ecommerce.www.admin.orders.void-2-oracle.order_update {dbqd.ecommerce.www.admin.orders.void-2-oracle.order_update {
      
  update ec_orders
  set order_state='void',
  reason_for_void=:reason_for_void,
  voided_by=:customer_service_rep,
  voided_date=sysdate
  where order_id=:order_id
  
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/ecommerce/www/admin/orders/void-2-oracle.xql}
dbqd.ecommerce.www.admin.orders.void-2-oracle.gift_certificates_reinst {dbqd.ecommerce.www.admin.orders.void-2-oracle.gift_certificates_reinst {
      declare begin ec_reinst_gift_cert_on_order(:order_id); end;
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/ecommerce/www/admin/orders/void-2-oracle.xql}
dbqd.ecommerce.www.admin.orders.void-2.order_update {dbqd.ecommerce.www.admin.orders.void-2.order_update {
      
  update ec_orders
  set order_state='void',
  reason_for_void=:reason_for_void,
  voided_by=:customer_service_rep,
  voided_date=current_timestamp
  where order_id=:order_id
  
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/ecommerce/www/admin/orders/void-2-postgresql.xql}
dbqd.ecommerce.www.admin.orders.void-2.gift_certificates_reinst {dbqd.ecommerce.www.admin.orders.void-2.gift_certificates_reinst {
	select  ec_reinst_gift_cert_on_order(:order_id)
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/ecommerce/www/admin/orders/void-2-postgresql.xql}
dbqd.ecommerce.www.admin.orders.void-2.items_update {dbqd.ecommerce.www.admin.orders.void-2.items_update {
      
  update ec_items
  set item_state='void',
  voided_by=:customer_service_rep
  where order_id=:order_id
  
      } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/orders/void-2.xql}
dbqd.ecommerce.www.admin.orders.void.shipped_items_count {dbqd.ecommerce.www.admin.orders.void.shipped_items_count {
      select count(*) from ec_items where order_id=:order_id and item_state in ('shipped', 'arrived', 'received_back')
      } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/orders/void.xql}
dbqd.ecommerce.www.admin.problems.index-oracle.include_resolved_date {dbqd.ecommerce.www.admin.problems.index-oracle.include_resolved_date {
      and resolved_date is null
    } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/ecommerce/www/admin/problems/index-oracle.xql}
dbqd.ecommerce.www.admin.problems.index-oracle.problems_select {dbqd.ecommerce.www.admin.problems.index-oracle.problems_select {
      select l.*, p.first_names || ' ' || p.last_name as user_name
      from ec_problems_log l, persons p
      where l.resolved_by = p.person_id(+)
      $sql_clause
      order by problem_date asc  
    } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/ecommerce/www/admin/problems/index-oracle.xql}
dbqd.ecommerce.www.admin.problems.index.include_resolved_date {dbqd.ecommerce.www.admin.problems.index.include_resolved_date {
      where resolved_date is null
    } {} {} {postgresql 7.1} c:/web/openacs-4/packages/ecommerce/www/admin/problems/index-postgresql.xql}
dbqd.ecommerce.www.admin.problems.index.problems_select {dbqd.ecommerce.www.admin.problems.index.problems_select {
      select l.*, p.first_names || ' ' || p.last_name as user_name
      from ec_problems_log l
      left join persons p on (l.resolved_by = p.person_id)
      $sql_clause
      order by problem_date asc
    } {} {} {postgresql 7.1} c:/web/openacs-4/packages/ecommerce/www/admin/problems/index-postgresql.xql}
dbqd.ecommerce.www.admin.problems.index.problem_count {dbqd.ecommerce.www.admin.problems.index.problem_count {
      select count(*) 
      from ec_problems_log
    } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/problems/index.xql}
dbqd.ecommerce.www.admin.problems.index.unresolved_count {dbqd.ecommerce.www.admin.problems.index.unresolved_count {
      select count(*) from 
      ec_problems_log 
      where resolved_date is null
    } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/problems/index.xql}
dbqd.ecommerce.www.admin.problems.resolve-2-oracle.unused {dbqd.ecommerce.www.admin.problems.resolve-2-oracle.unused {
      update ec_problems_log set resolved_by=:user_id, resolved_date=sysdate where problem_id = :problem_id
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/ecommerce/www/admin/problems/resolve-2-oracle.xql}
dbqd.ecommerce.www.admin.problems.resolve-2.unused {dbqd.ecommerce.www.admin.problems.resolve-2.unused {
      update ec_problems_log set resolved_by=:user_id, resolved_date=current_timestamp where problem_id = :problem_id
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/ecommerce/www/admin/problems/resolve-2-postgresql.xql}
dbqd.ecommerce.www.admin.problems.resolve.problem_select {dbqd.ecommerce.www.admin.problems.resolve.problem_select {
      select problem_details, problem_date from ec_problems_log where problem_id = :problem_id
      } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/problems/resolve.xql}
dbqd.ecommerce.www.admin.products.add-2.all_date_and_integer_custom_fields {dbqd.ecommerce.www.admin.products.add-2.all_date_and_integer_custom_fields {
      select column_type, field_identifier, field_name
      from ec_custom_product_fields
      where column_type in ('date','integer')
      and active_p='t'
    } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/products/add-2.xql}
dbqd.ecommerce.www.admin.products.add-2.custom_fields_select {dbqd.ecommerce.www.admin.products.add-2.custom_fields_select {
      select field_identifier 
      from ec_custom_product_fields
      where active_p='t'
    } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/products/add-2.xql}
dbqd.ecommerce.www.admin.products.add-2.user_class_select {dbqd.ecommerce.www.admin.products.add-2.user_class_select {
      select user_class_id from ec_user_classes
    } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/products/add-2.xql}
dbqd.ecommerce.www.admin.products.add-3.user_class_select {dbqd.ecommerce.www.admin.products.add-3.user_class_select {
      select user_class_id, user_class_name
      from ec_user_classes
      order by user_class_name
    } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/products/add-3.xql}
dbqd.ecommerce.www.admin.products.add-3.custom_fields_select {dbqd.ecommerce.www.admin.products.add-3.custom_fields_select {
      select field_identifier, field_name, column_type
      from ec_custom_product_fields
      where active_p = 't'
    } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/products/add-3.xql}
dbqd.ecommerce.www.admin.products.add-3.template_name_select {dbqd.ecommerce.www.admin.products.add-3.template_name_select {
      select template_name
      from ec_templates 
      where template_id=:template_id
    } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/products/add-3.xql}
dbqd.ecommerce.www.admin.products.add-3.custom_fields_select {dbqd.ecommerce.www.admin.products.add-3.custom_fields_select {
      select field_identifier, field_name, column_type
      from ec_custom_product_fields
      where active_p = 't'
    } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/products/add-3.xql}
dbqd.ecommerce.www.admin.products.add-3.user_class_select {dbqd.ecommerce.www.admin.products.add-3.user_class_select {
      select user_class_id, user_class_name 
      from ec_user_classes
      order by user_class_name
    } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/products/add-3.xql}
dbqd.ecommerce.www.admin.products.add-4-oracle.product_insert {dbqd.ecommerce.www.admin.products.add-4-oracle.product_insert {
      
	begin
	:1 := ec_product.new(product_id => :product_id,
	object_type => 'ec_product',
	creation_date => sysdate,
	creation_user => :user_id,
	creation_ip => :peeraddr,
	context_id => :context_id,
	product_name => :product_name, 
	price => :price, 
	sku => :sku,
	one_line_description => :one_line_description, 
	detailed_description => :detailed_description, 
	search_keywords => :search_keywords, 
	present_p => :present_p, 
	stock_status => :stock_status,
	dirname => :dirname, 
	available_date => to_date(:available_date, 'YYYY-MM-DD'), 
	color_list => :color_list, 
	size_list => :size_list, 
	style_list => :style_list, 
	email_on_purchase_list => :email_on_purchase_list, 
	url => :url,
	no_shipping_avail_p => :no_shipping_avail_p, 
	shipping => :shipping,
	shipping_additional => :shipping_additional, 
	weight => :weight, 
	active_p => 't',
	template_id => :template_id
	);
	end;
    
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/ecommerce/www/admin/products/add-4-oracle.xql}
dbqd.ecommerce.www.admin.products.add-4-oracle.audit_info_sql {dbqd.ecommerce.www.admin.products.add-4-oracle.audit_info_sql {

      sysdate, :user_id, :peeraddr

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/ecommerce/www/admin/products/add-4-oracle.xql}
dbqd.ecommerce.www.admin.products.add-4.product_insert {dbqd.ecommerce.www.admin.products.add-4.product_insert {

	select ec_product__new(
	:product_id,
	:user_id,
	:context_id,
	:product_name, 
	:price, 
	:sku,
	:one_line_description, 
	:detailed_description, 
	:search_keywords, 
	:present_p, 
	:stock_status,
	:dirname, 
	to_date(:available_date, 'YYYY-MM-DD'), 
	:color_list, 
	:size_list, 
	:peeraddr
	);
   
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/ecommerce/www/admin/products/add-4-postgresql.xql}
dbqd.ecommerce.www.admin.products.add-4.product_update {dbqd.ecommerce.www.admin.products.add-4.product_update {

      update ec_products set style_list = :style_list,
      email_on_purchase_list = :email_on_purchase_list,
      url = :url,
      no_shipping_avail_p = :no_shipping_avail_p,
      shipping = :shipping,
      shipping_additional = :shipping_additional,
      weight = :weight,
      active_p = 't',
      template_id = :template_id
      where product_id = :product_id;

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/ecommerce/www/admin/products/add-4-postgresql.xql}
dbqd.ecommerce.www.admin.products.add-4.audit_info_sql {dbqd.ecommerce.www.admin.products.add-4.audit_info_sql {

      now(), :user_id, :peeraddr

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/ecommerce/www/admin/products/add-4-postgresql.xql}
dbqd.ecommerce.www.admin.products.add-4.doubleclick_select {dbqd.ecommerce.www.admin.products.add-4.doubleclick_select {
      select count(*) from ec_products where product_id=:product_id
      } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/products/add-4.xql}
dbqd.ecommerce.www.admin.products.add-4.user_class_select {dbqd.ecommerce.www.admin.products.add-4.user_class_select {
      select user_class_id from ec_user_classes
      } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/products/add-4.xql}
dbqd.ecommerce.www.admin.products.add-4.custom_columns_select {dbqd.ecommerce.www.admin.products.add-4.custom_columns_select {
      
    select field_identifier
    from ec_custom_product_fields
    where active_p='t'
  
      } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/products/add-4.xql}
dbqd.ecommerce.www.admin.products.add-4.custom_fields_insert {dbqd.ecommerce.www.admin.products.add-4.custom_fields_insert {
      
  insert into ec_custom_product_field_values
  ([join $custom_columns_to_insert ", "], $audit_fields)
  values
  ([join $custom_column_values_to_insert ","], $audit_info)
  
      } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/products/add-4.xql}
dbqd.ecommerce.www.admin.products.add-4.category_insert {dbqd.ecommerce.www.admin.products.add-4.category_insert {
      
    insert into ec_category_product_map (product_id, category_id, $audit_fields)
    values
    (:product_id, :category_id, $audit_info)
    
      } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/products/add-4.xql}
dbqd.ecommerce.www.admin.products.add-4.subcategory_insert {dbqd.ecommerce.www.admin.products.add-4.subcategory_insert {
      
    insert into ec_subcategory_product_map (
     product_id, subcategory_id, $audit_fields) values (
     :product_id, :subcategory_id, $audit_info)
      } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/products/add-4.xql}
dbqd.ecommerce.www.admin.products.add-4.subsubcategory_insert {dbqd.ecommerce.www.admin.products.add-4.subsubcategory_insert {
      
    insert into ec_subsubcategory_product_map (
     product_id, subsubcategory_id, $audit_fields) values (
     :product_id, :subsubcategory_id, $audit_info)
      } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/products/add-4.xql}
dbqd.ecommerce.www.admin.products.add-4.user_class_insert {dbqd.ecommerce.www.admin.products.add-4.user_class_insert {
      
      insert into ec_product_user_class_prices (
      product_id, user_class_id, price, $audit_fields) values (
      :product_id, :user_class_id, :uc_price, $audit_info)
      } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/products/add-4.xql}
dbqd.ecommerce.www.admin.products.add.num_user_classes_select {dbqd.ecommerce.www.admin.products.add.num_user_classes_select {
      select count(*) from ec_user_classes
      } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/products/add.xql}
dbqd.ecommerce.www.admin.products.add.user_class_select {dbqd.ecommerce.www.admin.products.add.user_class_select {
      
    select user_class_id, 
           user_class_name 
    from ec_user_classes 
    order by user_class_name
      } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/products/add.xql}
dbqd.ecommerce.www.admin.products.add.num_custom_product_fields_select {dbqd.ecommerce.www.admin.products.add.num_custom_product_fields_select {
      select count(*) from ec_custom_product_fields where active_p='t'
      } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/products/add.xql}
dbqd.ecommerce.www.admin.products.add.custom_fields_select {dbqd.ecommerce.www.admin.products.add.custom_fields_select {
      
    select field_identifier, 
           field_name, 
           default_value, 
           column_type 
    from ec_custom_product_fields 
    where active_p='t' order by creation_date
      } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/products/add.xql}
dbqd.ecommerce.www.admin.products.by-category-oracle.product_categories_select {dbqd.ecommerce.www.admin.products.by-category-oracle.product_categories_select {
      
select cats.category_id, cats.sort_key, cats.category_name, count(cat_view.product_id) as n_products, sum(cat_view.n_sold) as total_sold_in_category
from 
  ec_categories cats, 
  (select map.product_id, map.category_id, count(i.item_id) as n_sold
   from ec_category_product_map map, ec_items_reportable i
   where map.product_id = i.product_id(+)
   group by map.product_id, map.category_id) cat_view
where cats.category_id = cat_view.category_id(+)
group by cats.category_id, cats.sort_key, cats.category_name
order by cats.sort_key
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/ecommerce/www/admin/products/by-category-oracle.xql}
dbqd.ecommerce.www.admin.products.by-category.product_categories_select {dbqd.ecommerce.www.admin.products.by-category.product_categories_select {

select cats.category_id, cats.sort_key, cats.category_name, count(cat_view.product_id) as n_products, sum(cat_view.n_sold) as total_sold_in_category
from 
  ec_categories cats
	LEFT JOIN
  (select map.product_id, map.category_id, count(i.item_id) as n_sold
   from ec_category_product_map map
	LEFT JOIN ec_items_reportable i using (product_id)
   group by map.product_id, map.category_id) cat_view
	using (category_id)
group by cats.category_id, cats.sort_key, cats.category_name
order by cats.sort_key

      } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/products/by-category.xql}
dbqd.ecommerce.www.admin.products.categories-upload-2.product_check {dbqd.ecommerce.www.admin.products.categories-upload-2.product_check {
      select product_id from ec_products 
      where sku = :sku
    } {} {} {postgresql 7.1} c:/web/openacs-4/packages/ecommerce/www/admin/products/categories-upload-2-postgresql.xql}
dbqd.ecommerce.www.admin.products.categories-upload-2.subcategory_insert {dbqd.ecommerce.www.admin.products.categories-upload-2.subcategory_insert {
      insert into ec_subcategory_product_map (
      	product_id,
      	subcategory_id,
      	publisher_favorite_p,
      	last_modified,
      	last_modifying_user,
      	modified_ip_address) 
      values (
      	:product_id,
      	:subcategory_id,
      	'f',
      	now(),
      	:user_id,
      	:ip)
    } {} {} {postgresql 7.1} c:/web/openacs-4/packages/ecommerce/www/admin/products/categories-upload-2-postgresql.xql}
dbqd.ecommerce.www.admin.products.categories-upload-2.unused_sub {dbqd.ecommerce.www.admin.products.categories-upload-2.unused_sub {
      insert into ec_category_product_map (
      	product_id,
      	category_id,
      	publisher_favorite_p,
      	last_modified,
      	last_modifying_user,
      	modified_ip_address) 
      values (
      	:product_id,
      	:category_id,
      	'f',
      	now(),
      	:user_id,
      	:ip)
    } {} {} {postgresql 7.1} c:/web/openacs-4/packages/ecommerce/www/admin/products/categories-upload-2-postgresql.xql}
dbqd.ecommerce.www.admin.products.categories-upload-2.category_insert {dbqd.ecommerce.www.admin.products.categories-upload-2.category_insert {
      insert into ec_category_product_map (
	product_id,
      	category_id,
      	publisher_favorite_p,
      	last_modified,
      	last_modifying_user,
      	modified_ip_address) 
      values (
      	:product_id,
      	:category_id,
      	'f',
      	now(),
      	:user_id,
      	:ip)
    } {} {} {postgresql 7.1} c:/web/openacs-4/packages/ecommerce/www/admin/products/categories-upload-2-postgresql.xql}
dbqd.ecommerce.www.admin.products.categories-upload-2. {dbqd.ecommerce.www.admin.products.categories-upload-2. {} {} {} {postgresql 7.1} c:/web/openacs-4/packages/ecommerce/www/admin/products/categories-upload-2-postgresql.xql}
dbqd.ecommerce.www.admin.products.categories-upload-2.subcategories_select {dbqd.ecommerce.www.admin.products.categories-upload-2.subcategories_select {
      select c.category_id, c.category_name, s.subcategory_id,
      s.subcategory_name from ec_subcategories s, ec_categories c
      where c.category_id = s.category_id
      and upper(:category) like upper(subcategory_name)
    } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/products/categories-upload-2.xql}
dbqd.ecommerce.www.admin.products.categories-upload-2.category_match_select {dbqd.ecommerce.www.admin.products.categories-upload-2.category_match_select {
      select category_id, category_name 
      from ec_categories 
      where upper(:category) like upper(category_name)
    } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/products/categories-upload-2.xql}
dbqd.ecommerce.www.admin.products.custom-field-add-2.dupliciate_field_identifier_select {dbqd.ecommerce.www.admin.products.custom-field-add-2.dupliciate_field_identifier_select {
      select count(*) from ec_custom_product_fields where field_identifier=:field_identifier
      } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/products/custom-field-add-2.xql}
dbqd.ecommerce.www.admin.products.custom-field-add-2.ec_products_column_conflict_select {dbqd.ecommerce.www.admin.products.custom-field-add-2.ec_products_column_conflict_select {
      select count(*) from user_tab_columns where column_name=upper(:field_identifier) and table_name='EC_PRODUCTS'
      } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/products/custom-field-add-2.xql}
dbqd.ecommerce.www.admin.products.custom-field-add-3-oracle.custom_field_insert {dbqd.ecommerce.www.admin.products.custom-field-add-3-oracle.custom_field_insert {
      insert into ec_custom_product_fields
      (field_identifier, field_name, default_value, column_type, last_modified, last_modifying_user, modified_ip_address)
      values
      (:field_identifier, :field_name, :default_value, :column_type, sysdate, :user_id, :peeraddr)
    } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/ecommerce/www/admin/products/custom-field-add-3-oracle.xql}
dbqd.ecommerce.www.admin.products.custom-field-add-3-oracle.alter_ec_custom_field_values_table {dbqd.ecommerce.www.admin.products.custom-field-add-3-oracle.alter_ec_custom_field_values_table {
      alter table ec_custom_product_field_values add (
      $field_identifier $column_type $end_of_alter)
    } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/ecommerce/www/admin/products/custom-field-add-3-oracle.xql}
dbqd.ecommerce.www.admin.products.custom-field-add-3-oracle.alter_ec_custom_field_values_audit_table {dbqd.ecommerce.www.admin.products.custom-field-add-3-oracle.alter_ec_custom_field_values_audit_table {
      alter table ec_custom_p_field_values_audit add (
      $field_identifier $column_type)
    } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/ecommerce/www/admin/products/custom-field-add-3-oracle.xql}
dbqd.ecommerce.www.admin.products.custom-field-add-3-oracle.custom_field_drop {dbqd.ecommerce.www.admin.products.custom-field-add-3-oracle.custom_field_drop {
      alter table ec_custom_product_field_values 
      drop column $field_identifier
    } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/ecommerce/www/admin/products/custom-field-add-3-oracle.xql}
dbqd.ecommerce.www.admin.products.custom-field-add-3.custom_field_insert {dbqd.ecommerce.www.admin.products.custom-field-add-3.custom_field_insert {
      insert into ec_custom_product_fields
      (field_identifier, field_name, default_value, column_type, last_modified, last_modifying_user, modified_ip_address)
      values
      (:field_identifier, :field_name, :default_value, :column_type, current_timestamp, :user_id, :peeraddr)
    } {} {} {postgresql 7.1} c:/web/openacs-4/packages/ecommerce/www/admin/products/custom-field-add-3-postgresql.xql}
dbqd.ecommerce.www.admin.products.custom-field-add-3.alter_ec_custom_field_values_table {dbqd.ecommerce.www.admin.products.custom-field-add-3.alter_ec_custom_field_values_table {
      alter table ec_custom_product_field_values 
      add column $field_identifier $column_type $end_of_alter
    } {} {} {postgresql 7.1} c:/web/openacs-4/packages/ecommerce/www/admin/products/custom-field-add-3-postgresql.xql}
dbqd.ecommerce.www.admin.products.custom-field-add-3.alter_ec_custom_field_values_audit_table {dbqd.ecommerce.www.admin.products.custom-field-add-3.alter_ec_custom_field_values_audit_table {
      alter table ec_custom_p_field_values_audit 
      add column $field_identifier $column_type
    } {} {} {postgresql 7.1} c:/web/openacs-4/packages/ecommerce/www/admin/products/custom-field-add-3-postgresql.xql}
dbqd.ecommerce.www.admin.products.custom-field-add-3.custom_field_drop {dbqd.ecommerce.www.admin.products.custom-field-add-3.custom_field_drop {
      -- PostgreSQL 7.1.3 can't drop columns and will fail on this query --
      alter table ec_custom_product_field_values 
      drop column $field_identifier
    } {} {} {postgresql 7.1} c:/web/openacs-4/packages/ecommerce/www/admin/products/custom-field-add-3-postgresql.xql}
dbqd.ecommerce.www.admin.products.custom-field-add-3.drop_trigger_function {dbqd.ecommerce.www.admin.products.custom-field-add-3.drop_trigger_function {
      drop function ec_custom_p_f_values_audit_tr ()
    } {} {} {postgresql 7.1} c:/web/openacs-4/packages/ecommerce/www/admin/products/custom-field-add-3-postgresql.xql}
dbqd.ecommerce.www.admin.products.custom-field-add-3.drop_trigger {dbqd.ecommerce.www.admin.products.custom-field-add-3.drop_trigger {
      drop trigger ec_custom_p_f_values_audit_tr on ec_custom_product_field_values
    } {} {} {postgresql 7.1} c:/web/openacs-4/packages/ecommerce/www/admin/products/custom-field-add-3-postgresql.xql}
dbqd.ecommerce.www.admin.products.custom-field-add-3.create_trigger {dbqd.ecommerce.www.admin.products.custom-field-add-3.create_trigger {
      create trigger ec_custom_p_f_values_audit_tr
      before update or delete on ec_custom_product_field_values
      for each row execute procedure ec_custom_p_f_values_audit_tr ()
    } {} {} {postgresql 7.1} c:/web/openacs-4/packages/ecommerce/www/admin/products/custom-field-add-3-postgresql.xql}
dbqd.ecommerce.www.admin.products.custom-field-add-3.doubleclick_select {dbqd.ecommerce.www.admin.products.custom-field-add-3.doubleclick_select {
      select count(*) 
      from ec_custom_product_fields 
      where field_identifier = :field_identifier
    } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/products/custom-field-add-3.xql}
dbqd.ecommerce.www.admin.products.custom-field-add-3.custom_field_delete {dbqd.ecommerce.www.admin.products.custom-field-add-3.custom_field_delete {
      delete from ec_custom_product_fields 
      where field_identifier = :field_identifier
    } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/products/custom-field-add-3.xql}
dbqd.ecommerce.www.admin.products.custom-field-edit-2-oracle.custom_fields_update {dbqd.ecommerce.www.admin.products.custom-field-edit-2-oracle.custom_fields_update {
      update ec_custom_product_fields set field_name = :field_name, default_value = :default_value, column_type = :column_type, 
	last_modified = sysdate, last_modifying_user = :user_id, modified_ip_address = :peeraddr where field_identifier = :field_identifier
    } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/ecommerce/www/admin/products/custom-field-edit-2-oracle.xql}
dbqd.ecommerce.www.admin.products.custom-field-edit-2.custom_fields_update {dbqd.ecommerce.www.admin.products.custom-field-edit-2.custom_fields_update {
      update ec_custom_product_fields set field_name = :field_name, default_value = :default_value, column_type = :column_type, last_modified = current_timestamp, 
      	last_modifying_user = :user_id, modified_ip_address = :peeraddr
      where field_identifier = :field_identifier
    } {} {} {postgresql 7.1} c:/web/openacs-4/packages/ecommerce/www/admin/products/custom-field-edit-2-postgresql.xql}
dbqd.ecommerce.www.admin.products.custom-field-edit-2.alter_table_drop {dbqd.ecommerce.www.admin.products.custom-field-edit-2.alter_table_drop {
      -- PostgrSQL 7.1.2 will fail on this query as it doesn't support dropping of constraints --
      alter table ec_custom_product_field_values 
      drop constraint ${field_identifier}_constraint
    } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/products/custom-field-edit-2.xql}
dbqd.ecommerce.www.admin.products.custom-field-edit-2.alter_table_modify {dbqd.ecommerce.www.admin.products.custom-field-edit-2.alter_table_modify {
      -- PostgrSQL 7.1.2 will fail on this query as it can't modify columns --
      alter table ec_custom_product_field_values
      modify ($field_identifier $column_type)
    } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/products/custom-field-edit-2.xql}
dbqd.ecommerce.www.admin.products.custom-field-edit-2.alter_table_modify_audit {dbqd.ecommerce.www.admin.products.custom-field-edit-2.alter_table_modify_audit {
      -- PostgrSQL 7.1.2 will fail on this query as it can't modify columns --
      alter table ec_custom_p_field_values_audit
      modify ($field_identifier $column_type)
    } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/products/custom-field-edit-2.xql}
dbqd.ecommerce.www.admin.products.custom-field-edit.custom_field_select {dbqd.ecommerce.www.admin.products.custom-field-edit.custom_field_select {
      
select field_name, default_value, column_type, active_p
from ec_custom_product_fields
where field_identifier=:field_identifier

      } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/products/custom-field-edit.xql}
dbqd.ecommerce.www.admin.products.custom-field-status-change-oracle.status_update {dbqd.ecommerce.www.admin.products.custom-field-status-change-oracle.status_update {
      
update ec_custom_product_fields
set active_p = :active_p,
    last_modified = sysdate,
    last_modifying_user = :user_id,
    modified_ip_address = :peeraddr
where field_identifier = :field_identifier

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/ecommerce/www/admin/products/custom-field-status-change-oracle.xql}
dbqd.ecommerce.www.admin.products.custom-field-status-change.status_update {dbqd.ecommerce.www.admin.products.custom-field-status-change.status_update {
      
update ec_custom_product_fields
set active_p = :active_p,
    last_modified = current_timestamp,
    last_modifying_user = :user_id,
    modified_ip_address = :peeraddr
where field_identifier = :field_identifier

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/ecommerce/www/admin/products/custom-field-status-change-postgresql.xql}
dbqd.ecommerce.www.admin.products.custom-field.custom_field_select {dbqd.ecommerce.www.admin.products.custom-field.custom_field_select {
      
select field_name, default_value, column_type, active_p
from ec_custom_product_fields
where field_identifier=:field_identifier

      } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/products/custom-field.xql}
dbqd.ecommerce.www.admin.products.custom-fields.custom_fields_select {dbqd.ecommerce.www.admin.products.custom-fields.custom_fields_select {
      
select field_identifier, field_name, active_p
from ec_custom_product_fields
order by active_p desc, field_name

      } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/products/custom-fields.xql}
dbqd.ecommerce.www.admin.products.delete-2-oracle.product_delete {dbqd.ecommerce.www.admin.products.delete-2-oracle.product_delete {
      
      begin
      ec_product.del(:product_id);
      end;
  
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/ecommerce/www/admin/products/delete-2-oracle.xql}
dbqd.ecommerce.www.admin.products.delete-2.product_delete {dbqd.ecommerce.www.admin.products.delete-2.product_delete {

      select ec_product__delete(:product_id)
  
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/ecommerce/www/admin/products/delete-2-postgresql.xql}
dbqd.ecommerce.www.admin.products.delete-2.order_count_select {dbqd.ecommerce.www.admin.products.delete-2.order_count_select {
      select count(*) from ec_items where product_id=:product_id
      } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/products/delete-2.xql}
dbqd.ecommerce.www.admin.products.delete-2.offer_list_select {dbqd.ecommerce.www.admin.products.delete-2.offer_list_select {
      select offer_id from ec_offers where product_id=:product_id
      } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/products/delete-2.xql}
dbqd.ecommerce.www.admin.products.delete-2.offers_delete {dbqd.ecommerce.www.admin.products.delete-2.offers_delete {
      delete from ec_offers where product_id=:product_id
      } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/products/delete-2.xql}
dbqd.ecommerce.www.admin.products.delete-2.custom_product_fields_delete {dbqd.ecommerce.www.admin.products.delete-2.custom_product_fields_delete {
      delete from ec_custom_product_field_values where product_id=:product_id
      } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/products/delete-2.xql}
dbqd.ecommerce.www.admin.products.delete-2.subsubcategory_list_select {dbqd.ecommerce.www.admin.products.delete-2.subsubcategory_list_select {
      select subsubcategory_id from ec_subsubcategory_product_map where product_id=:product_id
      } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/products/delete-2.xql}
dbqd.ecommerce.www.admin.products.delete-2.subsubcategory_delete {dbqd.ecommerce.www.admin.products.delete-2.subsubcategory_delete {
      delete from ec_subsubcategory_product_map where product_id=:product_id
      } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/products/delete-2.xql}
dbqd.ecommerce.www.admin.products.delete-2.subcategory_list_select {dbqd.ecommerce.www.admin.products.delete-2.subcategory_list_select {
      select subcategory_id from ec_subcategory_product_map where product_id=:product_id
      } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/products/delete-2.xql}
dbqd.ecommerce.www.admin.products.delete-2.subcategory_delete {dbqd.ecommerce.www.admin.products.delete-2.subcategory_delete {
      delete from ec_subcategory_product_map where product_id=:product_id
      } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/products/delete-2.xql}
dbqd.ecommerce.www.admin.products.delete-2.category_list_select {dbqd.ecommerce.www.admin.products.delete-2.category_list_select {
      select category_id from ec_category_product_map where product_id=:product_id
      } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/products/delete-2.xql}
dbqd.ecommerce.www.admin.products.delete-2.category_delete {dbqd.ecommerce.www.admin.products.delete-2.category_delete {
      delete from ec_category_product_map where product_id=:product_id
      } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/products/delete-2.xql}
dbqd.ecommerce.www.admin.products.delete-2.review_list_select {dbqd.ecommerce.www.admin.products.delete-2.review_list_select {
      select review_id from ec_product_reviews where product_id=:product_id
      } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/products/delete-2.xql}
dbqd.ecommerce.www.admin.products.delete-2.review_delete {dbqd.ecommerce.www.admin.products.delete-2.review_delete {
      delete from ec_product_reviews where product_id=:product_id
      } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/products/delete-2.xql}
dbqd.ecommerce.www.admin.products.delete-2.product_comments_delete {dbqd.ecommerce.www.admin.products.delete-2.product_comments_delete {
      delete from ec_product_comments where product_id=:product_id
      } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/products/delete-2.xql}
dbqd.ecommerce.www.admin.products.delete-2.product_a_list_select {dbqd.ecommerce.www.admin.products.delete-2.product_a_list_select {
      select product_a from ec_product_links where product_b=:product_id
      } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/products/delete-2.xql}
dbqd.ecommerce.www.admin.products.delete-2.product_b_list_select {dbqd.ecommerce.www.admin.products.delete-2.product_b_list_select {
      select product_b from ec_product_links where product_a=:product_id
      } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/products/delete-2.xql}
dbqd.ecommerce.www.admin.products.delete-2.links_delete {dbqd.ecommerce.www.admin.products.delete-2.links_delete {
      delete from ec_product_links where product_a=:product_id or product_b=:product_id
      } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/products/delete-2.xql}
dbqd.ecommerce.www.admin.products.delete-2.user_class_select {dbqd.ecommerce.www.admin.products.delete-2.user_class_select {
      select user_class_id, price from ec_product_user_class_prices where product_id=:product_id
      } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/products/delete-2.xql}
dbqd.ecommerce.www.admin.products.delete-2.delete_from_session_info {dbqd.ecommerce.www.admin.products.delete-2.delete_from_session_info {
      delete from ec_user_session_info where product_id=:product_id
      } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/products/delete-2.xql}
dbqd.ecommerce.www.admin.products.delete-2.user_class_prices_delete {dbqd.ecommerce.www.admin.products.delete-2.user_class_prices_delete {
      delete from ec_product_user_class_prices where product_id=:product_id
      } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/products/delete-2.xql}
dbqd.ecommerce.www.admin.products.delete-2.series_id_list_select {dbqd.ecommerce.www.admin.products.delete-2.series_id_list_select {
      select series_id from ec_product_series_map where component_id=:product_id
      } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/products/delete-2.xql}
dbqd.ecommerce.www.admin.products.delete-2.component_id_list_select {dbqd.ecommerce.www.admin.products.delete-2.component_id_list_select {
      select component_id from ec_product_series_map where series_id=:product_id
      } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/products/delete-2.xql}
dbqd.ecommerce.www.admin.products.delete-2.series_delete {dbqd.ecommerce.www.admin.products.delete-2.series_delete {
      delete from ec_product_series_map where series_id=:product_id or component_id=:product_id
      } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/products/delete-2.xql}
dbqd.ecommerce.www.admin.products.delete-2.sale_price_list_select {dbqd.ecommerce.www.admin.products.delete-2.sale_price_list_select {
      select sale_price_id from ec_sale_prices where product_id=:product_id
      } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/products/delete-2.xql}
dbqd.ecommerce.www.admin.products.delete-2.sale_price_delete {dbqd.ecommerce.www.admin.products.delete-2.sale_price_delete {
      delete from ec_sale_prices where product_id=:product_id
      } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/products/delete-2.xql}
dbqd.ecommerce.www.admin.products.edit-2.all_date_and_integer_custom_fields {dbqd.ecommerce.www.admin.products.edit-2.all_date_and_integer_custom_fields {
      
	select column_type, field_identifier, field_name
	from ec_custom_product_fields
	where column_type in ('date','integer')
	and active_p='t'
      
      } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/products/edit-2.xql}
dbqd.ecommerce.www.admin.products.edit-2.dirname_select {dbqd.ecommerce.www.admin.products.edit-2.dirname_select {
      select dirname from ec_products where product_id=:product_id
      } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/products/edit-2.xql}
dbqd.ecommerce.www.admin.products.edit-2.user_classes_select {dbqd.ecommerce.www.admin.products.edit-2.user_classes_select {
      select user_class_id, user_class_name from ec_user_classes order by user_class_name
      } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/products/edit-2.xql}
dbqd.ecommerce.www.admin.products.edit-2.custom_fields_select {dbqd.ecommerce.www.admin.products.edit-2.custom_fields_select {
      
  select field_identifier, field_name, column_type
  from ec_custom_product_fields
  where active_p = 't'

      } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/products/edit-2.xql}
dbqd.ecommerce.www.admin.products.edit-2.template_name_select {dbqd.ecommerce.www.admin.products.edit-2.template_name_select {
      select template_name from ec_templates where template_id=:template_id
      } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/products/edit-2.xql}
dbqd.ecommerce.www.admin.products.edit-2.custom_fields_export {dbqd.ecommerce.www.admin.products.edit-2.custom_fields_export {
      select field_identifier from ec_custom_product_fields where active_p='t'
      } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/products/edit-2.xql}
dbqd.ecommerce.www.admin.products.edit-2.user_class_select {dbqd.ecommerce.www.admin.products.edit-2.user_class_select {
      select user_class_id from ec_user_classes
      } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/products/edit-2.xql}
dbqd.ecommerce.www.admin.products.edit-3-oracle.audit_info_sql {dbqd.ecommerce.www.admin.products.edit-3-oracle.audit_info_sql {
      sysdate, :user_id, :peeraddr
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/ecommerce/www/admin/products/edit-3-oracle.xql}
dbqd.ecommerce.www.admin.products.edit-3-oracle.audit_update_sql {dbqd.ecommerce.www.admin.products.edit-3-oracle.audit_update_sql {
      last_modified=sysdate, last_modifying_user=:user_id, modified_ip_address=:peeraddr
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/ecommerce/www/admin/products/edit-3-oracle.xql}
dbqd.ecommerce.www.admin.products.edit-3.audit_info_sql {dbqd.ecommerce.www.admin.products.edit-3.audit_info_sql {
      current_timestamp, :user_id, :peeraddr
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/ecommerce/www/admin/products/edit-3-postgresql.xql}
dbqd.ecommerce.www.admin.products.edit-3.audit_update_sql {dbqd.ecommerce.www.admin.products.edit-3.audit_update_sql {
      last_modified=current_timestamp, last_modifying_user=:user_id, modified_ip_address=:peeraddr
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/ecommerce/www/admin/products/edit-3-postgresql.xql}
dbqd.ecommerce.www.admin.products.edit-3.product_update {dbqd.ecommerce.www.admin.products.edit-3.product_update {
      
  update ec_products
  set product_name=:product_name,
      sku=:sku,
      one_line_description=:one_line_description,
      detailed_description=:detailed_description,
      color_list=:color_list,
      size_list=:size_list,
      style_list=:style_list,
      email_on_purchase_list=:email_on_purchase_list,
      search_keywords=:search_keywords,
      url=:url,
      price=:price,
      no_shipping_avail_p=:no_shipping_avail_p,
      present_p=:present_p,
      available_date=:available_date,
      shipping=:shipping,
      shipping_additional=:shipping_additional,
      weight=:weight,
      template_id=:template_id,
      stock_status=:stock_status,
      $audit_update
  where product_id=:product_id
  
      } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/products/edit-3.xql}
dbqd.ecommerce.www.admin.products.edit-3.custom_columns_select {dbqd.ecommerce.www.admin.products.edit-3.custom_columns_select {
      select field_identifier from ec_custom_product_fields where active_p='t'
      } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/products/edit-3.xql}
dbqd.ecommerce.www.admin.products.edit-3.num_custom_columns {dbqd.ecommerce.www.admin.products.edit-3.num_custom_columns {
      select count(*) from ec_custom_product_field_values where product_id=:product_id
      } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/products/edit-3.xql}
dbqd.ecommerce.www.admin.products.edit-3.custom_field_insert {dbqd.ecommerce.www.admin.products.edit-3.custom_field_insert {
      
    insert into ec_custom_product_field_values
    ([join $custom_columns_to_insert ", "], $audit_fields)
    values
    ([join $custom_column_values_to_insert ","], $audit_info)
    
      } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/products/edit-3.xql}
dbqd.ecommerce.www.admin.products.edit-3.custom_fields_update {dbqd.ecommerce.www.admin.products.edit-3.custom_fields_update {
      update ec_custom_product_field_values set [join $update_list ", "], $audit_update where product_id=:product_id
      } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/products/edit-3.xql}
dbqd.ecommerce.www.admin.products.edit-3.old_category_id_list_select {dbqd.ecommerce.www.admin.products.edit-3.old_category_id_list_select {
      select category_id from ec_category_product_map where product_id=:product_id
      } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/products/edit-3.xql}
dbqd.ecommerce.www.admin.products.edit-3.old_subcategory_id_list_select {dbqd.ecommerce.www.admin.products.edit-3.old_subcategory_id_list_select {
      select subcategory_id from ec_subcategory_product_map where product_id=:product_id
      } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/products/edit-3.xql}
dbqd.ecommerce.www.admin.products.edit-3.old_subsubcategory_id_list_select {dbqd.ecommerce.www.admin.products.edit-3.old_subsubcategory_id_list_select {
      select subsubcategory_id from ec_subsubcategory_product_map where product_id=:product_id
      } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/products/edit-3.xql}
dbqd.ecommerce.www.admin.products.edit-3.subsubcategory_delete {dbqd.ecommerce.www.admin.products.edit-3.subsubcategory_delete {
      delete from ec_subsubcategory_product_map where product_id=$product_id and subsubcategory_id=:old_subsubcategory_id
      } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/products/edit-3.xql}
dbqd.ecommerce.www.admin.products.edit-3.subcategory_delete {dbqd.ecommerce.www.admin.products.edit-3.subcategory_delete {
      delete from ec_subcategory_product_map where product_id=:product_id and subcategory_id=:old_subcategory_id
      } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/products/edit-3.xql}
dbqd.ecommerce.www.admin.products.edit-3.category_delete {dbqd.ecommerce.www.admin.products.edit-3.category_delete {
      delete from ec_category_product_map where product_id=:product_id and category_id=:old_category_id
      } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/products/edit-3.xql}
dbqd.ecommerce.www.admin.products.edit-3.category_insert {dbqd.ecommerce.www.admin.products.edit-3.category_insert {
      insert into ec_category_product_map (product_id, category_id, $audit_fields) values (:product_id, :new_category_id, $audit_info)
      } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/products/edit-3.xql}
dbqd.ecommerce.www.admin.products.edit-3.subcategory_insert {dbqd.ecommerce.www.admin.products.edit-3.subcategory_insert {
      insert into ec_subcategory_product_map (product_id, subcategory_id, $audit_fields) values (:product_id, :new_subcategory_id, $audit_info)
      } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/products/edit-3.xql}
dbqd.ecommerce.www.admin.products.edit-3.subsubcategory_insert {dbqd.ecommerce.www.admin.products.edit-3.subsubcategory_insert {
      insert into ec_subsubcategory_product_map (product_id, subsubcategory_id, $audit_fields) values (:product_id, :new_subsubcategory_id, $audit_info)
      } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/products/edit-3.xql}
dbqd.ecommerce.www.admin.products.edit-3.all_user_class_id_list_select {dbqd.ecommerce.www.admin.products.edit-3.all_user_class_id_list_select {
      select user_class_id from ec_user_classes
      } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/products/edit-3.xql}
dbqd.ecommerce.www.admin.products.edit-3.user_class_select {dbqd.ecommerce.www.admin.products.edit-3.user_class_select {
      select user_class_id, price from ec_product_user_class_prices where product_id=$product_id
      } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/products/edit-3.xql}
dbqd.ecommerce.www.admin.products.edit-3.user_class_price_delete {dbqd.ecommerce.www.admin.products.edit-3.user_class_price_delete {
      delete from ec_product_user_class_prices where user_class_id = :user_class_id
      } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/products/edit-3.xql}
dbqd.ecommerce.www.admin.products.edit-3.user_class_price_insert {dbqd.ecommerce.www.admin.products.edit-3.user_class_price_insert {
      insert into ec_product_user_class_prices (product_id, user_class_id, price, $audit_fields) values (:product_id, :user_class_id, :user_class_price, $audit_info)
      } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/products/edit-3.xql}
dbqd.ecommerce.www.admin.products.edit-3.user_class_price_update {dbqd.ecommerce.www.admin.products.edit-3.user_class_price_update {
      update ec_product_user_class_prices set price=:user_class_price, $audit_update where user_class_id = :user_class_id and product_id = :product_id
      } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/products/edit-3.xql}
dbqd.ecommerce.www.admin.products.edit.product_select {dbqd.ecommerce.www.admin.products.edit.product_select {
select product_id, sku, product_name,                                           to_char(creation_date, 'YYYY-MM-DD') as creation_date, one_line_description,    detailed_description, search_keywords, price, no_shipping_avail_p, shipping,    shipping_additional, weight, dirname, present_p, active_p,                      to_char(available_date, 'YYYY-MM-DD') as available_date, announcements,         to_char(announcements_expire, 'YYYY-MM-DD') as announcements_expire, url,       template_id, stock_status, color_list, size_list, style_list,                   email_on_purchase_list, to_char(last_modified, 'YYYY-MM-DD') as last_modified,  last_modifying_user, modified_ip_address                                        from ec_products where product_id=:product_id
      } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/products/edit.xql}
dbqd.ecommerce.www.admin.products.edit.category_list_select {dbqd.ecommerce.www.admin.products.edit.category_list_select {
      select category_id from ec_category_product_map where product_id=:product_id
      } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/products/edit.xql}
dbqd.ecommerce.www.admin.products.edit.subcategory_list_select {dbqd.ecommerce.www.admin.products.edit.subcategory_list_select {
      select subcategory_id from ec_subcategory_product_map where product_id=:product_id
      } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/products/edit.xql}
dbqd.ecommerce.www.admin.products.edit.subsubcategory_list_select {dbqd.ecommerce.www.admin.products.edit.subsubcategory_list_select {
      select subsubcategory_id from ec_subsubcategory_product_map where product_id=:product_id
      } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/products/edit.xql}
dbqd.ecommerce.www.admin.products.edit.num_user_classes_select {dbqd.ecommerce.www.admin.products.edit.num_user_classes_select {
      select count(*) from ec_user_classes
      } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/products/edit.xql}
dbqd.ecommerce.www.admin.products.edit.user_classes_select {dbqd.ecommerce.www.admin.products.edit.user_classes_select {
      select user_class_id, user_class_name from ec_user_classes order by user_class_name
      } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/products/edit.xql}
dbqd.ecommerce.www.admin.products.edit.price_select {dbqd.ecommerce.www.admin.products.edit.price_select {
      select price from ec_product_user_class_prices where product_id=:product_id and user_class_id=:user_class_id
      } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/products/edit.xql}
dbqd.ecommerce.www.admin.products.edit.num_custom_product_fields_select {dbqd.ecommerce.www.admin.products.edit.num_custom_product_fields_select {
      select count(*) from ec_custom_product_fields where active_p='t'
      } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/products/edit.xql}
dbqd.ecommerce.www.admin.products.edit.custom_fields_select {dbqd.ecommerce.www.admin.products.edit.custom_fields_select {
      select field_identifier, field_name, default_value, column_type from ec_custom_product_fields where active_p='t' order by creation_date
      } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/products/edit.xql}
dbqd.ecommerce.www.admin.products.edit.custom_field_value_select {dbqd.ecommerce.www.admin.products.edit.custom_field_value_select {
      select $field_identifier from ec_custom_product_field_values where product_id=:product_id
      } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/products/edit.xql}
dbqd.ecommerce.www.admin.products.index.products_select {dbqd.ecommerce.www.admin.products.index.products_select {
      select count(*) as n_products, round(avg(price),2) as avg_price from ec_products_displayable
      } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/products/index.xql}
dbqd.ecommerce.www.admin.products.link-add-3-oracle.to_link_insert {dbqd.ecommerce.www.admin.products.link-add-3-oracle.to_link_insert {
      insert into ec_product_links
      (product_a, product_b, last_modified, last_modifying_user, modified_ip_address)
      values
      (:link_product_id, :product_id, sysdate, :user_id, :peeraddr)
      
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/ecommerce/www/admin/products/link-add-3-oracle.xql}
dbqd.ecommerce.www.admin.products.link-add-3-oracle.from_link_insert {dbqd.ecommerce.www.admin.products.link-add-3-oracle.from_link_insert {
      insert into ec_product_links
      (product_a, product_b, last_modified, last_modifying_user, modified_ip_address)
      values
      (:product_id, :link_product_id, sysdate, :user_id, :peeraddr)
      
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/ecommerce/www/admin/products/link-add-3-oracle.xql}
dbqd.ecommerce.www.admin.products.link-add-3.to_link_insert {dbqd.ecommerce.www.admin.products.link-add-3.to_link_insert {
      insert into ec_product_links
      (product_a, product_b, last_modified, last_modifying_user, modified_ip_address)
      values
      (:link_product_id, :product_id, current_timestamp, :user_id, :peeraddr)
      
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/ecommerce/www/admin/products/link-add-3-postgresql.xql}
dbqd.ecommerce.www.admin.products.link-add-3.from_link_insert {dbqd.ecommerce.www.admin.products.link-add-3.from_link_insert {
      insert into ec_product_links
      (product_a, product_b, last_modified, last_modifying_user, modified_ip_address)
      values
      (:product_id, :link_product_id, current_timestamp, :user_id, :peeraddr)
      
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/ecommerce/www/admin/products/link-add-3-postgresql.xql}
dbqd.ecommerce.www.admin.products.link-add-3.both_or_to_duplicate_check {dbqd.ecommerce.www.admin.products.link-add-3.both_or_to_duplicate_check {
      select count(*) from ec_product_links where product_a=:link_product_id and product_b=:product_id
      } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/products/link-add-3.xql}
dbqd.ecommerce.www.admin.products.link-add-3.both_or_from_duplicate_check {dbqd.ecommerce.www.admin.products.link-add-3.both_or_from_duplicate_check {
      select count(*) from ec_product_links where product_a=:product_id and product_b=:link_product_id
      } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/products/link-add-3.xql}
dbqd.ecommerce.www.admin.products.link-add.product_search_select {dbqd.ecommerce.www.admin.products.link-add.product_search_select {
      select product_id as link_product_id, product_name as link_product_name from ec_products where $additional_query_part
      } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/products/link-add.xql}
dbqd.ecommerce.www.admin.products.link-delete-2.link_delete {dbqd.ecommerce.www.admin.products.link-delete-2.link_delete {
      delete from ec_product_links where product_a=:product_a and product_b=:product_b
      } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/products/link-delete-2.xql}
dbqd.ecommerce.www.admin.products.link.linked_products_select {dbqd.ecommerce.www.admin.products.link.linked_products_select {
      
select product_b, product_name as product_b_name
from ec_product_links, ec_products
where product_a=:product_id
and product_b=ec_products.product_id

      } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/products/link.xql}
dbqd.ecommerce.www.admin.products.link.more_links_select {dbqd.ecommerce.www.admin.products.link.more_links_select {
      
select product_a, product_name as product_a_name
from ec_product_links, ec_products
where product_b=:product_id
and ec_product_links.product_a=ec_products.product_id

      } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/products/link.xql}
dbqd.ecommerce.www.admin.products.list-oracle.product_select {dbqd.ecommerce.www.admin.products.list-oracle.product_select {
      select ep.product_id, ep.product_name, ep.available_date, count(distinct eir.item_id) as n_items_ordered, count(distinct epc.comment_id) as n_comments
from ec_products ep, ec_items_reportable eir, ec_product_comments epc
where ep.product_id = eir.product_id(+) 
and ep.product_id = epc.product_id(+) $category_exclusion_clause
group by ep.product_id, ep.product_name, ep.available_date
$order_by_clause
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/ecommerce/www/admin/products/list-oracle.xql}
dbqd.ecommerce.www.admin.products.list.category_name_select {dbqd.ecommerce.www.admin.products.list.category_name_select {
      select category_name from ec_categories where category_id = :category_id
      } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/products/list.xql}
dbqd.ecommerce.www.admin.products.list.product_select {dbqd.ecommerce.www.admin.products.list.product_select {

select ep.product_id, ep.product_name, ep.available_date, count(distinct eir.item_id) as n_items_ordered, count(distinct epc.comment_id) as n_comments
from ec_products ep
	LEFT JOIN ec_items_reportable eir using (product_id)
	LEFT JOIN ec_product_comments epc on (ep.product_id = epc.product_id)
	$category_exclusion_clause
group by ep.product_id, ep.product_name, ep.available_date
$order_by_clause

      } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/products/list.xql}
dbqd.ecommerce.www.admin.products.offer-add-2-oracle.offer_insert {dbqd.ecommerce.www.admin.products.offer-add-2-oracle.offer_insert {
      
insert into ec_offers
(offer_id, product_id, retailer_id, price, shipping, stock_status,
 special_offer_p, special_offer_html, offer_begins,
 offer_ends $additional_column, last_modified, last_modifying_user,
 modified_ip_address)
values
(:offer_id, :product_id, :retailer_id, :price, :shipping, :stock_status,
 :special_offer_p, :special_offer_html,
 to_date(:offer_begins, 'YYYY-MM-DD HH24:MI:SS'),
 to_date(:offer_ends,'YYYY-MM-DD HH24:MI:SS') $additional_value, sysdate,
 :user_id, :peeraddr)

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/ecommerce/www/admin/products/offer-add-2-oracle.xql}
dbqd.ecommerce.www.admin.products.offer-add-2.offer_insert {dbqd.ecommerce.www.admin.products.offer-add-2.offer_insert {
      
insert into ec_offers
(offer_id, product_id, retailer_id, price, shipping, stock_status,
 special_offer_p, special_offer_html, offer_begins,
 offer_ends $additional_column, last_modified, last_modifying_user,
 modified_ip_address)
values
(:offer_id, :product_id, :retailer_id, :price, :shipping, :stock_status,
 :special_offer_p, :special_offer_html,
 to_date(:offer_begins, 'YYYY-MM-DD HH24:MI:SS'),
 to_date(:offer_ends,'YYYY-MM-DD HH24:MI:SS') $additional_value, current_timestamp,
 :user_id, :peeraddr)

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/ecommerce/www/admin/products/offer-add-2-postgresql.xql}
dbqd.ecommerce.www.admin.products.offer-add-2.doubleclick_select {dbqd.ecommerce.www.admin.products.offer-add-2.doubleclick_select {
      select count(*) from ec_offers where offer_id=:offer_id
      } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/products/offer-add-2.xql}
dbqd.ecommerce.www.admin.products.offer-add.duplicate_offer_select {dbqd.ecommerce.www.admin.products.offer-add.duplicate_offer_select {
      
select count(*) from ec_offers
where product_id=:product_id
and retailer_id=:retailer_id
and deleted_p='f'
and (($to_date_offer_begins >= offer_begins and $to_date_offer_begins <= offer_ends) or ($to_date_offer_ends >= offer_begins and $to_date_offer_ends <= offer_ends) or ($to_date_offer_begins <= offer_ends and $to_date_offer_ends >= offer_ends))

      } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/products/offer-add.xql}
dbqd.ecommerce.www.admin.products.offer-add.retailer_name_select {dbqd.ecommerce.www.admin.products.offer-add.retailer_name_select {

select retailer_name || ' (' || case when reach = 'web' then url else city || ', ' || usps_abbrev end || ')'  from ec_retailers where retailer_id=:retailer_id

      } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/products/offer-add.xql}
dbqd.ecommerce.www.admin.products.offer-delete-2-oracle.offer_delete_update {dbqd.ecommerce.www.admin.products.offer-delete-2-oracle.offer_delete_update {
      
update ec_offers
set deleted_p=:deleted_p,
    last_modified=sysdate,
    last_modifying_user=:user_id,
    modified_ip_address=:peeraddr
where product_id=:product_id
and retailer_id=:retailer_id

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/ecommerce/www/admin/products/offer-delete-2-oracle.xql}
dbqd.ecommerce.www.admin.products.offer-delete-2.offer_delete_update {dbqd.ecommerce.www.admin.products.offer-delete-2.offer_delete_update {
      
update ec_offers
set deleted_p=:deleted_p,
    last_modified=current_timestamp,
    last_modifying_user=:user_id,
    modified_ip_address=:peeraddr
where product_id=:product_id
and retailer_id=:retailer_id

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/ecommerce/www/admin/products/offer-delete-2-postgresql.xql}
dbqd.ecommerce.www.admin.products.offer-edit-2.duplicate_offer_select {dbqd.ecommerce.www.admin.products.offer-edit-2.duplicate_offer_select {
      select count(*) from ec_offers
where product_id=:product_id
and retailer_id=:retailer_id
and offer_id != :offer_id
and deleted_p='f'
and (($to_date_offer_begins >= offer_begins and $to_date_offer_begins <= offer_ends) or ($to_date_offer_ends >= offer_begins and $to_date_offer_ends <= offer_ends) or ($to_date_offer_begins <= offer_ends and $to_date_offer_ends >= offer_ends))

      } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/products/offer-edit-2.xql}
dbqd.ecommerce.www.admin.products.offer-edit-2.retailer_name_select {dbqd.ecommerce.www.admin.products.offer-edit-2.retailer_name_select {
      select retailer_name || ' (' || city || ', ' || usps_abbrev || ')' as retailer_name_to_print from ec_retailers where retailer_id=:retailer_id
      } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/products/offer-edit-2.xql}
dbqd.ecommerce.www.admin.products.offer-edit-3-oracle.unused {dbqd.ecommerce.www.admin.products.offer-edit-3-oracle.unused {
      
update ec_offers
set retailer_id = :retailer_id,
    price = :price,
    shipping = :shipping,
    stock_status = :stock_status,
    special_offer_p = :special_offer_p,
    special_offer_html = :special_offer_html,
    offer_begins = to_date(:offer_begins, 'YYYY-MM-DD HH24:MI:SS'),
    offer_ends = to_date(:offer_ends, 'YYYY-MM-DD HH24:MI:SS') $additional_thing_to_insert,
    last_modified = sysdate,
    last_modifying_user = :user_id,
    modified_ip_address = :peeraddr
where offer_id = :offer_id

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/ecommerce/www/admin/products/offer-edit-3-oracle.xql}
dbqd.ecommerce.www.admin.products.offer-edit-3.unused {dbqd.ecommerce.www.admin.products.offer-edit-3.unused {
      
update ec_offers
set retailer_id = :retailer_id,
    price = :price,
    shipping = :shipping,
    stock_status = :stock_status,
    special_offer_p = :special_offer_p,
    special_offer_html = :special_offer_html,
    offer_begins = to_date(:offer_begins, 'YYYY-MM-DD HH24:MI:SS'),
    offer_ends = to_date(:offer_ends, 'YYYY-MM-DD HH24:MI:SS') $additional_thing_to_insert,
    last_modified = current_timestamp,
    last_modifying_user = :user_id,
    modified_ip_address = :peeraddr
where offer_id = :offer_id

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/ecommerce/www/admin/products/offer-edit-3-postgresql.xql}
dbqd.ecommerce.www.admin.products.offer-edit.retailer_select {dbqd.ecommerce.www.admin.products.offer-edit.retailer_select {
      
select retailer_name, retailer_id, city, usps_abbrev
from ec_retailers
order by retailer_name

      } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/products/offer-edit.xql}
dbqd.ecommerce.www.admin.products.offer-edit.offer_select {dbqd.ecommerce.www.admin.products.offer-edit.offer_select {
      
select price, shipping, stock_status, shipping_unavailable_p, offer_begins,
       offer_ends, special_offer_p, special_offer_html from ec_offers
where offer_id=:offer_id

      } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/products/offer-edit.xql}
dbqd.ecommerce.www.admin.products.offers-oracle.offers_select {dbqd.ecommerce.www.admin.products.offers-oracle.offers_select {
      
select o.offer_id, o.retailer_id, r.retailer_name, price, shipping,
       stock_status, special_offer_p, special_offer_html,
       shipping_unavailable_p, offer_begins, offer_ends, o.deleted_p,
       case when sign(sysdate-offer_begins) = 1 then 1 else 0 end as offer_begun_p,
       case when sign(sysdate-offer_ends) = 1 then 1 else 0 end as offer_expired_p
from ec_offers_current o, ec_retailers r
where o.retailer_id=r.retailer_id
and o.product_id=:product_id
order by o.last_modified desc

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/ecommerce/www/admin/products/offers-oracle.xql}
dbqd.ecommerce.www.admin.products.offers-oracle.non_current_offers_select {dbqd.ecommerce.www.admin.products.offers-oracle.non_current_offers_select {
      
select o.offer_id, o.retailer_id, retailer_name, price, shipping,
       stock_status, special_offer_p, special_offer_html,
       shipping_unavailable_p, offer_begins, offer_ends, o.deleted_p,
       case when sign(sysdate-offer_begins) = 1 then 1 else 0 end as offer_begun_p,
       case when sign(sysdate-offer_ends) = 1 then 1 else 0 end as offer_expired_p
from ec_offers o, ec_retailers r
where o.retailer_id=r.retailer_id
    and o.product_id=:product_id
    and (o.deleted_p='t' or o.offer_begins - sysdate > 0 or o.offer_ends - sysdate < 0)
order by o.last_modified desc
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/ecommerce/www/admin/products/offers-oracle.xql}
dbqd.ecommerce.www.admin.products.offers.offers_select {dbqd.ecommerce.www.admin.products.offers.offers_select {
      
select o.offer_id, o.retailer_id, r.retailer_name, price, shipping,
       stock_status, special_offer_p, special_offer_html,
       shipping_unavailable_p, offer_begins, offer_ends, o.deleted_p,
       case when current_timestamp > offer_begins then 1 else 0 end as offer_begun_p,
       case when current_timestamp > offer_ends then 1 else 0 end as offer_expired_p
from ec_offers_current o, ec_retailers r
where o.retailer_id=r.retailer_id
and o.product_id=:product_id
order by o.last_modified desc

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/ecommerce/www/admin/products/offers-postgresql.xql}
dbqd.ecommerce.www.admin.products.offers.non_current_offers_select {dbqd.ecommerce.www.admin.products.offers.non_current_offers_select {
      
select o.offer_id, o.retailer_id, retailer_name, price, shipping,
       stock_status, special_offer_p, special_offer_html,
       shipping_unavailable_p, offer_begins, offer_ends, o.deleted_p,
       case when current_timestamp > offer_begins then 1 else 0 end as offer_begun_p,
       case when current_timestamp > offer_ends then 1 else 0 end as offer_expired_p
from ec_offers o, ec_retailers r
where o.retailer_id=r.retailer_id
    and o.product_id=:product_id
    and (o.deleted_p='t' or o.offer_begins > current_timestamp or o.offer_ends < current_timestamp)
order by o.last_modified desc
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/ecommerce/www/admin/products/offers-postgresql.xql}
dbqd.ecommerce.www.admin.products.offers.retailer_select {dbqd.ecommerce.www.admin.products.offers.retailer_select {

select retailer_name, retailer_id, case when reach = 'web' then url else city || ', ' || usps_abbrev end as location
from ec_retailers order by retailer_name

      } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/products/offers.xql}
dbqd.ecommerce.www.admin.products.one.product_select {dbqd.ecommerce.www.admin.products.one.product_select {
      select * 
      from ec_products 
      where product_id = :product_id
    } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/products/one.xql}
dbqd.ecommerce.www.admin.products.one.custom_fields_select {dbqd.ecommerce.www.admin.products.one.custom_fields_select {
      select * 
      from ec_custom_product_field_values 
      where product_id = :product_id
    } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/products/one.xql}
dbqd.ecommerce.www.admin.products.one.categories_select {dbqd.ecommerce.www.admin.products.one.categories_select {
      select category_id 
      from ec_category_product_map 
      where product_id = :product_id
    } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/products/one.xql}
dbqd.ecommerce.www.admin.products.one.subcategories_select {dbqd.ecommerce.www.admin.products.one.subcategories_select {
      select subcategory_id 
      from ec_subcategory_product_map 
      where product_id = :product_id
    } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/products/one.xql}
dbqd.ecommerce.www.admin.products.one.subsubcategories_select {dbqd.ecommerce.www.admin.products.one.subsubcategories_select {
      select subsubcategory_id 
      from ec_subsubcategory_product_map 
      where product_id = :product_id
    } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/products/one.xql}
dbqd.ecommerce.www.admin.products.one.n_professional_reviews_select {dbqd.ecommerce.www.admin.products.one.n_professional_reviews_select {
      select count(*) 
      from ec_product_reviews 
      where product_id = :product_id
    } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/products/one.xql}
dbqd.ecommerce.www.admin.products.one.n_customer_reviews_select {dbqd.ecommerce.www.admin.products.one.n_customer_reviews_select {
      select count(*) 
      from ec_product_comments 
      where product_id = :product_id
    } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/products/one.xql}
dbqd.ecommerce.www.admin.products.one.n_links_to_select {dbqd.ecommerce.www.admin.products.one.n_links_to_select {
      select count(*) 
      from ec_product_links
      where product_b = :product_id
    } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/products/one.xql}
dbqd.ecommerce.www.admin.products.one.n_links_from_select {dbqd.ecommerce.www.admin.products.one.n_links_from_select {
      select count(*) 
      from ec_product_links
      where product_a = :product_id
    } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/products/one.xql}
dbqd.ecommerce.www.admin.products.one.sale_select {dbqd.ecommerce.www.admin.products.one.sale_select {
      select count(*) 
      from ec_sale_prices_current 
      where product_id = :product_id
    } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/products/one.xql}
dbqd.ecommerce.www.admin.products.one.user_class_select {dbqd.ecommerce.www.admin.products.one.user_class_select {
      select user_class_id, user_class_name
      from ec_user_classes 
      order by user_class_name
    } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/products/one.xql}
dbqd.ecommerce.www.admin.products.one.temp_price_select {dbqd.ecommerce.www.admin.products.one.temp_price_select {
      select price 
      from ec_product_user_class_prices
      where product_id = :product_id
      and user_class_id = :user_class_id
    } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/products/one.xql}
dbqd.ecommerce.www.admin.products.one.custom_fields_interation {dbqd.ecommerce.www.admin.products.one.custom_fields_interation {
      select field_identifier, field_name, column_type 
      from ec_custom_product_fields 
      where active_p = 't'
    } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/products/one.xql}
dbqd.ecommerce.www.admin.products.one.template_name_select {dbqd.ecommerce.www.admin.products.one.template_name_select {
      select template_name
      from ec_templates
      where template_id = :template_id
    } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/products/one.xql}
dbqd.ecommerce.www.admin.products.recommendation-add-3.user_class_select {dbqd.ecommerce.www.admin.products.recommendation-add-3.user_class_select {
      select user_class_name from ec_user_classes where user_class_id=:user_class_id
      } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/products/recommendation-add-3.xql}
dbqd.ecommerce.www.admin.products.recommendation-add-4-oracle.recommendation_insert {dbqd.ecommerce.www.admin.products.recommendation-add-4-oracle.recommendation_insert {
      insert into ec_product_recommendations
(recommendation_id, product_id, user_class_id, recommendation_text, active_p, category_id, subcategory_id, subsubcategory_id, 
last_modified, last_modifying_user, modified_ip_address)
values
(:recommendation_id, :product_id, :user_class_id, :recommendation_text, 't', :category_id, :subcategory_id, :subsubcategory_id,
sysdate, :user_id, :peeraddr)

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/ecommerce/www/admin/products/recommendation-add-4-oracle.xql}
dbqd.ecommerce.www.admin.products.recommendation-add-4.recommendation_insert {dbqd.ecommerce.www.admin.products.recommendation-add-4.recommendation_insert {
      insert into ec_product_recommendations
(recommendation_id, product_id, user_class_id, recommendation_text, active_p, category_id, subcategory_id, subsubcategory_id, 
last_modified, last_modifying_user, modified_ip_address)
values
(:recommendation_id, :product_id, :user_class_id, :recommendation_text, 't', :category_id, :subcategory_id, :subsubcategory_id,
current_timestamp, :user_id, :peeraddr)

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/ecommerce/www/admin/products/recommendation-add-4-postgresql.xql}
dbqd.ecommerce.www.admin.products.recommendation-add-4.n_occurrences_select {dbqd.ecommerce.www.admin.products.recommendation-add-4.n_occurrences_select {
      select count(*) from ec_product_recommendations where recommendation_id=:recommendation_id
      } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/products/recommendation-add-4.xql}
dbqd.ecommerce.www.admin.products.recommendation-add.product_search_select {dbqd.ecommerce.www.admin.products.recommendation-add.product_search_select {
      
select product_name, product_id
from ec_products
where upper(product_name) like '%' || upper(:product_name_query) || '%'

      } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/products/recommendation-add.xql}
dbqd.ecommerce.www.admin.products.recommendation-delete-2.recommendation_delete {dbqd.ecommerce.www.admin.products.recommendation-delete-2.recommendation_delete {
      delete from ec_product_recommendations where recommendation_id=:recommendation_id
      } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/products/recommendation-delete-2.xql}
dbqd.ecommerce.www.admin.products.recommendation-delete.recommendation_select {dbqd.ecommerce.www.admin.products.recommendation-delete.recommendation_select {
      select r.*, p.product_name
from ec_product_recommendations r, ec_products p
where recommendation_id=:recommendation_id
and r.product_id=p.product_id
      } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/products/recommendation-delete.xql}
dbqd.ecommerce.www.admin.products.recommendation-delete.user_class_name_select {dbqd.ecommerce.www.admin.products.recommendation-delete.user_class_name_select {
      select user_class_name from ec_user_classes where user_class_id=:user_class_id
      } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/products/recommendation-delete.xql}
dbqd.ecommerce.www.admin.products.recommendation-text-edit-2-oracle.recommendation_text_update {dbqd.ecommerce.www.admin.products.recommendation-text-edit-2-oracle.recommendation_text_update {
      
update ec_product_recommendations 
set recommendation_text = :recommendation_text,
    last_modified=sysdate,
    last_modifying_user=:user_id,
    modified_ip_address=:peeraddr
where recommendation_id=:recommendation_id

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/ecommerce/www/admin/products/recommendation-text-edit-2-oracle.xql}
dbqd.ecommerce.www.admin.products.recommendation-text-edit-2.recommendation_text_update {dbqd.ecommerce.www.admin.products.recommendation-text-edit-2.recommendation_text_update {
      
update ec_product_recommendations 
set recommendation_text = :recommendation_text,
    last_modified=current_timestamp,
    last_modifying_user=:user_id,
    modified_ip_address=:peeraddr
where recommendation_id=:recommendation_id

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/ecommerce/www/admin/products/recommendation-text-edit-2-postgresql.xql}
dbqd.ecommerce.www.admin.products.recommendation-text-edit.recommendation_select {dbqd.ecommerce.www.admin.products.recommendation-text-edit.recommendation_select {
      select r.*, p.product_name
from ec_product_recommendations r, ec_products p
where recommendation_id=$recommendation_id

and r.product_id=p.product_id
      } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/products/recommendation-text-edit.xql}
dbqd.ecommerce.www.admin.products.recommendation.recommendation_select {dbqd.ecommerce.www.admin.products.recommendation.recommendation_select {
      select r.*, p.product_name
from  ec_recommendations_cats_view r, ec_products p
where recommendation_id=:recommendation_id
and r.product_id=p.product_id
      } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/products/recommendation.xql}
dbqd.ecommerce.www.admin.products.recommendation.user_class_name_select {dbqd.ecommerce.www.admin.products.recommendation.user_class_name_select {
      select user_class_name from ec_user_classes where user_class_id=:user_class_id
      } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/products/recommendation.xql}
dbqd.ecommerce.www.admin.products.recommendations-oracle.recommendations_select {dbqd.ecommerce.www.admin.products.recommendations-oracle.recommendations_select {
      select r.recommendation_id, r.the_category_name, r.the_subcategory_name, r.the_subsubcategory_name, p.product_name, c.user_class_name
      from ec_recommendations_cats_view r, ec_products p, ec_user_classes c
      where r.product_id=p.product_id and r.user_class_id = c.user_class_id(+) and r.active_p='t'
      order by DECODE(the_category_name,null,0,1), upper(the_category_name), 
      upper(the_subcategory_name),
      upper(the_subsubcategory_name)
    } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/ecommerce/www/admin/products/recommendations-oracle.xql}
dbqd.ecommerce.www.admin.products.recommendations.recommendations_select {dbqd.ecommerce.www.admin.products.recommendations.recommendations_select {
      select r.recommendation_id, r.the_category_name, r.the_subcategory_name, r.the_subsubcategory_name, p.product_name, c.user_class_name
      from ec_recommendations_cats_view r
      join ec_products p using (product_id)
      left join ec_user_classes c on (r.user_class_id = c.user_class_id)
      where r.active_p='t'
      order by case when the_category_name is null then 0 else 1 end, upper(the_category_name), upper(the_subcategory_name), upper(the_subsubcategory_name)
    } {} {} {postgresql 7.1} c:/web/openacs-4/packages/ecommerce/www/admin/products/recommendations-postgresql.xql}
dbqd.ecommerce.www.admin.products.review-add-2-oracle.review_insert {dbqd.ecommerce.www.admin.products.review-add-2-oracle.review_insert {
      insert into ec_product_reviews
(review_id, product_id, publication, author_name, review, display_p, review_date, last_modified, last_modifying_user, modified_ip_address)
values
(:review_id, :product_id, :publication, :author_name, :review, :display_p, to_date(:review_date, 'YYYY-MM-DD HH24:MI:SS'), sysdate, :user_id, :peeraddr)

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/ecommerce/www/admin/products/review-add-2-oracle.xql}
dbqd.ecommerce.www.admin.products.review-add-2.review_insert {dbqd.ecommerce.www.admin.products.review-add-2.review_insert {
      insert into ec_product_reviews
(review_id, product_id, publication, author_name, review, display_p, review_date, last_modified, last_modifying_user, modified_ip_address)
values
(:review_id, :product_id, :publication, :author_name, :review, :display_p, to_date(:review_date, 'YYYY-MM-DD HH24:MI:SS'), current_timestamp, :user_id, :peeraddr)

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/ecommerce/www/admin/products/review-add-2-postgresql.xql}
dbqd.ecommerce.www.admin.products.review-add-2.doubleclick_select {dbqd.ecommerce.www.admin.products.review-add-2.doubleclick_select {
      select count(*) from ec_product_reviews where review_id=:review_id
      } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/products/review-add-2.xql}
dbqd.ecommerce.www.admin.products.review-edit-oracle.product_review_update {dbqd.ecommerce.www.admin.products.review-edit-oracle.product_review_update {
      
update ec_product_reviews
set product_id=:product_id,
    publication=:publication,
    author_name=:author_name,
    review_date=[ec_datetime_sql review_date],
    review=:review,
    display_p=:display_p,
    last_modified=sysdate,
    last_modifying_user=:user_id,
    modified_ip_address=:peeraddr
where review_id=:review_id

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/ecommerce/www/admin/products/review-edit-oracle.xql}
dbqd.ecommerce.www.admin.products.review-edit.product_review_update {dbqd.ecommerce.www.admin.products.review-edit.product_review_update {
      
update ec_product_reviews
set product_id=:product_id,
    publication=:publication,
    author_name=:author_name,
    review_date=[ec_datetime_sql review_date],
    review=:review,
    display_p=:display_p,
    last_modified=current_timestamp,
    last_modifying_user=:user_id,
    modified_ip_address=:peeraddr
where review_id=:review_id

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/ecommerce/www/admin/products/review-edit-postgresql.xql}
dbqd.ecommerce.www.admin.products.review.review_select {dbqd.ecommerce.www.admin.products.review.review_select {
      select * from ec_product_reviews where review_id=:review_id
      } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/products/review.xql}
dbqd.ecommerce.www.admin.products.reviews.product_reviews_select {dbqd.ecommerce.www.admin.products.reviews.product_reviews_select {
      
select review_id, author_name, publication, review_date, display_p
from ec_product_reviews
where product_id=:product_id

      } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/products/reviews.xql}
dbqd.ecommerce.www.admin.products.sale-price-add-2-oracle.sale_insert {dbqd.ecommerce.www.admin.products.sale-price-add-2-oracle.sale_insert {
      insert into ec_sale_prices
(sale_price_id, product_id, sale_price, sale_begins, sale_ends, sale_name, offer_code, last_modified, last_modifying_user, modified_ip_address)
values
(:sale_price_id, :product_id, :sale_price, to_date(:sale_begins,'YYYY-MM-DD HH24:MI:SS'), to_date(:sale_ends,'YYYY-MM-DD HH24:MI:SS'), :sale_name, :offer_code, sysdate, :user_id, :peeraddr)
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/ecommerce/www/admin/products/sale-price-add-2-oracle.xql}
dbqd.ecommerce.www.admin.products.sale-price-add-2.sale_insert {dbqd.ecommerce.www.admin.products.sale-price-add-2.sale_insert {
      insert into ec_sale_prices
(sale_price_id, product_id, sale_price, sale_begins, sale_ends, sale_name, offer_code, last_modified, last_modifying_user, modified_ip_address)
values
(:sale_price_id, :product_id, :sale_price, to_date(:sale_begins,'YYYY-MM-DD HH24:MI:SS'), to_date(:sale_ends,'YYYY-MM-DD HH24:MI:SS'), :sale_name, :offer_code, current_timestamp, :user_id, :peeraddr)
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/ecommerce/www/admin/products/sale-price-add-2-postgresql.xql}
dbqd.ecommerce.www.admin.products.sale-price-add-2.doubleclick_select {dbqd.ecommerce.www.admin.products.sale-price-add-2.doubleclick_select {
      select count(*) from ec_sale_prices where sale_price_id=:sale_price_id
      } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/products/sale-price-add-2.xql}
dbqd.ecommerce.www.admin.products.sale-price-add-oracle.select_one {dbqd.ecommerce.www.admin.products.sale-price-add-oracle.select_one {
      select 1 from dual where to_date('$sale_begins(date)','YYYY-MM-DD HH24:MI:SS')  >to_date('$sale_ends(date)', 'YYYY-MM-DD HH24:MI:SS')
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/ecommerce/www/admin/products/sale-price-add-oracle.xql}
dbqd.ecommerce.www.admin.products.sale-price-add.select_one {dbqd.ecommerce.www.admin.products.sale-price-add.select_one {
      select 1  where to_date('$sale_begins(date)','YYYY-MM-DD HH24:MI:SS')  >to_date('$sale_ends(date)', 'YYYY-MM-DD HH24:MI:SS')
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/ecommerce/www/admin/products/sale-price-add-postgresql.xql}
dbqd.ecommerce.www.admin.products.sale-price-edit-3-oracle.sale_price_update {dbqd.ecommerce.www.admin.products.sale-price-edit-3-oracle.sale_price_update {
      
update ec_sale_prices
set sale_price=:sale_price,
    sale_begins=to_date(:sale_begins,'YYYY-MM-DD HH24:MI:SS'),
    sale_ends=to_date(:sale_ends,'YYYY-MM-DD HH24:MI:SS'),
    sale_name=:sale_name,
    offer_code=:offer_code,
    last_modified=sysdate,
    last_modifying_user=:user_id,
    modified_ip_address=:peeraddr
where sale_price_id=:sale_price_id

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/ecommerce/www/admin/products/sale-price-edit-3-oracle.xql}
dbqd.ecommerce.www.admin.products.sale-price-edit-3.sale_price_update {dbqd.ecommerce.www.admin.products.sale-price-edit-3.sale_price_update {
      update ec_sale_prices
      set sale_price=:sale_price,
      sale_begins = to_date(:sale_begins,'YYYY-MM-DD HH24:MI:SS'),
      sale_ends = to_date(:sale_ends,'YYYY-MM-DD HH24:MI:SS'),
      sale_name=:sale_name,
      offer_code=:offer_code,
      last_modified = current_timestamp,
      last_modifying_user = :user_id,
      modified_ip_address = :peeraddr
      where sale_price_id = :sale_price_id
    } {} {} {postgresql 7.1} c:/web/openacs-4/packages/ecommerce/www/admin/products/sale-price-edit-3-postgresql.xql}
dbqd.ecommerce.www.admin.products.sale-price-edit-oracle.sale_price_select {dbqd.ecommerce.www.admin.products.sale-price-edit-oracle.sale_price_select {
      select sale_price, to_char(sale_begins,'YYYY-MM-DD HH24:MI:SS') as sale_begins, to_char(sale_ends,'YYYY-MM-DD HH24:MI:SS') as sale_ends, sale_name, offer_code from ec_sale_prices where sale_price_id=:sale_price_id
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/ecommerce/www/admin/products/sale-price-edit-oracle.xql}
dbqd.ecommerce.www.admin.products.sale-price-edit.sale_price_select {dbqd.ecommerce.www.admin.products.sale-price-edit.sale_price_select {
      select sale_price, to_char(sale_begins,'YYYY-MM-DD HH24:MI:SS') as sale_begins, to_char(sale_ends,'YYYY-MM-DD HH24:MI:SS') as sale_ends, sale_name, offer_code from ec_sale_prices where sale_price_id=:sale_price_id
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/ecommerce/www/admin/products/sale-price-edit-postgresql.xql}
dbqd.ecommerce.www.admin.products.sale-price-expire-2-oracle.expire_sale_update {dbqd.ecommerce.www.admin.products.sale-price-expire-2-oracle.expire_sale_update {
      
update ec_sale_prices
set sale_ends=sysdate,
    last_modified=sysdate,
    last_modifying_user=:user_id,
    modified_ip_address=:peeraddr
where sale_price_id=:sale_price_id

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/ecommerce/www/admin/products/sale-price-expire-2-oracle.xql}
dbqd.ecommerce.www.admin.products.sale-price-expire-2.expire_sale_update {dbqd.ecommerce.www.admin.products.sale-price-expire-2.expire_sale_update {
      
update ec_sale_prices
set sale_ends=current_timestamp,
    last_modified=current_timestamp,
    last_modifying_user=:user_id,
    modified_ip_address=:peeraddr
where sale_price_id=:sale_price_id

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/ecommerce/www/admin/products/sale-price-expire-2-postgresql.xql}
dbqd.ecommerce.www.admin.products.sale-prices-oracle.current_sales_select {dbqd.ecommerce.www.admin.products.sale-prices-oracle.current_sales_select {
      select sale_price_id, sale_name, sale_price, offer_code, to_char(sale_begins,'YYYY-MM-DD HH24:MI:SS') as sale_begins, to_char(sale_ends,'YYYY-MM-DD HH24:MI:SS') as sale_ends, case when sign(sysdate-sale_begins) = 1 then 1 else 0 end as sale_begun_p, case when sign(sysdate-sale_ends) = 1 then 1 else 0 end as sale_expired_p
from ec_sale_prices_current
where product_id=:product_id
order by last_modified desc
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/ecommerce/www/admin/products/sale-prices-oracle.xql}
dbqd.ecommerce.www.admin.products.sale-prices-oracle.non_current_sales_select {dbqd.ecommerce.www.admin.products.sale-prices-oracle.non_current_sales_select {
      select sale_price_id, sale_name, sale_price, offer_code, to_char(sale_begins,'YYYY-MM-DD HH24:MI:SS') as sale_begins, to_char(sale_ends,'YYYY-MM-DD HH24:MI:SS') as sale_ends, case when sign(sysdate-sale_begins) = 1 then 1 else 0 end as sale_begun_p, case when sign(sysdate-sale_ends) = 1 then 1 else 0 end as sale_expired_p
from ec_sale_prices
where product_id=:product_id
and (sale_begins - sysdate > 0 or sale_ends - sysdate < 0)
order by last_modified desc
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/ecommerce/www/admin/products/sale-prices-oracle.xql}
dbqd.ecommerce.www.admin.products.sale-prices.current_sales_select {dbqd.ecommerce.www.admin.products.sale-prices.current_sales_select {
      select sale_price_id, sale_name, sale_price, offer_code, to_char(sale_begins,'YYYY-MM-DD HH24:MI:SS') as sale_begins, to_char(sale_ends,'YYYY-MM-DD HH24:MI:SS') as sale_ends, case when current_timestamp > sale_begins then 1 else 0 end as sale_begun_p, case when current_timestamp > sale_ends  then 1 else 0 end as sale_expired_p
from ec_sale_prices_current
where product_id=:product_id
order by last_modified desc
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/ecommerce/www/admin/products/sale-prices-postgresql.xql}
dbqd.ecommerce.www.admin.products.sale-prices.non_current_sales_select {dbqd.ecommerce.www.admin.products.sale-prices.non_current_sales_select {
      select sale_price_id, sale_name, sale_price, offer_code, to_char(sale_begins,'YYYY-MM-DD HH24:MI:SS') as sale_begins, to_char(sale_ends,'YYYY-MM-DD HH24:MI:SS') as sale_ends, case when current_timestamp > sale_begins then 1 else 0 end as sale_begun_p, case when current_timestamp > sale_ends then 1 else 0 end as sale_expired_p
from ec_sale_prices
where product_id=:product_id
and (sale_begins > current_timestamp or sale_ends < current_timestamp)
order by last_modified desc
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/ecommerce/www/admin/products/sale-prices-postgresql.xql}
dbqd.ecommerce.www.admin.products.search.product_search_select {dbqd.ecommerce.www.admin.products.search.product_search_select {
      select product_id, product_name from ec_products where $additional_query_part
      } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/products/search.xql}
dbqd.ecommerce.www.admin.products.subsubcategory-property-toggle.update_subsub_product_map {dbqd.ecommerce.www.admin.products.subsubcategory-property-toggle.update_subsub_product_map {
      update ec_subsubcategory_product_map
set $thing_to_update
where product_id=:product_id
      } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/products/subsubcategory-property-toggle.xql}
dbqd.ecommerce.www.admin.products.supporting-file-delete-2.dirname_select {dbqd.ecommerce.www.admin.products.supporting-file-delete-2.dirname_select {
      select dirname from ec_products where product_id=:product_id
      } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/products/supporting-file-delete-2.xql}
dbqd.ecommerce.www.admin.products.supporting-files-upload-2.dirname_select {dbqd.ecommerce.www.admin.products.supporting-files-upload-2.dirname_select {
      select dirname from ec_products where product_id=:product_id
      } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/products/supporting-files-upload-2.xql}
dbqd.ecommerce.www.admin.products.supporting-files-upload.dirname_select {dbqd.ecommerce.www.admin.products.supporting-files-upload.dirname_select {
      select dirname from ec_products where product_id=$product_id
      } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/products/supporting-files-upload.xql}
dbqd.ecommerce.www.admin.products.toggle-active-p-oracle.toggle_active_p_update {dbqd.ecommerce.www.admin.products.toggle-active-p-oracle.toggle_active_p_update {
      
update ec_products 
set active_p = logical_negation(active_p),
    last_modified = sysdate, 
    last_modifying_user = :user_id,
    modified_ip_address = :peeraddr
where product_id = :product_id

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/ecommerce/www/admin/products/toggle-active-p-oracle.xql}
dbqd.ecommerce.www.admin.products.toggle-active-p.toggle_active_p_update {dbqd.ecommerce.www.admin.products.toggle-active-p.toggle_active_p_update {
      
update ec_products 
set active_p = util__logical_negation(active_p),
    last_modified = current_timestamp, 
    last_modifying_user = :user_id,
    modified_ip_address = :peeraddr
where product_id = :product_id

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/ecommerce/www/admin/products/toggle-active-p-postgresql.xql}
dbqd.ecommerce.www.admin.products.toggle-active-p.is_product_active_p {dbqd.ecommerce.www.admin.products.toggle-active-p.is_product_active_p {
      select active_p 
      from ec_products 
      where product_id = :product_id
    } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/products/toggle-active-p.xql}
dbqd.ecommerce.www.admin.products.toggle-no-shipping-avail-p-oracle.toggle_no_shipping_avail_p_update {dbqd.ecommerce.www.admin.products.toggle-no-shipping-avail-p-oracle.toggle_no_shipping_avail_p_update {
      
update ec_products 
set no_shipping_avail_p = logical_negation(no_shipping_avail_p),
    last_modified = sysdate, 
    last_modifying_user = :user_id,
    modified_ip_address = :peeraddr
where product_id = :product_id

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/ecommerce/www/admin/products/toggle-no-shipping-avail-p-oracle.xql}
dbqd.ecommerce.www.admin.products.toggle-no-shipping-avail-p.toggle_no_shipping_avail_p_update {dbqd.ecommerce.www.admin.products.toggle-no-shipping-avail-p.toggle_no_shipping_avail_p_update {
      
update ec_products 
set no_shipping_avail_p = util__logical_negation(no_shipping_avail_p),
    last_modified = current_timestamp, 
    last_modifying_user = :user_id,
    modified_ip_address = :peeraddr
where product_id = :product_id

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/ecommerce/www/admin/products/toggle-no-shipping-avail-p-postgresql.xql}
dbqd.ecommerce.www.admin.products.upload-2-oracle.custom_product_field_insert {dbqd.ecommerce.www.admin.products.upload-2-oracle.custom_product_field_insert {
      insert into ec_custom_product_field_values (product_id, last_modified, last_modifying_user, modified_ip_address) values (:val_$product_id_column, sysdate, :user_id, :peeraddr)
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/ecommerce/www/admin/products/upload-2-oracle.xql}
dbqd.ecommerce.www.admin.products.upload-2.product_check {dbqd.ecommerce.www.admin.products.upload-2.product_check {
      select product_id from ec_products 
      where sku = :sku;
    } {} {} {postgresql 7.1} c:/web/openacs-4/packages/ecommerce/www/admin/products/upload-2-postgresql.xql}
dbqd.ecommerce.www.admin.products.upload-2.product_update {dbqd.ecommerce.www.admin.products.upload-2.product_update {
      update ec_products set
      last_modifying_user = :user_id,
      product_name = :product_name,
      price = :price,
      one_line_description = :one_line_description,
      detailed_description = :detailed_description,
      search_keywords = :search_keywords,
      present_p = :present_p,
      stock_status = :stock_status,
      last_modified = now(),
      color_list = :color_list,
      size_list = :size_list,
      style_list = :style_list,
      email_on_purchase_list = :email_on_purchase_list,
      url = :url,
      no_shipping_avail_p = :no_shipping_avail_p,
      shipping = :shipping,
      shipping_additional = :shipping_additional,
      weight = :weight,
      active_p = 't',
      template_id = :template_id
      where product_id = :product_id;
    } {} {} {postgresql 7.1} c:/web/openacs-4/packages/ecommerce/www/admin/products/upload-2-postgresql.xql}
dbqd.ecommerce.www.admin.products.upload-2.product_insert {dbqd.ecommerce.www.admin.products.upload-2.product_insert {
      select ec_product__new(
      :product_id,
      :user_id,
      :context_id,
      :product_name, 
      :price, 
      :sku,
      :one_line_description, 
      :detailed_description, 
      :search_keywords, 
      :present_p, 
      :stock_status,
      :dirname, 
      now(),
      :color_list, 
      :size_list, 
      :peeraddr
      );
    } {} {} {postgresql 7.1} c:/web/openacs-4/packages/ecommerce/www/admin/products/upload-2-postgresql.xql}
dbqd.ecommerce.www.admin.products.upload-2.product_insert_2 {dbqd.ecommerce.www.admin.products.upload-2.product_insert_2 {
      update ec_products set style_list = :style_list,
      email_on_purchase_list = :email_on_purchase_list,
      url = :url,
      no_shipping_avail_p = :no_shipping_avail_p,
      shipping = :shipping,
      shipping_additional = :shipping_additional,
      weight = :weight,
      active_p = 't',
      template_id = :template_id
      where product_id = :product_id;
    } {} {} {postgresql 7.1} c:/web/openacs-4/packages/ecommerce/www/admin/products/upload-2-postgresql.xql}
dbqd.ecommerce.www.admin.products.upload-2.custom_product_field_insert {dbqd.ecommerce.www.admin.products.upload-2.custom_product_field_insert {
      insert into ec_custom_product_field_values (
      product_id, 
      last_modified, 
      last_modifying_user, 
      modified_ip_address) values 
      (:val_$product_id_column, 
      now(), 
      :user_id, 
      :peeraddr)
    } {} {} {postgresql 7.1} c:/web/openacs-4/packages/ecommerce/www/admin/products/upload-2-postgresql.xql}
dbqd.ecommerce.www.admin.restore-one-id-oracle.get_audit_rows {dbqd.ecommerce.www.admin.restore-one-id-oracle.get_audit_rows {
      select * 
      from $audit_table_name
      where rowid = :rowid
    } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/ecommerce/www/admin/restore-one-id-oracle.xql}
dbqd.ecommerce.www.admin.restore-one-id.get_audit_rows {dbqd.ecommerce.www.admin.restore-one-id.get_audit_rows {
      select * 
      from $audit_table_name 
      where oid as rowid = :rowid
    } {} {} {postgresql 7.1} c:/web/openacs-4/packages/ecommerce/www/admin/restore-one-id-postgresql.xql}
dbqd.ecommerce.www.admin.retailers.add-3.insert_new_retailer {dbqd.ecommerce.www.admin.retailers.add-3.insert_new_retailer {
      insert into ec_retailers
(retailer_id, retailer_name, primary_contact_name, secondary_contact_name, primary_contact_info, secondary_contact_info, line1, line2, city, usps_abbrev, zip_code, phone, fax, url, country_code, reach, nexus_states, financing_policy, return_policy, price_guarantee_policy, delivery_policy, installation_policy, $audit_fields)
values 
(:retailer_id, :retailer_name, :primary_contact_name, :secondary_contact_name, :primary_contact_info, :secondary_contact_info, :line1, :line2, :city, :usps_abbrev, :zip_code, :phone, :fax, :url, :country_code, :reach, :nexus_states, :financing_policy, :return_policy, :price_guarantee_policy, :delivery_policy, :installation_policy, $audit_info)

      } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/retailers/add-3.xql}
dbqd.ecommerce.www.admin.retailers.edit-2.unused {dbqd.ecommerce.www.admin.retailers.edit-2.unused {
      
update ec_retailers
   set retailer_name=:retailer_name, 
       primary_contact_name=:primary_contact_name, 
       secondary_contact_name=:secondary_contact_name, 
       primary_contact_info=:primary_contact_info, 
       secondary_contact_info=:secondary_contact_info, 
       line1=:line1, 
       line2=:line2, 
       city=:city, 
       usps_abbrev=:usps_abbrev, 
       zip_code=:zip_code, 
       phone=:phone, 
       fax=:fax, 
       url=:url, 
       country_code=:country_code, 
       reach=:reach, 
       nexus_states=:nexus_states, 
       financing_policy=:financing_policy, 
       return_policy=:return_policy, 
       price_guarantee_policy=:price_guarantee_policy, 
       delivery_policy=:delivery_policy, 
       installation_policy=:installation_policy, 
       $audit_update
where retailer_id=:retailer_id

      } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/retailers/edit-2.xql}
dbqd.ecommerce.www.admin.retailers.edit.get_retailer_details {dbqd.ecommerce.www.admin.retailers.edit.get_retailer_details {
      
select retailer_id ,
    retailer_name,
    primary_contact_name,
    secondary_contact_name,
    primary_contact_info,
    secondary_contact_info,
    line1,
    line2,
    city ,
    usps_abbrev,
    zip_code,
    phone,
    fax,
    url,
    country_code,
    reach,
    nexus_states,
    financing_policy,
    return_policy,
    
    price_guarantee_policy,
    delivery_policy,
    installation_policy
from ec_retailers 
where retailer_id=:retailer_id
      } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/retailers/edit.xql}
dbqd.ecommerce.www.admin.retailers.index.get_retailer_list {dbqd.ecommerce.www.admin.retailers.index.get_retailer_list {

   select retailer_id, 
          retailer_name, 
	  case when reach = 'web' then url else city || ', ' || usps_abbrev end as location
   from ec_retailers 
   order by retailer_name

      } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/retailers/index.xql}
dbqd.ecommerce.www.admin.retailers.one.get_retailer_details {dbqd.ecommerce.www.admin.retailers.one.get_retailer_details {
      
select retailer_id ,
    retailer_name,
    primary_contact_name,
    secondary_contact_name,
    primary_contact_info,
    secondary_contact_info,
    line1,
    line2,
    city ,
    usps_abbrev,
    zip_code,
    phone,
    fax,
    url,
    country_code,
    reach,
    nexus_states,
    financing_policy,
    return_policy,
    
    price_guarantee_policy,
    delivery_policy,
    installation_policy
 from ec_retailers where retailer_id=:retailer_id
      } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/retailers/one.xql}
dbqd.ecommerce.www.admin.sales-tax.clear-2.clear_sales_taxes_audit {dbqd.ecommerce.www.admin.sales-tax.clear-2.clear_sales_taxes_audit {
      
        select usps_abbrev
          from ec_sales_tax_by_state
    
      } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/sales-tax/clear-2.xql}
dbqd.ecommerce.www.admin.sales-tax.clear-2.clear_sales_taxes {dbqd.ecommerce.www.admin.sales-tax.clear-2.clear_sales_taxes {
      delete from ec_sales_tax_by_state
      } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/sales-tax/clear-2.xql}
dbqd.ecommerce.www.admin.sales-tax.edit-2-oracle.sales_tax_update {dbqd.ecommerce.www.admin.sales-tax.edit-2-oracle.sales_tax_update {
      
		update ec_sales_tax_by_state 
		set tax_rate=:state_tax_rate,
		shipping_p=:ship_status,
		last_modified=sysdate, 
		last_modifying_user=:user_id, 
		modified_ip_address=:ip_addr 
		where usps_abbrev=:usps_abbrev
	    
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/ecommerce/www/admin/sales-tax/edit-2-oracle.xql}
dbqd.ecommerce.www.admin.sales-tax.edit-2-oracle.sales_tax_insert {dbqd.ecommerce.www.admin.sales-tax.edit-2-oracle.sales_tax_insert {
      
		insert into ec_sales_tax_by_state
		(usps_abbrev, tax_rate, shipping_p, last_modified, last_modifying_user, modified_ip_address)
		values
		(:usps_abbrev, :state_tax_rate, :ship_status, sysdate, :user_id, :ip_addr)
	    
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/ecommerce/www/admin/sales-tax/edit-2-oracle.xql}
dbqd.ecommerce.www.admin.sales-tax.edit-2.sales_tax_update {dbqd.ecommerce.www.admin.sales-tax.edit-2.sales_tax_update {
      
		update ec_sales_tax_by_state 
		set tax_rate=:state_tax_rate,
		shipping_p=:ship_status,
		last_modified=current_timestamp, 
		last_modifying_user=:user_id, 
		modified_ip_address=:ip_addr 
		where usps_abbrev=:usps_abbrev
	    
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/ecommerce/www/admin/sales-tax/edit-2-postgresql.xql}
dbqd.ecommerce.www.admin.sales-tax.edit-2.sales_tax_insert {dbqd.ecommerce.www.admin.sales-tax.edit-2.sales_tax_insert {
      
		insert into ec_sales_tax_by_state
		(usps_abbrev, tax_rate, shipping_p, last_modified, last_modifying_user, modified_ip_address)
		values
		(:usps_abbrev, :state_tax_rate, :ship_status, current_timestamp, :user_id, :ip_addr)
	    
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/ecommerce/www/admin/sales-tax/edit-2-postgresql.xql}
dbqd.ecommerce.www.admin.sales-tax.edit-2.unused {dbqd.ecommerce.www.admin.sales-tax.edit-2.unused {
      select usps_abbrev from ec_sales_tax_by_state
      } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/sales-tax/edit-2.xql}
dbqd.ecommerce.www.admin.sales-tax.edit-2.states_with_tax_count {dbqd.ecommerce.www.admin.sales-tax.edit-2.states_with_tax_count {
      
	    select count(*) 
	    from ec_sales_tax_by_state 
	    where usps_abbrev=:usps_abbrev
	
      } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/sales-tax/edit-2.xql}
dbqd.ecommerce.www.admin.sales-tax.edit-2. {dbqd.ecommerce.www.admin.sales-tax.edit-2. {
      
		delete from ec_sales_tax_by_state 
		where usps_abbrev=:old_state
	    
      } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/sales-tax/edit-2.xql}
dbqd.ecommerce.www.admin.sales-tax.edit.get_tax_rate {dbqd.ecommerce.www.admin.sales-tax.edit.get_tax_rate {
      select tax_rate*100 from ec_sales_tax_by_state where usps_abbrev=:usps_abbrev
      } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/sales-tax/edit.xql}
dbqd.ecommerce.www.admin.sales-tax.edit.get_shipping_ps {dbqd.ecommerce.www.admin.sales-tax.edit.get_shipping_ps {
      select shipping_p from ec_sales_tax_by_state where usps_abbrev=:usps_abbrev
      } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/sales-tax/edit.xql}
dbqd.ecommerce.www.admin.sales-tax.index.get_sales_taxes {dbqd.ecommerce.www.admin.sales-tax.index.get_sales_taxes {
      select state_name, tax_rate*100 as tax_rate_in_percent, case when shipping_p = 't' then 'Yes' else 'No' end as shipping_p
from ec_sales_tax_by_state, us_states
where ec_sales_tax_by_state.usps_abbrev = us_states.abbrev
      } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/sales-tax/index.xql}
dbqd.ecommerce.www.admin.sales-tax.index.get_abbrevs {dbqd.ecommerce.www.admin.sales-tax.index.get_abbrevs {
      select usps_abbrev from ec_sales_tax_by_state
      } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/sales-tax/index.xql}
dbqd.ecommerce.www.admin.shipping-costs.edit-2.update_shipping_cost_settings {dbqd.ecommerce.www.admin.shipping-costs.edit-2.update_shipping_cost_settings {
      update ec_admin_settings
set base_shipping_cost = :base_shipping_cost,
default_shipping_per_item = :default_shipping_per_item,
weight_shipping_cost = :weight_shipping_cost,
add_exp_base_shipping_cost = :add_exp_base_shipping_cost,
add_exp_amount_per_item = :add_exp_amount_per_item,
add_exp_amount_by_weight = :add_exp_amount_by_weight
      } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/shipping-costs/edit-2.xql}
dbqd.ecommerce.www.admin.shipping-costs.index.get_shipping_costs {dbqd.ecommerce.www.admin.shipping-costs.index.get_shipping_costs {
      select base_shipping_cost, default_shipping_per_item, weight_shipping_cost, add_exp_base_shipping_cost, add_exp_amount_per_item, add_exp_amount_by_weight
from ec_admin_settings
      } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/shipping-costs/index.xql}
dbqd.ecommerce.www.admin.templates.add-3-oracle.insert_new_template {dbqd.ecommerce.www.admin.templates.add-3-oracle.insert_new_template {
      insert into ec_templates
(template_id, template_name, template, last_modified, last_modifying_user, modified_ip_address)
values
(:template_id, :template_name, :template, sysdate, :user_id, '[DoubleApos [ns_conn peeraddr]]')
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/ecommerce/www/admin/templates/add-3-oracle.xql}
dbqd.ecommerce.www.admin.templates.add-3.insert_new_template {dbqd.ecommerce.www.admin.templates.add-3.insert_new_template {
      insert into ec_templates
(template_id, template_name, template, last_modified, last_modifying_user, modified_ip_address)
values
(:template_id, :template_name, :template, current_timestamp, :user_id, '[DoubleApos [ns_conn peeraddr]]')
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/ecommerce/www/admin/templates/add-3-postgresql.xql}
dbqd.ecommerce.www.admin.templates.add-3.get_dclick_temp {dbqd.ecommerce.www.admin.templates.add-3.get_dclick_temp {
      select count(*) from ec_templates where template_id=:template_id
      } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/templates/add-3.xql}
dbqd.ecommerce.www.admin.templates.add.get_template {dbqd.ecommerce.www.admin.templates.add.get_template {
      select template from ec_templates where template_id=:based_on
      } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/templates/add.xql}
dbqd.ecommerce.www.admin.templates.category-associate-2.check_existence_t {dbqd.ecommerce.www.admin.templates.category-associate-2.check_existence_t {
      select template_name as old_template from
ec_templates, ec_category_template_map m
where ec_templates.template_id = m.template_id
and m.category_id=:category_id
      } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/templates/category-associate-2.xql}
dbqd.ecommerce.www.admin.templates.category-associate-2.insert_cat_temp_map {dbqd.ecommerce.www.admin.templates.category-associate-2.insert_cat_temp_map {
      insert into ec_category_template_map (category_id, template_id) values (:category_id, :template_id)
      } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/templates/category-associate-2.xql}
dbqd.ecommerce.www.admin.templates.category-associate-2.update_cat_temp_map {dbqd.ecommerce.www.admin.templates.category-associate-2.update_cat_temp_map {
      update ec_category_template_map set template_id=:template_id where category_id=:category_id
      } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/templates/category-associate-2.xql}
dbqd.ecommerce.www.admin.templates.category-associate-2.get_template_name {dbqd.ecommerce.www.admin.templates.category-associate-2.get_template_name {
      select template_name from ec_templates where template_id=:template_id
      } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/templates/category-associate-2.xql}
dbqd.ecommerce.www.admin.templates.category-associate-2.unused {dbqd.ecommerce.www.admin.templates.category-associate-2.unused {
      select category_name from ec_categories where category_id=:category_id
      } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/templates/category-associate-2.xql}
dbqd.ecommerce.www.admin.templates.category-associate.get_template_data {dbqd.ecommerce.www.admin.templates.category-associate.get_template_data {
      
select template_name, template
  from ec_templates
  where template_id=:template_id

      } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/templates/category-associate.xql}
dbqd.ecommerce.www.admin.templates.category-associate.get_n_category_assocs {dbqd.ecommerce.www.admin.templates.category-associate.get_n_category_assocs {
      
select count(*)
  from ec_category_template_map
 where template_id=:template_id

      } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/templates/category-associate.xql}
dbqd.ecommerce.www.admin.templates.category-associate.get_each_template_assoc {dbqd.ecommerce.www.admin.templates.category-associate.get_each_template_assoc {
      
    select m.category_id, c.category_name
      from ec_category_template_map m, ec_categories c
     where m.category_id = c.category_id
       and m.template_id = :template_id
    
      } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/templates/category-associate.xql}
dbqd.ecommerce.www.admin.templates.category-associate.get_n_left {dbqd.ecommerce.www.admin.templates.category-associate.get_n_left {
      
select count(*)
  from ec_categories
 where category_id not in (select category_id
                             from ec_category_template_map
                            where template_id=:template_id)

      } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/templates/category-associate.xql}
dbqd.ecommerce.www.admin.templates.category-associate.get_remaining_categories {dbqd.ecommerce.www.admin.templates.category-associate.get_remaining_categories {
      
    select category_id, category_name
      from ec_categories
     where category_id not in (select category_id
                                 from ec_category_template_map
                                where template_id=:template_id)
    
      } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/templates/category-associate.xql}
dbqd.ecommerce.www.admin.templates.delete-2-oracle.delete_product_refs {dbqd.ecommerce.www.admin.templates.delete-2-oracle.delete_product_refs {
      update ec_products set template_id=null, last_modified=sysdate, last_modifying_user=:user_id, modified_ip_address='[DoubleApos [ns_conn peeraddr]]' where template_id=:template_id
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/ecommerce/www/admin/templates/delete-2-oracle.xql}
dbqd.ecommerce.www.admin.templates.delete-2.delete_product_refs {dbqd.ecommerce.www.admin.templates.delete-2.delete_product_refs {
      update ec_products set template_id=null, last_modified=current_timestamp, last_modifying_user=:user_id, modified_ip_address='[DoubleApos [ns_conn peeraddr]]' where template_id=:template_id
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/ecommerce/www/admin/templates/delete-2-postgresql.xql}
dbqd.ecommerce.www.admin.templates.delete-2.get_default_template {dbqd.ecommerce.www.admin.templates.delete-2.get_default_template {
      select default_template
from ec_admin_settings
      } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/templates/delete-2.xql}
dbqd.ecommerce.www.admin.templates.delete-2.delete_from_ec_template_map {dbqd.ecommerce.www.admin.templates.delete-2.delete_from_ec_template_map {
      delete from ec_category_template_map where template_id=:template_id
      } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/templates/delete-2.xql}
dbqd.ecommerce.www.admin.templates.delete-2.delete_from_ec_templates {dbqd.ecommerce.www.admin.templates.delete-2.delete_from_ec_templates {
      delete from ec_templates where template_id=:template_id
      } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/templates/delete-2.xql}
dbqd.ecommerce.www.admin.templates.delete.get_default_id {dbqd.ecommerce.www.admin.templates.delete.get_default_id {
      select default_template
from ec_admin_settings
      } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/templates/delete.xql}
dbqd.ecommerce.www.admin.templates.edit-2.update_ec_templates {dbqd.ecommerce.www.admin.templates.edit-2.update_ec_templates {
      update ec_templates
set template_name=:template_name, template=:template
where template_id=:template_id
      } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/templates/edit-2.xql}
dbqd.ecommerce.www.admin.templates.edit.get_template_info {dbqd.ecommerce.www.admin.templates.edit.get_template_info {
      select template_name, template from ec_templates where template_id=:template_id
      } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/templates/edit.xql}
dbqd.ecommerce.www.admin.templates.index-oracle.get_templates_info {dbqd.ecommerce.www.admin.templates.index-oracle.get_templates_info {
      
SELECT t.template_id, t.template_name, c.category_id, c.category_name
  FROM ec_templates t, ec_category_template_map m, ec_categories c
 WHERE t.template_id = m.template_id (+)
   and m.category_id = c.category_id (+)
  ORDER BY template_name, category_name
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/ecommerce/www/admin/templates/index-oracle.xql}
dbqd.ecommerce.www.admin.templates.index.get_templates_info {dbqd.ecommerce.www.admin.templates.index.get_templates_info {

SELECT t.template_id, t.template_name, c.category_id, c.category_name
  FROM ec_templates t
	LEFT JOIN ec_category_template_map m using (template_id)
	LEFT JOIN ec_categories c on (m.category_id = c.category_id)
  ORDER BY template_name, category_name

      } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/templates/index.xql}
dbqd.ecommerce.www.admin.templates.make-default-2.update_set_default_template {dbqd.ecommerce.www.admin.templates.make-default-2.update_set_default_template {
      update ec_admin_settings set default_template = :template_id
      } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/templates/make-default-2.xql}
dbqd.ecommerce.www.admin.templates.make-default.get_template_info {dbqd.ecommerce.www.admin.templates.make-default.get_template_info {
      select template_name, template from ec_templates where template_id=:template_id
      } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/templates/make-default.xql}
dbqd.ecommerce.www.admin.templates.one. {dbqd.ecommerce.www.admin.templates.one. {
      select template_name, template from ec_templates where template_id=:template_id
      } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/templates/one.xql}
dbqd.ecommerce.www.admin.templates.one.get_default_template {dbqd.ecommerce.www.admin.templates.one.get_default_template {
      select default_template from ec_admin_settings
      } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/templates/one.xql}
dbqd.ecommerce.www.admin.user-classes.add-2-oracle.insert_new_uc {dbqd.ecommerce.www.admin.user-classes.add-2-oracle.insert_new_uc {
      insert into ec_user_classes
(user_class_id, user_class_name, last_modified, last_modifying_user, modified_ip_address)
values
(:user_class_id,:user_class_name, sysdate, :user_id, '[DoubleApos [ns_conn peeraddr]]')

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/ecommerce/www/admin/user-classes/add-2-oracle.xql}
dbqd.ecommerce.www.admin.user-classes.add-2.insert_new_uc {dbqd.ecommerce.www.admin.user-classes.add-2.insert_new_uc {
      insert into ec_user_classes
(user_class_id, user_class_name, last_modified, last_modifying_user, modified_ip_address)
values
(:user_class_id,:user_class_name, current_timestamp, :user_id, '[DoubleApos [ns_conn peeraddr]]')

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/ecommerce/www/admin/user-classes/add-2-postgresql.xql}
dbqd.ecommerce.www.admin.user-classes.add-2.get_uc_count {dbqd.ecommerce.www.admin.user-classes.add-2.get_uc_count {
      select count(*) from ec_user_classes where user_class_id=:user_class_id
      } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/user-classes/add-2.xql}
dbqd.ecommerce.www.admin.user-classes.approve-toggle-oracle.update_ec_class_map {dbqd.ecommerce.www.admin.user-classes.approve-toggle-oracle.update_ec_class_map {
      update ec_user_class_user_map
set user_class_approved_p=[ec_decode $user_class_approved_p "t" "'f'" "'t'"], last_modified=sysdate, last_modifying_user=:admin_user_id, modified_ip_address='[DoubleApos [ns_conn peeraddr]]'
where user_id=:user_id and user_class_id=:user_class_id
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/ecommerce/www/admin/user-classes/approve-toggle-oracle.xql}
dbqd.ecommerce.www.admin.user-classes.approve-toggle.update_ec_class_map {dbqd.ecommerce.www.admin.user-classes.approve-toggle.update_ec_class_map {
      update ec_user_class_user_map
set user_class_approved_p=[ec_decode $user_class_approved_p "t" "'f'" "'t'"], last_modified=current_timestamp, last_modifying_user=:admin_user_id, modified_ip_address='[DoubleApos [ns_conn peeraddr]]'
where user_id=:user_id and user_class_id=:user_class_id
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/ecommerce/www/admin/user-classes/approve-toggle-postgresql.xql}
dbqd.ecommerce.www.admin.user-classes.delete-2.get_user_id_list {dbqd.ecommerce.www.admin.user-classes.delete-2.get_user_id_list {
      select user_id from ec_user_class_user_map where user_class_id = :user_class_id
      } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/user-classes/delete-2.xql}
dbqd.ecommerce.www.admin.user-classes.delete-2.delete_unmap_users {dbqd.ecommerce.www.admin.user-classes.delete-2.delete_unmap_users {
      delete from ec_user_class_user_map where user_class_id=:user_class_id

      } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/user-classes/delete-2.xql}
dbqd.ecommerce.www.admin.user-classes.delete-2.delete_from_user_class {dbqd.ecommerce.www.admin.user-classes.delete-2.delete_from_user_class {
      delete from ec_user_classes
where user_class_id=:user_class_id

      } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/user-classes/delete-2.xql}
dbqd.ecommerce.www.admin.user-classes.delete.get_ucname {dbqd.ecommerce.www.admin.user-classes.delete.get_ucname {
      select user_class_name from ec_user_classes where user_class_id=:user_class_id
      } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/user-classes/delete.xql}
dbqd.ecommerce.www.admin.user-classes.edit.update_ec_user_classes {dbqd.ecommerce.www.admin.user-classes.edit.update_ec_user_classes {
      update ec_user_classes
set user_class_name=:user_class_name
where user_class_id=:user_class_id
      } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/user-classes/edit.xql}
dbqd.ecommerce.www.admin.user-classes.index-oracle.get_uc_info_lines {dbqd.ecommerce.www.admin.user-classes.index-oracle.get_uc_info_lines {
      
   select ec_user_classes.user_class_id, 
          ec_user_classes.user_class_name,
          count(user_id) as n_users
     from ec_user_classes, ec_user_class_user_map m
    where ec_user_classes.user_class_id = m.user_class_id(+)
 group by ec_user_classes.user_class_id, ec_user_classes.user_class_name
 order by user_class_name

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/ecommerce/www/admin/user-classes/index-oracle.xql}
dbqd.ecommerce.www.admin.user-classes.index.get_uc_info_lines {dbqd.ecommerce.www.admin.user-classes.index.get_uc_info_lines {

   select ec_user_classes.user_class_id, 
          ec_user_classes.user_class_name,
          count(user_id) as n_users
     from ec_user_classes
	LEFT JOIN ec_user_class_user_map m using (user_class_id)
 group by ec_user_classes.user_class_id, ec_user_classes.user_class_name
 order by user_class_name

      } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/user-classes/index.xql}
dbqd.ecommerce.www.admin.user-classes.index.get_n_approved_users {dbqd.ecommerce.www.admin.user-classes.index.get_n_approved_users {
      
        select count(*) as approved_n_users
          from ec_user_class_user_map
         where user_class_approved_p = 't'
          and user_class_id=:user_class_id
        
      } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/user-classes/index.xql}
dbqd.ecommerce.www.admin.user-classes.member-add-2-oracle.update_ec_user_class_map {dbqd.ecommerce.www.admin.user-classes.member-add-2-oracle.update_ec_user_class_map {
      update ec_user_class_user_map
set user_class_approved_p='t', last_modified=sysdate, last_modifying_user=:admin_user_id, modified_ip_address='[DoubleApos [ns_conn peeraddr]]'
where user_id=:user_id and user_class_id=:user_class_id
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/ecommerce/www/admin/user-classes/member-add-2-oracle.xql}
dbqd.ecommerce.www.admin.user-classes.member-add-2-oracle.insert_new_ucm_mapping {dbqd.ecommerce.www.admin.user-classes.member-add-2-oracle.insert_new_ucm_mapping {
      insert into ec_user_class_user_map
(user_id, user_class_id, user_class_approved_p, last_modified, last_modifying_user, modified_ip_address) 
values
(:user_id, :user_class_id, 't', sysdate, :user_id, '[DoubleApos [ns_conn peeraddr]]')

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/ecommerce/www/admin/user-classes/member-add-2-oracle.xql}
dbqd.ecommerce.www.admin.user-classes.member-add-2.update_ec_user_class_map {dbqd.ecommerce.www.admin.user-classes.member-add-2.update_ec_user_class_map {
      update ec_user_class_user_map
set user_class_approved_p='t', last_modified=current_timestamp, last_modifying_user=:admin_user_id, modified_ip_address='[DoubleApos [ns_conn peeraddr]]'
where user_id=:user_id and user_class_id=:user_class_id
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/ecommerce/www/admin/user-classes/member-add-2-postgresql.xql}
dbqd.ecommerce.www.admin.user-classes.member-add-2.insert_new_ucm_mapping {dbqd.ecommerce.www.admin.user-classes.member-add-2.insert_new_ucm_mapping {
      insert into ec_user_class_user_map
(user_id, user_class_id, user_class_approved_p, last_modified, last_modifying_user, modified_ip_address) 
values
(:user_id, :user_class_id, 't', current_timestamp, :user_id, '[DoubleApos [ns_conn peeraddr]]')

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/ecommerce/www/admin/user-classes/member-add-2-postgresql.xql}
dbqd.ecommerce.www.admin.user-classes.member-add-2.get_ucm_count {dbqd.ecommerce.www.admin.user-classes.member-add-2.get_ucm_count {
      select count(*) from ec_user_class_user_map where user_id=:user_id and user_class_id=:user_class_id
      } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/user-classes/member-add-2.xql}
dbqd.ecommerce.www.admin.user-classes.member-add.get_users_for_map {dbqd.ecommerce.www.admin.user-classes.member-add.get_users_for_map {
      select user_id, first_names, last_name, email
from cc_users
where $last_bit_of_query
      } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/user-classes/member-add.xql}
dbqd.ecommerce.www.admin.user-classes.member-delete-2.delete_user_from_eccmap {dbqd.ecommerce.www.admin.user-classes.member-delete-2.delete_user_from_eccmap {
      delete from ec_user_class_user_map where user_id=:user_id and user_class_id=:user_class_id
      } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/user-classes/member-delete-2.xql}
dbqd.ecommerce.www.admin.user-classes.members.get_uc_name {dbqd.ecommerce.www.admin.user-classes.members.get_uc_name {
      select user_class_name from ec_user_classes where user_class_id = :user_class_id
      } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/user-classes/members.xql}
dbqd.ecommerce.www.admin.user-classes.members.get_users_in_ec_user_class {dbqd.ecommerce.www.admin.user-classes.members.get_users_in_ec_user_class {
      select 
cc.user_id, first_names, last_name, email,
m.user_class_approved_p
from cc_users cc, ec_user_class_user_map m
where cc.user_id = m.user_id
and m.user_class_id=:user_class_id
      } {} {} {} c:/web/openacs-4/packages/ecommerce/www/admin/user-classes/members.xql}
dbqd.ecommerce.www.category-browse-oracle.get_recommended_products {dbqd.ecommerce.www.category-browse-oracle.get_recommended_products {
      select p.product_id, p.product_name, p.dirname, r.recommendation_text, o.offer_code
      from ec_product_recommendations r, 
      ec_products_displayable p, ec_user_session_offer_codes o
      where (p.product_id=o.product_id(+) and (user_session_id=:user_session_id or user_session_id is null))
      and p.product_id = r.product_id
      and r.${sub}category_id=:${sub}category_id
      and r.active_p='t'
      and (r.user_class_id is null or r.user_class_id in (select user_class_id 
          from ec_user_class_user_map m 
          where user_id=:user_id
          $user_class_approved_p_clause))
      order by p.product_name
    } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/ecommerce/www/category-browse-oracle.xql}
dbqd.ecommerce.www.category-browse-oracle.get_regular_product_list {dbqd.ecommerce.www.category-browse-oracle.get_regular_product_list {
      select p.product_id, p.product_name, p.one_line_description, o.offer_code
      from $product_map($sub) m, ec_products_searchable p, ec_user_session_offer_codes o
      where (p.product_id=o.product_id(+) and (user_session_id=:user_session_id or user_session_id is null))
      and p.product_id = m.product_id
      and m.${sub}category_id = :${sub}category_id
      $exclude_subproducts
      order by p.product_name
    } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/ecommerce/www/category-browse-oracle.xql}
dbqd.ecommerce.www.category-browse.get_recommended_products {dbqd.ecommerce.www.category-browse.get_recommended_products {
      select p.product_id, p.product_name, p.dirname, r.recommendation_text, o.offer_code
      from ec_product_recommendations r, 
          ec_products_displayable p left outer join ec_user_session_offer_codes o on 
          (p.product_id = o.product_id and user_session_id = :user_session_id)
      where p.product_id = r.product_id
      and r.${sub}category_id=:${sub}category_id
      and r.active_p='t'
      and (r.user_class_id is null or r.user_class_id in (select user_class_id 
          from ec_user_class_user_map m 
          where user_id=:user_id
          $user_class_approved_p_clause))
      order by p.product_name
    } {} {} {postgresql 7.1} c:/web/openacs-4/packages/ecommerce/www/category-browse-postgresql.xql}
dbqd.ecommerce.www.category-browse.get_regular_product_list {dbqd.ecommerce.www.category-browse.get_regular_product_list {
      select p.product_id, p.product_name, p.one_line_description, o.offer_code
      from $product_map($sub) m, ec_products_searchable p left outer join ec_user_session_offer_codes o on (p.product_id = o.product_id and user_session_id = :user_session_id)
      where p.product_id = m.product_id
      and m.${sub}category_id = :${sub}category_id
      $exclude_subproducts
      order by p.product_name
    } {} {} {postgresql 7.1} c:/web/openacs-4/packages/ecommerce/www/category-browse-postgresql.xql}
dbqd.ecommerce.www.category-browse-subcategory-oracle.get_recommended_products {dbqd.ecommerce.www.category-browse-subcategory-oracle.get_recommended_products {
      select p.product_id, p.product_name, p.dirname, r.recommendation_text, o.offer_code
      from ec_product_recommendations r, 
      ec_products_displayable p, ec_user_session_offer_codes o
      where (p.product_id=o.product_id(+) and (user_session_id=:user_session_id or user_session_id is null))
      and p.product_id = r.product_id
      and r.${sub}category_id=:${sub}category_id
      and r.active_p='t'
      and (r.user_class_id is null or r.user_class_id in (select user_class_id 
          from ec_user_class_user_map m 
          where user_id=:user_id
          $user_class_approved_p_clause))
      order by p.product_name
    } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/ecommerce/www/category-browse-subcategory-oracle.xql}
dbqd.ecommerce.www.category-browse-subcategory-oracle.get_regular_product_list {dbqd.ecommerce.www.category-browse-subcategory-oracle.get_regular_product_list {
      select p.product_id, p.product_name, p.one_line_description, o.offer_code
      from $product_map($sub) m, ec_products_searchable p, ec_user_session_offer_codes o
      where (p.product_id=o.product_id(+) and (user_session_id=:user_session_id or user_session_id is null))
      and p.product_id = m.product_id
      and m.${sub}category_id = :${sub}category_id
      $exclude_subproducts
      order by p.product_name
    } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/ecommerce/www/category-browse-subcategory-oracle.xql}
dbqd.ecommerce.www.category-browse-subcategory.get_recommended_products {dbqd.ecommerce.www.category-browse-subcategory.get_recommended_products {
      select p.product_id, p.product_name, p.dirname, r.recommendation_text, o.offer_code
      from ec_product_recommendations r, ec_products_displayable p left outer join ec_user_session_offer_codes o on 
	(p.product_id = o.product_id and user_session_id = :user_session_id)
      where p.product_id = r.product_id
      and r.${sub}category_id=:${sub}category_id
      and r.active_p='t'
      and (r.user_class_id is null or r.user_class_id in (select user_class_id 
          from ec_user_class_user_map m 
          where user_id=:user_id
          $user_class_approved_p_clause))
      order by p.product_name
    } {} {} {postgresql 7.1} c:/web/openacs-4/packages/ecommerce/www/category-browse-subcategory-postgresql.xql}
dbqd.ecommerce.www.category-browse-subcategory.get_regular_product_list {dbqd.ecommerce.www.category-browse-subcategory.get_regular_product_list {
      select p.product_id, p.product_name, p.one_line_description, o.offer_code
      from $product_map($sub) m, ec_products_searchable p left outer join ec_user_session_offer_codes o on
	(p.product_id = o.product_id and user_session_id = :user_session_id)
      where p.product_id = m.product_id
      and m.${sub}category_id = :${sub}category_id
      $exclude_subproducts
      order by p.product_name
    } {} {} {postgresql 7.1} c:/web/openacs-4/packages/ecommerce/www/category-browse-subcategory-postgresql.xql}
dbqd.ecommerce.www.category-browse-subcategory.get_user_name {dbqd.ecommerce.www.category-browse-subcategory.get_user_name {
      select first_names || ' ' || last_name 
      from cc_users
      where user_id=:user_id
    } {} {} {} c:/web/openacs-4/packages/ecommerce/www/category-browse-subcategory.xql}
dbqd.ecommerce.www.category-browse-subcategory.grab_new_session_id {dbqd.ecommerce.www.category-browse-subcategory.grab_new_session_id {
      insert into ec_user_session_info
      (user_session_id, category_id)
      values
      (:user_session_id, :category_id)
    } {} {} {} c:/web/openacs-4/packages/ecommerce/www/category-browse-subcategory.xql}
dbqd.ecommerce.www.category-browse-subcategory.get_category_name {dbqd.ecommerce.www.category-browse-subcategory.get_category_name {
      select category_name
      from ec_categories 
      where category_id=:category_id
    } {} {} {} c:/web/openacs-4/packages/ecommerce/www/category-browse-subcategory.xql}
dbqd.ecommerce.www.category-browse-subcategory.get_subcat_name {dbqd.ecommerce.www.category-browse-subcategory.get_subcat_name {
      select subcategory_name 
      from ec_subcategories
      where subcategory_id=:subcategory_id
    } {} {} {} c:/web/openacs-4/packages/ecommerce/www/category-browse-subcategory.xql}
dbqd.ecommerce.www.category-browse-subcategory.get_subsubcat_name {dbqd.ecommerce.www.category-browse-subcategory.get_subsubcat_name {
      select subsubcategory_name 
      from ec_subsubcategories 
      where subsubcategory_id=:subsubcategory_id
    } {} {} {} c:/web/openacs-4/packages/ecommerce/www/category-browse-subcategory.xql}
dbqd.ecommerce.www.category-browse-subcategory.get_subcategories {dbqd.ecommerce.www.category-browse-subcategory.get_subcategories {
      select * from ec_sub${sub}categories c
      where ${sub}category_id = :${sub}category_id
      and exists (select 'x'
          from ec_products_displayable p, $product_map(sub$sub) s
          where p.product_id = s.product_id
          and s.sub${sub}category_id = c.sub${sub}category_id)
      order by sort_key, sub${sub}category_name
    } {} {} {} c:/web/openacs-4/packages/ecommerce/www/category-browse-subcategory.xql}
dbqd.ecommerce.www.category-browse-subsubcategory.get_full_name {dbqd.ecommerce.www.category-browse-subsubcategory.get_full_name {
      select first_names || ' ' || last_name 
      from cc_users
      where user_id=:user_id
    } {} {} {} c:/web/openacs-4/packages/ecommerce/www/category-browse-subsubcategory.xql}
dbqd.ecommerce.www.category-browse-subsubcategory.grab_new_session_id {dbqd.ecommerce.www.category-browse-subsubcategory.grab_new_session_id {
      insert into ec_user_session_info
      (user_session_id, category_id)
      values
      (:user_session_id, :category_id)
    } {} {} {} c:/web/openacs-4/packages/ecommerce/www/category-browse-subsubcategory.xql}
dbqd.ecommerce.www.category-browse-subsubcategory.get_category_name {dbqd.ecommerce.www.category-browse-subsubcategory.get_category_name {
      select category_name 
      from ec_categories 
      where category_id=:category_id
    } {} {} {} c:/web/openacs-4/packages/ecommerce/www/category-browse-subsubcategory.xql}
dbqd.ecommerce.www.category-browse-subsubcategory.get_subcat_name {dbqd.ecommerce.www.category-browse-subsubcategory.get_subcat_name {
      select subcategory_name 
      from ec_subcategories 
      where subcategory_id=:subcategory_id
    } {} {} {} c:/web/openacs-4/packages/ecommerce/www/category-browse-subsubcategory.xql}
dbqd.ecommerce.www.category-browse-subsubcategory.get_subsubcat_name {dbqd.ecommerce.www.category-browse-subsubcategory.get_subsubcat_name {
      select subsubcategory_name 
      from ec_subsubcategories 
      where subsubcategory_id=:subsubcategory_id
    } {} {} {} c:/web/openacs-4/packages/ecommerce/www/category-browse-subsubcategory.xql}
dbqd.ecommerce.www.category-browse-subsubcategory.get_recommended_products {dbqd.ecommerce.www.category-browse-subsubcategory.get_recommended_products {
      select p.product_id, p.product_name, p.dirname, r.recommendation_text, o.offer_code
      from ec_product_recommendations r, ec_products_displayable p left outer join ec_user_session_offer_codes o on 
          (p.product_id = o.product_id and user_session_id = :user_session_id)
      where p.product_id = r.product_id
      and r.${sub}category_id=:${sub}category_id
      and r.active_p='t'
      and (r.user_class_id is null or r.user_class_id in (select user_class_id 
          from ec_user_class_user_map m 
          where user_id=:user_id
          $user_class_approved_p_clause))
      order by p.product_name
    } {} {} {} c:/web/openacs-4/packages/ecommerce/www/category-browse-subsubcategory.xql}
dbqd.ecommerce.www.category-browse-subsubcategory.get_regular_product_list {dbqd.ecommerce.www.category-browse-subsubcategory.get_regular_product_list {
      select p.product_id, p.product_name, p.one_line_description, o.offer_code
      from $product_map($sub) m, ec_products_searchable p left outer join ec_user_session_offer_codes o on
	  (p.product_id = o.product_id and user_session_id = :user_session_id)
      where p.product_id = m.product_id
      and m.${sub}category_id = :${sub}category_id
      $exclude_subproducts
      order by p.product_name
    } {} {} {} c:/web/openacs-4/packages/ecommerce/www/category-browse-subsubcategory.xql}
dbqd.ecommerce.www.category-browse-subsubcategory.get_subcategories {dbqd.ecommerce.www.category-browse-subsubcategory.get_subcategories {
      select * from ec_sub${sub}categories c
      where ${sub}category_id = :${sub}category_id
      and exists (select 'x' 
          from ec_products_displayable p, $product_map(sub$sub) s
          where p.product_id = s.product_id
          and s.sub${sub}category_id = c.sub${sub}category_id)
      order by sort_key, sub${sub}category_name
    } {} {} {} c:/web/openacs-4/packages/ecommerce/www/category-browse-subsubcategory.xql}
dbqd.ecommerce.www.category-browse.get_full_name {dbqd.ecommerce.www.category-browse.get_full_name {
      select first_names || ' ' || last_name 
      from cc_users
      where user_id=:user_id
    } {} {} {} c:/web/openacs-4/packages/ecommerce/www/category-browse.xql}
dbqd.ecommerce.www.category-browse.grab_new_session_id {dbqd.ecommerce.www.category-browse.grab_new_session_id {
      insert into ec_user_session_info 
      (user_session_id, category_id)
      values
      (:user_session_id, :category_id)
    } {} {} {} c:/web/openacs-4/packages/ecommerce/www/category-browse.xql}
dbqd.ecommerce.www.category-browse.get_category_name {dbqd.ecommerce.www.category-browse.get_category_name {
      select category_name 
      from ec_categories 
      where category_id=:category_id
    } {} {} {} c:/web/openacs-4/packages/ecommerce/www/category-browse.xql}
dbqd.ecommerce.www.category-browse.get_subcat_name {dbqd.ecommerce.www.category-browse.get_subcat_name {
      select subcategory_name
      from ec_subcategories 
      where subcategory_id=:subcategory_id
    } {} {} {} c:/web/openacs-4/packages/ecommerce/www/category-browse.xql}
dbqd.ecommerce.www.category-browse.get_subsubcat_name {dbqd.ecommerce.www.category-browse.get_subsubcat_name {
      select subsubcategory_name 
      from ec_subsubcategories 
      where subsubcategory_id=:subsubcategory_id
    } {} {} {} c:/web/openacs-4/packages/ecommerce/www/category-browse.xql}
dbqd.ecommerce.www.category-browse.get_subcategories {dbqd.ecommerce.www.category-browse.get_subcategories {
      select * from ec_sub${sub}categories c
      where ${sub}category_id = :${sub}category_id
      and exists (select 'x' 
          from ec_products_displayable p, $product_map(sub$sub) s
          where p.product_id = s.product_id
          and s.sub${sub}category_id = c.sub${sub}category_id)
      order by sort_key, sub${sub}category_name
    } {} {} {} c:/web/openacs-4/packages/ecommerce/www/category-browse.xql}
dbqd.ecommerce.www.checkout-2-oracle.get_shipping_data {dbqd.ecommerce.www.checkout-2-oracle.get_shipping_data {
      select p.no_shipping_avail_p, p.product_name, p.one_line_description, p.product_id, count(*) as quantity, u.offer_code, i.color_choice, i.size_choice, i.style_choice
      from ec_orders o, ec_items i, ec_products p, (select offer_code, product_id
          from ec_user_session_offer_codes usoc
          where usoc.user_session_id=:user_session_id) u
      where i.product_id=p.product_id
      and o.order_id=i.order_id
      and p.product_id= u.product_id(+)
      and o.user_session_id=:user_session_id and o.order_state='in_basket'
      group by p.no_shipping_avail_p, p.product_name, p.one_line_description, p.product_id, u.offer_code, i.color_choice, i.size_choice, i.style_choice
    } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/ecommerce/www/checkout-2-oracle.xql}
dbqd.ecommerce.www.checkout-2.get_order_id_and_order_owner {dbqd.ecommerce.www.checkout-2.get_order_id_and_order_owner {
      select order_id, 
      user_id as order_owner
      from ec_orders 
      where user_session_id=:user_session_id 
      and order_state='in_basket'
    } {} {} {} c:/web/openacs-4/packages/ecommerce/www/checkout-2.xql}
dbqd.ecommerce.www.checkout-2.get_ec_item_count {dbqd.ecommerce.www.checkout-2.get_ec_item_count {
      select count(*) 
      from ec_items
      where order_id=:order_id
    } {} {} {} c:/web/openacs-4/packages/ecommerce/www/checkout-2.xql}
dbqd.ecommerce.www.checkout-2.get_an_address_id {dbqd.ecommerce.www.checkout-2.get_an_address_id {
      select count(*) 
      from ec_addresses
      where address_id=:address_id
      and user_id=:user_id
    } {} {} {} c:/web/openacs-4/packages/ecommerce/www/checkout-2.xql}
dbqd.ecommerce.www.checkout-2.update_ec_order_address {dbqd.ecommerce.www.checkout-2.update_ec_order_address {
      update ec_orders set shipping_address=:address_id where order_id=:order_id
    } {} {} {} c:/web/openacs-4/packages/ecommerce/www/checkout-2.xql}
dbqd.ecommerce.www.checkout-2.get_address_id {dbqd.ecommerce.www.checkout-2.get_address_id {
      select shipping_address 
      from ec_orders
      where order_id=:order_id
    } {} {} {} c:/web/openacs-4/packages/ecommerce/www/checkout-2.xql}
dbqd.ecommerce.www.checkout-2.get_shipping_data {dbqd.ecommerce.www.checkout-2.get_shipping_data {
      select p.no_shipping_avail_p, p.product_name, p.one_line_description, p.product_id,
      count(*) as quantity,
      u.offer_code,
      i.color_choice, i.size_choice, i.style_choice
      from ec_orders o
      join ec_items i on (o.order_id=i.order_id)
      join ec_products p on (i.product_id=p.product_id)
      left join (select offer_code, product_id
          from ec_user_session_offer_codes usoc
          where usoc.user_session_id=:user_session_id) u on (p.product_id = u.product_id)
      where o.user_session_id=:user_session_id and o.order_state='in_basket'
      group by p.no_shipping_avail_p, p.product_name, p.one_line_description, p.product_id, u.offer_code, i.color_choice, i.size_choice, i.style_choice
    } {} {} {} c:/web/openacs-4/packages/ecommerce/www/checkout-2.xql}
dbqd.ecommerce.www.checkout-3-oracle.get_pre_gc_price {dbqd.ecommerce.www.checkout-3-oracle.get_pre_gc_price {
      select ec_order_cost(:order_id) 
      from dual
    } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/ecommerce/www/checkout-3-oracle.xql}
dbqd.ecommerce.www.checkout-3-oracle.get_gc_balance {dbqd.ecommerce.www.checkout-3-oracle.get_gc_balance {
      select ec_gift_certificate_balance(:user_id) 
      from dual
    } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/ecommerce/www/checkout-3-oracle.xql}
dbqd.ecommerce.www.checkout-3.get_pre_gc_price {dbqd.ecommerce.www.checkout-3.get_pre_gc_price {
      select ec_order_cost(:order_id)
    } {} {} {postgresql 7.1} c:/web/openacs-4/packages/ecommerce/www/checkout-3-postgresql.xql}
dbqd.ecommerce.www.checkout-3.get_gc_balance {dbqd.ecommerce.www.checkout-3.get_gc_balance {
      select ec_gift_certificate_balance(:user_id)
    } {} {} {postgresql 7.1} c:/web/openacs-4/packages/ecommerce/www/checkout-3-postgresql.xql}
dbqd.ecommerce.www.checkout-3.get_order_id {dbqd.ecommerce.www.checkout-3.get_order_id {
      select order_id 
      from ec_orders
      where user_session_id=:user_session_id
      and order_state='in_basket'
    } {} {} {} c:/web/openacs-4/packages/ecommerce/www/checkout-3.xql}
dbqd.ecommerce.www.checkout-3.get_ec_item_count {dbqd.ecommerce.www.checkout-3.get_ec_item_count {
      select count(*) 
      from ec_items
      where order_id=:order_id
    } {} {} {} c:/web/openacs-4/packages/ecommerce/www/checkout-3.xql}
dbqd.ecommerce.www.checkout-3.get_order_owner {dbqd.ecommerce.www.checkout-3.get_order_owner {
      select user_id 
      from ec_orders
      where order_id=:order_id
    } {} {} {} c:/web/openacs-4/packages/ecommerce/www/checkout-3.xql}
dbqd.ecommerce.www.checkout-3.get_address_id {dbqd.ecommerce.www.checkout-3.get_address_id {
      select shipping_address 
      from ec_orders
      where order_id=$order_id
    } {} {} {} c:/web/openacs-4/packages/ecommerce/www/checkout-3.xql}
dbqd.ecommerce.www.checkout-3.get_creditcard_id {dbqd.ecommerce.www.checkout-3.get_creditcard_id {
      select creditcard_id 
      from ec_orders
      where order_id=:order_id
    } {} {} {} c:/web/openacs-4/packages/ecommerce/www/checkout-3.xql}
dbqd.ecommerce.www.checkout-3.get_shipping_method {dbqd.ecommerce.www.checkout-3.get_shipping_method {
      select shipping_method 
      from ec_orders
      where order_id=:order_id
    } {} {} {} c:/web/openacs-4/packages/ecommerce/www/checkout-3.xql}
dbqd.ecommerce.www.checkout-oracle.check_order_shippable {dbqd.ecommerce.www.checkout-oracle.check_order_shippable {
      select count(*)
      from dual
      where exists (select 1
          from ec_products p, ec_items i
          where i.product_id = p.product_id
          and i.order_id = :order_id
          and no_shipping_avail_p = 't')
    } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/ecommerce/www/checkout-oracle.xql}
dbqd.ecommerce.www.checkout.check_order_shippable {dbqd.ecommerce.www.checkout.check_order_shippable {
      select count(*)
      where exists (select 1
          from ec_products p, ec_items i
          where i.product_id = p.product_id
          and i.order_id = :order_id
          and no_shipping_avail_p = 't')
    } {} {} {postgresql 7.1} c:/web/openacs-4/packages/ecommerce/www/checkout-postgresql.xql}
dbqd.ecommerce.www.checkout.shipping_avail {dbqd.ecommerce.www.checkout.shipping_avail {
      select p.no_shipping_avail_p
      from ec_items i, ec_products p
      where i.product_id = p.product_id
      and p.no_shipping_avail_p = 'f' 
      and i.order_id = :order_id
      group by no_shipping_avail_p
    } {} {} {} c:/web/openacs-4/packages/ecommerce/www/checkout.xql}
dbqd.ecommerce.www.checkout.get_order_id {dbqd.ecommerce.www.checkout.get_order_id {
      select order_id 
      from ec_orders
      where user_session_id=:user_session_id
      and order_state='in_basket'
    } {} {} {} c:/web/openacs-4/packages/ecommerce/www/checkout.xql}
dbqd.ecommerce.www.checkout.update_ec_order_set_uid {dbqd.ecommerce.www.checkout.update_ec_order_set_uid {
      update ec_orders
      set user_id=:user_id
      where order_id=:order_id
    } {} {} {} c:/web/openacs-4/packages/ecommerce/www/checkout.xql}
dbqd.ecommerce.www.checkout.get_user_addresses {dbqd.ecommerce.www.checkout.get_user_addresses {
      select address_id, attn, line1, line2, city, usps_abbrev, zip_code, phone, country_code, full_state_name, phone_time
      from ec_addresses
      where user_id=:user_id
      and address_type='shipping'
    } {} {} {} c:/web/openacs-4/packages/ecommerce/www/checkout.xql}
dbqd.ecommerce.www.credit-card-correction-2.get_order_id_from_basket {dbqd.ecommerce.www.credit-card-correction-2.get_order_id_from_basket {
      select order_id
      from ec_orders
      where user_session_id = :user_session_id
      and order_state = 'in_basket'
    } {} {} {} c:/web/openacs-4/packages/ecommerce/www/credit-card-correction-2.xql}
dbqd.ecommerce.www.credit-card-correction-2.get_mrc_order {dbqd.ecommerce.www.credit-card-correction-2.get_mrc_order {
      select order_id 
      from ec_orders 
      where user_id = :user_id
      and confirmed_date is not null
      and order_id = (select max(o2.order_id) 
      from ec_orders o2
      where o2.user_id = :user_id
      and o2.confirmed_date is not null)
    } {} {} {} c:/web/openacs-4/packages/ecommerce/www/credit-card-correction-2.xql}
dbqd.ecommerce.www.credit-card-correction-2.get_ec_item_count {dbqd.ecommerce.www.credit-card-correction-2.get_ec_item_count {
      select count(*) 
      from ec_items
      where order_id = :order_id
    } {} {} {} c:/web/openacs-4/packages/ecommerce/www/credit-card-correction-2.xql}
dbqd.ecommerce.www.credit-card-correction-2.get_order_owner {dbqd.ecommerce.www.credit-card-correction-2.get_order_owner {
      select user_id
      from ec_orders
      where order_id = :order_id
    } {} {} {} c:/web/openacs-4/packages/ecommerce/www/credit-card-correction-2.xql}
dbqd.ecommerce.www.credit-card-correction-2.insert_new_creditcard {dbqd.ecommerce.www.credit-card-correction-2.insert_new_creditcard {
      insert into ec_creditcards
      (creditcard_id, user_id, creditcard_number, creditcard_last_four, creditcard_type, creditcard_expire, billing_address)
      values
      (:creditcard_id, :user_id, :creditcard_number,:cc_fmt , :creditcard_type, :expiry, :address_id)
    } {} {} {} c:/web/openacs-4/packages/ecommerce/www/credit-card-correction-2.xql}
dbqd.ecommerce.www.credit-card-correction-2.update_order_cc_info {dbqd.ecommerce.www.credit-card-correction-2.update_order_cc_info {
      update ec_orders
      set creditcard_id = :creditcard_id
      where order_id = :order_id
      and order_state = 'in_basket'
    } {} {} {} c:/web/openacs-4/packages/ecommerce/www/credit-card-correction-2.xql}
dbqd.ecommerce.www.credit-card-correction.get_order_id {dbqd.ecommerce.www.credit-card-correction.get_order_id {
      select order_id 
      from ec_orders 
      where user_session_id=:user_session_id
      and order_state='in_basket'
    } {} {} {} c:/web/openacs-4/packages/ecommerce/www/credit-card-correction.xql}
dbqd.ecommerce.www.credit-card-correction.get_ec_item_count_inbasket {dbqd.ecommerce.www.credit-card-correction.get_ec_item_count_inbasket {
      select count(*) 
      from ec_items
      where order_id=:order_id
    } {} {} {} c:/web/openacs-4/packages/ecommerce/www/credit-card-correction.xql}
dbqd.ecommerce.www.credit-card-correction.get_order_owner {dbqd.ecommerce.www.credit-card-correction.get_order_owner {
      select user_id
      from ec_orders
      where order_id=:order_id
    } {} {} {} c:/web/openacs-4/packages/ecommerce/www/credit-card-correction.xql}
dbqd.ecommerce.www.credit-card-correction.get_cc_info {dbqd.ecommerce.www.credit-card-correction.get_cc_info {
      select c.creditcard_type, c.creditcard_number, c.creditcard_expire, a.*
      from ec_creditcards c, ec_addresses a, ec_orders o
      where c.creditcard_id = o.creditcard_id
      and order_id = :order_id
      and c.billing_address = a.address_id
    } {} {} {} c:/web/openacs-4/packages/ecommerce/www/credit-card-correction.xql}
dbqd.ecommerce.www.delete-address.delete_address {dbqd.ecommerce.www.delete-address.delete_address {
      update ec_addresses 
      set address_type='deleted' 
      where address_id=:address_id
    } {} {} {} c:/web/openacs-4/packages/ecommerce/www/delete-address.xql}
dbqd.ecommerce.www.finalize-order-oracle.get_gc_balance {dbqd.ecommerce.www.finalize-order-oracle.get_gc_balance {
      select ec_gift_certificate_balance(:user_id) from dual
    } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/ecommerce/www/finalize-order-oracle.xql}
dbqd.ecommerce.www.finalize-order-oracle.get_applied_certificate_amount {dbqd.ecommerce.www.finalize-order-oracle.get_applied_certificate_amount {
      select ec_order_gift_cert_amount(:order_id) from dual
    } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/ecommerce/www/finalize-order-oracle.xql}
dbqd.ecommerce.www.finalize-order-oracle.get_soft_goods_costs {dbqd.ecommerce.www.finalize-order-oracle.get_soft_goods_costs {
      select nvl(sum(i.price_charged),0) - nvl(sum(i.price_refunded),0) as soft_goods_cost,
      nvl(sum(i.price_tax_charged),0) - nvl(sum(i.price_tax_refunded),0) as soft_goods_tax
      from ec_items i, ec_products p
      where i.order_id = :order_id
      and i.item_state <> 'void'
      and i.product_id = p.product_id
      and p.no_shipping_avail_p = 't'
    } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/ecommerce/www/finalize-order-oracle.xql}
dbqd.ecommerce.www.finalize-order-oracle.get_hard_goods_costs {dbqd.ecommerce.www.finalize-order-oracle.get_hard_goods_costs {
      select nvl(sum(i.price_charged),0) - nvl(sum(i.price_refunded),0) as hard_goods_cost,
      nvl(sum(i.price_tax_charged),0) - nvl(sum(i.shipping_refunded),0) as hard_goods_tax,
      nvl(sum(i.shipping_charged),0) - nvl(sum(i.shipping_refunded),0) as hard_goods_shipping,
      nvl(sum(i.shipping_tax_charged),0) - nvl(sum(i.shipping_tax_refunded),0) as hard_goods_shipping_tax
      from ec_items i, ec_products p
      where i.order_id = :order_id
      and i.item_state <> 'void'
      and i.product_id = p.product_id
      and p.no_shipping_avail_p = 'f'
    } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/ecommerce/www/finalize-order-oracle.xql}
dbqd.ecommerce.www.finalize-order-oracle.insert_financial_transaction {dbqd.ecommerce.www.finalize-order-oracle.insert_financial_transaction {
      insert into ec_financial_transactions
      (transaction_id, order_id, transaction_amount, transaction_type, inserted_date)
      values
      (:transaction_id, :order_id, :transaction_amount, 'charge', sysdate)
    } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/ecommerce/www/finalize-order-oracle.xql}
dbqd.ecommerce.www.finalize-order-oracle.update_authorized_date {dbqd.ecommerce.www.finalize-order-oracle.update_authorized_date {
      update ec_financial_transactions 
      set authorized_date = sysdate
      where transaction_id = :transaction_id
    } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/ecommerce/www/finalize-order-oracle.xql}
dbqd.ecommerce.www.finalize-order-oracle.schedule_settlement {dbqd.ecommerce.www.finalize-order-oracle.schedule_settlement {
      update ec_financial_transactions 
      set authorized_date = sysdate, to_be_captured_p = 't', to_be_captured_date = sysdate
      where transaction_id = :transaction_id
    } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/ecommerce/www/finalize-order-oracle.xql}
dbqd.ecommerce.www.finalize-order-oracle.schedule_settlement_soft_goods {dbqd.ecommerce.www.finalize-order-oracle.schedule_settlement_soft_goods {
      update ec_financial_transactions 
      set to_be_captured_p = 't', to_be_captured_date = sysdate
      where transaction_id = :transaction_id
    } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/ecommerce/www/finalize-order-oracle.xql}
dbqd.ecommerce.www.finalize-order-oracle.record_marking_problem {dbqd.ecommerce.www.finalize-order-oracle.record_marking_problem {
      insert into ec_problems_log
      (problem_id, problem_date, problem_details, order_id)
      values
      (ec_problem_id_sequence.nextval, sysdate, :problem_details, :order_id)
    } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/ecommerce/www/finalize-order-oracle.xql}
dbqd.ecommerce.www.finalize-order-oracle.update_marked_date {dbqd.ecommerce.www.finalize-order-oracle.update_marked_date {
      update ec_financial_transactions 
      set marked_date = sysdate
      where transaction_id = :pgw_transaction_id
    } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/ecommerce/www/finalize-order-oracle.xql}
dbqd.ecommerce.www.finalize-order-oracle.get_order_shipping {dbqd.ecommerce.www.finalize-order-oracle.get_order_shipping {
      select nvl(shipping_charged, 0) from ec_orders where order_id = :order_id
    } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/ecommerce/www/finalize-order-oracle.xql}
dbqd.ecommerce.www.finalize-order-oracle.get_order_shipping_tax {dbqd.ecommerce.www.finalize-order-oracle.get_order_shipping_tax {
      select ec_tax(0, :order_shipping, :order_id) from dual
    } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/ecommerce/www/finalize-order-oracle.xql}
dbqd.ecommerce.www.finalize-order.get_gc_balance {dbqd.ecommerce.www.finalize-order.get_gc_balance {
      select ec_gift_certificate_balance(:user_id)
    } {} {} {postgresql 7.1} c:/web/openacs-4/packages/ecommerce/www/finalize-order-postgresql.xql}
dbqd.ecommerce.www.finalize-order.get_applied_certificate_amount {dbqd.ecommerce.www.finalize-order.get_applied_certificate_amount {
      select ec_order_gift_cert_amount(:order_id)
    } {} {} {postgresql 7.1} c:/web/openacs-4/packages/ecommerce/www/finalize-order-postgresql.xql}
dbqd.ecommerce.www.finalize-order.get_soft_goods_costs {dbqd.ecommerce.www.finalize-order.get_soft_goods_costs {
      select coalesce(sum(i.price_charged),0) - coalesce(sum(i.price_refunded),0) as soft_goods_cost,
      coalesce(sum(i.price_tax_charged),0) - coalesce(sum(i.price_tax_refunded),0) as soft_goods_tax
      from ec_items i, ec_products p
      where i.order_id = :order_id
      and i.item_state <> 'void'
      and i.product_id = p.product_id
      and p.no_shipping_avail_p = 't'
    } {} {} {postgresql 7.1} c:/web/openacs-4/packages/ecommerce/www/finalize-order-postgresql.xql}
dbqd.ecommerce.www.finalize-order.get_hard_goods_costs {dbqd.ecommerce.www.finalize-order.get_hard_goods_costs {
      select coalesce(sum(i.price_charged),0) - coalesce(sum(i.price_refunded),0) as hard_goods_cost,
      coalesce(sum(i.price_tax_charged),0) - coalesce(sum(i.shipping_refunded),0) as hard_goods_tax,
      coalesce(sum(i.shipping_charged),0) - coalesce(sum(i.shipping_refunded),0) as hard_goods_shipping,
      coalesce(sum(i.shipping_tax_charged),0) - coalesce(sum(i.shipping_tax_refunded),0) as hard_goods_shipping_tax
      from ec_items i, ec_products p
      where i.order_id = :order_id
      and i.item_state <> 'void'
      and i.product_id = p.product_id
      and p.no_shipping_avail_p = 'f'
    } {} {} {postgresql 7.1} c:/web/openacs-4/packages/ecommerce/www/finalize-order-postgresql.xql}
dbqd.ecommerce.www.finalize-order.insert_financial_transaction {dbqd.ecommerce.www.finalize-order.insert_financial_transaction {
      insert into ec_financial_transactions
      (transaction_id, order_id, transaction_amount, transaction_type, inserted_date)
      values
      (:transaction_id, :order_id, :transaction_amount, 'charge', current_timestamp)
    } {} {} {postgresql 7.1} c:/web/openacs-4/packages/ecommerce/www/finalize-order-postgresql.xql}
dbqd.ecommerce.www.finalize-order.update_authorized_date {dbqd.ecommerce.www.finalize-order.update_authorized_date {
      update ec_financial_transactions 
      set authorized_date = current_timestamp
      where transaction_id = :transaction_id
    } {} {} {postgresql 7.1} c:/web/openacs-4/packages/ecommerce/www/finalize-order-postgresql.xql}
dbqd.ecommerce.www.finalize-order.schedule_settlement {dbqd.ecommerce.www.finalize-order.schedule_settlement {
      update ec_financial_transactions 
      set authorized_date = current_timestamp, to_be_captured_p = 't', to_be_captured_date = current_timestamp
      where transaction_id = :transaction_id
    } {} {} {postgresql 7.1} c:/web/openacs-4/packages/ecommerce/www/finalize-order-postgresql.xql}
dbqd.ecommerce.www.finalize-order.schedule_settlement_soft_goods {dbqd.ecommerce.www.finalize-order.schedule_settlement_soft_goods {
      update ec_financial_transactions 
      set to_be_captured_p = 't', to_be_captured_date = current_timestamp
      where transaction_id = :transaction_id
    } {} {} {postgresql 7.1} c:/web/openacs-4/packages/ecommerce/www/finalize-order-postgresql.xql}
dbqd.ecommerce.www.finalize-order.record_marking_problem {dbqd.ecommerce.www.finalize-order.record_marking_problem {
      insert into ec_problems_log
      (problem_id, problem_date, problem_details, order_id)
      values
      (ec_problem_id_sequence.nextval, current_timestamp, :problem_details, :order_id)
    } {} {} {postgresql 7.1} c:/web/openacs-4/packages/ecommerce/www/finalize-order-postgresql.xql}
dbqd.ecommerce.www.finalize-order.update_marked_date {dbqd.ecommerce.www.finalize-order.update_marked_date {
      update ec_financial_transactions 
      set marked_date = current_timestamp
      where transaction_id = :pgw_transaction_id
    } {} {} {postgresql 7.1} c:/web/openacs-4/packages/ecommerce/www/finalize-order-postgresql.xql}
dbqd.ecommerce.www.finalize-order.get_order_shipping {dbqd.ecommerce.www.finalize-order.get_order_shipping {
      select coalesce(shipping_charged, 0) from ec_orders where order_id = :order_id
    } {} {} {postgresql 7.1} c:/web/openacs-4/packages/ecommerce/www/finalize-order-postgresql.xql}
dbqd.ecommerce.www.finalize-order.get_order_shipping_tax {dbqd.ecommerce.www.finalize-order.get_order_shipping_tax {
      select ec_tax(0, :order_shipping, :order_id)
    } {} {} {postgresql 7.1} c:/web/openacs-4/packages/ecommerce/www/finalize-order-postgresql.xql}
dbqd.ecommerce.www.finalize-order.get_order_id {dbqd.ecommerce.www.finalize-order.get_order_id {
      select order_id 
      from ec_orders
      where user_session_id=:user_session_id
      and order_state='in_basket'
    } {} {} {} c:/web/openacs-4/packages/ecommerce/www/finalize-order.xql}
dbqd.ecommerce.www.finalize-order.get_mrc_order {dbqd.ecommerce.www.finalize-order.get_mrc_order {
      select order_id 
      from ec_orders
      where user_id=:user_id
      and confirmed_date is not null
      and order_id=(select max(o2.order_id)
          from ec_orders o2
          where o2.user_id=:user_id
          and o2.confirmed_date is not null)
    } {} {} {} c:/web/openacs-4/packages/ecommerce/www/finalize-order.xql}
dbqd.ecommerce.www.finalize-order.get_in_basket_count {dbqd.ecommerce.www.finalize-order.get_in_basket_count {
      select count(*) 
      from ec_items
      where order_id=:order_id
    } {} {} {} c:/web/openacs-4/packages/ecommerce/www/finalize-order.xql}
dbqd.ecommerce.www.finalize-order.get_order_owner {dbqd.ecommerce.www.finalize-order.get_order_owner {
      select user_id 
      from ec_orders
      where order_id=:order_id
    } {} {} {} c:/web/openacs-4/packages/ecommerce/www/finalize-order.xql}
dbqd.ecommerce.www.finalize-order.get_a_shipping_address {dbqd.ecommerce.www.finalize-order.get_a_shipping_address {
      select shipping_address 
      from ec_orders
      where order_id=:order_id
    } {} {} {} c:/web/openacs-4/packages/ecommerce/www/finalize-order.xql}
dbqd.ecommerce.www.finalize-order.get_creditcard_id {dbqd.ecommerce.www.finalize-order.get_creditcard_id {
      select creditcard_id 
      from ec_orders
      where order_id=:order_id
    } {} {} {} c:/web/openacs-4/packages/ecommerce/www/finalize-order.xql}
dbqd.ecommerce.www.finalize-order.get_shipping_method {dbqd.ecommerce.www.finalize-order.get_shipping_method {
      select shipping_method 
      from ec_orders
      where order_id=:order_id
    } {} {} {} c:/web/openacs-4/packages/ecommerce/www/finalize-order.xql}
dbqd.ecommerce.www.finalize-order.set_transaction_failed {dbqd.ecommerce.www.finalize-order.set_transaction_failed {
      update ec_financial_transactions
      set failed_p = 't'
      where transaction_id = :transaction_id"
    } {} {} {} c:/web/openacs-4/packages/ecommerce/www/finalize-order.xql}
dbqd.ecommerce.www.finalize-order.set_transaction_failed {dbqd.ecommerce.www.finalize-order.set_transaction_failed {
      update ec_financial_transactions
      set failed_p = 't'
      where transaction_id = :transaction_id
    } {} {} {} c:/web/openacs-4/packages/ecommerce/www/finalize-order.xql}
dbqd.ecommerce.www.gift-certificate-claim-2-oracle.insert_error_failed_gc_claim {dbqd.ecommerce.www.gift-certificate-claim-2-oracle.insert_error_failed_gc_claim {
      insert into ec_problems_log
      (problem_id, problem_date, problem_details)
      values
      (ec_problem_id_sequence.nextval, sysdate,:prob_details )
    } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/ecommerce/www/gift-certificate-claim-2-oracle.xql}
dbqd.ecommerce.www.gift-certificate-claim-2-oracle.update_ec_cert_set_user {dbqd.ecommerce.www.gift-certificate-claim-2-oracle.update_ec_cert_set_user {
      update ec_gift_certificates set user_id=:user_id, claimed_date=sysdate where gift_certificate_id=:gift_certificate_id
    } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/ecommerce/www/gift-certificate-claim-2-oracle.xql}
dbqd.ecommerce.www.gift-certificate-claim-2-oracle.insert_other_claim_prob {dbqd.ecommerce.www.gift-certificate-claim-2-oracle.insert_other_claim_prob {
      insert into ec_problems_log
      (problem_id, problem_date, gift_certificate_id, problem_details)
      values
      (ec_problem_id_sequence.nextval, sysdate, :gift_certificate_id, :prob_details)
    } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/ecommerce/www/gift-certificate-claim-2-oracle.xql}
dbqd.ecommerce.www.gift-certificate-claim-2.insert_error_failed_gc_claim {dbqd.ecommerce.www.gift-certificate-claim-2.insert_error_failed_gc_claim {
      insert into ec_problems_log
      (problem_id, problem_date, problem_details)
      values
      (ec_problem_id_sequence.nextval, current_timestamp,:prob_details )
    } {} {} {postgresql 7.1} c:/web/openacs-4/packages/ecommerce/www/gift-certificate-claim-2-postgresql.xql}
dbqd.ecommerce.www.gift-certificate-claim-2.update_ec_cert_set_user {dbqd.ecommerce.www.gift-certificate-claim-2.update_ec_cert_set_user {
      update ec_gift_certificates set user_id=:user_id, claimed_date=current_timestamp where gift_certificate_id=:gift_certificate_id
    } {} {} {postgresql 7.1} c:/web/openacs-4/packages/ecommerce/www/gift-certificate-claim-2-postgresql.xql}
dbqd.ecommerce.www.gift-certificate-claim-2.insert_other_claim_prob {dbqd.ecommerce.www.gift-certificate-claim-2.insert_other_claim_prob {
      insert into ec_problems_log
      (problem_id, problem_date, gift_certificate_id, problem_details)
      values
      (ec_problem_id_sequence.nextval, current_timestamp, :gift_certificate_id, :prob_details)
    } {} {} {postgresql 7.1} c:/web/openacs-4/packages/ecommerce/www/gift-certificate-claim-2-postgresql.xql}
dbqd.ecommerce.www.gift-certificate-claim-2.get_order_id {dbqd.ecommerce.www.gift-certificate-claim-2.get_order_id {
      select order_id 
      from ec_orders
      where user_session_id=:user_session_id
      and order_state='in_basket'
    } {} {} {} c:/web/openacs-4/packages/ecommerce/www/gift-certificate-claim-2.xql}
dbqd.ecommerce.www.gift-certificate-claim-2.get_gc_id {dbqd.ecommerce.www.gift-certificate-claim-2.get_gc_id {
      select gift_certificate_id 
      from ec_gift_certificates 
      where claim_check=:claim_check
    } {} {} {} c:/web/openacs-4/packages/ecommerce/www/gift-certificate-claim-2.xql}
dbqd.ecommerce.www.gift-certificate-claim-2.get_gc_user_id {dbqd.ecommerce.www.gift-certificate-claim-2.get_gc_user_id {
      select user_id as gift_certificate_user_id, amount 
      from ec_gift_certificates 
      where gift_certificate_id=:gift_certificate_id
    } {} {} {} c:/web/openacs-4/packages/ecommerce/www/gift-certificate-claim-2.xql}
dbqd.ecommerce.www.gift-certificate-claim.get_order_id_for_claim {dbqd.ecommerce.www.gift-certificate-claim.get_order_id_for_claim {
      select order_id 
      from ec_orders
      where user_session_id=:user_session_id
      and order_state='in_basket'
    } {} {} {} c:/web/openacs-4/packages/ecommerce/www/gift-certificate-claim.xql}
dbqd.ecommerce.www.gift-certificate-finalize-order-oracle.report_gc_error_into_log {dbqd.ecommerce.www.gift-certificate-finalize-order-oracle.report_gc_error_into_log {
      insert into ec_problems_log
      (problem_id, problem_date, problem_details, gift_certificate_id)
      values
      (ec_problem_id_sequence.nextval, sysdate, 
      'Customer pushed reload on gift-certificate-finalize-order.tcl but gift_certificate_state wasn't authorized or failed',:gift_certificate_id)
    } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/ecommerce/www/gift-certificate-finalize-order-oracle.xql}
dbqd.ecommerce.www.gift-certificate-finalize-order-oracle. {dbqd.ecommerce.www.gift-certificate-finalize-order-oracle. {
      insert into ec_gift_certificates
      (gift_certificate_id, gift_certificate_state, amount, issue_date, purchased_by, expires, claim_check, certificate_message, 
      certificate_to, certificate_from, recipient_email, last_modified, last_modifying_user, modified_ip_address)
      values
      (:gift_certificate_id, 'confirmed', :amount, sysdate, :user_id, add_months(sysdate,:gc_months),:claim_check, :certificate_message, 
      :certificate_to, :certificate_from, :recipient_email, sysdate, :user_id, :peeraddr)
    } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/ecommerce/www/gift-certificate-finalize-order-oracle.xql}
dbqd.ecommerce.www.gift-certificate-finalize-order-oracle.insert_ec_financial_trans {dbqd.ecommerce.www.gift-certificate-finalize-order-oracle.insert_ec_financial_trans {
      insert into ec_financial_transactions
      (transaction_id, gift_certificate_id, creditcard_id, transaction_amount, transaction_type, inserted_date)
      values
      (:transaction_id, :gift_certificate_id, :creditcard_id, :amount, 'charge', sysdate)
    } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/ecommerce/www/gift-certificate-finalize-order-oracle.xql}
dbqd.ecommerce.www.gift-certificate-finalize-order-oracle.update_ft_set_status {dbqd.ecommerce.www.gift-certificate-finalize-order-oracle.update_ft_set_status {
      update ec_financial_transactions 
      set authorized_date=sysdate, to_be_captured_p='t', transaction_id = :pgw_transaction_id
      where transaction_id=:transaction_id
    } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/ecommerce/www/gift-certificate-finalize-order-oracle.xql}
dbqd.ecommerce.www.gift-certificate-finalize-order-oracle.upate_ec_gc_status {dbqd.ecommerce.www.gift-certificate-finalize-order-oracle.upate_ec_gc_status {
      update ec_gift_certificates 
      set authorized_date=sysdate, gift_certificate_state='authorized'
      where gift_certificate_id=:gift_certificate_id
    } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/ecommerce/www/gift-certificate-finalize-order-oracle.xql}
dbqd.ecommerce.www.gift-certificate-finalize-order-oracle.get_n_seconds {dbqd.ecommerce.www.gift-certificate-finalize-order-oracle.get_n_seconds {
      select round((sysdate-issue_date)*86400) as n_seconds
      from ec_gift_certificates
      where gift_certificate_id = :gift_certificate_id
    } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/ecommerce/www/gift-certificate-finalize-order-oracle.xql}
dbqd.ecommerce.www.gift-certificate-finalize-order.report_gc_error_into_log {dbqd.ecommerce.www.gift-certificate-finalize-order.report_gc_error_into_log {
      insert into ec_problems_log
      (problem_id, problem_date, problem_details, gift_certificate_id)
      values
      (ec_problem_id_sequence.nextval, current_timestamp, 'Customer pushed reload on gift-certificate-finalize-order.tcl but gift_certificate_state wasn't authorized or failed',:gift_certificate_id)
    } {} {} {postgresql 7.1} c:/web/openacs-4/packages/ecommerce/www/gift-certificate-finalize-order-postgresql.xql}
dbqd.ecommerce.www.gift-certificate-finalize-order.log_empty_gateway_error {dbqd.ecommerce.www.gift-certificate-finalize-order.log_empty_gateway_error {
      insert into ec_problems_log
      (problem_id, problem_date, problem_details, gift_certificate_id)
      values
      (ec_problem_id_sequence.nextval, current_timestamp, 'gift-certificate-finalize-order.tcl could not authorize a gift certificate as no payment gateway was selected.' ,:gift_certificate_id)
    } {} {} {postgresql 7.1} c:/web/openacs-4/packages/ecommerce/www/gift-certificate-finalize-order-postgresql.xql}
dbqd.ecommerce.www.gift-certificate-finalize-order.log_unbound_gateway_error {dbqd.ecommerce.www.gift-certificate-finalize-order.log_unbound_gateway_error {
      insert into ec_problems_log
      (problem_id, problem_date, problem_details, gift_certificate_id)
      values
      (ec_problem_id_sequence.nextval, current_timestamp, 'gift-certificate-finalize-order.tcl could not authorize a gift certificate as payment gateway $payment_gateway is unbound.',:gift_certificate_id)
    } {} {} {postgresql 7.1} c:/web/openacs-4/packages/ecommerce/www/gift-certificate-finalize-order-postgresql.xql}
dbqd.ecommerce.www.gift-certificate-finalize-order.insert_new_gc_into_db {dbqd.ecommerce.www.gift-certificate-finalize-order.insert_new_gc_into_db {
      insert into ec_gift_certificates
      (gift_certificate_id, gift_certificate_state, amount, issue_date, purchased_by, expires, claim_check, 
      certificate_message, certificate_to, certificate_from, recipient_email, last_modified, last_modifying_user, modified_ip_address)
      values
      (:gift_certificate_id, 'confirmed', :amount, current_timestamp, :user_id, current_timestamp + '$gc_months months'::interval,:claim_check, 
      :certificate_message, :certificate_to, :certificate_from, :recipient_email, current_timestamp, :user_id, :peeraddr)
    } {} {} {postgresql 7.1} c:/web/openacs-4/packages/ecommerce/www/gift-certificate-finalize-order-postgresql.xql}
dbqd.ecommerce.www.gift-certificate-finalize-order.insert_ec_financial_trans {dbqd.ecommerce.www.gift-certificate-finalize-order.insert_ec_financial_trans {
      insert into ec_financial_transactions
      (transaction_id, gift_certificate_id, creditcard_id, transaction_amount, transaction_type, inserted_date)
      values
      (:transaction_id, :gift_certificate_id, :creditcard_id, :amount, 'charge', current_timestamp)
    } {} {} {postgresql 7.1} c:/web/openacs-4/packages/ecommerce/www/gift-certificate-finalize-order-postgresql.xql}
dbqd.ecommerce.www.gift-certificate-finalize-order.update_ft_set_status {dbqd.ecommerce.www.gift-certificate-finalize-order.update_ft_set_status {
      update ec_financial_transactions
      set authorized_date=current_timestamp, to_be_captured_p='t', transaction_id = :pgw_transaction_id
      where transaction_id=:transaction_id
    } {} {} {postgresql 7.1} c:/web/openacs-4/packages/ecommerce/www/gift-certificate-finalize-order-postgresql.xql}
dbqd.ecommerce.www.gift-certificate-finalize-order.update_ec_gc_status {dbqd.ecommerce.www.gift-certificate-finalize-order.update_ec_gc_status {
      update ec_gift_certificates
      set authorized_date=current_timestamp, gift_certificate_state='authorized'
      where gift_certificate_id=:gift_certificate_id
    } {} {} {postgresql 7.1} c:/web/openacs-4/packages/ecommerce/www/gift-certificate-finalize-order-postgresql.xql}
dbqd.ecommerce.www.gift-certificate-finalize-order.log_no_support_error {dbqd.ecommerce.www.gift-certificate-finalize-order.log_no_support_error {
      insert into ec_problems_log
      (problem_id, problem_date, problem_details, gift_certificate_id)
      values
      (ec_problem_id_sequence.nextval, sysdate, 
      'Gift-certificate-finalize-order.tcl called payment gateway :payment_gateway for authorizion, which returned: :response_code.', :gift_certificate_id)
    } {} {} {postgresql 7.1} c:/web/openacs-4/packages/ecommerce/www/gift-certificate-finalize-order-postgresql.xql}
dbqd.ecommerce.www.gift-certificate-finalize-order.get_n_seconds {dbqd.ecommerce.www.gift-certificate-finalize-order.get_n_seconds {
      select extract(day from (current_timestamp-issue_date))*86400 +
      extract(hour from (current_timestamp-issue_date))*3600 +
      extract(min from (current_timestamp-issue_date))*60 +
      extract(sec from (current_timestamp-issue_date)) as n_seconds
      from ec_gift_certificates
      where gift_certificate_id = :gift_certificate_id
    } {} {} {postgresql 7.1} c:/web/openacs-4/packages/ecommerce/www/gift-certificate-finalize-order-postgresql.xql}
dbqd.ecommerce.www.gift-certificate-finalize-order.get_gift_c_id {dbqd.ecommerce.www.gift-certificate-finalize-order.get_gift_c_id {
      select count(*) 
      from ec_gift_certificates 
      where gift_certificate_id=:gift_certificate_id
    } {} {} {} c:/web/openacs-4/packages/ecommerce/www/gift-certificate-finalize-order.xql}
dbqd.ecommerce.www.gift-certificate-finalize-order.get_gift_c_status {dbqd.ecommerce.www.gift-certificate-finalize-order.get_gift_c_status {
      select gift_certificate_state 
      from ec_gift_certificates 
      where gift_certificate_id=:gift_certificate_id
    } {} {} {} c:/web/openacs-4/packages/ecommerce/www/gift-certificate-finalize-order.xql}
dbqd.ecommerce.www.gift-certificate-finalize-order.get_ec_credit_card {dbqd.ecommerce.www.gift-certificate-finalize-order.get_ec_credit_card {
      insert into ec_creditcards
      (creditcard_id, user_id, creditcard_number, creditcard_last_four, creditcard_type, creditcard_expire, billing_address)
      values
      (:creditcard_id, :user_id, :creditcard_number, :ccstuff_1, :creditcard_type, :expiry, :address_id)
    } {} {} {} c:/web/openacs-4/packages/ecommerce/www/gift-certificate-finalize-order.xql}
dbqd.ecommerce.www.gift-certificate-finalize-order.creditcard_data_select {dbqd.ecommerce.www.gift-certificate-finalize-order.creditcard_data_select {
      select c.creditcard_number as card_number, substring(creditcard_expire for 2) as card_exp_month, substring(creditcard_expire from 4 for 2) as card_exp_year, c.creditcard_type,
      p.first_names || ' ' || p.last_name as card_name, 
      a.zip_code as billing_zip,
      a.line1 as billing_address, 
      a.city as billing_city, 
      coalesce(a.usps_abbrev, a.full_state_name) as billing_state, 
      a.country_code as billing_country
      from ec_creditcards c, persons p, ec_addresses a
      where c.user_id=p.person_id 
      and c.creditcard_id = :creditcard_id
      and c.billing_address = a.address_id
    } {} {} {} c:/web/openacs-4/packages/ecommerce/www/gift-certificate-finalize-order.xql}
dbqd.ecommerce.www.gift-certificate-finalize-order.set_ft_failure {dbqd.ecommerce.www.gift-certificate-finalize-order.set_ft_failure {
      update ec_financial_transactions 
      set failed_p='t', to_be_captured_p='f'
      where transaction_id=:transaction_id
    } {} {} {} c:/web/openacs-4/packages/ecommerce/www/gift-certificate-finalize-order.xql}
dbqd.ecommerce.www.gift-certificate-finalize-order.set_gc_failure {dbqd.ecommerce.www.gift-certificate-finalize-order.set_gc_failure {
      update ec_gift_certificates 
      set gift_certificate_state='failed_authorization' 
      where gift_certificate_id=:gift_certificate_id
    } {} {} {} c:/web/openacs-4/packages/ecommerce/www/gift-certificate-finalize-order.xql}
dbqd.ecommerce.www.gift-certificate-order-2.gco_email {dbqd.ecommerce.www.gift-certificate-order-2.gco_email {
      select email
      from persons, parties
      where person_id = :mightbe
      and person_id = party_id
    } {} {} {} c:/web/openacs-4/packages/ecommerce/www/gift-certificate-order-2.xql}
dbqd.ecommerce.www.gift-certificate-order-3.get_zip_code {dbqd.ecommerce.www.gift-certificate-order-3.get_zip_code {
      select zip_code 
      from ec_addresses
      where address_id=(select max(address_id) 
          from ec_addresses
          where user_id=:user_id)
    } {} {} {} c:/web/openacs-4/packages/ecommerce/www/gift-certificate-order-3.xql}
dbqd.ecommerce.www.gift-certificate-order-4.get_email_for_user {dbqd.ecommerce.www.gift-certificate-order-4.get_email_for_user {
      select email 
      from cc_users
      where user_id=:user_id
    } {} {} {} c:/web/openacs-4/packages/ecommerce/www/gift-certificate-order-4.xql}
dbqd.ecommerce.www.gift-certificate.get_gc_info {dbqd.ecommerce.www.gift-certificate.get_gc_info {
      select purchased_by, amount, recipient_email, certificate_to, certificate_from, certificate_message 
      from ec_gift_certificates 
      where gift_certificate_id=:gift_certificate_id
    } {} {} {} c:/web/openacs-4/packages/ecommerce/www/gift-certificate.xql}
dbqd.ecommerce.www.index-oracle.get_check_of_categories {dbqd.ecommerce.www.index-oracle.get_check_of_categories {
      select 1 
      from dual 
      where exists (select 1 
          from ec_categories)
    } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/ecommerce/www/index-oracle.xql}
dbqd.ecommerce.www.index-oracle.get_produc_recs {dbqd.ecommerce.www.index-oracle.get_produc_recs {
      select p.product_id, p.product_name, p.dirname, r.recommendation_text, o.offer_code
      from ec_product_recommendations r, ec_products_displayable p, ec_user_session_offer_codes o
      where (p.product_id(+)=o.product_id and user_session_id = :user_session_id)
      and p.product_id=r.product_id
      and category_id is null 
      and subcategory_id is null 
      and subsubcategory_id is null
      and (r.user_class_id is null or r.user_class_id in (select user_class_id
          from ec_user_class_user_map 
          where user_id = :user_id
          $user_class_approved_p_clause))
      and r.active_p='t'
    } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/ecommerce/www/index-oracle.xql}
dbqd.ecommerce.www.index-oracle.get_tl_products {dbqd.ecommerce.www.index-oracle.get_tl_products {
      select p.product_id, p.product_name, p.one_line_description, o.offer_code
      from ec_products_searchable p, ec_user_session_offer_codes o
      where (p.product_id(+)=o.product_id and user_session_id = :user_session_id)
      and not exists (select 1 
          from ec_category_product_map m
          where p.product_id = m.product_id)
      order by p.product_name
    } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/ecommerce/www/index-oracle.xql}
dbqd.ecommerce.www.index.get_check_of_categories {dbqd.ecommerce.www.index.get_check_of_categories {
      select 1  where exists (select 1 
          from ec_categories)
    } {} {} {postgresql 7.1} c:/web/openacs-4/packages/ecommerce/www/index-postgresql.xql}
dbqd.ecommerce.www.index.get_produc_recs {dbqd.ecommerce.www.index.get_produc_recs {
      select p.product_id, p.product_name, p.dirname, r.recommendation_text, o.offer_code
      from ec_product_recommendations r, ec_products_displayable p left outer join ec_user_session_offer_codes o on 
          (p.product_id = o.product_id and user_session_id = :user_session_id)
      where p.product_id=r.product_id
      and category_id is null 
      and subcategory_id is null 
      and subsubcategory_id is null
      and (r.user_class_id is null or r.user_class_id in (select user_class_id
          from ec_user_class_user_map 
          where user_id = :user_id
          $user_class_approved_p_clause))
      and r.active_p='t'
    } {} {} {postgresql 7.1} c:/web/openacs-4/packages/ecommerce/www/index-postgresql.xql}
dbqd.ecommerce.www.index.get_tl_products {dbqd.ecommerce.www.index.get_tl_products {
      select p.product_id, p.product_name, p.one_line_description, o.offer_code
      from ec_products_searchable p left outer join ec_user_session_offer_codes o on (p.product_id = o.product_id and user_session_id = :user_session_id)
      where not exists (select 1 
          from ec_category_product_map m
          where p.product_id = m.product_id)
      order by p.product_name
    } {} {} {postgresql 7.1} c:/web/openacs-4/packages/ecommerce/www/index-postgresql.xql}
dbqd.ecommerce.www.index.get_user_name {dbqd.ecommerce.www.index.get_user_name {
      select first_names || ' ' || last_name 
      from cc_users
      where user_id=:user_id
    } {} {} {} c:/web/openacs-4/packages/ecommerce/www/index.xql}
dbqd.ecommerce.www.index.update_session_user_id {dbqd.ecommerce.www.index.update_session_user_id {
      update ec_user_sessions
      set user_id=:user_id
      where user_session_id = :user_session_id
    } {} {} {} c:/web/openacs-4/packages/ecommerce/www/index.xql}
dbqd.ecommerce.www.mailing-list-add-2.get_list_name {dbqd.ecommerce.www.mailing-list-add-2.get_list_name {
      select category_name 
      from ec_categories
      where category_id=:category_id
    } {} {} {} c:/web/openacs-4/packages/ecommerce/www/mailing-list-add-2.xql}
dbqd.ecommerce.www.mailing-list-add-2.get_mailing_list_name {dbqd.ecommerce.www.mailing-list-add-2.get_mailing_list_name {
      select category_name 
      from ec_categories
      where category_id=:category_id
    } {} {} {} c:/web/openacs-4/packages/ecommerce/www/mailing-list-add-2.xql}
dbqd.ecommerce.www.mailing-list-add-2.get_subcat_listname {dbqd.ecommerce.www.mailing-list-add-2.get_subcat_listname {
      select subcategory_name 
      from ec_subcategories
      where subcategory_id=:subcategory_id
    } {} {} {} c:/web/openacs-4/packages/ecommerce/www/mailing-list-add-2.xql}
dbqd.ecommerce.www.mailing-list-add-2.get_category_name {dbqd.ecommerce.www.mailing-list-add-2.get_category_name {
      select category_name 
      from ec_categories
      where category_id=:category_id
    } {} {} {} c:/web/openacs-4/packages/ecommerce/www/mailing-list-add-2.xql}
dbqd.ecommerce.www.mailing-list-add-2.get_subcategory_name {dbqd.ecommerce.www.mailing-list-add-2.get_subcategory_name {
      select subcategory_name 
      from ec_subcategories
      where subcategory_id=:subcategory_id
    } {} {} {} c:/web/openacs-4/packages/ecommerce/www/mailing-list-add-2.xql}
dbqd.ecommerce.www.mailing-list-add-2.get_subsubcategory_name {dbqd.ecommerce.www.mailing-list-add-2.get_subsubcategory_name {
      select subsubcategory_name 
      from ec_subsubcategories
      where subsubcategory_id=:subsubcategory_id
    } {} {} {} c:/web/openacs-4/packages/ecommerce/www/mailing-list-add-2.xql}
dbqd.ecommerce.www.mailing-list-add.get_user_name {dbqd.ecommerce.www.mailing-list-add.get_user_name {
      select first_names || ' ' || last_name as user_name 
      from cc_users
      where user_id=:user_id
    } {} {} {} c:/web/openacs-4/packages/ecommerce/www/mailing-list-add.xql}
dbqd.ecommerce.www.mailing-list-add.get_cat_name {dbqd.ecommerce.www.mailing-list-add.get_cat_name {
      select category_name 
      from ec_categories
      where category_id=:category_id
    } {} {} {} c:/web/openacs-4/packages/ecommerce/www/mailing-list-add.xql}
dbqd.ecommerce.www.mailing-list-add.get_cat_name {dbqd.ecommerce.www.mailing-list-add.get_cat_name {
      select category_name 
      from ec_categories
      where category_id=:category_id
    } {} {} {} c:/web/openacs-4/packages/ecommerce/www/mailing-list-add.xql}
dbqd.ecommerce.www.mailing-list-add.get_subcat_name {dbqd.ecommerce.www.mailing-list-add.get_subcat_name {
      select subcategory_name 
      from ec_subcategories
      where subcategory_id=:subcategory_id
    } {} {} {} c:/web/openacs-4/packages/ecommerce/www/mailing-list-add.xql}
dbqd.ecommerce.www.mailing-list-add.get_cat_name {dbqd.ecommerce.www.mailing-list-add.get_cat_name {
      select category_name 
      from ec_categories
      where category_id=:category_id
    } {} {} {} c:/web/openacs-4/packages/ecommerce/www/mailing-list-add.xql}
dbqd.ecommerce.www.mailing-list-add.get_subcat_name {dbqd.ecommerce.www.mailing-list-add.get_subcat_name {
      select subcategory_name
      from ec_subcategories
      where subcategory_id=:subcategory_id
    } {} {} {} c:/web/openacs-4/packages/ecommerce/www/mailing-list-add.xql}
dbqd.ecommerce.www.mailing-list-add.get_subsubcat_name {dbqd.ecommerce.www.mailing-list-add.get_subsubcat_name {
      select subsubcategory_name
      from ec_subsubcategories 
      where subsubcategory_id=:subsubcategory_id
    } {} {} {} c:/web/openacs-4/packages/ecommerce/www/mailing-list-add.xql}
dbqd.ecommerce.www.mailing-list-remove.get_mailing_list_name {dbqd.ecommerce.www.mailing-list-remove.get_mailing_list_name {
      select category_name 
      from ec_categories 
      where category_id=:category_id
    } {} {} {} c:/web/openacs-4/packages/ecommerce/www/mailing-list-remove.xql}
dbqd.ecommerce.www.mailing-list-remove.get_mailing_list_name {dbqd.ecommerce.www.mailing-list-remove.get_mailing_list_name {
      select category_name 
      from ec_categories
      where category_id=:category_id
    } {} {} {} c:/web/openacs-4/packages/ecommerce/www/mailing-list-remove.xql}
dbqd.ecommerce.www.mailing-list-remove.get_subcat_ml_name {dbqd.ecommerce.www.mailing-list-remove.get_subcat_ml_name {
      select subcategory_name 
      from ec_subcategories
      where subcategory_id=:subcategory_id
    } {} {} {} c:/web/openacs-4/packages/ecommerce/www/mailing-list-remove.xql}
dbqd.ecommerce.www.mailing-list-remove.get_cat_ml_name {dbqd.ecommerce.www.mailing-list-remove.get_cat_ml_name {
      select category_name 
      from ec_categories
      where category_id=:category_id
    } {} {} {} c:/web/openacs-4/packages/ecommerce/www/mailing-list-remove.xql}
dbqd.ecommerce.www.mailing-list-remove.get_ml_subcat_name {dbqd.ecommerce.www.mailing-list-remove.get_ml_subcat_name {
      select subcategory_name 
      from ec_subcategories 
      where subcategory_id=:subcategory_id
    } {} {} {} c:/web/openacs-4/packages/ecommerce/www/mailing-list-remove.xql}
dbqd.ecommerce.www.mailing-list-remove.get_subsub_ml_name {dbqd.ecommerce.www.mailing-list-remove.get_subsub_ml_name {
      select subsubcategory_name 
      from ec_subsubcategories
      where subsubcategory_id=:subsubcategory_id
    } {} {} {} c:/web/openacs-4/packages/ecommerce/www/mailing-list-remove.xql}
dbqd.ecommerce.www.payment-oracle.get_order_cost {dbqd.ecommerce.www.payment-oracle.get_order_cost {
      select ec_order_cost(:order_id) as otppgc,
      ec_gift_certificate_balance(:user_id) as user_gift_certificate_balance
      from dual
    } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/ecommerce/www/payment-oracle.xql}
dbqd.ecommerce.www.payment.get_order_cost {dbqd.ecommerce.www.payment.get_order_cost {
      select ec_order_cost(:order_id) as otppgc, ec_gift_certificate_balance(:user_id) as user_gift_certificate_balance
    } {} {} {postgresql 7.1} c:/web/openacs-4/packages/ecommerce/www/payment-postgresql.xql}
dbqd.ecommerce.www.payment.get_order_id_and_order_owner {dbqd.ecommerce.www.payment.get_order_id_and_order_owner {
      select order_id, shipping_address as address_id, user_id as order_owner
      from ec_orders 
      where user_session_id=:user_session_id 
      and order_state='in_basket'
    } {} {} {} c:/web/openacs-4/packages/ecommerce/www/payment.xql}
dbqd.ecommerce.www.payment.get_ec_item_cart_count {dbqd.ecommerce.www.payment.get_ec_item_cart_count {
      select count(*) 
      from ec_items
      where order_id=:order_id
    } {} {} {} c:/web/openacs-4/packages/ecommerce/www/payment.xql}
dbqd.ecommerce.www.payment.get_creditcards_onfile {dbqd.ecommerce.www.payment.get_creditcards_onfile {
      select c.creditcard_id, c.creditcard_type, c.creditcard_last_four, c.creditcard_expire
      from ec_creditcards c
      where c.user_id=:user_id
      and c.creditcard_number is not null
      and c.failed_p='f'
      and 0 < (select count(*) from ec_orders o where o.creditcard_id = c.creditcard_id)
      order by c.creditcard_id desc
    } {} {} {} c:/web/openacs-4/packages/ecommerce/www/payment.xql}
dbqd.ecommerce.www.process-order-quantity-shipping-oracle.get_items_in_cart {dbqd.ecommerce.www.process-order-quantity-shipping-oracle.get_items_in_cart {
      select i.item_id, i.product_id, u.offer_code
      from ec_items i,
      (select * from ec_user_session_offer_codes usoc where usoc.user_session_id=:user_session_id) u
      where i.product_id=u.product_id(+)
      and i.order_id=:order_id
    } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/ecommerce/www/process-order-quantity-shipping-oracle.xql}
dbqd.ecommerce.www.process-order-quantity-shipping-oracle.get_base_ship_cost {dbqd.ecommerce.www.process-order-quantity-shipping-oracle.get_base_ship_cost {
      select nvl(base_shipping_cost,0) 
      from ec_admin_settings
    } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/ecommerce/www/process-order-quantity-shipping-oracle.xql}
dbqd.ecommerce.www.process-order-quantity-shipping-oracle.get_exp_base_cost {dbqd.ecommerce.www.process-order-quantity-shipping-oracle.get_exp_base_cost {
      select nvl(add_exp_base_shipping_cost,0) 
      from ec_admin_settings
    } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/ecommerce/www/process-order-quantity-shipping-oracle.xql}
dbqd.ecommerce.www.process-order-quantity-shipping-oracle.get_shipping_tax {dbqd.ecommerce.www.process-order-quantity-shipping-oracle.get_shipping_tax {
      select ec_tax(0,:order_shipping_cost,:order_id) 
      from dual
    } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/ecommerce/www/process-order-quantity-shipping-oracle.xql}
dbqd.ecommerce.www.process-order-quantity-shipping.get_shipping_tax {dbqd.ecommerce.www.process-order-quantity-shipping.get_shipping_tax {
      select ec_tax(0,:order_shipping_cost,:order_id)
    } {} {} {postgresql 7.1} c:/web/openacs-4/packages/ecommerce/www/process-order-quantity-shipping-postgresql.xql}
dbqd.ecommerce.www.process-order-quantity-shipping.get_base_ship_cost {dbqd.ecommerce.www.process-order-quantity-shipping.get_base_ship_cost {
      select coalesce(base_shipping_cost,0) 
      from ec_admin_settings
    } {} {} {postgresql 7.1} c:/web/openacs-4/packages/ecommerce/www/process-order-quantity-shipping-postgresql.xql}
dbqd.ecommerce.www.process-order-quantity-shipping.get_exp_base_cost {dbqd.ecommerce.www.process-order-quantity-shipping.get_exp_base_cost {
      select coalesce(add_exp_base_shipping_cost,0) 
      from ec_admin_settings
    } {} {} {postgresql 7.1} c:/web/openacs-4/packages/ecommerce/www/process-order-quantity-shipping-postgresql.xql}
dbqd.ecommerce.www.process-order-quantity-shipping.get_items_in_cart {dbqd.ecommerce.www.process-order-quantity-shipping.get_items_in_cart {
      select i.item_id, i.product_id, u.offer_code
      from ec_items i
      left join (select * 
          from ec_user_session_offer_codes usoc 
          where usoc.user_session_id=:user_session_id) u on (i.product_id=u.product_id)
      where i.order_id=:order_id
    } {} {} {postgresql 7.1} c:/web/openacs-4/packages/ecommerce/www/process-order-quantity-shipping-postgresql.xql}
dbqd.ecommerce.www.process-order-quantity-shipping.get_order_id {dbqd.ecommerce.www.process-order-quantity-shipping.get_order_id {
      select order_id 
      from ec_orders
      where user_session_id=:user_session_id
      and order_state='in_basket'
    } {} {} {} c:/web/openacs-4/packages/ecommerce/www/process-order-quantity-shipping.xql}
dbqd.ecommerce.www.process-order-quantity-shipping.get_count_cart {dbqd.ecommerce.www.process-order-quantity-shipping.get_count_cart {
      select count(*) 
      from ec_items
      where order_id=:order_id
    } {} {} {} c:/web/openacs-4/packages/ecommerce/www/process-order-quantity-shipping.xql}
dbqd.ecommerce.www.process-order-quantity-shipping.get_order_owner {dbqd.ecommerce.www.process-order-quantity-shipping.get_order_owner {
      select user_id 
      from ec_orders
      where order_id=:order_id
    } {} {} {} c:/web/openacs-4/packages/ecommerce/www/process-order-quantity-shipping.xql}
dbqd.ecommerce.www.process-order-quantity-shipping.get_address_id {dbqd.ecommerce.www.process-order-quantity-shipping.get_address_id {
      select shipping_address 
      from ec_orders
      where order_id=:order_id
    } {} {} {} c:/web/openacs-4/packages/ecommerce/www/process-order-quantity-shipping.xql}
dbqd.ecommerce.www.process-order-quantity-shipping.update_shipping_method {dbqd.ecommerce.www.process-order-quantity-shipping.update_shipping_method {
      update ec_orders
      set shipping_method=:shipping_method,
      tax_exempt_p=:tax_exempt_p
      where order_id=:order_id
    } {} {} {} c:/web/openacs-4/packages/ecommerce/www/process-order-quantity-shipping.xql}
dbqd.ecommerce.www.process-order-quantity-shipping.get_list_user_classes {dbqd.ecommerce.www.process-order-quantity-shipping.get_list_user_classes {
      select user_class_id 
      from ec_user_class_user_map
      where user_id=:user_id $additional_user_class_restriction
    } {} {} {} c:/web/openacs-4/packages/ecommerce/www/process-order-quantity-shipping.xql}
dbqd.ecommerce.www.process-order-quantity-shipping.get_shipping_per_item {dbqd.ecommerce.www.process-order-quantity-shipping.get_shipping_per_item {
      select default_shipping_per_item, weight_shipping_cost 
      from ec_admin_settings
    } {} {} {} c:/web/openacs-4/packages/ecommerce/www/process-order-quantity-shipping.xql}
dbqd.ecommerce.www.process-order-quantity-shipping.get_exp_amt_peritem {dbqd.ecommerce.www.process-order-quantity-shipping.get_exp_amt_peritem {
      select add_exp_amount_per_item, add_exp_amount_by_weight 
      from ec_admin_settings
    } {} {} {} c:/web/openacs-4/packages/ecommerce/www/process-order-quantity-shipping.xql}
dbqd.ecommerce.www.process-order-quantity-shipping.get_usps_abbrev {dbqd.ecommerce.www.process-order-quantity-shipping.get_usps_abbrev {
      select usps_abbrev 
      from ec_addresses
      where address_id=:address_id
    } {} {} {} c:/web/openacs-4/packages/ecommerce/www/process-order-quantity-shipping.xql}
dbqd.ecommerce.www.process-order-quantity-shipping.get_tax_rate {dbqd.ecommerce.www.process-order-quantity-shipping.get_tax_rate {
      select tax_rate, shipping_p 
      from ec_sales_tax_by_state
      where usps_abbrev=:usps_abbrev
    } {} {} {} c:/web/openacs-4/packages/ecommerce/www/process-order-quantity-shipping.xql}
dbqd.ecommerce.www.process-order-quantity-shipping.update_ec_items {dbqd.ecommerce.www.process-order-quantity-shipping.update_ec_items {
      update ec_items 
      set price_charged=round(:price_charged,2), price_name=:price_name, shipping_charged=round(:shipping_charged,2), price_tax_charged=round(:tax_charged,2), shipping_tax_charged=round(:shipping_tax,2) 
      where item_id=:item_id
    } {} {} {} c:/web/openacs-4/packages/ecommerce/www/process-order-quantity-shipping.xql}
dbqd.ecommerce.www.process-order-quantity-shipping.set_shipping_charges {dbqd.ecommerce.www.process-order-quantity-shipping.set_shipping_charges {
      update ec_orders 
      set shipping_charged=round(:order_shipping_cost,2), shipping_tax_charged=round(:tax_on_order_shipping_cost,2) 
      where order_id=:order_id
    } {} {} {} c:/web/openacs-4/packages/ecommerce/www/process-order-quantity-shipping.xql}
dbqd.ecommerce.www.process-payment-oracle.get_gc_balance {dbqd.ecommerce.www.process-payment-oracle.get_gc_balance {
      select ec_gift_certificate_balance(:user_id) 
      from dual
    } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/ecommerce/www/process-payment-oracle.xql}
dbqd.ecommerce.www.process-payment.get_gc_balance {dbqd.ecommerce.www.process-payment.get_gc_balance {
      select ec_gift_certificate_balance(:user_id)
    } {} {} {postgresql 7.1} c:/web/openacs-4/packages/ecommerce/www/process-payment-postgresql.xql}
dbqd.ecommerce.www.process-payment.get_order_id {dbqd.ecommerce.www.process-payment.get_order_id {
      select order_id 
      from ec_orders 
      where user_session_id=:user_session_id
      and order_state='in_basket'
    } {} {} {} c:/web/openacs-4/packages/ecommerce/www/process-payment.xql}
dbqd.ecommerce.www.process-payment.get_shopping_cart_no {dbqd.ecommerce.www.process-payment.get_shopping_cart_no {
      select count(*) 
      from ec_items
      where order_id=:order_id
    } {} {} {} c:/web/openacs-4/packages/ecommerce/www/process-payment.xql}
dbqd.ecommerce.www.process-payment.get_order_owner {dbqd.ecommerce.www.process-payment.get_order_owner {
      select user_id
      from ec_orders
      where order_id=:order_id
    } {} {} {} c:/web/openacs-4/packages/ecommerce/www/process-payment.xql}
dbqd.ecommerce.www.process-payment.get_address_id {dbqd.ecommerce.www.process-payment.get_address_id {
      select shipping_address 
      from ec_orders 
      where order_id=:order_id
    } {} {} {} c:/web/openacs-4/packages/ecommerce/www/process-payment.xql}
dbqd.ecommerce.www.process-payment.get_shipping_method {dbqd.ecommerce.www.process-payment.get_shipping_method {
      select shipping_method
      from ec_orders
      where order_id=:order_id
    } {} {} {} c:/web/openacs-4/packages/ecommerce/www/process-payment.xql}
dbqd.ecommerce.www.process-payment.get_cc_owner {dbqd.ecommerce.www.process-payment.get_cc_owner {
      select user_id
      from ec_creditcards 
      where creditcard_id=:creditcard_id
    } {} {} {} c:/web/openacs-4/packages/ecommerce/www/process-payment.xql}
dbqd.ecommerce.www.process-payment.use_existing_cc_for_order {dbqd.ecommerce.www.process-payment.use_existing_cc_for_order {
      update ec_orders
      set creditcard_id=:creditcard_id
      where order_id=:order_id
    } {} {} {} c:/web/openacs-4/packages/ecommerce/www/process-payment.xql}
dbqd.ecommerce.www.process-payment.insert_new_cc {dbqd.ecommerce.www.process-payment.insert_new_cc {
      insert into ec_creditcards
      (creditcard_id, user_id, creditcard_number, creditcard_last_four, creditcard_type, creditcard_expire, billing_address)
      values
      (:creditcard_id, :user_id, :creditcard_number, :cc_no , :creditcard_type, :expiry, :billing_address_id)
    } {} {} {} c:/web/openacs-4/packages/ecommerce/www/process-payment.xql}
dbqd.ecommerce.www.process-payment.update_order_set_cc {dbqd.ecommerce.www.process-payment.update_order_set_cc {
      update ec_orders
      set creditcard_id=:creditcard_id
      where order_id=:order_id
    } {} {} {} c:/web/openacs-4/packages/ecommerce/www/process-payment.xql}
dbqd.ecommerce.www.process-payment.set_null_cc_in_order {dbqd.ecommerce.www.process-payment.set_null_cc_in_order {
      update ec_orders
      set creditcard_id=null
      where order_id=:order_id
    } {} {} {} c:/web/openacs-4/packages/ecommerce/www/process-payment.xql}
dbqd.ecommerce.www.product-oracle.get_ec_product_info {dbqd.ecommerce.www.product-oracle.get_ec_product_info {
      select *
      from ec_products p, ec_custom_product_field_values v
      where p.product_id = :product_id
      and p.product_id = v.product_id(+)
    } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/ecommerce/www/product-oracle.xql}
dbqd.ecommerce.www.product-oracle.find_a_good_category {dbqd.ecommerce.www.product-oracle.find_a_good_category {
      select * 
      from (select category_id, (select count(*)
              from ec_subcategories s
              where s.category_id = m.category_id) subcount, (select count(*)
              from ec_subsubcategories ss
              where ss.subcategory_id = m.category_id) subsubcount
          from ec_category_product_map m
          where product_id = :product_id
          order by subcount, subsubcount, category_id)
      where rownum = 1
    } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/ecommerce/www/product-oracle.xql}
dbqd.ecommerce.www.product.find_a_good_category {dbqd.ecommerce.www.product.find_a_good_category {
      select * 
      from (select category_id, (select count(*)
               from ec_subcategories s
               where s.category_id = m.category_id) as subcount, (select count(*)
               from ec_subsubcategories ss
               where ss.subcategory_id = m.category_id) as subsubcount
            from ec_category_product_map m
            where product_id = :product_id
            order by subcount, subsubcount, category_id) some_name
      limit 1
    } {} {} {postgresql 7.1} c:/web/openacs-4/packages/ecommerce/www/product-postgresql.xql}
dbqd.ecommerce.www.product-search-oracle.search_category {dbqd.ecommerce.www.product-search-oracle.search_category {
      select p.product_name, p.product_id, p.dirname, 
          p.one_line_description,pseudo_contains(p.product_name || p.one_line_description || p.detailed_description || p.search_keywords, :search_text) as score
      from ec_products_searchable p, ec_category_product_map c
      where c.category_id=:category_id
      and p.product_id=c.product_id
      and pseudo_contains(p.product_name || p.one_line_description ||  p.detailed_description || p.search_keywords, :search_text) > 0
      order by score desc
    } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/ecommerce/www/product-search-oracle.xql}
dbqd.ecommerce.www.product-search-oracle.search_subcategory {dbqd.ecommerce.www.product-search-oracle.search_subcategory {
      select p.product_name, p.product_id, p.dirname, 
          p.one_line_description,pseudo_contains(p.product_name || p.one_line_description || p.detailed_description || p.search_keywords, :search_text) as score
      from ec_products_searchable p, ec_subcategory_product_map c
      where c.subcategory_id=:subcategory_id
      and p.product_id=c.product_id
      and pseudo_contains(p.product_name || p.one_line_description ||  p.detailed_description || p.search_keywords, :search_text) > 0
      order by score desc
    } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/ecommerce/www/product-search-oracle.xql}
dbqd.ecommerce.www.product-search-oracle.search_all {dbqd.ecommerce.www.product-search-oracle.search_all {
      select p.product_name, p.product_id, p.dirname, 
          p.one_line_description,pseudo_contains(p.product_name || p.one_line_description || p.detailed_description || p.search_keywords, :search_text) as score
      from ec_products_searchable p
      where pseudo_contains(p.product_name || p.one_line_description ||  p.detailed_description || p.search_keywords, :search_text) > 0
      order by score desc
    } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/ecommerce/www/product-search-oracle.xql}
dbqd.ecommerce.www.product-search.search_category {dbqd.ecommerce.www.product-search.search_category {
      select p.product_name, p.product_id, p.dirname, p.one_line_description, 
          pseudo_contains(coalesce(p.product_name, '') || coalesce(p.one_line_description, '') || coalesce(p.detailed_description, '') || coalesce(p.search_keywords,''), :search_text) as score
      from ec_products_searchable p, ec_category_product_map c
      where c.category_id=:category_id
      and p.product_id=c.product_id
      and pseudo_contains(coalesce(p.product_name, '') || coalesce(p.one_line_description, '') ||  coalesce(p.detailed_description, '') || coalesce(p.search_keywords,''), :search_text) > 0
      order by score desc
    } {} {} {postgresql 7.1} c:/web/openacs-4/packages/ecommerce/www/product-search-postgresql.xql}
dbqd.ecommerce.www.product-search.search_subcategory {dbqd.ecommerce.www.product-search.search_subcategory {
      select p.product_name, p.product_id, p.dirname, p.one_line_description, 
	  pseudo_contains(coalesce(p.product_name, '') || coalesce(p.one_line_description, '') || coalesce(p.detailed_description, '') || coalesce(p.search_keywords,''), :search_text) as score
      from ec_products_searchable p, ec_subcategory_product_map c
      where c.subcategory_id=:subcategory_id
      and p.product_id=c.product_id
      and pseudo_contains(coalesce(p.product_name, '') || coalesce(p.one_line_description, '') ||  coalesce(p.detailed_description, '') || coalesce(p.search_keywords,''), :search_text) > 0
      order by score desc
    } {} {} {postgresql 7.1} c:/web/openacs-4/packages/ecommerce/www/product-search-postgresql.xql}
dbqd.ecommerce.www.product-search.search_all {dbqd.ecommerce.www.product-search.search_all {
      select p.product_name, p.product_id, p.dirname, p.one_line_description, 
	  pseudo_contains(coalesce(p.product_name, '') || coalesce(p.one_line_description, '') || coalesce(p.detailed_description, '') || coalesce(p.search_keywords,''), :search_text) as score
      from ec_products_searchable p
      where pseudo_contains(coalesce(p.product_name, '') || coalesce(p.one_line_description, '') ||  coalesce(p.detailed_description, '') || coalesce(p.search_keywords,''), :search_text) > 0
      order by score desc
    } {} {} {postgresql 7.1} c:/web/openacs-4/packages/ecommerce/www/product-search-postgresql.xql}
dbqd.ecommerce.www.product-search.insert_search_text_to_session_info {dbqd.ecommerce.www.product-search.insert_search_text_to_session_info {
      insert into ec_user_session_info 
      (user_session_id, category_id, search_text) 
      values 
      (:user_session_id, :category_id, :search_text)
    } {} {} {} c:/web/openacs-4/packages/ecommerce/www/product-search.xql}
dbqd.ecommerce.www.product-search.get_category_name {dbqd.ecommerce.www.product-search.get_category_name {
      select category_name 
      from ec_categories
      where category_id=:category_id
    } {} {} {} c:/web/openacs-4/packages/ecommerce/www/product-search.xql}
dbqd.ecommerce.www.product-search.get_subcategory_name {dbqd.ecommerce.www.product-search.get_subcategory_name {
      select category_name || ' > ' || subcategory_name 
      from ec_categories c, ec_subcategories s
      where s.subcategory_id=:subcategory_id
      and c.category_id=s.category_id
    } {} {} {} c:/web/openacs-4/packages/ecommerce/www/product-search.xql}
dbqd.ecommerce.www.product.insert_user_session_info {dbqd.ecommerce.www.product.insert_user_session_info {
      insert into ec_user_session_info 
      (user_session_id, product_id) 
      values 
      (:user_session_id, :product_id)
    } {} {} {} c:/web/openacs-4/packages/ecommerce/www/product.xql}
dbqd.ecommerce.www.product.get_offer_code_p {dbqd.ecommerce.www.product.get_offer_code_p {
      select count(*) 
      from ec_user_session_offer_codes
      where user_session_id=:user_session_id
      and product_id=:product_id
    } {} {} {} c:/web/openacs-4/packages/ecommerce/www/product.xql}
dbqd.ecommerce.www.product.inert_uc_offer_code {dbqd.ecommerce.www.product.inert_uc_offer_code {
      insert into ec_user_session_offer_codes
      (user_session_id, product_id, offer_code) 
      values 
      (:user_session_id, :product_id, :offer_code)
    } {} {} {} c:/web/openacs-4/packages/ecommerce/www/product.xql}
dbqd.ecommerce.www.product.update_ec_us_offers {dbqd.ecommerce.www.product.update_ec_us_offers {
      update ec_user_session_offer_codes
      set offer_code=:offer_code
      where user_session_id=:user_session_id
      and product_id=:product_id
    } {} {} {} c:/web/openacs-4/packages/ecommerce/www/product.xql}
dbqd.ecommerce.www.product.get_offer_code {dbqd.ecommerce.www.product.get_offer_code {
      select offer_code
      from ec_user_session_offer_codes
      where user_session_id=:user_session_id
      and product_id=:product_id
    } {} {} {} c:/web/openacs-4/packages/ecommerce/www/product.xql}
dbqd.ecommerce.www.product.get_ec_product_info {dbqd.ecommerce.www.product.get_ec_product_info {
      select *
      from ec_products p
      left join ec_custom_product_field_values v on (p.product_id = v.product_id)
      where p.product_id = :product_id
    } {} {} {} c:/web/openacs-4/packages/ecommerce/www/product.xql}
dbqd.ecommerce.www.product.get_template {dbqd.ecommerce.www.product.get_template {
      select template
      from ec_templates
      where template_id=:template_id
    } {} {} {} c:/web/openacs-4/packages/ecommerce/www/product.xql}
dbqd.ecommerce.www.product.get_template_list {dbqd.ecommerce.www.product.get_template_list {
      select template
      from ec_templates t, ec_category_template_map ct, ec_category_product_map cp
      where t.template_id = ct.template_id
      and ct.category_id = cp.category_id
      and cp.product_id = :product_id
    } {} {} {} c:/web/openacs-4/packages/ecommerce/www/product.xql}
dbqd.ecommerce.www.product.get_template_finally {dbqd.ecommerce.www.product.get_template_finally {
      select template
      from ec_templates
      where template_id=(select default_template
          from ec_admin_settings)
    } {} {} {} c:/web/openacs-4/packages/ecommerce/www/product.xql}
dbqd.ecommerce.www.register.awaiting-approval.register_member_state_information {dbqd.ecommerce.www.register.awaiting-approval.register_member_state_information {
      select member_state, email, email_verified_p, rel_id
from cc_users where user_id = :user_id 
and  (member_state is null or member_state = 'rejected')
      } {} {} {} c:/web/openacs-4/packages/ecommerce/www/register/awaiting-approval.xql}
dbqd.ecommerce.www.register.awaiting-approval.register_member_state_authorized_set {dbqd.ecommerce.www.register.awaiting-approval.register_member_state_authorized_set {
      update membership_rels set member_state = 'approved' where rel_id = :rel_id
      } {} {} {} c:/web/openacs-4/packages/ecommerce/www/register/awaiting-approval.xql}
dbqd.ecommerce.www.register.awaiting-email-verification-oracle.register_user_state_properties {dbqd.ecommerce.www.register.awaiting-email-verification-oracle.register_user_state_properties {
      
    select member_state, email, rowid 
    from cc_users
    where user_id = :user_id and
    email_verified_p = 'f' 
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/ecommerce/www/register/awaiting-email-verification-oracle.xql}
dbqd.ecommerce.www.register.awaiting-email-verification.register_user_state_properties {dbqd.ecommerce.www.register.awaiting-email-verification.register_user_state_properties {
      
    select member_state, email, oid as rowid 
    from cc_users
    where user_id = :user_id and
    email_verified_p = 'f' 
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/ecommerce/www/register/awaiting-email-verification-postgresql.xql}
dbqd.ecommerce.www.register.awaiting-email-verification.register_member_state_authorized_set {dbqd.ecommerce.www.register.awaiting-email-verification.register_member_state_authorized_set {
      update users set 
email_verified_p = 't'
where user_id = :user_id
      } {} {} {} c:/web/openacs-4/packages/ecommerce/www/register/awaiting-email-verification.xql}
dbqd.ecommerce.www.register.banned-user.register_banned_member_state {dbqd.ecommerce.www.register.banned-user.register_banned_member_state {
      
    select member_state from cc_users 
    where user_id = :user_id 
      } {} {} {} c:/web/openacs-4/packages/ecommerce/www/register/banned-user.xql}
dbqd.ecommerce.www.register.deleted-user.register_deleted_member_state {dbqd.ecommerce.www.register.deleted-user.register_deleted_member_state {
      
    select member_state from cc_users where user_id = :user_id

      } {} {} {} c:/web/openacs-4/packages/ecommerce/www/register/deleted-user.xql}
dbqd.ecommerce.www.register.email-confirm.register_email_user_update {dbqd.ecommerce.www.register.email-confirm.register_email_user_update {
      update users 
                        set email_verified_p = 't'
                        where user_id = :user_id
      } {} {} {} c:/web/openacs-4/packages/ecommerce/www/register/email-confirm.xql}
dbqd.ecommerce.www.register.email-confirm.register_email_confirm_update3 {dbqd.ecommerce.www.register.email-confirm.register_email_confirm_update3 {
      update users
                        set email_verified_p = 't'
                        where user_id = :user_id
      } {} {} {} c:/web/openacs-4/packages/ecommerce/www/register/email-confirm.xql}
dbqd.ecommerce.www.register.email-password-2.users_state_authorized_or_deleted {dbqd.ecommerce.www.register.email-password-2.users_state_authorized_or_deleted {
      select 
email from cc_users where user_id=:user_id
-- and user_state in ('authorized','deleted')
      } {} {} {} c:/web/openacs-4/packages/ecommerce/www/register/email-password-2.xql}
dbqd.ecommerce.www.register.email-password-2.password_answer {dbqd.ecommerce.www.register.email-password-2.password_answer {
      select password_answer from users where user_id = :user_id
      } {} {} {} c:/web/openacs-4/packages/ecommerce/www/register/email-password-2.xql}
dbqd.ecommerce.www.register.email-password-2.first_last_name {dbqd.ecommerce.www.register.email-password-2.first_last_name {
      select first_names db_first_names, last_name db_last_name from cc_users where user_id = $user_id
      } {} {} {} c:/web/openacs-4/packages/ecommerce/www/register/email-password-2.xql}
dbqd.ecommerce.www.register.email-password-3.first_last_names {dbqd.ecommerce.www.register.email-password-3.first_last_names {
      select first_names db_first_names, last_name db_last_name, password_question from cc_users where user_id = :user_id
      } {} {} {} c:/web/openacs-4/packages/ecommerce/www/register/email-password-3.xql}
dbqd.ecommerce.www.register.email-password-3.update_question {dbqd.ecommerce.www.register.email-password-3.update_question {
      update users set password_question = :question, password_answer = :answer where user_id = :user_id
      } {} {} {} c:/web/openacs-4/packages/ecommerce/www/register/email-password-3.xql}
dbqd.ecommerce.www.register.email-password.question {dbqd.ecommerce.www.register.email-password.question {
      select password_question from users where user_id = :user_id
      } {} {} {} c:/web/openacs-4/packages/ecommerce/www/register/email-password.xql}
dbqd.ecommerce.www.register.restore-user.user_state_info {dbqd.ecommerce.www.register.restore-user.user_state_info {
      
    select member_state, email, rel_id from cc_users where user_id = :user_id

      } {} {} {} c:/web/openacs-4/packages/ecommerce/www/register/restore-user.xql}
dbqd.ecommerce.www.register.restore-user.member_state_authorized_transistion {dbqd.ecommerce.www.register.restore-user.member_state_authorized_transistion {
      
	update membership_rels
	set member_state = 'approved'  
	where rel_id = :rel_id
    
      } {} {} {} c:/web/openacs-4/packages/ecommerce/www/register/restore-user.xql}
dbqd.ecommerce.www.register.user-login.user_login_user_id_from_email {dbqd.ecommerce.www.register.user-login.user_login_user_id_from_email {
      
    select user_id, member_state, email_verified_p
    from cc_users
    where email = :email
      } {} {} {} c:/web/openacs-4/packages/ecommerce/www/register/user-login.xql}
dbqd.ecommerce.www.register.user-new-2-oracle.user_new_2_rowid_for_email {dbqd.ecommerce.www.register.user-new-2-oracle.user_new_2_rowid_for_email {
      select rowid from users where user_id = :user_id
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/ecommerce/www/register/user-new-2-oracle.xql}
dbqd.ecommerce.www.register.user-new-2.user_new_2_rowid_for_email {dbqd.ecommerce.www.register.user-new-2.user_new_2_rowid_for_email {
      select oid as rowid from users where user_id = :user_id
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/ecommerce/www/register/user-new-2-postgresql.xql}
dbqd.ecommerce.www.register.user-new-2.user_exists {dbqd.ecommerce.www.register.user-new-2.user_exists {
      select count(*) from registered_users where user_id = :user_id
      } {} {} {} c:/web/openacs-4/packages/ecommerce/www/register/user-new-2.xql}
dbqd.ecommerce.www.review-submit-2-oracle.get_product_and_user_info {dbqd.ecommerce.www.review-submit-2-oracle.get_product_and_user_info {
      select product_name, ec_product_comment_id_sequence.nextval as comment_id, user_email, to_char(sysdate,'Day Month DD, YYYY') as current_date
      from ec_products, (select email as user_email
          from cc_users
          where user_id = :user_id)
      where product_id=:product_id
    } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/ecommerce/www/review-submit-2-oracle.xql}
dbqd.ecommerce.www.review-submit-2.get_product_and_user_info {dbqd.ecommerce.www.review-submit-2.get_product_and_user_info {
      select product_name, ec_product_comment_id_sequence.nextval as comment_id, user_email, to_char(current_timestamp,'Day Month DD, YYYY') as current_date
      from ec_products, (select email as user_email 
          from cc_users 
          where user_id = :user_id) as cc_emails
      where product_id=:product_id
    } {} {} {postgresql 7.1} c:/web/openacs-4/packages/ecommerce/www/review-submit-2-postgresql.xql}
dbqd.ecommerce.www.review-submit-3-oracle.insert_new_comment {dbqd.ecommerce.www.review-submit-3-oracle.insert_new_comment {
      insert into ec_product_comments
      (comment_id, product_id, user_id, user_comment, one_line_summary,
      rating, comment_date, last_modified, last_modifying_user, modified_ip_address)
      values
      (:comment_id, :product_id, :user_id, :user_comment, :one_line_summary,
      :rating, sysdate, sysdate, :user_id, :ns_conn_peeraddr)
    } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/ecommerce/www/review-submit-3-oracle.xql}
dbqd.ecommerce.www.review-submit-3.insert_new_comment {dbqd.ecommerce.www.review-submit-3.insert_new_comment {
      insert into ec_product_comments
      (comment_id, product_id, user_id, user_comment, one_line_summary,
      rating, comment_date, last_modified, last_modifying_user, modified_ip_address)
      values
      (:comment_id, :product_id, :user_id, :user_comment, :one_line_summary,
      :rating, current_timestamp, current_timestamp, :user_id, :ns_conn_peeraddr)
    } {} {} {postgresql 7.1} c:/web/openacs-4/packages/ecommerce/www/review-submit-3-postgresql.xql}
dbqd.ecommerce.www.review-submit-3.product_name_and_double_click_check {dbqd.ecommerce.www.review-submit-3.product_name_and_double_click_check {
      select product_name,
      comment_found_p
      from  ec_products,
      (select count(*) as comment_found_p
          from  ec_product_comments
          where comment_id = :comment_id) ec_comments_count
          where product_id = :product_id
    } {} {} {} c:/web/openacs-4/packages/ecommerce/www/review-submit-3.xql}
dbqd.ecommerce.www.review-submit.get_product_name {dbqd.ecommerce.www.review-submit.get_product_name {
      select product_name 
      from ec_products 
      where product_id=:product_id
    } {} {} {} c:/web/openacs-4/packages/ecommerce/www/review-submit.xql}
dbqd.ecommerce.www.select-shipping-oracle.select_hard_goods {dbqd.ecommerce.www.select-shipping-oracle.select_hard_goods {
      select i.product_id, i.color_choice, i.size_choice, i.style_choice, count(*) as item_count, u.offer_code
      from ec_products p, ec_items i, ec_user_session_offer_codes u
      where u.product_id(+)=i.product_id and (u.user_session_id is null or u.user_session_id=:user_session_id)
      and i.product_id = p.product_id
      and p.no_shipping_avail_p = 'f' 
      and i.order_id = :order_id
      group by i.product_id, i.color_choice, i.size_choice, i.style_choice, u.offer_code
    } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/ecommerce/www/select-shipping-oracle.xql}
dbqd.ecommerce.www.select-shipping.select_hard_goods {dbqd.ecommerce.www.select-shipping.select_hard_goods {
        select i.product_id, i.color_choice, i.size_choice, i.style_choice, count(*) as item_count, u.offer_code
        from ec_products p, ec_items i
        left join ec_user_session_offer_codes u on (u.product_id = i.product_id and u.user_session_id = :user_session_id)
        where i.product_id = p.product_id
        and p.no_shipping_avail_p = 'f' 
        and i.order_id = :order_id
        group by i.product_id, i.color_choice, i.size_choice, i.style_choice, u.offer_code
    } {} {} {postgresql 7.1} c:/web/openacs-4/packages/ecommerce/www/select-shipping-postgresql.xql}
dbqd.ecommerce.www.select-shipping.get_order_id_and_order_owner {dbqd.ecommerce.www.select-shipping.get_order_id_and_order_owner {
      select order_id, user_id as order_owner
      from ec_orders 
      where user_session_id=:user_session_id and order_state='in_basket'
    } {} {} {} c:/web/openacs-4/packages/ecommerce/www/select-shipping.xql}
dbqd.ecommerce.www.select-shipping.get_an_address_id {dbqd.ecommerce.www.select-shipping.get_an_address_id {
      select count(*) 
      from ec_addresses 
      where address_id = :address_id
      and user_id = :user_id
    } {} {} {} c:/web/openacs-4/packages/ecommerce/www/select-shipping.xql}
dbqd.ecommerce.www.select-shipping.update_ec_order_address {dbqd.ecommerce.www.select-shipping.update_ec_order_address {
      update ec_orders
      set shipping_address = :address_id
      where order_id = :order_id
    } {} {} {} c:/web/openacs-4/packages/ecommerce/www/select-shipping.xql}
dbqd.ecommerce.www.select-shipping.get_address_id {dbqd.ecommerce.www.select-shipping.get_address_id {
      select shipping_address
      from ec_orders
      where order_id = :order_id
    } {} {} {} c:/web/openacs-4/packages/ecommerce/www/select-shipping.xql}
dbqd.ecommerce.www.select-shipping.shipping_avail {dbqd.ecommerce.www.select-shipping.shipping_avail {
      select p.no_shipping_avail_p, count (*)
      from ec_items i, ec_products p
      where i.product_id = p.product_id
      and p.no_shipping_avail_p = 'f' 
      and i.order_id = :order_id
      group by no_shipping_avail_p
    } {} {} {} c:/web/openacs-4/packages/ecommerce/www/select-shipping.xql}
dbqd.ecommerce.www.shopping-cart-add-oracle.insert_new_ec_order {dbqd.ecommerce.www.shopping-cart-add-oracle.insert_new_ec_order {
      insert into ec_orders
      (order_id, user_session_id, order_state, in_basket_date)
      select :order_id, :user_session_id, 'in_basket', sysdate from dual
      where not exists (select 1 
          from ec_orders 
          where user_session_id=:user_session_id 
          and order_state='in_basket')
    } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/ecommerce/www/shopping-cart-add-oracle.xql}
dbqd.ecommerce.www.shopping-cart-add-oracle.insert_problem_into_log {dbqd.ecommerce.www.shopping-cart-add-oracle.insert_problem_into_log {
      insert into ec_problems_log
      (problem_id, problem_date, problem_details)
      values
      (ec_problem_id_sequence.nextval, sysdate,:errormsg)
    } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/ecommerce/www/shopping-cart-add-oracle.xql}
dbqd.ecommerce.www.shopping-cart-add-oracle.insert_new_item_in_order {dbqd.ecommerce.www.shopping-cart-add-oracle.insert_new_item_in_order {
      insert into ec_items
      (item_id, product_id, color_choice, size_choice, style_choice, order_id, in_cart_date)
      (select ec_item_id_sequence.nextval, :product_id, :color_choice, :size_choice, :style_choice, :order_id, sysdate 
      from dual
      where not exists (select 1 
          from ec_items 
          where order_id=:order_id 
          and product_id=:product_id
          and color_choice  [ec_decode $color_choice "" "is null" "= :color_choice"]  
          and size_choice [ec_decode $size_choice "" "is null" "= :size_choice"] 
          and style_choice [ec_decode $style_choice "" "is null" "= :style_choice"] 
          and ((sysdate - in_cart_date) * 86400 < 5)))
    } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/ecommerce/www/shopping-cart-add-oracle.xql}
dbqd.ecommerce.www.shopping-cart-add.insert_new_ec_order {dbqd.ecommerce.www.shopping-cart-add.insert_new_ec_order {
      insert into ec_orders
      (order_id, user_session_id, order_state, in_basket_date)
      select :order_id, :user_session_id, 'in_basket', current_timestamp 
      where not exists (select 1 from ec_orders where user_session_id=:user_session_id and order_state='in_basket')
    } {} {} {postgresql 7.1} c:/web/openacs-4/packages/ecommerce/www/shopping-cart-add-postgresql.xql}
dbqd.ecommerce.www.shopping-cart-add.insert_problem_into_log {dbqd.ecommerce.www.shopping-cart-add.insert_problem_into_log {
      insert into ec_problems_log
      (problem_id, problem_date, problem_details)
      values
      (ec_problem_id_sequence.nextval, current_timestamp,:errormsg)
    } {} {} {postgresql 7.1} c:/web/openacs-4/packages/ecommerce/www/shopping-cart-add-postgresql.xql}
dbqd.ecommerce.www.shopping-cart-add.insert_new_item_in_order {dbqd.ecommerce.www.shopping-cart-add.insert_new_item_in_order {
      insert into ec_items
      (item_id, product_id, color_choice, size_choice, style_choice, order_id, in_cart_date)
      (select ec_item_id_sequence.nextval, :product_id, :color_choice, :size_choice, :style_choice, :order_id, current_timestamp 
      where not exists (select 1 
          from ec_items 
          where order_id=:order_id 
          and product_id=:product_id 
          and color_choice  [ec_decode $color_choice "" "is null" "= :color_choice"]  
          and size_choice [ec_decode $size_choice "" "is null" "= :size_choice"] 
          and style_choice [ec_decode $style_choice "" "is null" "= :style_choice"] 
          and (date_part('epoch', now()) - date_part('epoch', in_cart_date) < 5)))
    } {} {} {postgresql 7.1} c:/web/openacs-4/packages/ecommerce/www/shopping-cart-add-postgresql.xql}
dbqd.ecommerce.www.shopping-cart-add.get_n_confirmed_orders {dbqd.ecommerce.www.shopping-cart-add.get_n_confirmed_orders {
      select count(*) 
      from ec_orders
      where user_session_id=:user_session_id
      and order_state='confirmed'
    } {} {} {} c:/web/openacs-4/packages/ecommerce/www/shopping-cart-add.xql}
dbqd.ecommerce.www.shopping-cart-add.get_order_id {dbqd.ecommerce.www.shopping-cart-add.get_order_id {
      select order_id
      from ec_orders
      where user_session_id=:user_session_id
      and order_state='in_basket'
    } {} {} {} c:/web/openacs-4/packages/ecommerce/www/shopping-cart-add.xql}
dbqd.ecommerce.www.shopping-cart-add.get_order_id {dbqd.ecommerce.www.shopping-cart-add.get_order_id {
      select order_id
      from ec_orders
      where user_session_id=:user_session_id
      and order_state='in_basket'
    } {} {} {} c:/web/openacs-4/packages/ecommerce/www/shopping-cart-add.xql}
dbqd.ecommerce.www.shopping-cart-delete-from.get_order_id {dbqd.ecommerce.www.shopping-cart-delete-from.get_order_id {
      select order_id 
      from ec_orders 
      where user_session_id=:user_session_id 
      and order_state='in_basket'
    } {} {} {} c:/web/openacs-4/packages/ecommerce/www/shopping-cart-delete-from.xql}
dbqd.ecommerce.www.shopping-cart-delete-from.delete_item_from_cart {dbqd.ecommerce.www.shopping-cart-delete-from.delete_item_from_cart {
      delete from ec_items 
      where order_id=:order_id 
      and product_id=:product_id
      and color_choice [ec_decode $color_choice "" "is null" "= :color_choice"] 
      and size_choice [ec_decode $size_choice "" "is null" "= :size_choice"] 
      and style_choice [ec_decode $style_choice "" "is null" "= :style_choice"]
    } {} {} {} c:/web/openacs-4/packages/ecommerce/www/shopping-cart-delete-from.xql}
dbqd.ecommerce.www.shopping-cart-oracle.get_products_in_cart {dbqd.ecommerce.www.shopping-cart-oracle.get_products_in_cart {
    select p.product_name, p.one_line_description, p.product_id, count(*) as quantity, u.offer_code, i.color_choice, i.size_choice, i.style_choice, '' as price
    from ec_orders o, ec_items i, ec_products p, 
        (select product_id, offer_code from ec_user_session_offer_codes usoc where usoc.user_session_id=:user_session_id) u
    where i.product_id=p.product_id
    and o.order_id=i.order_id
    and p.product_id=u.product_id(+)
    and o.user_session_id=:user_session_id and o.order_state='in_basket'
    group by p.product_name, p.one_line_description, p.product_id, u.offer_code, i.color_choice, i.size_choice, i.style_choice
    } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/ecommerce/www/shopping-cart-oracle.xql}
dbqd.ecommerce.www.shopping-cart.get_products_in_cart {dbqd.ecommerce.www.shopping-cart.get_products_in_cart {
      select p.product_name, p.one_line_description, p.product_id, count(*) as quantity, u.offer_code, i.color_choice, i.size_choice, i.style_choice, '' as price 
      from ec_orders o
      join ec_items i on (o.order_id=i.order_id)
      join ec_products p on (i.product_id=p.product_id)
      left join (select product_id, offer_code 
	  from ec_user_session_offer_codes usoc 
	  where usoc.user_session_id=:user_session_id) u on (p.product_id=u.product_id)
      where o.user_session_id=:user_session_id 
      and o.order_state='in_basket'
      group by p.product_name, p.one_line_description, p.product_id, u.offer_code, i.color_choice, i.size_choice, i.style_choice
    } {} {} {postgresql 7.1} c:/web/openacs-4/packages/ecommerce/www/shopping-cart-postgresql.xql}
dbqd.ecommerce.www.shopping-cart-quantities-change-oracle.insert_new_quantity_to_add {dbqd.ecommerce.www.shopping-cart-quantities-change-oracle.insert_new_quantity_to_add {
      insert into ec_items
      (item_id, product_id, color_choice, size_choice, style_choice, order_id, in_cart_date)
      values
      (ec_item_id_sequence.nextval, :product_id, :color_choice, :size_choice, :style_choice, :order_id, sysdate)
    } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/ecommerce/www/shopping-cart-quantities-change-oracle.xql}
dbqd.ecommerce.www.shopping-cart-quantities-change.insert_new_quantity_to_add {dbqd.ecommerce.www.shopping-cart-quantities-change.insert_new_quantity_to_add {
      insert into ec_items
      (item_id, product_id, color_choice, size_choice, style_choice, order_id, in_cart_date)
      values
      (ec_item_id_sequence.nextval, :product_id, :color_choice, :size_choice, :style_choice, :order_id, current_timestamp)
    } {} {} {postgresql 7.1} c:/web/openacs-4/packages/ecommerce/www/shopping-cart-quantities-change-postgresql.xql}
dbqd.ecommerce.www.shopping-cart-quantities-change.get_order_id {dbqd.ecommerce.www.shopping-cart-quantities-change.get_order_id {
      select order_id from ec_orders where order_state='in_basket' and user_session_id=:user_session_id
    } {} {} {} c:/web/openacs-4/packages/ecommerce/www/shopping-cart-quantities-change.xql}
dbqd.ecommerce.www.shopping-cart-quantities-change. {dbqd.ecommerce.www.shopping-cart-quantities-change. {
      select i.product_id, i.color_choice, i.size_choice, i.style_choice, count(*) as r_quantity
      from ec_orders o, ec_items i
      where o.order_id=i.order_id
      and o.user_session_id=:user_session_id
      and o.order_state='in_basket'
      group by i.product_id, i.color_choice, i.size_choice, i.style_choice
    } {} {} {} c:/web/openacs-4/packages/ecommerce/www/shopping-cart-quantities-change.xql}
dbqd.ecommerce.www.shopping-cart-quantities-change.get_rows_to_delete {dbqd.ecommerce.www.shopping-cart-quantities-change.get_rows_to_delete {
      select max(item_id) 
      from ec_items 
      where product_id=:product_id
      and color_choice [ec_decode $color_choice "" "is null" "= :color_choice"]
      and size_choice [ec_decode $size_choice "" "is null" "= :size_choice"]
      and style_choice [ec_decode $style_choice "" "is null" "= :style_choice"]
      and order_id=:order_id $extra_condition
    } {} {} {} c:/web/openacs-4/packages/ecommerce/www/shopping-cart-quantities-change.xql}
dbqd.ecommerce.www.shopping-cart-quantities-change.delete_from_ec_items {dbqd.ecommerce.www.shopping-cart-quantities-change.delete_from_ec_items {
      delete from ec_items 
      where item_id in ([join $rows_to_delete ", "])
    } {} {} {} c:/web/openacs-4/packages/ecommerce/www/shopping-cart-quantities-change.xql}
dbqd.ecommerce.www.shopping-cart-retrieve-2-oracle.get_basket_info {dbqd.ecommerce.www.shopping-cart-retrieve-2-oracle.get_basket_info {
      select to_char(o.in_basket_date,'Month DD, YYYY') as formatted_in_basket_date, o.in_basket_date, o.order_id, count(*) as n_products
      from ec_orders o, ec_items i
      where user_id=:user_id
      and order_state='in_basket'
      and saved_p='t'
      and i.order_id=o.order_id
      group by o.order_id, to_char(o.in_basket_date,'Month DD, YYYY'), o.in_basket_date
      order by o.in_basket_date
    } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/ecommerce/www/shopping-cart-retrieve-2-oracle.xql}
dbqd.ecommerce.www.shopping-cart-retrieve-2.get_basket_info {dbqd.ecommerce.www.shopping-cart-retrieve-2.get_basket_info {
      select to_char(o.in_basket_date,'Month DD, YYYY') as formatted_in_basket_date, o.in_basket_date, o.order_id, count(*) as n_products
      from ec_orders o, ec_items i
      where user_id=:user_id
      and order_state='in_basket'
      and saved_p='t'
      and i.order_id=o.order_id
      group by o.order_id, to_char(o.in_basket_date,'Month DD, YYYY'), o.in_basket_date
      order by o.in_basket_date
    } {} {} {postgresql 7.1} c:/web/openacs-4/packages/ecommerce/www/shopping-cart-retrieve-2-postgresql.xql}
dbqd.ecommerce.www.shopping-cart-retrieve-3-oracle.get_saved_date {dbqd.ecommerce.www.shopping-cart-retrieve-3-oracle.get_saved_date {
      select to_char(in_basket_date,'Month DD, YYYY') as formatted_in_basket_date 
      from ec_orders
      where order_id=:order_id
    } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/ecommerce/www/shopping-cart-retrieve-3-oracle.xql}
dbqd.ecommerce.www.shopping-cart-retrieve-3.get_saved_date {dbqd.ecommerce.www.shopping-cart-retrieve-3.get_saved_date {
      select to_char(in_basket_date,'Month DD, YYYY') as formatted_in_basket_date 
      from ec_orders
      where order_id=:order_id
    } {} {} {postgresql 7.1} c:/web/openacs-4/packages/ecommerce/www/shopping-cart-retrieve-3-postgresql.xql}
dbqd.ecommerce.www.shopping-cart-retrieve-3.get_order_exists_p {dbqd.ecommerce.www.shopping-cart-retrieve-3.get_order_exists_p {
      select count(*) 
      from ec_orders 
      where order_id=:order_id
    } {} {} {} c:/web/openacs-4/packages/ecommerce/www/shopping-cart-retrieve-3.xql}
dbqd.ecommerce.www.shopping-cart-retrieve-3.get_order_is_theirs {dbqd.ecommerce.www.shopping-cart-retrieve-3.get_order_is_theirs {
      select count(*) 
      from ec_orders
      where order_id=:order_id
      and user_id=:user_id
    } {} {} {} c:/web/openacs-4/packages/ecommerce/www/shopping-cart-retrieve-3.xql}
dbqd.ecommerce.www.shopping-cart-retrieve-3.confirm_have_basket {dbqd.ecommerce.www.shopping-cart-retrieve-3.confirm_have_basket {
      select count(*) 
      from ec_orders
      where order_id=:order_id
      and order_state='in_basket' and saved_p='t'
    } {} {} {} c:/web/openacs-4/packages/ecommerce/www/shopping-cart-retrieve-3.xql}
dbqd.ecommerce.www.shopping-cart-retrieve-3.get_saved_shopping_cart {dbqd.ecommerce.www.shopping-cart-retrieve-3.get_saved_shopping_cart {
      select p.product_name, p.one_line_description, p.product_id, i.color_choice, i.size_choice, i.style_choice, count(*) as quantity
      from ec_orders o, ec_items i, ec_products p
      where i.product_id=p.product_id
      and o.order_id=i.order_id
      and o.order_id=:order_id
      group by p.product_name, p.one_line_description, p.product_id, i.color_choice, i.size_choice, i.style_choice
    } {} {} {} c:/web/openacs-4/packages/ecommerce/www/shopping-cart-retrieve-3.xql}
dbqd.ecommerce.www.shopping-cart-retrieve-3.get_n_baskets {dbqd.ecommerce.www.shopping-cart-retrieve-3.get_n_baskets {
      select count(*) 
      from ec_orders
      where order_state='in_basket'
      and user_session_id=:user_session_id
    } {} {} {} c:/web/openacs-4/packages/ecommerce/www/shopping-cart-retrieve-3.xql}
dbqd.ecommerce.www.shopping-cart-retrieve-3.update_ec_orders {dbqd.ecommerce.www.shopping-cart-retrieve-3.update_ec_orders {
      update ec_orders set user_session_id=:user_session_id, saved_p='f' where order_id=:order_id
    } {} {} {} c:/web/openacs-4/packages/ecommerce/www/shopping-cart-retrieve-3.xql}
dbqd.ecommerce.www.shopping-cart-retrieve-3.get_special_offers {dbqd.ecommerce.www.shopping-cart-retrieve-3.get_special_offers {
      select o.offer_code, o.product_id
      from ec_user_sessions s, ec_user_session_offer_codes o, ec_sale_prices_current p
      where p.offer_code=o.offer_code
      and s.user_session_id=o.user_session_id
      and s.user_id=:user_id
      order by p.sale_price
    } {} {} {} c:/web/openacs-4/packages/ecommerce/www/shopping-cart-retrieve-3.xql}
dbqd.ecommerce.www.shopping-cart-retrieve-3.delete_previous_offer_codes {dbqd.ecommerce.www.shopping-cart-retrieve-3.delete_previous_offer_codes {
      delete from ec_user_session_offer_codes
      where user_session_id=:user_session_id
    } {} {} {} c:/web/openacs-4/packages/ecommerce/www/shopping-cart-retrieve-3.xql}
dbqd.ecommerce.www.shopping-cart-retrieve-3.insert_session_offer {dbqd.ecommerce.www.shopping-cart-retrieve-3.insert_session_offer {
      insert into ec_user_session_offer_codes
      (user_session_id, product_id, offer_code)
      values
      (:user_session_id, :temp_pd, :offprod)
    } {} {} {} c:/web/openacs-4/packages/ecommerce/www/shopping-cart-retrieve-3.xql}
dbqd.ecommerce.www.shopping-cart-retrieve-3.get_current_basket {dbqd.ecommerce.www.shopping-cart-retrieve-3.get_current_basket {
      select order_id 
      from ec_orders
      where user_session_id=:user_session_id
      and order_state='in_basket'
    } {} {} {} c:/web/openacs-4/packages/ecommerce/www/shopping-cart-retrieve-3.xql}
dbqd.ecommerce.www.shopping-cart-retrieve-3.update_order_basket_pr {dbqd.ecommerce.www.shopping-cart-retrieve-3.update_order_basket_pr {
      update ec_items set order_id=:current_basket where order_id=:order_id
    } {} {} {} c:/web/openacs-4/packages/ecommerce/www/shopping-cart-retrieve-3.xql}
dbqd.ecommerce.www.shopping-cart-retrieve-3.get_product_offer_codes {dbqd.ecommerce.www.shopping-cart-retrieve-3.get_product_offer_codes {
      select o.offer_code, o.product_id
      from ec_user_sessions s, ec_user_session_offer_codes o, ec_sale_prices_current p
      where p.offer_code=o.offer_code
      and s.user_session_id=o.user_session_id
      and s.user_id=:user_id
      order by p.sale_price
    } {} {} {} c:/web/openacs-4/packages/ecommerce/www/shopping-cart-retrieve-3.xql}
dbqd.ecommerce.www.shopping-cart-retrieve-3.delete_session_offer_codes {dbqd.ecommerce.www.shopping-cart-retrieve-3.delete_session_offer_codes {
      delete from ec_user_session_offer_codes
      where user_session_id=:user_session_id
    } {} {} {} c:/web/openacs-4/packages/ecommerce/www/shopping-cart-retrieve-3.xql}
dbqd.ecommerce.www.shopping-cart-retrieve-3.insert_session_offer {dbqd.ecommerce.www.shopping-cart-retrieve-3.insert_session_offer {
      insert into ec_user_session_offer_codes
      (user_session_id, product_id, offer_code)
      values
      (:user_session_id, :temp_pd, :offprod)
    } {} {} {} c:/web/openacs-4/packages/ecommerce/www/shopping-cart-retrieve-3.xql}
dbqd.ecommerce.www.shopping-cart-retrieve-3.get_current_baskey {dbqd.ecommerce.www.shopping-cart-retrieve-3.get_current_baskey {
      select order_id 
      from ec_orders
      where user_session_id=:user_session_id
      and order_state='in_basket'
    } {} {} {} c:/web/openacs-4/packages/ecommerce/www/shopping-cart-retrieve-3.xql}
dbqd.ecommerce.www.shopping-cart-retrieve-3.delete_current_items {dbqd.ecommerce.www.shopping-cart-retrieve-3.delete_current_items {
      delete from ec_items
      where order_id=:current_basket
    } {} {} {} c:/web/openacs-4/packages/ecommerce/www/shopping-cart-retrieve-3.xql}
dbqd.ecommerce.www.shopping-cart-retrieve-3.update_items {dbqd.ecommerce.www.shopping-cart-retrieve-3.update_items {
      update ec_items set order_id=:current_basket where order_id=:order_id
    } {} {} {} c:/web/openacs-4/packages/ecommerce/www/shopping-cart-retrieve-3.xql}
dbqd.ecommerce.www.shopping-cart-retrieve-3. {dbqd.ecommerce.www.shopping-cart-retrieve-3. {
      select o.offer_code, o.product_id
      from ec_user_sessions s, ec_user_session_offer_codes o, ec_sale_prices_current p
      where p.offer_code=o.offer_code
      and s.user_session_id=o.user_session_id
      and s.user_id=:user_id
      order by p.sale_price
    } {} {} {} c:/web/openacs-4/packages/ecommerce/www/shopping-cart-retrieve-3.xql}
dbqd.ecommerce.www.shopping-cart-retrieve-3.delete_uc_offer_codes {dbqd.ecommerce.www.shopping-cart-retrieve-3.delete_uc_offer_codes {
      delete from ec_user_session_offer_codes
      where user_session_id=:user_session_id
    } {} {} {} c:/web/openacs-4/packages/ecommerce/www/shopping-cart-retrieve-3.xql}
dbqd.ecommerce.www.shopping-cart-retrieve-3.insert_session_offer {dbqd.ecommerce.www.shopping-cart-retrieve-3.insert_session_offer {
      insert into ec_user_session_offer_codes
      (user_session_id, product_id, offer_code)
      values
      (:user_session_id, :temp_pd, :offprod)
    } {} {} {} c:/web/openacs-4/packages/ecommerce/www/shopping-cart-retrieve-3.xql}
dbqd.ecommerce.www.shopping-cart-retrieve-3.delete_current_cart {dbqd.ecommerce.www.shopping-cart-retrieve-3.delete_current_cart {
      delete from ec_items
      where order_id=:order_id
    } {} {} {} c:/web/openacs-4/packages/ecommerce/www/shopping-cart-retrieve-3.xql}
dbqd.ecommerce.www.shopping-cart-retrieve-3.delete_current_cart {dbqd.ecommerce.www.shopping-cart-retrieve-3.delete_current_cart {
      delete from ec_items
      where order_id=:order_id
    } {} {} {} c:/web/openacs-4/packages/ecommerce/www/shopping-cart-retrieve-3.xql}
dbqd.ecommerce.www.shopping-cart-retrieve.get_user_name {dbqd.ecommerce.www.shopping-cart-retrieve.get_user_name {
      select first_names || ' ' || last_name as user_name
      from cc_users
      where user_id=:user_id
    } {} {} {} c:/web/openacs-4/packages/ecommerce/www/shopping-cart-retrieve.xql}
dbqd.ecommerce.www.shopping-cart-save-2.update_ec_orders {dbqd.ecommerce.www.shopping-cart-save-2.update_ec_orders {
      update ec_orders 
      set user_id=:user_id, user_session_id=null, saved_p='t'
      where user_session_id=:user_session_id
      and order_state='in_basket'
    } {} {} {} c:/web/openacs-4/packages/ecommerce/www/shopping-cart-save-2.xql}
dbqd.ecommerce.www.shopping-cart-save.get_full_name {dbqd.ecommerce.www.shopping-cart-save.get_full_name {
      select first_names || ' ' || last_name as user_name
      from cc_users 
      where user_id=:user_id
    } {} {} {} c:/web/openacs-4/packages/ecommerce/www/shopping-cart-save.xql}
dbqd.ecommerce.www.shopping-cart.get_n_items {dbqd.ecommerce.www.shopping-cart.get_n_items {
      select count(*) 
      from ec_orders o, ec_items i
      where o.order_id=i.order_id
      and o.user_session_id=:user_session_id and o.order_state='in_basket'
    } {} {} {} c:/web/openacs-4/packages/ecommerce/www/shopping-cart.xql}
dbqd.ecommerce.www.shopping-cart.tax_states {dbqd.ecommerce.www.shopping-cart.tax_states {
      select tax_rate, initcap(state_name) as state 
      from ec_sales_tax_by_state tax, us_states state 
      where state.abbrev = tax.usps_abbrev
    } {} {} {} c:/web/openacs-4/packages/ecommerce/www/shopping-cart.xql}
dbqd.ecommerce.www.thank-you.get_order_id_info {dbqd.ecommerce.www.thank-you.get_order_id_info {
      select order_id 
      from ec_orders
      where user_id=:user_id and confirmed_date is not null
      and order_id=(select max(o2.order_id) 
      	  from ec_orders o2
	  where o2.user_id=$user_id 
          and o2.confirmed_date is not null)
    } {} {} {} c:/web/openacs-4/packages/ecommerce/www/thank-you.xql}
dbqd.ecommerce.www.track-oracle.get_order_info {dbqd.ecommerce.www.track-oracle.get_order_info {
      select to_char(shipment_date, 'MMDDYY') as ship_date_for_fedex, to_char(shipment_date, 'MM/DD/YYYY') as pretty_ship_date, carrier, tracking_number
      from ec_shipments
      where shipment_id = :shipment_id
    } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/ecommerce/www/track-oracle.xql}
dbqd.ecommerce.www.track.get_order_info {dbqd.ecommerce.www.track.get_order_info {
      select to_char(shipment_date, 'MMDDYY') as ship_date_for_fedex, to_char(shipment_date, 'MM/DD/YYYY') as pretty_ship_date, carrier, tracking_number
      from ec_shipments
      where shipment_id = :shipment_id
    } {} {} {postgresql 7.1} c:/web/openacs-4/packages/ecommerce/www/track-postgresql.xql}
dbqd.ecommerce.www.track.assure_order_is_this_user {dbqd.ecommerce.www.track.assure_order_is_this_user {
      select user_id from ec_orders o, ec_shipments s
      where o.order_id = s.order_id
      and s.shipment_id = :shipment_id
    } {} {} {} c:/web/openacs-4/packages/ecommerce/www/track.xql}
dbqd.ecommerce.www.update-user-classes-2-oracle.insert_user_class {dbqd.ecommerce.www.update-user-classes-2-oracle.insert_user_class {
      insert into ec_user_class_user_map 
      (user_id, user_class_id, user_class_approved_p, last_modified, last_modifying_user, modified_ip_address) 
      values 
      (:user_id, :user_class_id, null, sysdate, :user_id, :ip_address)
    } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/ecommerce/www/update-user-classes-2-oracle.xql}
dbqd.ecommerce.www.update-user-classes-2.insert_user_class {dbqd.ecommerce.www.update-user-classes-2.insert_user_class {
      insert into ec_user_class_user_map 
      (user_id, user_class_id, user_class_approved_p, last_modified, last_modifying_user, modified_ip_address) 
      values 
      (:user_id, :user_class_id, null, current_timestamp, :user_id, :ip_address)
    } {} {} {postgresql 7.1} c:/web/openacs-4/packages/ecommerce/www/update-user-classes-2-postgresql.xql}
dbqd.ecommerce.www.update-user-classes-2.get_old_class_ids {dbqd.ecommerce.www.update-user-classes-2.get_old_class_ids {
      select user_class_id 
      from ec_user_class_user_map 
      where user_id = :user_id
    } {} {} {} c:/web/openacs-4/packages/ecommerce/www/update-user-classes-2.xql}
dbqd.ecommerce.www.update-user-classes.get_user_class_list_for_uid {dbqd.ecommerce.www.update-user-classes.get_user_class_list_for_uid {
      select user_class_id 
      from ec_user_class_user_map 
      where user_id = :user_id
    } {} {} {} c:/web/openacs-4/packages/ecommerce/www/update-user-classes.xql}
dbqd.edit-this-page.tcl.etp-procs-oracle.etp::define_content_type.object_type_create {dbqd.edit-this-page.tcl.etp-procs-oracle.etp::define_content_type.object_type_create {
	begin
	    acs_object_type.create_type (
	        object_type    => :content_type,
	        pretty_name    => :pretty_name,
	        pretty_plural  => :pretty_plural,
	        supertype      => 'content_revision',
	        table_name     => :content_type,
	        id_column      => :content_type
	    );
	end;
} {} {} {oracle 8.1.6} c:/web/openacs-4/packages/edit-this-page/tcl/etp-procs-oracle.xql}
dbqd.edit-this-page.tcl.etp-procs-oracle.etp::define_content_type.attribute_create {dbqd.edit-this-page.tcl.etp-procs-oracle.etp::define_content_type.attribute_create {
	begin
		:1 := acs_attribute.create_attribute (
		    object_type      => :content_type,
		    attribute_name   => :a_name,
		    datatype         => :a_datatype,
		    pretty_name      => :a_pretty_name,
		    pretty_plural    => :a_pretty_plural,
		    default_value    => :a_default,
		    min_n_values     => 1,
		    max_n_values     => 1,
		    storage          => 'generic'
		);
	end;
} {} {} {oracle 8.1.6} c:/web/openacs-4/packages/edit-this-page/tcl/etp-procs-oracle.xql}
dbqd.edit-this-page.tcl.etp-procs-oracle.etp::make_page.page_create {dbqd.edit-this-page.tcl.etp-procs-oracle.etp::make_page.page_create {
	begin
	  :1 := etp.create_page(
	           package_id     => :package_id,
	           name           => :name,
                   title          => :title,
	           content_type   => :content_type
	        );
	end;
} {} {} {oracle 8.1.6} c:/web/openacs-4/packages/edit-this-page/tcl/etp-procs-oracle.xql}
dbqd.edit-this-page.tcl.etp-procs-oracle.etp::register-page.package_id_from_url {dbqd.edit-this-page.tcl.etp-procs-oracle.etp::register-page.package_id_from_url {
	    select object_id as package_id
	      from site_nodes
	     where node_id = site_node.node_id(:url_stub, null)
} {} {} {oracle 8.1.6} c:/web/openacs-4/packages/edit-this-page/tcl/etp-procs-oracle.xql}
dbqd.edit-this-page.tcl.etp-procs-oracle.etp::make_page.page_exists {dbqd.edit-this-page.tcl.etp-procs-oracle.etp::make_page.page_exists {
	    select 1 from cr_items
	     where parent_id = etp.get_folder_id(:package_id)
	       and name = :name
} {} {} {oracle 8.1.6} c:/web/openacs-4/packages/edit-this-page/tcl/etp-procs-oracle.xql}
dbqd.edit-this-page.tcl.etp-procs-oracle.etp::get_pa.get_page_attributes {dbqd.edit-this-page.tcl.etp-procs-oracle.etp::get_pa.get_page_attributes {
	select i.item_id, i.name, r.revision_id, r.title, 
	       r.description, r.publish_date, r.content $extended_attributes
	  from cr_items i, cr_revisions r
	 where i.parent_id = etp.get_folder_id(:package_id)
	   and i.name = :name
	   and i.item_id = r.item_id
	   and r.revision_id = i.live_revision
} {} {} {oracle 8.1.6} c:/web/openacs-4/packages/edit-this-page/tcl/etp-procs-oracle.xql}
dbqd.edit-this-page.tcl.etp-procs-oracle.etp::get_pa.get_page_attributes_other_revision {dbqd.edit-this-page.tcl.etp-procs-oracle.etp::get_pa.get_page_attributes_other_revision {
	select i.item_id, i.name, r.revision_id, r.title, 
	       r.description, r.publish_date, r.content $extended_attributes
	  from cr_items i, cr_revisions r
	 where i.parent_id = etp.get_folder_id(:package_id)
	   and i.name = :name
	   and i.item_id = r.item_id
	   and r.revision_id = :revision_id
} {} {} {oracle 8.1.6} c:/web/openacs-4/packages/edit-this-page/tcl/etp-procs-oracle.xql}
dbqd.edit-this-page.tcl.etp-procs-oracle.etp::get_latest_revision_id.get_latest_revision_id {dbqd.edit-this-page.tcl.etp-procs-oracle.etp::get_latest_revision_id.get_latest_revision_id {
	select max(revision_id) as revision_id
          from cr_revisions r, cr_items i
         where i.parent_id = etp.get_folder_id(:package_id)
           and i.name = :name
           and i.item_id = r.item_id
} {} {} {oracle 8.1.6} c:/web/openacs-4/packages/edit-this-page/tcl/etp-procs-oracle.xql}
dbqd.edit-this-page.tcl.etp-procs-oracle.etp::get_live_revision_id.get_live_revision_id {dbqd.edit-this-page.tcl.etp-procs-oracle.etp::get_live_revision_id.get_live_revision_id {
	select live_revision as revision_id
          from cr_items i
         where i.parent_id = etp.get_folder_id(:package_id)
           and i.name = :name
} {} {} {oracle 8.1.6} c:/web/openacs-4/packages/edit-this-page/tcl/etp-procs-oracle.xql}
dbqd.edit-this-page.tcl.etp-procs-oracle.etp::get_content_items.get_content_items {dbqd.edit-this-page.tcl.etp-procs-oracle.etp::get_content_items.get_content_items {
   select * from
     (select * from (
	select $columns
          from cr_items i, cr_revisions r
         where i.parent_id = etp.get_folder_id(:package_id)
	   and i.name != 'index'
           and i.live_revision = r.revision_id(+)
     ) attributes
     where $extra_where_clauses
     order by $orderby)
   $limit_clause
} {} {} {oracle 8.1.6} c:/web/openacs-4/packages/edit-this-page/tcl/etp-procs-oracle.xql}
dbqd.edit-this-page.tcl.etp-procs-oracle.etp::get_subtopics.get_subtopics {dbqd.edit-this-page.tcl.etp-procs-oracle.etp::get_subtopics.get_subtopics {
select child.name, child.node_id, child.object_id as package_id,
                   etp.package_title(child.object_id) as title,
                   etp.package_description(child.object_id) as description
  from site_nodes parent, site_nodes child, apm_packages p
 where parent.object_id = :package_id
   and child.parent_id = parent.node_id
   and child.object_id = p.package_id
   and p.package_key = 'edit-this-page'
} {} {} {oracle 8.1.6} c:/web/openacs-4/packages/edit-this-page/tcl/etp-procs-oracle.xql}
dbqd.edit-this-page.tcl.etp-procs-oracle.etp::get_attribute_lookup_sql.lookup_sql_clause {dbqd.edit-this-page.tcl.etp-procs-oracle.etp::get_attribute_lookup_sql.lookup_sql_clause {
    etp.get_attribute_value(r.revision_id, $attribute_id)
  } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/edit-this-page/tcl/etp-procs-oracle.xql}
dbqd.edit-this-page.tcl.etp-procs-oracle.etp::get_content_items.gci_orderby {dbqd.edit-this-page.tcl.etp-procs-oracle.etp::get_content_items.gci_orderby {
	sort_order
  } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/edit-this-page/tcl/etp-procs-oracle.xql}
dbqd.edit-this-page.tcl.etp-procs-oracle.etp::get_content_items.gci_columns_clause {dbqd.edit-this-page.tcl.etp-procs-oracle.etp::get_content_items.gci_columns_clause {
   i.item_id, i.name,
             to_char(r.publish_date, 'Mon DD, YYYY') as publish_date, rownum as sort_order,
             (select object_type from acs_objects 
               where object_id = i.item_id) as object_type,
             etp.get_relative_url(i.item_id, i.name) as url,
             etp.get_title(i.item_id, r.title) as title,
             etp.get_description(i.item_id, r.description) as description
  } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/edit-this-page/tcl/etp-procs-oracle.xql}
dbqd.edit-this-page.tcl.etp-procs.etp::revision_url.package_url {dbqd.edit-this-page.tcl.etp-procs.etp::revision_url.package_url {
select site_node__url(node_id) as package_url from site_nodes where object_id = (select package_id from cr_folders where folder_id= (select parent_id from cr_items where latest_revision = :object_id))
    } {} {} {postgresql 7.1} c:/web/openacs-4/packages/edit-this-page/tcl/etp-procs-postgresql.xql}
dbqd.edit-this-page.tcl.etp-procs.etp::define_content_type.object_type_create {dbqd.edit-this-page.tcl.etp-procs.etp::define_content_type.object_type_create {
	    select acs_object_type__create_type (
	        :content_type,
	        :pretty_name,
	        :pretty_plural,
	        'etp_page_revision',
	        :content_type,
	        :content_type,
	        null,
	        'f',
	        null,
	        null
	    )
} {} {} {postgresql 7.1} c:/web/openacs-4/packages/edit-this-page/tcl/etp-procs-postgresql.xql}
dbqd.edit-this-page.tcl.etp-procs.etp::define_content_type.attribute_create {dbqd.edit-this-page.tcl.etp-procs.etp::define_content_type.attribute_create {
		select acs_attribute__create_attribute (
		    :content_type,
		    :a_name,
		    :a_datatype,
		    :a_pretty_name,
		    :a_pretty_plural,
		    null,
		    null,
		    :a_default,
		    1,
		    1,
		    null,
		    'generic',
		    'f'
		)
} {} {} {postgresql 7.1} c:/web/openacs-4/packages/edit-this-page/tcl/etp-procs-postgresql.xql}
dbqd.edit-this-page.tcl.etp-procs.etp::make_page.page_create {dbqd.edit-this-page.tcl.etp-procs.etp::make_page.page_create {
	select etp__create_page(
	  :item_id,
	  :package_id,
	  :name,
          :title,
	  :content_type
	)
} {} {} {postgresql 7.1} c:/web/openacs-4/packages/edit-this-page/tcl/etp-procs-postgresql.xql}
dbqd.edit-this-page.tcl.etp-procs.etp::register_page.package_id_from_url {dbqd.edit-this-page.tcl.etp-procs.etp::register_page.package_id_from_url {
	    select object_id as package_id
	      from site_nodes
	     where node_id = site_node__node_id(:url_stub, null)
} {} {} {postgresql 7.1} c:/web/openacs-4/packages/edit-this-page/tcl/etp-procs-postgresql.xql}
dbqd.edit-this-page.tcl.etp-procs.etp::make_page.page_exists {dbqd.edit-this-page.tcl.etp-procs.etp::make_page.page_exists {
	    select 1 from cr_items
	     where parent_id = etp__get_folder_id(:package_id)
	       and name = :name
} {} {} {postgresql 7.1} c:/web/openacs-4/packages/edit-this-page/tcl/etp-procs-postgresql.xql}
dbqd.edit-this-page.tcl.etp-procs.etp::get_pa.get_page_attributes {dbqd.edit-this-page.tcl.etp-procs.etp::get_pa.get_page_attributes {
	select i.item_id, i.name, r.revision_id, r.title, r.mime_type,
	       r.description, r.publish_date, r.content $extended_attributes
	  from cr_items i, cr_revisions r
	 where i.parent_id = etp__get_folder_id(:package_id)
	   and i.name = :name
	   and i.item_id = r.item_id
	   and r.revision_id = i.live_revision
} {} {} {postgresql 7.1} c:/web/openacs-4/packages/edit-this-page/tcl/etp-procs-postgresql.xql}
dbqd.edit-this-page.tcl.etp-procs.etp::get_pa.get_page_attributes_other_revision {dbqd.edit-this-page.tcl.etp-procs.etp::get_pa.get_page_attributes_other_revision {
	select i.item_id, i.name, r.revision_id, r.title, r.mime_type,
	       r.description, r.publish_date, r.content $extended_attributes
	  from cr_items i, cr_revisions r
	 where i.parent_id = etp__get_folder_id(:package_id)
	   and i.name = :name
	   and i.item_id = r.item_id
	   and r.revision_id = :revision_id
} {} {} {postgresql 7.1} c:/web/openacs-4/packages/edit-this-page/tcl/etp-procs-postgresql.xql}
dbqd.edit-this-page.tcl.etp-procs.etp::get_latest_revision_id.get_latest_revision_id {dbqd.edit-this-page.tcl.etp-procs.etp::get_latest_revision_id.get_latest_revision_id {
	select max(revision_id) as revision_id
          from cr_revisions r, cr_items i
         where i.parent_id = etp__get_folder_id(:package_id)
           and i.name = :name
           and i.item_id = r.item_id
} {} {} {postgresql 7.1} c:/web/openacs-4/packages/edit-this-page/tcl/etp-procs-postgresql.xql}
dbqd.edit-this-page.tcl.etp-procs.etp::get_live_revision_id.get_live_revision_id {dbqd.edit-this-page.tcl.etp-procs.etp::get_live_revision_id.get_live_revision_id {
	select live_revision as revision_id
          from cr_items i
         where i.parent_id = etp__get_folder_id(:package_id)
           and i.name = :name
} {} {} {postgresql 7.1} c:/web/openacs-4/packages/edit-this-page/tcl/etp-procs-postgresql.xql}
dbqd.edit-this-page.tcl.etp-procs.etp::get_content_items.get_content_items {dbqd.edit-this-page.tcl.etp-procs.etp::get_content_items.get_content_items {
   select * from
     (select $columns
      from cr_items i left join cr_revisions r on (i.live_revision = r.revision_id)
      where i.parent_id = etp__get_folder_id(:package_id) and i.name != 'index'
     ) attributes
   where $extra_where_clauses
   order by $orderby
   $limit_clause
} {} {} {postgresql 7.1} c:/web/openacs-4/packages/edit-this-page/tcl/etp-procs-postgresql.xql}
dbqd.edit-this-page.tcl.etp-procs.etp::get_subtopics.get_subtopics {dbqd.edit-this-page.tcl.etp-procs.etp::get_subtopics.get_subtopics {
select child.name, child.node_id, child.object_id as package_id,
                   etp__get_title(f.folder_id,NULL) as title,
                   etp__get_description(f.folder_id,NULL) as description
	           site_node__url(child.node_id) as url
  from site_nodes parent, site_nodes child, apm_packages p,
  cr_folders f
 where parent.object_id = :package_id
   and child.parent_id = parent.node_id
   and child.object_id = p.package_id
   and p.package_key = 'edit-this-page'
   and f.package_id=p.package_id
} {} {} {postgresql 7.1} c:/web/openacs-4/packages/edit-this-page/tcl/etp-procs-postgresql.xql}
dbqd.edit-this-page.tcl.etp-procs.etp::get_attribute_lookup_sql.lookup_sql_clause {dbqd.edit-this-page.tcl.etp-procs.etp::get_attribute_lookup_sql.lookup_sql_clause {
    etp__get_attribute_value(r.revision_id, $attribute_id)
  } {} {} {postgresql 7.1} c:/web/openacs-4/packages/edit-this-page/tcl/etp-procs-postgresql.xql}
dbqd.edit-this-page.tcl.etp-procs.etp::get_content_items.gci_orderby {dbqd.edit-this-page.tcl.etp-procs.etp::get_content_items.gci_orderby {
      sort_order
   } {} {} {postgresql 7.1} c:/web/openacs-4/packages/edit-this-page/tcl/etp-procs-postgresql.xql}
dbqd.edit-this-page.tcl.etp-procs.etp::get_content_items.gci_columns_clause {dbqd.edit-this-page.tcl.etp-procs.etp::get_content_items.gci_columns_clause {
      i.item_id, i.name, tree_sortkey as sort_order,
      to_char(r.publish_date, 'Mon DD, YYYY') as publish_date,
      (select object_type from acs_objects 
       where object_id = i.item_id) as object_type,
             etp__get_relative_url(i.item_id, i.name) as url,
             etp__get_title(i.item_id, r.title) as title,
             etp__get_description(i.item_id, r.description) as description      
   } {} {} {postgresql 7.1} c:/web/openacs-4/packages/edit-this-page/tcl/etp-procs-postgresql.xql}
dbqd.edit-this-page.tcl.etp-procs.etp::get_folder_id.get_folder_id {dbqd.edit-this-page.tcl.etp-procs.etp::get_folder_id.get_folder_id {
	select etp__get_folder_id(:package_id)
	} {} {} {postgresql 7.1} c:/web/openacs-4/packages/edit-this-page/tcl/etp-procs-postgresql.xql}
dbqd.edit-this-page.tcl.etp-procs.etp::define_content_type.object_type_exists {dbqd.edit-this-page.tcl.etp-procs.etp::define_content_type.object_type_exists {
	select 1 from acs_object_types
	 where object_type = :content_type
} {} {} {} c:/web/openacs-4/packages/edit-this-page/tcl/etp-procs.xql}
dbqd.edit-this-page.tcl.etp-procs.etp::define_content_type.attribute_exists {dbqd.edit-this-page.tcl.etp-procs.etp::define_content_type.attribute_exists {
	    select attribute_id from acs_attributes
	     where object_type = :content_type
	       and attribute_name = :a_name
} {} {} {} c:/web/openacs-4/packages/edit-this-page/tcl/etp-procs.xql}
dbqd.edit-this-page.tcl.etp-procs.etp::get_content_items.gci_where_clause {dbqd.edit-this-page.tcl.etp-procs.etp::get_content_items.gci_where_clause {
   1 = 1
} {} {} {} c:/web/openacs-4/packages/edit-this-page/tcl/etp-procs.xql}
dbqd.edit-this-page.tcl.etp-sc-procs.etp::revision_url.package_url {dbqd.edit-this-page.tcl.etp-sc-procs.etp::revision_url.package_url {
select site_node__url(node_id) as package_url from site_nodes where object_id = (select package_id from cr_folders where folder_id= (select parent_id from cr_items where latest_revision = :object_id))
    } {} {} {postgresql 7.1} c:/web/openacs-4/packages/edit-this-page/tcl/etp-sc-procs-postgresql.xql}
dbqd.edit-this-page.tcl.etp-sc-procs.etp::create_search_impl.create_search_impl {dbqd.edit-this-page.tcl.etp-sc-procs.etp::create_search_impl.create_search_impl {
	select acs_sc_impl__new(
		'FtsContentProvider',		-- impl_contract_name
		:content_type,			-- impl_name
		'edit-this-page'			-- impl_owner.name
	);
    } {} {} {postgresql 7.1} c:/web/openacs-4/packages/edit-this-page/tcl/etp-sc-procs-postgresql.xql}
dbqd.edit-this-page.tcl.etp-sc-procs.etp::create_search_impl.create_datasource_alias {dbqd.edit-this-page.tcl.etp-sc-procs.etp::create_search_impl.create_datasource_alias {
	select acs_sc_impl_alias__new(
		'FtsContentProvider',		-- impl_contract_name
		:content_type,			-- impl_name
		'datasource',			-- impl_operation_name
		'etp::revision_datasource',	-- impl_alias
		'TCL'				-- impl_pl
	)
    } {} {} {postgresql 7.1} c:/web/openacs-4/packages/edit-this-page/tcl/etp-sc-procs-postgresql.xql}
dbqd.edit-this-page.tcl.etp-sc-procs.etp::create_search_impl.create_url_alias {dbqd.edit-this-page.tcl.etp-sc-procs.etp::create_search_impl.create_url_alias {
	select acs_sc_impl_alias__new(
		'FtsContentProvider',		-- impl_contract_name
		:content_type,		-- impl_name
		'url',				-- impl_operation_name
		'etp::revision_url',	-- impl_alias
		'TCL'				-- impl_pl
	);
   } {} {} {postgresql 7.1} c:/web/openacs-4/packages/edit-this-page/tcl/etp-sc-procs-postgresql.xql}
dbqd.edit-this-page.tcl.etp-sc-procs.etp::create_search_impl.install_binding {dbqd.edit-this-page.tcl.etp-sc-procs.etp::create_search_impl.install_binding {
	select acs_sc_binding__new(
		'FtsContentProvider', 	-- contract_name
		:content_type		-- impl_name
	);
    } {} {} {postgresql 7.1} c:/web/openacs-4/packages/edit-this-page/tcl/etp-sc-procs-postgresql.xql}
dbqd.edit-this-page.tcl.etp-sc-procs.etp::revision_datasource.get_content_type {dbqd.edit-this-page.tcl.etp-sc-procs.etp::revision_datasource.get_content_type {
	    select object_type from acs_objects
	    where object_id=:object_id
	} {} {} {} c:/web/openacs-4/packages/edit-this-page/tcl/etp-sc-procs.xql}
dbqd.edit-this-page.tcl.etp-sc-procs.etp::create_search_impl.get_contract_id {dbqd.edit-this-page.tcl.etp-sc-procs.etp::create_search_impl.get_contract_id {
	    select contract_id
	    from valid_uninstalled_bindings
	    where contract_name='FtsContentProvider'
	    and impl_name=:content_type
	} {} {} {} c:/web/openacs-4/packages/edit-this-page/tcl/etp-sc-procs.xql}
dbqd.edit-this-page.tcl.etp-sc-procs.etp::revision_url.revision_url {dbqd.edit-this-page.tcl.etp-sc-procs.etp::revision_url.revision_url {
        select name as url, parent_id as package_id
        from cr_items 
	where live_revision = :object_id
	} {} {} {} c:/web/openacs-4/packages/edit-this-page/tcl/etp-sc-procs.xql}
dbqd.edit-this-page.tcl.etp-sc-procs.etp::revision_datasource.revision_datasource {dbqd.edit-this-page.tcl.etp-sc-procs.etp::revision_datasource.revision_datasource {
       	select r.revision_id as object_id,
	       r.title as title,
	       content as content,
	       'text/html' as mime,
	       '' as keywords,
	       'text' as storage_type
	from cr_revisions r
	       where revision_id = :object_id
      } {} {} {} c:/web/openacs-4/packages/edit-this-page/tcl/etp-sc-procs.xql}
dbqd.edit-this-page.templates.news-index-oracle.archive_where_clause {dbqd.edit-this-page.templates.news-index-oracle.archive_where_clause {
         sysdate between to_date(attributes.release_date, 'Month DD, YYYY') and
           to_date(attributes.archive_date, 'Month DD, YYYY')
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/edit-this-page/templates/news-index-oracle.xql}
dbqd.edit-this-page.templates.news-index-oracle.no_archive_where_clause {dbqd.edit-this-page.templates.news-index-oracle.no_archive_where_clause {
         sysdate >= to_date(attributes.archive_date, 'Month DD, YYYY')
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/edit-this-page/templates/news-index-oracle.xql}
dbqd.edit-this-page.templates.news-index-oracle.orderby_clause {dbqd.edit-this-page.templates.news-index-oracle.orderby_clause {
         to_date(attributes.release_date, 'Month DD, YYYY') desc
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/edit-this-page/templates/news-index-oracle.xql}
dbqd.edit-this-page.templates.news-index.archive_where_clause {dbqd.edit-this-page.templates.news-index.archive_where_clause {
         current_timestamp between attributes.release_date and attributes.archive_date
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/edit-this-page/templates/news-index-postgresql.xql}
dbqd.edit-this-page.templates.news-index.no_archive_where_clause {dbqd.edit-this-page.templates.news-index.no_archive_where_clause {
         current_timestamp >= attributes.archive_date
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/edit-this-page/templates/news-index-postgresql.xql}
dbqd.edit-this-page.templates.news-index.orderby_clause {dbqd.edit-this-page.templates.news-index.orderby_clause {
         attributes.release_date desc
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/edit-this-page/templates/news-index-postgresql.xql}
dbqd.edit-this-page.www.etp-delete-oracle.revert_to_revision {dbqd.edit-this-page.www.etp-delete-oracle.revert_to_revision {
begin
  content_item.del(:revision_id)
end;
} {} {} {oracle 8.1.6} c:/web/openacs-4/packages/edit-this-page/www/etp-delete-oracle.xql}
dbqd.edit-this-page.www.etp-delete-oracle.get_title {dbqd.edit-this-page.www.etp-delete-oracle.get_title {
  select title
    from cr_revisions r, cr_items i
   where i.parent_id = etp.get_folder_id(:package_id)
     and i.name = :name
     and r.item_id = i.item_id
     and r.revision_id = i.live_revision
} {} {} {oracle 8.1.6} c:/web/openacs-4/packages/edit-this-page/www/etp-delete-oracle.xql}
dbqd.edit-this-page.www.etp-delete-oracle.get_item_id {dbqd.edit-this-page.www.etp-delete-oracle.get_item_id {
  select item_id
    from cr_items
   where parent_id = etp.get_folder_id(:package_id)
     and name = :name
} {} {} {oracle 8.1.6} c:/web/openacs-4/packages/edit-this-page/www/etp-delete-oracle.xql}
dbqd.edit-this-page.www.etp-delete.delete_page {dbqd.edit-this-page.www.etp-delete.delete_page {
select content_item__delete(:item_id);
} {} {} {postgresql 7.1} c:/web/openacs-4/packages/edit-this-page/www/etp-delete-postgresql.xql}
dbqd.edit-this-page.www.etp-delete.get_title {dbqd.edit-this-page.www.etp-delete.get_title {
  select title
    from cr_revisions r, cr_items i
   where i.parent_id = etp__get_folder_id(:package_id)
     and i.name = :name
     and r.item_id = i.item_id
     and r.revision_id = i.live_revision
} {} {} {postgresql 7.1} c:/web/openacs-4/packages/edit-this-page/www/etp-delete-postgresql.xql}
dbqd.edit-this-page.www.etp-delete.get_item_id {dbqd.edit-this-page.www.etp-delete.get_item_id {
  select item_id
    from cr_items
   where parent_id = etp__get_folder_id(:package_id)
     and name = :name
} {} {} {postgresql 7.1} c:/web/openacs-4/packages/edit-this-page/www/etp-delete-postgresql.xql}
dbqd.edit-this-page.www.etp-delete.clear_revisions {dbqd.edit-this-page.www.etp-delete.clear_revisions {
update cr_items set live_revision=null, latest_revision=null
where item_id = :item_id
} {} {} {} c:/web/openacs-4/packages/edit-this-page/www/etp-delete.xql}
dbqd.edit-this-page.www.etp-edit-2-oracle.create_new_revision {dbqd.edit-this-page.www.etp-edit-2-oracle.create_new_revision {
begin
  :1 := etp.create_new_revision(:package_id, :name, :user_id);
end;
} {} {} {oracle 8.1.6} c:/web/openacs-4/packages/edit-this-page/www/etp-edit-2-oracle.xql}
dbqd.edit-this-page.www.etp-edit-2-oracle.update_content_attribute_clob {dbqd.edit-this-page.www.etp-edit-2-oracle.update_content_attribute_clob {
    update cr_revisions
    set    content = empty_blob()
    where  revision_id = :latest_revision_id
    returning content into :1
} {} {} {oracle 8.1.6} c:/web/openacs-4/packages/edit-this-page/www/etp-edit-2-oracle.xql}
dbqd.edit-this-page.www.etp-edit-2.create_new_revision {dbqd.edit-this-page.www.etp-edit-2.create_new_revision {
select etp__create_new_revision(:package_id, :name, :user_id);
} {} {} {postgresql 7.1} c:/web/openacs-4/packages/edit-this-page/www/etp-edit-2-postgresql.xql}
dbqd.edit-this-page.www.etp-edit-2.transform_date {dbqd.edit-this-page.www.etp-edit-2.transform_date {
select to_char(to_date(:date_string, 'YYYY-MM-DD'), :date_format)
from dual
} {} {} {} c:/web/openacs-4/packages/edit-this-page/www/etp-edit-2.xql}
dbqd.edit-this-page.www.etp-edit-2.update_attribute {dbqd.edit-this-page.www.etp-edit-2.update_attribute {
update cr_revisions
set $attribute = :value
where revision_id = :latest_revision_id
} {} {} {} c:/web/openacs-4/packages/edit-this-page/www/etp-edit-2.xql}
dbqd.edit-this-page.www.etp-edit-2.delete_ext_attribute {dbqd.edit-this-page.www.etp-edit-2.delete_ext_attribute {
delete from acs_attribute_values
where object_id = :latest_revision_id
and attribute_id = :attribute_id
} {} {} {} c:/web/openacs-4/packages/edit-this-page/www/etp-edit-2.xql}
dbqd.edit-this-page.www.etp-edit-2.insert_ext_attribute {dbqd.edit-this-page.www.etp-edit-2.insert_ext_attribute {
insert into acs_attribute_values (object_id, attribute_id, attr_value)
values (:latest_revision_id, :attribute_id, :value)
} {} {} {} c:/web/openacs-4/packages/edit-this-page/www/etp-edit-2.xql}
dbqd.edit-this-page.www.etp-edit-2.update_package_instance_name {dbqd.edit-this-page.www.etp-edit-2.update_package_instance_name {
update apm_packages
set instance_name = :value
where package_id = :package_id
} {} {} {} c:/web/openacs-4/packages/edit-this-page/www/etp-edit-2.xql}
dbqd.edit-this-page.www.etp-edit-oracle.transform_date {dbqd.edit-this-page.www.etp-edit-oracle.transform_date {
	select to_char(to_date(:value, :date_format), 'YYYY-MM-DD')
	from dual
} {} {} {oracle 8.1.6} c:/web/openacs-4/packages/edit-this-page/www/etp-edit-oracle.xql}
dbqd.edit-this-page.www.etp-edit-oracle.get_standard_attribute {dbqd.edit-this-page.www.etp-edit-oracle.get_standard_attribute {
        select $attribute as value, r.title as page_title
          from cr_revisions r, cr_items i
         where i.parent_id = etp.get_folder_id(:package_id)
           and i.name = :name
           and i.item_id = r.item_id
	   and r.revision_id = :revision_id
} {} {} {oracle 8.1.6} c:/web/openacs-4/packages/edit-this-page/www/etp-edit-oracle.xql}
dbqd.edit-this-page.www.etp-edit-oracle.get_extended_attribute {dbqd.edit-this-page.www.etp-edit-oracle.get_extended_attribute {
	select etp.get_attribute_value(r.revision_id, :attribute_id) as value,
	       r.title as page_title
	  from cr_items i, cr_revisions r
	 where i.parent_id = etp.get_folder_id(:package_id)
	   and i.name = :name
	   and i.item_id = r.item_id
	   and r.revision_id = :revision_id
} {} {} {oracle 8.1.6} c:/web/openacs-4/packages/edit-this-page/www/etp-edit-oracle.xql}
dbqd.edit-this-page.www.etp-edit.transform_date {dbqd.edit-this-page.www.etp-edit.transform_date {
	select to_char(to_date(:value, :date_format), 'YYYY-MM-DD')
} {} {} {postgresql 7.1} c:/web/openacs-4/packages/edit-this-page/www/etp-edit-postgresql.xql}
dbqd.edit-this-page.www.etp-edit.get_standard_attribute {dbqd.edit-this-page.www.etp-edit.get_standard_attribute {
        select $attribute as value, r.title as page_title, mime_type
          from cr_revisions r, cr_items i
         where i.parent_id = etp__get_folder_id(:package_id)
           and i.name = :name
           and i.item_id = r.item_id
	   and r.revision_id = :old_revision_id
} {} {} {postgresql 7.1} c:/web/openacs-4/packages/edit-this-page/www/etp-edit-postgresql.xql}
dbqd.edit-this-page.www.etp-edit.get_extended_attribute {dbqd.edit-this-page.www.etp-edit.get_extended_attribute {
	select etp__get_attribute_value(r.revision_id, :attribute_id) as value,
	       r.title as page_title
	  from cr_items i, cr_revisions r
	 where i.parent_id = etp__get_folder_id(:package_id)
	   and i.name = :name
	   and i.item_id = r.item_id
	   and r.revision_id = :old_revision_id
} {} {} {postgresql 7.1} c:/web/openacs-4/packages/edit-this-page/www/etp-edit-postgresql.xql}
dbqd.edit-this-page.www.etp-edit.create_new_revision {dbqd.edit-this-page.www.etp-edit.create_new_revision {
select etp__create_new_revision(:package_id, :name, :user_id, :revision_id);
} {} {} {postgresql 7.1} c:/web/openacs-4/packages/edit-this-page/www/etp-edit-postgresql.xql}
dbqd.edit-this-page.www.etp-edit.transform_date {dbqd.edit-this-page.www.etp-edit.transform_date {
	select to_char(to_date(:value, :date_format), 'YYYY-MM-DD')
} {} {} {postgresql 7.1} c:/web/openacs-4/packages/edit-this-page/www/etp-edit-postgresql.xql}
dbqd.edit-this-page.www.etp-edit.update_attribute {dbqd.edit-this-page.www.etp-edit.update_attribute {
update cr_revisions
set $attribute = :value
$extra_sql
where revision_id = :revision_id
} {} {} {} c:/web/openacs-4/packages/edit-this-page/www/etp-edit.xql}
dbqd.edit-this-page.www.etp-edit.delete_ext_attribute {dbqd.edit-this-page.www.etp-edit.delete_ext_attribute {
delete from acs_attribute_values
where object_id = :revision_id
and attribute_id = :attribute_id
} {} {} {} c:/web/openacs-4/packages/edit-this-page/www/etp-edit.xql}
dbqd.edit-this-page.www.etp-edit.insert_ext_attribute {dbqd.edit-this-page.www.etp-edit.insert_ext_attribute {
insert into acs_attribute_values (object_id, attribute_id, attr_value)
values (:revision_id, :attribute_id, :value)
} {} {} {} c:/web/openacs-4/packages/edit-this-page/www/etp-edit.xql}
dbqd.edit-this-page.www.etp-edit.update_package_instance_name {dbqd.edit-this-page.www.etp-edit.update_package_instance_name {
update apm_packages
set instance_name = :value
where package_id = :package_id
} {} {} {} c:/web/openacs-4/packages/edit-this-page/www/etp-edit.xql}
dbqd.edit-this-page.www.etp-extlink-oracle.create_extlink {dbqd.edit-this-page.www.etp-extlink-oracle.create_extlink {
  begin
    :1 := etp.create_extlink(:package_id, :url, :label, :description);
  end;
} {} {} {oracle 8.1.6} c:/web/openacs-4/packages/edit-this-page/www/etp-extlink-oracle.xql}
dbqd.edit-this-page.www.etp-extlink.create_extlink {dbqd.edit-this-page.www.etp-extlink.create_extlink {
    select etp__create_extlink(:package_id, :url, :label, :description);
} {} {} {postgresql 7.1} c:/web/openacs-4/packages/edit-this-page/www/etp-extlink-postgresql.xql}
dbqd.edit-this-page.www.etp-history-oracle.get_revisions {dbqd.edit-this-page.www.etp-history-oracle.get_revisions {

select o.creation_user as creation_user_id,
       person.name(o.creation_user) as creation_user_name,
       to_char(o.creation_date, 'Mon DD') as creation_date,
       o.modifying_user as publish_user_id, 
       person.name(o.modifying_user) as publish_user_name,
       to_char(r.publish_date, 'Mon DD') as publish_date,
       r.revision_id, 
       content_revision.get_number(r.revision_id) as version_number
from cr_revisions r, cr_items i, acs_objects o
where r.item_id = i.item_id
and o.object_id = r.revision_id
and i.parent_id = etp.get_folder_id(:package_id)
and i.name = :name
order by r.revision_id

} {} {} {oracle 8.1.6} c:/web/openacs-4/packages/edit-this-page/www/etp-history-oracle.xql}
dbqd.edit-this-page.www.etp-history.get_revisions {dbqd.edit-this-page.www.etp-history.get_revisions {

select o.creation_user as creation_user_id,
       person__name(o.creation_user) as creation_user_name,
       to_char(o.creation_date, 'Mon DD') as creation_date,
       o.modifying_user as publish_user_id, 
       person__name(o.modifying_user) as publish_user_name,
       to_char(r.publish_date, 'Mon DD') as publish_date,
       r.revision_id, 
       content_revision__get_number(r.revision_id) as version_number
from cr_revisions r, cr_items i, acs_objects o
where r.item_id = i.item_id
and o.object_id = r.revision_id
and i.parent_id = etp__get_folder_id(:package_id)
and i.name = :name
order by r.revision_id

} {} {} {postgresql 7.1} c:/web/openacs-4/packages/edit-this-page/www/etp-history-postgresql.xql}
dbqd.edit-this-page.www.etp-oracle.get_current_page_attributes {dbqd.edit-this-page.www.etp-oracle.get_current_page_attributes {
	select i.item_id, i.name, r.revision_id, r.title, 
               content_revision.get_number(r.revision_id) as latest_revision,
               content_revision.get_number(i.live_revision) as live_revision,
	       r.description, r.publish_date, r.content $extended_attributes
	  from cr_items i, cr_revisions r
	 where i.parent_id = etp.get_folder_id(:package_id)
	   and i.name = :name
	   and i.item_id = r.item_id
	   and r.revision_id = :revision_id
} {} {} {oracle 8.1.6} c:/web/openacs-4/packages/edit-this-page/www/etp-oracle.xql}
dbqd.edit-this-page.www.etp-oracle.get_content_pages {dbqd.edit-this-page.www.etp-oracle.get_content_pages {
  select name, title, rownum as sort_order
    from cr_items i, cr_revisions r
   where i.parent_id = etp.get_folder_id(:package_id)
     and i.name != 'index'
     and i.item_id = r.item_id
     and i.latest_revision = r.revision_id
   order by sort_order
} {} {} {oracle 8.1.6} c:/web/openacs-4/packages/edit-this-page/www/etp-oracle.xql}
dbqd.edit-this-page.www.etp.get_current_page_attributes {dbqd.edit-this-page.www.etp.get_current_page_attributes {
	select i.item_id, i.name, r.revision_id, r.title, 
               content_revision__get_number(r.revision_id) as latest_revision,
               content_revision__get_number(i.live_revision) as live_revision,
	       r.description, r.publish_date, r.content $extended_attributes
	  from cr_items i, cr_revisions r
	 where i.parent_id = etp__get_folder_id(:package_id)
	   and i.name = :name
	   and i.item_id = r.item_id
	   and r.revision_id = :revision_id
} {} {} {postgresql 7.1} c:/web/openacs-4/packages/edit-this-page/www/etp-postgresql.xql}
dbqd.edit-this-page.www.etp.get_content_pages {dbqd.edit-this-page.www.etp.get_content_pages {
  select name, title, tree_sortkey as sort_order
    from cr_items i, cr_revisions r
   where i.parent_id = etp__get_folder_id(:package_id)
     and i.name != 'index'
     and i.item_id = r.item_id
     and i.latest_revision = r.revision_id
   order by tree_sortkey
} {} {} {postgresql 7.1} c:/web/openacs-4/packages/edit-this-page/www/etp-postgresql.xql}
dbqd.edit-this-page.www.etp-publish-oracle.set_publish_date {dbqd.edit-this-page.www.etp-publish-oracle.set_publish_date {
update cr_revisions
set publish_date = sysdate
where revision_id = :latest_revision_id
} {} {} {oracle 8.1.6} c:/web/openacs-4/packages/edit-this-page/www/etp-publish-oracle.xql}
dbqd.edit-this-page.www.etp-publish-oracle.set_audit_info {dbqd.edit-this-page.www.etp-publish-oracle.set_audit_info {
update acs_objects
set modifying_user = :user_id,
    last_modified = sysdate
where object_id = :latest_revision_id
} {} {} {oracle 8.1.6} c:/web/openacs-4/packages/edit-this-page/www/etp-publish-oracle.xql}
dbqd.edit-this-page.www.etp-publish.set_publish_date {dbqd.edit-this-page.www.etp-publish.set_publish_date {
update cr_revisions
set publish_date = now()
where revision_id = :latest_revision_id
} {} {} {postgresql 7.1} c:/web/openacs-4/packages/edit-this-page/www/etp-publish-postgresql.xql}
dbqd.edit-this-page.www.etp-publish.set_audit_info {dbqd.edit-this-page.www.etp-publish.set_audit_info {
update acs_objects
set modifying_user = :user_id,
    last_modified = now()
where object_id = :latest_revision_id
} {} {} {postgresql 7.1} c:/web/openacs-4/packages/edit-this-page/www/etp-publish-postgresql.xql}
dbqd.edit-this-page.www.etp-publish.publish_latest_revision {dbqd.edit-this-page.www.etp-publish.publish_latest_revision {
update cr_items
set live_revision = :latest_revision_id
where live_revision = :live_revision_id
} {} {} {} c:/web/openacs-4/packages/edit-this-page/www/etp-publish.xql}
dbqd.edit-this-page.www.etp-revert-oracle.delete_revision {dbqd.edit-this-page.www.etp-revert-oracle.delete_revision {
begin
  content_revision.del(:revision_id);
end;
} {} {} {oracle 8.1.6} c:/web/openacs-4/packages/edit-this-page/www/etp-revert-oracle.xql}
dbqd.edit-this-page.www.etp-revert-oracle.get_item_id {dbqd.edit-this-page.www.etp-revert-oracle.get_item_id {
  select item_id
    from cr_items
   where parent_id = etp.get_folder_id(:package_id)
     and name = :name
} {} {} {oracle 8.1.6} c:/web/openacs-4/packages/edit-this-page/www/etp-revert-oracle.xql}
dbqd.edit-this-page.www.etp-revert-oracle.get_revision_count {dbqd.edit-this-page.www.etp-revert-oracle.get_revision_count {
    select count(1) as revision_count
    from cr_revisions r, cr_items i
    where r.item_id = i.item_id
    and i.parent_id = etp.get_folder_id(:package_id)
    and i.name = :name
    and r.revision_id > :revision_id
} {} {} {oracle 8.1.6} c:/web/openacs-4/packages/edit-this-page/www/etp-revert-oracle.xql}
dbqd.edit-this-page.www.etp-revert.delete_revision {dbqd.edit-this-page.www.etp-revert.delete_revision {

select content_revision__delete(:revision_id)

} {} {} {postgresql 7.1} c:/web/openacs-4/packages/edit-this-page/www/etp-revert-postgresql.xql}
dbqd.edit-this-page.www.etp-revert.get_item_id {dbqd.edit-this-page.www.etp-revert.get_item_id {
  select item_id
    from cr_items
   where parent_id = etp__get_folder_id(:package_id)
     and name = :name
} {} {} {postgresql 7.1} c:/web/openacs-4/packages/edit-this-page/www/etp-revert-postgresql.xql}
dbqd.edit-this-page.www.etp-revert.get_revision_count {dbqd.edit-this-page.www.etp-revert.get_revision_count {
    select count(1) as revision_count
    from cr_revisions r, cr_items i
    where r.item_id = i.item_id
    and i.parent_id = etp__get_folder_id(:package_id)
    and i.name = :name
    and r.revision_id > :revision_id
} {} {} {postgresql 7.1} c:/web/openacs-4/packages/edit-this-page/www/etp-revert-postgresql.xql}
dbqd.edit-this-page.www.etp-revert.set_live_revision {dbqd.edit-this-page.www.etp-revert.set_live_revision {
  update cr_items
     set live_revision = :revision_id, latest_revision = :revision_id
   where item_id = :item_id
} {} {} {} c:/web/openacs-4/packages/edit-this-page/www/etp-revert.xql}
dbqd.edit-this-page.www.etp-revert.revisions_to_delete {dbqd.edit-this-page.www.etp-revert.revisions_to_delete {
  select revision_id
    from cr_revisions
   where item_id = :item_id
     and revision_id > :revision_id
   order by revision_id
} {} {} {} c:/web/openacs-4/packages/edit-this-page/www/etp-revert.xql}
dbqd.edit-this-page.www.etp-revision-delete-oracle.delete_revision {dbqd.edit-this-page.www.etp-revision-delete-oracle.delete_revision {
  begin
    content_revision.del(:revision_id);
  end;
} {} {} {oracle 8.1.6} c:/web/openacs-4/packages/edit-this-page/www/etp-revision-delete-oracle.xql}
dbqd.edit-this-page.www.etp-revision-delete.delete_revision {dbqd.edit-this-page.www.etp-revision-delete.delete_revision {

  select content_revision__delete(:revision_id)

} {} {} {postgresql 7.1} c:/web/openacs-4/packages/edit-this-page/www/etp-revision-delete-postgresql.xql}
dbqd.edit-this-page.www.etp-setup-2-oracle.create_folder {dbqd.edit-this-page.www.etp-setup-2-oracle.create_folder {
   begin
     :1 := content_folder.new(
              name        => :name,
              label       => :title,
              description => '',
              parent_id   => etp.get_folder_id(:parent_package_id)
           );
   end;
} {} {} {oracle 8.1.6} c:/web/openacs-4/packages/edit-this-page/www/etp-setup-2-oracle.xql}
dbqd.edit-this-page.www.etp-setup-2-oracle.get_section_name {dbqd.edit-this-page.www.etp-setup-2-oracle.get_section_name {
   select acs_object.name(:package_id) as title from dual
} {} {} {oracle 8.1.6} c:/web/openacs-4/packages/edit-this-page/www/etp-setup-2-oracle.xql}
dbqd.edit-this-page.www.etp-setup-2.create_folder {dbqd.edit-this-page.www.etp-setup-2.create_folder {
select content_folder__new(:name, :title, '', coalesce(etp__get_folder_id(:parent_package_id), NULL));
} {} {} {postgresql 7.1} c:/web/openacs-4/packages/edit-this-page/www/etp-setup-2-postgresql.xql}
dbqd.edit-this-page.www.etp-setup-2.get_section_name {dbqd.edit-this-page.www.etp-setup-2.get_section_name {
select acs_object__name(:package_id) as title
} {} {} {postgresql 7.1} c:/web/openacs-4/packages/edit-this-page/www/etp-setup-2-postgresql.xql}
dbqd.edit-this-page.www.etp-setup-2.site_node_name {dbqd.edit-this-page.www.etp-setup-2.site_node_name {

	select name
          from site_nodes
         where node_id = :node_id

} {} {} {} c:/web/openacs-4/packages/edit-this-page/www/etp-setup-2.xql}
dbqd.edit-this-page.www.etp-setup-2.set_folder_package {dbqd.edit-this-page.www.etp-setup-2.set_folder_package {

	update cr_folders
           set package_id = :package_id
         where folder_id = :folder_id

} {} {} {} c:/web/openacs-4/packages/edit-this-page/www/etp-setup-2.xql}
dbqd.edit-this-page.www.etp-setup-oracle.get_section_name {dbqd.edit-this-page.www.etp-setup-oracle.get_section_name {
select acs_object.name(:package_id) as title from dual
} {} {} {oracle 8.1.6} c:/web/openacs-4/packages/edit-this-page/www/etp-setup-oracle.xql}
dbqd.edit-this-page.www.etp-setup.get_section_name {dbqd.edit-this-page.www.etp-setup.get_section_name {
select acs_object__name(:package_id) as title
} {} {} {postgresql 7.1} c:/web/openacs-4/packages/edit-this-page/www/etp-setup-postgresql.xql}
dbqd.edit-this-page.www.etp-subtopic-create.old_package_parameters {dbqd.edit-this-page.www.etp-subtopic-create.old_package_parameters {

select attr_value, parameter_id
  from apm_parameter_values 
 where package_id = :curr_package_id

} {} {} {} c:/web/openacs-4/packages/edit-this-page/www/etp-subtopic-create.xql}
dbqd.edit-this-page.www.etp-subtopic-create.copy_parameter {dbqd.edit-this-page.www.etp-subtopic-create.copy_parameter {

update apm_parameter_values 
set attr_value = :attr_value
where package_id = :new_package_id
and parameter_id = :parameter_id

} {} {} {} c:/web/openacs-4/packages/edit-this-page/www/etp-subtopic-create.xql}
dbqd.edit-this-page.www.etp-subtopic-create.get_subtopic_application {dbqd.edit-this-page.www.etp-subtopic-create.get_subtopic_application {

select v.attr_value as subtopic_application
  from apm_parameter_values v, apm_parameters p
 where v.parameter_id = p.parameter_id
   and v.package_id = :curr_package_id
   and p.parameter_name = 'subtopic_application'

} {} {} {} c:/web/openacs-4/packages/edit-this-page/www/etp-subtopic-create.xql}
dbqd.edit-this-page.www.etp-subtopic-create.get_application_parameter_id {dbqd.edit-this-page.www.etp-subtopic-create.get_application_parameter_id {

select parameter_id
  from apm_parameters p
 where p.parameter_name = 'application'
   and package_key = 'edit-this-page'

} {} {} {} c:/web/openacs-4/packages/edit-this-page/www/etp-subtopic-create.xql}
dbqd.edit-this-page.www.etp-subtopic-create.set_subtopic_application {dbqd.edit-this-page.www.etp-subtopic-create.set_subtopic_application {

update apm_parameter_values 
set attr_value = :subtopic_application
where package_id = :new_package_id
and parameter_id = :parameter_id

} {} {} {} c:/web/openacs-4/packages/edit-this-page/www/etp-subtopic-create.xql}
dbqd.edit-this-page.www.etp-swap-oracle.get_prev_key {dbqd.edit-this-page.www.etp-swap-oracle.get_prev_key {
  select tree_sortkey, item_id
    from cr_items
   where parent_id = etp.get_folder_id(:package_id)
     and tree_sortkey < :sort_key
   order by tree_sortkey desc
} {} {} {oracle 8.1.6} c:/web/openacs-4/packages/edit-this-page/www/etp-swap-oracle.xql}
dbqd.edit-this-page.www.etp-swap-oracle.get_all_keys {dbqd.edit-this-page.www.etp-swap-oracle.get_all_keys {
  select tree_sortkey, item_id
    from cr_items
   where tree_sortkey >= :prev_sort_key
   order by tree_sortkey
} {} {} {oracle 8.1.6} c:/web/openacs-4/packages/edit-this-page/www/etp-swap-oracle.xql}
dbqd.edit-this-page.www.etp-swap-oracle.update_key {dbqd.edit-this-page.www.etp-swap-oracle.update_key {
  update cr_items
     set tree_sortkey = :new_sortkey
   where item_id = :item_id
} {} {} {oracle 8.1.6} c:/web/openacs-4/packages/edit-this-page/www/etp-swap-oracle.xql}
dbqd.edit-this-page.www.etp-swap.get_prev_key {dbqd.edit-this-page.www.etp-swap.get_prev_key {
  select tree_sortkey, item_id
    from cr_items
   where parent_id = etp__get_folder_id(:package_id)
     and tree_sortkey < :sort_key
   order by tree_sortkey desc
} {} {} {postgresql 7.1} c:/web/openacs-4/packages/edit-this-page/www/etp-swap-postgresql.xql}
dbqd.edit-this-page.www.etp-swap.get_all_keys {dbqd.edit-this-page.www.etp-swap.get_all_keys {
  select tree_sortkey, item_id
    from cr_items
   where tree_sortkey >= :prev_sort_key
   order by tree_sortkey
} {} {} {postgresql 7.1} c:/web/openacs-4/packages/edit-this-page/www/etp-swap-postgresql.xql}
dbqd.edit-this-page.www.etp-swap.update_key {dbqd.edit-this-page.www.etp-swap.update_key {
  update cr_items
     set tree_sortkey = :new_sortkey
   where item_id = :item_id
} {} {} {postgresql 7.1} c:/web/openacs-4/packages/edit-this-page/www/etp-swap-postgresql.xql}
dbqd.edit-this-page.www.etp-symlink-oracle.create_symlink {dbqd.edit-this-page.www.etp-symlink-oracle.create_symlink {
   begin
     :1 := etp.create_symlink(:package_id, :target_id);
   end;
} {} {} {oracle 8.1.6} c:/web/openacs-4/packages/edit-this-page/www/etp-symlink-oracle.xql}
dbqd.edit-this-page.www.etp-symlink-oracle.all_pages {dbqd.edit-this-page.www.etp-symlink-oracle.all_pages {
	select i.item_id, i.name, etp.get_title(i.item_id, null) as title,
           replace(lpad(' ', (level - 1) * 4), ' ', '&nbsp;') as indent
        from cr_items i, acs_objects o
        where i.item_id = o.object_id
           and o.object_type in ('content_item', 'content_folder')
           and i.name != 'index'
           and i.item_id not in (select item_id 
                                 from cr_items
                                 start with parent_id = i.item_id
                                 connect by parent_id = prior item_id)
} {} {} {oracle 8.1.6} c:/web/openacs-4/packages/edit-this-page/www/etp-symlink-oracle.xql}
dbqd.edit-this-page.www.etp-symlink.create_symlink {dbqd.edit-this-page.www.etp-symlink.create_symlink {
    select etp__create_symlink(:package_id, :target_id);
} {} {} {postgresql 7.1} c:/web/openacs-4/packages/edit-this-page/www/etp-symlink-postgresql.xql}
dbqd.edit-this-page.www.etp-symlink.all_pages {dbqd.edit-this-page.www.etp-symlink.all_pages {
	select i.item_id, i.name, etp__get_title(i.item_id, null) as title,
               repeat('&nbsp;',(tree_level(i.tree_sortkey) - 1) * 4) as indent
          from cr_items i, acs_objects o, cr_items i2
         where i.item_id = o.object_id
           and o.object_type in ('content_item', 'content_folder')
           and i.name != 'index'
           and i2.item_id = -400
           and tree_root_key(i.tree_sortkey) <>
                (select tree_sortkey from cr_items where item_id=-400)
         order by i.tree_sortkey
} {} {} {postgresql 7.1} c:/web/openacs-4/packages/edit-this-page/www/etp-symlink-postgresql.xql}
dbqd.edit-this-page.www.etp-trash.site_node_children {dbqd.edit-this-page.www.etp-trash.site_node_children {
  select count(1)
    from site_nodes
   where parent_id = :node_id
} {} {} {} c:/web/openacs-4/packages/edit-this-page/www/etp-trash.xql}
dbqd.edit-this-page.www.etp-trash.get_node_id {dbqd.edit-this-page.www.etp-trash.get_node_id {
  select node_id
    from site_nodes sn, cr_folders f
   where f.folder_id = :item_id
     and sn.object_id = f.package_id
} {} {} {} c:/web/openacs-4/packages/edit-this-page/www/etp-trash.xql}
dbqd.edit-this-page.www.etp-trash.matching_name {dbqd.edit-this-page.www.etp-trash.matching_name {
  select count(1)
    from cr_items
   where parent_id = -400
     and name = (select name from cr_items where item_id = :item_id)
} {} {} {} c:/web/openacs-4/packages/edit-this-page/www/etp-trash.xql}
dbqd.edit-this-page.www.etp-trash.update_name {dbqd.edit-this-page.www.etp-trash.update_name {
  update cr_items 
     set name = 'Copy of ' || name
   where item_id = :item_id
} {} {} {} c:/web/openacs-4/packages/edit-this-page/www/etp-trash.xql}
dbqd.edit-this-page.www.etp-trash.trash_item {dbqd.edit-this-page.www.etp-trash.trash_item {
  update cr_items
     set parent_id = -400, live_revision = NULL
   where item_id = :item_id
} {} {} {} c:/web/openacs-4/packages/edit-this-page/www/etp-trash.xql}
dbqd.email-handler.tcl.email-handler-procs.email_handler_process_email_queue.email_handler_get_ids {dbqd.email-handler.tcl.email-handler-procs.email_handler_process_email_queue.email_handler_get_ids {
      select id from incoming_email_queue
      } {} {} {} c:/web/openacs-4/packages/email-handler/tcl/email-handler-procs.xql}
dbqd.email-handler.tcl.email-handler-procs.email_handler_process_email_queue.get_message_info {dbqd.email-handler.tcl.email-handler-procs.email_handler_process_email_queue.get_message_info {
      
              select tag, content  from incoming_email_queue
		where id = :id
	    
      } {} {} {} c:/web/openacs-4/packages/email-handler/tcl/email-handler-procs.xql}
dbqd.email-handler.tcl.email-handler-procs.email_handler_process_email_queue.delete_from_queue {dbqd.email-handler.tcl.email-handler-procs.email_handler_process_email_queue.delete_from_queue {
      delete from incoming_email_queue where id = :id
      } {} {} {} c:/web/openacs-4/packages/email-handler/tcl/email-handler-procs.xql}
dbqd.email-handler.tcl.email-handler-procs.email_handler_process_email_queue.delete_from_queue {dbqd.email-handler.tcl.email-handler-procs.email_handler_process_email_queue.delete_from_queue {
      delete from incoming_email_queue where id = :id
      } {} {} {} c:/web/openacs-4/packages/email-handler/tcl/email-handler-procs.xql}
dbqd.email-handler.tcl.email-handler-procs.email_handler_package_id_mem.email_handler_id_get {dbqd.email-handler.tcl.email-handler-procs.email_handler_package_id_mem.email_handler_id_get {
      
	select package_id from apm_packages
	where package_key = 'email-handler'
    
      } {} {} {} c:/web/openacs-4/packages/email-handler/tcl/email-handler-procs.xql}
dbqd.email-handler.www.index.test_items {dbqd.email-handler.www.index.test_items {
      
    select from_header, subject, body from email_handler_test

      } {} {} {} c:/web/openacs-4/packages/email-handler/www/index.xql}
dbqd.faq.www.admin.faq-delete.delete_faq {dbqd.faq.www.admin.faq-delete.delete_faq {
	   		select faq__delete_faq (:faq_id);
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/faq/www/admin/faq-delete-postgresql.xql}
dbqd.faq.www.admin.faq-new-2.create_faq {dbqd.faq.www.admin.faq-new-2.create_faq {
	  select faq__new_faq (:faq_id, :faq_name,:separate_p,'faq', now(), :user_id,:creation_ip,:package_id);
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/faq/www/admin/faq-new-2-postgresql.xql}
dbqd.faq.www.admin.q_and_a-delete.delete_q_and_a {dbqd.faq.www.admin.q_and_a-delete.delete_q_and_a {
 	   		select faq__delete_q_and_a (:entry_id );
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/faq/www/admin/q_and_a-delete-postgresql.xql}
dbqd.faq.www.admin.q_and_a-new-2.create_q_and_a {dbqd.faq.www.admin.q_and_a-new-2.create_q_and_a {
        select faq__new_q_and_a (
             	:entry_id,
             	:faq_id,
             	:question,
             	:answer,
 							:sort_key,
							'faq_q_and_a',
							now(),
             	:user_id,
             	:creation_ip,
							:faq_id
            );
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/faq/www/admin/q_and_a-new-2-postgresql.xql}
dbqd.file-storage.tcl.file-storage-procs-oracle.fs::new_root_folder.new_root_folder {dbqd.file-storage.tcl.file-storage-procs-oracle.fs::new_root_folder.new_root_folder {
            begin
                :1 := file_storage.new_root_folder(
                    package_id => :package_id,
                    folder_name => :pretty_name,
                    description => :description
                );
            end;
        } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/file-storage/tcl/file-storage-procs-oracle.xql}
dbqd.file-storage.tcl.file-storage-procs-oracle.fs::get_root_folder.get_root_folder {dbqd.file-storage.tcl.file-storage-procs-oracle.fs::get_root_folder.get_root_folder {
            begin
                :1 := file_storage.get_root_folder(
                    package_id => :package_id
                );
            end;
        } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/file-storage/tcl/file-storage-procs-oracle.xql}
dbqd.file-storage.tcl.file-storage-procs-oracle.fs::new_folder.new_folder {dbqd.file-storage.tcl.file-storage-procs-oracle.fs::new_folder.new_folder {
            begin
                :1 := file_storage.new_folder(
                    name => :name,
                    folder_name => :pretty_name,
                    parent_id => :parent_id,
                    creation_user => :creation_user,
                    creation_ip => :creation_ip
                );
            end;
        } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/file-storage/tcl/file-storage-procs-oracle.xql}
dbqd.file-storage.tcl.file-storage-procs-oracle.fs::rename_folder.rename_folder {dbqd.file-storage.tcl.file-storage-procs-oracle.fs::rename_folder.rename_folder {
            begin
                content_folder.rename(
                    folder_id => :folder_id,
                    label => :name
                );
            end;
        } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/file-storage/tcl/file-storage-procs-oracle.xql}
dbqd.file-storage.tcl.file-storage-procs-oracle.fs::get_folder_contents.select_folder_contents {dbqd.file-storage.tcl.file-storage-procs-oracle.fs::get_folder_contents.select_folder_contents {
            select fs_objects.object_id,
                   fs_objects.name,
                   fs_objects.live_revision,
                   fs_objects.type,
                   to_char(fs_objects.last_modified, 'Month DD YYYY HH24:MI') as last_modified,
                   fs_objects.content_size,
                   fs_objects.url,
                   fs_objects.key,
                   fs_objects.sort_key,
                   fs_objects.file_upload_name,
                   case when fs_objects.last_modified >= (sysdate - :n_past_days) then 1 else 0 end as new_p,
                   acs_permission.permission_p(fs_objects.object_id, :user_id, 'admin') as admin_p,
                   acs_permission.permission_p(fs_objects.object_id, :user_id, 'delete') as delete_p,
                   acs_permission.permission_p(fs_objects.object_id, :user_id, 'write') as write_p
            from fs_objects
            where fs_objects.parent_id = :folder_id
              and exists (select 1
                   from acs_object_party_privilege_map m
                   where m.object_id = fs_objects.object_id
                     and m.party_id = :user_id
                     and m.privilege = 'read')
            order by fs_objects.sort_key, fs_objects.name
        } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/file-storage/tcl/file-storage-procs-oracle.xql}
dbqd.file-storage.tcl.file-storage-procs-oracle.fs_get_folder_name.folder_name {dbqd.file-storage.tcl.file-storage-procs-oracle.fs_get_folder_name.folder_name {
            begin
                :1 := file_storage.get_folder_name(:folder_id);
            end;
        } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/file-storage/tcl/file-storage-procs-oracle.xql}
dbqd.file-storage.tcl.file-storage-procs-oracle.children_have_permission_p.child_perms {dbqd.file-storage.tcl.file-storage-procs-oracle.children_have_permission_p.child_perms {
            select count(*)
            from cr_items
            where item_id in (select item_id
                              from cr_items
                              connect by prior item_id = parent_id
                              start with item_id = :item_id)
            and acs_permission.permission_p(item_id, :user_id, :privilege) = 'f'
        } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/file-storage/tcl/file-storage-procs-oracle.xql}
dbqd.file-storage.tcl.file-storage-procs-oracle.children_have_permission_p.child_items {dbqd.file-storage.tcl.file-storage-procs-oracle.children_have_permission_p.child_items {
            select item_id as child_item_id
            from cr_items
            connect by prior item_id = parent_id
            start with item_id = :item_id
        } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/file-storage/tcl/file-storage-procs-oracle.xql}
dbqd.file-storage.tcl.file-storage-procs-oracle.children_have_permission_p.revision_perms {dbqd.file-storage.tcl.file-storage-procs-oracle.children_have_permission_p.revision_perms {
            select count(*)
            from cr_revisions
            where item_id = :child_item_id
            and acs_permission.permission_p(revision_id, :user_id, :privilege) = 'f'
        } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/file-storage/tcl/file-storage-procs-oracle.xql}
dbqd.file-storage.tcl.file-storage-procs-oracle.fs_context_bar_list.title {dbqd.file-storage.tcl.file-storage-procs-oracle.fs_context_bar_list.title {
            begin
                :1 := file_storage.get_title(:item_id);
            end;
        } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/file-storage/tcl/file-storage-procs-oracle.xql}
dbqd.file-storage.tcl.file-storage-procs-oracle.fs_context_bar_list.context_bar {dbqd.file-storage.tcl.file-storage-procs-oracle.fs_context_bar_list.context_bar {
            select case when file_storage.get_content_type(i.item_id) = 'content_folder'
                        then :folder_url || '?' || :extra_vars || '&folder_id='
                        else :file_url || '?' || :extra_vars || '&file_id='
                   end || i.item_id,
                   file_storage.get_title(i.item_id)
            from cr_items i
            where item_id not in (select i2.item_id
                                  from cr_items i2
                                  connect by prior i2.parent_id = i2.item_id
                                  start with i2.item_id = file_storage.get_parent_id(:root_folder_id))
            connect by prior i.parent_id = i.item_id
            start with item_id = :start_id
            order by level desc
        } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/file-storage/tcl/file-storage-procs-oracle.xql}
dbqd.file-storage.tcl.file-storage-procs-oracle.fs::publish_versioned_object_to_file_system.select_object_content {dbqd.file-storage.tcl.file-storage-procs-oracle.fs::publish_versioned_object_to_file_system.select_object_content {
            select content
            from cr_revisions
            where revision_id = $live_revision
        } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/file-storage/tcl/file-storage-procs-oracle.xql}
dbqd.file-storage.tcl.file-storage-procs.fs::new_root_folder.new_root_folder {dbqd.file-storage.tcl.file-storage-procs.fs::new_root_folder.new_root_folder {
            select file_storage__new_root_folder(
                :package_id,
                :pretty_name,
                :description
            );
        } {} {} {postgresql 7.1} c:/web/openacs-4/packages/file-storage/tcl/file-storage-procs-postgresql.xql}
dbqd.file-storage.tcl.file-storage-procs.fs::get_root_folder.get_root_folder {dbqd.file-storage.tcl.file-storage-procs.fs::get_root_folder.get_root_folder {
            select file_storage__get_root_folder(:package_id);
        } {} {} {postgresql 7.1} c:/web/openacs-4/packages/file-storage/tcl/file-storage-procs-postgresql.xql}
dbqd.file-storage.tcl.file-storage-procs.fs::new_folder.new_folder {dbqd.file-storage.tcl.file-storage-procs.fs::new_folder.new_folder {
            select file_storage__new_folder(
                :name,
                :pretty_name,
                :parent_id,
                :creation_user,
                :creation_ip
            );
        } {} {} {postgresql 7.1} c:/web/openacs-4/packages/file-storage/tcl/file-storage-procs-postgresql.xql}
dbqd.file-storage.tcl.file-storage-procs.fs::rename_folder.rename_folder {dbqd.file-storage.tcl.file-storage-procs.fs::rename_folder.rename_folder {
            select content_folder__rename(
                :folder_id,
                null,
                :name,
                null
            );
        } {} {} {postgresql 7.1} c:/web/openacs-4/packages/file-storage/tcl/file-storage-procs-postgresql.xql}
dbqd.file-storage.tcl.file-storage-procs.fs::get_folder_contents.select_folder_contents {dbqd.file-storage.tcl.file-storage-procs.fs::get_folder_contents.select_folder_contents {

            select fs_objects.object_id,
                   fs_objects.name,
                   fs_objects.live_revision,
                   fs_objects.type,
                   to_char(fs_objects.last_modified, 'YYYY-MM-DD HH24:MI:SS') as last_modified_ansi,
                   fs_objects.content_size,
                   fs_objects.url,
                   fs_objects.key,
                   fs_objects.sort_key,
                   fs_objects.file_upload_name,
                   case when fs_objects.last_modified >= (now() - interval '$n_past_days days') then 1 else 0 end as new_p,
                   acs_permission__permission_p(fs_objects.object_id, :user_id, 'admin') as admin_p,
                   acs_permission__permission_p(fs_objects.object_id, :user_id, 'delete') as delete_p,
                   acs_permission__permission_p(fs_objects.object_id, :user_id, 'write') as write_p
            from fs_objects
            where fs_objects.parent_id = :folder_id
              and exists (select 1
                   from acs_object_party_privilege_map m
                   where m.object_id = fs_objects.object_id
                     and m.party_id = :user_id
                     and m.privilege = 'read')
            order by fs_objects.sort_key, fs_objects.name

        } {} {} {postgresql 7.1} c:/web/openacs-4/packages/file-storage/tcl/file-storage-procs-postgresql.xql}
dbqd.file-storage.tcl.file-storage-procs.fs_get_folder_name.folder_name {dbqd.file-storage.tcl.file-storage-procs.fs_get_folder_name.folder_name {
            select file_storage__get_folder_name(:folder_id);
        } {} {} {postgresql 7.1} c:/web/openacs-4/packages/file-storage/tcl/file-storage-procs-postgresql.xql}
dbqd.file-storage.tcl.file-storage-procs.children_have_permission_p.child_perms {dbqd.file-storage.tcl.file-storage-procs.children_have_permission_p.child_perms {
            select count(*)
            from cr_items c1, cr_items c2
            where c2.item_id = :item_id
            and c1.tree_sortkey between c2.tree_sortkey and tree_right(c2.tree_sortkey)
            and not acs_permission__permission_p(c1.item_id, :user_id, :privilege)
        } {} {} {postgresql 7.1} c:/web/openacs-4/packages/file-storage/tcl/file-storage-procs-postgresql.xql}
dbqd.file-storage.tcl.file-storage-procs.children_have_permission_p.child_items {dbqd.file-storage.tcl.file-storage-procs.children_have_permission_p.child_items {
            select c1.item_id as child_item_id
            from cr_items c1, cr_items c2
            where c2.item_id = :item_id
            and c1.tree_sortkey between c2.tree_sortkey and tree_right(c2.tree_sortkey)
            order by c1.tree_sortkey
        } {} {} {postgresql 7.1} c:/web/openacs-4/packages/file-storage/tcl/file-storage-procs-postgresql.xql}
dbqd.file-storage.tcl.file-storage-procs.children_have_permission_p.revision_perms {dbqd.file-storage.tcl.file-storage-procs.children_have_permission_p.revision_perms {
            select count(*)
            from cr_revisions
            where item_id = :child_item_id
            and acs_permission__permission_p(revision_id, :user_id, :privilege) = 'f'
        } {} {} {postgresql 7.1} c:/web/openacs-4/packages/file-storage/tcl/file-storage-procs-postgresql.xql}
dbqd.file-storage.tcl.file-storage-procs.fs_context_bar_list.title {dbqd.file-storage.tcl.file-storage-procs.fs_context_bar_list.title {
            select file_storage__get_title(:item_id)
        } {} {} {postgresql 7.1} c:/web/openacs-4/packages/file-storage/tcl/file-storage-procs-postgresql.xql}
dbqd.file-storage.tcl.file-storage-procs.fs_context_bar_list.context_bar {dbqd.file-storage.tcl.file-storage-procs.fs_context_bar_list.context_bar {
            select (case when file_storage__get_content_type(i.item_id) = 'content_folder'
                         then :folder_url || '?folder_id='
                         else :file_url || '?file_id='
                    end) || i.item_id,
                   file_storage__get_title(i.item_id)
            from (select tree_ancestor_keys(cr_items_get_tree_sortkey(:start_id)) as tree_sortkey) parents,
                 (select tree_sortkey from cr_items where item_id = :root_folder_id) root,
                 cr_items i
            where i.tree_sortkey = parents.tree_sortkey
            and i.tree_sortkey > root.tree_sortkey
            order by i.tree_sortkey asc
        } {} {} {postgresql 7.1} c:/web/openacs-4/packages/file-storage/tcl/file-storage-procs-postgresql.xql}
dbqd.file-storage.tcl.file-storage-procs.fs::publish_versioned_object_to_file_system.select_object_content {dbqd.file-storage.tcl.file-storage-procs.fs::publish_versioned_object_to_file_system.select_object_content {
            select lob
            from cr_revisions
            where revision_id = $live_revision
        } {} {} {postgresql 7.1} c:/web/openacs-4/packages/file-storage/tcl/file-storage-procs-postgresql.xql}
dbqd.file-storage.tcl.file-storage-procs.fs_folder_p.object_type {dbqd.file-storage.tcl.file-storage-procs.fs_folder_p.object_type {
            select object_type 
            from acs_objects
            where object_id = :folder_id
        } {} {} {} c:/web/openacs-4/packages/file-storage/tcl/file-storage-procs.xql}
dbqd.file-storage.tcl.file-storage-procs.fs_context_bar_list.parent_id {dbqd.file-storage.tcl.file-storage-procs.fs_context_bar_list.parent_id {
            select parent_id
            from cr_items
            where item_id = :item_id
        } {} {} {} c:/web/openacs-4/packages/file-storage/tcl/file-storage-procs.xql}
dbqd.file-storage.tcl.file-storage-procs.fs::get_folder.select_folder {dbqd.file-storage.tcl.file-storage-procs.fs::get_folder.select_folder {
            select item_id
            from cr_items
            where parent_id = :parent_id
            and name = :name
        } {} {} {} c:/web/openacs-4/packages/file-storage/tcl/file-storage-procs.xql}
dbqd.file-storage.tcl.file-storage-procs.fs::object_p.select_object_p {dbqd.file-storage.tcl.file-storage-procs.fs::object_p.select_object_p {
            select count(*)
            from dual
            where exists (select 1
                          from fs_objects
                          where object_id = :object_id)
        } {} {} {} c:/web/openacs-4/packages/file-storage/tcl/file-storage-procs.xql}
dbqd.file-storage.tcl.file-storage-procs.fs::get_object_name.select_object_name {dbqd.file-storage.tcl.file-storage-procs.fs::get_object_name.select_object_name {
            select name
            from fs_objects
            where object_id = :object_id
        } {} {} {} c:/web/openacs-4/packages/file-storage/tcl/file-storage-procs.xql}
dbqd.file-storage.tcl.file-storage-procs.fs::folder_p.select_folder_p {dbqd.file-storage.tcl.file-storage-procs.fs::folder_p.select_folder_p {
            select count(*)
            from dual
            where exists (select 1
                          from fs_folders
                          where folder_id = :object_id)
        } {} {} {} c:/web/openacs-4/packages/file-storage/tcl/file-storage-procs.xql}
dbqd.file-storage.tcl.file-storage-procs.fs::get_folder_objects.select_folder_contents {dbqd.file-storage.tcl.file-storage-procs.fs::get_folder_objects.select_folder_contents {

           select cr_items.item_id as object_id,
             cr_items.name
           from cr_items
           where cr_items.parent_id = :folder_id
            and exists (select 1
                        from acs_object_party_privilege_map m
                        where m.object_id = cr_items.item_id
                          and m.party_id = :user_id
                          and m.privilege = 'read')

        } {} {} {} c:/web/openacs-4/packages/file-storage/tcl/file-storage-procs.xql}
dbqd.file-storage.tcl.file-storage-procs.fs::get_folder_contents_count.select_folder_contents_count {dbqd.file-storage.tcl.file-storage-procs.fs::get_folder_contents_count.select_folder_contents_count {
            select count(*)
            from fs_objects
            where parent_id = :folder_id
        } {} {} {} c:/web/openacs-4/packages/file-storage/tcl/file-storage-procs.xql}
dbqd.file-storage.tcl.file-storage-procs.fs::publish_object_to_file_system.select_object_info {dbqd.file-storage.tcl.file-storage-procs.fs::publish_object_to_file_system.select_object_info {
            select fs_objects.*
            from fs_objects
            where fs_objects.object_id = :object_id
        } {} {} {} c:/web/openacs-4/packages/file-storage/tcl/file-storage-procs.xql}
dbqd.file-storage.tcl.file-storage-procs.fs::publish_url_to_file_system.select_object_metadata {dbqd.file-storage.tcl.file-storage-procs.fs::publish_url_to_file_system.select_object_metadata {
            select fs_urls_full.*
            from fs_urls_full
            where fs_urls_full.object_id = :object_id
        } {} {} {} c:/web/openacs-4/packages/file-storage/tcl/file-storage-procs.xql}
dbqd.file-storage.tcl.file-storage-procs.fs::publish_versioned_object_to_file_system.select_object_metadata {dbqd.file-storage.tcl.file-storage-procs.fs::publish_versioned_object_to_file_system.select_object_metadata {
            select fs_objects.*,
                   cr_items.storage_type,
                   cr_items.storage_area_key,
                   cr_revisions.title
            from fs_objects,
                 cr_items,
                 cr_revisions
            where fs_objects.object_id = :object_id
            and fs_objects.object_id = cr_items.item_id
            and fs_objects.live_revision = cr_revisions.revision_id
        } {} {} {} c:/web/openacs-4/packages/file-storage/tcl/file-storage-procs.xql}
dbqd.file-storage.tcl.file-storage-procs.fs::publish_versioned_object_to_file_system.select_file_name {dbqd.file-storage.tcl.file-storage-procs.fs::publish_versioned_object_to_file_system.select_file_name {
            select filename
            from cr_revisions
            where revision_id = :live_revision
        } {} {} {} c:/web/openacs-4/packages/file-storage/tcl/file-storage-procs.xql}
dbqd.file-storage.tcl.file-storage-search-procs.fs_datasource {dbqd.file-storage.tcl.file-storage-search-procs.fs_datasource {
	select r.revision_id as object_id,
	       i.name as title,
	       (case i.storage_type
		     when 'lob' then r.lob::text
		     when 'file' then '[cr_fs_path]' || r.content
	             else r.content
	        end) as content,
	        r.mime_type as mime,
	        '' as keywords,
	        i.storage_type as storage_type
	from cr_items i, cr_revisions r
	where r.item_id = i.item_id
	and   r.revision_id = :revision_id
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/file-storage/tcl/file-storage-search-procs-postgresql.xql}
dbqd.file-storage.tcl.file-storage-search-procs.fs_get_package_id {dbqd.file-storage.tcl.file-storage-search-procs.fs_get_package_id {
	select f.package_id as package_id
	  from fs_root_folders f,
       	  (select i2.parent_id
	     from cr_items i1, cr_items i2, cr_revisions r
	    where i1.item_id = r.item_id
	      and r.revision_id = :revision_id
              and i2.tree_sortkey <= i1.tree_sortkey
	      and i1.tree_sortkey i2.tree_sortkey and tree_right(i2.tree_sortkey)) as i
  	  where f.folder_id = i.parent_id
       } {} {} {postgresql 7.1} c:/web/openacs-4/packages/file-storage/tcl/file-storage-search-procs-postgresql.xql}
dbqd.file-storage.tcl.file-storage-search-procs.fs_get_url_stub {dbqd.file-storage.tcl.file-storage-search-procs.fs_get_url_stub {
        select site_node__url(node_id) as url_stub
        from site_nodes
        where object_id=:package_id
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/file-storage/tcl/file-storage-search-procs-postgresql.xql}
dbqd.file-storage.www.file-add-2-oracle.new_lob_file {dbqd.file-storage.www.file-add-2-oracle.new_lob_file {
      
	begin
    		:1 := file_storage.new_file (
        		title => :title,
        		folder_id => :folder_id,
        		creation_user => :user_id,
        		creation_ip => :creation_ip,
		        indb_p => 't'
   			);
	end;

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/file-storage/www/file-add-2-oracle.xql}
dbqd.file-storage.www.file-add-2-oracle.new_fs_file {dbqd.file-storage.www.file-add-2-oracle.new_fs_file {
      
	begin
    		:1 := file_storage.new_file (
        		title => :title,
        		folder_id => :folder_id,
        		creation_user => :user_id,
        		creation_ip => :creation_ip,
		        indb_p => 'f'
   			);

	end;

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/file-storage/www/file-add-2-oracle.xql}
dbqd.file-storage.www.file-add-2-oracle.new_version {dbqd.file-storage.www.file-add-2-oracle.new_version {
      
	begin
    		:1 := file_storage.new_version (
        		filename => :filename,
        		description => :description,
        		mime_type => :mime_type,
        		item_id => :file_id,
        		creation_user => :user_id,
        		creation_ip => :creation_ip
    			);

	end;

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/file-storage/www/file-add-2-oracle.xql}
dbqd.file-storage.www.file-add-2-oracle.lob_content {dbqd.file-storage.www.file-add-2-oracle.lob_content {
      
	update cr_revisions
	set    content = empty_blob()
	where  revision_id = :version_id
	returning content into :1

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/file-storage/www/file-add-2-oracle.xql}
dbqd.file-storage.www.file-add-2-oracle.lob_size {dbqd.file-storage.www.file-add-2-oracle.lob_size {

	update cr_revisions
 	set content_length = dbms_lob.getlength(content) 
	where revision_id = :version_id

     } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/file-storage/www/file-add-2-oracle.xql}
dbqd.file-storage.www.file-add-2-oracle.fs_content_size {dbqd.file-storage.www.file-add-2-oracle.fs_content_size {
      
	update cr_revisions
 	set filename = '$tmp_filename',
	    content_length = $tmp_size
	where revision_id = :version_id

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/file-storage/www/file-add-2-oracle.xql}
dbqd.file-storage.www.file-add-2.new_lob_file {dbqd.file-storage.www.file-add-2.new_lob_file {
      select file_storage__new_file (
        	:title,           	-- title
        	:folder_id,          	-- parent_id
        	:user_id,            	-- creation_user
        	:creation_ip,        	-- creation_ip
		true			-- indb_p
		);
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/file-storage/www/file-add-2-postgresql.xql}
dbqd.file-storage.www.file-add-2.new_fs_file {dbqd.file-storage.www.file-add-2.new_fs_file {
        select file_storage__new_file (
        	:title,           	-- title
        	:folder_id,          	-- parent_id
        	:user_id,            	-- creation_user
        	:creation_ip,        	-- creation_ip
		false			-- indb_p
		);
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/file-storage/www/file-add-2-postgresql.xql}
dbqd.file-storage.www.file-add-2.new_version {dbqd.file-storage.www.file-add-2.new_version {

    	select file_storage__new_version (
		:filename,		-- filename
       		:description,		-- description
       		:mime_type,		-- mime_type
       		:file_id,		-- item_id
       		:user_id,		-- creation_user
       		:creation_ip		-- creation_ip
		);

     } {} {} {postgresql 7.1} c:/web/openacs-4/packages/file-storage/www/file-add-2-postgresql.xql}
dbqd.file-storage.www.file-add-2.lob_content {dbqd.file-storage.www.file-add-2.lob_content {

	update cr_revisions
 	set lob = [set __lob_id [db_string get_lob_id "select empty_lob()"]]
	where revision_id = :version_id

     } {} {} {postgresql 7.1} c:/web/openacs-4/packages/file-storage/www/file-add-2-postgresql.xql}
dbqd.file-storage.www.file-add-2.lob_size {dbqd.file-storage.www.file-add-2.lob_size {

	update cr_revisions
 	set content_length = lob_length(lob)
	where revision_id = :version_id

     } {} {} {postgresql 7.1} c:/web/openacs-4/packages/file-storage/www/file-add-2-postgresql.xql}
dbqd.file-storage.www.file-add-2.fs_content_size {dbqd.file-storage.www.file-add-2.fs_content_size {

	update cr_revisions
 	set content = '$tmp_filename',
	    content_length = $tmp_size
	where revision_id = :version_id

     } {} {} {postgresql 7.1} c:/web/openacs-4/packages/file-storage/www/file-add-2-postgresql.xql}
dbqd.file-storage.www.file-add-2.duplicate_check {dbqd.file-storage.www.file-add-2.duplicate_check {
      
    	select count(*)
   	from   cr_items
	where  name = :filename
    	and    parent_id = :folder_id

      } {} {} {} c:/web/openacs-4/packages/file-storage/www/file-add-2.xql}
dbqd.file-storage.www.file-copy-2-oracle.file_copy {dbqd.file-storage.www.file-copy-2-oracle.file_copy {

   	 begin
          :1 :=	file_storage.copy_file(
            		file_id => :file_id,
            		target_folder_id => :parent_id,
            		creation_user => :user_id,
            		creation_ip => :ip_address
            		);
    	 end;

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/file-storage/www/file-copy-2-oracle.xql}
dbqd.file-storage.www.file-copy-2.file_copy {dbqd.file-storage.www.file-copy-2.file_copy {

	select file_storage__copy_file (
            	:file_id,	     -- file_id
            	:parent_id,	     -- taget_folder_id
            	:user_id,	     -- creation_user
            	:ip_address	     -- creation_ip
        	);

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/file-storage/www/file-copy-2-postgresql.xql}
dbqd.file-storage.www.file-copy-2.item_info {dbqd.file-storage.www.file-copy-2.item_info {
       
    	select name, content_type from cr_items where item_id = :file_id

      } {} {} {} c:/web/openacs-4/packages/file-storage/www/file-copy-2.xql}
dbqd.file-storage.www.file-copy.file_name {dbqd.file-storage.www.file-copy.file_name {
      
	select name as title
	from   cr_items
	where  item_id = :file_id

      } {} {} {} c:/web/openacs-4/packages/file-storage/www/file-copy.xql}
dbqd.file-storage.www.file-delete-oracle.blockers {dbqd.file-storage.www.file-delete-oracle.blockers {
      
	select count(*) 
	from   cr_revisions
	where  item_id = :file_id
	and    acs_permission.permission_p(revision_id,:user_id,'delete') = 'f'

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/file-storage/www/file-delete-oracle.xql}
dbqd.file-storage.www.file-delete-oracle.delete_file {dbqd.file-storage.www.file-delete-oracle.delete_file {

	begin
        	file_storage.delete_file(:file_id);
	end;

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/file-storage/www/file-delete-oracle.xql}
dbqd.file-storage.www.file-delete.blockers {dbqd.file-storage.www.file-delete.blockers {
      
	select count(*) 
	from   cr_revisions
	where  item_id = :file_id
	and    acs_permission__permission_p(revision_id,:user_id,'delete') = 'f'

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/file-storage/www/file-delete-postgresql.xql}
dbqd.file-storage.www.file-delete.delete_file {dbqd.file-storage.www.file-delete.delete_file {

        select file_storage__delete_file(:file_id);

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/file-storage/www/file-delete-postgresql.xql}
dbqd.file-storage.www.file-delete.parent_id {dbqd.file-storage.www.file-delete.parent_id {

	select parent_id from cr_items where item_id = :file_id

      } {} {} {} c:/web/openacs-4/packages/file-storage/www/file-delete.xql}
dbqd.file-storage.www.file-delete.file_name {dbqd.file-storage.www.file-delete.file_name {
      
    	select name as title
    	from   cr_items
    	where  item_id = :file_id

      } {} {} {} c:/web/openacs-4/packages/file-storage/www/file-delete.xql}
dbqd.file-storage.www.file-edit-2-oracle.rename_file {dbqd.file-storage.www.file-edit-2-oracle.rename_file {
      
	begin
    		file_storage.rename_file (
        		file_id => :file_id,
        		title => :title
    			);
	end;

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/file-storage/www/file-edit-2-oracle.xql}
dbqd.file-storage.www.file-edit-2-oracle.duplicate_check {dbqd.file-storage.www.file-edit-2-oracle.duplicate_check {
      
    	select count(*)
    	from   cr_items
    	where  name = :title
    	and    parent_id = content_item.get_parent_folder(:file_id)

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/file-storage/www/file-edit-2-oracle.xql}
dbqd.file-storage.www.file-edit-2.rename_file {dbqd.file-storage.www.file-edit-2.rename_file {

    	select file_storage__rename_file (
        	:file_id, -- file_id
        	:title	  -- title
    		);

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/file-storage/www/file-edit-2-postgresql.xql}
dbqd.file-storage.www.file-edit-2.duplicate_check {dbqd.file-storage.www.file-edit-2.duplicate_check {
      
    	select count(*)
    	from   cr_items
    	where  name = :title
    	and    parent_id = content_item__get_parent_folder(:file_id)

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/file-storage/www/file-edit-2-postgresql.xql}
dbqd.file-storage.www.file-edit-oracle.file_info {dbqd.file-storage.www.file-edit-oracle.file_info {
      
	select name as title
	from   cr_items
	where  item_id = :file_id

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/file-storage/www/file-edit-oracle.xql}
dbqd.file-storage.www.file-edit.file_info {dbqd.file-storage.www.file-edit.file_info {
      
	select name as title
	from   cr_items
	where  item_id = :file_id

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/file-storage/www/file-edit-postgresql.xql}
dbqd.file-storage.www.file-move-2-oracle.file_move {dbqd.file-storage.www.file-move-2-oracle.file_move {
      
	begin
    		file_storage.move_file (
    			file_id => :file_id,
    			target_folder_id => :parent_id,
                        creation_user => :user_id,
                        creation_ip => :address
    			);
	end;

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/file-storage/www/file-move-2-oracle.xql}
dbqd.file-storage.www.file-move-2.file_move {dbqd.file-storage.www.file-move-2.file_move {

    	select file_storage__move_file (
    		:file_id,	-- file_id
    		:parent_id,	-- target_folder_id
    		:user_id,	-- creation_user
    		:address	-- creation_ip
    		);

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/file-storage/www/file-move-2-postgresql.xql}
dbqd.file-storage.www.file-move-2.context_update {dbqd.file-storage.www.file-move-2.context_update {
      
	update acs_objects
	set    context_id = :parent_id
	where  object_id = :file_id

      } {} {} {} c:/web/openacs-4/packages/file-storage/www/file-move-2.xql}
dbqd.file-storage.www.file-move-2.filename {dbqd.file-storage.www.file-move-2.filename {
      
    	select name from cr_items where item_id = :file_id

      } {} {} {} c:/web/openacs-4/packages/file-storage/www/file-move-2.xql}
dbqd.file-storage.www.file-move-2.duplicate_check {dbqd.file-storage.www.file-move-2.duplicate_check {
      
    	select count(*)
    	from   cr_items
    	where  name = :filename
    	and    parent_id = :parent_id

      } {} {} {} c:/web/openacs-4/packages/file-storage/www/file-move-2.xql}
dbqd.file-storage.www.file-move-oracle.file_name {dbqd.file-storage.www.file-move-oracle.file_name {
      
	begin
    		:1 := file_storage.get_title(:file_id);
	end;

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/file-storage/www/file-move-oracle.xql}
dbqd.file-storage.www.file-move.file_name {dbqd.file-storage.www.file-move.file_name {
 
	select file_storage__get_title(:file_id);

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/file-storage/www/file-move-postgresql.xql}
dbqd.file-storage.www.file-oracle.get_folder {dbqd.file-storage.www.file-oracle.get_folder {
	select content_item.get_parent_folder(:file_id)
	from dual
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/file-storage/www/file-oracle.xql}
dbqd.file-storage.www.file-oracle.file_info {dbqd.file-storage.www.file-oracle.file_info {
      
	select person.name(o.creation_user) as owner,
       		i.name as title,
       		r.title as name,
       		acs_permission.permission_p(:file_id,:user_id,'write') as write_p,
       		acs_permission.permission_p(:file_id,:user_id,'delete') as delete_p,
       		acs_permission.permission_p(:file_id,:user_id,'admin') as admin_p
	from   acs_objects o, cr_revisions r, cr_items i
	where  o.object_id = :file_id
	and    i.item_id   = o.object_id
	and    r.revision_id = i.live_revision
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/file-storage/www/file-oracle.xql}
dbqd.file-storage.www.file-oracle.version_info {dbqd.file-storage.www.file-oracle.version_info {

	select  r.title,
       		r.revision_id as version_id,
       		person.name(o.creation_user) as author,
       		r.mime_type as type,
                to_char(o.last_modified,'YYYY-MM-DD HH24:MI:SS') as last_modified_ansi,
       		r.description,
       		acs_permission.permission_p(r.revision_id,:user_id,'admin') as admin_p,
       		acs_permission.permission_p(r.revision_id,:user_id,'delete') as delete_p,
       		r.content_length as content_size
	from   acs_objects o, cr_revisions r, cr_items i
	where o.object_id = r.revision_id
	  and r.item_id = i.item_id
	  and r.item_id = :file_id
          and exists (select 1
                      from acs_object_party_privilege_map m
                      where m.object_id = r.revision_id
                        and m.party_id = :user_id
                        and m.privilege = 'read')
	$show_versions order by last_modified desc

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/file-storage/www/file-oracle.xql}
dbqd.file-storage.www.file-oracle.show_all_versions {dbqd.file-storage.www.file-oracle.show_all_versions {} {} {} {oracle 8.1.6} c:/web/openacs-4/packages/file-storage/www/file-oracle.xql}
dbqd.file-storage.www.file-oracle.show_live_version {dbqd.file-storage.www.file-oracle.show_live_version {

	and r.revision_id = i.live_revision

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/file-storage/www/file-oracle.xql}
dbqd.file-storage.www.file.get_folder {dbqd.file-storage.www.file.get_folder {
	select content_item__get_parent_folder(:file_id)
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/file-storage/www/file-postgresql.xql}
dbqd.file-storage.www.file.file_info {dbqd.file-storage.www.file.file_info {
      
	select person__name(o.creation_user) as owner,
       		i.name as title,
       		r.title as name,
       		acs_permission__permission_p(:file_id,:user_id,'write') as write_p,
       		acs_permission__permission_p(:file_id,:user_id,'delete') as delete_p,
       		acs_permission__permission_p(:file_id,:user_id,'admin') as admin_p
	from   acs_objects o, cr_revisions r, cr_items i
	where  o.object_id = :file_id
	and    i.item_id   = o.object_id
	and    r.revision_id = i.live_revision
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/file-storage/www/file-postgresql.xql}
dbqd.file-storage.www.file.version_info {dbqd.file-storage.www.file.version_info {

	select  r.title,
       		r.revision_id as version_id,
       		person__name(o.creation_user) as author,
       		r.mime_type as type,
                to_char(o.last_modified,'YYYY-MM-DD HH24:MI:SS') as last_modified_ansi,
       		r.description,
       		acs_permission__permission_p(r.revision_id,:user_id,'admin') as admin_p,
       		acs_permission__permission_p(r.revision_id,:user_id,'delete') as delete_p,
       		r.content_length as content_size
	from   acs_objects o, cr_revisions r, cr_items i
	where o.object_id = r.revision_id
	  and r.item_id = i.item_id
	  and r.item_id = :file_id
          and exists (select 1
                      from acs_object_party_privilege_map m
                      where m.object_id = r.revision_id
                        and m.party_id = :user_id
                        and m.privilege = 'read')
	$show_versions order by last_modified desc

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/file-storage/www/file-postgresql.xql}
dbqd.file-storage.www.file.show_all_versions {dbqd.file-storage.www.file.show_all_versions {} {} {} {postgresql 7.1} c:/web/openacs-4/packages/file-storage/www/file-postgresql.xql}
dbqd.file-storage.www.file.show_live_version {dbqd.file-storage.www.file.show_live_version {

	and r.revision_id = i.live_revision

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/file-storage/www/file-postgresql.xql}
dbqd.file-storage.www.folder-chunk-oracle.select_folder_contents {dbqd.file-storage.www.folder-chunk-oracle.select_folder_contents {

            select fs_objects.object_id,
                   fs_objects.name,
                   fs_objects.live_revision,
                   fs_objects.type,
                   to_char(fs_objects.last_modified, 'YYYY-MM-DD HH24:MI:SS') as last_modified_ansi,
                   fs_objects.content_size,
                   fs_objects.url,
                   content_item.get_path(fs_objects.object_id, :root_folder_id) as file_url,
                   fs_objects.sort_key,
                   fs_objects.file_upload_name,
                   case when fs_objects.last_modified >= (sysdate - :n_past_days) then 1 else 0 end as new_p,
                   case
                     when type = 'url'
                     then acs_permission.permission_p(fs_objects.object_id, :viewing_user_id, 'delete')
                     else 't'
                   end as delete_p,
                   case
                     when type = 'url'
                     then acs_permission.permission_p(fs_objects.object_id, :viewing_user_id, 'write')
                     else 't'
                   end as write_p
            from fs_objects
            where fs_objects.parent_id = :folder_id
              and exists (select 1
                   from acs_object_party_privilege_map m
                   where m.object_id = fs_objects.object_id
                     and m.party_id = :viewing_user_id
                     and m.privilege = 'read')
            order by fs_objects.sort_key, fs_objects.name

        } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/file-storage/www/folder-chunk-oracle.xql}
dbqd.file-storage.www.folder-chunk.select_folder_contents {dbqd.file-storage.www.folder-chunk.select_folder_contents {

            select fs_objects.object_id,
                   fs_objects.name,
                   fs_objects.live_revision,
                   fs_objects.type,
                   to_char(fs_objects.last_modified, 'YYYY-MM-DD HH24:MI:SS') as last_modified_ansi,
                   fs_objects.content_size,
                   fs_objects.url,
                   content_item__get_path(fs_objects.object_id, :root_folder_id) as file_url,
                   fs_objects.sort_key,
                   fs_objects.file_upload_name,
                   case when fs_objects.last_modified >= (now() - cast('$n_past_days days' as interval)) then 1 else 0 end as new_p,
                   case
                     when type = 'url'
                     then acs_permission__permission_p(fs_objects.object_id, :viewing_user_id, 'delete')
                     else 't'
                   end as delete_p,
                   case
                     when type = 'url'
                     then acs_permission__permission_p(fs_objects.object_id, :viewing_user_id, 'write')
                     else 't'
                   end as write_p
            from fs_objects
            where fs_objects.parent_id = :folder_id
              and exists (select 1
                   from acs_object_party_privilege_map m
                   where m.object_id = fs_objects.object_id
                     and m.party_id = :viewing_user_id
                     and m.privilege = 'read')
            order by fs_objects.sort_key, fs_objects.name

        } {} {} {postgresql 7.1} c:/web/openacs-4/packages/file-storage/www/folder-chunk-postgresql.xql}
dbqd.file-storage.www.folder-create-2-oracle.folder_create {dbqd.file-storage.www.folder-create-2-oracle.folder_create {
      
begin
    :1 := file_storage.new_folder (
        name => :name,
        folder_name => :folder_name,
        parent_id => :parent_id,
        creation_user => :user_id,
        creation_ip => :creation_ip
    );
end;
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/file-storage/www/folder-create-2-oracle.xql}
dbqd.file-storage.www.folder-create-2.folder_create {dbqd.file-storage.www.folder-create-2.folder_create {

	select file_storage__new_folder (
        	:name, 		-- name 
        	:folder_name, 	-- label
        	:parent_id, 	-- parent_id 
        	:user_id,    	-- creation_user
        	:creation_ip 	-- creation_ip
    		);

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/file-storage/www/folder-create-2-postgresql.xql}
dbqd.file-storage.www.folder-create-2.duplicate_check {dbqd.file-storage.www.folder-create-2.duplicate_check {
      
    select count(*)
    from   cr_items
    where  name = :name
    and    parent_id = :parent_id
      } {} {} {} c:/web/openacs-4/packages/file-storage/www/folder-create-2.xql}
dbqd.file-storage.www.folder-delete-oracle.folder_delete {dbqd.file-storage.www.folder-delete-oracle.folder_delete {
      
    begin
        file_storage.delete_folder(:folder_id);
    end;

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/file-storage/www/folder-delete-oracle.xql}
dbqd.file-storage.www.folder-delete.folder_delete {dbqd.file-storage.www.folder-delete.folder_delete {

        select file_storage__delete_folder(:folder_id);

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/file-storage/www/folder-delete-postgresql.xql}
dbqd.file-storage.www.folder-delete.child_count {dbqd.file-storage.www.folder-delete.child_count {
      
	select count(*) from cr_items where parent_id = :folder_id
      } {} {} {} c:/web/openacs-4/packages/file-storage/www/folder-delete.xql}
dbqd.file-storage.www.folder-delete.parent_id {dbqd.file-storage.www.folder-delete.parent_id {
      
    select parent_id from cr_items where item_id = :folder_id
      } {} {} {} c:/web/openacs-4/packages/file-storage/www/folder-delete.xql}
dbqd.file-storage.www.folder-delete.folder_name {dbqd.file-storage.www.folder-delete.folder_name {
      
    select label from cr_folders where folder_id = :folder_id
      } {} {} {} c:/web/openacs-4/packages/file-storage/www/folder-delete.xql}
dbqd.file-storage.www.folder-edit-2-oracle.folder_rename {dbqd.file-storage.www.folder-edit-2-oracle.folder_rename {
      begin
          content_folder.rename (
                  folder_id => :folder_id,
                  label => :folder_name
          );
      end;
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/file-storage/www/folder-edit-2-oracle.xql}
dbqd.file-storage.www.folder-edit-2.folder_rename {dbqd.file-storage.www.folder-edit-2.folder_rename {
      select content_folder__rename (
                  :folder_id, 
                  null,    -- name
                  :folder_name, -- label
                  null -- description
          );
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/file-storage/www/folder-edit-2-postgresql.xql}
dbqd.file-storage.www.folder-list-oracle.folder {dbqd.file-storage.www.folder-list-oracle.folder {

	select lpad('&nbsp;&nbsp;',12 * level,'&nbsp;&nbsp;') as spaces,
     		(select f.label from cr_folders f where f.folder_id = i.item_id) as label,
     		(select f.folder_id from cr_folders f where f.folder_id = i.item_id) as new_parent
	from   cr_items i
	where  acs_permission.permission_p(i.item_id,:user_id,'write') = 't'
	and    exists (select 1 from cr_folders f where f.folder_id = i.item_id)
	$children_clause
	connect by prior item_id = parent_id
	start with item_id = file_storage.get_root_folder([ad_conn package_id])

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/file-storage/www/folder-list-oracle.xql}
dbqd.file-storage.www.folder-list-oracle.children_clause {dbqd.file-storage.www.folder-list-oracle.children_clause {

    	and item_id not in (select item_id
    	from cr_items
    	where item_id != :file_id
    	connect by prior item_id = parent_id
    	start with item_id = :file_id)


      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/file-storage/www/folder-list-oracle.xql}
dbqd.file-storage.www.folder-list.folder {dbqd.file-storage.www.folder-list.folder {

	select lpad('&nbsp;&nbsp;',12 * tree_level(i.tree_sortkey),'&nbsp;&nbsp;') as spaces,
     		(select f.label from cr_folders f where f.folder_id = i.item_id) as label,
     		(select f.folder_id from cr_folders f where f.folder_id = i.item_id) as new_parent
	from   cr_items i, cr_items l
	where acs_permission__permission_p(i.item_id,:user_id,'write') 
          and exists (select 1 from cr_folders f where f.folder_id = i.item_id)
          $children_clause
          and i.tree_sortkey between l.tree_sortkey and tree_right(l.tree_sortkey)
          and l.item_id = file_storage__get_root_folder(:package_id)
	order by i.tree_sortkey


      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/file-storage/www/folder-list-postgresql.xql}
dbqd.file-storage.www.folder-list.children_clause {dbqd.file-storage.www.folder-list.children_clause {

    	and not exists (select 1
    			from cr_items j, cr_items k
    			where i.item_id = j.item_id
                          and j.item_id != :file_id
    			  and j.tree_sortkey between k.tree_sortkey and tree_right(k.tree_sortkey)
                          and k.item_id = :file_id) 

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/file-storage/www/folder-list-postgresql.xql}
dbqd.file-storage.www.search-oracle.results {dbqd.file-storage.www.search-oracle.results {
      
    	select item_id as file_id,
           	content_item.get_title(item_id) as title
    	from   cr_items
    	where  lower(content_item.get_title(item_id)) like :query
    	and    acs_permission.permission_p(item_id,:user_id,'read') = 't'

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/file-storage/www/search-oracle.xql}
dbqd.file-storage.www.search.results {dbqd.file-storage.www.search.results {
      
    	select item_id as file_id,
           	content_item__get_title(item_id) as title
    		from   cr_items
    		where  lower(content_item__get_title(item_id)) like :query
    		and    acs_permission__permission_p(item_id,:user_id,'read') = 't'

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/file-storage/www/search-postgresql.xql}
dbqd.file-storage.www.simple-edit-2.select_folder_id {dbqd.file-storage.www.simple-edit-2.select_folder_id {
         select parent_id as folder_id
         from cr_items
         where item_id = :object_id
      } {} {} {} c:/web/openacs-4/packages/file-storage/www/simple-edit-2.xql}
dbqd.file-storage.www.simple-edit.extlink_data {dbqd.file-storage.www.simple-edit.extlink_data {
         select name, url, description, folder_id
         from fs_urls_full
         where url_id= :object_id
      } {} {} {} c:/web/openacs-4/packages/file-storage/www/simple-edit.xql}
dbqd.file-storage.www.url-goto.select_url {dbqd.file-storage.www.url-goto.select_url {
         select url
         from cr_extlinks
         where extlink_id= :url_id
      } {} {} {} c:/web/openacs-4/packages/file-storage/www/url-goto.xql}
dbqd.file-storage.www.version-add-2-oracle.new_version {dbqd.file-storage.www.version-add-2-oracle.new_version {
      
	begin
    	:1 := file_storage.new_version(
        	filename => :filename,
        	description => :description,
        	mime_type => :mime_type,
        	item_id => :file_id,
        	creation_user => :user_id,
        	creation_ip => :creation_ip
   		);
	end;

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/file-storage/www/version-add-2-oracle.xql}
dbqd.file-storage.www.version-add-2-oracle.lob_content {dbqd.file-storage.www.version-add-2-oracle.lob_content {
      
	update cr_revisions
	set    content = empty_blob()
	where  revision_id = :version_id
	returning content into :1

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/file-storage/www/version-add-2-oracle.xql}
dbqd.file-storage.www.version-add-2-oracle.lob_size {dbqd.file-storage.www.version-add-2-oracle.lob_size {

	update cr_revisions
 	set content_length = dbms_lob.getlength(content) 
	where revision_id = :version_id

     } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/file-storage/www/version-add-2-oracle.xql}
dbqd.file-storage.www.version-add-2-oracle.fs_content_size {dbqd.file-storage.www.version-add-2-oracle.fs_content_size {

	update cr_revisions
 	set filename = '$tmp_filename',
	    content_length = $tmp_size
	where revision_id = :version_id

     } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/file-storage/www/version-add-2-oracle.xql}
dbqd.file-storage.www.version-add-2.new_version {dbqd.file-storage.www.version-add-2.new_version {

    	select file_storage__new_version (
		:filename,		-- filename
       		:description,		-- description
       		:mime_type,		-- mime_type
       		:file_id,		-- item_id
       		:user_id,		-- creation_user
       		:creation_ip		-- creation_ip
		);

     } {} {} {postgresql 7.1} c:/web/openacs-4/packages/file-storage/www/version-add-2-postgresql.xql}
dbqd.file-storage.www.version-add-2.lob_content {dbqd.file-storage.www.version-add-2.lob_content {

	update cr_revisions
 	set lob = [set __lob_id [db_string get_lob_id "select empty_lob()"]]
	where revision_id = :version_id

     } {} {} {postgresql 7.1} c:/web/openacs-4/packages/file-storage/www/version-add-2-postgresql.xql}
dbqd.file-storage.www.version-add-2.lob_size {dbqd.file-storage.www.version-add-2.lob_size {

	update cr_revisions
 	set content_length = lob_length(lob)
	where revision_id = :version_id

     } {} {} {postgresql 7.1} c:/web/openacs-4/packages/file-storage/www/version-add-2-postgresql.xql}
dbqd.file-storage.www.version-add-2.fs_content_size {dbqd.file-storage.www.version-add-2.fs_content_size {

	update cr_revisions
 	set content = '$tmp_filename',
	    content_length = $tmp_size
	where revision_id = :version_id

     } {} {} {postgresql 7.1} c:/web/openacs-4/packages/file-storage/www/version-add-2-postgresql.xql}
dbqd.file-storage.www.version-add.file_name {dbqd.file-storage.www.version-add.file_name {
      
	select name as title
        from   cr_items
        where  item_id = :file_id

      } {} {} {} c:/web/openacs-4/packages/file-storage/www/version-add.xql}
dbqd.file-storage.www.version-delete-oracle.delete_version {dbqd.file-storage.www.version-delete-oracle.delete_version {

	begin
	   :1 := file_storage.delete_version(
			:item_id,
			:version_id
			);
	end;

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/file-storage/www/version-delete-oracle.xql}
dbqd.file-storage.www.version-delete-oracle.delete_file {dbqd.file-storage.www.version-delete-oracle.delete_file {
	
	begin
		file_storage.delete_file(
			:item_id
			);
	end;

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/file-storage/www/version-delete-oracle.xql}
dbqd.file-storage.www.version-delete.delete_version {dbqd.file-storage.www.version-delete.delete_version {

	select file_storage__delete_version(
			:item_id,
			:version_id
			);
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/file-storage/www/version-delete-postgresql.xql}
dbqd.file-storage.www.version-delete.delete_file {dbqd.file-storage.www.version-delete.delete_file {

	select file_storage__delete_file(
			:item_id
			);
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/file-storage/www/version-delete-postgresql.xql}
dbqd.file-storage.www.version-delete.item_select {dbqd.file-storage.www.version-delete.item_select {
      
	select item_id
	from   cr_revisions
	where  revision_id = :version_id

      } {} {} {} c:/web/openacs-4/packages/file-storage/www/version-delete.xql}
dbqd.file-storage.www.version-delete.version_name {dbqd.file-storage.www.version-delete.version_name {
      
    	select i.name as title, r.title as version_name 
	from cr_items i, cr_revisions r
	where i.item_id = r.item_id
	and r.revision_id = :version_id

      } {} {} {} c:/web/openacs-4/packages/file-storage/www/version-delete.xql}
dbqd.file-storage.www.view.index-oracle.template_root {dbqd.file-storage.www.view.index-oracle.template_root {

      select content_template.get_root_folder from dual

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/file-storage/www/view/index-oracle.xql}
dbqd.file-storage.www.view.index.template_root {dbqd.file-storage.www.view.index.template_root {

      select content_template__get_root_folder()

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/file-storage/www/view/index-postgresql.xql}
dbqd.forums.tcl.forum-reply-procs-oracle.forum::notification::get_url.select_forums_package_url {dbqd.forums.tcl.forum-reply-procs-oracle.forum::notification::get_url.select_forums_package_url {
            select site_node.url(node_id)
            from site_nodes
            where object_id = (select package_id
                               from forums_forums
                               where forums_forums.forum_id = :forum_id)
        } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/forums/tcl/forum-reply-procs-oracle.xql}
dbqd.forums.tcl.forum-reply-procs.forum::notification::get_url.select_forums_package_url {dbqd.forums.tcl.forum-reply-procs.forum::notification::get_url.select_forums_package_url {
            select site_node__url(node_id) 
            from site_nodes
            where object_id = (select package_id
                               from forums_forums
                               where forums_forums.forum_id = :forum_id)
        } {} {} {postgresql 7.1} c:/web/openacs-4/packages/forums/tcl/forum-reply-procs-postgresql.xql}
dbqd.forums.tcl.forum-reply-procs.forum::notification::get_url.select_object_type {dbqd.forums.tcl.forum-reply-procs.forum::notification::get_url.select_object_type {	
	select object_type 
	from acs_objects
	where object_id = :object_id
        } {} {} {} c:/web/openacs-4/packages/forums/tcl/forum-reply-procs.xql}
dbqd.forums.tcl.forums-procs.forum::edit.update_forum {dbqd.forums.tcl.forums-procs.forum::edit.update_forum {
            update forums_forums
            set name= :name,
                charter= :charter,
                presentation_type= :presentation_type,
                posting_policy= :posting_policy
            where forum_id = :forum_id
        } {} {} {} c:/web/openacs-4/packages/forums/tcl/forums-procs.xql}
dbqd.forums.tcl.forums-procs.forum::list_forums.select_forums {dbqd.forums.tcl.forums-procs.forum::list_forums.select_forums {
            select forum_id,
                   name,
                   posting_policy,
                   presentation_type
            from forums_forums
            where package_id = :package_id
            order by name
        } {} {} {} c:/web/openacs-4/packages/forums/tcl/forums-procs.xql}
dbqd.forums.tcl.forums-procs.forum::get.select_forum {dbqd.forums.tcl.forums-procs.forum::get.select_forum {
            select forums_forums.*
            from forums_forums
            where forums_forums.forum_id = :forum_id
        } {} {} {} c:/web/openacs-4/packages/forums/tcl/forums-procs.xql}
dbqd.forums.tcl.forums-procs.forum::enable.update_forum_enabled_p {dbqd.forums.tcl.forums-procs.forum::enable.update_forum_enabled_p {
            update forums_forums
            set enabled_p = 't'
            where forum_id = :forum_id
        } {} {} {} c:/web/openacs-4/packages/forums/tcl/forums-procs.xql}
dbqd.forums.tcl.forums-procs.forum::disable.update_forum_disabled_p {dbqd.forums.tcl.forums-procs.forum::disable.update_forum_disabled_p {
            update forums_forums
            set enabled_p = 'f'
            where forum_id = :forum_id
        } {} {} {} c:/web/openacs-4/packages/forums/tcl/forums-procs.xql}
dbqd.forums.tcl.forums-sc-procs.forum::message::do_notifications.select_forums_package_url {dbqd.forums.tcl.forums-sc-procs.forum::message::do_notifications.select_forums_package_url {
            select site_node__url(node_id)
            from site_nodes
            where object_id = (select package_id
                               from forums_forums
                               where forums_forums.forum_id = :forum_id)
        } {} {} {postgresql 7.1} c:/web/openacs-4/packages/forums/tcl/forums-sc-procs-postgresql.xql}
dbqd.forums.tcl.forums-sc-procs.forum::message::url.select_forums_package_url {dbqd.forums.tcl.forums-sc-procs.forum::message::url.select_forums_package_url {
            select site_node__url(node_id)
            from site_nodes
            where object_id = (select package_id
                               from forums_forums
                               where forums_forums.forum_id = :forum_id)
        } {} {} {postgresql 7.1} c:/web/openacs-4/packages/forums/tcl/forums-sc-procs-postgresql.xql}
dbqd.forums.tcl.forums-sc-procs.forum::message::datasource.messages {dbqd.forums.tcl.forums-sc-procs.forum::message::datasource.messages {
        select subject, content, html_p
        from forums_messages
        where message_id=:message_id or (tree_sortkey between tree_left(:tree_sortkey) and tree_right(:tree_sortkey))
        and forum_id=:forum_id
        order by tree_sortkey
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/forums/tcl/forums-sc-procs-postgresql.xql}
dbqd.forums.tcl.messages-procs-oracle.forum::message::get.select_message {dbqd.forums.tcl.messages-procs-oracle.forum::message::get.select_message {
            select forums_messages.*,
                   0 as n_attachments,
                   person.name(forums_messages.user_id) as user_name, 
                   party.email(forums_messages.user_id) as user_email,
                   forums_forum.name(forums_messages.forum_id) as forum_name, 
                   forums_message.root_message_id(forums_messages.message_id) as root_message_id,
                   (select fm2.subject
                    from forums_messages fm2 
                    where fm2.message_id = forums_message.root_message_id(forums_messages.message_id)) as root_subject, 
                   to_char(forums_messages.posting_date, 'YYYY-MM-DD HH24:MI:SS') as posting_date_ansi
            from forums_messages
            where forums_messages.message_id = :message_id
        } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/forums/tcl/messages-procs-oracle.xql}
dbqd.forums.tcl.messages-procs-oracle.forum::message::get.select_message_with_attachment {dbqd.forums.tcl.messages-procs-oracle.forum::message::get.select_message_with_attachment {
            select forums_messages.*,
                   (select count(*) from attachments where object_id= message_id) as n_attachments,
                   person.name(forums_messages.user_id) as user_name, 
                   party.email(forums_messages.user_id) as user_email,
                   forums_forum.name(forums_messages.forum_id) as forum_name, 
                   forums_message.root_message_id(forums_messages.message_id) as root_message_id,
                   (select fm2.subject
                    from forums_messages fm2 
                    where fm2.message_id = forums_message.root_message_id(forums_messages.message_id)) as root_subject, 
                   to_char(forums_messages.posting_date, 'YYYY-MM-DD HH24:MI:SS') as posting_date_ansi
            from forums_messages
            where forums_messages.message_id = :message_id
        } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/forums/tcl/messages-procs-oracle.xql}
dbqd.forums.tcl.messages-procs-oracle.forum::message::do_notifications.select_forums_package_url {dbqd.forums.tcl.messages-procs-oracle.forum::message::do_notifications.select_forums_package_url {
            select site_node.url(node_id)
            from site_nodes
            where object_id = (select package_id
                               from forums_forums
                               where forums_forums.forum_id = :forum_id)
        } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/forums/tcl/messages-procs-oracle.xql}
dbqd.forums.tcl.messages-procs-oracle.forum::message::delete.delete_message {dbqd.forums.tcl.messages-procs-oracle.forum::message::delete.delete_message {
            declare begin
                forums_message.delete_thread(:message_id);
            end;
        } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/forums/tcl/messages-procs-oracle.xql}
dbqd.forums.tcl.messages-procs-oracle.forum::message::close.thread_close {dbqd.forums.tcl.messages-procs-oracle.forum::message::close.thread_close {
            declare begin
                forums_message.thread_close(:message_id);
            end;
        } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/forums/tcl/messages-procs-oracle.xql}
dbqd.forums.tcl.messages-procs-oracle.forum::message::open.thread_open {dbqd.forums.tcl.messages-procs-oracle.forum::message::open.thread_open {
            declare begin
                forums_message.thread_open(:message_id);
            end;
        } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/forums/tcl/messages-procs-oracle.xql}
dbqd.forums.tcl.messages-procs.forum::message::get.select_message {dbqd.forums.tcl.messages-procs.forum::message::get.select_message {
            select forums_messages.*,
                   person__name(forums_messages.user_id) as user_name, 
                   party__email(forums_messages.user_id) as user_email,
                   forums_forum__name(forums_messages.forum_id) as forum_name, 
                   forums_message__root_message_id(forums_messages.message_id) as root_message_id,
                   (select fm2.subject
                    from forums_messages fm2 
                    where fm2.message_id = forums_message__root_message_id(forums_messages.message_id)) as root_subject, 
                   to_char(forums_messages.posting_date, 'YYYY-MM-DD HH24:MI:SS') as posting_date_ansi
            from forums_messages
            where forums_messages.message_id= :message_id
        } {} {} {postgresql 7.1} c:/web/openacs-4/packages/forums/tcl/messages-procs-postgresql.xql}
dbqd.forums.tcl.messages-procs.forum::message::get.select_message_with_attachment {dbqd.forums.tcl.messages-procs.forum::message::get.select_message_with_attachment {
            select forums_messages.*,
                   (select count(*) from attachments where object_id= message_id) as n_attachments,
                   person__name(forums_messages.user_id) as user_name, 
                   party__email(forums_messages.user_id) as user_email,
                   forums_forum__name(forums_messages.forum_id) as forum_name, 
                   forums_message__root_message_id(forums_messages.message_id) as root_message_id,
                   (select fm2.subject
                    from forums_messages fm2 
                    where fm2.message_id = forums_message__root_message_id(forums_messages.message_id)) as root_subject, 
                   to_char(forums_messages.posting_date, 'YYYY-MM-DD HH24:MI:SS') as posting_date_ansi
            from forums_messages
            where forums_messages.message_id= :message_id
        } {} {} {postgresql 7.1} c:/web/openacs-4/packages/forums/tcl/messages-procs-postgresql.xql}
dbqd.forums.tcl.messages-procs.forum::message::do_notifications.select_forums_package_url {dbqd.forums.tcl.messages-procs.forum::message::do_notifications.select_forums_package_url {
            select site_node__url(node_id)
            from site_nodes
            where object_id = (select package_id
                               from forums_forums
                               where forums_forums.forum_id = :forum_id)
        } {} {} {postgresql 7.1} c:/web/openacs-4/packages/forums/tcl/messages-procs-postgresql.xql}
dbqd.forums.tcl.messages-procs.forum::message::delete.delete_message {dbqd.forums.tcl.messages-procs.forum::message::delete.delete_message {
            select forums_message__delete_thread(:message_id);
        } {} {} {postgresql 7.1} c:/web/openacs-4/packages/forums/tcl/messages-procs-postgresql.xql}
dbqd.forums.tcl.messages-procs.forum::message::close.thread_close {dbqd.forums.tcl.messages-procs.forum::message::close.thread_close {
            select forums_message__thread_close(:message_id);
        } {} {} {postgresql 7.1} c:/web/openacs-4/packages/forums/tcl/messages-procs-postgresql.xql}
dbqd.forums.tcl.messages-procs.forum::message::open.thread_open {dbqd.forums.tcl.messages-procs.forum::message::open.thread_open {
            select forums_message__thread_open(:message_id);
        } {} {} {postgresql 7.1} c:/web/openacs-4/packages/forums/tcl/messages-procs-postgresql.xql}
dbqd.forums.tcl.messages-procs.forum::message::set_html_p.update_message_html_p {dbqd.forums.tcl.messages-procs.forum::message::set_html_p.update_message_html_p {
            update forums_messages
            set html_p = :html_p
            where message_id = :message_id
        } {} {} {} c:/web/openacs-4/packages/forums/tcl/messages-procs.xql}
dbqd.forums.tcl.messages-procs.forum::message::edit.update_message {dbqd.forums.tcl.messages-procs.forum::message::edit.update_message {
            update forums_messages
            set subject = :subject,
                content = :content,
                html_p = :html_p
            where message_id = :message_id
        } {} {} {} c:/web/openacs-4/packages/forums/tcl/messages-procs.xql}
dbqd.forums.tcl.messages-procs.forum::message::set_state.update_message_state {dbqd.forums.tcl.messages-procs.forum::message::set_state.update_message_state {
            update forums_messages
            set state = :state
            where message_id = :message_id
        } {} {} {} c:/web/openacs-4/packages/forums/tcl/messages-procs.xql}
dbqd.forums.tcl.messages-procs.forum::message::new.message_exists_p {dbqd.forums.tcl.messages-procs.forum::message::new.message_exists_p {
	  select count(message_id)
	  from forums_messages 
	  where message_id = :message_id
        } {} {} {} c:/web/openacs-4/packages/forums/tcl/messages-procs.xql}
dbqd.forums.www.admin.index.select_forums {dbqd.forums.www.admin.index.select_forums {
select forum_id, name, posting_policy, enabled_p
from forums_forums
where package_id= :package_id
order by enabled_p desc, name
} {} {} {} c:/web/openacs-4/packages/forums/www/admin/index.xql}
dbqd.forums.www.forum-view-oracle.messages_select {dbqd.forums.www.forum-view-oracle.messages_select {
            select fm.message_id,
                   fm.subject,
                   fm.user_id,
                   person.name(fm.user_id) as user_name,
                   to_char(fm.posting_date, 'YYYY-MM-DD HH24:MI:SS') as posting_date_ansi,
                   fm.state,
                   (select count(*)
                    from forums_messages_approved fm1
                    where fm1.forum_id = :forum_id
                    and fm1.tree_sortkey between tree.left(fm.tree_sortkey) and tree.right(fm.tree_sortkey)) as n_messages,
                   to_char(fm.last_child_post, 'YYYY-MM-DD HH24:MI:SS') as last_child_post_ansi,
                   case when fm.last_child_post > (sysdate - 1) then 't' else 'f' end as new_p                   
            from forums_messages_approved fm
            where fm.forum_id = :forum_id
            and fm.parent_id is null
            [template::list::orderby_clause -orderby -name "messages"]
        } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/forums/www/forum-view-oracle.xql}
dbqd.forums.www.forum-view-oracle.messages_select_moderator {dbqd.forums.www.forum-view-oracle.messages_select_moderator {
            select fm.message_id,
                   fm.subject,
                   fm.user_id,
                   person.name(fm.user_id) as user_name,
                   to_char(fm.posting_date, 'YYYY-MM-DD HH24:MI:SS') as posting_date_ansi,
                   fm.state,
                   (select count(*)
                    from forums_messages fm1
                    where fm1.forum_id = :forum_id
                    and fm1.tree_sortkey between tree.left(fm.tree_sortkey) and tree.right(fm.tree_sortkey)) as n_messages,
                   to_char(fm.last_child_post, 'YYYY-MM-DD HH24:MI:SS') as last_child_post_ansi,
                   case when fm.last_child_post > (sysdate - 1) then 't' else 'f' end as new_p                   
            from forums_messages fm
            where fm.forum_id = :forum_id
            and fm.parent_id is null
            [template::list::orderby_clause -orderby -name "messages"]
        } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/forums/www/forum-view-oracle.xql}
dbqd.forums.www.forum-view.messages_select {dbqd.forums.www.forum-view.messages_select {
            select fm.message_id,
                   fm.subject,
                   fm.user_id,
                   person__name(fm.user_id) as user_name,
                   to_char(fm.posting_date, 'YYYY-MM-DD HH24:MI:SS') as posting_date_ansi,
                   fm.state,
                   (select count(*)
                    from forums_messages_approved fm1
                    where fm1.forum_id = :forum_id
                    and fm1.tree_sortkey between tree_left(fm.tree_sortkey) and tree_right(fm.tree_sortkey)) as n_messages,
                   to_char(fm.last_child_post, 'YYYY-MM-DD HH24:MI:SS') as last_child_post_ansi,
                   case when fm.last_child_post > (now() - interval '1 day') then 't' else 'f' end as new_p                   
            from forums_messages_approved fm
            where fm.forum_id = :forum_id
            and fm.parent_id is null
            [template::list::orderby_clause -orderby -name "messages"]
        } {} {} {postgresql 7.1} c:/web/openacs-4/packages/forums/www/forum-view-postgresql.xql}
dbqd.forums.www.forum-view.messages_select_moderator {dbqd.forums.www.forum-view.messages_select_moderator {
            select fm.message_id,
                   fm.subject,
                   fm.user_id,
                   person__name(fm.user_id) as user_name,
                   to_char(fm.posting_date, 'YYYY-MM-DD HH24:MI:SS') as posting_date_ansi,
                   fm.state,
                   (select count(*)
                    from forums_messages fm1
                    where fm1.forum_id = :forum_id
                    and fm1.tree_sortkey between tree_left(fm.tree_sortkey) and tree_right(fm.tree_sortkey)) as n_messages,
                   to_char(fm.last_child_post, 'YYYY-MM-DD HH24:MI:SS') as last_child_post_ansi,
                   case when fm.last_child_post > (now() - interval '1 day') then 't' else 'f' end as new_p                   
            from forums_messages_approved fm
            where fm.forum_id = :forum_id
            and fm.parent_id is null
            [template::list::orderby_clause -orderby -name "messages"]
        } {} {} {postgresql 7.1} c:/web/openacs-4/packages/forums/www/forum-view-postgresql.xql}
dbqd.forums.www.index-oracle.select_forums {dbqd.forums.www.index-oracle.select_forums {
            select forums_forums_enabled.*,
                   (select count(*)
                    from forums_messages
                    where forums_messages.forum_id = forums_forums_enabled.forum_id
                    and parent_id is null) as n_threads,
                   to_char(last_post, 'YYYY-MM-DD HH24:MI:SS') as last_post_ansi,
                   case when last_post > (sysdate - 1) then 't' else 'f' end as new_p
            from forums_forums_enabled
            where forums_forums_enabled.package_id = :package_id
            and (
                    forums_forums_enabled.posting_policy = 'open'
                 or forums_forums_enabled.posting_policy = 'moderated'
                 or 't' = acs_permission.permission_p(forums_forums_enabled.forum_id, :user_id, 'forum_read')
                )
            order by forums_forums_enabled.name
        } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/forums/www/index-oracle.xql}
dbqd.forums.www.index.select_forums {dbqd.forums.www.index.select_forums {
            select forums_forums_enabled.*,
                   (select count(*)
                    from forums_messages
                    where forums_messages.forum_id = forums_forums_enabled.forum_id
                    and parent_id is null) as n_threads,
                   to_char(last_post, 'YYYY-MM-DD HH24:MI:SS') as last_post_ansi,
                   case when last_post > (now() - interval '1 day') then 't' else 'f' end as new_p
            from forums_forums_enabled
            where forums_forums_enabled.package_id = :package_id
            and (
                    forums_forums_enabled.posting_policy = 'open'
                 or forums_forums_enabled.posting_policy = 'moderated'
                 or 't' = acs_permission__permission_p(forums_forums_enabled.forum_id, :user_id,'forum_read')
                )
            order by forums_forums_enabled.name
        } {} {} {postgresql 7.1} c:/web/openacs-4/packages/forums/www/index-postgresql.xql}
dbqd.forums.www.message-post-oracle.select_date {dbqd.forums.www.message-post-oracle.select_date {
          select to_char(sysdate, 'YYYY-MM-DD HH24:MI:SS') 
          from dual
        } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/forums/www/message-post-oracle.xql}
dbqd.forums.www.message-post.select_date {dbqd.forums.www.message-post.select_date {
          select to_char(current_timestamp, 'YYYY-MM-DD HH24:MI:SS') 
        } {} {} {postgresql 7.1} c:/web/openacs-4/packages/forums/www/message-post-postgresql.xql}
dbqd.forums.www.message-post.select_name {dbqd.forums.www.message-post.select_name {
          select first_names || ' ' || last_name
          from persons
          where person_id = :user_id
        } {} {} {} c:/web/openacs-4/packages/forums/www/message-post.xql}
dbqd.forums.www.message-post.select_forum_id {dbqd.forums.www.message-post.select_forum_id {
            select forum_id
            from forums_messages
            where message_id = :parent_id
        } {} {} {} c:/web/openacs-4/packages/forums/www/message-post.xql}
dbqd.forums.www.message-view-oracle.select_message_responses {dbqd.forums.www.message-view-oracle.select_message_responses {
            select message_id,
                   0 as n_attachments,
                   subject,
                   content,
                   html_p,
                   person.name(user_id) as user_name,
                   to_char(posting_date, 'YYYY-MM-DD HH24:MI:SS') as posting_date_ansi,
                   tree.tree_level(tree_sortkey) as tree_level,
                   state,
                   user_id
            from $table_name
            where forum_id = :forum_id
            and tree_sortkey between tree.left(:tree_sortkey) and tree.right(:tree_sortkey)
            order by $order_by
        } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/forums/www/message-view-oracle.xql}
dbqd.forums.www.message-view-oracle.select_message_responses_attachments {dbqd.forums.www.message-view-oracle.select_message_responses_attachments {
            select message_id,
                   (select count(*) from attachments where object_id = message_id) as n_attachments,
                   subject,
                   content,
                   html_p,
                   person.name(user_id) as user_name,
                   to_char(posting_date, 'YYYY-MM-DD HH24:MI:SS') as posting_date_ansi,
                   tree.tree_level(tree_sortkey) as tree_level,
                   state,
                   user_id
            from $table_name
            where forum_id = :forum_id
            and tree_sortkey between tree.left(:tree_sortkey) and tree.right(:tree_sortkey)
            order by $order_by
        } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/forums/www/message-view-oracle.xql}
dbqd.forums.www.message-view.select_message_responses {dbqd.forums.www.message-view.select_message_responses {
            select message_id,
                   0 as n_attachments,
                   subject,
                   content,
                   html_p,
                   person__name(user_id) as user_name,
                   to_char(posting_date, 'YYYY-MM-DD HH24:MI:SS') as posting_date_ansi,
                   tree_level(tree_sortkey) as tree_level,
                   state,
                   user_id
            from $table_name
            where forum_id = :forum_id
            and tree_sortkey between tree_left(:tree_sortkey) and tree_right(:tree_sortkey)
            order by $order_by
        } {} {} {postgresql 7.1} c:/web/openacs-4/packages/forums/www/message-view-postgresql.xql}
dbqd.forums.www.message-view.select_message_responses_attachments {dbqd.forums.www.message-view.select_message_responses_attachments {
            select message_id,
                   (select count(*) from attachments where object_id = message_id) as n_attachments,
                   subject,
                   content,
                   html_p,
                   person__name(user_id) as user_name,
                   to_char(posting_date, 'YYYY-MM-DD HH24:MI:SS') as posting_date_ansi,
                   tree_level(tree_sortkey) as tree_level,
                   state,
                   user_id
            from $table_name
            where forum_id = :forum_id
            and tree_sortkey between tree_left(:tree_sortkey) and tree_right(:tree_sortkey)
            order by $order_by
        } {} {} {postgresql 7.1} c:/web/openacs-4/packages/forums/www/message-view-postgresql.xql}
dbqd.forums.www.moderate.forum-oracle.select_pending_threads {dbqd.forums.www.moderate.forum-oracle.select_pending_threads {
            select message_id,
                   subject,
                   user_id,
                   posting_date,
                   state,
                   tree.tree_level(tree_sortkey) as tree_level
            from forums_messages
            where message_id in (select message_id
                                 from forums_messages_pending
                                 where forum_id = :forum_id)
            or tree_sortkey in (select substr(tree_sortkey, 1, 6)
                                from forums_messages_pending
                                where forum_id = :forum_id)
            order by tree_sortkey
        } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/forums/www/moderate/forum-oracle.xql}
dbqd.forums.www.moderate.forum.select_pending_threads {dbqd.forums.www.moderate.forum.select_pending_threads {
            select message_id,
                   subject,
                   user_id,
                   posting_date,
                   state,
                   tree_level(tree_sortkey) as tree_level
            from forums_messages
            where message_id in (select message_id
                                 from forums_messages_pending
                                 where forum_id = :forum_id)
            or tree_sortkey in (select tree_ancestor_key(tree_sortkey, 1)
                                from forums_messages_pending
                                where forum_id = :forum_id)
            order by tree_sortkey
        } {} {} {postgresql 7.1} c:/web/openacs-4/packages/forums/www/moderate/forum-postgresql.xql}
dbqd.forums.www.search-oracle.search_all_forums {dbqd.forums.www.search-oracle.search_all_forums {
            select forums_messages.*,
                   person.name(forums_messages.user_id) as user_name,
                   to_char(forums_messages.posting_date, 'YYYY-MM-DD HH24:MI:SS') as posting_date_ansi,
                   100 as the_score
            from   forums_messages,
                   forums_forums
            where  forums_messages.forum_id = forums_forums.forum_id
            and    forums_forums.package_id = :package_id
            and    forums_messages.state = 'approved'
            and    upper(forums_messages.subject || ' ' || dbms_lob.substr(forums_messages.content) || ' ' || person.name(forums_messages.user_id))
                       like '%' || upper(:search_text) || '%'
            order  by forums_messages.posting_date desc
        } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/forums/www/search-oracle.xql}
dbqd.forums.www.search-oracle.search_one_forum {dbqd.forums.www.search-oracle.search_one_forum {
            select forums_messages.*,
                   person.name(forums_messages.user_id) as user_name,
                   to_char(forums_messages.posting_date, 'YYYY-MM-DD HH24:MI:SS') as posting_date_ansi,
                   100 as the_score
            from   forums_messages,
                   forums_forums
            where  forums_forums.forum_id = :forum_id
            and    forums_forums.package_id = :package_id
            and    forums_messages.forum_id = forums_forums.forum_id
            and    forums_messages.state = 'approved'
            and    upper(forums_messages.subject || ' ' || dbms_lob.substr(forums_messages.content) || ' ' || person.name(forums_messages.user_id))
                       like '%' || upper(:search_text) || '%'
            order  by forums_messages.posting_date desc
        } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/forums/www/search-oracle.xql}
dbqd.forums.www.search-oracle.search_all_forums_intermedia {dbqd.forums.www.search-oracle.search_all_forums_intermedia {
            select forums_messages.*,
                   person.name(forums_messages.user_id) as user_name,
                   to_char(forums_messages.posting_date, 'YYYY-MM-DD HH24:MI:SS') as posting_date_ansi,
                   score(1) as the_score
            from forums_messages,
                 forums_forums
            where forums_messages.forum_id = forums_forums.forum_id
            and forums_forums.package_id = :package_id
            and forums_messages.state = 'approved'
            and contains(forums_messages.content, '%' || :search_text || '%', 1) > 0
            order by the_score desc,
                     forums_messages.posting_date desc
        } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/forums/www/search-oracle.xql}
dbqd.forums.www.search-oracle.search_one_forum_intermedia {dbqd.forums.www.search-oracle.search_one_forum_intermedia {
            select forums_messages.*,
                   person.name(forums_messages.user_id) as user_name,
                   to_char(forums_messages.posting_date, 'YYYY-MM-DD HH24:MI:SS') as posting_date_ansi,
                   score(1) as the_score
            from forums_messages,
                 forums_forums
            where forums_forums.forum_id = :forum_id
            and forums_forums.package_id = :package_id
            and forums_messages.forum_id = forums_forums.forum_id
            and forums_messages.state = 'approved'
            and contains(forums_messages.content, '%' || :search_text || '%', 1) > 0
            order by the_score desc,
                     forums_messages.posting_date desc
        } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/forums/www/search-oracle.xql}
dbqd.forums.www.search.search_all_forums {dbqd.forums.www.search.search_all_forums {
            select forums_messages.*,
                   person__name(forums_messages.user_id) as user_name,
                   to_char(forums_messages.posting_date, 'YYYY-MM-DD HH24:MI:SS') as posting_date_ansi,
                   100 as the_score
            from   forums_messages,
                   forums_forums
            where  forums_messages.forum_id = forums_forums.forum_id
            and    forums_forums.package_id = :package_id
            and    forums_messages.state = 'approved'
            and    upper(forums_messages.subject || ' ' || forums_messages.content || ' ' || person__name(forums_messages.user_id))
                       like '%' || upper(:search_text) || '%'
            order  by forums_messages.posting_date desc
        } {} {} {postgresql 7.1} c:/web/openacs-4/packages/forums/www/search-postgresql.xql}
dbqd.forums.www.search.search_one_forum {dbqd.forums.www.search.search_one_forum {
            select forums_messages.*,
                   person__name(forums_messages.user_id) as user_name,
                   to_char(forums_messages.posting_date, 'YYYY-MM-DD HH24:MI:SS') as posting_date_ansi,
                   100 as the_score
            from   forums_messages,
                   forums_forums
            where  forums_forums.forum_id = :forum_id
            and    forums_forums.package_id = :package_id
            and    forums_messages.forum_id = forums_forums.forum_id
            and    forums_messages.state = 'approved'
            and    upper(forums_messages.subject || ' ' || forums_messages.content || ' ' || person__name(forums_messages.user_id))
                       like '%' || upper(:search_text) || '%'
            order  by forums_messages.posting_date desc
        } {} {} {postgresql 7.1} c:/web/openacs-4/packages/forums/www/search-postgresql.xql}
dbqd.forums.www.user-history.select_messages {dbqd.forums.www.user-history.select_messages {
            select forums_messages.message_id,
                   forums_messages.subject,
                   to_char(forums_messages.posting_date, 'YYYY-MM-DD HH24:MI:SS') as posting_date_ansi,
                   forums_forums.forum_id,
                   forums_forums.name as forum_name
            from forums_messages,
                 forums_forums
            where forums_messages.user_id = :user_id
            and forums_messages.forum_id = forums_forums.forum_id
            and forums_forums.package_id = :package_id
            order by forums_messages.posting_date desc
        } {} {} {} c:/web/openacs-4/packages/forums/www/user-history.xql}
dbqd.forums.www.user-history.select_messages_by_forum {dbqd.forums.www.user-history.select_messages_by_forum {
            select forums_messages.message_id,
                   forums_messages.subject,
                   to_char(forums_messages.posting_date, 'YYYY-MM-DD HH24:MI:SS') as posting_date_ansi,
                   forums_forums.forum_id,
                   forums_forums.name as forum_name
            from forums_messages,
                 forums_forums
            where forums_messages.user_id = :user_id
            and forums_messages.forum_id = forums_forums.forum_id
            and forums_forums.package_id = :package_id
            order by forum_name,
                     forums_messages.posting_date desc
        } {} {} {} c:/web/openacs-4/packages/forums/www/user-history.xql}
dbqd.general-comments.tcl.general-comments-procs-oracle.general_comments_get_comments.get_comments {dbqd.general-comments.tcl.general-comments-procs-oracle.general_comments_get_comments.get_comments {
      
             select g.comment_id,
                    r.title,
                    r.mime_type,
                    o.creation_user,
                    acs_object.name(o.creation_user) as author,
                    to_char(o.creation_date, 'MM-DD-YYYY') as pretty_date,
                    to_char(o.creation_date, 'Month DD, YYYY HH12:MI PM') as pretty_date2
                    $content_select
               from general_comments g,
                    cr_revisions r,
                    acs_objects o
              where g.object_id = :object_id and
                    r.revision_id = content_item.get_live_revision(g.comment_id) and
                    o.object_id = g.comment_id
                    $context_clause
              order by o.creation_date
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/general-comments/tcl/general-comments-procs-oracle.xql}
dbqd.general-comments.tcl.general-comments-procs-oracle.general_comments_package_url_not_cached.get_package_url {dbqd.general-comments.tcl.general-comments-procs-oracle.general_comments_package_url_not_cached.get_package_url {
      
             select site_node.url(s.node_id) as package_url
               from site_nodes s, apm_packages a
              where s.object_id = a.package_id and
                    lower(a.package_key) = 'general-comments' and
                    RowNum = 1
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/general-comments/tcl/general-comments-procs-oracle.xql}
dbqd.general-comments.tcl.general-comments-procs-oracle.get_comments.get_package_url_deprecated {dbqd.general-comments.tcl.general-comments-procs-oracle.get_comments.get_package_url_deprecated {
      
             select site_node.url(s.node_id)
               from site_nodes s, apm_packages a
              where s.object_id = a.package_id and
                    a.package_key = 'general-comments'
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/general-comments/tcl/general-comments-procs-oracle.xql}
dbqd.general-comments.tcl.general-comments-procs-oracle.get_comments.get_comments_deprecated {dbqd.general-comments.tcl.general-comments-procs-oracle.get_comments.get_comments_deprecated {
      
             select g.comment_id,
                    r.title,
                    r.content,
                    r.mime_type,
                    o.creation_user,
                    to_char(o.creation_date, 'MM-DD-YYYY') as creation_date,
                    p.first_names || ' ' || p.last_name as author
               from general_comments g,
                    cr_items i,
                    cr_revisions r,
                    acs_objects o,
                    persons p
              where g.object_id = :object_id and
                    i.item_id = g.comment_id and
                    r.revision_id = i.live_revision and
                    o.object_id = g.comment_id and
                    p.person_id = o.creation_user
              order by creation_date
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/general-comments/tcl/general-comments-procs-oracle.xql}
dbqd.general-comments.tcl.general-comments-procs-oracle.get_comments.get_package_url_deprecated {dbqd.general-comments.tcl.general-comments-procs-oracle.get_comments.get_package_url_deprecated {
      
             select site_node.url(s.node_id)
               from site_nodes s, apm_packages a
              where s.object_id = a.package_id and
                    a.package_key = 'general-comments'
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/general-comments/tcl/general-comments-procs-oracle.xql}
dbqd.general-comments.tcl.general-comments-procs-oracle.general_comment_new.insert_comment {dbqd.general-comments.tcl.general-comments-procs-oracle.general_comment_new.insert_comment {
      
        begin
            :1 := acs_message.new (
                message_id    => :comment_id,
                title         => :title,
                mime_type     => :comment_mime_type,
                data          => empty_blob(),
                context_id    => :context_id,
                creation_user => :user_id, 
                creation_ip   => :creation_ip,
                is_live       => :is_live
            );
        end;
    
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/general-comments/tcl/general-comments-procs-oracle.xql}
dbqd.general-comments.tcl.general-comments-procs-oracle.general_comment_new.get_revision {dbqd.general-comments.tcl.general-comments-procs-oracle.general_comment_new.get_revision {
      
        select content_item.get_latest_revision(:comment_id) as revision_id
        from dual
    
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/general-comments/tcl/general-comments-procs-oracle.xql}
dbqd.general-comments.tcl.general-comments-procs-oracle.general_comment_new.set_content {dbqd.general-comments.tcl.general-comments-procs-oracle.general_comment_new.set_content {
      
        update cr_revisions
           set content = empty_blob()
         where revision_id = :revision_id
     returning content into :1
    
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/general-comments/tcl/general-comments-procs-oracle.xql}
dbqd.general-comments.tcl.general-comments-procs.general_comments_get_comments.get_comments {dbqd.general-comments.tcl.general-comments-procs.general_comments_get_comments.get_comments {
      
             select g.comment_id,
                    r.title,
                    r.mime_type,
                    o.creation_user,
                    acs_object__name(o.creation_user) as author,
                    to_char(o.creation_date, 'MM-DD-YYYY') as pretty_date,
                    to_char(o.creation_date, 'Month DD, YYYY HH12:MI PM') as pretty_date2
                    $content_select
               from general_comments g,
                    cr_revisions r,
                    acs_objects o
              where g.object_id = :object_id and
                    r.revision_id = content_item__get_live_revision(g.comment_id) and
                    o.object_id = g.comment_id
                    $context_clause
              order by o.creation_date
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/general-comments/tcl/general-comments-procs-postgresql.xql}
dbqd.general-comments.tcl.general-comments-procs.general_comments_package_url_not_cached.get_package_url {dbqd.general-comments.tcl.general-comments-procs.general_comments_package_url_not_cached.get_package_url {
      
             select site_node__url(s.node_id) as package_url
               from site_nodes s, apm_packages a
              where s.object_id = a.package_id and
                    lower(a.package_key) = 'general-comments'
                    LIMIT 1
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/general-comments/tcl/general-comments-procs-postgresql.xql}
dbqd.general-comments.tcl.general-comments-procs.get_comments.get_package_url_deprecated {dbqd.general-comments.tcl.general-comments-procs.get_comments.get_package_url_deprecated {
      
             select site_node__url(s.node_id)
               from site_nodes s, apm_packages a
              where s.object_id = a.package_id and
                    a.package_key = 'general-comments'
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/general-comments/tcl/general-comments-procs-postgresql.xql}
dbqd.general-comments.tcl.general-comments-procs.get_comments.get_comments_deprecated {dbqd.general-comments.tcl.general-comments-procs.get_comments.get_comments_deprecated {
      
             select g.comment_id,
                    r.title,
                    r.content,
                    r.mime_type,
                    o.creation_user,
                    to_char(o.creation_date, 'MM-DD-YYYY') as creation_date,
                    p.first_names || ' ' || p.last_name as author
               from general_comments g,
                    cr_items i,
                    cr_revisions r,
                    acs_objects o,
                    persons p
              where g.object_id = :object_id and
                    i.item_id = g.comment_id and
                    r.revision_id = i.live_revision and
                    o.object_id = g.comment_id and
                    p.person_id = o.creation_user
              order by creation_date
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/general-comments/tcl/general-comments-procs-postgresql.xql}
dbqd.general-comments.tcl.general-comments-procs.get_comments.get_package_url_deprecated {dbqd.general-comments.tcl.general-comments-procs.get_comments.get_package_url_deprecated {
      
             select site_node__url(s.node_id)
               from site_nodes s, apm_packages a
              where s.object_id = a.package_id and
                    a.package_key = 'general-comments'
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/general-comments/tcl/general-comments-procs-postgresql.xql}
dbqd.general-comments.tcl.general-comments-procs.general_comment_new.insert_comment {dbqd.general-comments.tcl.general-comments-procs.general_comment_new.insert_comment {
	     select acs_message__new (
		:comment_id,		-- 1  p_message_id
		NULL, 			-- 2  p_reply_to
		current_timestamp,	-- 3  p_sent_date
		NULL, 			-- 4  p_sender
		NULL,			-- 5  p_rfc822_id
		:title,			-- 6  p_title
		NULL,			-- 7  p_description
		:comment_mime_type,	-- 8  p_mime_type
		NULL,			-- 9  p_text
		NULL, -- empty_blob(),		-- 10 p_data
		0,			-- 11 p_parent_id
		:context_id,		-- 12 p_context_id
		:user_id,		-- 13 p_creation_user
		:creation_ip,		-- 14 p_creation_ip
		'acs_message',		-- 15 p_object_type
		:is_live		-- 16 p_is_live
	    )
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/general-comments/tcl/general-comments-procs-postgresql.xql}
dbqd.general-comments.tcl.general-comments-procs.general_comment_new.get_revision {dbqd.general-comments.tcl.general-comments-procs.general_comment_new.get_revision {
      
        select content_item__get_latest_revision(:comment_id) as revision_id
        
    
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/general-comments/tcl/general-comments-procs-postgresql.xql}
dbqd.general-comments.tcl.general-comments-procs.general_comment_new.set_content {dbqd.general-comments.tcl.general-comments-procs.general_comment_new.set_content {
    
        update cr_revisions
           set content = :content
         where revision_id = :revision_id
       
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/general-comments/tcl/general-comments-procs-postgresql.xql}
dbqd.general-comments.tcl.general-comments-procs.general_comments_get_comments.content_select {dbqd.general-comments.tcl.general-comments-procs.general_comments_get_comments.content_select {

		, r.content

       } {} {} {} c:/web/openacs-4/packages/general-comments/tcl/general-comments-procs.xql}
dbqd.general-comments.tcl.general-comments-procs.general_comments_print_comment.get_attachments {dbqd.general-comments.tcl.general-comments-procs.general_comments_print_comment.get_attachments {
      
	                    select r.title, r.mime_type,  i.name, i.item_id
	                      from cr_items i, cr_revisions r
	                     where i.parent_id = :comment_id 
                               and r.revision_id = i.live_revision
      } {} {} {} c:/web/openacs-4/packages/general-comments/tcl/general-comments-procs.xql}
dbqd.general-comments.tcl.general-comments-procs.general_comments_print_comment.get_links {dbqd.general-comments.tcl.general-comments-procs.general_comments_print_comment.get_links {
      
	              select i.item_id, e.label, e.url
	                from cr_items i, cr_extlinks e
	               where i.parent_id = :comment_id and e.extlink_id = i.item_id
      } {} {} {} c:/web/openacs-4/packages/general-comments/tcl/general-comments-procs.xql}
dbqd.general-comments.tcl.general-comments-procs.general_comment_new.add_entry {dbqd.general-comments.tcl.general-comments-procs.general_comment_new.add_entry {
      
        insert into general_comments
            (comment_id,
             object_id,
             category)
        values
            (:comment_id,
             :object_id,
             :category)
    
      } {} {} {} c:/web/openacs-4/packages/general-comments/tcl/general-comments-procs.xql}
dbqd.general-comments.www.admin.delete-2-oracle.delete_comment {dbqd.general-comments.www.admin.delete-2-oracle.delete_comment {
      
    begin
        acs_message.del(:comment_id);
    end;

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/general-comments/www/admin/delete-2-oracle.xql}
dbqd.general-comments.www.admin.delete-2.delete_comment {dbqd.general-comments.www.admin.delete-2.delete_comment {

    begin
        PERFORM acs_message__delete(:comment_id);
	return 1;
    end;

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/general-comments/www/admin/delete-2-postgresql.xql}
dbqd.general-comments.www.admin.delete-2.delete_image_attachments {dbqd.general-comments.www.admin.delete-2.delete_image_attachments {
      
    delete from images
    where image_id in (select latest_revision
                         from cr_items
                        where parent_id = :comment_id)

      } {} {} {} c:/web/openacs-4/packages/general-comments/www/admin/delete-2.xql}
dbqd.general-comments.www.admin.delete-oracle.get_comment {dbqd.general-comments.www.admin.delete-oracle.get_comment {

    select r.title,
           r.content,
           r.mime_type,
           o.creation_user,
           to_char(o.creation_date, 'MM-DD-YYYY') as pretty_date,
           acs_object.name(o.creation_user) as author
      from acs_objects o, 
           cr_revisions r, 
	   general_comments g
     where g.comment_id = :comment_id and 	 
           g.comment_id = o.object_id and
	   r.revision_id = content_item.get_latest_revision(g.comment_id)

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/general-comments/www/admin/delete-oracle.xql}
dbqd.general-comments.www.admin.delete.get_comment {dbqd.general-comments.www.admin.delete.get_comment {
 
     
      select r.title,
           r.content,
           r.mime_type,
           o.creation_user,
           to_char(o.creation_date, 'MM-DD-YYYY') as pretty_date,
           acs_object__name(o.creation_user) as author
      from acs_objects o, 
           cr_revisions r, 
	   general_comments g
     where g.comment_id = :comment_id and 	 
           g.comment_id = o.object_id and
	   r.revision_id = content_item__get_latest_revision(g.comment_id) 
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/general-comments/www/admin/delete-postgresql.xql}
dbqd.general-comments.www.admin.index-oracle.comments_select {dbqd.general-comments.www.admin.index-oracle.comments_select {
      
    select g.comment_id,
           r.title, 
           acs_object.name(o.creation_user) as author,
           o.creation_user, 
           case when i.live_revision = null then 0 else 1 end as live_version_p,
           case when i.live_revision = r.revision_id then 1 else 0 end as approved_p, 
           to_char(o.creation_date, 'MM-DD-YYYY HH12:MI:AM') as pretty_date
      from general_comments g,
           cr_items i,
           cr_revisions r,
           acs_objects o
     where g.comment_id = i.item_id and
           r.revision_id = o.object_id and
           r.revision_id = content_item.get_latest_revision(g.comment_id)
          [ad_dimensional_sql $dimensional]
    [ad_order_by_from_sort_spec $orderby $table_def]

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/general-comments/www/admin/index-oracle.xql}
dbqd.general-comments.www.admin.index-oracle.modified_last_24hours {dbqd.general-comments.www.admin.index-oracle.modified_last_24hours {

		creation_date + 1 > sysdate

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/general-comments/www/admin/index-oracle.xql}
dbqd.general-comments.www.admin.index-oracle.modified_last_week {dbqd.general-comments.www.admin.index-oracle.modified_last_week {

		creation_date + 7 > sysdate

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/general-comments/www/admin/index-oracle.xql}
dbqd.general-comments.www.admin.index-oracle.modified_last_month {dbqd.general-comments.www.admin.index-oracle.modified_last_month {

		creation_date + 30 > sysdate

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/general-comments/www/admin/index-oracle.xql}
dbqd.general-comments.www.admin.index.comments_select {dbqd.general-comments.www.admin.index.comments_select {
    select * from (      
    select g.comment_id,
           r.title, 
           acs_object__name(o.creation_user) as author,
           o.creation_user, 
           case when i.live_revision = null then 0 else 1 end as live_version_p,
           case when i.live_revision = r.revision_id then 1 else 0 end as approved_p, 
           to_char(o.creation_date, 'MM-DD-YYYY HH12:MI:AM') as pretty_date,
           o.creation_date           
      from general_comments g,
           cr_items i,
           cr_revisions r,
           acs_objects o
     where g.comment_id = i.item_id and
           r.revision_id = o.object_id and
           r.revision_id = i.latest_revision
          [ad_dimensional_sql $dimensional]) as unordered
    [ad_order_by_from_sort_spec $orderby $table_def]

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/general-comments/www/admin/index-postgresql.xql}
dbqd.general-comments.www.admin.index.modified_last_24hours {dbqd.general-comments.www.admin.index.modified_last_24hours {

		creation_date > now() - '1 days'::interval

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/general-comments/www/admin/index-postgresql.xql}
dbqd.general-comments.www.admin.index.modified_last_week {dbqd.general-comments.www.admin.index.modified_last_week {

		creation_date > now() - '7 days'::interval 

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/general-comments/www/admin/index-postgresql.xql}
dbqd.general-comments.www.admin.index.modified_last_month {dbqd.general-comments.www.admin.index.modified_last_month {

		creation_date > now() - '30 days'::interval 
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/general-comments/www/admin/index-postgresql.xql}
dbqd.general-comments.www.admin.index.status_approved {dbqd.general-comments.www.admin.index.status_approved {

	      	i.live_revision is not null

      } {} {} {} c:/web/openacs-4/packages/general-comments/www/admin/index.xql}
dbqd.general-comments.www.admin.index.status_unapproved {dbqd.general-comments.www.admin.index.status_unapproved {

	      	i.live_revision is null

      } {} {} {} c:/web/openacs-4/packages/general-comments/www/admin/index.xql}
dbqd.general-comments.www.admin.index.modified_show_all {dbqd.general-comments.www.admin.index.modified_show_all {

		1 = 1

      } {} {} {} c:/web/openacs-4/packages/general-comments/www/admin/index.xql}
dbqd.general-comments.www.admin.toggle-approval-oracle.get_live_revision {dbqd.general-comments.www.admin.toggle-approval-oracle.get_live_revision {
      select content_item.get_live_revision(:comment_id) from dual
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/general-comments/www/admin/toggle-approval-oracle.xql}
dbqd.general-comments.www.admin.toggle-approval-oracle.get_latest_revision {dbqd.general-comments.www.admin.toggle-approval-oracle.get_latest_revision {
      select content_item.get_latest_revision(:comment_id) from dual
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/general-comments/www/admin/toggle-approval-oracle.xql}
dbqd.general-comments.www.admin.toggle-approval-oracle.set_live_revisions {dbqd.general-comments.www.admin.toggle-approval-oracle.set_live_revisions {
      
	begin
	  content_item.set_live_revision(:revision_id);
        end;
    
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/general-comments/www/admin/toggle-approval-oracle.xql}
dbqd.general-comments.www.admin.toggle-approval-oracle.unset_live_revisions {dbqd.general-comments.www.admin.toggle-approval-oracle.unset_live_revisions {
      
	begin
	  content_item.unset_live_revision(:comment_id);
        end;
    
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/general-comments/www/admin/toggle-approval-oracle.xql}
dbqd.general-comments.www.admin.toggle-approval.get_live_revision {dbqd.general-comments.www.admin.toggle-approval.get_live_revision {
      select content_item__get_live_revision(:comment_id) 
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/general-comments/www/admin/toggle-approval-postgresql.xql}
dbqd.general-comments.www.admin.toggle-approval.get_latest_revision {dbqd.general-comments.www.admin.toggle-approval.get_latest_revision {
      select content_item__get_latest_revision(:comment_id) 
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/general-comments/www/admin/toggle-approval-postgresql.xql}
dbqd.general-comments.www.admin.toggle-approval.set_live_revisions {dbqd.general-comments.www.admin.toggle-approval.set_live_revisions {

	begin
	  PERFORM content_item__set_live_revision(:revision_id);
	  return 0;
        end;
    
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/general-comments/www/admin/toggle-approval-postgresql.xql}
dbqd.general-comments.www.admin.toggle-approval.unset_live_revisions {dbqd.general-comments.www.admin.toggle-approval.unset_live_revisions {

	begin
	  PERFORM content_item__unset_live_revision(:comment_id);
	  return 0;
        end;
    
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/general-comments/www/admin/toggle-approval-postgresql.xql}
dbqd.general-comments.www.comment-add-3-oracle.insert_comment {dbqd.general-comments.www.comment-add-3-oracle.insert_comment {
      
        begin
            :1 := acs_message.new (
                message_id    => :comment_id,
                title         => :title,
                mime_type     => :comment_mime_type,
                data          => empty_blob(),
                context_id    => :context_id,
                creation_user => :user_id, 
                creation_ip   => :creation_ip,
                is_live       => :is_live
            );
        end;
    
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/general-comments/www/comment-add-3-oracle.xql}
dbqd.general-comments.www.comment-add-3-oracle.get_revision {dbqd.general-comments.www.comment-add-3-oracle.get_revision {
      
        select content_item.get_latest_revision(:comment_id) as revision_id
        from dual
    
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/general-comments/www/comment-add-3-oracle.xql}
dbqd.general-comments.www.comment-add-3-oracle.set_content {dbqd.general-comments.www.comment-add-3-oracle.set_content {
      
        update cr_revisions
           set content = empty_blob()
         where revision_id = :revision_id
     returning content into :1
    
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/general-comments/www/comment-add-3-oracle.xql}
dbqd.general-comments.www.comment-add-3-oracle.grant_permission {dbqd.general-comments.www.comment-add-3-oracle.grant_permission {
      
        begin
            acs_permission.grant_permission (
                object_id  => :comment_id,
                grantee_id => :user_id,
                privilege  => 'read'
            );
            acs_permission.grant_permission (
                object_id  => :comment_id,
                grantee_id => :user_id,
                privilege  => 'write'
            );
        end;
    
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/general-comments/www/comment-add-3-oracle.xql}
dbqd.general-comments.www.comment-add-3.insert_comment {dbqd.general-comments.www.comment-add-3.insert_comment {
	     select acs_message__new (
		:comment_id,		-- 1  p_message_id
		NULL, 			-- 2  p_reply_to
		current_timestamp,	-- 3  p_sent_date
		NULL, 			-- 4  p_sender
		NULL,			-- 5  p_rfc822_id
		:title,			-- 6  p_title
		NULL,			-- 7  p_description
		:comment_mime_type,	-- 8  p_mime_type
		NULL,			-- 9  p_text
		NULL, -- empty_blob(),		-- 10 p_data
		0,			-- 11 p_parent_id
		:context_id,		-- 12 p_context_id
		:user_id,		-- 13 p_creation_user
		:creation_ip,		-- 14 p_creation_ip
		'acs_message',		-- 15 p_object_type
		:is_live		-- 16 p_is_live
	    )
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/general-comments/www/comment-add-3-postgresql.xql}
dbqd.general-comments.www.comment-add-3.get_revision {dbqd.general-comments.www.comment-add-3.get_revision {
      
        select content_item__get_latest_revision(:comment_id) as revision_id
        
    
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/general-comments/www/comment-add-3-postgresql.xql}
dbqd.general-comments.www.comment-add-3.set_content {dbqd.general-comments.www.comment-add-3.set_content {
    
        update cr_revisions
           set content = :content
         where revision_id = :revision_id
       
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/general-comments/www/comment-add-3-postgresql.xql}
dbqd.general-comments.www.comment-add-3.grant_permission {dbqd.general-comments.www.comment-add-3.grant_permission {

        begin
            perform acs_permission__grant_permission (
                /* object_id  => */ :comment_id,
                /* grantee_id => */ :user_id,
                /* privilege  => */ 'read'
            );
            perform acs_permission__grant_permission (
                /* object_id  => */ :comment_id,
                /* grantee_id => */ :user_id,
                /* privilege  => */ 'write'
            );
	    return 0;
        end;
	
    
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/general-comments/www/comment-add-3-postgresql.xql}
dbqd.general-comments.www.comment-add-3.add_entry {dbqd.general-comments.www.comment-add-3.add_entry {
      
        insert into general_comments
            (comment_id,
             object_id,
             category)
        values
            (:comment_id,
             :object_id,
             :category)
    
      } {} {} {} c:/web/openacs-4/packages/general-comments/www/comment-add-3.xql}
dbqd.general-comments.www.comment-edit-3-oracle.insert_comment {dbqd.general-comments.www.comment-edit-3-oracle.insert_comment {
      
    begin
        :1 := acs_message.edit (
            message_id    => :comment_id,
            title         => :title,
            mime_type     => :comment_mime_type,
            data          => empty_blob(),
            creation_user => :user_id,
            creation_ip   => :creation_ip,
            is_live       => :is_live
        );
    end;
  
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/general-comments/www/comment-edit-3-oracle.xql}
dbqd.general-comments.www.comment-edit-3-oracle.get_revision {dbqd.general-comments.www.comment-edit-3-oracle.get_revision {
       
    select content_item.get_latest_revision(:comment_id) as revision_id
    from dual
  
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/general-comments/www/comment-edit-3-oracle.xql}
dbqd.general-comments.www.comment-edit-3-oracle.set_content {dbqd.general-comments.www.comment-edit-3-oracle.set_content {
      
    update cr_revisions
    set content = empty_blob()
    where revision_id = :revision_id
    returning content into :1
  
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/general-comments/www/comment-edit-3-oracle.xql}
dbqd.general-comments.www.comment-edit-3.insert_comment {dbqd.general-comments.www.comment-edit-3.insert_comment {
    declare 
		v_revision_id integer;
    begin
        select acs_message__edit (
            /* message_id    => */ :comment_id,
            /* title         => */ :title,
	    /* p_description    */ NULL, 
            /* mime_type     => */ :comment_mime_type,
	    /* text	        */ NULL,
            /* data          => */ NULL, 	-- was empty_blob(),
	    /* creation_date    */ now(),
            /* creation_user => */ :user_id,
            /* creation_ip   => */ :creation_ip,
            /* is_live       => */ :is_live
        ) into v_revision_id;

	return v_revision_id;
    end;
  
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/general-comments/www/comment-edit-3-postgresql.xql}
dbqd.general-comments.www.comment-edit-3.get_revision {dbqd.general-comments.www.comment-edit-3.get_revision {
       
    select content_item__get_latest_revision(:comment_id) as revision_id
    
  
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/general-comments/www/comment-edit-3-postgresql.xql}
dbqd.general-comments.www.comment-edit-3.set_content {dbqd.general-comments.www.comment-edit-3.set_content {

        update cr_revisions
           set content = :content
         where revision_id = :revision_id
  
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/general-comments/www/comment-edit-3-postgresql.xql}
dbqd.general-comments.www.comment-edit-oracle.get_latest_revision {dbqd.general-comments.www.comment-edit-oracle.get_latest_revision {
      select content_item.get_latest_revision(:comment_id) from dual
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/general-comments/www/comment-edit-oracle.xql}
dbqd.general-comments.www.comment-edit.get_latest_revision {dbqd.general-comments.www.comment-edit.get_latest_revision {
      select content_item__get_latest_revision(:comment_id) 
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/general-comments/www/comment-edit-postgresql.xql}
dbqd.general-comments.www.comment-edit.get_comment {dbqd.general-comments.www.comment-edit.get_comment {
      
    select g.object_id,
           r.title,
           r.content,
           r.mime_type as comment_mime_type
      from general_comments g,
           cr_revisions r
     where g.comment_id = :comment_id and
           r.revision_id = :revision_id

      } {} {} {} c:/web/openacs-4/packages/general-comments/www/comment-edit.xql}
dbqd.general-comments.www.delete-attachment-2-oracle.get_mime_type {dbqd.general-comments.www.delete-attachment-2-oracle.get_mime_type {
      
            select mime_type
              from cr_revisions
             where item_id = :attach_id
               and revision_id = content_item.get_latest_revision (:attach_id)
        
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/general-comments/www/delete-attachment-2-oracle.xql}
dbqd.general-comments.www.delete-attachment-2-oracle.delete_image_row {dbqd.general-comments.www.delete-attachment-2-oracle.delete_image_row {
      
                delete from images
                 where image_id = content_item.get_latest_revision(:attach_id)
            
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/general-comments/www/delete-attachment-2-oracle.xql}
dbqd.general-comments.www.delete-attachment-2-oracle.delete_image {dbqd.general-comments.www.delete-attachment-2-oracle.delete_image {
      
                begin
                    acs_message.delete_image(:attach_id);
                end;
            
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/general-comments/www/delete-attachment-2-oracle.xql}
dbqd.general-comments.www.delete-attachment-2-oracle.delete_attachment {dbqd.general-comments.www.delete-attachment-2-oracle.delete_attachment {
      
                begin
                   acs_message.delete_file(:attach_id);
                end;
            
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/general-comments/www/delete-attachment-2-oracle.xql}
dbqd.general-comments.www.delete-attachment-2-oracle.delete_extlink {dbqd.general-comments.www.delete-attachment-2-oracle.delete_extlink {
      
            begin
                content_extlink.del(:attach_id);
            end;
        
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/general-comments/www/delete-attachment-2-oracle.xql}
dbqd.general-comments.www.delete-attachment-2.get_mime_type {dbqd.general-comments.www.delete-attachment-2.get_mime_type {
      
            select mime_type
              from cr_revisions
             where item_id = :attach_id
               and revision_id = content_item__get_latest_revision (:attach_id)
        
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/general-comments/www/delete-attachment-2-postgresql.xql}
dbqd.general-comments.www.delete-attachment-2.delete_image_row {dbqd.general-comments.www.delete-attachment-2.delete_image_row {
      
                delete from images
                 where image_id = content_item__get_latest_revision(:attach_id)
            
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/general-comments/www/delete-attachment-2-postgresql.xql}
dbqd.general-comments.www.delete-attachment-2.delete_image {dbqd.general-comments.www.delete-attachment-2.delete_image {

         select acs_message__delete_image(:attach_id);
            
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/general-comments/www/delete-attachment-2-postgresql.xql}
dbqd.general-comments.www.delete-attachment-2.delete_attachment {dbqd.general-comments.www.delete-attachment-2.delete_attachment {

         select acs_message__delete_file(:attach_id);
            
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/general-comments/www/delete-attachment-2-postgresql.xql}
dbqd.general-comments.www.delete-attachment-2.delete_extlink {dbqd.general-comments.www.delete-attachment-2.delete_extlink {

            begin
                perform content_extlink__delete(:attach_id);
		return 0;
            end;
        
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/general-comments/www/delete-attachment-2-postgresql.xql}
dbqd.general-comments.www.delete-attachment-2.get_type {dbqd.general-comments.www.delete-attachment-2.get_type {
      
        select content_type
          from cr_items
         where item_id = :attach_id
    
      } {} {} {} c:/web/openacs-4/packages/general-comments/www/delete-attachment-2.xql}
dbqd.general-comments.www.file-add-2-oracle.insert_image {dbqd.general-comments.www.file-add-2-oracle.insert_image {
      
             begin
                :1 := acs_message.new_image (
                    message_id     => :parent_id,
                    image_id       => :attach_id,
                    file_name      => :client_filename,
                    title          => :title,
                    mime_type      => :guessed_file_type,
                    content        => empty_blob(),
                    width          => :original_width,
                    height         => :original_height,
                    creation_user  => :user_id,
                    creation_ip    => :creation_ip,
                    is_live        => :is_live
            );
            end;
        
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/general-comments/www/file-add-2-oracle.xql}
dbqd.general-comments.www.file-add-2-oracle.insert_file {dbqd.general-comments.www.file-add-2-oracle.insert_file {
      
            begin
                :1 := acs_message.new_file (
                    message_id     => :parent_id,
                    file_id        => :attach_id,
                    file_name      => :client_filename,
                    title          => :title,
                    mime_type      => :guessed_file_type,
                    content        => empty_blob(),
                    creation_user  => :user_id,
                    creation_ip    => :creation_ip,
                    is_live        => :is_live
            );
            end;
        
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/general-comments/www/file-add-2-oracle.xql}
dbqd.general-comments.www.file-add-2-oracle.get_revision {dbqd.general-comments.www.file-add-2-oracle.get_revision {
      
        select content_item.get_latest_revision(:attach_id) as revision_id
        from dual
    
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/general-comments/www/file-add-2-oracle.xql}
dbqd.general-comments.www.file-add-2-oracle.set_content_size {dbqd.general-comments.www.file-add-2-oracle.set_content_size {
      
	update cr_revisions
 	set filename = '$tmp_filename',
	    content_length = $tmp_size
	where revision_id = :revision_id

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/general-comments/www/file-add-2-oracle.xql}
dbqd.general-comments.www.file-add-2.insert_image {dbqd.general-comments.www.file-add-2.insert_image {

             select acs_message__new_image (
                    /* message_id     => */ :parent_id,
                    /* image_id       => */ :attach_id,
                    /* file_name      => */ :client_filename,
                    /* title          => */ :title,
                    /* description    => */ NULL,
                    /* mime_type      => */ :guessed_file_type,
                    /* data           => */ NULL,
                    /* width          => */ :original_width,
                    /* height         => */ :original_height,
                    /* create_date    => */ current_timestamp,
                    /* creation_user  => */ :user_id,
                    /* creation_ip    => */ :creation_ip,
                    /* is_live        => */ :is_live,
                    /* storage_type   => */ 'file'
            );
        
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/general-comments/www/file-add-2-postgresql.xql}
dbqd.general-comments.www.file-add-2.insert_file {dbqd.general-comments.www.file-add-2.insert_file {
            select acs_message__new_file (
                    /* message_id     => */ :parent_id,
                    /* file_id        => */ :attach_id,
                    /* file_name      => */ :client_filename,
                    /* title          => */ :title,
                    /* description    => */ NULL,
                    /* mime_type      => */ :guessed_file_type,
                    /* data           => */ NULL,
                    /* creation_date  => */ current_timestamp,
                    /* creation_user  => */ :user_id,
                    /* creation_ip    => */ :creation_ip,
                    /* is_live        => */ :is_live,
                    /* storage_type   => */ 'file'
            );
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/general-comments/www/file-add-2-postgresql.xql}
dbqd.general-comments.www.file-add-2.get_revision {dbqd.general-comments.www.file-add-2.get_revision {
        select content_item__get_latest_revision(:attach_id) as revision_id
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/general-comments/www/file-add-2-postgresql.xql}
dbqd.general-comments.www.file-add-2.set_content_size {dbqd.general-comments.www.file-add-2.set_content_size {
	update cr_revisions
 	set content = '$tmp_filename',
	    content_length = $tmp_size
        where revision_id = :revision_id
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/general-comments/www/file-add-2-postgresql.xql}
dbqd.general-comments.www.file-edit-2-oracle.get_revision_id {dbqd.general-comments.www.file-edit-2-oracle.get_revision_id {
      
    select content_item.get_latest_revision(:attach_id) as revision_id from dual

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/general-comments/www/file-edit-2-oracle.xql}
dbqd.general-comments.www.file-edit-2.get_revision_id {dbqd.general-comments.www.file-edit-2.get_revision_id {
      
    select content_item__get_latest_revision(:attach_id) as revision_id 

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/general-comments/www/file-edit-2-postgresql.xql}
dbqd.general-comments.www.file-edit-2.edit_title {dbqd.general-comments.www.file-edit-2.edit_title {
      
    update cr_revisions
       set title = :title
     where revision_id = :revision_id

      } {} {} {} c:/web/openacs-4/packages/general-comments/www/file-edit-2.xql}
dbqd.general-comments.www.file-edit-oracle.get_comment {dbqd.general-comments.www.file-edit-oracle.get_comment {
      
  select r.title,
         i.name as file_name
    from cr_items i, cr_revisions r
   where i.item_id = :attach_id and
         r.revision_id = content_item.get_latest_revision(i.item_id)

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/general-comments/www/file-edit-oracle.xql}
dbqd.general-comments.www.file-edit.get_comment {dbqd.general-comments.www.file-edit.get_comment {
      
  select r.title,
         i.name as file_name
    from cr_items i, cr_revisions r
   where i.item_id = :attach_id and
         r.revision_id = content_item__get_latest_revision(i.item_id)

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/general-comments/www/file-edit-postgresql.xql}
dbqd.general-comments.www.index-oracle.comments_select {dbqd.general-comments.www.index-oracle.comments_select {

    select g.comment_id,
           r.title, 
           acs_object.name(o.creation_user) as author,
           o.creation_user, 
           decode(i.live_revision,null,0,1) as live_version_p,
           decode(i.live_revision,r.revision_id,1,0) as approved_p, 
           to_char(o.creation_date, 'MM-DD-YYYY HH12:MI:AM') as pretty_date
      from general_comments g,
           cr_items i,
           cr_revisions r,
           acs_objects o
     where g.comment_id = i.item_id and
           r.revision_id = o.object_id and
           r.revision_id = content_item.get_latest_revision(g.comment_id) and
           o.creation_user = :user_id
          [ad_dimensional_sql $dimensional]
    [ad_order_by_from_sort_spec $orderby $table_def]
     
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/general-comments/www/index-oracle.xql}
dbqd.general-comments.www.index-oracle.modified_last_24hours {dbqd.general-comments.www.index-oracle.modified_last_24hours {

		creation_date + 1 > sysdate

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/general-comments/www/index-oracle.xql}
dbqd.general-comments.www.index-oracle.modified_last_week {dbqd.general-comments.www.index-oracle.modified_last_week {

		creation_date + 7 > sysdate

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/general-comments/www/index-oracle.xql}
dbqd.general-comments.www.index-oracle.modified_last_month {dbqd.general-comments.www.index-oracle.modified_last_month {

		creation_date + 30 > sysdate

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/general-comments/www/index-oracle.xql}
dbqd.general-comments.www.index.comments_select {dbqd.general-comments.www.index.comments_select {
     select * from (
     select g.comment_id,
           r.title, 
           acs_object__name(o.creation_user) as author,
           o.creation_user, 
	   case when i.live_revision=null then 0 else 1 end as live_version_p,
	   case when i.live_revision=r.revision_id then 0 else 1 end as approved_p,
           to_char(o.creation_date, 'MM-DD-YYYY HH12:MI:AM') as pretty_date,
           o.creation_date    
      from general_comments g,
           cr_items i,
           cr_revisions r,
           acs_objects o
     where g.comment_id = i.item_id and
           r.revision_id = o.object_id and
           r.revision_id = i.latest_revision and 
           o.creation_user = :user_id
          [ad_dimensional_sql $dimensional]) as unordered
    [ad_order_by_from_sort_spec $orderby $table_def]

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/general-comments/www/index-postgresql.xql}
dbqd.general-comments.www.index.modified_last_24hours {dbqd.general-comments.www.index.modified_last_24hours {

		creation_date > now() - '1 days'::interval 

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/general-comments/www/index-postgresql.xql}
dbqd.general-comments.www.index.modified_last_week {dbqd.general-comments.www.index.modified_last_week {

		creation_date > now() - '7 days'::interval 

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/general-comments/www/index-postgresql.xql}
dbqd.general-comments.www.index.modified_last_month {dbqd.general-comments.www.index.modified_last_month {

		creation_date > now() - '30 days'::interval

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/general-comments/www/index-postgresql.xql}
dbqd.general-comments.www.index.status_approved {dbqd.general-comments.www.index.status_approved {

	      	i.live_revision is not null

      } {} {} {} c:/web/openacs-4/packages/general-comments/www/index.xql}
dbqd.general-comments.www.index.status_unapproved {dbqd.general-comments.www.index.status_unapproved {

	      	i.live_revision is null

      } {} {} {} c:/web/openacs-4/packages/general-comments/www/index.xql}
dbqd.general-comments.www.url-add-2-oracle.insert_comment {dbqd.general-comments.www.url-add-2-oracle.insert_comment {
      
    begin
        :1 := content_extlink.new (
                name            => :name,
                url             => :url,
                label           => :label,
                parent_id       => :parent_id,
                extlink_id      => :attach_id,
                creation_user   => :user_id,
                creation_ip     => :creation_ip
         );
    end;

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/general-comments/www/url-add-2-oracle.xql}
dbqd.general-comments.www.url-add-2.insert_comment {dbqd.general-comments.www.url-add-2.insert_comment {
    declare 
	v_extlink_id cr_extlinks.extlink_id%TYPE;
	
    begin
	select content_extlink__new (
                /* name            => */ :name,
                /* url             => */ :url,
                /* label           => */ :label,
		/* description        */ NULL,
                /* parent_id       => */ :parent_id,
                /* extlink_id      => */ :attach_id,
		/* creation_date      */ now(),
                /* creation_user   => */ :user_id,
                /* creation_ip     => */ :creation_ip
         ) into v_extlink_id;

	return v_extlink_id;
    end;

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/general-comments/www/url-add-2-postgresql.xql}
dbqd.general-comments.www.url-edit-2.edit_url {dbqd.general-comments.www.url-edit-2.edit_url {
      
    update cr_extlinks
       set label = :label,
           url = :url
     where extlink_id = :attach_id

      } {} {} {} c:/web/openacs-4/packages/general-comments/www/url-edit-2.xql}
dbqd.general-comments.www.url-edit.get_comment {dbqd.general-comments.www.url-edit.get_comment {
      
          select label,
                 url
            from cr_extlinks
           where extlink_id = :attach_id

      } {} {} {} c:/web/openacs-4/packages/general-comments/www/url-edit.xql}
dbqd.general-comments.www.view-comment-oracle.get_latest_revision {dbqd.general-comments.www.view-comment-oracle.get_latest_revision {
      
            select content_item.get_latest_revision(:comment_id) from dual
	
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/general-comments/www/view-comment-oracle.xql}
dbqd.general-comments.www.view-comment-oracle.get_revision_comment {dbqd.general-comments.www.view-comment-oracle.get_revision_comment {
      
           select g.object_id,
	          g.comment_id,
	          content_item.get_live_revision(g.comment_id) as live_revision,
                  r.revision_id,
                  r.title,
	          r.content, 
	          r.mime_type, 
	          o.creation_user,
	          o.creation_date,
	          acs_object.name(o.creation_user) as author
             from general_comments g,
                  cr_revisions r,
                  acs_objects o
            where g.comment_id = o.object_id and
                  g.comment_id = r.item_id and
	          r.revision_id = :revision_id
    
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/general-comments/www/view-comment-oracle.xql}
dbqd.general-comments.www.view-comment-oracle.get_comment {dbqd.general-comments.www.view-comment-oracle.get_comment {
      
           select g.object_id,
	          g.comment_id,
	          r.revision_id as live_revision,
	          r.revision_id,
                  r.title,
	          r.content, 
	          r.mime_type, 
	          o.creation_user,
	          o.creation_date,
	          acs_object.name(o.creation_user) as author
             from general_comments g,
                  acs_objects o, 
	          cr_revisions r
            where g.comment_id = :comment_id and
                  g.comment_id = o.object_id and
                  g.comment_id = r.item_id and
	          r.revision_id = content_item.get_live_revision(:comment_id)
    
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/general-comments/www/view-comment-oracle.xql}
dbqd.general-comments.www.view-comment-oracle.get_revisions {dbqd.general-comments.www.view-comment-oracle.get_revisions {
      
    select r.revision_id,
           to_char(o.creation_date, 'MM-DD-YY HH24:MI:SS') as revision_date
      from cr_revisions r,
           acs_objects o
     where r.item_id = :comment_id and
           o.object_id = r.revision_id
     order by o.creation_date desc

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/general-comments/www/view-comment-oracle.xql}
dbqd.general-comments.www.view-comment.get_latest_revision {dbqd.general-comments.www.view-comment.get_latest_revision {
      
            select content_item__get_latest_revision(:comment_id) 
	
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/general-comments/www/view-comment-postgresql.xql}
dbqd.general-comments.www.view-comment.get_revision_comment {dbqd.general-comments.www.view-comment.get_revision_comment {
      
           select g.object_id,
	          g.comment_id,
	          content_item__get_live_revision(g.comment_id) as live_revision,
                  r.revision_id,
                  r.title,
	          r.content, 
	          r.mime_type, 
	          o.creation_user,
	          o.creation_date,
	          acs_object__name(o.creation_user) as author
             from general_comments g,
                  cr_revisions r,
                  acs_objects o
            where g.comment_id = o.object_id and
                  g.comment_id = r.item_id and
	          r.revision_id = :revision_id
    
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/general-comments/www/view-comment-postgresql.xql}
dbqd.general-comments.www.view-comment.get_comment {dbqd.general-comments.www.view-comment.get_comment {
      
           select g.object_id,
	          g.comment_id,
	          r.revision_id as live_revision,
	          r.revision_id,
                  r.title,
	          r.content, 
	          r.mime_type, 
	          o.creation_user,
	          o.creation_date,
	          acs_object__name(o.creation_user) as author
             from general_comments g,
                  acs_objects o, 
	          cr_revisions r
            where g.comment_id = :comment_id and
                  g.comment_id = o.object_id and
                  g.comment_id = r.item_id and
	          r.revision_id = content_item__get_live_revision(:comment_id)
    
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/general-comments/www/view-comment-postgresql.xql}
dbqd.general-comments.www.view-comment.get_revisions {dbqd.general-comments.www.view-comment.get_revisions {
      
    select r.revision_id,
           to_char(o.creation_date, 'MM-DD-YY HH24:MI:SS') as revision_date
      from cr_revisions r,
           acs_objects o
     where r.item_id = :comment_id and
           o.object_id = r.revision_id
     order by o.creation_date desc

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/general-comments/www/view-comment-postgresql.xql}
dbqd.general-comments.www.view-comment.get_attachments {dbqd.general-comments.www.view-comment.get_attachments {
      
   select r.title,
          r.mime_type,
          i.name,
          i.item_id
     from cr_items i,
          cr_revisions r
    where i.parent_id = :comment_id and
          r.revision_id = i.live_revision

      } {} {} {} c:/web/openacs-4/packages/general-comments/www/view-comment.xql}
dbqd.general-comments.www.view-comment.get_links {dbqd.general-comments.www.view-comment.get_links {
      
    select i.item_id,
           e.label,
           e.url
      from cr_items i, cr_extlinks e
     where i.parent_id = :comment_id and
           e.extlink_id = i.item_id

      } {} {} {} c:/web/openacs-4/packages/general-comments/www/view-comment.xql}
dbqd.general-comments.www.view-comment.get_object_id {dbqd.general-comments.www.view-comment.get_object_id {
      select object_id from general_comments where comment_id = :comment_id
      } {} {} {} c:/web/openacs-4/packages/general-comments/www/view-comment.xql}
dbqd.general-comments.www.view-image.get_image {dbqd.general-comments.www.view-image.get_image {
      
    select i.name,
           r.title,
           m.width,
           m.height
      from cr_items i, 
           cr_revisions r, 
           images m
     where i.item_id = :image_id and
           r.revision_id = i.live_revision and
           r.revision_id = m.image_id

      } {} {} {} c:/web/openacs-4/packages/general-comments/www/view-image.xql}
dbqd.glossary.tcl.glossary-init.glossary_direct_lookup.definition_display_1 {dbqd.glossary.tcl.glossary-init.glossary_direct_lookup.definition_display_1 {
      
	    select content 
              from cr_revisions cr, glossary_terms gt
             where cr.title = :term 
               and cr.revision_id = gt.term_id
	
      } {} {} {} c:/web/openacs-4/packages/glossary/tcl/glossary-init.xql}
dbqd.glossary.tcl.glossary-init.glossary_direct_lookup.definition_display_2 {dbqd.glossary.tcl.glossary-init.glossary_direct_lookup.definition_display_2 {
      
	    select content 
              from cr_revisions cr, glossary_terms gt
             where lower(cr.title) = :caseless_term 
               and cr.revision_id = gt.term_id
	
      } {} {} {} c:/web/openacs-4/packages/glossary/tcl/glossary-init.xql}
dbqd.glossary.tcl.glossary-sc-procs.glossary__datasource.datasource {dbqd.glossary.tcl.glossary-sc-procs.glossary__datasource.datasource {
       	select r.revision_id as object_id,
	       r.name as title,
	       r.content as content,
	       r.mime_type as mime,
	       r.name as keywords,
	       'text' as storage_type
	from cr_revisions r
	       where revision_id = :object_id
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/glossary/tcl/glossary-sc-procs-postgresql.xql}
dbqd.glossary.tcl.glossary-sc-procs.glossary__url.url_stub {dbqd.glossary.tcl.glossary-sc-procs.glossary__url.url_stub {
        select site_node__url(node_id) as url_stub
        from site_nodes
        where object_id=:package_id
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/glossary/tcl/glossary-sc-procs-postgresql.xql}
dbqd.glossary.www.disable-oracle.get_item_title {dbqd.glossary.www.disable-oracle.get_item_title {
      
    select title
    from cr_revisions
    where item_id = :item_id 
    and revision_id = content_item.get_live_revision(:item_id)
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/glossary/www/disable-oracle.xql}
dbqd.glossary.www.disable-oracle.unset_live_content_item {dbqd.glossary.www.disable-oracle.unset_live_content_item {
      
		begin
	            content_item.unset_live_revision(:item_id);
		end;
	
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/glossary/www/disable-oracle.xql}
dbqd.glossary.www.disable-oracle.audit_update_object {dbqd.glossary.www.disable-oracle.audit_update_object {
      
	    update acs_objects
	    set last_modified = sysdate,
	    modifying_user = :user_id,
	    modifying_ip = :peeraddr
	    where object_id = :item_id
	
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/glossary/www/disable-oracle.xql}
dbqd.glossary.www.disable.get_item_title {dbqd.glossary.www.disable.get_item_title {
      
    select title
    from cr_revisions
    where item_id = :item_id 
    and revision_id = content_item__get_live_revision(:item_id)

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/glossary/www/disable-postgresql.xql}
dbqd.glossary.www.disable.unset_live_content_item {dbqd.glossary.www.disable.unset_live_content_item {

	 select content_item__unset_live_revision(:item_id);
	
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/glossary/www/disable-postgresql.xql}
dbqd.glossary.www.disable.audit_update_object {dbqd.glossary.www.disable.audit_update_object {
      
	    update acs_objects
	    set last_modified = current_timestamp,
	    modifying_user = :user_id,
	    modifying_ip = :peeraddr
	    where object_id = :item_id
	
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/glossary/www/disable-postgresql.xql}
dbqd.glossary.www.glossary-add-edit-oracle.glossary_workflow_info {dbqd.glossary.www.glossary-add-edit-oracle.glossary_workflow_info {
      
	select g.workflow_key, wf.description as workflow_description, pretty_name as workflow_name
	from glossariesx g, wf_workflows wf, acs_object_types ot
	where g.workflow_key = wf.workflow_key
	and wf.workflow_key = ot.object_type
	and g.item_id = :item_id
        and g.revision_id = content_item.get_live_revision(:item_id)

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/glossary/www/glossary-add-edit-oracle.xql}
dbqd.glossary.www.glossary-add-edit-oracle.get_pending_terms_p {dbqd.glossary.www.glossary-add-edit-oracle.get_pending_terms_p {
      
	select case when count(*) = 0 then 0 else 1 end
	from glossary_termsx
	where ( acs_permission.permission_p(item_id, :user_id, 'glossary_term_modify') = 't' or acs_permission.permission_p(item_id, :user_id, 'glossary_term_illustration_add') = 't' or acs_permission.permission_p(item_id, :user_id, 'glossary_term_illustration_modify') = 't')
    
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/glossary/www/glossary-add-edit-oracle.xql}
dbqd.glossary.www.glossary-add-edit-oracle.glossary_select {dbqd.glossary.www.glossary-add-edit-oracle.glossary_select {
      
	select g.title, i.name, g.description, g.owner_id,  i.publish_status,
	decode(acs_permission.permission_p(i.item_id,
	:user_id,
	'glossary_admin'),
	't', 1,
	'f', 0) as glossary_admin_p
	from glossariesx g, cr_items i
	where i.item_id = :item_id
	and i.publish_status = 'live'
	and i.content_type = 'glossary'
	and i.live_revision = g.revision_id
    
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/glossary/www/glossary-add-edit-oracle.xql}
dbqd.glossary.www.glossary-add-edit-oracle.get_next_revision_id {dbqd.glossary.www.glossary-add-edit-oracle.get_next_revision_id {
      
	    select acs_object_id_seq.nextval from dual
	
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/glossary/www/glossary-add-edit-oracle.xql}
dbqd.glossary.www.glossary-add-edit-oracle.new_glossary {dbqd.glossary.www.glossary-add-edit-oracle.new_glossary {
      
	    begin
	    :1 := glossary.new (
	    owner_id => :owner_id,
	    title => :title,
            description => :description,
	    package_id => :package_id,
	    creation_user => :user_id,
	    creation_ip => :peeraddr,
	    context_id => :context_id,
	    is_live => :is_live
	    );
	    acs_permission.grant_permission(:1,:owner_id, 'glossary_admin');
	    end;
	
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/glossary/www/glossary-add-edit-oracle.xql}
dbqd.glossary.www.glossary-add-edit.glossary_workflow_info {dbqd.glossary.www.glossary-add-edit.glossary_workflow_info {

	select g.workflow_key, wf.description as workflow_description, pretty_name as workflow_name
	from glossariesx g, wf_workflows wf, acs_object_types ot
	where g.workflow_key = wf.workflow_key
	and wf.workflow_key = ot.object_type
	and g.item_id = :item_id
        and g.revision_id = content_item__get_live_revision(:item_id);
    
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/glossary/www/glossary-add-edit-postgresql.xql}
dbqd.glossary.www.glossary-add-edit.get_pending_terms_p {dbqd.glossary.www.glossary-add-edit.get_pending_terms_p {
      
	select case when count(*) = 0 then 0 else 1 end
	from glossary_termsx
	where ( acs_permission__permission_p(item_id, :user_id, 'glossary_term_modify') = 't' or acs_permission__permission_p(item_id, :user_id, 'glossary_term_illustration_add') = 't' or acs_permission__permission_p(item_id, :user_id, 'glossary_term_illustration_modify') = 't')
    
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/glossary/www/glossary-add-edit-postgresql.xql}
dbqd.glossary.www.glossary-add-edit.glossary_select {dbqd.glossary.www.glossary-add-edit.glossary_select {

	select g.title, i.name, g.description, g.owner_id,  i.publish_status,
	case acs_permission__permission_p(i.item_id, :user_id, 'glossary_admin')
	  when 't' then 1
	  when 'f' then 0
        end as glossary_admin_p
	from glossariesx g, cr_items i
	where i.item_id = :item_id
	and i.publish_status = 'live'
	and i.content_type = 'glossary'
	and i.live_revision = g.revision_id
    
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/glossary/www/glossary-add-edit-postgresql.xql}
dbqd.glossary.www.glossary-add-edit.get_next_revision_id {dbqd.glossary.www.glossary-add-edit.get_next_revision_id {
      
	    select acs_object_id_seq.nextval 
	
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/glossary/www/glossary-add-edit-postgresql.xql}
dbqd.glossary.www.glossary-add-edit.new_glossary {dbqd.glossary.www.glossary-add-edit.new_glossary {

	 select glossary__new (
           :owner_id,
           :title,
           :description,
           :package_id,
           :user_id,
           :peeraddr,
           :context_id,
           :is_live
	 );
	
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/glossary/www/glossary-add-edit-postgresql.xql}
dbqd.glossary.www.glossary-add-edit.glossary_update {dbqd.glossary.www.glossary-add-edit.glossary_update {
      
	    insert into glossariesi (
	    item_id, revision_id, title, description, context_id, creation_user, creation_ip, package_id, workflow_key
	    ) values (
	    :item_id, :revision_id, :title, :description, :context_id, :user_id, :peeraddr, :package_id, :workflow_key
	    )
	
      } {} {} {} c:/web/openacs-4/packages/glossary/www/glossary-add-edit.xql}
dbqd.glossary.www.glossary-add-edit.set_revision_live {dbqd.glossary.www.glossary-add-edit.set_revision_live {
      
	    update cr_items
	    set live_revision = :revision_id,
	    name = :package_id || '_' || :item_id,
	    publish_status = 'live'
	    where item_id = :item_id
	
      } {} {} {} c:/web/openacs-4/packages/glossary/www/glossary-add-edit.xql}
dbqd.glossary.www.glossary-oracle.glossary_item_select {dbqd.glossary.www.glossary-oracle.glossary_item_select {
      
    select i.item_id as glossary_item_id, title as glossary_title,
    description as glossary_description,
    decode(acs_permission.permission_p(i.item_id,
                                       :user_id,
                                       'glossary_modify'),
           't', 1,
           'f', 0) as glossary_edit_p
    from glossariesx g, cr_items i
    where g.item_id = :item_id 
    and g.item_id = i.item_id
    and i.publish_status = 'live'
    and i.content_type = 'glossary'
    and publish_date < sysdate
    and i.live_revision = g.revision_id

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/glossary/www/glossary-oracle.xql}
dbqd.glossary.www.glossary-oracle.glossary_term_items_select {dbqd.glossary.www.glossary-oracle.glossary_term_items_select {
      
    select i.item_id as glossary_term_item_id , title as term,
    decode(acs_permission.permission_p(i.item_id,
                                       :user_id,
                                       'glossary_term_modify'),
           't', 1,
           'f', 0) as term_edit_p
    from glossary_termsx gt, cr_items i, cr_child_rels ch
    where ch.parent_id = :item_id
    and ch.child_id = gt.item_id
    and i.publish_status = 'live'
    and i.content_type = 'glossary_term'
    and i.live_revision = gt.revision_id
    and publish_date > sysdate -1
    and acs_permission.permission_p(i.item_id, :user_id, 'read') = 't'
    order by term

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/glossary/www/glossary-oracle.xql}
dbqd.glossary.www.glossary.glossary_item_select {dbqd.glossary.www.glossary.glossary_item_select {

    select i.item_id as glossary_item_id, title as glossary_title,
    description as glossary_description,
    case acs_permission__permission_p(i.item_id, :user_id, 'glossary_modify')
      when 't' then 1
      when 'f' then 0
    end  as glossary_edit_p
    from glossariesx g, cr_items i
    where g.item_id = :item_id 
    and g.item_id = i.item_id
    and i.publish_status = 'live'
    and i.content_type = 'glossary'
    and publish_date < current_timestamp
    and i.live_revision = g.revision_id

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/glossary/www/glossary-postgresql.xql}
dbqd.glossary.www.glossary.glossary_term_items_select {dbqd.glossary.www.glossary.glossary_term_items_select {

    select i.item_id as glossary_term_item_id , title as term,
    case acs_permission__permission_p(i.item_id, :user_id, 'glossary_term_modify')
      when 't' then 1
      when 'f' then 0
    end as term_edit_p
    from glossary_termsx gt, cr_items i, cr_child_rels ch
    where ch.parent_id = :item_id
    and ch.child_id = gt.item_id
    and i.publish_status = 'live'
    and i.content_type = 'glossary_term'
    and i.live_revision = gt.revision_id
    and publish_date > current_timestamp - interval '1 day'
    and acs_permission__permission_p(i.item_id, :user_id, 'read') = 't'
    order by term

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/glossary/www/glossary-postgresql.xql}
dbqd.glossary.www.illustration-add-edit-2-oracle.get_next_revision_id {dbqd.glossary.www.illustration-add-edit-2-oracle.get_next_revision_id {
      
	select acs_object_id_seq.nextval from dual
    
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/glossary/www/illustration-add-edit-2-oracle.xql}
dbqd.glossary.www.illustration-add-edit-2-oracle.image_blob_update_1 {dbqd.glossary.www.illustration-add-edit-2-oracle.image_blob_update_1 {
      
	       update cr_revisions
	       set mime_type = :mime_type,
	       content = empty_blob()
	       where revision_id = :revision_id
	       returning content into :1
	   
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/glossary/www/illustration-add-edit-2-oracle.xql}
dbqd.glossary.www.illustration-add-edit-2-oracle.image_blob_size_1 {dbqd.glossary.www.illustration-add-edit-2-oracle.image_blob_size_1 {

         update cr_revisions
         set content_length = dbms_lob.getlength(content)
         where revision_id = :revision_id

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/glossary/www/illustration-add-edit-2-oracle.xql}
dbqd.glossary.www.illustration-add-edit-2-oracle.new_term_illustration_item {dbqd.glossary.www.illustration-add-edit-2-oracle.new_term_illustration_item {
      
	    begin
	    :1 := content_item.new (
	    name => :name,
	    content_type => 'image',
	    context_id => :term_item_id,
	    creation_user => :user_id,
	    creation_ip => :peeraddr
	    );
	    end;
	
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/glossary/www/illustration-add-edit-2-oracle.xql}
dbqd.glossary.www.illustration-add-edit-2-oracle.term_new_content_revision_1 {dbqd.glossary.www.illustration-add-edit-2-oracle.term_new_content_revision_1 {
      
	    begin
	    :1 := content_revision.new(
	    item_id => :new_item_id,
	    title => :title,
	    description => :description,
	    creation_user => :user_id,
	    creation_ip => :peeraddr
	    );
	    end;
	
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/glossary/www/illustration-add-edit-2-oracle.xql}
dbqd.glossary.www.illustration-add-edit-2-oracle.image_blob_update_2 {dbqd.glossary.www.illustration-add-edit-2-oracle.image_blob_update_2 {
      
        update cr_revisions
        set mime_type = :mime_type,
        content = empty_blob()
        where revision_id = :new_revision_id
        returning content into :1
	   
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/glossary/www/illustration-add-edit-2-oracle.xql}
dbqd.glossary.www.illustration-add-edit-2-oracle.image_blob_size_2 {dbqd.glossary.www.illustration-add-edit-2-oracle.image_blob_size_2 {

         update cr_revisions
         set content_length = dbms_lob.getlength(content)
         where revision_id = :new_revision_id

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/glossary/www/illustration-add-edit-2-oracle.xql}
dbqd.glossary.www.illustration-add-edit-2-oracle.term_new_content_revision_2 {dbqd.glossary.www.illustration-add-edit-2-oracle.term_new_content_revision_2 {
      
         begin
           :1 := acs_object.new(
                   object_type => 'cr_item_child_rel',
                   context_id  => :term_item_id
                 );
         end;
	
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/glossary/www/illustration-add-edit-2-oracle.xql}
dbqd.glossary.www.illustration-add-edit-2.get_next_revision_id {dbqd.glossary.www.illustration-add-edit-2.get_next_revision_id {
      
	select acs_object_id_seq.nextval 
    
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/glossary/www/illustration-add-edit-2-postgresql.xql}
dbqd.glossary.www.illustration-add-edit-2.image_blob_update_1 {dbqd.glossary.www.illustration-add-edit-2.image_blob_update_1 {

	       update cr_revisions
	       set mime_type = :mime_type,
 	       lob = [set __lob_id [db_string get_lob_id "select empty_lob()"]]
	       where revision_id = :revision_id
	   
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/glossary/www/illustration-add-edit-2-postgresql.xql}
dbqd.glossary.www.illustration-add-edit-2.image_blob_size_1 {dbqd.glossary.www.illustration-add-edit-2.image_blob_size_1 {

         update cr_revisions
         set content_length = lob_length(lob)
         where revision_id = :revision_id

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/glossary/www/illustration-add-edit-2-postgresql.xql}
dbqd.glossary.www.illustration-add-edit-2.new_term_illustration_item {dbqd.glossary.www.illustration-add-edit-2.new_term_illustration_item {

        select content_item__new (
		varchar :name,
                NULL,
                NULL,
                NULL,
                current_timestamp,
                :user_id,
                :term_item_id,
                :peeraddr,
                'content_item',
                'image',
                NULL,
                NULL,
                NULL,
                NULL,
                NULL
        );
	
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/glossary/www/illustration-add-edit-2-postgresql.xql}
dbqd.glossary.www.illustration-add-edit-2.term_new_content_revision_1 {dbqd.glossary.www.illustration-add-edit-2.term_new_content_revision_1 {

           select content_revision__new(
               :title,
               :description,
               current_timestamp,
               NULL,
               NULL,
               NULL,
               :new_item_id,
               NULL,
               current_timestamp,
               :user_id,
               :peeraddr
           );

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/glossary/www/illustration-add-edit-2-postgresql.xql}
dbqd.glossary.www.illustration-add-edit-2.image_blob_update_2 {dbqd.glossary.www.illustration-add-edit-2.image_blob_update_2 {

		 update cr_revisions
		 set mime_type = :mime_type,
 	         lob = [set __lob_id [db_string get_lob_id "select empty_lob()"]]
		 where revision_id = :new_revision_id
	   
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/glossary/www/illustration-add-edit-2-postgresql.xql}
dbqd.glossary.www.illustration-add-edit-2.image_blob_size_2 {dbqd.glossary.www.illustration-add-edit-2.image_blob_size_2 {

         update cr_revisions
         set content_length = lob_length(lob)
         where revision_id = :new_revision_id

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/glossary/www/illustration-add-edit-2-postgresql.xql}
dbqd.glossary.www.illustration-add-edit-2.term_new_content_revision_2 {dbqd.glossary.www.illustration-add-edit-2.term_new_content_revision_2 {

         select acs_object__new(
            NULL,
            'cr_item_child_rel',
            current_timestamp,
            NULL,
            NULL,
            :term_item_id
	 );
	
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/glossary/www/illustration-add-edit-2-postgresql.xql}
dbqd.glossary.www.illustration-add-edit-2.illustration_update {dbqd.glossary.www.illustration-add-edit-2.illustration_update {
      
	   insert into imagesi (
	   item_id, revision_id, title, description, context_id, 
	   creation_user, creation_ip
	   ) values (
	   :item_id, :revision_id,:title, :description,
	   :term_item_id, :user_id, :peeraddr
	   )
       
      } {} {} {} c:/web/openacs-4/packages/glossary/www/illustration-add-edit-2.xql}
dbqd.glossary.www.illustration-add-edit-2.set_revision_live_1 {dbqd.glossary.www.illustration-add-edit-2.set_revision_live_1 {
      
	       update images
	       set width =:original_width,
	       height = :original_height
	       where image_id = :revision_id
	   
      } {} {} {} c:/web/openacs-4/packages/glossary/www/illustration-add-edit-2.xql}
dbqd.glossary.www.illustration-add-edit-2.set_revision_live_2 {dbqd.glossary.www.illustration-add-edit-2.set_revision_live_2 {
      
	   update cr_items
	   set live_revision = :revision_id,
	   name = :name,
	   publish_status = 'live'
	   where item_id = :item_id
	   
      } {} {} {} c:/web/openacs-4/packages/glossary/www/illustration-add-edit-2.xql}
dbqd.glossary.www.illustration-add-edit-2.term_insert {dbqd.glossary.www.illustration-add-edit-2.term_insert {
      
	     insert into images(
	     image_id
	     ) values (
	     :new_revision_id
	     )
	 
      } {} {} {} c:/web/openacs-4/packages/glossary/www/illustration-add-edit-2.xql}
dbqd.glossary.www.illustration-add-edit-2.set_revision_live_3 {dbqd.glossary.www.illustration-add-edit-2.set_revision_live_3 {
      
        update images
        set width =:original_width,
        height = :original_height
        where image_id = :new_revision_id
	   
      } {} {} {} c:/web/openacs-4/packages/glossary/www/illustration-add-edit-2.xql}
dbqd.glossary.www.illustration-add-edit-2.set_revision_live_4 {dbqd.glossary.www.illustration-add-edit-2.set_revision_live_4 {
      
	update cr_items
	set live_revision = :new_revision_id,
	name = :name, 
	publish_status = 'live'
	where item_id = :new_item_id
	   
      } {} {} {} c:/web/openacs-4/packages/glossary/www/illustration-add-edit-2.xql}
dbqd.glossary.www.illustration-add-edit-2.set_parent_glossary {dbqd.glossary.www.illustration-add-edit-2.set_parent_glossary {
      
	     insert into cr_child_rels (
	     rel_id, parent_id, child_id, relation_tag
	     ) values (
	     :rel_id, :term_item_id, :new_item_id, 'illustration'
	     )
	 
      } {} {} {} c:/web/openacs-4/packages/glossary/www/illustration-add-edit-2.xql}
dbqd.glossary.www.illustration-add-edit-oracle.illustration_select {dbqd.glossary.www.illustration-add-edit-oracle.illustration_select {
      
	select title, description, name
	from imagesx
	where item_id = :item_id
	and revision_id = content_item.get_latest_revision(:item_id)
    
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/glossary/www/illustration-add-edit-oracle.xql}
dbqd.glossary.www.illustration-add-edit.illustration_select {dbqd.glossary.www.illustration-add-edit.illustration_select {
      
	select title, description, name
	from imagesx
	where item_id = :item_id
	and revision_id = content_item__get_latest_revision(:item_id)
    
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/glossary/www/illustration-add-edit-postgresql.xql}
dbqd.glossary.www.index-oracle.get_workflow_p_2 {dbqd.glossary.www.index-oracle.get_workflow_p_2 {
      
	select decode(count(*), 0, 0, 1)
	from wf_user_tasks t, wf_cases c, cr_items i
	where t.user_id = :user_id
	and t.state in ('enabled','started')
	and i.content_type = 'glossary_term'
	and i.item_id = c.object_id
	and t.case_id = c.case_id

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/glossary/www/index-oracle.xql}
dbqd.glossary.www.index-oracle.package_info {dbqd.glossary.www.index-oracle.package_info {
      
    select package_key, acs_object.name(package_id) package_title
    from apm_packages
    where package_id = :package_id

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/glossary/www/index-oracle.xql}
dbqd.glossary.www.index-oracle.glossary_items_select {dbqd.glossary.www.index-oracle.glossary_items_select {
      
    select i.item_id, title, party.name(owner_id) as owner_name, 
    decode(acs_permission.permission_p(i.item_id,
                                       :user_id,
                                       'glossary_admin'),
           't', 1,
           'f', 0) as admin_p
    from glossariesx g, cr_items i
    where i.publish_status = 'live'
    and i.content_type = 'glossary'
    and i.live_revision = g.revision_id
    and publish_date < sysdate
    and acs_permission.permission_p(i.item_id, :user_id, 'read') = 't'
    and g.package_id = :package_id
    order by title

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/glossary/www/index-oracle.xql}
dbqd.glossary.www.index.get_workflow_p_2 {dbqd.glossary.www.index.get_workflow_p_2 {
      
	select case when count(*) = 0 then 0 else 1 end
	from wf_user_tasks t, wf_cases c, cr_items i
	where t.user_id = :user_id
	and t.state in ('enabled','started')
	and i.content_type = 'glossary_term'
	and i.item_id = c.object_id
	and t.case_id = c.case_id

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/glossary/www/index-postgresql.xql}
dbqd.glossary.www.index.package_info {dbqd.glossary.www.index.package_info {
      
    select package_key, acs_object__name(package_id) as package_title
    from apm_packages
    where package_id = :package_id

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/glossary/www/index-postgresql.xql}
dbqd.glossary.www.index.glossary_items_select {dbqd.glossary.www.index.glossary_items_select {

    select i.item_id, title, party__name(owner_id) as owner_name, 
    case acs_permission__permission_p(i.item_id, :user_id, 'glossary_admin')
      when 't' then 1
      when 'f' then 0
    end as admin_p
    from glossariesx g, cr_items i
    where i.publish_status = 'live'
    and i.content_type = 'glossary'
    and i.live_revision = g.revision_id
    and publish_date < current_timestamp
    and acs_permission__permission_p(i.item_id, :user_id, 'read') = 't'
    and g.package_id = :package_id
    order by title

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/glossary/www/index-postgresql.xql}
dbqd.glossary.www.index.get_admin_p {dbqd.glossary.www.index.get_admin_p {
      
    select case when count(*) = 0 then 0 else 1 end
    from acs_permissions p, cr_items i
    where grantee_id = :user_id
    and i.content_type = 'glossary'
    and item_id = object_id

      } {} {} {} c:/web/openacs-4/packages/glossary/www/index.xql}
dbqd.glossary.www.index.get_workflow_p_1 {dbqd.glossary.www.index.get_workflow_p_1 {
      
	select case when count(*) = 0 then 0 else 1 end
	from wf_user_tasks t, wf_cases c, cr_items i
	where t.state in ('enabled','started')
	and i.content_type = 'glossary_term'
	and i.item_id = c.object_id
	and t.case_id = c.case_id
    
      } {} {} {} c:/web/openacs-4/packages/glossary/www/index.xql}
dbqd.glossary.www.index.get_workflow_link {dbqd.glossary.www.index.get_workflow_link {
      
    select s1.name
    from site_nodes s1, site_nodes s2, apm_packages p
    where package_key = 'acs-workflow'
    and s1.object_id = :package_id
    and s1.parent_id = s2.parent_id
    and s2.node_id = :node_id

      } {} {} {} c:/web/openacs-4/packages/glossary/www/index.xql}
dbqd.glossary.www.package-administer-oracle.glossary_items_select {dbqd.glossary.www.package-administer-oracle.glossary_items_select {
      
    select i.item_id, title, party.name(owner_id) as owner_name, publish_date, publish_status, live_revision
    from glossariesx g, cr_items i
    where i.content_type = 'glossary'
    and i.item_id = g.item_id
    and acs_permission.permission_p(i.item_id, :user_id, 'glossary_admin') = 't'
    and g.package_id = :package_id
    and g.revision_id = content_item.get_latest_revision(i.item_id)
    order by title

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/glossary/www/package-administer-oracle.xql}
dbqd.glossary.www.package-administer.glossary_items_select {dbqd.glossary.www.package-administer.glossary_items_select {
      
    select i.item_id, title, party__name(owner_id) as owner_name, publish_date, publish_status, live_revision
    from glossariesx g, cr_items i
    where i.content_type = 'glossary'
    and i.item_id = g.item_id
    and acs_permission__permission_p(i.item_id, :user_id, 'glossary_admin') = 't'
    and g.package_id = :package_id
    and g.revision_id = content_item__get_latest_revision(i.item_id)
    order by title

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/glossary/www/package-administer-postgresql.xql}
dbqd.glossary.www.publish-oracle.get_item_title_and_revision_id {dbqd.glossary.www.publish-oracle.get_item_title_and_revision_id {
      
    select title, revision_id
    from cr_revisions
    where item_id = :item_id 
    and revision_id = content_item.get_latest_revision(:item_id)

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/glossary/www/publish-oracle.xql}
dbqd.glossary.www.publish-oracle.set_live_content_item {dbqd.glossary.www.publish-oracle.set_live_content_item {
      
		begin
	            content_item.set_live_revision(:revision_id, 'live');
		end;
	
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/glossary/www/publish-oracle.xql}
dbqd.glossary.www.publish-oracle.audit_update_object {dbqd.glossary.www.publish-oracle.audit_update_object {
      
	    update acs_objects
	    set last_modified = sysdate,
	    modifying_user = :user_id,
	    modifying_ip = :peeraddr
	    where object_id = :item_id
	
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/glossary/www/publish-oracle.xql}
dbqd.glossary.www.publish.get_item_title_and_revision_id {dbqd.glossary.www.publish.get_item_title_and_revision_id {
      
    select title, revision_id
    from cr_revisions
    where item_id = :item_id 
    and revision_id = content_item__get_latest_revision(:item_id)

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/glossary/www/publish-postgresql.xql}
dbqd.glossary.www.publish.set_live_content_item {dbqd.glossary.www.publish.set_live_content_item {
	 select content_item__set_live_revision(:revision_id, 'live');
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/glossary/www/publish-postgresql.xql}
dbqd.glossary.www.publish.audit_update_object {dbqd.glossary.www.publish.audit_update_object {
      
	    update acs_objects
	    set last_modified = current_timestamp,
	    modifying_user = :user_id,
	    modifying_ip = :peeraddr
	    where object_id = :item_id
	
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/glossary/www/publish-postgresql.xql}
dbqd.glossary.www.term-add-edit-oracle.get_glossary_workflow_1 {dbqd.glossary.www.term-add-edit-oracle.get_glossary_workflow_1 {
      
	select workflow_key 
	from glossariesx 
	where item_id = :glossary_item_id and
          revision_id = content_item.get_live_revision(:glossary_item_id)

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/glossary/www/term-add-edit-oracle.xql}
dbqd.glossary.www.term-add-edit-oracle.get_glossary_workflow_2 {dbqd.glossary.www.term-add-edit-oracle.get_glossary_workflow_2 {

	select workflow_key 
	from glossariesx g, cr_child_rels ch
	where g.item_id = ch.parent_id
	and ch.child_id = :item_id
	and revision_id = content_item.get_live_revision(g.item_id)
    
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/glossary/www/term-add-edit-oracle.xql}
dbqd.glossary.www.term-add-edit-oracle.term_select {dbqd.glossary.www.term-add-edit-oracle.term_select {
      
	select term, definition, publish_status,
	live_revision, latest_revision, name, mime_type,
	decode(acs_permission.permission_p(item_id,
	:user_id,
	'glossary_term_add_illustration'),
	't', 1,
	'f', 0) as illustration_add_p
	from glossary_terms_latest
	where item_id = :item_id
    
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/glossary/www/term-add-edit-oracle.xql}
dbqd.glossary.www.term-add-edit-oracle.get_next_revision_id {dbqd.glossary.www.term-add-edit-oracle.get_next_revision_id {
      
	    select acs_object_id_seq.nextval from dual
	
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/glossary/www/term-add-edit-oracle.xql}
dbqd.glossary.www.term-add-edit-oracle.term_definition_update_1 {dbqd.glossary.www.term-add-edit-oracle.term_definition_update_1 {
      
		    update cr_revisions
		    set content = empty_blob()
		    where revision_id = :revision_id
		    returning content into :1
		
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/glossary/www/term-add-edit-oracle.xql}
dbqd.glossary.www.term-add-edit-oracle.new_glossary_term {dbqd.glossary.www.term-add-edit-oracle.new_glossary_term {
         begin
	  :1 := glossary_term.new (
           term => :term,
           definition => :definition,
           mime_type => :mime_type,
           package_id => :package_id,
           creation_user => :user_id,
           creation_ip => :peeraddr,
           context_id => :glossary_item_id,
           publish_status => :publish_status
	  );
         end;
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/glossary/www/term-add-edit-oracle.xql}
dbqd.glossary.www.term-add-edit.get_glossary_workflow_1 {dbqd.glossary.www.term-add-edit.get_glossary_workflow_1 {
      
	select workflow_key from glossariesx
	where item_id = :glossary_item_id
	and revision_id = content_item__get_live_revision(:glossary_item_id)
    
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/glossary/www/term-add-edit-postgresql.xql}
dbqd.glossary.www.term-add-edit.get_glossary_workflow_2 {dbqd.glossary.www.term-add-edit.get_glossary_workflow_2 {

	select workflow_key 
	from glossariesx g, cr_child_rels ch
	where g.item_id = ch.parent_id
	and ch.child_id = :item_id
	and revision_id = content_item__get_live_revision(g.item_id)
    
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/glossary/www/term-add-edit-postgresql.xql}
dbqd.glossary.www.term-add-edit.term_select {dbqd.glossary.www.term-add-edit.term_select {

	select term, definition, publish_status,
	live_revision, latest_revision, name, mime_type,
	case acs_permission__permission_p(item_id, :user_id, 'glossary_term_add_illustration')
	  when 't' then 1
	  when 'f' then 0
        end as illustration_add_p
	from glossary_terms_latest
	where item_id = :item_id
    
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/glossary/www/term-add-edit-postgresql.xql}
dbqd.glossary.www.term-add-edit.get_next_revision_id {dbqd.glossary.www.term-add-edit.get_next_revision_id {
      
	    select acs_object_id_seq.nextval 
	
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/glossary/www/term-add-edit-postgresql.xql}
dbqd.glossary.www.term-add-edit.term_definition_update_1 {dbqd.glossary.www.term-add-edit.term_definition_update_1 {

         update cr_revisions
         set content = :definition
         where revision_id = :revision_id
		
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/glossary/www/term-add-edit-postgresql.xql}
dbqd.glossary.www.term-add-edit.new_glossary_term {dbqd.glossary.www.term-add-edit.new_glossary_term {

	 select glossary_term__new (
           :term,
           :definition,
           :mime_type,
           :package_id,
           :user_id,
           :peeraddr,
           :glossary_item_id,
           :publish_status
	 );
	
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/glossary/www/term-add-edit-postgresql.xql}
dbqd.glossary.www.term-add-edit.illuststration_exists {dbqd.glossary.www.term-add-edit.illuststration_exists {
      
	select child_id as illustration_item_id from cr_child_rels 
	where relation_tag = 'illustration' and parent_id = :item_id
      } {} {} {} c:/web/openacs-4/packages/glossary/www/term-add-edit.xql}
dbqd.glossary.www.term-add-edit.get_parent_glossary_item_id {dbqd.glossary.www.term-add-edit.get_parent_glossary_item_id {
      
	select parent_id from cr_child_rels 
	where child_id = :item_id and relation_tag = 'parent glossary'
      } {} {} {} c:/web/openacs-4/packages/glossary/www/term-add-edit.xql}
dbqd.glossary.www.term-add-edit.term_update {dbqd.glossary.www.term-add-edit.term_update {
      
		insert into glossary_termsi (
		item_id, revision_id, title, context_id, 
		creation_user, creation_ip, mime_type
		) values (
		:item_id, :revision_id, 
		:term, :glossary_item_id, :user_id, :peeraddr, :mime_type
		)
	    
      } {} {} {} c:/web/openacs-4/packages/glossary/www/term-add-edit.xql}
dbqd.glossary.www.term-add-edit.set_revision_live_1 {dbqd.glossary.www.term-add-edit.set_revision_live_1 {
      
	        update cr_items
		set live_revision = :revision_id,
		publish_status = :publish_status
		where item_id = :item_id
	    
      } {} {} {} c:/web/openacs-4/packages/glossary/www/term-add-edit.xql}
dbqd.glossary.www.term-add-edit.term_insert {dbqd.glossary.www.term-add-edit.term_insert {
      
		insert into glossary_terms (
		term_id
		) values (
		:new_revision_id
		)
	    
      } {} {} {} c:/web/openacs-4/packages/glossary/www/term-add-edit.xql}
dbqd.glossary.www.term-add-edit.set_revision_live_2 {dbqd.glossary.www.term-add-edit.set_revision_live_2 {
      
	        update cr_items
		set live_revision = :new_revision_id,
		name = :name,
		publish_status = :publish_status
		where item_id = :new_item_id
	    
      } {} {} {} c:/web/openacs-4/packages/glossary/www/term-add-edit.xql}
dbqd.glossary.www.term-add-edit.set_parent_glossary {dbqd.glossary.www.term-add-edit.set_parent_glossary {
      
		insert into cr_child_rels (
		rel_id, parent_id, child_id, relation_tag
		) values (
		:rel_id, :glossary_item_id, :new_item_id, 'parent glossary'
		)
	    
      } {} {} {} c:/web/openacs-4/packages/glossary/www/term-add-edit.xql}
dbqd.glossary.www.term-oracle.glossary_term_item_select {dbqd.glossary.www.term-oracle.glossary_term_item_select {
      
    select term, definition,
    revision_id, item_id, name, mime_type,
    decode(acs_permission.permission_p(item_id,
                                       :user_id,
                                       'glossary_term_modify'),
           't', 1,
           'f', 0) as term_modify_p
    from glossary_terms_live_definition
    where item_id = :item_id

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/glossary/www/term-oracle.xql}
dbqd.glossary.www.term-oracle.get_glossary_title {dbqd.glossary.www.term-oracle.get_glossary_title {
      
select title from glossariesx
where revision_id = content_item.get_live_revision(:glossary_item_id)

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/glossary/www/term-oracle.xql}
dbqd.glossary.www.term.glossary_term_item_select {dbqd.glossary.www.term.glossary_term_item_select {

    select term, definition,
    revision_id, item_id, name, mime_type,
    case acs_permission__permission_p(item_id, :user_id, 'glossary_term_modify')
      when 't' then 1
      when 'f' then 0
    end as term_modify_p
    from glossary_terms_live_definition
    where item_id = :item_id

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/glossary/www/term-postgresql.xql}
dbqd.glossary.www.term.get_glossary_title {dbqd.glossary.www.term.get_glossary_title {
      
select title from glossariesx
where revision_id = content_item__get_live_revision(:glossary_item_id)

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/glossary/www/term-postgresql.xql}
dbqd.glossary.www.term.illuststration_exists {dbqd.glossary.www.term.illuststration_exists {
      
    select i.item_id as illustration_item_id, 
    live_revision as illustration_revision_id
    from cr_child_rels ch, cr_items i
    where relation_tag = 'illustration' 
    and ch.parent_id = :item_id
    and ch.child_id = i.item_id
    and publish_status = 'live'
      } {} {} {} c:/web/openacs-4/packages/glossary/www/term.xql}
dbqd.glossary.www.term.get_picture_info {dbqd.glossary.www.term.get_picture_info {
      
	select i.width, i.height, cr.title as ill_title, 
	cr.description as ill_description, cr.publish_date
	from images i, cr_revisions cr
	where i.image_id = cr.revision_id
	and image_id = :illustration_revision_id
   
      } {} {} {} c:/web/openacs-4/packages/glossary/www/term.xql}
dbqd.glossary.www.term.get_live_p_and_glossary_item_id {dbqd.glossary.www.term.get_live_p_and_glossary_item_id {
       
    select ch.parent_id as glossary_item_id
    from cr_child_rels ch, cr_items i
    where child_id = :item_id 
    and relation_tag = 'parent glossary'
    and ch.parent_id = item_id
    and live_revision is not null
      } {} {} {} c:/web/openacs-4/packages/glossary/www/term.xql}
dbqd.glossary.www.terms-pending-oracle.glossary_item_select {dbqd.glossary.www.terms-pending-oracle.glossary_item_select {
      
    select i.item_id as glossary_item_id, title as glossary_title,
    description as glossary_description, i.publish_status as glossary_status,
    decode(acs_permission.permission_p(i.item_id,
                                       :user_id,
                                       'glossary_modify'),
           't', 1,
           'f', 0) as glossary_edit_p
    from glossariesx g, cr_items i
    where g.item_id = :item_id 
    and g.item_id = i.item_id
    and i.content_type = 'glossary'
    and i.live_revision = g.revision_id

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/glossary/www/terms-pending-oracle.xql}
dbqd.glossary.www.terms-pending-oracle.glossary_pending_term_items_select {dbqd.glossary.www.terms-pending-oracle.glossary_pending_term_items_select {
      
    select i.item_id as glossary_term_item_id , title as term, publish_status as term_status
    from glossary_termsx gt, cr_items i, cr_child_rels ch
    where ch.parent_id = :item_id
    and ch.child_id = gt.item_id
    and i.publish_status != 'live'
    and i.content_type = 'glossary_term'
    and i.live_revision = gt.revision_id
    and acs_permission.permission_p(i.item_id, :user_id, 'glossary_term_modify') = 't'
    order by term

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/glossary/www/terms-pending-oracle.xql}
dbqd.glossary.www.terms-pending.glossary_item_select {dbqd.glossary.www.terms-pending.glossary_item_select {

    select i.item_id as glossary_item_id, title as glossary_title,
    description as glossary_description, i.publish_status as glossary_status,
    case acs_permission__permission_p(i.item_id, :user_id, 'glossary_modify')
      when 't' then 1
      when 'f' then 0
    end as glossary_edit_p
    from glossariesx g, cr_items i
    where g.item_id = :item_id 
    and g.item_id = i.item_id
    and i.content_type = 'glossary'
    and i.live_revision = g.revision_id

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/glossary/www/terms-pending-postgresql.xql}
dbqd.glossary.www.terms-pending.glossary_pending_term_items_select {dbqd.glossary.www.terms-pending.glossary_pending_term_items_select {
      
    select i.item_id as glossary_term_item_id , title as term, publish_status as term_status
    from glossary_termsx gt, cr_items i, cr_child_rels ch
    where ch.parent_id = :item_id
    and ch.child_id = gt.item_id
    and i.publish_status != 'live'
    and i.content_type = 'glossary_term'
    and i.live_revision = gt.revision_id
    and acs_permission__permission_p(i.item_id, :user_id, 'glossary_term_modify') = 't'
    order by term

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/glossary/www/terms-pending-postgresql.xql}
dbqd.glossary.www.workflow-add-edit-oracle.glossary_workflow_info {dbqd.glossary.www.workflow-add-edit-oracle.glossary_workflow_info {
      
    select g.title as glossary_title, g.revision_id
    from glossariesx g
    where g.item_id = :item_id
    and g.revision_id = content_item.get_latest_revision(:item_id)

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/glossary/www/workflow-add-edit-oracle.xql}
dbqd.glossary.www.workflow-add-edit-oracle.glossary_workflow_audit_update {dbqd.glossary.www.workflow-add-edit-oracle.glossary_workflow_audit_update {
      
	update acs_objects 
	set last_modified = sysdate,
	modifying_user = :user_id,
	modifying_ip = :peeraddr
	where object_id = :item_id
    
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/glossary/www/workflow-add-edit-oracle.xql}
dbqd.glossary.www.workflow-add-edit.glossary_workflow_info {dbqd.glossary.www.workflow-add-edit.glossary_workflow_info {
      
    select g.title as glossary_title, g.revision_id
    from glossariesx g
    where g.item_id = :item_id
    and g.revision_id = content_item__get_latest_revision(:item_id)

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/glossary/www/workflow-add-edit-postgresql.xql}
dbqd.glossary.www.workflow-add-edit.glossary_workflow_audit_update {dbqd.glossary.www.workflow-add-edit.glossary_workflow_audit_update {
      
	update acs_objects 
	set last_modified = current_timestamp,
	modifying_user = :user_id,
	modifying_ip = :peeraddr
	where object_id = :item_id
    
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/glossary/www/workflow-add-edit-postgresql.xql}
dbqd.glossary.www.workflow-add-edit.get_workflow_process {dbqd.glossary.www.workflow-add-edit.get_workflow_process {
      
	select wf.workflow_key as possible_workflow_key, 
	wf.description as possible_description, pretty_name as possible_workflow_name
	from wf_workflows wf, acs_object_types ot
	where workflow_key like '%term%' 
	and wf.workflow_key = ot.object_type
    
      } {} {} {} c:/web/openacs-4/packages/glossary/www/workflow-add-edit.xql}
dbqd.glossary.www.workflow-add-edit.glossary_workflow_update {dbqd.glossary.www.workflow-add-edit.glossary_workflow_update {
      
	update glossaries
	set workflow_key = :new_workflow_key
	where glossary_id = :revision_id
    
      } {} {} {} c:/web/openacs-4/packages/glossary/www/workflow-add-edit.xql}
dbqd.lars-blogger.tcl.entry-procs-oracle.lars_blogger::entry::get.select_entry {dbqd.lars-blogger.tcl.entry-procs-oracle.lars_blogger::entry::get.select_entry {
		    select b.entry_id,  
                           b.title, 
                           b.title_url, 
                           b.content, 
                           b.content_format, 
                           b.draft_p, 
			   o.creation_user as user_id,
                           to_char(b.entry_date, 'YYYY-MM-DD') as entry_date,
		           to_char(b.entry_date, 'fmDayfm, fmMonthfm fmDDfm, YYYY') as entry_date_pretty, 
        		   p.first_names as poster_first_names,
		           p.last_name as poster_last_name,
		           to_char(b.posted_date , 'HH24:MI') as posted_time_pretty,
                           b.package_id,
		           (select count(gc.comment_id) 
		            from general_comments gc, cr_revisions cr 
		            where gc.object_id = entry_id
		            and content_item.get_live_revision(gc.comment_id) = cr.revision_id) as num_comments
		    from   pinds_blog_entries b,
                           acs_objects o,
                           persons p
		    where  b.entry_id = :entry_id
                    and    o.object_id = b.entry_id
                    and    p.person_id = o.creation_user
        } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/lars-blogger/tcl/entry-procs-oracle.xql}
dbqd.lars-blogger.tcl.entry-procs-oracle.lars_blogger::entry::publish.update_entry {dbqd.lars-blogger.tcl.entry-procs-oracle.lars_blogger::entry::publish.update_entry {
		    update pinds_blog_entries
		    set    entry_date = trunc(sysdate),
		           draft_p = 'f',
		           posted_date = sysdate
		    where  entry_id = :entry_id
        } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/lars-blogger/tcl/entry-procs-oracle.xql}
dbqd.lars-blogger.tcl.entry-procs-oracle.lars_blogger::entry::get_comments.get_comments {dbqd.lars-blogger.tcl.entry-procs-oracle.lars_blogger::entry::get_comments.get_comments {
      
             select g.comment_id,
                    r.title,
                    r.mime_type,
                    o.creation_user,
                    acs_object.name(o.creation_user) as author,
                    to_char(o.creation_date, 'MM-DD-YYYY') as pretty_date,
                    to_char(o.creation_date, 'Month DD, YYYY HH12:MI PM') as pretty_date2
		    case when tb.comment_id not null 't' else 'f' end as trackback_p,
		    tb.tb_url as trackback_url,
		    nvl(tb.name,tb.tb_url) as trackback_name
               from general_comments g left join trackback_pings tb on gc.comment_id=tb.comment_id,
                    cr_revisions r,
	            cr_items ci,
                    acs_objects o
              where g.object_id = :object_id 
		and r.revision_id = i.live_revision
	        and i.item_id=g.comment_id 
                and o.object_id = g.comment_id
              order by o.creation_date
		
	} {} {} {oracle 8.1.6} c:/web/openacs-4/packages/lars-blogger/tcl/entry-procs-oracle.xql}
dbqd.lars-blogger.tcl.entry-procs.lars_blogger::entry::get.select_entry {dbqd.lars-blogger.tcl.entry-procs.lars_blogger::entry::get.select_entry {
		    select b.entry_id,  
                           b.title, 
                           b.title_url, 
                           b.category_id, 
                           b.content, 
                           b.content_format, 
                           b.draft_p, 
			   o.creation_user as user_id,
                           to_char(b.entry_date, 'YYYY-MM-DD') as entry_date,
		           to_char(b.entry_date, 'fmDayfm, fmMonthfm fmDDfm, YYYY') as entry_date_pretty, 
        		   p.first_names as poster_first_names,
		           p.last_name as poster_last_name,
		           to_char(b.posted_date , 'HH24:MI') as posted_time_pretty,
                           b.package_id,
		           (select count(gc.comment_id) 
		            from general_comments gc, cr_revisions cr 
		            where gc.object_id = entry_id
		            and   content_item__get_live_revision(gc.comment_id) = cr.revision_id) as num_comments
		    from   pinds_blog_entries b,
                           acs_objects o,
                           persons p
		    where  b.entry_id = :entry_id
                    and    o.object_id = b.entry_id
                    and    p.person_id = o.creation_user
        } {} {} {postgresql 7.1} c:/web/openacs-4/packages/lars-blogger/tcl/entry-procs-postgresql.xql}
dbqd.lars-blogger.tcl.entry-procs.lars_blogger::entry::publish.update_entry {dbqd.lars-blogger.tcl.entry-procs.lars_blogger::entry::publish.update_entry {
		    update pinds_blog_entries
		    set    entry_date = date_trunc('day', current_timestamp),
		           draft_p = 'f',
		           posted_date = current_timestamp
		    where  entry_id = :entry_id
        } {} {} {postgresql 7.1} c:/web/openacs-4/packages/lars-blogger/tcl/entry-procs-postgresql.xql}
dbqd.lars-blogger.tcl.entry-procs.lars_blogger::entry::get_comments.get_comments {dbqd.lars-blogger.tcl.entry-procs.lars_blogger::entry::get_comments.get_comments {
      
             select g.comment_id,
		    r.content,
                    r.title,
                    r.mime_type,
                    o.creation_user,
                    acs_object__name(o.creation_user) as author,
                    to_char(o.creation_date, 'MM-DD-YYYY') as pretty_date,
                    to_char(o.creation_date, 'Month DD, YYYY HH12:MI PM') as pretty_date2,
		    case when tb.comment_id is not null then 't' else 'f' end as trackback_p,
		    tb.tb_url as trackback_url,
		    coalesce(tb.name, tb.tb_url) as trackback_name
               from general_comments g left join trackback_pings tb on g.comment_id=tb.comment_id,
                    cr_revisions r,
	            cr_items ci,
                    acs_objects o
              where g.object_id = :entry_id
		and r.revision_id = ci.live_revision
	        and ci.item_id=g.comment_id 
                and o.object_id = g.comment_id
              order by o.creation_date
		
	} {} {} {postgresql 7.1} c:/web/openacs-4/packages/lars-blogger/tcl/entry-procs-postgresql.xql}
dbqd.lars-blogger.tcl.entry-procs.lars_blogger::entry::get.select_category {dbqd.lars-blogger.tcl.entry-procs.lars_blogger::entry::get.select_category {
		    select name as category_name, short_name as category_short_name
		    from   pinds_blog_categories
                    where  category_id = :category_id
        } {} {} {} c:/web/openacs-4/packages/lars-blogger/tcl/entry-procs.xql}
dbqd.lars-blogger.tcl.lars-blogger-procs-oracle.lars_blog_entry_add.entry_add {dbqd.lars-blogger.tcl.lars-blogger-procs-oracle.lars_blog_entry_add.entry_add {
                        begin
                                :1 := pinds_blog_entry.new (
                        entry_id => :entry_id,
                        package_id => :package_id,
                        title => :title,
                        title_url => :title_url,
                        content => :content,
                        content_format => :content_format,
                        entry_date => to_date(:entry_date, 'YYYY-MM-DD'),
                        draft_p => :draft_p,
                        creation_user => :creation_user,
                        creation_ip => :creation_ip
                        );
                        end;
        } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/lars-blogger/tcl/lars-blogger-procs-oracle.xql}
dbqd.lars-blogger.tcl.lars-blogger-procs-oracle.lars_blog_setup_feed.create_instance_channel {dbqd.lars-blogger.tcl.lars-blogger-procs-oracle.lars_blog_setup_feed.create_instance_channel {
                begin
                    :1 := weblogger_channel.new (
                        null,
                        :package_id,
                        NULL,
                        :creation_user,
                        :creation_ip
                    );
                end;
        } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/lars-blogger/tcl/lars-blogger-procs-oracle.xql}
dbqd.lars-blogger.tcl.lars-blogger-procs-oracle.lars_blog_setup_feed.create_user_channel {dbqd.lars-blogger.tcl.lars-blogger-procs-oracle.lars_blog_setup_feed.create_user_channel {
                begin
                    :1 := weblogger_channel.new (
                        null,
                        :package_id,
                        :creation_user,
                        :creation_user,
                        :creation_ip
                    );
                end;
         } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/lars-blogger/tcl/lars-blogger-procs-oracle.xql}
dbqd.lars-blogger.tcl.lars-blogger-procs-oracle.lars_blog_setup_feed.create_subscr {dbqd.lars-blogger.tcl.lars-blogger-procs-oracle.lars_blog_setup_feed.create_subscr {
            begin
                :1 := rss_gen_subscr.new (
                    null,                                      -- subscr_id
                    acs_sc_impl.get_id('RssGenerationSubscriber','pinds_blog_entries'),
                                                               -- impl_id
                    :summary_context_id,                       -- summary_context_id
                    :timeout,                                  -- timeout
                    null,                                      -- lastbuild
                    'rss_gen_subscr',                          -- object_type
                    sysdate,                                   -- creation_date
                    :creation_user,                            -- creation_user
                    :creation_ip,                              -- creation_ip
                    :package_id                                -- context_id
                );
            end;
        } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/lars-blogger/tcl/lars-blogger-procs-oracle.xql}
dbqd.lars-blogger.tcl.lars-blogger-procs.lars_blog_entry_add.entry_add {dbqd.lars-blogger.tcl.lars-blogger-procs.lars_blog_entry_add.entry_add {
	        select pinds_blog_entry__new (
            		:entry_id,
  	          	:package_id,
        	    	:title,
                	:title_url,
                        :category_id,
	            	:content,
        	    	:content_format,
            		to_date(:entry_date, 'YYYY-MM-DD'),
	            	:draft_p,
        	    	:creation_user,
            		:creation_ip
        	)
        } {} {} {postgresql 7.1} c:/web/openacs-4/packages/lars-blogger/tcl/lars-blogger-procs-postgresql.xql}
dbqd.lars-blogger.tcl.lars-blogger-procs.lars_blog_setup_feed.create_instance_channel {dbqd.lars-blogger.tcl.lars-blogger-procs.lars_blog_setup_feed.create_instance_channel {
		select weblogger_channel__new (
			null,
            		:package_id,
			NULL,
			:creation_user,
			:creation_ip
        	)
        } {} {} {postgresql 7.1} c:/web/openacs-4/packages/lars-blogger/tcl/lars-blogger-procs-postgresql.xql}
dbqd.lars-blogger.tcl.lars-blogger-procs.lars_blog_setup_feed.create_user_channel {dbqd.lars-blogger.tcl.lars-blogger-procs.lars_blog_setup_feed.create_user_channel {
		select weblogger_channel__new (
			null,
            		:package_id,
			:creation_user,
			:creation_user,
			:creation_ip
        	)
        } {} {} {postgresql 7.1} c:/web/openacs-4/packages/lars-blogger/tcl/lars-blogger-procs-postgresql.xql}
dbqd.lars-blogger.tcl.lars-blogger-procs.lars_blog_setup_feed.create_subscr {dbqd.lars-blogger.tcl.lars-blogger-procs.lars_blog_setup_feed.create_subscr {
            select rss_gen_subscr__new (
                null,                                      -- subscr_id
                acs_sc_impl__get_id('RssGenerationSubscriber','pinds_blog_entries'),
                                                           -- impl_id
                :summary_context_id,                       -- summary_context_id
                :timeout,                                  -- timeout
                null,                                      -- lastbuild
                'rss_gen_subscr',                          -- object_type
                now(),                                     -- creation_date
                :creation_user,                            -- creation_user
                :creation_ip,                              -- creation_ip
                :package_id                                -- context_id
            )
        } {} {} {postgresql 7.1} c:/web/openacs-4/packages/lars-blogger/tcl/lars-blogger-procs-postgresql.xql}
dbqd.lars-blogger.tcl.lars-blogger-procs.lars_blog_setup_feed.select_instance_channel {dbqd.lars-blogger.tcl.lars-blogger-procs.lars_blog_setup_feed.select_instance_channel {
            select w.channel_id
            from   weblogger_channels w
            where  w.package_id = :package_id
            and    w.user_id is null
        } {} {} {} c:/web/openacs-4/packages/lars-blogger/tcl/lars-blogger-procs.xql}
dbqd.lars-blogger.tcl.lars-blogger-procs.lars_blog_setup_feed.exists_instance_feed_p {dbqd.lars-blogger.tcl.lars-blogger-procs.lars_blog_setup_feed.exists_instance_feed_p {
            select count(*)
            from   rss_gen_subscrs s,
                   acs_sc_impls i, 
                   weblogger_channels w
            where  s.summary_context_id = w.channel_id
            and    w.package_id = :package_id
            and    w.user_id is null
            and    s.impl_id = i.impl_id
            and    i.impl_name = 'pinds_blog_entries'
            and    i.impl_owner_name = 'lars-blogger'
        } {} {} {} c:/web/openacs-4/packages/lars-blogger/tcl/lars-blogger-procs.xql}
dbqd.lars-blogger.tcl.lars-blogger-procs.lars_blog_setup_feed.select_user_channel {dbqd.lars-blogger.tcl.lars-blogger-procs.lars_blog_setup_feed.select_user_channel {
            select w.channel_id
            from   weblogger_channels w
            where  w.package_id = :package_id
            and    w.user_id = :creation_user
        } {} {} {} c:/web/openacs-4/packages/lars-blogger/tcl/lars-blogger-procs.xql}
dbqd.lars-blogger.tcl.lars-blogger-procs.lars_blog_setup_feed.exists_user_feed_p {dbqd.lars-blogger.tcl.lars-blogger-procs.lars_blog_setup_feed.exists_user_feed_p {
            select count(*)
            from   rss_gen_subscrs s,
                   acs_sc_impls i,
                   weblogger_channels w
            where  s.summary_context_id = w.channel_id
            and    w.user_id = :creation_user
            and    w.package_id = :package_id
            and    s.impl_id = i.impl_id
            and    i.impl_name = 'pinds_blog_entries'
            and    i.impl_owner_name = 'lars-blogger'
        } {} {} {} c:/web/openacs-4/packages/lars-blogger/tcl/lars-blogger-procs.xql}
dbqd.lars-blogger.tcl.lars-blogger-procs.lars_blog_setup_feed.update_subscr {dbqd.lars-blogger.tcl.lars-blogger-procs.lars_blog_setup_feed.update_subscr {
            update rss_gen_subscrs
            set    channel_title = :channel_title,
                   channel_link = :channel_link
            where  subscr_id = :subscr_id
        } {} {} {} c:/web/openacs-4/packages/lars-blogger/tcl/lars-blogger-procs.xql}
dbqd.lars-blogger.tcl.lars-blogger-procs.lars_blog_setup_feed.screen_name {dbqd.lars-blogger.tcl.lars-blogger-procs.lars_blog_setup_feed.screen_name {
            select screen_name from users where user_id = :creation_user
        } {} {} {} c:/web/openacs-4/packages/lars-blogger/tcl/lars-blogger-procs.xql}
dbqd.lars-blogger.tcl.rss-procs-oracle.lars_blog__rss_datasource.now {dbqd.lars-blogger.tcl.rss-procs-oracle.lars_blog__rss_datasource.now {
			select to_char(sysdate,'DD Mon YYYY hh12:MI am')  from dual
        } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/lars-blogger/tcl/rss-procs-oracle.xql}
dbqd.lars-blogger.tcl.rss-procs-oracle.lars_blog__rss_datasource.blog_rss_items {dbqd.lars-blogger.tcl.rss-procs-oracle.lars_blog__rss_datasource.blog_rss_items {
            select *
            from (select entry_id,
                         title, 
                         content,
                         entry_date,
                         posted_date,
                         to_char(posted_date, 'YYYY-MM-DD') as posted_date_string,
                         to_char(posted_date, 'HH:MI') as posted_time_string,
                         to_char(posted_date, 'YYYY-MM-DD HH24:MI:SS') as posted_time_ansi,
                         -6 as tzoffset_hour,
                         0 as tzoffset_minute,
                         to_char(entry_date, 'DD Mon YYYY hh12:MI am') as entry_date_pretty,
                         to_char(entry_date, 'YYYY/MM/') as entry_archive_url
                  from pinds_blog_entries 
                  where package_id = :package_id
                  and draft_p = 'f'
                  and deleted_p = 'f'
                  order by entry_date desc, posted_date desc)
            where rownum < 11
        } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/lars-blogger/tcl/rss-procs-oracle.xql}
dbqd.lars-blogger.tcl.rss-procs-oracle.lars_blog__rss_datasource.user_blog_rss_items {dbqd.lars-blogger.tcl.rss-procs-oracle.lars_blog__rss_datasource.user_blog_rss_items {
            select *
            from (select entry_id,
                         title, 
                         content,
                         entry_date,
                         posted_date,
                         to_char(posted_date, 'YYYY-MM-DD') as posted_date_string,
                         to_char(posted_date, 'HH:MI') as posted_time_string,
                         to_char(posted_date, 'YYYY-MM-DD HH24:MI:SS') as posted_time_ansi,
                         -6 as tzoffset_hour,
                         0 as tzoffset_minute,
                         to_char(entry_date, 'DD Mon YYYY hh12:MI am') as entry_date_pretty,
                         to_char(entry_date, 'YYYY/MM/') as entry_archive_url
                  from   pinds_blog_entries e,
		         acs_objects o, 
                         users u
                  where e.package_id = :package_id
                  and   o.object_id = e.entry_id
                  and   o.creation_user = :user_id
                  and   u.user_id = o.creation_user
                  and   e.draft_p = 'f'
                  and   e.deleted_p = 'f'
                  order by e.entry_date desc, e.posted_date desc)
            where rownum < 11
        } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/lars-blogger/tcl/rss-procs-oracle.xql}
dbqd.lars-blogger.tcl.rss-procs-oracle.lars_blog__rss_lastUpdated.get_last_update {dbqd.lars-blogger.tcl.rss-procs-oracle.lars_blog__rss_lastUpdated.get_last_update {
	        select nvl ((max(posted_date)-to_date('1970-01-01'))*60*60*24,0) as last_update
	        from   pinds_blog_entries
	        where  package_id = :package_id
	        and    draft_p = 'f'
	        and    deleted_p = 'f'
        } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/lars-blogger/tcl/rss-procs-oracle.xql}
dbqd.lars-blogger.tcl.rss-procs-oracle.lars_blog__rss_lastUpdated.get_last_user_update {dbqd.lars-blogger.tcl.rss-procs-oracle.lars_blog__rss_lastUpdated.get_last_user_update {
	        select nvl ((max(posted_date)-to_date('1970-01-01'))*60*60*24,0) as last_update
	        from   pinds_blog_entries e join
                       acs_objects o on (o.object_id = e.entry_id)
	        where  e.package_id = :package_id
                and    o.creation_user = :user_id
	        and    e.draft_p = 'f'
	        and    e.deleted_p = 'f'
        } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/lars-blogger/tcl/rss-procs-oracle.xql}
dbqd.lars-blogger.tcl.rss-procs.lars_blog__rss_datasource.now {dbqd.lars-blogger.tcl.rss-procs.lars_blog__rss_datasource.now {
			select to_char(current_timestamp,'DD Mon YYYY hh12:MI am') 
        } {} {} {postgresql 7.1} c:/web/openacs-4/packages/lars-blogger/tcl/rss-procs-postgresql.xql}
dbqd.lars-blogger.tcl.rss-procs.lars_blog__rss_datasource.blog_rss_items {dbqd.lars-blogger.tcl.rss-procs.lars_blog__rss_datasource.blog_rss_items {
            select e.entry_id,
                   e.title, 
                   e.content,
                   e.entry_date,
                   e.posted_date,
                   to_char(e.posted_date, 'YYYY-MM-DD') as posted_date_string,
                   to_char(e.posted_date, 'HH:MI') as posted_time_string,
                   to_char(e.posted_date, 'YYYY-MM-DD HH24:MI:SS') as posted_time_ansi,
                   extract(timezone_hour from now()) as tzoffset_hour,
                   extract(timezone_minute from now()) as tzoffset_minute,
                   to_char(e.entry_date, 'DD Mon YYYY hh12:MI am') as entry_date_pretty,
                   to_char(e.entry_date, 'YYYY/MM/') as entry_archive_url,
                   c.name as category
            from   pinds_blog_entries e left outer join
                   pinds_blog_categories c using (category_id)
            where  e.package_id = :package_id
            and    e.draft_p = 'f'
            and    e.deleted_p = 'f'
            order  by e.entry_date desc, e.posted_date desc
            limit  10
        } {} {} {postgresql 7.1} c:/web/openacs-4/packages/lars-blogger/tcl/rss-procs-postgresql.xql}
dbqd.lars-blogger.tcl.rss-procs.lars_blog__rss_datasource.user_blog_rss_items {dbqd.lars-blogger.tcl.rss-procs.lars_blog__rss_datasource.user_blog_rss_items {
            select entry_id,
                   title, 
                   content,
                   entry_date,
                   posted_date,
                   to_char(posted_date, 'YYYY-MM-DD') as posted_date_string,
                   to_char(posted_date, 'HH:MI') as posted_time_string,
                   to_char(posted_date, 'YYYY-MM-DD HH24:MI:SS') as posted_time_ansi,
                   extract(timezone_hour from now()) as tzoffset_hour,
                   extract(timezone_minute from now()) as tzoffset_minute,
                   to_char(entry_date, 'DD Mon YYYY hh12:MI am') as entry_date_pretty,
                   to_char(entry_date, 'YYYY/MM/') as entry_archive_url
    
            from pinds_blog_entries e join 
		           acs_objects o on (o.object_id = e.entry_id) join 
		           users u on (u.user_id = o.creation_user)
            where e.package_id = :package_id
            and o.creation_user = :user_id
            and e.draft_p = 'f'
            and e.deleted_p = 'f'
            order by e.entry_date desc, e.posted_date desc
            limit 10
        } {} {} {postgresql 7.1} c:/web/openacs-4/packages/lars-blogger/tcl/rss-procs-postgresql.xql}
dbqd.lars-blogger.tcl.rss-procs.lars_blog__rss_lastUpdated.get_last_update {dbqd.lars-blogger.tcl.rss-procs.lars_blog__rss_lastUpdated.get_last_update {
                select coalesce (date_part('epoch',
                                max(posted_date::timestamptz)
                                ),0) as last_update
                from   pinds_blog_entries
	        where  package_id = :package_id
	        and    draft_p = 'f'
	        and    deleted_p = 'f'
        } {} {} {postgresql 7.1} c:/web/openacs-4/packages/lars-blogger/tcl/rss-procs-postgresql.xql}
dbqd.lars-blogger.tcl.rss-procs.lars_blog__rss_lastUpdated.get_last_user_update {dbqd.lars-blogger.tcl.rss-procs.lars_blog__rss_lastUpdated.get_last_user_update {
                select coalesce (date_part('epoch',
                                max(e.posted_date::timestamptz)
                                ),0) as last_update
                from   pinds_blog_entries e join 
		       acs_objects o on (o.object_id = e.entry_id)
	        where  e.package_id = :package_id
                and    o.creation_user = :user_id
	        and    e.draft_p = 'f'
	        and    e.deleted_p = 'f'
        } {} {} {postgresql 7.1} c:/web/openacs-4/packages/lars-blogger/tcl/rss-procs-postgresql.xql}
dbqd.lars-blogger.tcl.rss-procs.lars_blog__rss_datasource.select_package_id_user_id {dbqd.lars-blogger.tcl.rss-procs.lars_blog__rss_datasource.select_package_id_user_id {
			select package_id, user_id from weblogger_channels where channel_id = :summary_context_id
        } {} {} {} c:/web/openacs-4/packages/lars-blogger/tcl/rss-procs.xql}
dbqd.lars-blogger.tcl.rss-procs.lars_blog__rss_datasource.package_name {dbqd.lars-blogger.tcl.rss-procs.lars_blog__rss_datasource.package_name {
			select instance_name from apm_packages where package_id = :package_id
        } {} {} {} c:/web/openacs-4/packages/lars-blogger/tcl/rss-procs.xql}
dbqd.lars-blogger.tcl.rss-procs.lars_blog__rss_lastUpdated.select_package_id_user_id {dbqd.lars-blogger.tcl.rss-procs.lars_blog__rss_lastUpdated.select_package_id_user_id {
			select package_id, user_id from weblogger_channels where channel_id = :summary_context_id
        } {} {} {} c:/web/openacs-4/packages/lars-blogger/tcl/rss-procs.xql}
dbqd.lars-blogger.tcl.weblogs-procs.lars_blog_weblogs_com_update_ping.package_name {dbqd.lars-blogger.tcl.weblogs-procs.lars_blog_weblogs_com_update_ping.package_name {
			select instance_name from apm_packages 
			where package_id = :package_id
        } {} {} {} c:/web/openacs-4/packages/lars-blogger/tcl/weblogs-procs.xql}
dbqd.lars-blogger.www.admin.drafts.draft_entries {dbqd.lars-blogger.www.admin.drafts.draft_entries {
		    select entry_id,
		           to_char(entry_date, 'YYYY-MM-DD') as entry_date_pretty, 
		           title,
		           content
		    from   pinds_blog_entries
		    where  package_id = :package_id
		    and    draft_p = 't'
		    and    deleted_p = 'f'
		    order  by entry_date desc, posted_date desc
        } {} {} {} c:/web/openacs-4/packages/lars-blogger/www/admin/drafts.xql}
dbqd.lars-blogger.www.admin.entry-delete.delete {dbqd.lars-blogger.www.admin.entry-delete.delete {
		    update pinds_blog_entries
		    set deleted_p = 't'
		    where entry_id = :entry_id
        } {} {} {} c:/web/openacs-4/packages/lars-blogger/www/admin/entry-delete.xql}
dbqd.lars-blogger.www.admin.entry-edit-oracle.today {dbqd.lars-blogger.www.admin.entry-edit-oracle.today {
			select to_char(sysdate, 'YYYY-MM-DD') from dual
        } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/lars-blogger/www/admin/entry-edit-oracle.xql}
dbqd.lars-blogger.www.admin.entry-edit-oracle.now {dbqd.lars-blogger.www.admin.entry-edit-oracle.now {
			posted_date = sysdate
        } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/lars-blogger/www/admin/entry-edit-oracle.xql}
dbqd.lars-blogger.www.admin.entry-edit.today {dbqd.lars-blogger.www.admin.entry-edit.today {
			select to_char(current_timestamp, 'YYYY-MM-DD') 
        } {} {} {postgresql 7.1} c:/web/openacs-4/packages/lars-blogger/www/admin/entry-edit-postgresql.xql}
dbqd.lars-blogger.www.admin.entry-edit.now {dbqd.lars-blogger.www.admin.entry-edit.now {
			posted_date = current_timestamp
        } {} {} {postgresql 7.1} c:/web/openacs-4/packages/lars-blogger/www/admin/entry-edit-postgresql.xql}
dbqd.lars-blogger.www.admin.entry-edit.entry_exists {dbqd.lars-blogger.www.admin.entry-edit.entry_exists {
            select count(*) 
            from   pinds_blog_entries 
            where  entry_id = :entry_id 
        } {} {} {} c:/web/openacs-4/packages/lars-blogger/www/admin/entry-edit.xql}
dbqd.lars-blogger.www.admin.entry-edit.org_draft_p {dbqd.lars-blogger.www.admin.entry-edit.org_draft_p {
            select draft_p 
            from   pinds_blog_entries 
            where  entry_id = :entry_id
        } {} {} {} c:/web/openacs-4/packages/lars-blogger/www/admin/entry-edit.xql}
dbqd.lars-blogger.www.admin.entry-edit.entry {dbqd.lars-blogger.www.admin.entry-edit.entry {
            select title, content, content_format, draft_p, to_char(entry_date, 'YYYY-MM-DD') as entry_date
            from   pinds_blog_entries
            where  entry_id = :entry_id
        } {} {} {} c:/web/openacs-4/packages/lars-blogger/www/admin/entry-edit.xql}
dbqd.lars-blogger.www.admin.entry-edit.update_entry {dbqd.lars-blogger.www.admin.entry-edit.update_entry {
            update pinds_blog_entries
            set    [join $set_clauses ", "]
            where  entry_id = :entry_id
        } {} {} {} c:/web/openacs-4/packages/lars-blogger/www/admin/entry-edit.xql}
dbqd.lars-blogger.www.admin.entry-publish-oracle.update_entry {dbqd.lars-blogger.www.admin.entry-publish-oracle.update_entry {
		    update pinds_blog_entries
		    set    entry_date = trunc(sysdate),
		           draft_p = 'f',
		           posted_date = sysdate
		    where  entry_id = :entry_id
        } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/lars-blogger/www/admin/entry-publish-oracle.xql}
dbqd.lars-blogger.www.admin.entry-publish.update_entry {dbqd.lars-blogger.www.admin.entry-publish.update_entry {
		    update pinds_blog_entries
		    set    entry_date = date_trunc('day', current_timestamp),
		           draft_p = 'f',
		           posted_date = current_timestamp
		    where  entry_id = :entry_id
        } {} {} {postgresql 7.1} c:/web/openacs-4/packages/lars-blogger/www/admin/entry-publish-postgresql.xql}
dbqd.lars-blogger.www.admin.entry-revoke.update_entry {dbqd.lars-blogger.www.admin.entry-revoke.update_entry {
		    update pinds_blog_entries
		    set    draft_p = 't'
		    where  entry_id = :entry_id
        } {} {} {} c:/web/openacs-4/packages/lars-blogger/www/admin/entry-revoke.xql}
dbqd.lars-blogger.www.admin.index.package_name {dbqd.lars-blogger.www.admin.index.package_name {
			select instance_name from apm_packages 
			where package_id = :package_id
        } {} {} {} c:/web/openacs-4/packages/lars-blogger/www/admin/index.xql}
dbqd.lars-blogger.www.admin.index.rss_feed_p {dbqd.lars-blogger.www.admin.index.rss_feed_p {
            select count(*)
            from   rss_gen_subscrs s,
                   acs_sc_impls i, weblogger_channels w
            where  w.package_id = :package_id
            and    s.summary_context_id = w.channel_id
            and    s.impl_id = i.impl_id
            and    i.impl_name = 'pinds_blog_entries'
            and    i.impl_owner_name = 'lars-blogger'
        } {} {} {} c:/web/openacs-4/packages/lars-blogger/www/admin/index.xql}
dbqd.lars-blogger.www.admin.rss-setup-oracle.create_subscr {dbqd.lars-blogger.www.admin.rss-setup-oracle.create_subscr {
            begin
                :1 := rss_gen_subscr.new (
                          null,
                          acs_sc_impl.get_id(
                              impl_contract_name => 'RssGenerationSubscriber',
                              impl_name => 'pinds_blog_entries'
                          ),
                          :package_id,
                          :timeout,                                 
                          null,
                          'rss_gen_subscr',                         
                          sysdate,                                    
                          :creation_user,                           
                          :creation_ip,                             
                          :package_id
                      );
            end;
        } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/lars-blogger/www/admin/rss-setup-oracle.xql}
dbqd.lars-blogger.www.admin.rss-setup.create_subscr {dbqd.lars-blogger.www.admin.rss-setup.create_subscr {
            select rss_gen_subscr__new (
                null,                                      -- subscr_id
                acs_sc_impl__get_id('RssGenerationSubscriber','pinds_blog_entries'),
                                                           -- impl_id
                :package_id,                               -- summary_context_id
                :timeout,                                  -- timeout
                null,                                      -- lastbuild
                'rss_gen_subscr',                          -- object_type
                now(),                                     -- creation_date
                :creation_user,                            -- creation_user
                :creation_ip,                              -- creation_ip
                :package_id                                -- context_id
            )
        } {} {} {postgresql 7.1} c:/web/openacs-4/packages/lars-blogger/www/admin/rss-setup-postgresql.xql}
dbqd.lars-blogger.www.admin.rss-setup.update_subscr {dbqd.lars-blogger.www.admin.rss-setup.update_subscr {
            update rss_gen_subscrs
            set    channel_title = :channel_title,
                   channel_link = :channel_link
            where  subscr_id = :subscr_id
        } {} {} {} c:/web/openacs-4/packages/lars-blogger/www/admin/rss-setup.xql}
dbqd.lars-blogger.www.blog-months-oracle.all_blog_months {dbqd.lars-blogger.www.blog-months-oracle.all_blog_months {
			select trunc(entry_date, 'month') as month_date,
			       to_char(trunc(entry_date, 'month'), 'fmMonthfm YYYY')
					  as date_pretty,
			       to_char(trunc(entry_date, 'month'), 'YYYY/MM/')
					  as month_url_stub
			from   pinds_blog_entries
			where  draft_p = 'f'
			and    package_id = :package_id
			group  by trunc(entry_date, 'month')
			order  by month_date desc
        } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/lars-blogger/www/blog-months-oracle.xql}
dbqd.lars-blogger.www.blog-months-oracle.one_blog_months {dbqd.lars-blogger.www.blog-months-oracle.one_blog_months {
			select trunc(entry_date, 'month') as month_date,
			       to_char(trunc(entry_date, 'month'), 'fmMonthfm YYYY')
					  as date_pretty,
			       to_char(trunc(entry_date, 'month'), 'YYYY/MM/')
					  as month_url_stub
			from   pinds_blog_entries e, 
                               acs_objects o,
                               users u
			where  e.draft_p = 'f'
			and    e.package_id = :package_id
			and    u.screen_name = :screen_name
                        and    o.object_id = e.entry_id
			and    u.user_id = o.creation_user
			group  by trunc(entry_date, 'month')
			order  by month_date desc
        } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/lars-blogger/www/blog-months-oracle.xql}
dbqd.lars-blogger.www.blog-months.all_blog_months {dbqd.lars-blogger.www.blog-months.all_blog_months {
			select date_trunc('month', entry_date) as month_date,
			       to_char(date_trunc('month', entry_date), 'fmMonthfm YYYY')
					  as date_pretty,
			       to_char(date_trunc('month', entry_date), 'YYYY/MM/')
					  as month_url_stub
			from   pinds_blog_entries
			where  draft_p = 'f'
			and    package_id = :package_id
			group  by month_date
			order  by month_date desc
        } {} {} {postgresql 7.1} c:/web/openacs-4/packages/lars-blogger/www/blog-months-postgresql.xql}
dbqd.lars-blogger.www.blog-months.one_blog_months {dbqd.lars-blogger.www.blog-months.one_blog_months {
			select date_trunc('month', entry_date) as month_date,
			       to_char(date_trunc('month', entry_date), 'fmMonthfm YYYY')
					  as date_pretty,
			       to_char(date_trunc('month', entry_date), 'YYYY/MM/')
					  as month_url_stub
			 from  pinds_blog_entries e join
                               acs_objects o on (o.object_id = e.entry_id) join
                               users u on (u.user_id = o.creation_user)
                        where  package_id = :package_id
			and    draft_p = 'f'
			and    screen_name = :screen_name
			group  by month_date
			order  by month_date desc
        } {} {} {postgresql 7.1} c:/web/openacs-4/packages/lars-blogger/www/blog-months-postgresql.xql}
dbqd.lars-blogger.www.blog-oracle.date_clause_archive {dbqd.lars-blogger.www.blog-oracle.date_clause_archive {
			trunc(entry_date, :archive_interval) = :archive_date
		} {} {} {oracle 8.1.6} c:/web/openacs-4/packages/lars-blogger/www/blog-oracle.xql}
dbqd.lars-blogger.www.blog-oracle.date_clause_default {dbqd.lars-blogger.www.blog-oracle.date_clause_default {
			entry_date > sysdate - :num_days
		} {} {} {oracle 8.1.6} c:/web/openacs-4/packages/lars-blogger/www/blog-oracle.xql}
dbqd.lars-blogger.www.blog-oracle.all_blogs {dbqd.lars-blogger.www.blog-oracle.all_blogs {
		    select entry_id,
		           to_char(entry_date, 'fmDayfm, Month fmDDfm, YYYY') as entry_date_pretty, 
		           to_char(entry_date, 'YYYY/MM/DD/') as entry_archive_url,
		           to_char(entry_date, 'YYYY-MM-DD') as entry_date,
		           title,
                           title_url,
		           content,
                           content_format,
		           draft_p,
		           p.first_names as poster_first_names,
		           p.last_name as poster_last_name,
			   o.creation_user as user_id,
		           to_char(posted_date , 'HH24:MI') as posted_time_pretty,
		           (select count(gc.comment_id) 
		            from general_comments gc, cr_revisions cr 
		            where gc.object_id = entry_id
		            and   content_item.get_live_revision(gc.comment_id) = cr.revision_id) as num_comments
		    from   pinds_blog_entries e,
		           acs_objects o,
		           persons p
		    where  e.entry_id = o.object_id
		    and    p.person_id = o.creation_user
		    and    package_id = :package_id
		    [ad_decode $date_clause "" "" "and    $date_clause"]
		    and    draft_p = 'f'
		    and    deleted_p = 'f'
                    [ad_decode $limit "" "" "and    rownum <= $limit"]
		    order  by entry_date desc, posted_date desc
        } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/lars-blogger/www/blog-oracle.xql}
dbqd.lars-blogger.www.blog-oracle.blog {dbqd.lars-blogger.www.blog-oracle.blog {
		    select entry_id,
		           to_char(entry_date, 'fmDayfm, Month fmDDfm, YYYY') as entry_date_pretty, 
		           to_char(entry_date, 'YYYY/MM/DD/') as entry_archive_url,
		           to_char(entry_date, 'YYYY-MM-DD') as entry_date,
		           title,
		           content,
                           content_format,
		           draft_p,
		           p.first_names as poster_first_names,
		           p.last_name as poster_last_name,
			   o.creation_user as user_id,
		           to_char(posted_date , 'HH24:MI') as posted_time_pretty,
		           (select count(gc.comment_id) 
		            from general_comments gc, cr_revisions cr 
		            where gc.object_id = entry_id
		            and   content_item.get_live_revision(gc.comment_id) = cr.revision_id) as num_comments
		    from   pinds_blog_entries e,
		           acs_objects o,
		           persons p
		    where  e.entry_id = o.object_id
		    and    p.person_id = o.creation_user
                    and    o.creation_user = :blog_user_id
		    and    package_id = :package_id
		    [ad_decode $date_clause "" "" "and    $date_clause"]
		    and    draft_p = 'f'
		    and    deleted_p = 'f'
                    [ad_decode $limit "" "" "and    rownum <= $limit"]
		    order  by entry_date desc, posted_date desc
        } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/lars-blogger/www/blog-oracle.xql}
dbqd.lars-blogger.www.blog.date_clause_archive {dbqd.lars-blogger.www.blog.date_clause_archive {
			date_trunc(:archive_interval, entry_date) = :archive_date
		} {} {} {postgresql 7.1} c:/web/openacs-4/packages/lars-blogger/www/blog-postgresql.xql}
dbqd.lars-blogger.www.blog.date_clause_default {dbqd.lars-blogger.www.blog.date_clause_default {
			entry_date > current_timestamp - interval '$num_days days'
		} {} {} {postgresql 7.1} c:/web/openacs-4/packages/lars-blogger/www/blog-postgresql.xql}
dbqd.lars-blogger.www.blog.all_blogs {dbqd.lars-blogger.www.blog.all_blogs {
		    select entry_id,
		           to_char(entry_date, 'fmDayfm, Month fmDDfm, YYYY') as entry_date_pretty, 
		           to_char(entry_date, 'YYYY/MM/DD/') as entry_archive_url,
		           to_char(entry_date, 'YYYY-MM-DD') as entry_date,
		           title,
                           title_url,
			   category_id,
		           content,
                           content_format,
		           draft_p,
		           p.first_names as poster_first_names,
		           p.last_name as poster_last_name,
			   o.creation_user as user_id,
		           to_char(posted_date , 'HH24:MI') as posted_time_pretty,
		           (select count(gc.comment_id) 
		            from general_comments gc, cr_revisions cr 
		            where gc.object_id = entry_id
		            and   content_item__get_live_revision(gc.comment_id) = cr.revision_id) as num_comments
		    from   pinds_blog_entries e join 
		           acs_objects o on (o.object_id = e.entry_id) join 
		           persons p on (p.person_id = o.creation_user)
		    where  package_id = :package_id
		    [ad_decode $date_clause "" "" "and    $date_clause"]
		    and    draft_p = 'f'
		    and    deleted_p = 'f'
		    order  by entry_date desc, posted_date desc
		    [ad_decode $limit "" "" "limit $limit"]
        } {} {} {postgresql 7.1} c:/web/openacs-4/packages/lars-blogger/www/blog-postgresql.xql}
dbqd.lars-blogger.www.blog.blog {dbqd.lars-blogger.www.blog.blog {
                    select entry_id,
                           to_char(entry_date, 'fmDayfm, Month fmDDfm, YYYY') as entry_date_pretty,
                           to_char(entry_date, 'YYYY/MM/DD/') as entry_archive_url,
                           to_char(entry_date, 'YYYY-MM-DD') as entry_date,
                           title,
	                   category_id, 
                           content,
                           content_format,
                           draft_p,
                           p.first_names as poster_first_names,
                           p.last_name as poster_last_name,
                           o.creation_user as user_id,
                           to_char(posted_date , 'HH24:MI') as posted_time_pretty,
                           (select count(gc.comment_id)
                            from general_comments gc, cr_revisions cr
                            where gc.object_id = entry_id
                            and   content_item__get_live_revision(gc.comment_id) = cr.revision_id) as num_comments
                    from   pinds_blog_entries e join
                           acs_objects o on (o.object_id = e.entry_id) join
                           persons p on (p.person_id = o.creation_user)
                    where  package_id = :package_id
	            and    o.creation_user = :blog_user_id
		    [ad_decode $date_clause "" "" "and    $date_clause"]
                    and    draft_p = 'f'
                    and    deleted_p = 'f'
                    order  by entry_date desc, posted_date desc
		    [ad_decode $limit "" "" "limit $limit"]
        } {} {} {postgresql 7.1} c:/web/openacs-4/packages/lars-blogger/www/blog-postgresql.xql}
dbqd.lars-blogger.www.blog.num_entries_by_date_all {dbqd.lars-blogger.www.blog.num_entries_by_date_all {
		    select count(entry_id)
		    from   pinds_blog_entries e
		    where  package_id = :package_id
		    and    $date_clause
		    and    draft_p = 'f'
		    and    deleted_p = 'f'
        } {} {} {} c:/web/openacs-4/packages/lars-blogger/www/blog.xql}
dbqd.lars-blogger.www.blog.num_entries_by_date {dbqd.lars-blogger.www.blog.num_entries_by_date {
		    select count(entry_id)
		    from   pinds_blog_entries e,
                           acs_objects o
		    where  e.package_id = :package_id
                    and    o.object_id = e.entry_id
                    and    o.creation_user = :blog_user_id
		    and    $date_clause
		    and    draft_p = 'f'
		    and    deleted_p = 'f'
        } {} {} {} c:/web/openacs-4/packages/lars-blogger/www/blog.xql}
dbqd.lars-blogger.www.blog.categories {dbqd.lars-blogger.www.blog.categories {
	        select * 
                from pinds_blog_categories
                where package_id = :package_id
        } {} {} {} c:/web/openacs-4/packages/lars-blogger/www/blog.xql}
dbqd.lars-blogger.www.calendar-oracle.all_entry_dates {dbqd.lars-blogger.www.calendar-oracle.all_entry_dates {
      select to_char(entry_date, 'J') as entry_date_julian
      from   pinds_blog_entries
      where  package_id = :package_id
      and    draft_p = 'f'
      and    deleted_p = 'f'
      group  by to_char(entry_date, 'J')
    } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/lars-blogger/www/calendar-oracle.xql}
dbqd.lars-blogger.www.calendar-oracle.entry_dates {dbqd.lars-blogger.www.calendar-oracle.entry_dates {
      select to_char(entry_date, 'J') as entry_date_julian
      from   pinds_blog_entries e,
             acs_objects o,
             users u
      where  package_id = :package_id
      and    o.object_id = e.entry_id
      and    u.user_id = o.creation_user
      and    u.screen_name = :screen_name
      and    draft_p = 'f'
      and    deleted_p = 'f'
      group  by to_char(entry_date, 'J')
    } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/lars-blogger/www/calendar-oracle.xql}
dbqd.lars-blogger.www.calendar.all_entry_dates {dbqd.lars-blogger.www.calendar.all_entry_dates {
      select to_char(entry_date, 'J') as entry_date_julian
      from   pinds_blog_entries
      where  package_id = :package_id
      and    draft_p = 'f'
      and    deleted_p = 'f'
      group  by entry_date_julian
    } {} {} {postgresql 7.1} c:/web/openacs-4/packages/lars-blogger/www/calendar-postgresql.xql}
dbqd.lars-blogger.www.calendar.entry_dates {dbqd.lars-blogger.www.calendar.entry_dates {
      select to_char(entry_date, 'J') as entry_date_julian
      from   pinds_blog_entries e join
             acs_objects o on (o.object_id = e.entry_id) join
             users u on (u.user_id = o.creation_user)
      where  package_id = :package_id
      and    screen_name = :screen_name
      and    draft_p = 'f'
      and    deleted_p = 'f'
      group  by entry_date_julian
    } {} {} {postgresql 7.1} c:/web/openacs-4/packages/lars-blogger/www/calendar-postgresql.xql}
dbqd.lars-blogger.www.category-delete.delete {dbqd.lars-blogger.www.category-delete.delete {
	        select pinds_blog_category__delete (:category_id)
        } {} {} {} c:/web/openacs-4/packages/lars-blogger/www/category-delete.xql}
dbqd.lars-blogger.www.category-edit.categories {dbqd.lars-blogger.www.category-edit.categories {
	        select c.category_id,
                       c.name, 
                       c.short_name,
                       (select count(*) 
                        from   pinds_blog_entries e
                        where  e.category_id = c.category_id) as num_entries
                from   pinds_blog_categories c
                where  c.package_id = :package_id
                order  by upper(c.name), c.name 
        } {} {} {} c:/web/openacs-4/packages/lars-blogger/www/category-edit.xql}
dbqd.lars-blogger.www.category-edit.short_names {dbqd.lars-blogger.www.category-edit.short_names {
	        select short_name
                from pinds_blog_categories
                where package_id = :package_id
        } {} {} {} c:/web/openacs-4/packages/lars-blogger/www/category-edit.xql}
dbqd.lars-blogger.www.category-edit.category_exists {dbqd.lars-blogger.www.category-edit.category_exists {
            select count(*) as category_exists
            from   pinds_blog_categories 
            where  category_id = :category_id
        } {} {} {} c:/web/openacs-4/packages/lars-blogger/www/category-edit.xql}
dbqd.lars-blogger.www.category-edit.short_name_exists {dbqd.lars-blogger.www.category-edit.short_name_exists {
            select count(*) as short_name_exists
            from   pinds_blog_categories 
            where  short_name = :short_name and category_id <> :category_id and package_id = :package_id
        } {} {} {} c:/web/openacs-4/packages/lars-blogger/www/category-edit.xql}
dbqd.lars-blogger.www.category-edit.category {dbqd.lars-blogger.www.category-edit.category {
            select name, short_name
            from   pinds_blog_categories
            where  category_id = :category_id
        } {} {} {} c:/web/openacs-4/packages/lars-blogger/www/category-edit.xql}
dbqd.lars-blogger.www.category-edit.insert_category {dbqd.lars-blogger.www.category-edit.insert_category {
	        select pinds_blog_category__new (
            		:category_id,
  	          	:package_id,
        	    	:name,
                	:short_name,
        	    	:creation_user,
            		:creation_ip
        	)
        } {} {} {} c:/web/openacs-4/packages/lars-blogger/www/category-edit.xql}
dbqd.lars-blogger.www.category-edit.update_category {dbqd.lars-blogger.www.category-edit.update_category {
            update pinds_blog_categories
            set    name=:name, short_name=:short_name
            where  category_id = :category_id
        } {} {} {} c:/web/openacs-4/packages/lars-blogger/www/category-edit.xql}
dbqd.lars-blogger.www.drafts-oracle.draft_entries {dbqd.lars-blogger.www.drafts-oracle.draft_entries {
		    select entry_id,
		           to_char(entry_date, 'YYYY-MM-DD') as entry_date_pretty, 
		           title,
                           title_url,
		           content,
                           content_format
		    from   pinds_blog_entries e,
                           acs_objects o
		    where  package_id = :package_id
                    and    o.object_id = e.entry_id
                    and    o.creation_user = :user_id
		    and    draft_p = 't'
		    and    deleted_p = 'f'
		    order  by entry_date desc, posted_date desc
        } {} {} {} c:/web/openacs-4/packages/lars-blogger/www/drafts-oracle.xql}
dbqd.lars-blogger.www.drafts.draft_entries {dbqd.lars-blogger.www.drafts.draft_entries {
		    select entry_id,
		           to_char(entry_date, 'YYYY-MM-DD') as entry_date_pretty, 
		           title,
		           content
		    from   pinds_blog_entries e join
                           acs_objects o on (o.object_id = e.entry_id) join
                           persons p on (p.person_id = o.creation_user)
		    where  package_id = :package_id
                    and    o.creation_user = :user_id
		    and    draft_p = 't'
		    and    deleted_p = 'f'
		    order  by entry_date desc, posted_date desc
        } {} {} {} c:/web/openacs-4/packages/lars-blogger/www/drafts-postgresql.xql}
dbqd.lars-blogger.www.drafts.all_draft_entries {dbqd.lars-blogger.www.drafts.all_draft_entries {
		    select entry_id,
		           to_char(entry_date, 'YYYY-MM-DD') as entry_date_pretty, 
		           title,
		           content
		    from   pinds_blog_entries
		    where  package_id = :package_id
		    and    draft_p = 't'
		    and    deleted_p = 'f'
		    order  by entry_date desc, posted_date desc
        } {} {} {} c:/web/openacs-4/packages/lars-blogger/www/drafts.xql}
dbqd.lars-blogger.www.entry-delete.delete {dbqd.lars-blogger.www.entry-delete.delete {
		    update pinds_blog_entries
		    set deleted_p = 't'
		    where entry_id = :entry_id
        } {} {} {} c:/web/openacs-4/packages/lars-blogger/www/entry-delete.xql}
dbqd.lars-blogger.www.entry-edit-oracle.today {dbqd.lars-blogger.www.entry-edit-oracle.today {
			select to_char(sysdate, 'YYYY-MM-DD') from dual
        } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/lars-blogger/www/entry-edit-oracle.xql}
dbqd.lars-blogger.www.entry-edit-oracle.now {dbqd.lars-blogger.www.entry-edit-oracle.now {
			posted_date = sysdate
        } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/lars-blogger/www/entry-edit-oracle.xql}
dbqd.lars-blogger.www.entry-edit.today {dbqd.lars-blogger.www.entry-edit.today {
			select to_char(current_timestamp, 'YYYY-MM-DD') 
        } {} {} {postgresql 7.1} c:/web/openacs-4/packages/lars-blogger/www/entry-edit-postgresql.xql}
dbqd.lars-blogger.www.entry-edit.now {dbqd.lars-blogger.www.entry-edit.now {
			posted_date = current_timestamp
        } {} {} {postgresql 7.1} c:/web/openacs-4/packages/lars-blogger/www/entry-edit-postgresql.xql}
dbqd.lars-blogger.www.entry-edit.categories {dbqd.lars-blogger.www.entry-edit.categories {
	        select name, category_id
                from   pinds_blog_categories
                where  package_id = :package_id
        } {} {} {} c:/web/openacs-4/packages/lars-blogger/www/entry-edit.xql}
dbqd.lars-blogger.www.entry-edit.entry_exists {dbqd.lars-blogger.www.entry-edit.entry_exists {
            select count(*) 
            from   pinds_blog_entries 
            where  entry_id = :entry_id 
        } {} {} {} c:/web/openacs-4/packages/lars-blogger/www/entry-edit.xql}
dbqd.lars-blogger.www.entry-edit.org_draft_p {dbqd.lars-blogger.www.entry-edit.org_draft_p {
            select draft_p 
            from   pinds_blog_entries 
            where  entry_id = :entry_id
        } {} {} {} c:/web/openacs-4/packages/lars-blogger/www/entry-edit.xql}
dbqd.lars-blogger.www.entry-edit.entry {dbqd.lars-blogger.www.entry-edit.entry {
            select title, title_url, category_id, content, content_format, draft_p, to_char(entry_date, 'YYYY-MM-DD') as entry_date
            from   pinds_blog_entries
            where  entry_id = :entry_id
        } {} {} {} c:/web/openacs-4/packages/lars-blogger/www/entry-edit.xql}
dbqd.lars-blogger.www.entry-edit.update_entry {dbqd.lars-blogger.www.entry-edit.update_entry {
            update pinds_blog_entries
            set    [join $set_clauses ", "]
            where  entry_id = :entry_id
        } {} {} {} c:/web/openacs-4/packages/lars-blogger/www/entry-edit.xql}
dbqd.lars-blogger.www.entry-revoke.update_entry {dbqd.lars-blogger.www.entry-revoke.update_entry {
		    update pinds_blog_entries
		    set    draft_p = 't'
		    where  entry_id = :entry_id
        } {} {} {} c:/web/openacs-4/packages/lars-blogger/www/entry-revoke.xql}
dbqd.lars-blogger.www.index-oracle.bloggers {dbqd.lars-blogger.www.index-oracle.bloggers {
		    select distinct u.screen_name, u.user_id
		    from   pinds_blog_entries e,
		           acs_objects o,
		           users u
		    where  package_id = :package_id
                    and    o.object_id = e.entry_id
                    and    u.user_id = o.creation_user
                    and    u.screen_name is not null
        } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/lars-blogger/www/index-oracle.xql}
dbqd.lars-blogger.www.index.bloggers {dbqd.lars-blogger.www.index.bloggers {
		    select distinct u.screen_name, u.user_id
		    from   pinds_blog_entries e join 
		           acs_objects o on (o.object_id = e.entry_id) join 
		           users u on (u.user_id = o.creation_user)
		    where  e.package_id = :package_id
                    and    u.screen_name != ''
        } {} {} {postgresql 7.1} c:/web/openacs-4/packages/lars-blogger/www/index-postgresql.xql}
dbqd.lars-blogger.www.index.archive_date_month {dbqd.lars-blogger.www.index.archive_date_month {
			select to_date(:year || :month, 'YYYYMM') 
				as archive_date, 
			to_char(to_date(:year || :month, 'YYYYMM'), 'fmMonthfm YYYY')
				as archive_date_pretty
			from dual
        } {} {} {} c:/web/openacs-4/packages/lars-blogger/www/index.xql}
dbqd.lars-blogger.www.index.archive_date_month_day {dbqd.lars-blogger.www.index.archive_date_month_day {
			select to_date(:year || :month || :day, 'YYYYMMDD') 
				as archive_date, 
			to_char(to_date(:year || :month || :day, 'YYYYMMDD'), 'fmMonthfm YYYY') 
				as archive_month_pretty,
			to_char(to_date(:year || :month || :day, 'YYYYMMDD'), 'DD') 
				as archive_date_pretty
			from dual
        } {} {} {} c:/web/openacs-4/packages/lars-blogger/www/index.xql}
dbqd.lars-blogger.www.index.get_category_from_short_name {dbqd.lars-blogger.www.index.get_category_from_short_name {
			select category_id, name as category_name
			from pinds_blog_categories
			where short_name = :category_short_name and package_id = :package_id
        } {} {} {} c:/web/openacs-4/packages/lars-blogger/www/index.xql}
dbqd.lars-blogger.www.index.categories {dbqd.lars-blogger.www.index.categories {
			select short_name as category_short_name, name as category_name
			from pinds_blog_categories
			where package_id = :package_id
        } {} {} {} c:/web/openacs-4/packages/lars-blogger/www/index.xql}
dbqd.logger.tcl.entry-procs-oracle.logger::entry::new.insert_entry {dbqd.logger.tcl.entry-procs-oracle.logger::entry::new.insert_entry {
      begin
        :1 := logger_entry.new (
                  entry_id => :entry_id,
                  project_id => :project_id,
                  variable_id => :variable_id,
                  value => :value,
                  time_stamp => :time_stamp,
                  description => :description,
                  creation_user => :creation_user,
                  creation_ip => :creation_ip
              );
      end;
    } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/logger/tcl/entry-procs-oracle.xql}
dbqd.logger.tcl.entry-procs-oracle.logger::entry::delete.delete_entry {dbqd.logger.tcl.entry-procs-oracle.logger::entry::delete.delete_entry {
      begin
        logger_entry.del(:entry_id);
      end;
    } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/logger/tcl/entry-procs-oracle.xql}
dbqd.logger.tcl.entry-procs.logger::entry::new.insert_entry {dbqd.logger.tcl.entry-procs.logger::entry::new.insert_entry {
        select logger_entry__new (
                  :entry_id,
                  :project_id,
                  :variable_id,
                  :value,
                  :time_stamp,
                  :description,
                  :creation_user,
                  :creation_ip
              );
    } {} {} {postgresql 7.2} c:/web/openacs-4/packages/logger/tcl/entry-procs-postgresql.xql}
dbqd.logger.tcl.entry-procs.logger::entry::delete.delete_entry {dbqd.logger.tcl.entry-procs.logger::entry::delete.delete_entry {
        select logger_entry__del(:entry_id);
    } {} {} {postgresql 7.2} c:/web/openacs-4/packages/logger/tcl/entry-procs-postgresql.xql}
dbqd.logger.tcl.entry-procs.logger::entry::get.select_entry {dbqd.logger.tcl.entry-procs.logger::entry::get.select_entry {
        select le.entry_id,
               le.project_id, 
               le.variable_id,
               le.value,
               le.time_stamp,
               le.description,
               ao.creation_user,
               ao.creation_date
        from logger_entries le,
             acs_objects ao
        where le.entry_id = :entry_id
          and le.entry_id = ao.object_id
    } {} {} {} c:/web/openacs-4/packages/logger/tcl/entry-procs.xql}
dbqd.logger.tcl.entry-procs.logger::entry::edit.update_entry {dbqd.logger.tcl.entry-procs.logger::entry::edit.update_entry {
        update logger_entries
                set value = :value,
                    time_stamp = :time_stamp,
                    description = :description
           where entry_id = :entry_id
    } {} {} {} c:/web/openacs-4/packages/logger/tcl/entry-procs.xql}
dbqd.logger.tcl.package-procs-oracle.logger::package::variables_multirow.select_variables {dbqd.logger.tcl.package-procs-oracle.logger::package::variables_multirow.select_variables {
      select lv.variable_id,
             lv.name,
             lv.unit,
             lv.type
      from logger_variables lv
      where (exists (select 1
                    from logger_project_var_map lpvm,
                         logger_project_pkg_map lppm
                    where lv.variable_id = lpvm.variable_id
                      and lpvm.project_id = lppm.project_id
                      and lppm.package_id = :package_id
                   )
         or lv.package_id = :package_id
         or lv.package_id is null)
      and acs_permission.permission_p(lv.variable_id, :user_id, 'read') = 't'
         $extra_where_clause
    } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/logger/tcl/package-procs-oracle.xql}
dbqd.logger.tcl.package-procs.logger::package::variables_multirow.select_variables {dbqd.logger.tcl.package-procs.logger::package::variables_multirow.select_variables {
      select lv.variable_id,
             lv.name,
             lv.unit,
             lv.type
      from logger_variables lv
      where (exists (select 1
                    from logger_project_var_map lpvm,
                         logger_project_pkg_map lppm
                    where lv.variable_id = lpvm.variable_id
                      and lpvm.project_id = lppm.project_id
                      and lppm.package_id = :package_id
                   )
         or lv.package_id = :package_id
         or lv.package_id is null)
      and acs_permission__permission_p(lv.variable_id, :user_id, 'read') = 't'
         $extra_where_clause
    } {} {} {postgresql 7.2} c:/web/openacs-4/packages/logger/tcl/package-procs-postgresql.xql}
dbqd.logger.tcl.package-procs.logger::package::projects_only_in_package.select_projects {dbqd.logger.tcl.package-procs.logger::package::projects_only_in_package.select_projects {
      select project_id
      from logger_projects
      where exists (select 1
                    from logger_project_pkg_map
                    where package_id = :package_id
                    and project_id = logger_projects.project_id)
      and not exists (select 1 
                      from logger_project_pkg_map
                      where package_id <> :package_id
                      and project_id = logger_projects.project_id)
    } {} {} {} c:/web/openacs-4/packages/logger/tcl/package-procs.xql}
dbqd.logger.tcl.package-procs.logger::package::all_projects_in_package.select_projects {dbqd.logger.tcl.package-procs.logger::package::all_projects_in_package.select_projects {
      select project_id
      from logger_project_pkg_map
      where package_id = :package_id      
    } {} {} {} c:/web/openacs-4/packages/logger/tcl/package-procs.xql}
dbqd.logger.tcl.project-procs-oracle.logger::project::insert.insert_project {dbqd.logger.tcl.project-procs-oracle.logger::project::insert.insert_project {
      begin
        :1 := logger_project.new (
                project_id => :project_id,
                name => :name,
                description => :description,
                project_lead => :project_lead,
                creation_user => :creation_user,
                creation_ip => :creation_ip,
                package_id => :package_id               
              );
      end;
    } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/logger/tcl/project-procs-oracle.xql}
dbqd.logger.tcl.project-procs-oracle.logger::project::delete.delete_project {dbqd.logger.tcl.project-procs-oracle.logger::project::delete.delete_project {
        begin
          logger_project.del(:project_id);
        end;
    } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/logger/tcl/project-procs-oracle.xql}
dbqd.logger.tcl.project-procs.logger::project::insert.insert_project {dbqd.logger.tcl.project-procs.logger::project::insert.insert_project {
        select  logger_project__new (
                :project_id,
                :name,
                :description,
                :project_lead,
                :creation_user,
                :creation_ip,
                :package_id               
              );
    } {} {} {postgresql 7.2} c:/web/openacs-4/packages/logger/tcl/project-procs-postgresql.xql}
dbqd.logger.tcl.project-procs.logger::project::delete.delete_project {dbqd.logger.tcl.project-procs.logger::project::delete.delete_project {
          select logger_project__del(:project_id);
    } {} {} {postgresql 7.2} c:/web/openacs-4/packages/logger/tcl/project-procs-postgresql.xql}
dbqd.logger.tcl.project-procs.logger::project::get.select_project {dbqd.logger.tcl.project-procs.logger::project::get.select_project {
        select project_id,
               name,
               description,
               active_p,
               project_lead
        from logger_projects
       where project_id = :project_id
    } {} {} {} c:/web/openacs-4/packages/logger/tcl/project-procs.xql}
dbqd.logger.tcl.project-procs.logger::project::map_variable.insert_mapping {dbqd.logger.tcl.project-procs.logger::project::map_variable.insert_mapping {
        insert into logger_project_var_map (project_id, variable_id, primary_p)
                values (:project_id, :variable_id, :primary_p)
    } {} {} {} c:/web/openacs-4/packages/logger/tcl/project-procs.xql}
dbqd.logger.tcl.project-procs.logger::project::unmap_variable.delete_mapping {dbqd.logger.tcl.project-procs.logger::project::unmap_variable.delete_mapping {
        delete from logger_project_var_map
               where project_id = :project_id
                 and variable_id = :variable_id
    } {} {} {} c:/web/openacs-4/packages/logger/tcl/project-procs.xql}
dbqd.logger.tcl.project-procs.logger::project::set_primary_variable.clear_old {dbqd.logger.tcl.project-procs.logger::project::set_primary_variable.clear_old {
      update logger_project_var_map
                set primary_p = 'f'
      where project_id = :project_id
    } {} {} {} c:/web/openacs-4/packages/logger/tcl/project-procs.xql}
dbqd.logger.tcl.project-procs.logger::project::set_primary_variable.update_new {dbqd.logger.tcl.project-procs.logger::project::set_primary_variable.update_new {
      update logger_project_var_map
                set primary_p = 't'
      where project_id = :project_id
        and variable_id = :variable_id
    } {} {} {} c:/web/openacs-4/packages/logger/tcl/project-procs.xql}
dbqd.logger.tcl.project-procs.logger::project::map_variable.count_primary_p {dbqd.logger.tcl.project-procs.logger::project::map_variable.count_primary_p {
        select count(*)
        from logger_project_var_map
        where project_id = :project_id
        and primary_p = 't'    
    } {} {} {} c:/web/openacs-4/packages/logger/tcl/project-procs.xql}
dbqd.logger.tcl.project-procs.logger::project::get_primary_variable.select_primary_variable {dbqd.logger.tcl.project-procs.logger::project::get_primary_variable.select_primary_variable {
        select variable_id
        from logger_project_var_map
        where project_id = :project_id
        and primary_p = 't'
    } {} {} {} c:/web/openacs-4/packages/logger/tcl/project-procs.xql}
dbqd.logger.tcl.project-procs.logger::project::get_variables.select_variables {dbqd.logger.tcl.project-procs.logger::project::get_variables.select_variables {
      select variable_id
      from logger_project_var_map
      where project_id = :project_id
    } {} {} {} c:/web/openacs-4/packages/logger/tcl/project-procs.xql}
dbqd.logger.tcl.project-procs.logger::project::edit.update_project {dbqd.logger.tcl.project-procs.logger::project::edit.update_project {
        update logger_projects
                set name = :name,
                    description = :description, 
                    project_lead = :project_lead,
                    active_p = :active_p
        where project_id = :project_id
    } {} {} {} c:/web/openacs-4/packages/logger/tcl/project-procs.xql}
dbqd.logger.tcl.project-procs.logger::project::set_active_p.update_project {dbqd.logger.tcl.project-procs.logger::project::set_active_p.update_project {
        update logger_projects
        set    active_p = :active_p
        where  project_id = :project_id
    } {} {} {} c:/web/openacs-4/packages/logger/tcl/project-procs.xql}
dbqd.logger.tcl.project-procs.logger::project::users_get_options.select_project_leads {dbqd.logger.tcl.project-procs.logger::project::users_get_options.select_project_leads {
        select acs_object__name(p.project_lead), project_lead
        from   logger_projects p,
               logger_project_pkg_map ppm
        where  ppm.project_id = p.project_id
        and    ppm.package_id = :package_id
    } {} {} {} c:/web/openacs-4/packages/logger/tcl/project-procs.xql}
dbqd.logger.tcl.projection-procs.logger::projection::new.insert_projection {dbqd.logger.tcl.projection-procs.logger::projection::new.insert_projection {
      insert into logger_projections (projection_id, 
                                      project_id, 
                                      variable_id, 
                                      start_time, 
                                      end_time, 
                                      value,
                                      name,
                                      description)
           values (:projection_id, 
                   :project_id, 
                   :variable_id, 
                   to_date(:start_time, 'YYYY-MM-DD'), 
                   to_date(:end_time, 'YYYY-MM-DD'),
                   :value, 
                   :name, 
                   :description)
    } {} {} {} c:/web/openacs-4/packages/logger/tcl/projection-procs.xql}
dbqd.logger.tcl.projection-procs.logger::projection::edit.update_projection {dbqd.logger.tcl.projection-procs.logger::projection::edit.update_projection {
        update logger_projections
            set variable_id = :variable_id,
            start_time = to_date(:start_time, 'YYYY-MM-DD'),
            end_time = to_date(:end_time, 'YYYY-MM-DD'),
            value = :value,
            name = :name,
            description = :description
        where projection_id = :projection_id
    } {} {} {} c:/web/openacs-4/packages/logger/tcl/projection-procs.xql}
dbqd.logger.tcl.projection-procs.logger::projection::delete.delete_projection {dbqd.logger.tcl.projection-procs.logger::projection::delete.delete_projection {
        delete from logger_projections
        where projection_id = :projection_id
    } {} {} {} c:/web/openacs-4/packages/logger/tcl/projection-procs.xql}
dbqd.logger.tcl.projection-procs.logger::projection::get.select_projection {dbqd.logger.tcl.projection-procs.logger::projection::get.select_projection {
        select projection_id, 
               project_id, 
               variable_id, 
               to_char(start_time, 'YYYY-MM-DD') as start_time, 
               to_char(end_time, 'YYYY-MM-DD') as end_time, 
               value,
               name,
               description
        from logger_projections
        where projection_id = :projection_id
    } {} {} {} c:/web/openacs-4/packages/logger/tcl/projection-procs.xql}
dbqd.logger.tcl.ui-procs.logger::ui::variable_options.variable_options {dbqd.logger.tcl.ui-procs.logger::ui::variable_options.variable_options {
        select lv.name,
               lv.variable_id
        from   logger_variables lv,
               logger_project_var_map lpvm
        where  lpvm.variable_id = lv.variable_id
        and    lpvm.project_id = :project_id
    } {} {} {} c:/web/openacs-4/packages/logger/tcl/ui-procs.xql}
dbqd.logger.tcl.ui-procs.logger::ui::project_options.project_options {dbqd.logger.tcl.ui-procs.logger::ui::project_options.project_options {
        select lp.name, 
               lp.project_id
        from   logger_projects lp,
               logger_project_pkg_map lppm
        where  lp.project_id = lppm.project_id
        and    lppm.package_id = :package_id
        order  by name
    } {} {} {} c:/web/openacs-4/packages/logger/tcl/ui-procs.xql}
dbqd.logger.tcl.variable-procs-oracle.logger::variable::new.insert_variable {dbqd.logger.tcl.variable-procs-oracle.logger::variable::new.insert_variable {
      begin
        :1 := logger_variable.new (
                variable_id => :variable_id,
                name => :name,
                unit => :unit,
                type => :type,
                creation_user => :creation_user,
                creation_ip => :creation_ip,
                package_id => :package_id               
              );
      end;
    } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/logger/tcl/variable-procs-oracle.xql}
dbqd.logger.tcl.variable-procs-oracle.logger::variable::delete.delete_variable {dbqd.logger.tcl.variable-procs-oracle.logger::variable::delete.delete_variable {
        begin
          logger_variable.del(:variable_id);
        end;
    } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/logger/tcl/variable-procs-oracle.xql}
dbqd.logger.tcl.variable-procs-oracle.logger::variable::get_default_variable_id.select_first_variable_id {dbqd.logger.tcl.variable-procs-oracle.logger::variable::get_default_variable_id.select_first_variable_id {
        select q.*
        from   (select variable_id 
                from   logger_variables 
                order  by variable_id) q
        where  rownum = 1
    } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/logger/tcl/variable-procs-oracle.xql}
dbqd.logger.tcl.variable-procs.logger::variable::new.insert_variable {dbqd.logger.tcl.variable-procs.logger::variable::new.insert_variable {
        select logger_variable__new (
                :variable_id,
                :name,
                :unit,
                :type,
                :creation_user,
                :creation_ip,
                :package_id               
              );
    } {} {} {postgresql 7.2} c:/web/openacs-4/packages/logger/tcl/variable-procs-postgresql.xql}
dbqd.logger.tcl.variable-procs.logger::variable::delete.delete_variable {dbqd.logger.tcl.variable-procs.logger::variable::delete.delete_variable {
          select logger_variable__del(:variable_id);
    } {} {} {postgresql 7.2} c:/web/openacs-4/packages/logger/tcl/variable-procs-postgresql.xql}
dbqd.logger.tcl.variable-procs.logger::variable::get_default_variable_id.select_first_variable_id {dbqd.logger.tcl.variable-procs.logger::variable::get_default_variable_id.select_first_variable_id {
        select variable_id 
        from   logger_variables 
        order  by variable_id 
        limit  1  
    } {} {} {postgresql 7.2} c:/web/openacs-4/packages/logger/tcl/variable-procs-postgresql.xql}
dbqd.logger.tcl.variable-procs.logger::variable::edit.update_variable {dbqd.logger.tcl.variable-procs.logger::variable::edit.update_variable {
      update logger_variables
             set name = :name,
                 unit = :unit,
                 type = :type
        where variable_id = :variable_id
    } {} {} {} c:/web/openacs-4/packages/logger/tcl/variable-procs.xql}
dbqd.logger.tcl.variable-procs.logger::variable::get.select_variable {dbqd.logger.tcl.variable-procs.logger::variable::get.select_variable {
        select variable_id,
               name,
               unit,
               type
        from logger_variables
        where variable_id = :variable_id
    } {} {} {} c:/web/openacs-4/packages/logger/tcl/variable-procs.xql}
dbqd.logger.www.admin.entries-table-oracle.select_entries {dbqd.logger.www.admin.entries-table-oracle.select_entries {
	select le.entry_id as id,
           acs_permission.permission_p(le.entry_id, :user_id, 'delete') as delete_p,
           le.time_stamp,
           lv.name as variable_name,
           le.value,
           lv.unit,
           le.description,
           lp.name as project_name,
           submitter.first_names || ' ' || submitter.last_name as user_name
        from logger_entries le,
           logger_variables lv,
           logger_projects lp,
           acs_objects ao,
           cc_users submitter
        where le.variable_id = lv.variable_id
           and le.project_id = lp.project_id
      	   and ao.object_id = le.entry_id
           and ao.creation_user = submitter.user_id
    [ad_decode $where_clauses "" "" "and [join $where_clauses "\n    and "]"]
        order by le.time_stamp desc, ao.creation_date desc
    } {} {} {} c:/web/openacs-4/packages/logger/www/admin/entries-table-oracle.xql}
dbqd.logger.www.admin.entries-table.select_entries {dbqd.logger.www.admin.entries-table.select_entries {
	select le.entry_id as id,
           acs_permission__permission_p(le.entry_id, :user_id, 'delete') as delete_p,
           le.time_stamp,
           lv.name as variable_name,
           le.value,
           lv.unit,
           le.description,
           lp.name as project_name,
           submitter.first_names || ' ' || submitter.last_name as user_name
        from logger_entries le,
           logger_variables lv,
           logger_projects lp,
           acs_objects ao,
           cc_users submitter
        where le.variable_id = lv.variable_id
           and le.project_id = lp.project_id
      	   and ao.object_id = le.entry_id
           and ao.creation_user = submitter.user_id
	[ad_decode $where_clauses "" "" "and [join $where_clauses "\n    and "]"]
        order by le.time_stamp desc, ao.creation_date desc
    } {} {} {postgresql 7.2} c:/web/openacs-4/packages/logger/www/admin/entries-table-postgresql.xql}
dbqd.logger.www.admin.index-oracle.select_projects {dbqd.logger.www.admin.index-oracle.select_projects {
       select lp.project_id,
              lp.name,
              lp.description,
              lp.active_p,
              lp.project_lead as project_lead_id,
              cc_users.first_names || ' ' || cc_users.last_name as project_lead_name,
              acs_permission.permission_p(lp.project_id, :user_id, 'admin') as admin_p
       from logger_project_pkg_map lppm,
            logger_projects lp,
            cc_users
       where lppm.project_id = lp.project_id
         and lppm.package_id = :package_id
         and cc_users.user_id = lp.project_lead
       order by name
    } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/logger/www/admin/index-oracle.xql}
dbqd.logger.www.admin.index-oracle.select_variables {dbqd.logger.www.admin.index-oracle.select_variables {
        select lv.variable_id,
             lv.name,
             lv.unit,
             lv.type,
             acs_permission.permission_p(lv.variable_id, :user_id, 'admin') as admin_p
        from logger_variables lv
        where (exists (select 1
                         from logger_project_var_map lpvm,
                         logger_project_pkg_map lppm
                       where lv.variable_id = lpvm.variable_id
                         and lpvm.project_id = lppm.project_id
                         and lppm.package_id = :package_id
                   )
        or lv.package_id = :package_id
        or lv.package_id is null)
        order  by lv.name
    } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/logger/www/admin/index-oracle.xql}
dbqd.logger.www.admin.index-oracle.select_mappable_projects {dbqd.logger.www.admin.index-oracle.select_mappable_projects {
        select p.project_id,
               p.name
        from   logger_projects p
        where  not exists (select 1
                           from   logger_project_pkg_map ppm
                           where  ppm.project_id = p.project_id
                           and    ppm.package_id = :package_id)
        and    acs_permission.permission_p(p.project_id, :user_id, 'read') = 't'
        order  by p.name
    } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/logger/www/admin/index-oracle.xql}
dbqd.logger.www.admin.index.select_projects {dbqd.logger.www.admin.index.select_projects {
       select lp.project_id,
              lp.name,
              lp.description,
              lp.active_p,
              lp.project_lead as project_lead_id,
              cc_users.first_names || ' ' || cc_users.last_name as project_lead_name,
              acs_permission__permission_p(lp.project_id, :user_id, 'admin') as admin_p
       from logger_project_pkg_map lppm,
            logger_projects lp,
            cc_users
       where lppm.project_id = lp.project_id
         and lppm.package_id = :package_id
         and cc_users.user_id = lp.project_lead
       order by name
    } {} {} {postgresql 7.1} c:/web/openacs-4/packages/logger/www/admin/index-postgresql.xql}
dbqd.logger.www.admin.index.select_variables {dbqd.logger.www.admin.index.select_variables {
        select lv.variable_id,
             lv.name,
             lv.unit,
             lv.type,
             acs_permission__permission_p(lv.variable_id, :user_id, 'admin') as admin_p
        from logger_variables lv
        where (exists (select 1
                         from logger_project_var_map lpvm,
                         logger_project_pkg_map lppm
                       where lv.variable_id = lpvm.variable_id
                         and lpvm.project_id = lppm.project_id
                         and lppm.package_id = :package_id
                   )
        or lv.package_id = :package_id
        or lv.package_id is null)    
        order  by lv.name
    } {} {} {postgresql 7.1} c:/web/openacs-4/packages/logger/www/admin/index-postgresql.xql}
dbqd.logger.www.admin.index.select_mappable_projects {dbqd.logger.www.admin.index.select_mappable_projects {
        select p.project_id,
               p.name
        from   logger_projects p
        where  not exists (select 1
                           from   logger_project_pkg_map ppm
                           where  ppm.project_id = p.project_id
                           and    ppm.package_id = :package_id)
        and    acs_permission__permission_p(p.project_id, :user_id, 'read') = 't'
        order  by p.name
    } {} {} {postgresql 7.1} c:/web/openacs-4/packages/logger/www/admin/index-postgresql.xql}
dbqd.logger.www.admin.project-oracle.n_can_be_mapped {dbqd.logger.www.admin.project-oracle.n_can_be_mapped {
        select count(*)
        from logger_variables lv
        where (exists (select 1
                    from logger_project_var_map lpvm,
                         logger_project_pkg_map lppm
                    where lv.variable_id = lpvm.variable_id
                      and lpvm.project_id = lppm.project_id
                      and lppm.package_id = :package_id
                   )
         or lv.package_id = :package_id
         or lv.package_id is null)
        and not exists (select 1
                          from logger_project_var_map lpvm
                          where lpvm.project_id = :project_id
                            and lpvm.variable_id = lv.variable_id
                          )
        and acs_permission.permission_p(lv.variable_id, :user_id, 'read') = 't'    
    } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/logger/www/admin/project-oracle.xql}
dbqd.logger.www.admin.project-oracle.select_projections {dbqd.logger.www.admin.project-oracle.select_projections {
        select lpe.projection_id,
               lpe.name,
               lpe.description,
               lpe.value,
               lpo.name as project_name,
               lv.name as variable_name,
               to_char(lpe.start_time, 'YYYY-MM-DD') as start_day,
               to_char(lpe.end_time, 'YYYY-MM-DD') as end_day,
               acs_permission.permission_p(lpo.project_id, :user_id, 'admin') as admin_p
        from logger_projections lpe,
             logger_projects lpo,
             logger_variables lv
        where lpe.project_id = :project_id
          and lpe.project_id = lpo.project_id
          and lpe.variable_id = lv.variable_id    
    } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/logger/www/admin/project-oracle.xql}
dbqd.logger.www.admin.project.n_can_be_mapped {dbqd.logger.www.admin.project.n_can_be_mapped {
        select count(*)
        from logger_variables lv
        where (exists (select 1
                    from logger_project_var_map lpvm,
                         logger_project_pkg_map lppm
                    where lv.variable_id = lpvm.variable_id
                      and lpvm.project_id = lppm.project_id
                      and lppm.package_id = :package_id
                   )
         or lv.package_id = :package_id
         or lv.package_id is null)
        and not exists (select 1
                          from logger_project_var_map lpvm
                          where lpvm.project_id = :project_id
                            and lpvm.variable_id = lv.variable_id
                          )
        and acs_permission__permission_p(lv.variable_id, :user_id, 'read') = 't'    
    } {} {} {postgresql 7.1} c:/web/openacs-4/packages/logger/www/admin/project-postgresql.xql}
dbqd.logger.www.admin.project.select_projections {dbqd.logger.www.admin.project.select_projections {
        select lpe.projection_id,
               lpe.name,
               lpe.description,
               lpe.value,
               lpo.name as project_name,
               lv.name as variable_name,
               to_char(lpe.start_time, 'YYYY-MM-DD') as start_day,
               to_char(lpe.end_time, 'YYYY-MM-DD') as end_day,
               acs_permission__permission_p(lpo.project_id, :user_id, 'admin') as admin_p
        from logger_projections lpe,
             logger_projects lpo,
             logger_variables lv
        where lpe.project_id = :project_id
          and lpe.project_id = lpo.project_id
          and lpe.variable_id = lv.variable_id    
    } {} {} {postgresql 7.1} c:/web/openacs-4/packages/logger/www/admin/project-postgresql.xql}
dbqd.logger.www.admin.project.project_exists_p {dbqd.logger.www.admin.project.project_exists_p {
        select count(*)
        from logger_projects
        where project_id = :project_id
    } {} {} {} c:/web/openacs-4/packages/logger/www/admin/project.xql}
dbqd.logger.www.admin.project.variables_in_project {dbqd.logger.www.admin.project.variables_in_project {
        select lv.variable_id,
               lv.name,
               lpvm.primary_p
          from logger_project_var_map lpvm,
               logger_variables lv
          where lpvm.variable_id = lv.variable_id
            and lpvm.project_id = :project_id
    } {} {} {} c:/web/openacs-4/packages/logger/www/admin/project.xql}
dbqd.logger.www.admin.projection.select_project_info {dbqd.logger.www.admin.projection.select_project_info {
        select p.project_id,
               p.name as project_name
        from   logger_projects p,
               logger_projections pn
        where  p.project_id = pn.project_id
        and    pn.projection_id = :projection_id
    } {} {} {} c:/web/openacs-4/packages/logger/www/admin/projection.xql}
dbqd.logger.www.admin.projection.select_projections {dbqd.logger.www.admin.projection.select_projections {
	  select lpe.name,
        	 lpe.description,
       		 lpe.project_id,
	         lpe.variable_id,
         	 lpe.value,
         	 to_char(lpe.start_time, 'YYYY MM DD') as start_day,
          	 to_char(lpe.end_time, 'YYYY MM DD') as end_day,
	         lpo.name as project
	  from logger_projections lpe,
	         logger_projects lpo
	  where lpe.projection_id = :projection_id
		 and lpe.project_id = lpo.project_id
    } {} {} {} c:/web/openacs-4/packages/logger/www/admin/projection.xql}
dbqd.logger.www.admin.variable-delete.n_log_entries {dbqd.logger.www.admin.variable-delete.n_log_entries {
    select count(*)
    from logger_entries
    where variable_id = :variable_id
    } {} {} {} c:/web/openacs-4/packages/logger/www/admin/variable-delete.xql}
dbqd.logger.www.admin.variable.select_variable {dbqd.logger.www.admin.variable.select_variable {
	  select name,
	         unit,
	         type
	  from logger_variables
	  where variable_id = :variable_id    
    } {} {} {} c:/web/openacs-4/packages/logger/www/admin/variable.xql}
dbqd.logger.www.index.last_logged_variable_id {dbqd.logger.www.index.last_logged_variable_id {
        select variable_id
        from logger_entries le,
             acs_objects ao
        where ao.creation_date = (select max(ao.creation_date)
                               from logger_entries le,
                                    acs_objects ao
                               where ao.object_id = le.entry_id
                               [ad_decode $project_clause "" "" "and $project_clause"]
                              )
          and ao.object_id = le.entry_id
        [ad_decode $project_clause "" "" "and $project_clause"]
    } {} {} {} c:/web/openacs-4/packages/logger/www/index.xql}
dbqd.logger.www.index.select_projects {dbqd.logger.www.index.select_projects {
    	    select lp.name as label,
                       lp.project_id as project_id,
                       (select count(*) from logger_entries e where e.project_id = lp.project_id and variable_id = :variable_id) as count
    	    from   logger_projects lp,
    	           logger_project_pkg_map lppm
    	    where  lp.project_id = lppm.project_id	
    		   and lppm.package_id = :package_id
    	    order  by lp.name
    } {} {} {} c:/web/openacs-4/packages/logger/www/index.xql}
dbqd.logger.www.index.select_variables {dbqd.logger.www.index.select_variables {
    	    select lv.name || ' (' || lv.unit || ')' as name,
                   lv.variable_id as unique_id
    	    from   logger_variables lv,
    	           logger_projects lp,
    	           logger_project_var_map lpvm
    	    where  lp.project_id = lpvm.project_id
    	    and    lv.variable_id = lpvm.variable_id
            and    exists (select 1
                           from logger_project_pkg_map
                           where project_id = lp.project_id
                           and package_id = :package_id
                           )
    	    group  by lv.variable_id, lv.name, lv.unit
    } {} {} {} c:/web/openacs-4/packages/logger/www/index.xql}
dbqd.logger.www.index.select_users {dbqd.logger.www.index.select_users {
    	    select submitter.first_names || ' ' || submitter.last_name as label,
                       submitter.user_id as user_id
    	    from   cc_users submitter,
    	           logger_entries le,
    	           acs_objects ao
    	    where  ao.object_id = le.entry_id
    	    and    submitter.user_id = ao.creation_user
    	    and    exists (select 1
                               from   logger_project_pkg_map
                               where  project_id = le.project_id
                               and    package_id = :package_id)
    	    group  by submitter.user_id, submitter.first_names, submitter.last_name
    } {} {} {} c:/web/openacs-4/packages/logger/www/index.xql}
dbqd.logger.www.index.select_projections {dbqd.logger.www.index.select_projections {
        select lpe.projection_id as unique_id,
               lpe.name,
               to_char(lpe.start_time, 'YYYY-MM-DD') as start_date,
               to_char(lpe.end_time, 'YYYY-MM-DD') as end_date
        from logger_projections lpe
        where lpe.project_id = :selected_project_id
          and lpe.variable_id = :selected_variable_id
    } {} {} {} c:/web/openacs-4/packages/logger/www/index.xql}
dbqd.logger.www.lib.entries-table-oracle.select_entries {dbqd.logger.www.lib.entries-table-oracle.select_entries {
	    select le.entry_id as id,
	           acs_permission.permission_p(le.entry_id, :current_user_id, 'delete') as delete_p,
	           acs_permission.permission_p(le.entry_id, :current_user_id, 'write') as edit_p,
	           le.time_stamp,
	           to_char(le.time_stamp, 'fmDyfm fmMMfm-fmDDfm-YYYY') as time_stamp_pretty,
	           to_char(le.time_stamp, 'IW-YYYY') as time_stamp_week,
	           le.value,
	           le.description,
	           lp.name as project_name,
	           submitter.user_id,
	           submitter.first_names || ' ' || submitter.last_name as user_name
	    from logger_entries le,
	         logger_projects lp,
	         acs_objects ao,
	         cc_users submitter
	    where le.project_id = lp.project_id
	      and ao.object_id = le.entry_id
	      and ao.creation_user = submitter.user_id
	    [ad_decode $where_clauses "" "" "and [join $where_clauses "\n    and "]"]
	    order by $order_by
    } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/logger/www/lib/entries-table-oracle.xql}
dbqd.logger.www.lib.entries-table.select_entries {dbqd.logger.www.lib.entries-table.select_entries {
	    select le.entry_id as id,
	           acs_permission__permission_p(le.entry_id, :current_user_id, 'delete') as delete_p,
	           acs_permission__permission_p(le.entry_id, :current_user_id, 'write') as edit_p,
	           le.time_stamp,
	           to_char(le.time_stamp, 'fmDyfm fmMMfm-fmDDfm-YYYY') as time_stamp_pretty,
	           to_char(le.time_stamp, 'IW-YYYY') as time_stamp_week,
	           le.value,
	           le.description,
	           lp.name as project_name,
	           submitter.user_id,
	           submitter.first_names || ' ' || submitter.last_name as user_name
	    from logger_entries le,
	         logger_projects lp,
	         acs_objects ao,
	         cc_users submitter
	    where le.project_id = lp.project_id
	      and ao.object_id = le.entry_id
	      and ao.creation_user = submitter.user_id
	    [ad_decode $where_clauses "" "" "and [join $where_clauses "\n    and "]"]
	    order by $order_by
    } {} {} {postgresql 7.2} c:/web/openacs-4/packages/logger/www/lib/entries-table-postgresql.xql}
dbqd.logger.www.lib.entries-table.select_variable_info {dbqd.logger.www.lib.entries-table.select_variable_info {
	    select name,
	           unit,
	           type
	    from   logger_variables
	    where  variable_id = :selected_variable_id
    } {} {} {} c:/web/openacs-4/packages/logger/www/lib/entries-table.xql}
dbqd.logger.www.log.entry_exists_p {dbqd.logger.www.log.entry_exists_p {
        select count(*)
        from logger_entries
        where entry_id = :entry_id
    } {} {} {} c:/web/openacs-4/packages/logger/www/log.xql}
dbqd.logger.www.log.select_logger_entries {dbqd.logger.www.log.select_logger_entries {
	    select project_id,
	           variable_id,
	           value,
	           to_char(time_stamp, 'YYYY MM DD') as time_stamp,
	           description
	    from logger_entries
	    where entry_id = :entry_id
    } {} {} {} c:/web/openacs-4/packages/logger/www/log.xql}
dbqd.logger.www.log.select_variables {dbqd.logger.www.log.select_variables {
	    select lv.variable_id as unique_id,
	           lv.name || ' (' || lv.unit || ')' as name
	    from logger_variables lv,
	         logger_projects lp,
	         logger_project_var_map lpvm
	    where lp.project_id = lpvm.project_id
	      and lv.variable_id = lpvm.variable_id
	      and lp.project_id = :project_id
	    group by lv.variable_id, lv.name, lv.unit
    } {} {} {} c:/web/openacs-4/packages/logger/www/log.xql}
dbqd.monitoring.tcl.monitoring-procs-oracle.ad_monitor_top.top_misc_info_insert {dbqd.monitoring.tcl.monitoring-procs-oracle.ad_monitor_top.top_misc_info_insert {

    insert into ad_monitoring_top (
        top_id, 
        timestamp, 
        timehour, 
        load_avg_1, 
        load_avg_5, 
        load_avg_15,
        memory_real, 
        memory_free, 
        memory_swap_in_use, 
        memory_swap_free
    ) values (
        :top_id, 
        sysdate, 
        to_char(sysdate, 'HH24'), 
        :load_1, 
        :load_5, 
        :load_15,
        :memory_real, 
        :memory_free, 
        :memory_swap_in_use, 
        :memory_swap_free
    )

    } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/monitoring/tcl/monitoring-procs-oracle.xql}
dbqd.monitoring.tcl.monitoring-procs.ad_monitor_top.top_misc_info_insert {dbqd.monitoring.tcl.monitoring-procs.ad_monitor_top.top_misc_info_insert {

    insert into ad_monitoring_top (
        top_id, 
        timestamp, 
        timehour, 
        load_avg_1, 
        load_avg_5, 
        load_avg_15,
        memory_real, 
        memory_free, 
        memory_swap_in_use, 
        memory_swap_free
    ) values (
        :top_id, 
        current_timestamp, 
        to_char(current_timestamp, 'HH24')::integer, 
        :load_1, 
        :load_5, 
        :load_15,
        :memory_real, 
        :memory_free, 
        :memory_swap_in_use, 
        :memory_swap_free
    )

    } {} {} {postgresql 7.1} c:/web/openacs-4/packages/monitoring/tcl/monitoring-procs-postgresql.xql}
dbqd.monitoring.tcl.monitoring-procs.ad_monitor_top.top_proc_info_insert {dbqd.monitoring.tcl.monitoring-procs.ad_monitor_top.top_proc_info_insert {

    insert into ad_monitoring_top_proc (
        proc_id, 
        top_id, 
        pid, 
        command, 
        username, 
        threads, 
        priority, 
        nice, 
        proc_size, 
        resident_memory, 
        state, 
        cpu_total_time, 
        cpu_pct
    ) values (
        :proc_id, 
        :top_id, 
        :pid, 
        :command, 
        :username, 
        :threads, 
        :priority, 
        :nice, 
        :proc_size,  
        :resident_memory, 
        :state, 
        :cpu_total_time, 
        :cpu_pct
    ) 
      
} {} {} {} c:/web/openacs-4/packages/monitoring/tcl/monitoring-procs.xql}
dbqd.monitoring.www.index-oracle.get_package_url {dbqd.monitoring.www.index-oracle.get_package_url {

        select site_node.url(s.node_id) as url
        from site_nodes s
        where s.object_id = :dev_support_id
        and rownum = 1

    } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/monitoring/www/index-oracle.xql}
dbqd.monitoring.www.index.get_package_url {dbqd.monitoring.www.index.get_package_url {

        select site_node__url(s.node_id) as url
        from site_nodes s
        where s.object_id = :dev_support_id
        limit 1

    } {} {} {postgresql 7.1} c:/web/openacs-4/packages/monitoring/www/index-postgresql.xql}
dbqd.monitoring.www.top.details-oracle.mon_current_hour {dbqd.monitoring.www.top.details-oracle.mon_current_hour {

        select to_char(sysdate,'HH24') from dual

    } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/monitoring/www/top/details-oracle.xql}
dbqd.monitoring.www.top.details-oracle.hour_correction {dbqd.monitoring.www.top.details-oracle.hour_correction {

        + (24 - (:end_time - :current_hour)) / 24

    } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/monitoring/www/top/details-oracle.xql}
dbqd.monitoring.www.top.details-oracle.proc_query {dbqd.monitoring.www.top.details-oracle.proc_query {

  select pid, command, username, 
         $proc_time_sql,
         count(*) as count,
         round(avg(threads),0) as threads, 
         round(avg(to_number(rtrim(cpu_pct, '%'))),2) as cpu_pct
    from (select * from ad_monitoring_top_proc
           where to_number(rtrim(cpu_pct, '%')) > :min_cpu_pct) p, 
         (select * from ad_monitoring_top where $time_clause) t
    where p.top_id = t.top_id
      and $details_clause
   group by pid, command, username, $proc_group_by
   [ad_order_by_from_sort_spec $orderby $top_proc_table_def]

    } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/monitoring/www/top/details-oracle.xql}
dbqd.monitoring.www.top.details-oracle.load_and_memory_averages_sql {dbqd.monitoring.www.top.details-oracle.load_and_memory_averages_sql {

        round(nvl(avg(load_avg_1), 0),  2) as load_average, 
        round(nvl(avg(memory_free),0), -2) as memory_free_average, 
        round(nvl(avg(memory_swap_free),  0), -2) as memory_swap_free_average,
        round(nvl(avg(memory_swap_in_use),0), -2) as memory_swap_in_use_average

    } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/monitoring/www/top/details-oracle.xql}
dbqd.monitoring.www.top.details-oracle.mon_top_entries {dbqd.monitoring.www.top.details-oracle.mon_top_entries {

     select count(*) 
        from (select * from ad_monitoring_top  where $time_clause) t, 
             (select * from ad_monitoring_top_proc 
               where to_number(rtrim(cpu_pct, '%')) > :min_cpu_pct) p
      where t.top_id = p.top_id
        and $details_clause      

    } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/monitoring/www/top/details-oracle.xql}
dbqd.monitoring.www.top.details.mon_current_hour {dbqd.monitoring.www.top.details.mon_current_hour {

        select to_char(current_timestamp,'HH24')

    } {} {} {postgresql 7.1} c:/web/openacs-4/packages/monitoring/www/top/details-postgresql.xql}
dbqd.monitoring.www.top.details.hour_correction {dbqd.monitoring.www.top.details.hour_correction {

        + (24 - (:end_time ::integer - $current_hour ::integer)) / 24

    } {} {} {postgresql 7.1} c:/web/openacs-4/packages/monitoring/www/top/details-postgresql.xql}
dbqd.monitoring.www.top.details.proc_query {dbqd.monitoring.www.top.details.proc_query {

  select pid, command, username, 
         $proc_time_sql,
         count(*) as count,
         round(avg(threads),0) as threads, 
         round(avg(to_number(rtrim(cpu_pct, '%'), '9999D99')), 2) as cpu_pct
    from ( select * from ad_monitoring_top_proc 
            where to_number(rtrim(cpu_pct, '%'), '9999D99') > :min_cpu_pct ) p,
         (select * from ad_monitoring_top $time_clause) t
    where p.top_id = t.top_id
      and $details_clause
   group by pid, command, username, $proc_group_by
   [ad_order_by_from_sort_spec $orderby $top_proc_table_def]

    } {} {} {postgresql 7.1} c:/web/openacs-4/packages/monitoring/www/top/details-postgresql.xql}
dbqd.monitoring.www.top.details.load_and_memory_averages_sql {dbqd.monitoring.www.top.details.load_and_memory_averages_sql {

        round(coalesce(avg(load_avg_1), 0),  2) as load_average, 
        round(coalesce(avg(memory_free),0), -2) as memory_free_average, 
        round(coalesce(avg(memory_swap_free),  0), -2) as memory_swap_free_average,
        round(coalesce(avg(memory_swap_in_use),0), -2) as memory_swap_in_use_average

    } {} {} {postgresql 7.1} c:/web/openacs-4/packages/monitoring/www/top/details-postgresql.xql}
dbqd.monitoring.www.top.details.mon_top_entries {dbqd.monitoring.www.top.details.mon_top_entries {

     select count(*) 
        from (select * from ad_monitoring_top $time_clause) t, 
             (select * from ad_monitoring_top_proc 
               where to_number(rtrim(cpu_pct, '%'), '9999D99') > :min_cpu_pct) p
      where t.top_id = p.top_id
        and $details_clause      

    } {} {} {postgresql 7.1} c:/web/openacs-4/packages/monitoring/www/top/details-postgresql.xql}
dbqd.monitoring.www.top.details.time_clause_1 {dbqd.monitoring.www.top.details.time_clause_1 {

    where timehour >= :start_time and timehour < :end_time

    } {} {} {} c:/web/openacs-4/packages/monitoring/www/top/details.xql}
dbqd.monitoring.www.top.details.system_query {dbqd.monitoring.www.top.details.system_query {

     select $load_and_memory_averages_sql,
            count(*) as count,
            $system_time_sql
       from ad_monitoring_top $time_clause  
        and $details_clause
      group by $system_group_by
      [ad_order_by_from_sort_spec $orderbysystem $top_system_table_def]

    } {} {} {} c:/web/openacs-4/packages/monitoring/www/top/details.xql}
dbqd.monitoring.www.top.index-oracle.mon_current_hour {dbqd.monitoring.www.top.index-oracle.mon_current_hour {

        select to_char(sysdate,'HH24') from dual

    } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/monitoring/www/top/index-oracle.xql}
dbqd.monitoring.www.top.index-oracle.hour_correction {dbqd.monitoring.www.top.index-oracle.hour_correction {

        + (24 - (:end_time - :current_hour)) / 24

    } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/monitoring/www/top/index-oracle.xql}
dbqd.monitoring.www.top.index-oracle.time_clause_2 {dbqd.monitoring.www.top.index-oracle.time_clause_2 {

        and (timestamp + :n_days $hour_correction) > sysdate

    } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/monitoring/www/top/index-oracle.xql}
dbqd.monitoring.www.top.index-oracle.avg_proc_query {dbqd.monitoring.www.top.index-oracle.avg_proc_query {

  select pid, command, username,
         count(*) as count,
         $hour_sql as timestamp,
         round(avg(threads)) as threads,
         round(avg(to_number(rtrim(cpu_pct, '%'))), 2) as cpu_pct
    from ( select * from ad_monitoring_top $time_clause ) t, 
         ( select * from ad_monitoring_top_proc 
            where to_number(rtrim(cpu_pct, '%')) > :min_cpu_pct ) p
   where p.top_id = t.top_id
   group by pid, command, username, $hour_sql
   [ad_order_by_from_sort_spec $orderby $top_proc_avg_table_def] 

    } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/monitoring/www/top/index-oracle.xql}
dbqd.monitoring.www.top.index-oracle.load_and_memory_averages_sql {dbqd.monitoring.www.top.index-oracle.load_and_memory_averages_sql {

        round(nvl(avg(load_avg_1), 0),  2) as load_average, 
        round(nvl(avg(memory_free),0), -2) as memory_free_average, 
        round(nvl(avg(memory_swap_free),  0), -2) as memory_swap_free_average,
        round(nvl(avg(memory_swap_in_use),0), -2) as memory_swap_in_use_average

    } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/monitoring/www/top/index-oracle.xql}
dbqd.monitoring.www.top.index-oracle.num_days_for_query {dbqd.monitoring.www.top.index-oracle.num_days_for_query {

    select round(max(timestamp) - min(timestamp) + 0.5) 
                  from ad_monitoring_top $time_clause

    } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/monitoring/www/top/index-oracle.xql}
dbqd.monitoring.www.top.index.mon_current_hour {dbqd.monitoring.www.top.index.mon_current_hour {

        select to_char(current_timestamp,'HH24')

    } {} {} {postgresql 7.1} c:/web/openacs-4/packages/monitoring/www/top/index-postgresql.xql}
dbqd.monitoring.www.top.index.hour_correction {dbqd.monitoring.www.top.index.hour_correction {

        + (interval '24 hours' - (interval '$end_time hours' - interval '$current_hour hours')) 

    } {} {} {postgresql 7.1} c:/web/openacs-4/packages/monitoring/www/top/index-postgresql.xql}
dbqd.monitoring.www.top.index.time_clause_2 {dbqd.monitoring.www.top.index.time_clause_2 {

        and (timestamp + interval '$n_days days' $hour_correction) > current_timestamp

    } {} {} {postgresql 7.1} c:/web/openacs-4/packages/monitoring/www/top/index-postgresql.xql}
dbqd.monitoring.www.top.index.avg_proc_query {dbqd.monitoring.www.top.index.avg_proc_query {

  select pid, command, username,
         count(*) as count,
         $hour_sql as timestamp,
         round(avg(threads)) as threads,
         round(avg(to_number(rtrim(cpu_pct, '%'), '9999D99')), 2) as cpu_pct
    from ( select * from ad_monitoring_top $time_clause ) t, 
         ( select * from ad_monitoring_top_proc 
            where to_number(rtrim(cpu_pct, '%'), '9999D99') > :min_cpu_pct ) p
   where p.top_id = t.top_id
   group by pid, command, username, $hour_sql
   [ad_order_by_from_sort_spec $orderby $top_proc_avg_table_def] 

    } {} {} {postgresql 7.1} c:/web/openacs-4/packages/monitoring/www/top/index-postgresql.xql}
dbqd.monitoring.www.top.index.load_and_memory_averages_sql {dbqd.monitoring.www.top.index.load_and_memory_averages_sql {

        round(coalesce(avg(load_avg_1), 0),  2) as load_average, 
        round(coalesce(avg(memory_free),0), -2) as memory_free_average, 
        round(coalesce(avg(memory_swap_free),  0), -2) as memory_swap_free_average,
        round(coalesce(avg(memory_swap_in_use),0), -2) as memory_swap_in_use_average

    } {} {} {postgresql 7.1} c:/web/openacs-4/packages/monitoring/www/top/index-postgresql.xql}
dbqd.monitoring.www.top.index.num_days_for_query {dbqd.monitoring.www.top.index.num_days_for_query {

    select max(timestamp) - min(timestamp) + '12 hours'::interval
                  from ad_monitoring_top $time_clause

    } {} {} {postgresql 7.1} c:/web/openacs-4/packages/monitoring/www/top/index-postgresql.xql}
dbqd.monitoring.www.top.index.time_clause_1 {dbqd.monitoring.www.top.index.time_clause_1 {

    where timehour >= :start_time and timehour < :end_time

    } {} {} {} c:/web/openacs-4/packages/monitoring/www/top/index.xql}
dbqd.monitoring.www.top.index.hour_sql {dbqd.monitoring.www.top.index.hour_sql {

    to_char(timestamp, 'MM/DD HH24') || ':00'

    } {} {} {} c:/web/openacs-4/packages/monitoring/www/top/index.xql}
dbqd.monitoring.www.top.index.day_sql {dbqd.monitoring.www.top.index.day_sql {

    to_char(timestamp, 'Mon DD')

    } {} {} {} c:/web/openacs-4/packages/monitoring/www/top/index.xql}
dbqd.monitoring.www.top.index.avg_system_query {dbqd.monitoring.www.top.index.avg_system_query {

  select $load_and_memory_averages_sql,
         count(*) as count,
         $day_sql as day
    from ad_monitoring_top
         $time_clause
   group by $day_sql
   [ad_order_by_from_sort_spec $orderbysystem $top_system_avg_table_def] 

    } {} {} {} c:/web/openacs-4/packages/monitoring/www/top/index.xql}
dbqd.news.tcl.news-procs-oracle.news_items_archive.news_item_archive {dbqd.news.tcl.news-procs-oracle.news_items_archive.news_item_archive {
      
	    begin
	    news.archive(
	        item_id => :id,
	        archive_date => :when);
	    end;
	
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/news/tcl/news-procs-oracle.xql}
dbqd.news.tcl.news-procs-oracle.news_items_make_permanent.news_item_make_permanent {dbqd.news.tcl.news-procs-oracle.news_items_make_permanent.news_item_make_permanent {
      
	    begin
	        news.make_permanent(:id);
	    end;
	
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/news/tcl/news-procs-oracle.xql}
dbqd.news.tcl.news-procs-oracle.news_items_delete.news_item_delete {dbqd.news.tcl.news-procs-oracle.news_items_delete.news_item_delete {
      
	    begin
	        news.del(:id);
	    end;
	
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/news/tcl/news-procs-oracle.xql}
dbqd.news.tcl.news-procs-oracle.news_util_get_url.get_url_stub {dbqd.news.tcl.news-procs-oracle.news_util_get_url.get_url_stub {

	    select site_node.url(node_id) as url_stub
            from site_nodes
            where object_id=:package_id      
            and rownum = 1
	
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/news/tcl/news-procs-oracle.xql}
dbqd.news.tcl.news-procs.news_items_archive.news_item_archive {dbqd.news.tcl.news-procs.news_items_archive.news_item_archive {

          select news__archive(
	      :id, -- item_id
	      :when -- archive_date
	  );
	
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/news/tcl/news-procs-postgresql.xql}
dbqd.news.tcl.news-procs.news_items_make_permanent.news_item_make_permanent {dbqd.news.tcl.news-procs.news_items_make_permanent.news_item_make_permanent {

          select news__make_permanent(:id);
	
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/news/tcl/news-procs-postgresql.xql}
dbqd.news.tcl.news-procs.news_items_delete.news_item_delete {dbqd.news.tcl.news-procs.news_items_delete.news_item_delete {

          select news__delete(:id);
	
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/news/tcl/news-procs-postgresql.xql}
dbqd.news.tcl.news-procs.news_util_get_url.get_url_stub {dbqd.news.tcl.news-procs.news_util_get_url.get_url_stub {

	  select site_node__url(node_id) as url_stub
          from site_nodes
          where object_id=:package_id      
          limit 1
	
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/news/tcl/news-procs-postgresql.xql}
dbqd.news.tcl.news-procs.news__url.get_item_id {dbqd.news.tcl.news-procs.news__url.get_item_id {

	select item_id
        from cr_revisions
        where revision_id=:object_id

      } {} {} {} c:/web/openacs-4/packages/news/tcl/news-procs.xql}
dbqd.news.tcl.news-procs.news__url.get_package_id {dbqd.news.tcl.news-procs.news__url.get_package_id {
	select package_id
	from cr_news
	where news_id=:object_id
	} {} {} {} c:/web/openacs-4/packages/news/tcl/news-procs.xql}
dbqd.news.tcl.test.news-db-test-init-oracle._news__i_mount-news-package.get-site-nodes {dbqd.news.tcl.test.news-db-test-init-oracle._news__i_mount-news-package.get-site-nodes {
    select node_id, object_id, site_node.url(node_id) as url from site_nodes
  } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/news/tcl/test/news-db-test-init-oracle.xql}
dbqd.news.tcl.test.news-db-test-init-oracle._news__i_mount-news-package.package-delete {dbqd.news.tcl.test.news-db-test-init-oracle._news__i_mount-news-package.package-delete {
    begin
      apm_package.del(:p_package_id);
    end;
  } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/news/tcl/test/news-db-test-init-oracle.xql}
dbqd.news.tcl.test.news-db-test-init-oracle._news__d_mount-news-package.package-delete {dbqd.news.tcl.test.news-db-test-init-oracle._news__d_mount-news-package.package-delete {
    begin
      apm_package.del(:p_package_id);
    end;
  } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/news/tcl/test/news-db-test-init-oracle.xql}
dbqd.news.tcl.test.news-db-test-init-oracle._news__c_db-news-globals.get_cr-root-folder {dbqd.news.tcl.test.news-db-test-init-oracle._news__c_db-news-globals.get_cr-root-folder {
    select content_item.get_root_folder from dual
  } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/news/tcl/test/news-db-test-init-oracle.xql}
dbqd.news.tcl.test.news-db-test-init-oracle._news__c_db-news-item-create.item-create {dbqd.news.tcl.test.news-db-test-init-oracle._news__c_db-news-item-create.item-create {
    begin
      :1 := news.new(
        text => :p_text,
        title => :p_title,
        package_id => :p_package_id,
        archive_date => :p_archive_date,
        approval_user => :p_approval_user,
        approval_date => :p_approval_date,
        approval_ip   => :p_approval_ip,
        is_live_p     => :p_is_live
      );
    end;
  } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/news/tcl/test/news-db-test-init-oracle.xql}
dbqd.news.tcl.test.news-db-test-init-oracle._news__c_db-news-revision-delete.revision-delete {dbqd.news.tcl.test.news-db-test-init-oracle._news__c_db-news-revision-delete.revision-delete {
    begin
      news.revision_delete(:p_revision_id);
    end;
  } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/news/tcl/test/news-db-test-init-oracle.xql}
dbqd.news.tcl.test.news-db-test-init-oracle._news__c_db-news-revision-create.revision-create {dbqd.news.tcl.test.news-db-test-init-oracle._news__c_db-news-revision-create.revision-create {
    begin
      :1 := news.revision_new(
        item_id => :p_item_id,
        text => :p_text,
        title => :p_title,
        description => :p_description,
        package_id => :p_package_id,
        archive_date =>  :p_archive_date,
        approval_user => :p_approval_user,
        approval_date => :p_approval_date,
        approval_ip   => :p_approval_ip,
        make_active_revision_p => :p_make_active_revision_p
      );
    end;
  } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/news/tcl/test/news-db-test-init-oracle.xql}
dbqd.news.tcl.test.news-db-test-init-oracle._news__c_db-news-get-live-revision.get-live-revision {dbqd.news.tcl.test.news-db-test-init-oracle._news__c_db-news-get-live-revision.get-live-revision {
    begin
      :1 := content_item.get_live_revision(:p_item_id);
    end;
  } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/news/tcl/test/news-db-test-init-oracle.xql}
dbqd.news.tcl.test.news-db-test-init-oracle._news__c_db-news-get-latest-revision.get-latest-revision {dbqd.news.tcl.test.news-db-test-init-oracle._news__c_db-news-get-latest-revision.get-latest-revision {
    begin
      :1 := content_item.get_latest_revision(:p_item_id);
    end;
  } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/news/tcl/test/news-db-test-init-oracle.xql}
dbqd.news.tcl.test.news-db-test-init-oracle._news__c_db-news-set-approve.set-approve-default {dbqd.news.tcl.test.news-db-test-init-oracle._news__c_db-news-set-approve.set-approve-default {
      begin
        news.set_approve(revision_id =>     :p_revision_id,
                         approve_p =>       :p_approve_p);
      end;
  } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/news/tcl/test/news-db-test-init-oracle.xql}
dbqd.news.tcl.test.news-db-test-init-oracle._news__c_db-news-set-approve.set-approve {dbqd.news.tcl.test.news-db-test-init-oracle._news__c_db-news-set-approve.set-approve {
      begin
        news.set_approve(revision_id =>     :p_revision_id,
                         approve_p =>       :p_approve_p,
                         publish_date =>    :p_publish_date,
                         archive_date =>    :p_archive_date,
                         approval_user =>   :p_approval_user,
                         approval_date =>   :p_approval_date,
                         approval_ip   =>   :p_approval_ip,
                         live_revision_p => :p_live_revision_p);
      end;
  } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/news/tcl/test/news-db-test-init-oracle.xql}
dbqd.news.tcl.test.news-db-test-init-oracle._news__c_db-news-revision-set-active.revision-set-active {dbqd.news.tcl.test.news-db-test-init-oracle._news__c_db-news-revision-set-active.revision-set-active {
    begin
      news.revision_set_active(:p_revision_id);
    end;
  } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/news/tcl/test/news-db-test-init-oracle.xql}
dbqd.news.tcl.test.news-db-test-init-oracle._news__c_db-news-item-delete.item-delete {dbqd.news.tcl.test.news-db-test-init-oracle._news__c_db-news-item-delete.item-delete {
    begin
      news.del(:p_item_id);
    end;
  } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/news/tcl/test/news-db-test-init-oracle.xql}
dbqd.news.tcl.test.news-db-test-init-oracle._news__c_db-news-make-permanent.make-permanent {dbqd.news.tcl.test.news-db-test-init-oracle._news__c_db-news-make-permanent.make-permanent {
    begin
      news.make_permanent(:p_item_id);
    end;
  } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/news/tcl/test/news-db-test-init-oracle.xql}
dbqd.news.tcl.test.news-db-test-init-oracle._news__c_db-news-archive.archive {dbqd.news.tcl.test.news-db-test-init-oracle._news__c_db-news-archive.archive {
    begin
      news.archive(item_id => :p_item_id,
                   archive_date => :p_archive_date);
    end;
  } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/news/tcl/test/news-db-test-init-oracle.xql}
dbqd.news.tcl.test.news-db-test-init-oracle._news__c_db-news-archive.archive-default {dbqd.news.tcl.test.news-db-test-init-oracle._news__c_db-news-archive.archive-default {
    begin
      news.archive(item_id => :p_item_id);
    end;
  } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/news/tcl/test/news-db-test-init-oracle.xql}
dbqd.news.tcl.test.news-db-test-init-oracle._news__c_db-news-status.get-status {dbqd.news.tcl.test.news-db-test-init-oracle._news__c_db-news-status.get-status {
    begin
      :1 := news.status(to_date(:p_publish_date, 'YYYY-MM-DD'), to_date(:p_archive_date, 'YYYY-MM-DD'));
    end;
  } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/news/tcl/test/news-db-test-init-oracle.xql}
dbqd.news.tcl.test.news-db-test-init-oracle._news__db-check-news-create.news-name {dbqd.news.tcl.test.news-db-test-init-oracle._news__db-check-news-create.news-name {
    begin
      :1 := news.name(news_id => :p_news_id);
    end;
  } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/news/tcl/test/news-db-test-init-oracle.xql}
dbqd.news.tcl.test.news-db-test-init._news__i_mount-news-package.get-site-nodes {dbqd.news.tcl.test.news-db-test-init._news__i_mount-news-package.get-site-nodes {
    select node_id, object_id, site_node__url(node_id) as url from site_nodes
  } {} {} {postgresql 7.1} c:/web/openacs-4/packages/news/tcl/test/news-db-test-init-postgresql.xql}
dbqd.news.tcl.test.news-db-test-init._news__i_mount-news-package.package-delete {dbqd.news.tcl.test.news-db-test-init._news__i_mount-news-package.package-delete {
    select apm_package__delete(:p_package_id);
  } {} {} {postgresql 7.1} c:/web/openacs-4/packages/news/tcl/test/news-db-test-init-postgresql.xql}
dbqd.news.tcl.test.news-db-test-init._news__d_mount-news-package.package-delete {dbqd.news.tcl.test.news-db-test-init._news__d_mount-news-package.package-delete {
    select apm_package__delete(:p_package_id);
  } {} {} {postgresql 7.1} c:/web/openacs-4/packages/news/tcl/test/news-db-test-init-postgresql.xql}
dbqd.news.tcl.test.news-db-test-init._news__c_db-news-globals.get-cr-root-folder {dbqd.news.tcl.test.news-db-test-init._news__c_db-news-globals.get-cr-root-folder {
    select content_item_globals.c_root_folder_id;
  } {} {} {postgresql 7.1} c:/web/openacs-4/packages/news/tcl/test/news-db-test-init-postgresql.xql}
dbqd.news.tcl.test.news-db-test-init._news__c_db-news-item-create.item-create {dbqd.news.tcl.test.news-db-test-init._news__c_db-news-item-create.item-create {
    select news__new(
      null,
      null,
      current_timestamp, :p_text, null, :p_title, 'text/plain',
      :p_package_id, :p_archive_date, :p_approval_user, :p_approval_date, :p_approval_ip,
      null,
      null,null,
      :p_is_live
    );
  } {} {} {postgresql 7.1} c:/web/openacs-4/packages/news/tcl/test/news-db-test-init-postgresql.xql}
dbqd.news.tcl.test.news-db-test-init._news__c_db-news-item-delete.item-delete {dbqd.news.tcl.test.news-db-test-init._news__c_db-news-item-delete.item-delete {
    select news__delete(:p_item_id);
  } {} {} {postgresql 7.1} c:/web/openacs-4/packages/news/tcl/test/news-db-test-init-postgresql.xql}
dbqd.news.tcl.test.news-db-test-init._news__c_db-news-revision-create.revision-create {dbqd.news.tcl.test.news-db-test-init._news__c_db-news-revision-create.revision-create {
    select news__revision_new(
      :p_item_id,
      current_timestamp, :p_text, :p_title,
      :p_description,
      'text/plain', :p_package_id, :p_archive_date, :p_approval_user, :p_approval_date,
                                                                      :p_approval_ip,
      current_timestamp, null, null,
      :p_make_active_revision_p
    );
  } {} {} {postgresql 7.1} c:/web/openacs-4/packages/news/tcl/test/news-db-test-init-postgresql.xql}
dbqd.news.tcl.test.news-db-test-init._news__c_db-news-get-live-revision.get-live-revision {dbqd.news.tcl.test.news-db-test-init._news__c_db-news-get-live-revision.get-live-revision {
    select content_item__get_live_revision(:p_item_id);
  } {} {} {postgresql 7.1} c:/web/openacs-4/packages/news/tcl/test/news-db-test-init-postgresql.xql}
dbqd.news.tcl.test.news-db-test-init._news__c_db-news-get-latest-revision.get-latest-revision {dbqd.news.tcl.test.news-db-test-init._news__c_db-news-get-latest-revision.get-latest-revision {
    select content_item__get_latest_revision(:p_item_id);
  } {} {} {postgresql 7.1} c:/web/openacs-4/packages/news/tcl/test/news-db-test-init-postgresql.xql}
dbqd.news.tcl.test.news-db-test-init._news__c_db-news-set-approve.set-approve-default {dbqd.news.tcl.test.news-db-test-init._news__c_db-news-set-approve.set-approve-default {
    select news__set_approve(:p_revision_id,
                             :p_approve_p,
                             null, null, null, null, null, null);
  } {} {} {postgresql 7.1} c:/web/openacs-4/packages/news/tcl/test/news-db-test-init-postgresql.xql}
dbqd.news.tcl.test.news-db-test-init._news__c_db-news-set-approve.set-approve {dbqd.news.tcl.test.news-db-test-init._news__c_db-news-set-approve.set-approve {
    select news__set_approve(:p_revision_id,
                             :p_approve_p,
                             :p_publish_date,
                             :p_archive_date,
                             :p_approval_user,
                             :p_approval_date,
                             :p_approval_ip,
                             :p_live_revision_p);
  } {} {} {postgresql 7.1} c:/web/openacs-4/packages/news/tcl/test/news-db-test-init-postgresql.xql}
dbqd.news.tcl.test.news-db-test-init._news__c_db-news-revision-set-active.revision-set-active {dbqd.news.tcl.test.news-db-test-init._news__c_db-news-revision-set-active.revision-set-active {
    select news__revision_set_active(:p_revision_id);
  } {} {} {postgresql 7.1} c:/web/openacs-4/packages/news/tcl/test/news-db-test-init-postgresql.xql}
dbqd.news.tcl.test.news-db-test-init._news__c_db-news-revision-delete.revision-delete {dbqd.news.tcl.test.news-db-test-init._news__c_db-news-revision-delete.revision-delete {
    select news__revision_delete(:p_revision_id);
  } {} {} {postgresql 7.1} c:/web/openacs-4/packages/news/tcl/test/news-db-test-init-postgresql.xql}
dbqd.news.tcl.test.news-db-test-init._news__c_db-news-make-permanent.make-permanent {dbqd.news.tcl.test.news-db-test-init._news__c_db-news-make-permanent.make-permanent {
    select news__make_permanent(:p_item_id);
  } {} {} {postgresql 7.1} c:/web/openacs-4/packages/news/tcl/test/news-db-test-init-postgresql.xql}
dbqd.news.tcl.test.news-db-test-init._news__c_db-news-archive.archive-default {dbqd.news.tcl.test.news-db-test-init._news__c_db-news-archive.archive-default {
    select news__archive(:p_item_id);
  } {} {} {postgresql 7.1} c:/web/openacs-4/packages/news/tcl/test/news-db-test-init-postgresql.xql}
dbqd.news.tcl.test.news-db-test-init._news__c_db-news-archive.archive {dbqd.news.tcl.test.news-db-test-init._news__c_db-news-archive.archive {
    select news__archive(:p_item_id, :p_archive_date);
  } {} {} {postgresql 7.1} c:/web/openacs-4/packages/news/tcl/test/news-db-test-init-postgresql.xql}
dbqd.news.tcl.test.news-db-test-init._news__c_db-news-status.get-status {dbqd.news.tcl.test.news-db-test-init._news__c_db-news-status.get-status {
     select news__status(to_timestamp(:p_publish_date, 'YYYY-MM-DD'), to_timestamp(:p_archive_date, 'YYYY-MM-DD'));
  } {} {} {postgresql 7.1} c:/web/openacs-4/packages/news/tcl/test/news-db-test-init-postgresql.xql}
dbqd.news.tcl.test.news-db-test-init._news__db-check-news-create.news-name {dbqd.news.tcl.test.news-db-test-init._news__db-check-news-create.news-name {
     select news__name(:p_news_id);
  } {} {} {postgresql 7.1} c:/web/openacs-4/packages/news/tcl/test/news-db-test-init-postgresql.xql}
dbqd.news.tcl.test.news-db-test-init._news__c_db-news-globals.get-cr-news-root-folder {dbqd.news.tcl.test.news-db-test-init._news__c_db-news-globals.get-cr-news-root-folder {
        select item_id
        from cr_items
        where parent_id = :p_parent_id
        and   name = 'news'
      } {} {} {} c:/web/openacs-4/packages/news/tcl/test/news-db-test-init.xql}
dbqd.news.tcl.test.news-db-test-init._news__c_get_cr_news_row.get-cr-news-row {dbqd.news.tcl.test.news-db-test-init._news__c_get_cr_news_row.get-cr-news-row {
        select news_id, package_id, archive_date,
               approval_user, approval_date, approval_ip 
        from cr_news
        where news_id = :p_news_id
      } {} {} {} c:/web/openacs-4/packages/news/tcl/test/news-db-test-init.xql}
dbqd.news.tcl.test.news-db-test-init._news__c_get_cr_revisions_row.get-cr-revisions-row {dbqd.news.tcl.test.news-db-test-init._news__c_get_cr_revisions_row.get-cr-revisions-row {
        select item_id, title, description, publish_date, mime_type,
               nls_language, content, content_length
        from cr_revisions
        where revision_id = :p_revision_id
      } {} {} {} c:/web/openacs-4/packages/news/tcl/test/news-db-test-init.xql}
dbqd.news.tcl.test.news-db-test-init._news__c_get_cr_items_row.get-cr-items-row {dbqd.news.tcl.test.news-db-test-init._news__c_get_cr_items_row.get-cr-items-row {
          select parent_id, name, live_revision, latest_revision,
                 publish_status, content_type
          from cr_items
          where item_id = :p_item_id
      } {} {} {} c:/web/openacs-4/packages/news/tcl/test/news-db-test-init.xql}
dbqd.news.tcl.test.news-db-test-init._news__check-permissions.get-privileges {dbqd.news.tcl.test.news-db-test-init._news__check-permissions.get-privileges {
        select privilege from acs_privileges
      } {} {} {} c:/web/openacs-4/packages/news/tcl/test/news-db-test-init.xql}
dbqd.news.tcl.test.news-db-test-init._news__check-permissions.get-privilege-hierachys {dbqd.news.tcl.test.news-db-test-init._news__check-permissions.get-privilege-hierachys {
        select privilege, child_privilege from acs_privilege_hierarchy
      } {} {} {} c:/web/openacs-4/packages/news/tcl/test/news-db-test-init.xql}
dbqd.news.tcl.test.news-db-test-init._news__check-object-type.get-news-type-info {dbqd.news.tcl.test.news-db-test-init._news__check-object-type.get-news-type-info {
        select object_type, supertype
        from acs_object_types
        where object_type = 'news'
      } {} {} {} c:/web/openacs-4/packages/news/tcl/test/news-db-test-init.xql}
dbqd.news.tcl.test.news-db-test-init._news__check-object-type.get-news-type-attribs {dbqd.news.tcl.test.news-db-test-init._news__check-object-type.get-news-type-attribs {
        select attribute_name
        from acs_attributes
        where object_type = 'news'
      } {} {} {} c:/web/openacs-4/packages/news/tcl/test/news-db-test-init.xql}
dbqd.news.tcl.test.news-db-test-init._news__check-object-type.get-news-cr-folder {dbqd.news.tcl.test.news-db-test-init._news__check-object-type.get-news-cr-folder {
        select folder_id
        from cr_folders
        where label = 'news'
      } {} {} {} c:/web/openacs-4/packages/news/tcl/test/news-db-test-init.xql}
dbqd.news.tcl.test.news-db-test-init._news__check-views.select-from-news-items-approved {dbqd.news.tcl.test.news-db-test-init._news__check-views.select-from-news-items-approved {
        select count(*) from news_items_approved
      } {} {} {} c:/web/openacs-4/packages/news/tcl/test/news-db-test-init.xql}
dbqd.news.tcl.test.news-db-test-init._news__check-views.select-from-news-items-live-or-submitted {dbqd.news.tcl.test.news-db-test-init._news__check-views.select-from-news-items-live-or-submitted {
        select count(*) from news_items_live_or_submitted
      } {} {} {} c:/web/openacs-4/packages/news/tcl/test/news-db-test-init.xql}
dbqd.news.tcl.test.news-db-test-init._news__check-views.select-from-news-items-unapproved {dbqd.news.tcl.test.news-db-test-init._news__check-views.select-from-news-items-unapproved {
        select count(*) from news_items_unapproved
      } {} {} {} c:/web/openacs-4/packages/news/tcl/test/news-db-test-init.xql}
dbqd.news.tcl.test.news-db-test-init._news__check-views.select-from-news-item-revisions {dbqd.news.tcl.test.news-db-test-init._news__check-views.select-from-news-item-revisions {
        select count(*) from news_item_revisions
      } {} {} {} c:/web/openacs-4/packages/news/tcl/test/news-db-test-init.xql}
dbqd.news.tcl.test.news-db-test-init._news__check-views.select-from-news-item-unapproved {dbqd.news.tcl.test.news-db-test-init._news__check-views.select-from-news-item-unapproved {
        select count(*) from news_item_unapproved
      } {} {} {} c:/web/openacs-4/packages/news/tcl/test/news-db-test-init.xql}
dbqd.news.tcl.test.news-db-test-init._news__check-views.select-from-news-item-full-active {dbqd.news.tcl.test.news-db-test-init._news__check-views.select-from-news-item-full-active {
        select count(*) from news_item_full_active
      } {} {} {} c:/web/openacs-4/packages/news/tcl/test/news-db-test-init.xql}
dbqd.news.tcl.test.news-test-procs-oracle.news::test::get_news_status.select_status {dbqd.news.tcl.test.news-test-procs-oracle.news::test::get_news_status.select_status {
              select news.status(:publish_date, :archive_date) from dual
          } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/news/tcl/test/news-test-procs-oracle.xql}
dbqd.news.tcl.test.news-test-procs.news::test::get_news_status.select_status {dbqd.news.tcl.test.news-test-procs.news::test::get_news_status.select_status {
              select news__status(:publish_date, :archive_date);
          } {} {} {postgresql 7.1} c:/web/openacs-4/packages/news/tcl/test/news-test-procs-postgresql.xql}
dbqd.news.www.admin.approve-2-oracle.news_item_approve_publish {dbqd.news.www.admin.approve-2-oracle.news_item_approve_publish {
      
	begin
        news.set_approve(
	    approve_p       => 't',
	    revision_id     => :id,
	    publish_date    => :publish_date_ansi,
            archive_date    => :archive_date_ansi,
            approval_user   => :approval_user,
            approval_date   => :approval_date,
            approval_ip     => :approval_ip,
            live_revision_p => :live_revision_p
         );
    end;
    
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/news/www/admin/approve-2-oracle.xql}
dbqd.news.www.admin.approve-2.news_item_approve_publish {dbqd.news.www.admin.approve-2.news_item_approve_publish {

        select news__set_approve(
            :id,                -- p_revision_id
            't',                -- p_approve_p
	    :publish_date_ansi, -- p_publish_date
	    :archive_date_ansi, -- p_archive_date
	    :approval_user,     -- p_approval_user
	    :approval_date,     -- p_approval_date
	    :approval_ip,       -- p_approval_ip
	    :live_revision_p    -- p_live_revision_p
        );
    
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/news/www/admin/approve-2-postgresql.xql}
dbqd.news.www.admin.approve-oracle.week {dbqd.news.www.admin.approve-oracle.week {
      select sysdate + [ad_parameter ActiveDays "news" 14] from dual
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/news/www/admin/approve-oracle.xql}
dbqd.news.www.admin.approve-oracle.revision_select {dbqd.news.www.admin.approve-oracle.revision_select {

    content_item.get_best_revision(item_id) as revision_id,

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/news/www/admin/approve-oracle.xql}
dbqd.news.www.admin.approve.week {dbqd.news.www.admin.approve.week {
      select to_char(current_timestamp + interval '[ad_parameter ActiveDays "news" 14] days', 'YYYY-MM-DD')
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/news/www/admin/approve-postgresql.xql}
dbqd.news.www.admin.approve.revision_select {dbqd.news.www.admin.approve.revision_select {

    content_item__get_best_revision(item_id) as revision_id,

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/news/www/admin/approve-postgresql.xql}
dbqd.news.www.admin.approve.item_list {dbqd.news.www.admin.approve.item_list {
      
        select    
        item_id, 
        $revision_select
        publish_title,
        creation_date,
        item_creator
    from 
        news_items_live_or_submitted
    where 
        item_id in ([join $bind_id_list ","])
      } {} {} {} c:/web/openacs-4/packages/news/www/admin/approve.xql}
dbqd.news.www.admin.index-oracle.itemlist {dbqd.news.www.admin.index-oracle.itemlist {
      
select
    item_id,
    content_item.get_best_revision(item_id) as revision_id,
    content_revision.get_number(news_id) as revision_no,
    publish_title,
    html_p,
    to_char(publish_date, 'YYYY-MM-DD HH24:MI:SS') as publish_date_ansi,
    to_char(archive_date, 'YYYY-MM-DD HH24:MI:SS') as archive_date_ansi,
    creation_user,
    item_creator,
    package_id,
    status
from 
    news_items_live_or_submitted
where 
    package_id = :package_id    
    $view_option
order by item_id desc
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/news/www/admin/index-oracle.xql}
dbqd.news.www.admin.index.itemlist {dbqd.news.www.admin.index.itemlist {
      
select
    item_id,
    content_item__get_best_revision(item_id) as revision_id,
    content_revision__get_number(news_id) as revision_no,
    publish_title,
    html_p,
    to_char(publish_date, 'YYYY-MM-DD HH24:MI:SS') as publish_date_ansi,
    to_char(archive_date, 'YYYY-MM-DD HH24:MI:SS') as archive_date_ansi,
    creation_user,
    item_creator,
    package_id,
    status
from 
    news_items_live_or_submitted
where 
    package_id = :package_id    
    $view_option
order by item_id desc
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/news/www/admin/index-postgresql.xql}
dbqd.news.www.admin.item.item_revs_list {dbqd.news.www.admin.item.item_revs_list {
      
select 
    item_id,
    revision_id,
    live_revision as item_live_revision_id,
    publish_title,
    log_entry,
    package_id,
    approval_needed_p,
    creation_user,
    item_creator,
    status
from 
    news_item_revisions
where 
    item_id = :item_id
order by revision_id desc

      } {} {} {} c:/web/openacs-4/packages/news/www/admin/item.xql}
dbqd.news.www.admin.process-2-oracle.archive_now {dbqd.news.www.admin.process-2-oracle.archive_now {
      select sysdate from dual
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/news/www/admin/process-2-oracle.xql}
dbqd.news.www.admin.process-2-oracle.archive_next_week {dbqd.news.www.admin.process-2-oracle.archive_next_week {
      select next_day(sysdate,'Monday') from dual
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/news/www/admin/process-2-oracle.xql}
dbqd.news.www.admin.process-2-oracle.archive_next_month {dbqd.news.www.admin.process-2-oracle.archive_next_month {
      select last_day(sysdate)+1 from dual
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/news/www/admin/process-2-oracle.xql}
dbqd.news.www.admin.process-2.archive_now {dbqd.news.www.admin.process-2.archive_now {
      select current_timestamp 
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/news/www/admin/process-2-postgresql.xql}
dbqd.news.www.admin.process-2.archive_next_week {dbqd.news.www.admin.process-2.archive_next_week {
      select next_day(current_timestamp,'Monday')::date
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/news/www/admin/process-2-postgresql.xql}
dbqd.news.www.admin.process-2.archive_next_month {dbqd.news.www.admin.process-2.archive_next_month {
      select (last_day(current_timestamp)+1)::date
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/news/www/admin/process-2-postgresql.xql}
dbqd.news.www.admin.process-oracle.item_list {dbqd.news.www.admin.process-oracle.item_list {
      
    select
        item_id,
        content_item.get_best_revision(item_id) as revision_id,
        package_id,
        publish_title,
        creation_date,
        item_creator
    from 
        news_items_live_or_submitted
    where
        item_id in ([join  $bind_id_list ","])
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/news/www/admin/process-oracle.xql}
dbqd.news.www.admin.process.item_list {dbqd.news.www.admin.process.item_list {
      
    select
        item_id,
        content_item__get_best_revision(item_id) as revision_id,
        package_id,
        publish_title,
        creation_date,
        item_creator
    from 
        news_items_live_or_submitted
    where
        item_id in ([join  $bind_id_list ","])
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/news/www/admin/process-postgresql.xql}
dbqd.news.www.admin.process.unapproved_list {dbqd.news.www.admin.process.unapproved_list {
      
    select    
        item_id,
        publish_title,
        creation_date,
        item_creator
    from 
        news_items_unapproved
    where 
        item_id in ([join $bind_id_list ","])
      } {} {} {} c:/web/openacs-4/packages/news/www/admin/process.xql}
dbqd.news.www.admin.revision-add-3-oracle.create_news_item_revision {dbqd.news.www.admin.revision-add-3-oracle.create_news_item_revision {
      
    begin
        :1 := news.revision_new(
            item_id       => :item_id,
            publish_date  => :publish_date_ansi,
            title         => :publish_title,   
            description   => :revision_log,
            mime_type     => :mime_type,
            package_id    => [ad_conn package_id],
            archive_date  => :archive_date_ansi,
            approval_user => :approval_user,
            approval_date => :approval_date,
            approval_ip   => :approval_ip,
            creation_ip   => :creation_ip,
            creation_user => :creation_user,
            make_active_revision_p => :active_revision_p);
    end;
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/news/www/admin/revision-add-3-oracle.xql}
dbqd.news.www.admin.revision-add-3-oracle.content_add {dbqd.news.www.admin.revision-add-3-oracle.content_add {
      
    update cr_revisions
    set    content = empty_blob()
    where  revision_id = :revision_id
    returning content into :1
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/news/www/admin/revision-add-3-oracle.xql}
dbqd.news.www.admin.revision-add-3.create_news_item_revision {dbqd.news.www.admin.revision-add-3.create_news_item_revision {

        select news__revision_new(
            :item_id,             -- p_item_id
            :publish_date_ansi,   -- p_publish_date
	    :publish_body,        -- p_text
            :publish_title,       -- p_title
            :revision_log,        -- p_description
            :mime_type,           -- p_mime_type
            [ad_conn package_id], -- p_package_id
            :archive_date_ansi,   -- p_archive_date
            :approval_user,       -- p_approval_user
            :approval_date,       -- p_approval_date
            :approval_ip,         -- p_approval_ip
	    current_timestamp,    -- p_creation_date
            :creation_ip,         -- p_creation_ip
            :creation_user,       -- p_creation_user
            :active_revision_p    -- p_make_active_revision_p
	);
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/news/www/admin/revision-add-3-postgresql.xql}
dbqd.news.www.admin.revision-add-oracle.item {dbqd.news.www.admin.revision-add-oracle.item {
      
select
    item_id, 
    package_id,   
    revision_id,
    publish_title,
    html_p,
    publish_date,
    NVL(archive_date, sysdate+[ad_parameter ActiveDays "news" 14]) as archive_date,
    status
from   
    news_item_full_active    
where  
    item_id = :item_id
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/news/www/admin/revision-add-oracle.xql}
dbqd.news.www.admin.revision-add-oracle.get_content {dbqd.news.www.admin.revision-add-oracle.get_content {
      select  content
from    cr_revisions
where   revision_id = :revision_id
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/news/www/admin/revision-add-oracle.xql}
dbqd.news.www.admin.revision-add.item {dbqd.news.www.admin.revision-add.item {
      
select
    item_id, 
    package_id,   
    revision_id,
    publish_title,
    html_p,
    to_char(publish_date, 'YYYY-MM-DD') as publish_date,
    publish_body,
    to_char(coalesce(archive_date, current_timestamp + interval '[ad_parameter ActiveDays "news" 14] days'), 'YYYY-MM-DD') as archive_date,
    status
from   
    news_item_full_active    
where  
    item_id = :item_id
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/news/www/admin/revision-add-postgresql.xql}
dbqd.news.www.admin.revision-add.news_item_info {dbqd.news.www.admin.revision-add.news_item_info {
      
    select
        item_name,
        creator_id,
        item_creator
    from
        news_item_full_active
    where item_id = :item_id

      } {} {} {} c:/web/openacs-4/packages/news/www/admin/revision-add.xql}
dbqd.news.www.admin.revision-oracle.one_item {dbqd.news.www.admin.revision-oracle.one_item {
      
    select item_id,
           revision_id,
           content_revision.get_number(:revision_id) as revision_no,
           publish_title,
           html_p,
           publish_date,
           archive_date,
           creation_ip,
           creation_date,
           '<a href="/shared/community-member?user_id=' || creation_user || '">' || item_creator ||  '</a>' as creator_link
    from   news_item_revisions
    where  item_id = :item_id
    and    revision_id = :revision_id
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/news/www/admin/revision-oracle.xql}
dbqd.news.www.admin.revision-oracle.get_content {dbqd.news.www.admin.revision-oracle.get_content {
      select  content
    from    cr_revisions
    where   revision_id = :revision_id
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/news/www/admin/revision-oracle.xql}
dbqd.news.www.admin.revision.one_item {dbqd.news.www.admin.revision.one_item {
      
    select item_id,
           revision_id,
           content_revision__get_number(:revision_id) as revision_no,
           publish_title,
           html_p,
           publish_date,
           archive_date,
           creation_ip,
           creation_date,
	   publish_body,
           '<a href="/shared/community-member?user_id=' || creation_user || '">' || item_creator ||  '</a>' as creator_link
    from   news_item_revisions
    where  item_id = :item_id
    and    revision_id = :revision_id
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/news/www/admin/revision-postgresql.xql}
dbqd.news.www.admin.revision-set-active-oracle.update_forum {dbqd.news.www.admin.revision-set-active-oracle.update_forum {
      
    begin
       news.revision_set_active (:new_rev_id);
    end;

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/news/www/admin/revision-set-active-oracle.xql}
dbqd.news.www.admin.revision-set-active.update_forum {dbqd.news.www.admin.revision-set-active.update_forum {

        select news__revision_set_active (:new_rev_id);

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/news/www/admin/revision-set-active-postgresql.xql}
dbqd.news.www.admin.revoke-oracle.news_item_revoke {dbqd.news.www.admin.revoke-oracle.news_item_revoke {
      
    begin
        news.set_approve(
            approve_p    => 'f',
            revision_id  => :revision_id
        );
    end;

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/news/www/admin/revoke-oracle.xql}
dbqd.news.www.admin.revoke.news_item_revoke {dbqd.news.www.admin.revoke.news_item_revoke {

        select news__set_approve(
            :revision_id,      -- p_revision_id
            'f',               -- p_approve_p
	    null,              -- p_publish_date
	    null,              -- p_archive_date
	    null,              -- p_approval_user
	    current_timestamp, -- p_approval_date
	    null,              -- p_approval_ip
	    't'                -- p_live_revision_p
        );

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/news/www/admin/revoke-postgresql.xql}
dbqd.news.www.index-oracle.archived_p {dbqd.news.www.index-oracle.archived_p {
      
    select case when count(*) = 0 then 0 else 1 end 
    from   news_items_approved
    where  publish_date < sysdate 
    and    archive_date < sysdate
    and    package_id = :package_id
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/news/www/index-oracle.xql}
dbqd.news.www.index-oracle.live_p {dbqd.news.www.index-oracle.live_p {
      
    select case when count(*) = 0 then 0 else 1 end 
    from   news_items_approved
    where  publish_date < sysdate 
    and    (archive_date is null 
            or archive_date > sysdate) 
    and    package_id = :package_id
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/news/www/index-oracle.xql}
dbqd.news.www.index-oracle.view_clause_live {dbqd.news.www.index-oracle.view_clause_live {

    publish_date < sysdate 
    and (archive_date is null or archive_date > sysdate)      
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/news/www/index-oracle.xql}
dbqd.news.www.index-oracle.view_clause_archived {dbqd.news.www.index-oracle.view_clause_archived {

    publish_date < sysdate
    and archive_date < sysdate
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/news/www/index-oracle.xql}
dbqd.news.www.index.archived_p {dbqd.news.www.index.archived_p {
      
    select case when count(*) = 0 then 0 else 1 end 
    from   news_items_approved
    where  publish_date < current_timestamp 
    and    archive_date < current_timestamp
    and    package_id = :package_id
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/news/www/index-postgresql.xql}
dbqd.news.www.index.live_p {dbqd.news.www.index.live_p {
      
    select case when count(*) = 0 then 0 else 1 end 
    from   news_items_approved
    where  publish_date < current_timestamp 
    and    (archive_date is null 
            or archive_date > current_timestamp)
    and    package_id = :package_id
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/news/www/index-postgresql.xql}
dbqd.news.www.index.view_clause_live {dbqd.news.www.index.view_clause_live {

    publish_date < current_timestamp
    and (archive_date is null or archive_date > current_timestamp)      
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/news/www/index-postgresql.xql}
dbqd.news.www.index.view_clause_archived {dbqd.news.www.index.view_clause_archived {

    publish_date < current_timestamp
    and archive_date < current_timestamp
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/news/www/index-postgresql.xql}
dbqd.news.www.index.item_list {dbqd.news.www.index.item_list {
      
select item_id,
       package_id,
       publish_title,
       to_char(news_items_approved.publish_date, 'YYYY-MM-DD HH24:MI:SS') as publish_date_ansi
from   news_items_approved
where  $view_clause   
and    package_id = :package_id
order  by publish_date desc, item_id desc
      } {} {} {} c:/web/openacs-4/packages/news/www/index.xql}
dbqd.news.www.item-create-3-oracle.create_news_item {dbqd.news.www.item-create-3-oracle.create_news_item {
      
begin
:1 := news.new(
title           => :publish_title,
publish_date    => :publish_date_ansi, 
archive_date    => :archive_date_ansi,
mime_type       => :mime_type,        
package_id      => :package_id,       
approval_user   => :approval_user,     
approval_date   => :approval_date,      
approval_ip     => :approval_ip,   
creation_ip     => :creation_ip,    
creation_user   => :user_id,     
is_live_p       => :live_revision_p    
);
end;
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/news/www/item-create-3-oracle.xql}
dbqd.news.www.item-create-3-oracle.content_add {dbqd.news.www.item-create-3-oracle.content_add {
      
update cr_revisions
set    content = empty_blob()
where  revision_id = :news_id
returning content into :1
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/news/www/item-create-3-oracle.xql}
dbqd.news.www.item-create-3.create_news_item {dbqd.news.www.item-create-3.create_news_item {

    select news__new(
        null,               -- p_item_id
        null,               -- p_locale
        :publish_date_ansi, -- p_publish_date
        :publish_body,      -- p_text
        null,               -- p_nls_language
        :publish_title,     -- p_title
        :mime_type,         -- p_mime_type
        :package_id,        -- p_package_id
        :archive_date_ansi, -- p_archive_date
        :approval_user,     -- p_approval_user
        :approval_date,     -- p_approval_date
        :approval_ip,       -- p_approval_ip
        null,               -- p_relation_tag
        :creation_ip,       -- p_creation_ip
        :user_id,           -- p_creation_user
        :live_revision_p    -- p_is_live_p
    );

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/news/www/item-create-3-postgresql.xql}
dbqd.news.www.item-create-oracle.week {dbqd.news.www.item-create-oracle.week {
      select sysdate + [ad_parameter ActiveDays "news" 14] from dual
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/news/www/item-create-oracle.xql}
dbqd.news.www.item-create.week {dbqd.news.www.item-create.week {
      select to_char(current_timestamp + interval '[ad_parameter ActiveDays "news" 14] days', 'YYYY-MM-DD')
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/news/www/item-create-postgresql.xql}
dbqd.news.www.item-oracle.one_item {dbqd.news.www.item-oracle.one_item {
      
select item_id,
       live_revision,
       publish_title,
       html_p,
       publish_date,
       '<a href="/shared/community-member?user_id=' || creation_user || '">' || item_creator ||  '</a>' as creator_link
from   news_items_live_or_submitted
where  item_id = :item_id
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/news/www/item-oracle.xql}
dbqd.news.www.item-oracle.get_content {dbqd.news.www.item-oracle.get_content {
      select  content
    from    cr_revisions
    where   revision_id = :live_revision
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/news/www/item-oracle.xql}
dbqd.news.www.item.one_item {dbqd.news.www.item.one_item {
      
select item_id,
       live_revision,
       publish_title,
       html_p,
       publish_date,
       publish_body,
       '<a href="/shared/community-member?user_id=' || creation_user || '">' || item_creator ||  '</a>' as creator_link
from   news_items_live_or_submitted
where  item_id = :item_id
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/news/www/item-postgresql.xql}
dbqd.news.www.preview.creator {dbqd.news.www.preview.creator {
      
select first_names || ' ' || last_name 
from   cc_users 
where  user_id = :user_id
      } {} {} {} c:/web/openacs-4/packages/news/www/preview.xql}
dbqd.news-aggregator.tcl.news-aggregator-procs-oracle.na_add_source.add_source {dbqd.news-aggregator.tcl.news-aggregator-procs-oracle.na_add_source.add_source {
	     begin
             :1 := na_source.new (
                 source_id => :source_id,
            	 package_id => :package_id,
            	 feed_url => :feed_url,
            	 link => :link,
             	 title => :title,
		 description => :description,
		 creation_user => :owner_id,
            	 creation_ip => :creation_ip
             );
             end;
        } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/news-aggregator/tcl/news-aggregator-procs-oracle.xql}
dbqd.news-aggregator.tcl.news-aggregator-procs-oracle.na_add_source.add_item {dbqd.news-aggregator.tcl.news-aggregator-procs-oracle.na_add_source.add_item {
	     begin
             :1 := na_source.new (
                 source_id => :source_id,
            	 link => :link,
             	 title => :title,
		 description => :description,
		 => sysdate,
		 => '0'
             );
             end
        } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/news-aggregator/tcl/news-aggregator-procs-oracle.xql}
dbqd.news-aggregator.tcl.news-aggregator-procs-oracle.na_add_source.add_item {dbqd.news-aggregator.tcl.news-aggregator-procs-oracle.na_add_source.add_item {
	     begin
             :1 := na_source.new (
                 source_id => :source_id,
            	 link => :link,
             	 title => :title,
		 description => :description,
		 => sysdate,
		 => '0'
             );
             end
        } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/news-aggregator/tcl/news-aggregator-procs-oracle.xql}
dbqd.news-aggregator.tcl.news-aggregator-procs-oracle.na_cleanup_items.deleted_items {dbqd.news-aggregator.tcl.news-aggregator-procs-oracle.na_cleanup_items.deleted_items {
        delete from na_items where creation_date + 60 < sysdate
        } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/news-aggregator/tcl/news-aggregator-procs-oracle.xql}
dbqd.news-aggregator.tcl.news-aggregator-procs.na_add_source.add_source {dbqd.news-aggregator.tcl.news-aggregator-procs.na_add_source.add_source {
            select na_source__new (
                :source_id,
		:package_id,
                :owner_id,
		:feed_url,
		:link,
                :title,
                :description,
		'0',
                now(),
		:last_modified,
		'na_source',
                :owner_id,
                :creation_ip
                )
        } {} {} {postgresql 7.1} c:/web/openacs-4/packages/news-aggregator/tcl/news-aggregator-procs-postgresql.xql}
dbqd.news-aggregator.tcl.news-aggregator-procs.na_add_source.add_item {dbqd.news-aggregator.tcl.news-aggregator-procs.na_add_source.add_item {
        select na_item__new (
                :source_id,
                :link,
                :title,
                :description,
                now(),
		'0'
        );
        } {} {} {postgresql 7.1} c:/web/openacs-4/packages/news-aggregator/tcl/news-aggregator-procs-postgresql.xql}
dbqd.news-aggregator.tcl.news-aggregator-procs.na_update_source.add_item {dbqd.news-aggregator.tcl.news-aggregator-procs.na_update_source.add_item {
        select na_item__new (
                :source_id,
                :link,
                :title,
                :description,
                now(),
		'0'
        );
        } {} {} {postgresql 7.1} c:/web/openacs-4/packages/news-aggregator/tcl/news-aggregator-procs-postgresql.xql}
dbqd.news-aggregator.tcl.news-aggregator-procs.na_cleanup_items.deleted_items {dbqd.news-aggregator.tcl.news-aggregator-procs.na_cleanup_items.deleted_items {
        delete from na_items where date + interval '2 month' < now()
        } {} {} {postgresql 7.1} c:/web/openacs-4/packages/news-aggregator/tcl/news-aggregator-procs-postgresql.xql}
dbqd.news-aggregator.tcl.news-aggregator-procs.na_update_source.update_source {dbqd.news-aggregator.tcl.news-aggregator-procs.na_update_source.update_source {
        update na_sources
        set link = :link,
            title = :title,
            description = :description,
 	    updates = (updates + 1),
	    last_scanned = now(),
	    last_modified = :last_modified
        where source_id = :source_id
        } {} {} {postgresql 7.1} c:/web/openacs-4/packages/news-aggregator/tcl/news-aggregator-procs-postgresql.xql}
dbqd.news-aggregator.tcl.news-aggregator-procs.na_update_sources.sources {dbqd.news-aggregator.tcl.news-aggregator-procs.na_update_sources.sources {
        select source_id,
               owner_id,
               feed_url,
               last_modified
               from na_sources
        } {} {} {} c:/web/openacs-4/packages/news-aggregator/tcl/news-aggregator-procs.xql}
dbqd.news-aggregator.tcl.news-aggregator-procs.na_update_source.update_item {dbqd.news-aggregator.tcl.news-aggregator-procs.na_update_source.update_item {
        update na_items
        set link = :link,
            title = :title,
            description = :description,
            creation_date = now()
        where item_id = :item_id
        } {} {} {} c:/web/openacs-4/packages/news-aggregator/tcl/news-aggregator-procs.xql}
dbqd.news-aggregator.tcl.news-aggregator-procs.na_add_source.source {dbqd.news-aggregator.tcl.news-aggregator-procs.na_add_source.source {
        select 1 from na_sources where owner_id = :owner_id AND feed_url =:feed_url
        } {} {} {} c:/web/openacs-4/packages/news-aggregator/tcl/news-aggregator-procs.xql}
dbqd.news-aggregator.tcl.news-aggregator-procs.na_update_source.item {dbqd.news-aggregator.tcl.news-aggregator-procs.na_update_source.item {
        select deleted_p, item_id, i.title as item_title, i.description as item_description
        from na_sources s, na_items i 
        where owner_id = :owner_id 
        and s.source_id = i.source_id
	and i.$identifier = :$identifier
	and feed_url = :feed_url
	order by item_id
        } {} {} {} c:/web/openacs-4/packages/news-aggregator/tcl/news-aggregator-procs.xql}
dbqd.news-aggregator.tcl.news-aggregator-procs.na_update_source.update_source {dbqd.news-aggregator.tcl.news-aggregator-procs.na_update_source.update_source {
        update na_sources
        set link = :link,
            title = :title,
            description = :description,
 	    updates = (updates + 1),
	    last_scanned = now(),
	    last_modified = :last_modified
        where source_id = :source_id
        } {} {} {postgresql 7.1} c:/web/openacs-4/packages/news-aggregator/tcl/news-aggregator-procs-postgresql.xql}
dbqd.news-aggregator.www.index-oracle.items {dbqd.news-aggregator.www.index-oracle.items {
	select s.source_id, 
               s.link, 
               s.description,
               s.title, 
               to_char(creation_date, 'YYYY-MM-DD HH24:MI:SS') as last_scanned,
               to_char(creation_date, 'YYYY-MM-DD HH24') as sort_date,
	       feed_url, 
	       item_id, 
               i.title as item_title, 
               i.link as item_link, 
               i.description as item_description
        from na_sources s, na_items i
	where owner_id = :user_id AND deleted_p = '0'
        and   s.source_id = i.source_id
        and   rownum <= $limit
	order by creation_date desc
} {} {} {oracle 8.1.6} c:/web/openacs-4/packages/news-aggregator/www/index-oracle.xql}
dbqd.news-aggregator.www.index.items {dbqd.news-aggregator.www.index.items {
	select s.source_id, 
               s.link, 
               s.description,
               s.title, 
               to_char(creation_date, 'YYYY-MM-DD HH24:MI:SS') as last_scanned,
               to_char(creation_date, 'YYYY-MM-DD HH24') as sort_date,
	       feed_url, 
	       item_id, 
               i.title as item_title, 
               i.link as item_link, 
               i.description as item_description
        from na_sources s, na_items i
	where owner_id = :user_id AND deleted_p = '0'
        and   s.source_id = i.source_id
	order by creation_date desc
	limit $limit
} {} {} {postgresql 7.1} c:/web/openacs-4/packages/news-aggregator/www/index-postgresql.xql}
dbqd.news-aggregator.www.index.delete_item {dbqd.news-aggregator.www.index.delete_item {
        update na_items set deleted_p = '1' where item_id = :delete_id
      } {} {} {} c:/web/openacs-4/packages/news-aggregator/www/index.xql}
dbqd.news-aggregator.www.subscriptions-oracle.delete_source {dbqd.news-aggregator.www.subscriptions-oracle.delete_source {
             :1 := na_source.del(
                source_id => :delete_id
             );
             end;
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/news-aggregator/www/subscriptions-oracle.xql}
dbqd.news-aggregator.www.subscriptions.delete_source {dbqd.news-aggregator.www.subscriptions.delete_source {
        select na_source__delete(
                :delete_id
        );

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/news-aggregator/www/subscriptions-postgresql.xql}
dbqd.news-aggregator.www.subscriptions.sources {dbqd.news-aggregator.www.subscriptions.sources {
                    select title,
			   source_id,
			   feed_url,
			   link,
			   description,
			   updates,
                           to_char(last_scanned, 'YYYY-MM-DD HH24:MI:SS') as last_scanned
                    from   na_sources
                    where  owner_id = :user_id
                    order  by lower(title)
        } {} {} {} c:/web/openacs-4/packages/news-aggregator/www/subscriptions.xql}
dbqd.news-aggregator-portlet.www.news-aggregator-portlet-oracle.select_items {dbqd.news-aggregator-portlet.www.news-aggregator-portlet-oracle.select_items {
	select s.source_id, 
               s.link, 
               s.description,
               s.title, 
               to_char(last_scanned, 'YYYY-MM-DD HH24:MI:SS') as last_scanned,
               to_char(creation_date, 'YYYY-MM-DD HH24') as sort_date,
	       feed_url, 
	       item_id, 
               i.title as item_title, 
               i.link as item_link, 
               i.description as item_description
        from na_sources s, na_items i
	where s.source_id = i.source_id
        and   deleted_p = '0'
	and   package_id in ([join $list_of_package_ids ", "])
        and   rownum <= 10
	order by creation_date desc
} {} {} {postgresql 7.1} c:/web/openacs-4/packages/news-aggregator-portlet/www/news-aggregator-portlet-oracle.xql}
dbqd.news-aggregator-portlet.www.news-aggregator-portlet.select_items {dbqd.news-aggregator-portlet.www.news-aggregator-portlet.select_items {
        select s.source_id,
               s.link,
               s.description,
               s.title,
               to_char(last_scanned, 'YYYY-MM-DD HH24:MI:SS') as last_scanned,
               to_char(creation_date, 'YYYY-MM-DD HH24') as sort_date,
               (select site_node__url(site_nodes.node_id)
               from site_nodes
               where site_nodes.object_id = package_id) as url,
               feed_url,
               item_id,
               i.title as item_title,
               i.link as item_link,
               i.description as item_description
        from   na_sources s left outer join 
               na_items i on (s.source_id = i.source_id)
        where  deleted_p = '0'
	and    package_id in ([join $list_of_package_ids ", "])
        order  by creation_date desc
        limit  10
} {} {} {postgresql 7.1} c:/web/openacs-4/packages/news-aggregator-portlet/www/news-aggregator-portlet-postgresql.xql}
dbqd.news-aggregator-portlet.www.news-aggregator-portlet.delete_item {dbqd.news-aggregator-portlet.www.news-aggregator-portlet.delete_item {
        update na_items set deleted_p = '1' where item_id = :delete_id
      } {} {} {} c:/web/openacs-4/packages/news-aggregator-portlet/www/news-aggregator-portlet.xql}
dbqd.notes.www.add-edit-oracle.new_note {dbqd.notes.www.add-edit-oracle.new_note {
      
      declare
        id integer;
      begin
        id := note.new(
          owner_id => :user_id,
          title => :title,
          body => :body,
          creation_user => :user_id,
          creation_ip => :peeraddr,
          context_id => :package_id
        );
	  end;

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/notes/www/add-edit-oracle.xql}
dbqd.notes.www.add-edit.new_note {dbqd.notes.www.add-edit.new_note {
      
        select note__new(
		  null,
		  :user_id,
          :title,
          :body,
          'note',
		  now(),
		  :user_id,
		  :peeraddr,
		  :package_id
        );

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/notes/www/add-edit-postgresql.xql}
dbqd.notes.www.add-edit.note_select {dbqd.notes.www.add-edit.note_select {
      
    select title, body
    from notes
    where note_id = :note_id
  
      } {} {} {} c:/web/openacs-4/packages/notes/www/add-edit.xql}
dbqd.notes.www.add-edit.note_update {dbqd.notes.www.add-edit.note_update {
      
      update notes
      set title = :title,
          body = :body
      where note_id = :note_id
    
      } {} {} {} c:/web/openacs-4/packages/notes/www/add-edit.xql}
dbqd.notes.www.delete-oracle.note_delete {dbqd.notes.www.delete-oracle.note_delete {
      
  begin
    note.del(:note_id);
  end;

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/notes/www/delete-oracle.xql}
dbqd.notes.www.delete.note_delete {dbqd.notes.www.delete.note_delete {
      
    select note__delete( :note_id );

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/notes/www/delete-postgresql.xql}
dbqd.notes.www.index-oracle.notes {dbqd.notes.www.index-oracle.notes {

  select note_id, owner_id, title, body,
         decode(acs_permission.permission_p(note_id,
                                            :user_id,
                                            'write'),
                't', 1,
                'f', 0) as write_p,
         decode(acs_permission.permission_p(note_id,
                                            :user_id,
                                            'admin'),
                't', 1,
                'f', 0) as admin_p,
         decode(acs_permission.permission_p(note_id,
                                            :user_id,
                                            'delete'),
                't', 1,
                'f', 0) as delete_p
  from notes n, acs_objects o
  where n.note_id = o.object_id
  and o.context_id = :package_id
  and acs_permission.permission_p(note_id, :user_id, 'read') = 't'
  order by creation_date

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/notes/www/index-oracle.xql}
dbqd.notes.www.index.notes {dbqd.notes.www.index.notes {
  select note_id, owner_id, title, body,
         case when acs_permission__permission_p(note_id,:user_id,'write')='t' 
              then 1 else 0 end as write_p,
         case when acs_permission__permission_p(note_id,:user_id,'admin')='t'
			  then 1 else 0 end as admin_p,
         case when acs_permission__permission_p(note_id,:user_id,'delete')='t'
			  then 1 else 0 end as delete_p
  from notes n, acs_objects o
  where n.note_id = o.object_id
  and o.context_id = :package_id
  and acs_permission__permission_p(note_id, :user_id, 'read') = 't'
  order by creation_date

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/notes/www/index-postgresql.xql}
dbqd.notifications.tcl.delivery-method-procs-oracle.notification::delivery::delete.delete {dbqd.notifications.tcl.delivery-method-procs-oracle.notification::delivery::delete.delete {
            begin
                notification_delivery_method.del(:delivery_method_id);
            end;
        } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/notifications/tcl/delivery-method-procs-oracle.xql}
dbqd.notifications.tcl.delivery-method-procs.notification::delivery::delete.delete {dbqd.notifications.tcl.delivery-method-procs.notification::delivery::delete.delete {
            select notification_delivery_method__delete(:delivery_method_id)
        } {} {} {postgresql 7.1} c:/web/openacs-4/packages/notifications/tcl/delivery-method-procs-postgresql.xql}
dbqd.notifications.tcl.delivery-method-procs.notification::delivery::get_impl_key.select_impl_key {dbqd.notifications.tcl.delivery-method-procs.notification::delivery::get_impl_key.select_impl_key {
      select impl_name from acs_sc_impls, notification_delivery_methods
      where acs_sc_impls.impl_id = notification_delivery_methods.sc_impl_id
      and delivery_method_id= :delivery_method_id
    } {} {} {} c:/web/openacs-4/packages/notifications/tcl/delivery-method-procs.xql}
dbqd.notifications.tcl.delivery-method-procs.notification::delivery::get_id.select_delivery_method_id {dbqd.notifications.tcl.delivery-method-procs.notification::delivery::get_id.select_delivery_method_id {
      select delivery_method_id
      from   notification_delivery_methods
      where  short_name = :short_name
    } {} {} {} c:/web/openacs-4/packages/notifications/tcl/delivery-method-procs.xql}
dbqd.notifications.tcl.delivery-method-procs.notification::delivery::update_sc_impl_id.update {dbqd.notifications.tcl.delivery-method-procs.notification::delivery::update_sc_impl_id.update {
      update notification_delivery_methods
      set    sc_impl_id = :sc_impl_id
      where  delivery_method_id = :delivery_method_id
    } {} {} {} c:/web/openacs-4/packages/notifications/tcl/delivery-method-procs.xql}
dbqd.notifications.tcl.interval-procs.notification::interval::get_id_from_name.get_interval_id {dbqd.notifications.tcl.interval-procs.notification::interval::get_id_from_name.get_interval_id {
     select interval_id
     from notification_intervals where name = 'instant'
  } {} {} {} c:/web/openacs-4/packages/notifications/tcl/interval-procs.xql}
dbqd.notifications.tcl.notification-email-procs.notification::email::send.get_person {dbqd.notifications.tcl.notification-email-procs.notification::email::send.get_person {
       select first_names, last_name
       from persons
       where person_id = :from_user_id
    } {} {} {} c:/web/openacs-4/packages/notifications/tcl/notification-email-procs.xql}
dbqd.notifications.tcl.notification-procs-oracle.notification::delete.delete_notification {dbqd.notifications.tcl.notification-procs-oracle.notification::delete.delete_notification {
            declare begin
                notification.del(:notification_id);
            end;
        } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/notifications/tcl/notification-procs-oracle.xql}
dbqd.notifications.tcl.notification-procs-oracle.notification::mark_sent.insert_notification_user_map {dbqd.notifications.tcl.notification-procs-oracle.notification::mark_sent.insert_notification_user_map {
            insert
            into notification_user_map
            (notification_id, user_id, sent_date)
            select :notification_id, :user_id, sysdate
            from dual where exists (select 1 from notifications
                                    where notification_id = :notification_id)
        } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/notifications/tcl/notification-procs-oracle.xql}
dbqd.notifications.tcl.notification-procs.notification::delete.delete_notification {dbqd.notifications.tcl.notification-procs.notification::delete.delete_notification {
            select notification__delete(:notification_id)
        } {} {} {postgresql 7.1} c:/web/openacs-4/packages/notifications/tcl/notification-procs-postgresql.xql}
dbqd.notifications.tcl.notification-procs.notification::mark_sent.insert_notification_user_map {dbqd.notifications.tcl.notification-procs.notification::mark_sent.insert_notification_user_map {
            insert
            into notification_user_map
            (notification_id, user_id, sent_date)
            select :notification_id, :user_id, now()
            from dual where exists (select 1 from notifications
                                    where notification_id = :notification_id)
        } {} {} {postgresql 7.1} c:/web/openacs-4/packages/notifications/tcl/notification-procs-postgresql.xql}
dbqd.notifications.tcl.notification-procs.notification::get_interval_id.select_interval_id {dbqd.notifications.tcl.notification-procs.notification::get_interval_id.select_interval_id {
            select interval_id
            from notification_intervals
            where name = :name
        } {} {} {} c:/web/openacs-4/packages/notifications/tcl/notification-procs.xql}
dbqd.notifications.tcl.notification-procs.notification::get_delivery_method_id.select_delivery_method_id {dbqd.notifications.tcl.notification-procs.notification::get_delivery_method_id.select_delivery_method_id {
            select delivery_method_id
            from notification_delivery_methods
            where short_name = :name
        } {} {} {} c:/web/openacs-4/packages/notifications/tcl/notification-procs.xql}
dbqd.notifications.tcl.notification-procs.notification::get_all_intervals.select_all_intervals {dbqd.notifications.tcl.notification-procs.notification::get_all_intervals.select_all_intervals {
            select name,
                   interval_id,
                   n_seconds
            from notification_intervals
            order by n_seconds
        } {} {} {} c:/web/openacs-4/packages/notifications/tcl/notification-procs.xql}
dbqd.notifications.tcl.notification-procs.notification::get_intervals.select_intervals {dbqd.notifications.tcl.notification-procs.notification::get_intervals.select_intervals {
            select name,
                   notification_intervals.interval_id
            from notification_intervals,
                 notification_types_intervals
            where notification_intervals.interval_id = notification_types_intervals.interval_id
            and type_id = :type_id
            order by n_seconds
        } {} {} {} c:/web/openacs-4/packages/notifications/tcl/notification-procs.xql}
dbqd.notifications.tcl.notification-procs.notification::get_delivery_methods.select_delivery_methods {dbqd.notifications.tcl.notification-procs.notification::get_delivery_methods.select_delivery_methods {
            select pretty_name,
                   notification_delivery_methods.delivery_method_id
            from notification_delivery_methods,
                 notification_types_del_methods
            where notification_delivery_methods.delivery_method_id = notification_types_del_methods.delivery_method_id
            and type_id = :type_id
            order by pretty_name
        } {} {} {} c:/web/openacs-4/packages/notifications/tcl/notification-procs.xql}
dbqd.notifications.tcl.notification-procs.notification::new.select_notification_requests {dbqd.notifications.tcl.notification-procs.notification::new.select_notification_requests {
            select user_id, interval_id, delivery_method_id, format
            from   notification_requests
            where  type_id = :type_id
            and    object_id = :object_id
        } {} {} {} c:/web/openacs-4/packages/notifications/tcl/notification-procs.xql}
dbqd.notifications.tcl.notification-procs.notification::new.select_notified {dbqd.notifications.tcl.notification-procs.notification::new.select_notified {
            select user_id, 
                   interval_id, 
                   delivery_method_id
            from   notification_requests
            where  type_id = :type_id
            and    object_id = :object_id
        } {} {} {} c:/web/openacs-4/packages/notifications/tcl/notification-procs.xql}
dbqd.notifications.tcl.notification-procs.notification::delete.delete_mappings {dbqd.notifications.tcl.notification-procs.notification::delete.delete_mappings {
            delete
            from notification_user_map
            where notification_id = :notification_id
        } {} {} {} c:/web/openacs-4/packages/notifications/tcl/notification-procs.xql}
dbqd.notifications.tcl.notification-reply-procs-oracle.notification::reply::delete.delete_reply {dbqd.notifications.tcl.notification-reply-procs-oracle.notification::reply::delete.delete_reply {
            declare begin
                notification_reply.del(reply_id => :reply_id);
            end;
        } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/notifications/tcl/notification-reply-procs-oracle.xql}
dbqd.notifications.tcl.notification-reply-procs.notification::reply::delete.delete_reply {dbqd.notifications.tcl.notification-reply-procs.notification::reply::delete.delete_reply {
            select notification_reply__delete(:reply_id)
        } {} {} {postgresql 7.1} c:/web/openacs-4/packages/notifications/tcl/notification-reply-procs-postgresql.xql}
dbqd.notifications.tcl.notification-reply-procs.notification::reply::get.select_reply {dbqd.notifications.tcl.notification-reply-procs.notification::reply::get.select_reply {
select reply_id, object_id, type_id, from_user, subject, content, reply_date
from notification_replies
where reply_id= :reply_id
} {} {} {} c:/web/openacs-4/packages/notifications/tcl/notification-reply-procs.xql}
dbqd.notifications.tcl.notification-request-procs-oracle.notification::request::delete.delete_request {dbqd.notifications.tcl.notification-request-procs-oracle.notification::request::delete.delete_request {
            declare begin
                notification_request.del(request_id => :request_id);
            end;
        } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/notifications/tcl/notification-request-procs-oracle.xql}
dbqd.notifications.tcl.notification-request-procs-oracle.notification::request::delete_all.delete_all_requests {dbqd.notifications.tcl.notification-request-procs-oracle.notification::request::delete_all.delete_all_requests {
            declare begin
                notification_request.delete_all(object_id => :object_id);
            end;
        } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/notifications/tcl/notification-request-procs-oracle.xql}
dbqd.notifications.tcl.notification-request-procs.notification::request::delete.delete_request {dbqd.notifications.tcl.notification-request-procs.notification::request::delete.delete_request {
            select notification_request__delete(:request_id);
        } {} {} {postgresql 7.1} c:/web/openacs-4/packages/notifications/tcl/notification-request-procs-postgresql.xql}
dbqd.notifications.tcl.notification-request-procs.notification::request::delete_all.delete_all_requests {dbqd.notifications.tcl.notification-request-procs.notification::request::delete_all.delete_all_requests {
            select notification_request__delete_all(:object_id);
        } {} {} {postgresql 7.1} c:/web/openacs-4/packages/notifications/tcl/notification-request-procs-postgresql.xql}
dbqd.notifications.tcl.notification-request-procs.notification::request::get_request_id.select_request_id {dbqd.notifications.tcl.notification-request-procs.notification::request::get_request_id.select_request_id {
            select request_id
            from notification_requests
            where type_id = :type_id
            and user_id = :user_id
            and object_id = :object_id
        } {} {} {} c:/web/openacs-4/packages/notifications/tcl/notification-request-procs.xql}
dbqd.notifications.tcl.notification-request-procs.notification::request::request_exists.request_count {dbqd.notifications.tcl.notification-request-procs.notification::request::request_exists.request_count {
            select count(*)
            from notification_requests
            where type_id = :type_id
            and object_id = :object_id
        } {} {} {} c:/web/openacs-4/packages/notifications/tcl/notification-request-procs.xql}
dbqd.notifications.tcl.notification-type-procs-oracle.notification::type::delete.delete_notification_type {dbqd.notifications.tcl.notification-type-procs-oracle.notification::type::delete.delete_notification_type {
          begin
            notification_type.del(:type_id);
          end;
        } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/notifications/tcl/notification-type-procs-oracle.xql}
dbqd.notifications.tcl.notification-type-procs.notification::type::delete.delete_notification_type {dbqd.notifications.tcl.notification-type-procs.notification::type::delete.delete_notification_type {
            select notification_type__delete(:type_id)
        } {} {} {postgresql 7.1} c:/web/openacs-4/packages/notifications/tcl/notification-type-procs-postgresql.xql}
dbqd.notifications.tcl.notification-type-procs.notification::type::get_impl_key.select_impl_key {dbqd.notifications.tcl.notification-type-procs.notification::type::get_impl_key.select_impl_key {
select impl_name from acs_sc_impls, notification_types
where acs_sc_impls.impl_id = notification_types.sc_impl_id
and type_id= :type_id
} {} {} {} c:/web/openacs-4/packages/notifications/tcl/notification-type-procs.xql}
dbqd.notifications.tcl.notification-type-procs.notification::type::get_type_id_not_cached.select_type_id {dbqd.notifications.tcl.notification-type-procs.notification::type::get_type_id_not_cached.select_type_id {
            select type_id
            from notification_types
            where short_name = :short_name
        } {} {} {} c:/web/openacs-4/packages/notifications/tcl/notification-type-procs.xql}
dbqd.notifications.tcl.notification-type-procs.notification::type::get.select_notification_type {dbqd.notifications.tcl.notification-type-procs.notification::type::get.select_notification_type {
            select type_id,
                   short_name,
                   pretty_name,
                   description
            from notification_types
            where short_name = :short_name
        } {} {} {} c:/web/openacs-4/packages/notifications/tcl/notification-type-procs.xql}
dbqd.notifications.tcl.notification-type-procs.notification::type::interval_enable.insert_interval_map {dbqd.notifications.tcl.notification-type-procs.notification::type::interval_enable.insert_interval_map {
            insert
            into notification_types_intervals
            (type_id, interval_id)
            select :type_id,
                   :interval_id
            from dual
            where not exists (select 1
                              from notification_types_intervals
                              where type_id = :type_id
                              and interval_id = :interval_id)
        } {} {} {} c:/web/openacs-4/packages/notifications/tcl/notification-type-procs.xql}
dbqd.notifications.tcl.notification-type-procs.notification::type::interval_disable.delete_interval_map {dbqd.notifications.tcl.notification-type-procs.notification::type::interval_disable.delete_interval_map {
            delete
            from notification_types_intervals
            where type_id = :type_id
            and interval_id = :interval_id
        } {} {} {} c:/web/openacs-4/packages/notifications/tcl/notification-type-procs.xql}
dbqd.notifications.tcl.notification-type-procs.notification::type::delivery_method_enable.insert_delivery_method_map {dbqd.notifications.tcl.notification-type-procs.notification::type::delivery_method_enable.insert_delivery_method_map {
            insert
            into notification_types_del_methods
            (type_id, delivery_method_id)
            select :type_id,
                   :delivery_method_id
            from dual
            where not exists (select 1
                              from notification_types_del_methods
                              where type_id = :type_id
                              and delivery_method_id = :delivery_method_id)
        } {} {} {} c:/web/openacs-4/packages/notifications/tcl/notification-type-procs.xql}
dbqd.notifications.tcl.notification-type-procs.notification::type::delivery_method_disable.delete_delivery_method_map {dbqd.notifications.tcl.notification-type-procs.notification::type::delivery_method_disable.delete_delivery_method_map {
            delete
            from notification_types_del_methods
            where type_id = :type_id
            and delivery_method_id = :delivery_method_id
        } {} {} {} c:/web/openacs-4/packages/notifications/tcl/notification-type-procs.xql}
dbqd.notifications.tcl.notifications-security-procs.notification::security::can_notify_user.user_approved_p {dbqd.notifications.tcl.notifications-security-procs.notification::security::can_notify_user.user_approved_p {
    select case when member_state = 'approved' then 1 else 0 end as send_p 
      from cc_users 
     where user_id = :user_id
        } {} {} {} c:/web/openacs-4/packages/notifications/tcl/notifications-security-procs.xql}
dbqd.notifications.tcl.reply-sweep-procs.notification::reply::sweep::scan_all_replies.select_deliv_methods {dbqd.notifications.tcl.reply-sweep-procs.notification::reply::sweep::scan_all_replies.select_deliv_methods {
select delivery_method_id from notification_delivery_methods
} {} {} {} c:/web/openacs-4/packages/notifications/tcl/reply-sweep-procs.xql}
dbqd.notifications.tcl.reply-sweep-procs.notification::reply::sweep::process_all_replies.select_replies {dbqd.notifications.tcl.reply-sweep-procs.notification::reply::sweep::process_all_replies.select_replies {
select reply_id, type_id from notification_replies order by reply_date
} {} {} {} c:/web/openacs-4/packages/notifications/tcl/reply-sweep-procs.xql}
dbqd.notifications.tcl.sweep-procs-oracle.notification::sweep::cleanup_notifications.select_notification_ids {dbqd.notifications.tcl.sweep-procs-oracle.notification::sweep::cleanup_notifications.select_notification_ids {
            select notifications.notification_id
            from notifications
            minus
            select nnr.notification_id
	    from (select notification_id, user_id
                  from notifications, notification_requests, acs_objects
                  where notifications.type_id = notification_requests.type_id
		    and notifications.object_id = notification_requests.object_id
		    and notification_requests.request_id = acs_objects.object_id
		    and acs_objects.creation_date <= notifications.notif_date) nnr,
              notification_user_map
            where nnr.notification_id = notification_user_map.notification_id(+)
              and nnr.user_id = notification_user_map.user_id(+)
	      and notification_user_map.sent_date is null
        } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/notifications/tcl/sweep-procs-oracle.xql}
dbqd.notifications.tcl.sweep-procs-oracle.notification::sweep::sweep_notifications.select_notifications {dbqd.notifications.tcl.sweep-procs-oracle.notification::sweep::sweep_notifications.select_notifications {
            select nnr.*
            from (select notifications.notification_id,
                    notifications.notif_subject,
                    notifications.notif_text,
                    notifications.notif_html,
                    notification_requests.user_id,
                    notification_requests.type_id,
                    notification_requests.delivery_method_id,
                    notification_requests.request_id,
                    notifications.response_id,
                    notifications.notif_date,
                    notifications.notif_user
                  from notifications, notification_requests
                  where notifications.type_id = notification_requests.type_id
                    and notifications.object_id = notification_requests.object_id
                    and notification_requests.interval_id = :interval_id) nnr,
              notification_user_map, acs_objects
            where nnr.notification_id = notification_user_map.notification_id(+)
              and nnr.user_id = notification_user_map.user_id(+)
              and notification_user_map.sent_date is null
              and acs_objects.object_id = nnr.request_id
              and acs_objects.creation_date <= nnr.notif_date
            order by nnr.user_id, nnr.type_id, nnr.notif_date
        } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/notifications/tcl/sweep-procs-oracle.xql}
dbqd.notifications.tcl.sweep-procs.notification::sweep::cleanup_notifications.select_notification_ids {dbqd.notifications.tcl.sweep-procs.notification::sweep::cleanup_notifications.select_notification_ids {
           select notification_id
           from notifications
           except
           select distinct notification_id
           from notifications inner join notification_requests using (type_id, object_id)
             inner join acs_objects on (notification_requests.request_id = acs_objects.object_id)
             left outer join notification_user_map using (notification_id, user_id)
           where sent_date is null and creation_date <= notif_date
        } {} {} {postgresql 7.1} c:/web/openacs-4/packages/notifications/tcl/sweep-procs-postgresql.xql}
dbqd.notifications.tcl.sweep-procs.notification::sweep::sweep_notifications.select_notifications {dbqd.notifications.tcl.sweep-procs.notification::sweep::sweep_notifications.select_notifications {
            select notification_id,
                   notif_subject,
                   notif_text,
                   notif_html,
                   user_id,
                   type_id,
                   delivery_method_id,
		   response_id,
		   notif_date,
                   notif_user
            from notifications inner join notification_requests using (type_id, object_id)
              inner join acs_objects on (notification_requests.request_id = acs_objects.object_id)
              left outer join notification_user_map using (notification_id, user_id)
            where sent_date is null
              and creation_date <= notif_date
              and interval_id = :interval_id
          order by user_id, type_id, notif_date
        } {} {} {postgresql 7.1} c:/web/openacs-4/packages/notifications/tcl/sweep-procs-postgresql.xql}
dbqd.notifications.tcl.sweep-procs.notification::sweep::cleanup_notifications.delete_dynamic_requests {dbqd.notifications.tcl.sweep-procs.notification::sweep::cleanup_notifications.delete_dynamic_requests {
           delete from notification_requests
           where  dynamic_p = 't'
           and    exists (select 1 
                          from    notifications n, 
                                  notification_user_map num
                          where   n.type_id = type_id
                          and     n.object_id = object_id
                          and     num.notification_id = n.notification_id
                          and     num.user_id = user_id)
        } {} {} {} c:/web/openacs-4/packages/notifications/tcl/sweep-procs.xql}
dbqd.notifications.www.manage-oracle.select_notifications {dbqd.notifications.www.manage-oracle.select_notifications {
	select request_id,
	       type_id,
	  (select pretty_name
	   from notification_types
	   where notification_types.type_id =
	         notification_requests.type_id) as type, 
	   acs_object.name(notification_requests.object_id) as object_name,
	   (select name
	   from notification_intervals
	   where notification_intervals.interval_id =
	         notification_requests.interval_id) as interval,
	   object_id
	from notification_requests
	where user_id = :user_id
        and   dynamic_p = 'f'
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/notifications/www/manage-oracle.xql}
dbqd.notifications.www.manage.select_notifications {dbqd.notifications.www.manage.select_notifications {
	select request_id,
	       type_id,
	  (select pretty_name
	   from notification_types
	   where notification_types.type_id =
	         notification_requests.type_id) as type,
           acs_object__name(notification_requests.object_id) as object_name,
	   (select name
	   from notification_intervals
	   where notification_intervals.interval_id =
	         notification_requests.interval_id) as interval,
	   object_id
	from notification_requests
	where user_id = :user_id
        and   dynamic_p = 'f'
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/notifications/www/manage-postgresql.xql}
dbqd.notifications.www.object-goto.get_notif_type {dbqd.notifications.www.object-goto.get_notif_type {
	    select impl_name 
	    from acs_sc_impls, notification_types 
	    where type_id=:type_id 
	    and acs_sc_impls.impl_id=notification_types.sc_impl_id
	} {} {} {} c:/web/openacs-4/packages/notifications/www/object-goto.xql}
dbqd.notifications.www.request-change-frequency-oracle.select_notification_request {dbqd.notifications.www.request-change-frequency-oracle.select_notification_request {

    select type_id, interval_id, 
    acs_object.name(notification_requests.object_id) as object_name
    from notification_requests
    where request_id = :request_id

    } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/notifications/www/request-change-frequency-oracle.xql}
dbqd.notifications.www.request-change-frequency.select_notification_request {dbqd.notifications.www.request-change-frequency.select_notification_request {

    select type_id, interval_id, 
    acs_object__name(notification_requests.object_id) as object_name
    from notification_requests
    where request_id = :request_id

    } {} {} {postgresql 7.1} c:/web/openacs-4/packages/notifications/www/request-change-frequency-postgresql.xql}
dbqd.notifications.www.request-change-frequency.update_notification_frequency {dbqd.notifications.www.request-change-frequency.update_notification_frequency {

    update notification_requests
    set interval_id = :interval_id
    where request_id = :request_id

    } {} {} {} c:/web/openacs-4/packages/notifications/www/request-change-frequency.xql}
dbqd.payflowpro.tcl.payflowpro-procs-oracle.payflowpro.log_results.insert_transaction_record {dbqd.payflowpro.tcl.payflowpro-procs-oracle.payflowpro.log_results.insert_transaction_record {
      insert into payflowpro_result_log
      (transaction_id, txn_attempted_type, txn_attempted_time, txn_returned_type, errmsg, auth_code, avs_code_zip, avs_code_addr, amount)
      values
      (:transaction_id, :txn_attempted_type, sysdate, :txn_returned_type, :errmsg, :auth_code, :avs_code_zip, :avs_code_addr, :amount)
    } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/payflowpro/tcl/payflowpro-procs-oracle.xql}
dbqd.payflowpro.tcl.payflowpro-procs.payflowpro.log_results.insert_transaction_record {dbqd.payflowpro.tcl.payflowpro-procs.payflowpro.log_results.insert_transaction_record {
      insert into payflowpro_result_log
      (transaction_id, txn_attempted_type, txn_attempted_time, txn_returned_type, errmsg, auth_code, avs_code_zip, avs_code_addr, amount)
      values
      (:transaction_id, :txn_attempted_type, current_timestamp, :txn_returned_type, :errmsg, :auth_code, :avs_code_zip, :avs_code_addr, :amount)
    } {} {} {postgresql 7.1} c:/web/openacs-4/packages/payflowpro/tcl/payflowpro-procs-postgresql.xql}
dbqd.payflowpro.www.admin.transactions.get_transactions {dbqd.payflowpro.www.admin.transactions.get_transactions {
            select *
            from ${package_key}_result_log
            order by txn_attempted_time
          } {} {} {} c:/web/openacs-4/packages/payflowpro/www/admin/transactions.xql}
dbqd.photo-album.tcl.photo-album-procs-oracle.pa_get_root_folder_internal.pa_root_folder {dbqd.photo-album.tcl.photo-album-procs-oracle.pa_get_root_folder_internal.pa_root_folder {
      select photo_album.get_root_folder(:package_id) from dual
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/photo-album/tcl/photo-album-procs-oracle.xql}
dbqd.photo-album.tcl.photo-album-procs-oracle.pa_new_root_folder.make_new_root {dbqd.photo-album.tcl.photo-album-procs-oracle.pa_new_root_folder.make_new_root {
       begin
	:1 := photo_album.new_root_folder(:package_id);
       end;
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/photo-album/tcl/photo-album-procs-oracle.xql}
dbqd.photo-album.tcl.photo-album-procs-oracle.pa_new_root_folder.get_grantee_id {dbqd.photo-album.tcl.photo-album-procs-oracle.pa_new_root_folder.get_grantee_id {
      select acs.magic_object_id('$party') from dual
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/photo-album/tcl/photo-album-procs-oracle.xql}
dbqd.photo-album.tcl.photo-album-procs-oracle.pa_new_root_folder.grant_default {dbqd.photo-album.tcl.photo-album-procs-oracle.pa_new_root_folder.grant_default {
      
		begin
		  acs_permission.grant_permission (
	            object_id  => :new_folder_id,
	            grantee_id => :grantee_id,
	            privilege  => :privilege
		  );
		end;
	    
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/photo-album/tcl/photo-album-procs-oracle.xql}
dbqd.photo-album.tcl.photo-album-procs-oracle.pa_get_folder_name.folder_name {dbqd.photo-album.tcl.photo-album-procs-oracle.pa_get_folder_name.folder_name {
      
    select content_folder.get_label(:folder_id) from dual
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/photo-album/tcl/photo-album-procs-oracle.xql}
dbqd.photo-album.tcl.photo-album-procs-oracle.pa_context_bar_list.get_start_and_final {dbqd.photo-album.tcl.photo-album-procs-oracle.pa_context_bar_list.get_start_and_final {
      select parent_id as start_id,
	  content_item.get_title(item_id,'t') as final
	  from cr_items where item_id = :item_id
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/photo-album/tcl/photo-album-procs-oracle.xql}
dbqd.photo-album.tcl.photo-album-procs-oracle.pa_context_bar_list.context_bar {dbqd.photo-album.tcl.photo-album-procs-oracle.pa_context_bar_list.context_bar {
      
    select decode(
             content_item.get_content_type(i.item_id),
             'content_folder',
             'index?folder_id=',
             'pa_album',             
             'album?album_id=',
             'photo?photo_id='
           ) || i.item_id,
           content_item.get_title(i.item_id,'t')
    from   cr_items i
    connect by prior i.parent_id = i.item_id
      and i.item_id != :root_folder_id
    start with item_id = :start_id
    order by level desc
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/photo-album/tcl/photo-album-procs-oracle.xql}
dbqd.photo-album.tcl.photo-album-procs-oracle.pa_is_type_in_package.check_is_type_in_package {dbqd.photo-album.tcl.photo-album-procs-oracle.pa_is_type_in_package.check_is_type_in_package {
      select case when (select 1 
	from dual
	where exists (select 1 
	    from cr_items 
	    where item_id = :root_folder 
	    connect by prior parent_id = item_id 
	    start with item_id = :item_id)
	  and content_item.get_content_type(:item_id) = :content_type
	) = 1 then 't' else 'f' end
	from dual
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/photo-album/tcl/photo-album-procs-oracle.xql}
dbqd.photo-album.tcl.photo-album-procs-oracle.pa_grant_privilege_to_creator.grant_privilege {dbqd.photo-album.tcl.photo-album-procs-oracle.pa_grant_privilege_to_creator.grant_privilege {
      
	    begin
	      acs_permission.grant_permission (
	        object_id  => :object_id,
	        grantee_id => :user_id,
	        privilege  => :privilege
	      );
	    end;
	
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/photo-album/tcl/photo-album-procs-oracle.xql}
dbqd.photo-album.tcl.photo-album-procs-oracle.pa_load_images.new_photo {dbqd.photo-album.tcl.photo-album-procs-oracle.pa_load_images.new_photo {
        declare 
            dummy  integer;
        begin

        dummy := pa_photo.new (
            name            => :image_name,
            parent_id       => :album_id,
            item_id         => :photo_id,
            revision_id     => :photo_rev_id,
            creation_user   => :user_id,
            creation_ip     => :peeraddr,
            context_id      => :album_id,
            title           => :client_filename,
            description     => :description,
            is_live         => 't',
            caption         => :caption,
            story           => :story
         );
         end;

    } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/photo-album/tcl/photo-album-procs-oracle.xql}
dbqd.photo-album.tcl.photo-album-procs-oracle.pa_insert_image.pa_insert_image {dbqd.photo-album.tcl.photo-album-procs-oracle.pa_insert_image.pa_insert_image {
      
        declare 
            dummy  integer;
        begin

        dummy := image.new (
            name            => :name,
            parent_id       => :photo_id,
            item_id         => :item_id,
            revision_id     => :rev_id,
            mime_type       => :mime_type,
            creation_user   => :user_id,
            creation_ip     => :peeraddr,
            relation_tag    => :relation,
            title           => :title,
            description     => :description,
            is_live         => :is_live,
            file_size       => :size,
            filename        => :path,
            height          => :height,
            width           => :width,
            context_id      => :context_id
        );
        end;
    
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/photo-album/tcl/photo-album-procs-oracle.xql}
dbqd.photo-album.tcl.photo-album-procs-oracle.pa_load_images.update_photo_data {dbqd.photo-album.tcl.photo-album-procs-oracle.pa_load_images.update_photo_data {

        UPDATE pa_photos 
        SET camera_model = :tmp_exif_Cameramodel,
            user_filename = :upload_name,
            date_taken = to_date(:tmp_exif_DateTime, 'YYYY-MM-DD HH24:MI:SS'),
            flash = :tmp_exif_Flashused,
            aperture = :tmp_exif_Aperture,
            metering = :tmp_exif_MeteringMode,
            focal_length = :tmp_exif_Focallength,
            exposure_time = :tmp_exif_Exposuretime,
            focus_distance = :tmp_exif_FocusDist,
            sha256 = :base_sha256
        WHERE pa_photo_id = :photo_rev_id

    } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/photo-album/tcl/photo-album-procs-oracle.xql}
dbqd.photo-album.tcl.photo-album-procs-oracle.pa_rotate.get_image_files {dbqd.photo-album.tcl.photo-album-procs-oracle.pa_rotate.get_image_files {
      
            select i.image_id, crr.filename, i.width, i.height
            from cr_items cri, cr_revisions crr, images i
            where cri.parent_id = :id
              and crr.revision_id = cri.latest_revision
              and i.image_id = cri.latest_revision
            order by crr.content_length desc
	
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/photo-album/tcl/photo-album-procs-oracle.xql}
dbqd.photo-album.tcl.photo-album-procs.pa_get_root_folder_internal.pa_root_folder {dbqd.photo-album.tcl.photo-album-procs.pa_get_root_folder_internal.pa_root_folder {
      select photo_album__get_root_folder(:package_id) 
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/photo-album/tcl/photo-album-procs-postgresql.xql}
dbqd.photo-album.tcl.photo-album-procs.pa_new_root_folder.make_new_root {dbqd.photo-album.tcl.photo-album-procs.pa_new_root_folder.make_new_root {
      select photo_album__new_root_folder(:package_id)  
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/photo-album/tcl/photo-album-procs-postgresql.xql}
dbqd.photo-album.tcl.photo-album-procs.pa_new_root_folder.get_grantee_id {dbqd.photo-album.tcl.photo-album-procs.pa_new_root_folder.get_grantee_id {
      select acs__magic_object_id('$party') 
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/photo-album/tcl/photo-album-procs-postgresql.xql}
dbqd.photo-album.tcl.photo-album-procs.pa_new_root_folder.grant_default {dbqd.photo-album.tcl.photo-album-procs.pa_new_root_folder.grant_default {
      select acs_permission__grant_permission (
      :new_folder_id, -- object_id
      :grantee_id, -- grantee_id
      :privilege -- privilege
      )
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/photo-album/tcl/photo-album-procs-postgresql.xql}
dbqd.photo-album.tcl.photo-album-procs.pa_get_folder_name.folder_name {dbqd.photo-album.tcl.photo-album-procs.pa_get_folder_name.folder_name {
      select content_folder__get_label(:folder_id) 
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/photo-album/tcl/photo-album-procs-postgresql.xql}
dbqd.photo-album.tcl.photo-album-procs.pa_context_bar_list.get_start_and_final {dbqd.photo-album.tcl.photo-album-procs.pa_context_bar_list.get_start_and_final {
      select parent_id as start_id,
      content_item__get_title(item_id,'t') as final
      from cr_items 
      where item_id = :item_id
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/photo-album/tcl/photo-album-procs-postgresql.xql}
dbqd.photo-album.tcl.photo-album-procs.pa_context_bar_list.context_bar {dbqd.photo-album.tcl.photo-album-procs.pa_context_bar_list.context_bar {
      select case
           when content_item__get_content_type(i.item_id) = 'content_folder'
           then 'index?folder_id='
           when content_item__get_content_type(i.item_id) = 'pa_album'
           then 'album?album_id='
           else 'photo?photo_id='
           end || i.item_id,
           content_item__get_title(i.item_id,'t')
      from cr_items i,
        (select tree_ancestor_keys(cr_items_get_tree_sortkey(:start_id)) as tree_sortkey) parents,
        (select tree_sortkey from cr_items where item_id = :root_folder_id) as root
      where i.tree_sortkey = parents.tree_sortkey
        and i.tree_sortkey > root.tree_sortkey
      order by i.tree_sortkey asc
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/photo-album/tcl/photo-album-procs-postgresql.xql}
dbqd.photo-album.tcl.photo-album-procs.pa_is_type_in_package.check_is_type_in_package {dbqd.photo-album.tcl.photo-album-procs.pa_is_type_in_package.check_is_type_in_package {
      select exists (select 1 
                     from cr_items i, cr_items i2
                     where i.item_id = :item_id
                       and i.tree_sortkey between i2.tree_sortkey and tree_right(i2.tree_sortkey)
                       and i2.item_id = :root_folder
                    )
             and content_item__get_content_type(:item_id) = :content_type

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/photo-album/tcl/photo-album-procs-postgresql.xql}
dbqd.photo-album.tcl.photo-album-procs.pa_grant_privilege_to_creator.grant_privilege {dbqd.photo-album.tcl.photo-album-procs.pa_grant_privilege_to_creator.grant_privilege {
        
        select acs_permission__grant_permission (
        :object_id, -- object_id 
        :user_id, -- grantee_id
        :privilege -- privilege  
        )
        
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/photo-album/tcl/photo-album-procs-postgresql.xql}
dbqd.photo-album.tcl.photo-album-procs.pa_load_images.new_photo {dbqd.photo-album.tcl.photo-album-procs.pa_load_images.new_photo {
        select pa_photo__new (
          :image_name, -- name
          :album_id, -- parent_id
          :photo_id, -- item_id
          :photo_rev_id, -- revision_id
          current_timestamp, -- creation_date
          :user_id, -- creation_user
          :peeraddr, -- creation_ip
          null, -- locale
          :album_id, -- context_id
          :client_filename, -- title
          :description, -- description
          't', -- is_live
          current_timestamp, -- publish_date
          null, -- nls_lang
          :caption, -- caption
          :story -- story
        )
    } {} {} {postgresql 7.1} c:/web/openacs-4/packages/photo-album/tcl/photo-album-procs-postgresql.xql}
dbqd.photo-album.tcl.photo-album-procs.pa_insert_image.pa_insert_image {dbqd.photo-album.tcl.photo-album-procs.pa_insert_image.pa_insert_image {
        select image__new (
          :name, -- name
          :photo_id, -- parent_id
          :item_id, -- item_id
          :rev_id, -- revision_id
          :mime_type, -- mime_type
          :user_id, -- creation_user
          :peeraddr, -- creation_ip
          :relation, -- relation_tag
          :title, -- title
          :description, -- description
          :is_live, -- is_live
          current_timestamp, -- publish_date
          :path, -- path
          :size, -- file_size
          :height, -- height
          :width -- width
        )    
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/photo-album/tcl/photo-album-procs-postgresql.xql}
dbqd.photo-album.tcl.photo-album-procs.pa_load_images.update_photo_data {dbqd.photo-album.tcl.photo-album-procs.pa_load_images.update_photo_data {

        UPDATE pa_photos 
        SET camera_model = :tmp_exif_Cameramodel,
            user_filename = :upload_name,
            date_taken = to_timestamp(:tmp_exif_DateTime,'YYYY-MM-DD HH24:MI:SS'),
            flash = :tmp_exif_Flashused,
            aperture = :tmp_exif_Aperture,
            metering = :tmp_exif_MeteringMode,
            focal_length = :tmp_exif_Focallength,
            exposure_time = :tmp_exif_Exposuretime,
            focus_distance = :tmp_exif_FocusDist,
            sha256 = :base_sha256
        WHERE pa_photo_id = :photo_rev_id

    } {} {} {postgresql 7.1} c:/web/openacs-4/packages/photo-album/tcl/photo-album-procs-postgresql.xql}
dbqd.photo-album.tcl.photo-album-procs.pa_rotate.get_image_files {dbqd.photo-album.tcl.photo-album-procs.pa_rotate.get_image_files {
      
            select i.image_id, crr.content as filename, i.width, i.height
            from cr_items cri, cr_revisions crr, images i
            where cri.parent_id = :id
              and crr.revision_id = cri.latest_revision
              and i.image_id = cri.latest_revision
            order by crr.content_length desc
        
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/photo-album/tcl/photo-album-procs-postgresql.xql}
dbqd.photo-album.tcl.photo-album-procs.pa_get_folder_description.folder_description {dbqd.photo-album.tcl.photo-album-procs.pa_get_folder_description.folder_description {
      
    select description from cr_folders where folder_id = :folder_id
      } {} {} {} c:/web/openacs-4/packages/photo-album/tcl/photo-album-procs.xql}
dbqd.photo-album.tcl.photo-album-procs.pa_all_photos_in_album_internal.get_photo_ids {dbqd.photo-album.tcl.photo-album-procs.pa_all_photos_in_album_internal.get_photo_ids {
      select 
  ci.item_id
from cr_items ci,
  cr_child_rels ccr
where ci.live_revision is not null
  and ci.content_type = 'pa_photo'
  and ccr.parent_id = :album_id
  and ci.item_id = ccr.child_id
order by ccr.order_n
      } {} {} {} c:/web/openacs-4/packages/photo-album/tcl/photo-album-procs.xql}
dbqd.photo-album.tcl.photo-album-procs.pa_pagination_get_total_pages.get_total_pages {dbqd.photo-album.tcl.photo-album-procs.pa_pagination_get_total_pages.get_total_pages {
      
	select 
	ceil(count(*) / [ad_parameter ThumbnailsPerPage])
	from
	($sql)
	
      } {} {} {} c:/web/openacs-4/packages/photo-album/tcl/photo-album-procs.xql}
dbqd.photo-album.www.album-add-oracle.new_album {dbqd.photo-album.www.album-add-oracle.new_album {
      
	    begin
	    :1 := pa_album.new (
	      name           => :name,
	      album_id       => :album_id,
	      parent_id	     => :parent_id,
      	  is_live	     => 't',
	      creation_user  => :user_id,
	      creation_ip    => :peeraddr,
	      title	     => :title,
	      description    => :description,
	      story	     => :story,
          photographer   => :photographer
	    );
	    end;
	
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/photo-album/www/album-add-oracle.xql}
dbqd.photo-album.www.album-add.new_album {dbqd.photo-album.www.album-add.new_album {
      select pa_album__new (
	      :name, -- name          
	      :album_id, -- album_id       
	      :parent_id, -- parent_id	     
      	      't', -- is_live	     
	      :user_id, -- creation_user  
	      :peeraddr, -- creation_ip    
	      :title, -- title	     
	      :description, -- description    
	      :story, -- story	    
              :photographer, -- photographer
	      null, -- revision_id
	      current_timestamp, -- creation_date
	      null, -- locale
	      null, -- context_id
	      current_timestamp, -- publish_date
	      null -- nls_language
	    );
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/photo-album/www/album-add-postgresql.xql}
dbqd.photo-album.www.album-add.duplicate_check {dbqd.photo-album.www.album-add.duplicate_check {
      
	  select count(*)
	  from   cr_items
	  where  (item_id = :album_id or name = :name)
	  and    parent_id = :parent_id
      } {} {} {} c:/web/openacs-4/packages/photo-album/www/album-add.xql}
dbqd.photo-album.www.album-chunk.get_folder_info {dbqd.photo-album.www.album-chunk.get_folder_info {
      select 
      cf.label as folder_name,
      cf.description as folder_description,
      case when acs_permission__permission_p(cf.folder_id, :user_id, 'admin') = 't' then 1 else 0 end as admin_p,
      case when acs_permission__permission_p(cf.folder_id, :user_id, 'pa_create_folder') = 't' then 1 else 0 end as subfolder_p,
      case when acs_permission__permission_p(cf.folder_id, :user_id, 'pa_create_album') = 't' then 1 else 0 end as album_p,
      case when acs_permission__permission_p(cf.folder_id, :user_id, 'write') = 't' then 1 else 0 end as write_p,
      case when acs_permission__permission_p(ci.parent_id, :user_id, 'write') = 't' then 1 else 0 end as parent_folder_write_p,
      (select count(*)  where exists (select 1 from cr_items ci2 where ci2.parent_id = cf.folder_id)) as has_children_p,
      case when acs_permission__permission_p(cf.folder_id, :user_id, 'delete') = 't' then 1 else 0 end as folder_delete_p
      from cr_folders cf,
      cr_items ci 
      where ci.item_id = cf.folder_id
      and ci.item_id = :folder_id
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/photo-album/www/album-chunk-postgresql.xql}
dbqd.photo-album.www.album-chunk.get_children {dbqd.photo-album.www.album-chunk.get_children {
      
    select * from (
      select i.item_id,
        r.title as name,
        r.description,
        'Album' as type,
        1 as ordering_key,
        ic.image_id as iconic,
        ic.width,
        ic.height
      from   cr_items i,
        cr_revisions r,
        pa_albums a left outer join all_photo_images ic
          on (ic.item_id = a.iconic and ic.relation_tag='thumb')
      where i.content_type = 'pa_album'
        and i.parent_id     = :folder_id
        and i.live_revision = r.revision_id
        and a.pa_album_id = i.live_revision
      UNION ALL
      select i.item_id,
        f.label as name,
        f.description,
        'Folder',
        0,
        null as iconic,0,0
      from cr_items i,
        cr_folders f
      where i.parent_id = :folder_id      
        and i.item_id = f.folder_id
      ) as x 
    where acs_permission__permission_p(item_id, :user_id, 'read') = 't'
    order by ordering_key,name

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/photo-album/www/album-chunk-postgresql.xql}
dbqd.photo-album.www.album-delete-oracle.album_delete {dbqd.photo-album.www.album-delete-oracle.album_delete {
      
    begin
        pa_album.del(:album_id);
    end;
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/photo-album/www/album-delete-oracle.xql}
dbqd.photo-album.www.album-delete-oracle.album_name {dbqd.photo-album.www.album-delete-oracle.album_name {
      
    select content_item.get_title(:album_id,'t') from dual
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/photo-album/www/album-delete-oracle.xql}
dbqd.photo-album.www.album-delete.album_delete {dbqd.photo-album.www.album-delete.album_delete {
      select pa_album__delete(:album_id)
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/photo-album/www/album-delete-postgresql.xql}
dbqd.photo-album.www.album-delete.album_name {dbqd.photo-album.www.album-delete.album_name {
      select content_item__get_title(:album_id,'t') 
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/photo-album/www/album-delete-postgresql.xql}
dbqd.photo-album.www.album-delete.get_parent {dbqd.photo-album.www.album-delete.get_parent {
      select parent_id from cr_items where item_id = :album_id
      } {} {} {} c:/web/openacs-4/packages/photo-album/www/album-delete.xql}
dbqd.photo-album.www.album-edit-oracle.update_album_attributes {dbqd.photo-album.www.album-edit-oracle.update_album_attributes {
      
	    declare
	      dummy integer;
	    begin

	    dummy := content_revision.new (
	      title         => :new_title,
	      description   => :new_desc,
	      item_id       => :album_id,
	      revision_id   => :revision_id,
	      creation_date => sysdate,
	      creation_user => :user_id,
	      creation_ip   => :peeraddr
	    );
	    end;
	
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/photo-album/www/album-edit-oracle.xql}
dbqd.photo-album.www.album-edit-oracle.set_live_album {dbqd.photo-album.www.album-edit-oracle.set_live_album {
      begin	
	    content_item.set_live_revision (
	      revision_id => :revision_id
	    );
      end;
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/photo-album/www/album-edit-oracle.xql}
dbqd.photo-album.www.album-edit.update_album_attributes {dbqd.photo-album.www.album-edit.update_album_attributes {
	    select content_revision__new (
	      :new_title, -- title
	      :new_desc, -- description
	      current_timestamp, -- publish_date
	      null, -- mime_type
	      null, -- nls_language
	      null, -- text
	      :album_id, -- item_id
	      :revision_id, -- revision_id
	      current_timestamp, -- creation_date 
	      :user_id, -- creation_user 
	      :peeraddr -- creation_ip
	    )
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/photo-album/www/album-edit-postgresql.xql}
dbqd.photo-album.www.album-edit.set_live_album {dbqd.photo-album.www.album-edit.set_live_album {
      select content_item__set_live_revision (
      :revision_id, -- revision_id
      'ready' -- publish_status
      )
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/photo-album/www/album-edit-postgresql.xql}
dbqd.photo-album.www.album-edit.get_album_info {dbqd.photo-album.www.album-edit.get_album_info {
      
    select 
      cr.title,
      cr. description,
      pa.story,
      pa.iconic as iconic,
      pa.photographer,
      ci.live_revision as previous_revision
    from cr_items ci,
      cr_revisions cr,
      pa_albums pa
    where ci.live_revision = cr.revision_id
      and cr.revision_id = pa.pa_album_id
      and ci.item_id = :album_id

      } {} {} {} c:/web/openacs-4/packages/photo-album/www/album-edit.xql}
dbqd.photo-album.www.album-edit.insert_pa_albums {dbqd.photo-album.www.album-edit.insert_pa_albums {
	    insert into pa_albums (pa_album_id, story, iconic, photographer)
	    values 
	    (:revision_id, :new_story, :iconic, :new_photographer)
      } {} {} {} c:/web/openacs-4/packages/photo-album/www/album-edit.xql}
dbqd.photo-album.www.album-move-oracle.get_folders {dbqd.photo-album.www.album-move-oracle.get_folders {
      select 
    lpad ('&nbsp;&nbsp;&nbsp;',((level - 1) * 6),'&nbsp;&nbsp;&nbsp;') || content_folder.get_label(ci.item_id) as padded_name,
    ci.item_id as folder_id
    from cr_items ci
    where ci.content_type = 'content_folder'
      -- do not include the albums current folder in move to list
      and ci.item_id != :old_folder_id
      and acs_permission.permission_p(ci.item_id, :user_id, 'pa_create_album') = 't'
    connect by prior ci.item_id = ci.parent_id
    start with ci.item_id = :root_folder_id
    
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/photo-album/www/album-move-oracle.xql}
dbqd.photo-album.www.album-move-oracle.album_move {dbqd.photo-album.www.album-move-oracle.album_move {
      
	begin 
	content_item.move (
	  item_id           => :album_id,
	  target_folder_id  => :new_folder_id
	);
	end;
	
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/photo-album/www/album-move-oracle.xql}
dbqd.photo-album.www.album-move.get_folders {dbqd.photo-album.www.album-move.get_folders {
      select 
      repeat('&nbsp;&nbsp;&nbsp;',(tree_level(ci.tree_sortkey) - tree_level(i2.tree_sortkey) - 1) * 6) || content_folder__get_label(ci.item_id) as padded_name,
      ci.item_id as folder_id
      from cr_items ci, cr_items i2
      where ci.content_type = 'content_folder'
      -- do not include the albums current folder in move to list
        and ci.item_id <> :old_folder_id
        and acs_permission__permission_p(ci.item_id, :user_id, 'pa_create_album')
        and ci.tree_sortkey between i2.tree_sortkey and tree_right(i2.tree_sortkey)
        and i2.item_id = :root_folder_id
      order by ci.tree_sortkey    
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/photo-album/www/album-move-postgresql.xql}
dbqd.photo-album.www.album-move.album_move {dbqd.photo-album.www.album-move.album_move {
      select content_item__move (
      :album_id, -- item_id           
      :new_folder_id -- target_folder_id  
      )
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/photo-album/www/album-move-postgresql.xql}
dbqd.photo-album.www.album-move.get_album_info {dbqd.photo-album.www.album-move.get_album_info {
      select cr.title,cr.description,pa.story
        from pa_albums pa, cr_items ci, cr_revisions cr
       where ci.live_revision = cr.revision_id
         and ci.live_revision = pa_album_id
         and ci.item_id = :album_id
      } {} {} {} c:/web/openacs-4/packages/photo-album/www/album-move.xql}
dbqd.photo-album.www.album-move.get_parent_folder {dbqd.photo-album.www.album-move.get_parent_folder {
      select parent_id from cr_items where item_id = :album_id
      } {} {} {} c:/web/openacs-4/packages/photo-album/www/album-move.xql}
dbqd.photo-album.www.album-move.context_update {dbqd.photo-album.www.album-move.context_update {
      
	update acs_objects
	set    context_id = :new_folder_id
	where  object_id = :album_id
	
      } {} {} {} c:/web/openacs-4/packages/photo-album/www/album-move.xql}
dbqd.photo-album.www.album-move.folder_name {dbqd.photo-album.www.album-move.folder_name {
      
	select name from cr_items where item_id = :album_id
      } {} {} {} c:/web/openacs-4/packages/photo-album/www/album-move.xql}
dbqd.photo-album.www.album-move.duplicate_check {dbqd.photo-album.www.album-move.duplicate_check {
      
	select count(*)
	from   cr_items
	where  name = :folder_name
	and    parent_id = :new_folder_id
      } {} {} {} c:/web/openacs-4/packages/photo-album/www/album-move.xql}
dbqd.photo-album.www.album-oracle.get_album_info {dbqd.photo-album.www.album-oracle.get_album_info {

    select cr.title,
           cr.description,
           pa.story,
           ci.parent_id as parent_folder_id,
           case when acs_permission.permission_p(ci.item_id, :user_id, 'admin') = 't' then 1 else 0 end as admin_p,
           case when acs_permission.permission_p(ci.item_id, :user_id, 'pa_create_photo') = 't' then 1 else 0 end as photo_p,
           case when acs_permission.permission_p(ci.item_id, :user_id, 'write') ='t' then 1 else 0 end as write_p,
           case when acs_permission.permission_p(ci.parent_id, :user_id, 'write') = 't' then 1 else 0 end as folder_write_p,
           case when acs_permission.permission_p(ci.item_id, :user_id, 'delete') = 't' then 1 else 0 end as album_delete_p
    from cr_items ci,
         cr_revisions cr,
         pa_albums pa
    where ci.live_revision = cr.revision_id
      and ci.live_revision = pa_album_id
      and ci.item_id = :album_id

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/photo-album/www/album-oracle.xql}
dbqd.photo-album.www.album.get_album_info {dbqd.photo-album.www.album.get_album_info {

    select cr.title,
           cr.description,
           pa.story,
           ci.parent_id as parent_folder_id,
           case when acs_permission__permission_p(ci.item_id, :user_id, 'admin') = 't' then 1 else 0 end as admin_p,
           case when acs_permission__permission_p(ci.item_id, :user_id, 'pa_create_photo') = 't' then 1 else 0 end as photo_p,
           case when acs_permission__permission_p(ci.item_id, :user_id, 'write') ='t' then 1 else 0 end as write_p,
           case when acs_permission__permission_p(ci.parent_id, :user_id, 'write') = 't' then 1 else 0 end as folder_write_p,
           case when acs_permission__permission_p(ci.item_id, :user_id, 'delete') = 't' then 1 else 0 end as album_delete_p
    from cr_items ci,
         cr_revisions cr,
         pa_albums pa
    where ci.live_revision = cr.revision_id
      and ci.live_revision = pa_album_id
      and ci.item_id = :album_id

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/photo-album/www/album-postgresql.xql}
dbqd.photo-album.www.album.get_child_photos {dbqd.photo-album.www.album.get_child_photos {
      select ci.item_id as photo_id,
      (select pp.caption from pa_photos pp where pp.pa_photo_id = ci.live_revision) as caption,
      i.image_id as thumb_path,
      i.height as thumb_height,
      i.width as thumb_width
    from cr_items ci,
      cr_items ci2,
      cr_child_rels ccr2,
      images i
    where ccr2.relation_tag = 'thumb'
      and ci.item_id = ccr2.parent_id
      and ccr2.child_id = ci2.item_id
      and ci2.live_revision = i.image_id
      and ci.live_revision is not null
      and ci.item_id in ([join $photos_on_page ","])
      } {} {} {} c:/web/openacs-4/packages/photo-album/www/album.xql}
dbqd.photo-album.www.base-photo.get_photo_info {dbqd.photo-album.www.base-photo.get_photo_info {
      select
 pp.caption,
 pp.story,
 cr.title,
 cr.description,
 i.height as height,
 i.width as width,
 i.image_id as image_id,
 ci.parent_id as album_id
from cr_items ci,
  cr_revisions cr,
  pa_photos pp,
  cr_items ci2,
  cr_child_rels ccr2,
  images i
where cr.revision_id = pp.pa_photo_id
  and ci.live_revision = cr.revision_id
  and ci.item_id = ccr2.parent_id
  and ccr2.child_id = ci2.item_id
  and ccr2.relation_tag = 'base'
  and ci2.live_revision = i.image_id
  and ci.item_id = :photo_id

      } {} {} {} c:/web/openacs-4/packages/photo-album/www/base-photo.xql}
dbqd.photo-album.www.clipboard-ae-oracle.new_collection {dbqd.photo-album.www.clipboard-ae-oracle.new_collection {
	begin
	:1 := pa_collection.new(
        p_collection_id => :collection_id, 
        p_owner_id      => :user_id, 
        p_title         => :title, 
        p_creation_date => sysdate, 
        p_creation_user => :user_id, 
        p_creation_ip   => :peeraddr, 
        p_context_id    => :context
	);
	end;
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/photo-album/www/clipboard-ae-oracle.xql}
dbqd.photo-album.www.clipboard-ae.new_collection {dbqd.photo-album.www.clipboard-ae.new_collection {

select pa_collection__new(:collection_id, :user_id, :title, now(), :user_id, :peeraddr, :context)

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/photo-album/www/clipboard-ae-postgresql.xql}
dbqd.photo-album.www.clipboard-attach-oracle.new_collection {dbqd.photo-album.www.clipboard-attach-oracle.new_collection {

    begin
        :1 := pa_collection.new (
            p_collection_id => :collection_id, 
            p_owner_id      => :user_id, 
            p_title         => :title, 
            p_creation_date => sysdate, 
            p_creation_user => :user_id, 
            p_creation_ip   => :peeraddr, 
            p_context_id    => :context
        );
    end;

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/photo-album/www/clipboard-attach-oracle.xql}
dbqd.photo-album.www.clipboard-attach-oracle.map_photo {dbqd.photo-album.www.clipboard-attach-oracle.map_photo {

    insert into pa_collection_photo_map 
    (collection_id, photo_id) 
    select :collection_id, :photo_id from dual where 
    acs_permission.permission_p(:collection_id, :user_id, 'write') = 't'

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/photo-album/www/clipboard-attach-oracle.xql}
dbqd.photo-album.www.clipboard-attach.new_collection {dbqd.photo-album.www.clipboard-attach.new_collection {

select pa_collection__new(:collection_id, :user_id, :title, now(), :user_id, :peeraddr, :context)

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/photo-album/www/clipboard-attach-postgresql.xql}
dbqd.photo-album.www.clipboard-attach.map_photo {dbqd.photo-album.www.clipboard-attach.map_photo {

    insert into pa_collection_photo_map 
    (collection_id, photo_id) 
    select :collection_id, :photo_id where 
    acs_permission__permission_p(:collection_id, :user_id, 'write') = 't'

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/photo-album/www/clipboard-attach-postgresql.xql}
dbqd.photo-album.www.clipboard-remove-oracle.unmap_photo {dbqd.photo-album.www.clipboard-remove-oracle.unmap_photo {

    delete from pa_collection_photo_map 
    where collection_id = :collection_id 
      and photo_id = :photo_id 
      and acs_permission.permission_p(:collection_id, :user_id, 'write') = 't'

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/photo-album/www/clipboard-remove-oracle.xql}
dbqd.photo-album.www.clipboard-remove.unmap_photo {dbqd.photo-album.www.clipboard-remove.unmap_photo {

    delete from pa_collection_photo_map 
    where collection_id = :collection_id 
      and photo_id = :photo_id 
      and acs_permission__permission_p(:collection_id, :user_id, 'write') = 't'

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/photo-album/www/clipboard-remove-postgresql.xql}
dbqd.photo-album.www.clipboards-oracle.clipboards {dbqd.photo-album.www.clipboards-oracle.clipboards {

  SELECT c.collection_id, title, 
         sum(case when m.photo_id is not null then 1 else 0 end) as photos
    FROM pa_collections c, pa_collection_photo_map m 
   WHERE m.collection_id(+) = c.collection_id 
     AND c.owner_id = :user_id
   GROUP BY c.collection_id, title
   ORDER BY title

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/photo-album/www/clipboards-oracle.xql}
dbqd.photo-album.www.clipboards.clipboards {dbqd.photo-album.www.clipboards.clipboards {

  SELECT c.collection_id, title, 
         sum(case when m.photo_id is not null then 1 else 0 end) as photos
    FROM pa_collections as c left outer join pa_collection_photo_map as m 
      on (m.collection_id = c.collection_id) 
   WHERE c.owner_id = :user_id
   GROUP BY c.collection_id, title
   ORDER BY title

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/photo-album/www/clipboards-postgresql.xql}
dbqd.photo-album.www.folder-add-oracle.new_folder {dbqd.photo-album.www.folder-add-oracle.new_folder {
      
	    declare
	      fldr_id    integer;
	    begin
	    
	    fldr_id :=content_folder.new (
	      name          => :name,
              label         => :label,
              description   => :description,
              parent_id     => :parent_id,
              folder_id     => :folder_id,
              creation_date => sysdate,
              creation_user => :user_id,
              creation_ip   => :peeraddr
	    );

	    -- content_folder.new automatically registers 
	    -- the content_types of the parent to the new folder
	
	    end;
	
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/photo-album/www/folder-add-oracle.xql}
dbqd.photo-album.www.folder-add.new_folder {dbqd.photo-album.www.folder-add.new_folder {
	    select content_folder__new (
	      :name, -- name 
              :label, -- label
              :description, -- description 
              :parent_id, -- parent_id 
	      null, -- context_id
              :folder_id, -- folder_id    
              current_timestamp, -- creation_date 
              :user_id, -- creation_user 
              :peeraddr -- creation_ip   
	    )
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/photo-album/www/folder-add-postgresql.xql}
dbqd.photo-album.www.folder-add.duplicate_check {dbqd.photo-album.www.folder-add.duplicate_check {
      
	  select count(*)
	  from   cr_items
	  where  (item_id = :folder_id or name = :name)
	  and    parent_id = :parent_id
      } {} {} {} c:/web/openacs-4/packages/photo-album/www/folder-add.xql}
dbqd.photo-album.www.folder-delete-oracle.folder_delete {dbqd.photo-album.www.folder-delete-oracle.folder_delete {
      
    begin
        content_folder.del(:folder_id);
    end;
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/photo-album/www/folder-delete-oracle.xql}
dbqd.photo-album.www.folder-delete.folder_delete {dbqd.photo-album.www.folder-delete.folder_delete {
      select content_folder__delete(:folder_id)
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/photo-album/www/folder-delete-postgresql.xql}
dbqd.photo-album.www.folder-delete.child_count {dbqd.photo-album.www.folder-delete.child_count {
      
	select count(*) from cr_items where parent_id = :folder_id
      } {} {} {} c:/web/openacs-4/packages/photo-album/www/folder-delete.xql}
dbqd.photo-album.www.folder-delete.get_parent {dbqd.photo-album.www.folder-delete.get_parent {
      select parent_id from cr_items where item_id = :folder_id
      } {} {} {} c:/web/openacs-4/packages/photo-album/www/folder-delete.xql}
dbqd.photo-album.www.folder-delete.folder_name {dbqd.photo-album.www.folder-delete.folder_name {
      
    select label from cr_folders where folder_id = :folder_id
      } {} {} {} c:/web/openacs-4/packages/photo-album/www/folder-delete.xql}
dbqd.photo-album.www.folder-edit-oracle.edit_folder {dbqd.photo-album.www.folder-edit-oracle.edit_folder {
      
	    begin
	    content_folder.rename (
            folder_id  => :folder_id,
            label => :label,
            description  => :description
	    );
	    end;
	
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/photo-album/www/folder-edit-oracle.xql}
dbqd.photo-album.www.folder-edit.edit_folder {dbqd.photo-album.www.folder-edit.edit_folder {
      select content_folder__rename (
            :folder_id, -- folder_id 
	    null, -- name
            :label, -- label 
            :description -- description  
      )
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/photo-album/www/folder-edit-postgresql.xql}
dbqd.photo-album.www.folder-move-oracle.get_folder_info {dbqd.photo-album.www.folder-move-oracle.get_folder_info {
      select content_folder.get_label(:folder_id) as title from dual
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/photo-album/www/folder-move-oracle.xql}
dbqd.photo-album.www.folder-move-oracle.get_folders {dbqd.photo-album.www.folder-move-oracle.get_folders {
      select padded_name, folder_id from (select
    ci.item_id,
    lpad ('&nbsp;&nbsp;&nbsp;',((level - 1) * 6),'&nbsp;&nbsp;&nbsp;') || content_folder.get_label(ci.item_id) as padded_name,
    ci.item_id as folder_id
    from cr_items ci
    where ci.content_type = 'content_folder'
    start with ci.item_id = :root_folder_id
    connect by prior ci.item_id = ci.parent_id
      and ci.item_id != :folder_id
    )
    where acs_permission.permission_p(item_id, :user_id, 'pa_create_folder') = 't'
    
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/photo-album/www/folder-move-oracle.xql}
dbqd.photo-album.www.folder-move-oracle.folder_move {dbqd.photo-album.www.folder-move-oracle.folder_move {
      
	begin 
	content_folder.move (
	  folder_id           => :folder_id,
	  target_folder_id  => :new_folder_id
	);
	end;
	
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/photo-album/www/folder-move-oracle.xql}
dbqd.photo-album.www.folder-move.get_folder_info {dbqd.photo-album.www.folder-move.get_folder_info {
      select content_folder__get_label(:folder_id) as title 
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/photo-album/www/folder-move-postgresql.xql}
dbqd.photo-album.www.folder-move.get_folders {dbqd.photo-album.www.folder-move.get_folders {
    select
    repeat('&nbsp;&nbsp;&nbsp;',(tree_level(ci.tree_sortkey) - tree_level(i2.tree_sortkey) - 1) * 6) || content_folder__get_label(ci.item_id) as padded_name,
    ci.item_id as folder_id
    from cr_items ci, cr_items i2
    where ci.content_type = 'content_folder'
      and ci.item_id <> :folder_id  
      and ci.tree_sortkey between i2.tree_sortkey and tree_right(i2.tree_sortkey)
      and i2.item_id = :root_folder_id
      and acs_permission__permission_p(ci.item_id, :user_id, 'pa_create_folder') = 't'
    order by ci.tree_sortkey    
    
    
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/photo-album/www/folder-move-postgresql.xql}
dbqd.photo-album.www.folder-move.folder_move {dbqd.photo-album.www.folder-move.folder_move {
	select content_folder__move (
	  :folder_id, -- folder_id           
	  :new_folder_id -- target_folder_id  
	)
	
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/photo-album/www/folder-move-postgresql.xql}
dbqd.photo-album.www.folder-move.get_parent_folder {dbqd.photo-album.www.folder-move.get_parent_folder {
      select parent_id from cr_items where item_id = :folder_id
      } {} {} {} c:/web/openacs-4/packages/photo-album/www/folder-move.xql}
dbqd.photo-album.www.folder-move.context_update {dbqd.photo-album.www.folder-move.context_update {
      
	update acs_objects
	set    context_id = :new_folder_id
	where  object_id = :folder_id
	
      } {} {} {} c:/web/openacs-4/packages/photo-album/www/folder-move.xql}
dbqd.photo-album.www.folder-move.folder_name {dbqd.photo-album.www.folder-move.folder_name {
      
	select name from cr_items where item_id = :folder_id
      } {} {} {} c:/web/openacs-4/packages/photo-album/www/folder-move.xql}
dbqd.photo-album.www.folder-move.duplicate_check {dbqd.photo-album.www.folder-move.duplicate_check {
      
	select count(*)
	from   cr_items
	where  name = :folder_name
	and    parent_id = :new_folder_id
      } {} {} {} c:/web/openacs-4/packages/photo-album/www/folder-move.xql}
dbqd.photo-album.www.index-oracle.get_folder_info {dbqd.photo-album.www.index-oracle.get_folder_info {
      
    select 
      cf.label as folder_name,
      cf.description as folder_description,
      decode(acs_permission.permission_p(cf.folder_id, :user_id, 'admin'),'t',1,0) as admin_p,
      decode(acs_permission.permission_p(cf.folder_id, :user_id, 'pa_create_folder'),'t',1,0) as subfolder_p,
      decode(acs_permission.permission_p(cf.folder_id, :user_id, 'pa_create_album'),'t',1,0) as album_p,
      decode(acs_permission.permission_p(cf.folder_id, :user_id, 'write'),'t',1,0) as write_p,
      decode(acs_permission.permission_p(ci.parent_id, :user_id, 'write'),'t',1,0) as parent_folder_write_p,
      (select count(*) from dual where exists (select 1 from cr_items ci2 where ci2.parent_id = cf.folder_id)) as has_children_p,
      decode(acs_permission.permission_p(cf.folder_id, :user_id, 'delete'),'t',1,0) as folder_delete_p
    from cr_folders cf,
      cr_items ci 
    where ci.item_id = cf.folder_id
      and ci.item_id = :folder_id

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/photo-album/www/index-oracle.xql}
dbqd.photo-album.www.index-oracle.get_children {dbqd.photo-album.www.index-oracle.get_children {
      
    select * from
      (select i.item_id,
        r.title as name,
        r.description,
        'Album' as type,
        1 as ordering_key,
        icon.image_id as iconic,
        icon.width,
        icon.height
      from   cr_items i,
        cr_revisions r,
        pa_albums a,
        (select item_id, image_id, height, width 
           from all_photo_images 
          where relation_tag = 'thumb') icon 
      where i.content_type = 'pa_album'
        and i.parent_id     = :folder_id
        and i.live_revision = r.revision_id
        and a.pa_album_id = i.live_revision
        and icon.item_id(+) = a.iconic
      UNION ALL
      select i.item_id,
        f.label as name,
        f.description,
        'Folder' as type,
	0 as ordering_key,
        0 as iconic,
        0,
        0
      from cr_items i,
        cr_folders f
      where i.parent_id = :folder_id      
        and i.item_id = f.folder_id
      ) x
    where acs_permission.permission_p(item_id, :user_id, 'read') = 't'
    order by ordering_key,name

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/photo-album/www/index-oracle.xql}
dbqd.photo-album.www.index.get_folder_info {dbqd.photo-album.www.index.get_folder_info {
      select 
      cf.label as folder_name,
      cf.description as folder_description,
      case when acs_permission__permission_p(cf.folder_id, :user_id, 'admin') = 't' then 1 else 0 end as admin_p,
      case when acs_permission__permission_p(cf.folder_id, :user_id, 'pa_create_folder') = 't' then 1 else 0 end as subfolder_p,
      case when acs_permission__permission_p(cf.folder_id, :user_id, 'pa_create_album') = 't' then 1 else 0 end as album_p,
      case when acs_permission__permission_p(cf.folder_id, :user_id, 'write') = 't' then 1 else 0 end as write_p,
      case when acs_permission__permission_p(ci.parent_id, :user_id, 'write') = 't' then 1 else 0 end as parent_folder_write_p,
      (select count(*)  where exists (select 1 from cr_items ci2 where ci2.parent_id = cf.folder_id)) as has_children_p,
      case when acs_permission__permission_p(cf.folder_id, :user_id, 'delete') = 't' then 1 else 0 end as folder_delete_p
      from cr_folders cf,
      cr_items ci 
      where ci.item_id = cf.folder_id
      and ci.item_id = :folder_id
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/photo-album/www/index-postgresql.xql}
dbqd.photo-album.www.index.get_children {dbqd.photo-album.www.index.get_children {
      
    select * from (
      select i.item_id,
        r.title as name,
        r.description,
        'Album' as type,
        1 as ordering_key,
        ic.image_id as iconic,
        ic.width,
        ic.height
      from   cr_items i,
        cr_revisions r,
        pa_albums a left outer join all_photo_images ic
          on (ic.item_id = a.iconic and ic.relation_tag='thumb')
      where i.content_type = 'pa_album'
        and i.parent_id     = :folder_id
        and i.live_revision = r.revision_id
        and a.pa_album_id = i.live_revision
      UNION ALL
      select i.item_id,
        f.label as name,
        f.description,
        'Folder',
        0,
        null as iconic,0,0
      from cr_items i,
        cr_folders f
      where i.parent_id = :folder_id      
        and i.item_id = f.folder_id
      ) as x 
    where acs_permission__permission_p(item_id, :user_id, 'read') = 't'
    order by ordering_key,name

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/photo-album/www/index-postgresql.xql}
dbqd.photo-album.www.photo-add-2.check_photo_id {dbqd.photo-album.www.photo-add-2.check_photo_id {
      select count(*) from cr_items where item_id = :photo_id
      } {} {} {} c:/web/openacs-4/packages/photo-album/www/photo-add-2.xql}
dbqd.photo-album.www.photo-add-oracle.get_next_object_id {dbqd.photo-album.www.photo-add-oracle.get_next_object_id {
      select acs_object_id_seq.nextval from dual
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/photo-album/www/photo-add-oracle.xql}
dbqd.photo-album.www.photo-add.get_next_object_id {dbqd.photo-album.www.photo-add.get_next_object_id {
      select acs_object_id_seq.nextval 
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/photo-album/www/photo-add-postgresql.xql}
dbqd.photo-album.www.photo-delete-oracle.drop_pa_image {dbqd.photo-album.www.photo-delete-oracle.drop_pa_image {
      
	begin
	pa_photo.del (:photo_id);
	end;
    
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/photo-album/www/photo-delete-oracle.xql}
dbqd.photo-album.www.photo-delete.drop_image {dbqd.photo-album.www.photo-delete.drop_image {
	select pa_photo__delete (:photo_id)
     } {} {} {postgresql 7.1} c:/web/openacs-4/packages/photo-album/www/photo-delete-postgresql.xql}
dbqd.photo-album.www.photo-delete.get_parent_album {dbqd.photo-album.www.photo-delete.get_parent_album {
      select parent_id from cr_items where item_id = :photo_id
      } {} {} {} c:/web/openacs-4/packages/photo-album/www/photo-delete.xql}
dbqd.photo-album.www.photo-delete.get_photo_info {dbqd.photo-album.www.photo-delete.get_photo_info {
      select 
      cr.title,
      i.height as height,
      i.width as width,
      i.image_id as image_id
    from cr_items ci,
      cr_revisions cr,
      cr_items ci2,
      cr_child_rels ccr2,
      images i
    where ci.live_revision = cr.revision_id
      and ci.item_id = ccr2.parent_id
      and ccr2.child_id = ci2.item_id
      and ccr2.relation_tag = 'viewer'
      and ci2.live_revision = i.image_id
      and ci.item_id = :photo_id
     
      } {} {} {} c:/web/openacs-4/packages/photo-album/www/photo-delete.xql}
dbqd.photo-album.www.photo-edit-oracle.get_next_object_id {dbqd.photo-album.www.photo-edit-oracle.get_next_object_id {
      select acs_object_id_seq.nextval from dual
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/photo-album/www/photo-edit-oracle.xql}
dbqd.photo-album.www.photo-edit-oracle.update_photo_attributes {dbqd.photo-album.www.photo-edit-oracle.update_photo_attributes {
      
	    declare
	      dummy integer;
	    begin

	    dummy := content_revision.new (
	      title => :new_title,
  	      description => :new_desc,
	      item_id => :photo_id,
	      revision_id => :revision_id,
	      creation_date => sysdate,
	      creation_user => :user_id,
	      creation_ip => :peeraddr
	    );
	    end;
	
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/photo-album/www/photo-edit-oracle.xql}
dbqd.photo-album.www.photo-edit-oracle.update_photo_user_filename {dbqd.photo-album.www.photo-edit-oracle.update_photo_user_filename {
	 UPDATE pa_photos
 	    SET user_filename = prev.user_filename,
                camera_model = prev.camera_model,
                date_taken   = prev.date_taken,
                flash        = prev.flash, 
                aperture     = prev.aperture,
                metering     = prev.metering,   
                focal_length = prev.focal_length,
                exposure_time  = prev.exposure_time,
                focus_distance = prev.focus_distance,
                sha256         = prev.sha256,
                photographer   = prev.photographer
           FROM (
             SELECT user_filename,camera_model,date_taken,flash, 
                    aperture,metering,focal_length,exposure_time,
                    focus_distance,sha256,photographer
               FROM pa_photos prev
              WHERE prev.pa_photo_id = :previous_revision
              ) prev
           WHERE pa_photo_id = :revision_id
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/photo-album/www/photo-edit-oracle.xql}
dbqd.photo-album.www.photo-edit-oracle.set_live_revision {dbqd.photo-album.www.photo-edit-oracle.set_live_revision {
            begin	
	    content_item.set_live_revision (
	      revision_id => :revision_id
            );

	    end;
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/photo-album/www/photo-edit-oracle.xql}
dbqd.photo-album.www.photo-edit.get_next_object_id {dbqd.photo-album.www.photo-edit.get_next_object_id {
      select acs_object_id_seq.nextval 
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/photo-album/www/photo-edit-postgresql.xql}
dbqd.photo-album.www.photo-edit.update_photo_attributes {dbqd.photo-album.www.photo-edit.update_photo_attributes {
	    select content_revision__new (
	      :new_title, -- title => 
  	      :new_desc, -- description 
      	      current_timestamp, -- publish_date
      	      null, -- mime_type
      	      null, -- nls_language
              null, -- locale
	      :photo_id, -- item_id 
	      :revision_id, -- revision_id 
	      current_timestamp, -- creation_date 
	      :user_id, -- creation_user
	      :peeraddr -- creation_ip 
	    )
	      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/photo-album/www/photo-edit-postgresql.xql}
dbqd.photo-album.www.photo-edit.update_photo_user_filename {dbqd.photo-album.www.photo-edit.update_photo_user_filename {
	 UPDATE pa_photos
 	    SET user_filename = prev.user_filename,
                camera_model = prev.camera_model,
                date_taken   = prev.date_taken,
                flash        = prev.flash, 
                aperture     = prev.aperture,
                metering     = prev.metering,   
                focal_length = prev.focal_length,
                exposure_time  = prev.exposure_time,
                focus_distance = prev.focus_distance,
                sha256         = prev.sha256,
                photographer   = prev.photographer
           FROM (
             SELECT user_filename,camera_model,date_taken,flash, 
                    aperture,metering,focal_length,exposure_time,
                    focus_distance,sha256,photographer
               FROM pa_photos prev
              WHERE prev.pa_photo_id = :previous_revision
              ) prev
           WHERE pa_photo_id = :revision_id
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/photo-album/www/photo-edit-postgresql.xql}
dbqd.photo-album.www.photo-edit.set_live_revision {dbqd.photo-album.www.photo-edit.set_live_revision {
	    select content_item__set_live_revision (:revision_id)
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/photo-album/www/photo-edit-postgresql.xql}
dbqd.photo-album.www.photo-edit.get_photo_info {dbqd.photo-album.www.photo-edit.get_photo_info {
      select 
      ci.live_revision as previous_revision,
      pp.caption,
      pp.story,
      cr.title,
      cr.description,
      i.height as height,
      i.width as width,
      i.image_id as image_id
    from cr_items ci,
      cr_revisions cr,
      pa_photos pp,
      cr_items ci2,
      cr_child_rels ccr2,
      images i
    where ci.live_revision = pp.pa_photo_id
      and ci.live_revision = cr.revision_id
      and ci.item_id = ccr2.parent_id
      and ccr2.child_id = ci2.item_id
      and ccr2.relation_tag = 'viewer'
      and ci2.live_revision = i.image_id
      and ci.item_id = :photo_id

      } {} {} {} c:/web/openacs-4/packages/photo-album/www/photo-edit.xql}
dbqd.photo-album.www.photo-edit.insert_photo_attributes {dbqd.photo-album.www.photo-edit.insert_photo_attributes {
	    insert into pa_photos 
        (pa_photo_id, story, caption, 
         user_filename,camera_model,date_taken,flash, 
         aperture,metering,focal_length,exposure_time,
         focus_distance,sha256,photographer)
        SELECT :revision_id, :new_story, :new_caption, 
               user_filename,camera_model,date_taken,flash, 
               aperture,metering,focal_length,exposure_time,
               focus_distance,sha256,photographer
          FROM pa_photos prev
         WHERE prev.pa_photo_id = :previous_revision
        
      } {} {} {} c:/web/openacs-4/packages/photo-album/www/photo-edit.xql}
dbqd.photo-album.www.photo-iconic-oracle.photo_iconic {dbqd.photo-album.www.photo-iconic-oracle.photo_iconic {

    UPDATE pa_albums 
       SET iconic = :photo_id 
     WHERE pa_album_id = content_item.get_live_revision(:album_id)

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/photo-album/www/photo-iconic-oracle.xql}
dbqd.photo-album.www.photo-iconic.photo_iconic {dbqd.photo-album.www.photo-iconic.photo_iconic {

    UPDATE pa_albums 
       SET iconic = :photo_id 
     WHERE pa_album_id = content_item__get_live_revision(:album_id)

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/photo-album/www/photo-iconic-postgresql.xql}
dbqd.photo-album.www.photo-move-oracle.get_albums {dbqd.photo-album.www.photo-move-oracle.get_albums {
    select r.title as name, i.item_id
    from cr_items i, cr_revisions r
    where i.live_revision = r.revision_id
      and acs_permission.permission_p(i.item_id, :user_id, 'pa_create_photo') = 't'
      and i.content_type = 'pa_album'
      and i.item_id != :old_album_id
    connect by prior i.item_id = i.parent_id
    start with i.item_id = :root_folder_id
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/photo-album/www/photo-move-oracle.xql}
dbqd.photo-album.www.photo-move.get_albums {dbqd.photo-album.www.photo-move.get_albums {
    select r.title as name, i.item_id
    from cr_items i, cr_revisions r, cr_items i2
    where i.live_revision = r.revision_id
      and acs_permission__permission_p(i.item_id, :user_id, 'pa_create_photo') = 't'
      and i.content_type = 'pa_album'
      and i.item_id != :old_album_id
      and i.tree_sortkey between i2.tree_sortkey and tree_right(i2.tree_sortkey)
      and i2.item_id = :root_folder_id
    order by i.tree_sortkey
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/photo-album/www/photo-move-postgresql.xql}
dbqd.photo-album.www.photo-move.get_parent_album {dbqd.photo-album.www.photo-move.get_parent_album {
      select parent_id from cr_items where item_id = :photo_id
      } {} {} {} c:/web/openacs-4/packages/photo-album/www/photo-move.xql}
dbqd.photo-album.www.photo-move.get_photo_info {dbqd.photo-album.www.photo-move.get_photo_info {
      select 
      cr.title,
      i.height as height,
      i.width as width,
      i.image_id as image_id
    from cr_items ci,
      cr_revisions cr,
      cr_items ci2,
      cr_child_rels ccr2,
      images i
    where ci.live_revision = cr.revision_id
      and ci.item_id = ccr2.parent_id
      and ccr2.child_id = ci2.item_id
      and ccr2.relation_tag = 'viewer'
      and ci2.live_revision = i.image_id
      and ci.item_id = :photo_id

      } {} {} {} c:/web/openacs-4/packages/photo-album/www/photo-move.xql}
dbqd.photo-album.www.photo-move.photo_rel_id {dbqd.photo-album.www.photo-move.photo_rel_id {
	select rel_id from cr_child_rels 
	where parent_id = :old_album_id
	  and child_id = :photo_id
      } {} {} {} c:/web/openacs-4/packages/photo-album/www/photo-move.xql}
dbqd.photo-album.www.photo-move.photo_move {dbqd.photo-album.www.photo-move.photo_move {

	update cr_items
	set parent_id = :new_album_id
	where item_id = :photo_id

      } {} {} {} c:/web/openacs-4/packages/photo-album/www/photo-move.xql}
dbqd.photo-album.www.photo-move.photo_move2 {dbqd.photo-album.www.photo-move.photo_move2 {
      
	update cr_child_rels 
	set parent_id = :new_album_id
	where parent_id = :old_album_id
	  and child_id = :photo_id
	
      } {} {} {} c:/web/openacs-4/packages/photo-album/www/photo-move.xql}
dbqd.photo-album.www.photo-move.context_update {dbqd.photo-album.www.photo-move.context_update {
      
	update acs_objects
	set    context_id = :new_album_id
	where  object_id = :photo_id or object_id = :rel_id
	
      } {} {} {} c:/web/openacs-4/packages/photo-album/www/photo-move.xql}
dbqd.photo-album.www.photo-move.filename {dbqd.photo-album.www.photo-move.filename {

	select name from cr_items where item_id = :photo_id
      } {} {} {} c:/web/openacs-4/packages/photo-album/www/photo-move.xql}
dbqd.photo-album.www.photo-move.duplicate_check {dbqd.photo-album.www.photo-move.duplicate_check {
      
	select count(*)
	from   cr_items
	where  name = :filename
	and    parent_id = :new_album_id
      } {} {} {} c:/web/openacs-4/packages/photo-album/www/photo-move.xql}
dbqd.photo-album.www.photo-oracle.get_photo_info {dbqd.photo-album.www.photo-oracle.get_photo_info {

select
 pp.caption,
 pp.story,
 cr.title,
 cr.description,
 i.height as height,
 i.width as width,
 i.image_id as image_id,
 ci.parent_id as album_id,
 case when acs_permission.permission_p(ci.item_id, :user_id, 'admin') ='t' then 1 else 0 end as admin_p,
 case when acs_permission.permission_p(ci.item_id, :user_id, 'write') = 't' then 1 else 0 end as write_p,
 case when acs_permission.permission_p(ci.parent_id, :user_id, 'write') = 't' then 1 else 0 end as album_write_p,
 case when acs_permission.permission_p(ci.item_id, :user_id, 'delete') = 't' then 1 else 0 end as photo_delete_p
from cr_items ci,
  cr_revisions cr,
  pa_photos pp,
  cr_items ci2,
  cr_child_rels ccr2,
  images i
where cr.revision_id = pp.pa_photo_id
  and ci.live_revision = cr.revision_id
  and ci.item_id = ccr2.parent_id
  and ccr2.child_id = ci2.item_id
  and ccr2.relation_tag = 'viewer'
  and ci2.live_revision = i.image_id
  and ci.item_id = :photo_id

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/photo-album/www/photo-oracle.xql}
dbqd.photo-album.www.photo.get_photo_info {dbqd.photo-album.www.photo.get_photo_info {
select
 pp.caption,
 pp.story,
 cr.title,
 cr.description,
 i.height as height,
 i.width as width,
 i.image_id as image_id,
 ci.parent_id as album_id,
 case when acs_permission__permission_p(ci.item_id, :user_id, 'admin') ='t' then 1 else 0 end as admin_p,
 case when acs_permission__permission_p(ci.item_id, :user_id, 'write') = 't' then 1 else 0 end as write_p,
 case when acs_permission__permission_p(ci.parent_id, :user_id, 'write') = 't' then 1 else 0 end as album_write_p,
 case when acs_permission__permission_p(ci.item_id, :user_id, 'delete') = 't' then 1 else 0 end as photo_delete_p
from cr_items ci,
  cr_revisions cr,
  pa_photos pp,
  cr_items ci2,
  cr_child_rels ccr2,
  images i
where cr.revision_id = pp.pa_photo_id
  and ci.live_revision = cr.revision_id
  and ci.item_id = ccr2.parent_id
  and ccr2.child_id = ci2.item_id
  and ccr2.relation_tag = 'viewer'
  and ci2.live_revision = i.image_id
  and ci.item_id = :photo_id

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/photo-album/www/photo-postgresql.xql}
dbqd.photo-album.www.photos-add.get_next_object_id {dbqd.photo-album.www.photos-add.get_next_object_id {
      select acs_object_id_seq.nextval from dual
      } {} {} {} c:/web/openacs-4/packages/photo-album/www/photos-add.xql}
dbqd.photo-album.www.photos-edit-oracle.get_album_info {dbqd.photo-album.www.photos-edit-oracle.get_album_info {

select cr.title,
  cr.description,
  pa.story,
  ci.parent_id as parent_folder_id,
  case when acs_permission.permission_p(ci.item_id, :user_id, 'admin') = 't' then 1 else 0 end as admin_p,
  case when acs_permission.permission_p(ci.item_id, :user_id, 'pa_create_photo') = 't' then 1 else 0 end as photo_p,
  case when acs_permission.permission_p(ci.item_id, :user_id, 'write') ='t' then 1 else 0 end as write_p,
  case when acs_permission.permission_p(ci.parent_id, :user_id, 'write') = 't' then 1 else 0 end as folder_write_p,
  case when acs_permission.permission_p(ci.item_id, :user_id, 'delete') = 't' then 1 else 0 end as album_delete_p
from cr_items ci,
  cr_revisions cr,
  pa_albums pa
where ci.live_revision = cr.revision_id
  and ci.live_revision = pa_album_id
  and ci.item_id = :album_id

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/photo-album/www/photos-edit-oracle.xql}
dbqd.photo-album.www.photos-edit.get_album_info {dbqd.photo-album.www.photos-edit.get_album_info {
select cr.title,
  cr.description,
  pa.story,
  ci.parent_id as parent_folder_id,
  case when acs_permission__permission_p(ci.item_id, :user_id, 'admin') = 't' then 1 else 0 end as admin_p,
  case when acs_permission__permission_p(ci.item_id, :user_id, 'pa_create_photo') = 't' then 1 else 0 end as photo_p,
  case when acs_permission__permission_p(ci.item_id, :user_id, 'write') ='t' then 1 else 0 end as write_p,
  case when acs_permission__permission_p(ci.parent_id, :user_id, 'write') = 't' then 1 else 0 end as folder_write_p,
  case when acs_permission__permission_p(ci.item_id, :user_id, 'delete') = 't' then 1 else 0 end as album_delete_p
from cr_items ci,
  cr_revisions cr,
  pa_albums pa
where ci.live_revision = cr.revision_id
  and ci.live_revision = pa_album_id
  and ci.item_id = :album_id
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/photo-album/www/photos-edit-postgresql.xql}
dbqd.photo-album.www.random-photo.get_random_photo {dbqd.photo-album.www.random-photo.get_random_photo {
      select ci.item_id as photo_id,
      (select pp.caption from pa_photos pp where pp.pa_photo_id = ci.live_revision) as caption,
      i.image_id as thumb_path,
      i.height as thumb_height,
      i.width as thumb_width,
      random() as seed
    from cr_items ci,
      cr_items ci2,
      cr_items root,
      cr_child_rels ccr2,
      images i
    where 
      $size_clause
      and ci.item_id = ccr2.parent_id
      and ccr2.child_id = ci2.item_id
      and ci2.live_revision = i.image_id
      and ci.live_revision is not null
      $folder_clause
    order by seed limit 1
      } {} {} {postgresql 7.2} c:/web/openacs-4/packages/photo-album/www/random-photo-postgresql.xql}
dbqd.photo-album.www.random-photo.get_url {dbqd.photo-album.www.random-photo.get_url {
	   select site_node__url(sn.node_id)
	   from site_nodes sn
	   inner join pa_package_root_folder_map pm on
	   	 (sn.object_id = pm.package_id)
           inner join cr_items parent on
	   	 (pm.folder_id = parent.item_id)
           inner join cr_items child on
	   	 (parent.tree_sortkey <= child.tree_sortkey)
           where child.tree_sortkey between parent.tree_sortkey and tree_right(parent.tree_sortkey)
           	 and tree_level(parent.tree_sortkey) = 2
		 and child.item_id = :photo_id
	   } {} {} {postgresql 7.2} c:/web/openacs-4/packages/photo-album/www/random-photo-postgresql.xql}
dbqd.photo-album.www.random-photo.folder_clause {dbqd.photo-album.www.random-photo.folder_clause {
and ci.tree_sortkey between root.tree_sortkey and tree_right(root.tree_sortkey)
and root.item_id = :root_folder_id
		} {} {} {postgresql 7.2} c:/web/openacs-4/packages/photo-album/www/random-photo-postgresql.xql}
dbqd.photo-album.www.random-photo.size_clause_normal {dbqd.photo-album.www.random-photo.size_clause_normal {
      ccr2.relation_tag = 'viewer'
		} {} {} {postgresql 7.2} c:/web/openacs-4/packages/photo-album/www/random-photo-postgresql.xql}
dbqd.photo-album.www.random-photo.size_clause_thumb {dbqd.photo-album.www.random-photo.size_clause_thumb {
      ccr2.relation_tag = 'thumb'
		} {} {} {postgresql 7.2} c:/web/openacs-4/packages/photo-album/www/random-photo-postgresql.xql}
dbqd.robot-detection.tcl.robot-detection-init.robot_detection_id {dbqd.robot-detection.tcl.robot-detection-init.robot_detection_id {
      
select package_id from apm_packages 
where package_key = 'robot-detection'
      } {} {} {} c:/web/openacs-4/packages/robot-detection/tcl/robot-detection-init.xql}
dbqd.robot-detection.tcl.robot-detection-procs-oracle.ad_update_robot_list.days_since_last_update {dbqd.robot-detection.tcl.robot-detection-procs-oracle.ad_update_robot_list.days_since_last_update {
	    select trunc(sysdate - max(nvl(modified_date, insertion_date))) from robots
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/robot-detection/tcl/robot-detection-procs-oracle.xql}
dbqd.robot-detection.tcl.robot-detection-procs.ad_update_robot_list.days_since_last_update {dbqd.robot-detection.tcl.robot-detection-procs.ad_update_robot_list.days_since_last_update {
		select trunc(current_timestamp - max(coalesce(modified_date, insertion_date))) from robots
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/robot-detection/tcl/robot-detection-procs-postgresql.xql}
dbqd.robot-detection.tcl.robot-detection-procs.ad_replicate_web_robots_db.delete_old_robots_table {dbqd.robot-detection.tcl.robot-detection-procs.ad_replicate_web_robots_db.delete_old_robots_table {
      
	    delete from robots
	
      } {} {} {} c:/web/openacs-4/packages/robot-detection/tcl/robot-detection-procs.xql}
dbqd.robot-detection.tcl.robot-detection-procs.ad_replicate_web_robots_db.insert_new_robot {dbqd.robot-detection.tcl.robot-detection-procs.ad_replicate_web_robots_db.insert_new_robot {
      
                        insert into robots(robot_id, robot_name, robot_details_url, robot_useragent)
                        values
                        (:robot_id, :robot_name, :robot_details_url, :robot_useragent)
                    
      } {} {} {} c:/web/openacs-4/packages/robot-detection/tcl/robot-detection-procs.xql}
dbqd.robot-detection.tcl.robot-detection-procs.ad_replicate_web_robots_db.num_of_robots {dbqd.robot-detection.tcl.robot-detection-procs.ad_replicate_web_robots_db.num_of_robots {
      select count(*) from robots
      } {} {} {} c:/web/openacs-4/packages/robot-detection/tcl/robot-detection-procs.xql}
dbqd.robot-detection.tcl.robot-detection-procs.ad_cache_robot_useragents.populate_useragents_cache {dbqd.robot-detection.tcl.robot-detection-procs.ad_cache_robot_useragents.populate_useragents_cache {
      select robot_useragent from robots
      } {} {} {} c:/web/openacs-4/packages/robot-detection/tcl/robot-detection-procs.xql}
dbqd.robot-detection.tcl.robot-detection-procs.ad_robot_filter.robot_detection_id {dbqd.robot-detection.tcl.robot-detection-procs.ad_robot_filter.robot_detection_id {
      select package_id from apm_packages where package_key = 'robot-detection'
      } {} {} {} c:/web/openacs-4/packages/robot-detection/tcl/robot-detection-procs.xql}
dbqd.robot-detection.tcl.robot-detection-procs.ad_update_robot_list.robot_count {dbqd.robot-detection.tcl.robot-detection-procs.ad_update_robot_list.robot_count {
      select count(*) from robots
      } {} {} {} c:/web/openacs-4/packages/robot-detection/tcl/robot-detection-procs.xql}
dbqd.robot-detection.www.admin.index.robots_query {dbqd.robot-detection.www.admin.index.robots_query {
      select robot_name, robot_details_url from robots order by robot_name
      } {} {} {} c:/web/openacs-4/packages/robot-detection/www/admin/index.xql}
dbqd.rss-support.tcl.rss-generation-service-procs-oracle.rss_gen_service.timed_out_subscriptions {dbqd.rss-support.tcl.rss-generation-service-procs-oracle.rss_gen_service.timed_out_subscriptions {
        select r.subscr_id,
               r.timeout,
               r.summary_context_id,
               i.impl_name,
               nvl2(r.lastbuild, (r.lastbuild-to_date('1970-01-01'))*60*60*24, 0) as lastbuild
        from rss_gen_subscrs r,
             acs_sc_impls i
        where i.impl_id = r.impl_id
          and (r.lastbuild is null
               or sysdate > r.lastbuild + r.timeout/(60*60*24))
    } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/rss-support/tcl/rss-generation-service-procs-oracle.xql}
dbqd.rss-support.tcl.rss-generation-service-procs-oracle.rss_gen_report.update_timestamp {dbqd.rss-support.tcl.rss-generation-service-procs-oracle.rss_gen_report.update_timestamp {
        update rss_gen_subscrs
        set lastbuild = sysdate,
            last_ttb = :last_ttb $extra_sql
            where subscr_id = :subscr_id
    } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/rss-support/tcl/rss-generation-service-procs-oracle.xql}
dbqd.rss-support.tcl.rss-generation-service-procs-oracle.rss_gen_bind.get_contract_id {dbqd.rss-support.tcl.rss-generation-service-procs-oracle.rss_gen_bind.get_contract_id {
	select acs_sc_contract.get_id('RssGenerationSubscriber') from dual
    } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/rss-support/tcl/rss-generation-service-procs-oracle.xql}
dbqd.rss-support.tcl.rss-generation-service-procs-oracle.rss_gen_bind.get_unbound_impls {dbqd.rss-support.tcl.rss-generation-service-procs-oracle.rss_gen_bind.get_unbound_impls {
        select impl_id
        from acs_sc_impls i
        where impl_contract_name = 'RssGenerationSubscriber'
          and not exists (select 1
                          from acs_sc_bindings b
                          where b.impl_id = i.impl_id
                            and b.contract_id = :contract_id)
    } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/rss-support/tcl/rss-generation-service-procs-oracle.xql}
dbqd.rss-support.tcl.rss-generation-service-procs-oracle.rss_gen_bind.bind_impl {dbqd.rss-support.tcl.rss-generation-service-procs-oracle.rss_gen_bind.bind_impl {
         begin  
             acs_sc_binding.new(
                 contract_id => $contract_id,
                impl_id => $impl_id
             );
         end;
    } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/rss-support/tcl/rss-generation-service-procs-oracle.xql}
dbqd.rss-support.tcl.rss-generation-service-procs.rss_gen_service.timed_out_subscriptions {dbqd.rss-support.tcl.rss-generation-service-procs.rss_gen_service.timed_out_subscriptions {
        select r.subscr_id,
               r.timeout,
               r.summary_context_id,
               i.impl_name,
               case when r.lastbuild = null
                    then 0
                    else date_part('epoch',r.lastbuild)
                    end as lastbuild
        from rss_gen_subscrs r,
             acs_sc_impls i
        where i.impl_id = r.impl_id
          and (r.lastbuild is null
               or now() - r.lastbuild > cast(r.timeout || ' seconds' as interval))	
    } {} {} {postgresql 7.1} c:/web/openacs-4/packages/rss-support/tcl/rss-generation-service-procs-postgresql.xql}
dbqd.rss-support.tcl.rss-generation-service-procs.rss_gen_report.update_timestamp {dbqd.rss-support.tcl.rss-generation-service-procs.rss_gen_report.update_timestamp {
        update rss_gen_subscrs
        set lastbuild = now(),
            last_ttb = :last_ttb $extra_sql
            where subscr_id = :subscr_id
    } {} {} {postgresql 7.1} c:/web/openacs-4/packages/rss-support/tcl/rss-generation-service-procs-postgresql.xql}
dbqd.rss-support.tcl.rss-generation-service-procs.rss_gen_bind.get_contract_id {dbqd.rss-support.tcl.rss-generation-service-procs.rss_gen_bind.get_contract_id {
       	select acs_sc_contract__get_id('RssGenerationSubscriber')
    } {} {} {postgresql 7.1} c:/web/openacs-4/packages/rss-support/tcl/rss-generation-service-procs-postgresql.xql}
dbqd.rss-support.tcl.rss-generation-service-procs.rss_gen_bind.get_unbound_impls {dbqd.rss-support.tcl.rss-generation-service-procs.rss_gen_bind.get_unbound_impls {
        select impl_id
        from acs_sc_impls i
        where impl_contract_name = 'RssGenerationSubscriber'
          and not exists (select 1
                          from acs_sc_bindings b
                          where b.impl_id = i.impl_id
                            and b.contract_id = :contract_id)
    } {} {} {postgresql 7.1} c:/web/openacs-4/packages/rss-support/tcl/rss-generation-service-procs-postgresql.xql}
dbqd.rss-support.tcl.rss-generation-service-procs.rss_gen_bind.bind_impl {dbqd.rss-support.tcl.rss-generation-service-procs.rss_gen_bind.bind_impl {
         select acs_sc_binding__new($contract_id,$impl_id)
    } {} {} {postgresql 7.1} c:/web/openacs-4/packages/rss-support/tcl/rss-generation-service-procs-postgresql.xql}
dbqd.rss-support.tcl.rss-generation-service-procs.rss_gen_report.subscr_info {dbqd.rss-support.tcl.rss-generation-service-procs.rss_gen_report.subscr_info {
        select i.impl_name,
               r.summary_context_id
        from acs_sc_impls i,
             rss_gen_subscrs r
        where r.subscr_id = :subscr_id
          and i.impl_id = r.impl_id
    } {} {} {} c:/web/openacs-4/packages/rss-support/tcl/rss-generation-service-procs.xql}
dbqd.rss-support.tcl.rss-generation-service-procs.rss_gen_report_dir.subscr_context_and_impl {dbqd.rss-support.tcl.rss-generation-service-procs.rss_gen_report_dir.subscr_context_and_impl {
                select s.summary_context_id,
                       i.impl_name
                from rss_gen_subscrs s,
                     acs_sc_impls i
                where i.impl_id = s.impl_id
                  and s.subscr_id = :subscr_id
    } {} {} {} c:/web/openacs-4/packages/rss-support/tcl/rss-generation-service-procs.xql}
dbqd.rss-support.tcl.rss-generation-service-procs.rss_gen_report_file.subscr_context_and_impl {dbqd.rss-support.tcl.rss-generation-service-procs.rss_gen_report_file.subscr_context_and_impl {
                select s.summary_context_id,
                       i.impl_name
                from rss_gen_subscrs s,
                     acs_sc_impls i
                where i.impl_id = s.impl_id
                  and s.subscr_id = :subscr_id
    } {} {} {} c:/web/openacs-4/packages/rss-support/tcl/rss-generation-service-procs.xql}
dbqd.rss-support.tcl.rss-utilities-procs-oracle.rss_package_url.rss_url {dbqd.rss-support.tcl.rss-utilities-procs-oracle.rss_package_url.rss_url {
        select site_node.url(node_id) from site_nodes where object_id = :package_id
    } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/rss-support/tcl/rss-utilities-procs-oracle.xql}
dbqd.rss-support.tcl.rss-utilities-procs.rss_package_url.rss_url {dbqd.rss-support.tcl.rss-utilities-procs.rss_package_url.rss_url {
        select site_node__url(node_id) from site_nodes where object_id = :package_id
    } {} {} {postgresql 7.1} c:/web/openacs-4/packages/rss-support/tcl/rss-utilities-procs-postgresql.xql}
dbqd.rss-support.tcl.rss-utilities-procs.rss_package_id.get_package_id {dbqd.rss-support.tcl.rss-utilities-procs.rss_package_id.get_package_id {
        select package_id from apm_packages where package_key = 'rss-support'
    } {} {} {} c:/web/openacs-4/packages/rss-support/tcl/rss-utilities-procs.xql}
dbqd.rss-support.tcl.rss-utilities-procs.rss_first_url_for_package_id_helper.first_node_id {dbqd.rss-support.tcl.rss-utilities-procs.rss_first_url_for_package_id_helper.first_node_id {
        select node_id from site_nodes
        where object_id = :package_id
	order by node_id limit 1
    } {} {} {} c:/web/openacs-4/packages/rss-support/tcl/rss-utilities-procs.xql}
dbqd.rss-support.www.delete-2-oracle.delete_subscr {dbqd.rss-support.www.delete-2-oracle.delete_subscr {
        begin
            :1 := rss_gen_subscr.del (:subscr_id);
        end;
    } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/rss-support/www/delete-2-oracle.xql}
dbqd.rss-support.www.delete-2.delete_subscr {dbqd.rss-support.www.delete-2.delete_subscr {
    select rss_gen_subscr__delete (
        :subscr_id
    )
    } {} {} {postgresql 7.1} c:/web/openacs-4/packages/rss-support/www/delete-2-postgresql.xql}
dbqd.rss-support.www.delete.subscr_info {dbqd.rss-support.www.delete.subscr_info {
    select summary_context_id,
           channel_title,
           channel_link
    from rss_gen_subscrs
    where subscr_id = :subscr_id
    } {} {} {} c:/web/openacs-4/packages/rss-support/www/delete.xql}
dbqd.rss-support.www.subscr-ae-2-oracle.create_subscr {dbqd.rss-support.www.subscr-ae-2-oracle.create_subscr {
	begin
          :1 := rss_gen_subscr.new (
	    :subscr_id,				-- subscr_id
            :impl_id,				-- impl_id
            :summary_context_id,		-- summary_context_id
            :timeout,			        -- timeout
            null,				-- lastbuild
            'rss_gen_subscr',		        -- object_type
            sysdate,				-- creation_date
            :creation_user,			-- creation_user
            :creation_ip,			-- creation_ip
            :summary_context_id			-- context_id
	);
      end

    } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/rss-support/www/subscr-ae-2-oracle.xql}
dbqd.rss-support.www.subscr-ae-2.create_subscr {dbqd.rss-support.www.subscr-ae-2.create_subscr {
	select rss_gen_subscr__new (
	    :subscr_id,				-- subscr_id
            :impl_id,				-- impl_id
            :summary_context_id,		-- summary_context_id
            :timeout,			        -- timeout
            null,				-- lastbuild
            'rss_gen_subscr',		        -- object_type
            now(),				-- creation_date
            :creation_user,			-- creation_user
            :creation_ip,			-- creation_ip
            :summary_context_id			-- context_id
	)

    } {} {} {postgresql 7.1} c:/web/openacs-4/packages/rss-support/www/subscr-ae-2-postgresql.xql}
dbqd.rss-support.www.subscr-ae-2.update_subscr {dbqd.rss-support.www.subscr-ae-2.update_subscr {
	update rss_gen_subscrs
	set timeout = :timeout
	where subscr_id = :subscr_id
    } {} {} {} c:/web/openacs-4/packages/rss-support/www/subscr-ae-2.xql}
dbqd.rss-support.www.subscr-ae-oracle.get_impl_name_and_count {dbqd.rss-support.www.subscr-ae-oracle.get_impl_name_and_count {
    select acs_sc_impl.get_name(impl_id) as impl_name
    from acs_sc_impls
    where impl_id = :impl_id
    } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/rss-support/www/subscr-ae-oracle.xql}
dbqd.rss-support.www.subscr-ae.get_impl_name_and_count {dbqd.rss-support.www.subscr-ae.get_impl_name_and_count {
    select acs_sc_impl__get_name(impl_id) as impl_name
    from acs_sc_impls
    where impl_id = :impl_id
    } {} {} {postgresql 7.1} c:/web/openacs-4/packages/rss-support/www/subscr-ae-postgresql.xql}
dbqd.rss-support.www.subscr-ae.subscr_id_from_impl_and_context {dbqd.rss-support.www.subscr-ae.subscr_id_from_impl_and_context {
        select subscr_id
	from rss_gen_subscrs
        where impl_id = :impl_id
        and summary_context_id = :summary_context_id
    } {} {} {} c:/web/openacs-4/packages/rss-support/www/subscr-ae.xql}
dbqd.rss-support.www.subscr-ae.subscr_info {dbqd.rss-support.www.subscr-ae.subscr_info {
        select impl_id,
	       summary_context_id,
	       timeout,
               channel_title,
               channel_link
	from rss_gen_subscrs
	where subscr_id = :subscr_id
    } {} {} {} c:/web/openacs-4/packages/rss-support/www/subscr-ae.xql}
dbqd.rss-support.www.subscrs-include-oracle.get_subscrs {dbqd.rss-support.www.subscrs-include-oracle.get_subscrs {
        select s.subscr_id,
           s.timeout,
           person.name(o.creation_user) as creator,
           nvl(to_char(s.lastbuild,'YYYY-MM-DD HH24:MI:SS'),'never built') as lastbuild_ansi,
           s.last_ttb,
           s.channel_title,
           s.channel_link
    from rss_gen_subscrs s,
         acs_objects o
    where o.object_id = s.subscr_id $maybe_restrict_to_user
    order by s.last_ttb desc
    } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/rss-support/www/subscrs-include-oracle.xql}
dbqd.rss-support.www.subscrs-include.get_subscrs {dbqd.rss-support.www.subscrs-include.get_subscrs {
        select s.subscr_id,
           s.timeout,
           person__name(o.creation_user) as creator,
           coalesce(to_char(s.lastbuild,'YYYY-MM-DD HH24:MI:SS'),'never built') as lastbuild_ansi,
           s.last_ttb,
           s.channel_title,
           s.channel_link
    from rss_gen_subscrs s,
         acs_objects o
    where o.object_id = s.subscr_id $maybe_restrict_to_user
    order by s.last_ttb desc
    } {} {} {postgresql 7.1} c:/web/openacs-4/packages/rss-support/www/subscrs-include-postgresql.xql}
dbqd.schema-browser.www.column-comments-2-oracle.comment_add {dbqd.schema-browser.www.column-comments-2-oracle.comment_add {
      comment on column ${table_name}.$column_name is :comments
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/schema-browser/www/column-comments-2-oracle.xql}
dbqd.schema-browser.www.column-comments-2.comment_add {dbqd.schema-browser.www.column-comments-2.comment_add {
      comment on column ${table_name}.$column_name is :comments
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/schema-browser/www/column-comments-2-postgresql.xql}
dbqd.schema-browser.www.function-body.function_body {dbqd.schema-browser.www.function-body.function_body {

         select
           prosrc
         from
           pg_proc
         where
           oid = :oid

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/schema-browser/www/function-body-postgresql.xql}
dbqd.schema-browser.www.trigger-oracle.unused {dbqd.schema-browser.www.trigger-oracle.unused {
      
    select
        table_name,
        trigger_type,
        triggering_event,
        status,
        trigger_body
    from
        user_triggers
    where
        trigger_name = upper(:trigger_name)
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/schema-browser/www/trigger-oracle.xql}
dbqd.schema-browser.www.trigger.unused {dbqd.schema-browser.www.trigger.unused {
      
    select
        table_name,
        trigger_type,
        triggering_event,
        status,
        trigger_body
    from
        user_triggers
    where
        trigger_name = upper(:trigger_name)
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/schema-browser/www/trigger-postgresql.xql}
dbqd.search.tcl.search-procs-oracle.search_indexer.search_observer_dequeue_entry {dbqd.search.tcl.search-procs-oracle.search_indexer.search_observer_dequeue_entry {
            declare
            begin
                search_observer.dequeue(
                    object_id => :object_id,
                    event_date => :date,
                    event => :event
                );
            end;
        } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/search/tcl/search-procs-oracle.xql}
dbqd.search.tcl.search-procs.search_indexer.search_observer_dequeue_entry {dbqd.search.tcl.search-procs.search_indexer.search_observer_dequeue_entry {
	    select search_observer__dequeue(
	        :object_id,
	        :event_date,
	        :event
	    );
        } {} {} {postgresql 7.1} c:/web/openacs-4/packages/search/tcl/search-procs-postgresql.xql}
dbqd.search.tcl.search-procs.search_indexer.search_observer_queue_entry {dbqd.search.tcl.search-procs.search_indexer.search_observer_queue_entry {
            select object_id, event_date, event
            from search_observer_queue
            order by event_date asc
        } {} {} {} c:/web/openacs-4/packages/search/tcl/search-procs.xql}
dbqd.search.tcl.search-procs.search_content_get.get_file_data {dbqd.search.tcl.search-procs.search_content_get.get_file_data {
	    select :content as content,
                   'file' as storage_type
            from dual
        } {} {} {} c:/web/openacs-4/packages/search/tcl/search-procs.xql}
dbqd.search.tcl.search-procs.search_content_get.get_lob_data {dbqd.search.tcl.search-procs.search_content_get.get_lob_data {
            select :content as content,
                   'lob' as storage_type
            from dual
        } {} {} {} c:/web/openacs-4/packages/search/tcl/search-procs.xql}
dbqd.simple-survey.tcl.survsimp-procs-oracle.get_date {dbqd.simple-survey.tcl.survsimp-procs-oracle.get_date {
      
            select to_char(creation_date, 'DD/MM/YYYY')
            from acs_objects
            where object_id = :response_id
        
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/simple-survey/tcl/survsimp-procs-oracle.xql}
dbqd.simple-survey.tcl.survsimp-procs.get_date {dbqd.simple-survey.tcl.survsimp-procs.get_date {
      
            select to_char(creation_date, 'DD/MM/YYYY')
            from acs_objects
            where object_id = :response_id
        
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/simple-survey/tcl/survsimp-procs-postgresql.xql}
dbqd.simple-survey.tcl.survsimp-procs.survsimp_question_properties {dbqd.simple-survey.tcl.survsimp-procs.survsimp_question_properties {
      
select
  survey_id,
  sort_key,
  question_text,
  abstract_data_type,
  required_p,
  active_p,
  presentation_type,
  presentation_options,
  presentation_alignment,
  creation_user,
  creation_date
from
  survsimp_questions, acs_objects
where
  object_id = question_id
  and question_id = :question_id
      } {} {} {} c:/web/openacs-4/packages/simple-survey/tcl/survsimp-procs.xql}
dbqd.simple-survey.tcl.survsimp-procs.survsimp_question_choices {dbqd.simple-survey.tcl.survsimp-procs.survsimp_question_choices {
      select choice_id, label
from survsimp_question_choices
where question_id = :question_id
order by sort_order
      } {} {} {} c:/web/openacs-4/packages/simple-survey/tcl/survsimp-procs.xql}
dbqd.simple-survey.tcl.survsimp-procs.sursimp_question_choices_2 {dbqd.simple-survey.tcl.survsimp-procs.sursimp_question_choices_2 {
      select choice_id, label
from survsimp_question_choices
where question_id = :question_id
order by sort_order
      } {} {} {} c:/web/openacs-4/packages/simple-survey/tcl/survsimp-procs.xql}
dbqd.simple-survey.tcl.survsimp-procs.sursimp_question_choices_3 {dbqd.simple-survey.tcl.survsimp-procs.sursimp_question_choices_3 {
      select * from survsimp_question_choices
where question_id = :question_id
order by sort_order
      } {} {} {} c:/web/openacs-4/packages/simple-survey/tcl/survsimp-procs.xql}
dbqd.simple-survey.tcl.survsimp-procs.survsimp_label_list {dbqd.simple-survey.tcl.survsimp-procs.survsimp_label_list {
      select label
	    from survsimp_question_choices, survsimp_question_responses
	    where survsimp_question_responses.question_id = :question_id
	    and survsimp_question_responses.response_id = :response_id
	    and survsimp_question_choices.choice_id = survsimp_question_responses.choice_id
      } {} {} {} c:/web/openacs-4/packages/simple-survey/tcl/survsimp-procs.xql}
dbqd.simple-survey.tcl.survsimp-procs.survsimp_creator_p {dbqd.simple-survey.tcl.survsimp-procs.survsimp_creator_p {
      
    select creation_user
    from   survsimp_surveys
    where  survey_id = :survey_id
      } {} {} {} c:/web/openacs-4/packages/simple-survey/tcl/survsimp-procs.xql}
dbqd.simple-survey.tcl.survsimp-procs.survsimp_responses_new {dbqd.simple-survey.tcl.survsimp-procs.survsimp_responses_new {
      select survey_id, name, description, u.user_id, first_names || ' ' || last_name as creator_name, creation_date
from survsimp_surveys s, $users_table u
where s.creation_user = u.user_id
and creation_date> :since_when
order by creation_date desc
      } {} {} {} c:/web/openacs-4/packages/simple-survey/tcl/survsimp-procs.xql}
dbqd.simple-survey.tcl.survsimp-procs.survsimp_id_from_shortname {dbqd.simple-survey.tcl.survsimp-procs.survsimp_id_from_shortname {
      select survey_id from survsimp_surveys where lower(short_name) = lower(:short_name)
      } {} {} {} c:/web/openacs-4/packages/simple-survey/tcl/survsimp-procs.xql}
dbqd.simple-survey.tcl.survsimp-procs.get_response_id {dbqd.simple-survey.tcl.survsimp-procs.get_response_id {
      
        select response_id
        from acs_objects, survsimp_responses
        where object_id = response_id
        and creation_user = :user_id
        and survey_id = :survey_id
        and creation_date = (select max(creation_date)
                             from survsimp_responses, acs_objects
                             where object_id = response_id
                             and creation_user = :user_id
                             and survey_id = :survey_id)                          
    
      } {} {} {} c:/web/openacs-4/packages/simple-survey/tcl/survsimp-procs.xql}
dbqd.simple-survey.tcl.survsimp-procs.get_score {dbqd.simple-survey.tcl.survsimp-procs.get_score {
      
            select 
            sum(score) 
            from survsimp_choice_scores,
            survsimp_question_responses, survsimp_variables
            where
            survsimp_choice_scores.choice_id = survsimp_question_responses.choice_id
            and survsimp_choice_scores.variable_id = survsimp_variables.variable_id
            and survsimp_question_responses.response_id = :response_id 
      } {} {} {} c:/web/openacs-4/packages/simple-survey/tcl/survsimp-procs.xql}
dbqd.simple-survey.www.admin.description-edit-2.survsimp_update_description {dbqd.simple-survey.www.admin.description-edit-2.survsimp_update_description {
      update survsimp_surveys 
      set description = :description,
          description_html_p = :desc_html
          where survey_id = :survey_id
      } {} {} {} c:/web/openacs-4/packages/simple-survey/www/admin/description-edit-2.xql}
dbqd.simple-survey.www.admin.description-edit.survey_properites {dbqd.simple-survey.www.admin.description-edit.survey_properites {
      select name as survey_name, description, description_html_p as desc_html
from survsimp_surveys
where survey_id = :survey_id
      } {} {} {} c:/web/openacs-4/packages/simple-survey/www/admin/description-edit.xql}
dbqd.simple-survey.www.admin.edit-logic-2-oracle.update_logic {dbqd.simple-survey.www.admin.edit-logic-2-oracle.update_logic {
update survsimp_logic
set logic = empty_clob()
where logic_id = :logic_id
returning logic into :1
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/simple-survey/www/admin/edit-logic-2-oracle.xql}
dbqd.simple-survey.www.admin.edit-logic-2.update_logic {dbqd.simple-survey.www.admin.edit-logic-2.update_logic {
update survsimp_logic
set logic = :logic
where logic_id = :logic_id
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/simple-survey/www/admin/edit-logic-2-postgresql.xql}
dbqd.simple-survey.www.admin.edit-logic.get_survey_type {dbqd.simple-survey.www.admin.edit-logic.get_survey_type {
      select type from survsimp_surveys where survey_id = :survey_id
      } {} {} {} c:/web/openacs-4/packages/simple-survey/www/admin/edit-logic.xql}
dbqd.simple-survey.www.admin.edit-logic.set_survey_name {dbqd.simple-survey.www.admin.edit-logic.set_survey_name {
      select name from survsimp_surveys where survey_id = :survey_id
      } {} {} {} c:/web/openacs-4/packages/simple-survey/www/admin/edit-logic.xql}
dbqd.simple-survey.www.admin.edit-logic.get_logic {dbqd.simple-survey.www.admin.edit-logic.get_logic {
      select logic, survsimp_logic.logic_id from survsimp_logic, survsimp_logic_surveys_map
where survsimp_logic.logic_id = survsimp_logic_surveys_map.logic_id
and survey_id = :survey_id
      } {} {} {} c:/web/openacs-4/packages/simple-survey/www/admin/edit-logic.xql}
dbqd.simple-survey.www.admin.index.survsimp_surveys {dbqd.simple-survey.www.admin.index.survsimp_surveys {
      select survey_id, name, enabled_p
from survsimp_surveys
where package_id= :package_id
order by enabled_p desc, upper(name)
      } {} {} {} c:/web/openacs-4/packages/simple-survey/www/admin/index.xql}
dbqd.simple-survey.www.admin.modify-responses-2.update_survsimp_question_choice {dbqd.simple-survey.www.admin.modify-responses-2.update_survsimp_question_choice {
      update survsimp_question_choices
          set label = :trimmed_response
          where choice_id = :choice_id
      } {} {} {} c:/web/openacs-4/packages/simple-survey/www/admin/modify-responses-2.xql}
dbqd.simple-survey.www.admin.modify-responses-2.update_survsimp_scores {dbqd.simple-survey.www.admin.modify-responses-2.update_survsimp_scores {
      update survsimp_choice_scores
                                           set score = :score
                                           where choice_id = :choice_id
                                           and variable_id = :variable_id
      } {} {} {} c:/web/openacs-4/packages/simple-survey/www/admin/modify-responses-2.xql}
dbqd.simple-survey.www.admin.modify-responses.survey_name_from_id {dbqd.simple-survey.www.admin.modify-responses.survey_name_from_id {
      select name from survsimp_surveys where survey_id=:survey_id
      } {} {} {} c:/web/openacs-4/packages/simple-survey/www/admin/modify-responses.xql}
dbqd.simple-survey.www.admin.modify-responses.survsimp_question_text_from_id {dbqd.simple-survey.www.admin.modify-responses.survsimp_question_text_from_id {
      select question_text
from survsimp_questions
where question_id = :question_id
      } {} {} {} c:/web/openacs-4/packages/simple-survey/www/admin/modify-responses.xql}
dbqd.simple-survey.www.admin.modify-responses.get_variable_names {dbqd.simple-survey.www.admin.modify-responses.get_variable_names {
      select variable_name, survsimp_variables.variable_id as variable_id
  from survsimp_variables, survsimp_variables_surveys_map
  where survsimp_variables.variable_id = survsimp_variables_surveys_map.variable_id
  and survey_id = :survey_id
  order by variable_name
      } {} {} {} c:/web/openacs-4/packages/simple-survey/www/admin/modify-responses.xql}
dbqd.simple-survey.www.admin.modify-responses.get_choices {dbqd.simple-survey.www.admin.modify-responses.get_choices {
      select choice_id, label from survsimp_question_choices where question_id = :question_id order by choice_id
      } {} {} {} c:/web/openacs-4/packages/simple-survey/www/admin/modify-responses.xql}
dbqd.simple-survey.www.admin.modify-responses.get_scores {dbqd.simple-survey.www.admin.modify-responses.get_scores {
      select score, survsimp_variables.variable_id as variable_id
      from survsimp_choice_scores, survsimp_variables
      where survsimp_choice_scores.choice_id = :choice_id
      and survsimp_choice_scores.variable_id = survsimp_variables.variable_id
      order by variable_name
      } {} {} {} c:/web/openacs-4/packages/simple-survey/www/admin/modify-responses.xql}
dbqd.simple-survey.www.admin.one-respondent.survsimp_survey_properties {dbqd.simple-survey.www.admin.one-respondent.survsimp_survey_properties {
      select name as survey_name, description, type
from survsimp_surveys
where survey_id = :survey_id
      } {} {} {} c:/web/openacs-4/packages/simple-survey/www/admin/one-respondent.xql}
dbqd.simple-survey.www.admin.one-respondent.user_name_from_id {dbqd.simple-survey.www.admin.one-respondent.user_name_from_id {
      select first_names, last_name from persons where person_id = :user_id
      } {} {} {} c:/web/openacs-4/packages/simple-survey/www/admin/one-respondent.xql}
dbqd.simple-survey.www.admin.one-respondent.survsimp_survey_response_dates_for_users {dbqd.simple-survey.www.admin.one-respondent.survsimp_survey_response_dates_for_users {
      select response_id, creation_date 
from survsimp_responses, acs_objects
where response_id = object_id
and creation_user = :user_id
and survey_id = :survey_id
order by creation_date desc
      } {} {} {} c:/web/openacs-4/packages/simple-survey/www/admin/one-respondent.xql}
dbqd.simple-survey.www.admin.one-respondent.get_survey_scores {dbqd.simple-survey.www.admin.one-respondent.get_survey_scores {
      select variable_name, sum(score) as sum_score
	      from survsimp_choice_scores, survsimp_question_responses, survsimp_variables
	      where survsimp_choice_scores.choice_id = survsimp_question_responses.choice_id
	      and survsimp_choice_scores.variable_id = survsimp_variables.variable_id
	      and survsimp_question_responses.response_id = :response_id
	      group by variable_name
      } {} {} {} c:/web/openacs-4/packages/simple-survey/www/admin/one-respondent.xql}
dbqd.simple-survey.www.admin.one.survsimp_properties {dbqd.simple-survey.www.admin.one.survsimp_properties {
select name as survey_name, 
short_name, description as survey_description, 
first_names || ' ' || last_name as creator_name, creation_user, 
creation_date, (case when enabled_p = 't' then 'Enabled' when enabled_p = 'f' then 'Disabled' end) as survey_status, enabled_p,
(case when single_response_p = 't' then 'One' when single_response_p = 'f' then 'Multiple' end) as survey_response_limit,
(case when single_editable_p = 't' then 'Editable' when single_editable_p = 'f' then 'Non-editable' end) as survey_editable_single, type,display_type
from survsimp_surveys, acs_objects, persons
where object_id = survey_id
and person_id = creation_user
and survey_id = :survey_id
and package_id= :package_id
      } {} {} {} c:/web/openacs-4/packages/simple-survey/www/admin/one.xql}
dbqd.simple-survey.www.admin.one.sursimp_survey_questions {dbqd.simple-survey.www.admin.one.sursimp_survey_questions {
      select question_id, sort_key, active_p, required_p
from survsimp_questions
where survey_id = :survey_id  
order by sort_key
      } {} {} {} c:/web/openacs-4/packages/simple-survey/www/admin/one.xql}
dbqd.simple-survey.www.admin.question-active-toggle-oracle.survsimp_question_required_toggle {dbqd.simple-survey.www.admin.question-active-toggle-oracle.survsimp_question_required_toggle {
      update survsimp_questions set active_p = util.logical_negation(active_p)
where survey_id = :survey_id
and question_id = :question_id
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/simple-survey/www/admin/question-active-toggle-oracle.xql}
dbqd.simple-survey.www.admin.question-active-toggle.survsimp_question_required_toggle {dbqd.simple-survey.www.admin.question-active-toggle.survsimp_question_required_toggle {
      update survsimp_questions set active_p = util__logical_negation(active_p)
where survey_id = :survey_id
and question_id = :question_id
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/simple-survey/www/admin/question-active-toggle-postgresql.xql}
dbqd.simple-survey.www.admin.question-add-2.survsimp_survey_properties {dbqd.simple-survey.www.admin.question-add-2.survsimp_survey_properties {
      select name, description, type
    from survsimp_surveys
    where survey_id = :survey_id
      } {} {} {} c:/web/openacs-4/packages/simple-survey/www/admin/question-add-2.xql}
dbqd.simple-survey.www.admin.question-add-2.count_variable_names {dbqd.simple-survey.www.admin.question-add-2.count_variable_names {
      select count(variable_name) as n_variables
	from survsimp_variables, survsimp_variables_surveys_map
        where survsimp_variables.variable_id = survsimp_variables_surveys_map.variable_id
        and survey_id = :survey_id
      } {} {} {} c:/web/openacs-4/packages/simple-survey/www/admin/question-add-2.xql}
dbqd.simple-survey.www.admin.question-add-3-oracle.create_question {dbqd.simple-survey.www.admin.question-add-3-oracle.create_question {
      
	    begin
		:1 := survsimp_question.new (
		    question_id => :question_id,
		    survey_id => :survey_id,
                    sort_key => :sort_key,
                    question_text => empty_clob(),
                    abstract_data_type => :abstract_data_type,
                    presentation_type => :presentation_type,
                    presentation_alignment => :presentation_alignment,
                    active_p => :active_p,
                    required_p => :required_p,
		    context_id => :survey_id,
		    creation_user => :user_id
		);
	    end;
	
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/simple-survey/www/admin/question-add-3-oracle.xql}
dbqd.simple-survey.www.admin.question-add-3-oracle.get_choice_id {dbqd.simple-survey.www.admin.question-add-3-oracle.get_choice_id {
      select survsimp_choice_id_sequence.nextval as choice_id from dual
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/simple-survey/www/admin/question-add-3-oracle.xql}
dbqd.simple-survey.www.admin.question-add-3.create_question {dbqd.simple-survey.www.admin.question-add-3.create_question {

	select survsimp_question__new (
		    :question_id,
		    :survey_id,
                    :sort_key,
                    :question_text, 
                    :abstract_data_type,
                    :required_p,
                    :active_p,
                    :presentation_type,
		    :presentation_options,
                    :presentation_alignment,
		    :user_id,
		    :survey_id
	)
	
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/simple-survey/www/admin/question-add-3-postgresql.xql}
dbqd.simple-survey.www.admin.question-add-3.get_choice_id {dbqd.simple-survey.www.admin.question-add-3.get_choice_id {
      select survsimp_choice_id_sequence.nextval as choice_id 
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/simple-survey/www/admin/question-add-3-postgresql.xql}
dbqd.simple-survey.www.admin.question-add-3.renumber_sort_keys {dbqd.simple-survey.www.admin.question-add-3.renumber_sort_keys {
      update survsimp_questions
                                   set sort_key = sort_key + 1
                                   where survey_id = :survey_id
                                   and sort_key > :after
      } {} {} {} c:/web/openacs-4/packages/simple-survey/www/admin/question-add-3.xql}
dbqd.simple-survey.www.admin.question-add-3.add_question_text {dbqd.simple-survey.www.admin.question-add-3.add_question_text {
      
	    update survsimp_questions
	    set question_text = :question_text
	    where question_id = :question_id
	
      } {} {} {} c:/web/openacs-4/packages/simple-survey/www/admin/question-add-3.xql}
dbqd.simple-survey.www.admin.question-add-3.insert_survsimp_question_choice {dbqd.simple-survey.www.admin.question-add-3.insert_survsimp_question_choice {
      insert into survsimp_question_choices
      (choice_id, question_id, label, sort_order)
      values
      (:choice_id, :question_id, :trimmed_response, :count)
      } {} {} {} c:/web/openacs-4/packages/simple-survey/www/admin/question-add-3.xql}
dbqd.simple-survey.www.admin.question-add-3.insert_survsimp_scores {dbqd.simple-survey.www.admin.question-add-3.insert_survsimp_scores {
      insert into survsimp_choice_scores
      (choice_id, variable_id, score)
      values
      (:choice_id, :variable_id, :score)
      } {} {} {} c:/web/openacs-4/packages/simple-survey/www/admin/question-add-3.xql}
dbqd.simple-survey.www.admin.question-add-3.renumber_sort_keys {dbqd.simple-survey.www.admin.question-add-3.renumber_sort_keys {
      update survsimp_questions
                                   set sort_key = sort_key + 1
                                   where survey_id = :survey_id
                                   and sort_key > :after
      } {} {} {} c:/web/openacs-4/packages/simple-survey/www/admin/question-add-3.xql}
dbqd.simple-survey.www.admin.question-add-3.already_inserted_p {dbqd.simple-survey.www.admin.question-add-3.already_inserted_p {

      select case when count(*) = 0 then 0 else 1 end from survsimp_questions where question_id = :question_id

      } {} {} {} c:/web/openacs-4/packages/simple-survey/www/admin/question-add-3.xql}
dbqd.simple-survey.www.admin.question-add.simpsurv_survey_properties {dbqd.simple-survey.www.admin.question-add.simpsurv_survey_properties {
      select name, description, type
from survsimp_surveys
where survey_id = :survey_id
      } {} {} {} c:/web/openacs-4/packages/simple-survey/www/admin/question-add.xql}
dbqd.simple-survey.www.admin.question-delete-2.survsimp_survey_id_from_question_id {dbqd.simple-survey.www.admin.question-delete-2.survsimp_survey_id_from_question_id {
      select survey_id from survsimp_questions where question_id = :question_id
      } {} {} {} c:/web/openacs-4/packages/simple-survey/www/admin/question-delete-2.xql}
dbqd.simple-survey.www.admin.question-delete-2.survsimp_question_responses_delete {dbqd.simple-survey.www.admin.question-delete-2.survsimp_question_responses_delete {
      delete from survsimp_question_responses where question_id = :question_id
      } {} {} {} c:/web/openacs-4/packages/simple-survey/www/admin/question-delete-2.xql}
dbqd.simple-survey.www.admin.question-delete-2.survsimp_question_choices_score_delete {dbqd.simple-survey.www.admin.question-delete-2.survsimp_question_choices_score_delete {

      delete from survsimp_choice_scores
      where choice_id in (select choice_id from survsimp_question_choices
          where question_id = :question_id)

      } {} {} {} c:/web/openacs-4/packages/simple-survey/www/admin/question-delete-2.xql}
dbqd.simple-survey.www.admin.question-delete-2.survsimp_question_choices_delete {dbqd.simple-survey.www.admin.question-delete-2.survsimp_question_choices_delete {
      delete from survsimp_question_choices where question_id = :question_id
      } {} {} {} c:/web/openacs-4/packages/simple-survey/www/admin/question-delete-2.xql}
dbqd.simple-survey.www.admin.question-delete-2.survsimp_questions_delete {dbqd.simple-survey.www.admin.question-delete-2.survsimp_questions_delete {
      delete from survsimp_questions where question_id = :question_id
      } {} {} {} c:/web/openacs-4/packages/simple-survey/www/admin/question-delete-2.xql}
dbqd.simple-survey.www.admin.question-delete-oracle.survsimp_delete_question {dbqd.simple-survey.www.admin.question-delete-oracle.survsimp_delete_question {
      
	    begin
        	survsimp_question.del (:question_id);
	    end;
	
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/simple-survey/www/admin/question-delete-oracle.xql}
dbqd.simple-survey.www.admin.question-delete.survsimp_delete_question {dbqd.simple-survey.www.admin.question-delete.survsimp_delete_question {

            select survsimp_question__delete (:question_id);
	
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/simple-survey/www/admin/question-delete-postgresql.xql}
dbqd.simple-survey.www.admin.question-delete.survsimp_id_from_qeustion_id {dbqd.simple-survey.www.admin.question-delete.survsimp_id_from_qeustion_id {
      select survey_id from survsimp_questions where question_id = :question_id
      } {} {} {} c:/web/openacs-4/packages/simple-survey/www/admin/question-delete.xql}
dbqd.simple-survey.www.admin.question-delete.survsimp_number_responses {dbqd.simple-survey.www.admin.question-delete.survsimp_number_responses {
      select count(*)
from survsimp_question_responses
where question_id = :question_id
      } {} {} {} c:/web/openacs-4/packages/simple-survey/www/admin/question-delete.xql}
dbqd.simple-survey.www.admin.question-delete.survsimp_question_choices_score_delete {dbqd.simple-survey.www.admin.question-delete.survsimp_question_choices_score_delete {

      delete from survsimp_choice_scores 
      where choice_id in (select choice_id from survsimp_question_choices
          where question_id = :question_id)

      } {} {} {} c:/web/openacs-4/packages/simple-survey/www/admin/question-delete.xql}
dbqd.simple-survey.www.admin.question-delete.survsimp_question_choices_delete {dbqd.simple-survey.www.admin.question-delete.survsimp_question_choices_delete {
      delete from survsimp_question_choices where
         question_id = :question_id
      } {} {} {} c:/web/openacs-4/packages/simple-survey/www/admin/question-delete.xql}
dbqd.simple-survey.www.admin.question-modify-text-2.survey_question_text_update {dbqd.simple-survey.www.admin.question-modify-text-2.survey_question_text_update {
      update survsimp_questions set question_text=:question_text where question_id=:question_id
      } {} {} {} c:/web/openacs-4/packages/simple-survey/www/admin/question-modify-text-2.xql}
dbqd.simple-survey.www.admin.question-modify-text.survey_name_from_id {dbqd.simple-survey.www.admin.question-modify-text.survey_name_from_id {
      select name from survsimp_surveys where survey_id=:survey_id
      } {} {} {} c:/web/openacs-4/packages/simple-survey/www/admin/question-modify-text.xql}
dbqd.simple-survey.www.admin.question-modify-text.survsimp_question_text_from_id {dbqd.simple-survey.www.admin.question-modify-text.survsimp_question_text_from_id {
      select question_text
from survsimp_questions
where question_id = :question_id
      } {} {} {} c:/web/openacs-4/packages/simple-survey/www/admin/question-modify-text.xql}
dbqd.simple-survey.www.admin.question-required-toggle-oracle.survsimp_question_required_toggle {dbqd.simple-survey.www.admin.question-required-toggle-oracle.survsimp_question_required_toggle {
      update survsimp_questions set required_p = util.logical_negation(required_p)
where survey_id = :survey_id
and question_id = :question_id
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/simple-survey/www/admin/question-required-toggle-oracle.xql}
dbqd.simple-survey.www.admin.question-required-toggle.survsimp_question_required_toggle {dbqd.simple-survey.www.admin.question-required-toggle.survsimp_question_required_toggle {
      update survsimp_questions set required_p = util__logical_negation(required_p)
where survey_id = :survey_id
and question_id = :question_id
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/simple-survey/www/admin/question-required-toggle-postgresql.xql}
dbqd.simple-survey.www.admin.question-swap.swap_sort_keys {dbqd.simple-survey.www.admin.question-swap.swap_sort_keys {
update survsimp_questions
set sort_key = (case when sort_key = :sort_key then :next_sort_key when sort_key = :next_sort_key then :sort_key end)
where survey_id = :survey_id
and sort_key in (:sort_key, :next_sort_key)
      } {} {} {} c:/web/openacs-4/packages/simple-survey/www/admin/question-swap.xql}
dbqd.simple-survey.www.admin.respondents.select_respondents {dbqd.simple-survey.www.admin.respondents.select_respondents {
            select persons.first_names || ' ' || persons.last_name as name,
                   acs_objects.creation_user as user_id,
                   parties.email
            from survsimp_responses,
                 persons,
                 parties,
                 acs_objects
            where survsimp_responses.survey_id = :survey_id
            and survsimp_responses.response_id = acs_objects.object_id
            and acs_objects.creation_user = persons.person_id
            and persons.person_id = parties.party_id
            group by acs_objects.creation_user,
                     parties.email,
                     persons.first_names,
                     persons.last_name
            order by persons.last_name
        } {} {} {} c:/web/openacs-4/packages/simple-survey/www/admin/respondents.xql}
dbqd.simple-survey.www.admin.respondents.select_survey_name {dbqd.simple-survey.www.admin.respondents.select_survey_name {
            select name
            from survsimp_surveys
            where survey_id = :survey_id
        } {} {} {} c:/web/openacs-4/packages/simple-survey/www/admin/respondents.xql}
dbqd.simple-survey.www.admin.response-drill-down.get_question_text {dbqd.simple-survey.www.admin.response-drill-down.get_question_text {
      
select survey_id, question_text
from survsimp_questions
where question_id = :question_id
      } {} {} {} c:/web/openacs-4/packages/simple-survey/www/admin/response-drill-down.xql}
dbqd.simple-survey.www.admin.response-drill-down.get_response_text {dbqd.simple-survey.www.admin.response-drill-down.get_response_text {
      
select label as response_text
from survsimp_question_choices
where choice_id = :choice_id
      } {} {} {} c:/web/openacs-4/packages/simple-survey/www/admin/response-drill-down.xql}
dbqd.simple-survey.www.admin.response-drill-down.survey_name {dbqd.simple-survey.www.admin.response-drill-down.survey_name {
      select name from survsimp_surveys where survey_id = :survey_id
      } {} {} {} c:/web/openacs-4/packages/simple-survey/www/admin/response-drill-down.xql}
dbqd.simple-survey.www.admin.response-drill-down.all_users_for_response {dbqd.simple-survey.www.admin.response-drill-down.all_users_for_response {
      
select
  first_names || ' ' || last_name as responder_name,
  person_id,
  creation_date
from
  acs_objects,
  survsimp_responses sr,
  persons u,
  survsimp_question_responses qr
where
  qr.response_id = sr.response_id
  and qr.response_id = object_id
  and creation_user = person_id
  and qr.question_id = :question_id
  and qr.choice_id = :choice_id
      } {} {} {} c:/web/openacs-4/packages/simple-survey/www/admin/response-drill-down.xql}
dbqd.simple-survey.www.admin.response-editable-toggle-oracle.survsimp_response_editable_toggle {dbqd.simple-survey.www.admin.response-editable-toggle-oracle.survsimp_response_editable_toggle {
      update survsimp_surveys set single_editable_p = util.logical_negation(single_editable_p)
where survey_id = :survey_id
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/simple-survey/www/admin/response-editable-toggle-oracle.xql}
dbqd.simple-survey.www.admin.response-editable-toggle.survsimp_response_editable_toggle {dbqd.simple-survey.www.admin.response-editable-toggle.survsimp_response_editable_toggle {
      update survsimp_surveys set single_editable_p = util__logical_negation(single_editable_p)
where survey_id = :survey_id
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/simple-survey/www/admin/response-editable-toggle-postgresql.xql}
dbqd.simple-survey.www.admin.response-limit-toggle-oracle.survsimp_reponse_toggle {dbqd.simple-survey.www.admin.response-limit-toggle-oracle.survsimp_reponse_toggle {
      update survsimp_surveys 
set single_response_p = util.logical_negation(single_response_p)
where survey_id = :survey_id
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/simple-survey/www/admin/response-limit-toggle-oracle.xql}
dbqd.simple-survey.www.admin.response-limit-toggle.survsimp_reponse_toggle {dbqd.simple-survey.www.admin.response-limit-toggle.survsimp_reponse_toggle {
      update survsimp_surveys 
set single_response_p = util__logical_negation(single_response_p)
where survey_id = :survey_id
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/simple-survey/www/admin/response-limit-toggle-postgresql.xql}
dbqd.simple-survey.www.admin.responses-oracle.get_survey_scores_summary {dbqd.simple-survey.www.admin.responses-oracle.get_survey_scores_summary {
      select variable_name, to_char(avg(sum_score), '9999.9') as mean_score,
                                          min(sum_score) as min_score,
                                          max(sum_score) as max_score,
                                          count(sum_score) as count_score,
                                          nvl(to_char(stddev_samp(sum_score), '9999.9'), '0.0') as sd_score                                           
                                          from
                                          (select variable_name, sum(score) as sum_score
	                                    from survsimp_choice_scores, survsimp_question_responses, survsimp_variables,
                                            survsimp_responses
                                            where survsimp_choice_scores.choice_id = survsimp_question_responses.choice_id
                                            and survsimp_choice_scores.variable_id = survsimp_variables.variable_id
                                            and survsimp_responses.response_id = survsimp_question_responses.response_id
                                            and survey_id = :local_survey_id
                                            group by survsimp_responses.response_id, variable_name)
                                          group by variable_name
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/simple-survey/www/admin/responses-oracle.xql}
dbqd.simple-survey.www.admin.responses.get_survey_scores_summary {dbqd.simple-survey.www.admin.responses.get_survey_scores_summary {
      select variable_name, to_char(avg(sum_score), '9999.9') as mean_score,
                                          min(sum_score) as min_score,
                                          max(sum_score) as max_score,
                                          count(sum_score) as count_score,
                                          coalesce(to_char(stddev_samp(sum_score), '9999.9'), '0.0') as sd_score                                           
                                          from
                                          (select variable_name, sum(score) as sum_score
	                                    from survsimp_choice_scores, survsimp_question_responses, survsimp_variables,
                                            survsimp_responses
                                            where survsimp_choice_scores.choice_id = survsimp_question_responses.choice_id
                                            and survsimp_choice_scores.variable_id = survsimp_variables.variable_id
                                            and survsimp_responses.response_id = survsimp_question_responses.response_id
                                            and survey_id = :local_survey_id
                                            group by survsimp_responses.response_id, variable_name)
                                          group by variable_name
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/simple-survey/www/admin/responses-postgresql.xql}
dbqd.simple-survey.www.admin.responses.survey_name {dbqd.simple-survey.www.admin.responses.survey_name {
      select type
  from survsimp_surveys
  where survey_id = :survey_id
      } {} {} {} c:/web/openacs-4/packages/simple-survey/www/admin/responses.xql}
dbqd.simple-survey.www.admin.responses.survsimp_survey_question_list {dbqd.simple-survey.www.admin.responses.survsimp_survey_question_list {
      select question_id, question_text, abstract_data_type
from survsimp_questions
where survey_id = :survey_id
order by sort_key
      } {} {} {} c:/web/openacs-4/packages/simple-survey/www/admin/responses.xql}
dbqd.simple-survey.www.admin.responses.survsimp_boolean_summary {dbqd.simple-survey.www.admin.responses.survsimp_boolean_summary {
select count(*) as n_responses, (case when boolean_answer = 't' then 'True' when boolean_answer = 'f' then 'False' end) as boolean_answer
from $question_responses_table
where question_id = :question_id
group by boolean_answer
order by boolean_answer desc
      } {} {} {} c:/web/openacs-4/packages/simple-survey/www/admin/responses.xql}
dbqd.simple-survey.www.admin.responses.survsimp_number_summary {dbqd.simple-survey.www.admin.responses.survsimp_number_summary {
      select count(*) as n_responses, number_answer
from $question_responses_table
where question_id = :question_id
group by number_answer
order by number_answer
      } {} {} {} c:/web/openacs-4/packages/simple-survey/www/admin/responses.xql}
dbqd.simple-survey.www.admin.responses.survsimp_number_average {dbqd.simple-survey.www.admin.responses.survsimp_number_average {
      select avg(number_answer) as mean, stddev(number_answer) as standard_deviation
from $question_responses_table
where question_id = :question_id
      } {} {} {} c:/web/openacs-4/packages/simple-survey/www/admin/responses.xql}
dbqd.simple-survey.www.admin.responses.survsimp_survey_question_choices {dbqd.simple-survey.www.admin.responses.survsimp_survey_question_choices {
      select count(*) as n_responses, label, qc.choice_id
from $question_responses_table qr, survsimp_question_choices qc
where qr.choice_id = qc.choice_id
  and qr.question_id = :question_id
group by label, sort_order, qc.choice_id
order by sort_order
      } {} {} {} c:/web/openacs-4/packages/simple-survey/www/admin/responses.xql}
dbqd.simple-survey.www.admin.responses.survey_name {dbqd.simple-survey.www.admin.responses.survey_name {
      select type
  from survsimp_surveys
  where survey_id = :survey_id
      } {} {} {} c:/web/openacs-4/packages/simple-survey/www/admin/responses.xql}
dbqd.simple-survey.www.admin.responses.survsimp_number_responses {dbqd.simple-survey.www.admin.responses.survsimp_number_responses {
      select count(*)
from $responses_table
where survey_id = :survey_id
      } {} {} {} c:/web/openacs-4/packages/simple-survey/www/admin/responses.xql}
dbqd.simple-survey.www.admin.survey-category-add-oracle.category_id_next_sequence {dbqd.simple-survey.www.admin.survey-category-add-oracle.category_id_next_sequence {
      select 
  category_id_sequence.nextval from dual
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/simple-survey/www/admin/survey-category-add-oracle.xql}
dbqd.simple-survey.www.admin.survey-category-add-oracle.category_map_insert {dbqd.simple-survey.www.admin.survey-category-add-oracle.category_map_insert {
      insert into site_wide_category_map 
  (map_id, category_id,
  on_which_table, on_what_id, mapping_date, one_line_item_desc) 
  values (site_wide_cat_map_id_seq.nextval, :category_id, 'survsimp_surveys',
  :survey_id, sysdate, :one_line_item_desc)
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/simple-survey/www/admin/survey-category-add-oracle.xql}
dbqd.simple-survey.www.admin.survey-category-add.category_id_next_sequence {dbqd.simple-survey.www.admin.survey-category-add.category_id_next_sequence {
      select 
  category_id_sequence.nextval 
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/simple-survey/www/admin/survey-category-add-postgresql.xql}
dbqd.simple-survey.www.admin.survey-category-add.category_map_insert {dbqd.simple-survey.www.admin.survey-category-add.category_map_insert {
      insert into site_wide_category_map 
  (map_id, category_id,
  on_which_table, on_what_id, mapping_date, one_line_item_desc) 
  values (site_wide_cat_map_id_seq.nextval, :category_id, 'survsimp_surveys',
  :survey_id, current_timestamp, :one_line_item_desc)
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/simple-survey/www/admin/survey-category-add-postgresql.xql}
dbqd.simple-survey.www.admin.survey-category-add.category_insert {dbqd.simple-survey.www.admin.survey-category-add.category_insert {
      insert into categories 
  (category_id, category,category_type)
  values (:category_id, :category, 'survsimp')
      } {} {} {} c:/web/openacs-4/packages/simple-survey/www/admin/survey-category-add.xql}
dbqd.simple-survey.www.admin.survey-category-add.survey_name {dbqd.simple-survey.www.admin.survey-category-add.survey_name {
      
  select name from survsimp_surveys where survey_id = :survey_id
      } {} {} {} c:/web/openacs-4/packages/simple-survey/www/admin/survey-category-add.xql}
dbqd.simple-survey.www.admin.survey-create-2-oracle.create_survey {dbqd.simple-survey.www.admin.survey-create-2-oracle.create_survey {
      
	    begin
	        :1 := survsimp_survey.new (
                    survey_id => :survey_id,
                    name => :name,
                    short_name => :name,
                    description => :description,
                    description_html_p => :description_html_p,
                    type => :type,
                    display_type => :display_type,
                    context_id => :package_id,
                    package_id => :package_id,
		    creation_user => :user_id
                );
            end;
        
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/simple-survey/www/admin/survey-create-2-oracle.xql}
dbqd.simple-survey.www.admin.survey-create-2-oracle.next_variable_id {dbqd.simple-survey.www.admin.survey-create-2-oracle.next_variable_id {
      select survsimp_variable_id_sequence.nextval from dual
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/simple-survey/www/admin/survey-create-2-oracle.xql}
dbqd.simple-survey.www.admin.survey-create-2-oracle.next_logic_id {dbqd.simple-survey.www.admin.survey-create-2-oracle.next_logic_id {
      select survsimp_logic_id_sequence.nextval from dual
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/simple-survey/www/admin/survey-create-2-oracle.xql}
dbqd.simple-survey.www.admin.survey-create-2-oracle.add_logic {dbqd.simple-survey.www.admin.survey-create-2-oracle.add_logic {
      insert into survsimp_logic
      (logic_id, logic)
      values
      (:logic_id, empty_clob()) returning logic into :1
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/simple-survey/www/admin/survey-create-2-oracle.xql}
dbqd.simple-survey.www.admin.survey-create-2.create_survey {dbqd.simple-survey.www.admin.survey-create-2.create_survey {

	        select survsimp_survey__new (
                    :survey_id,
                    :name,
                    :name,
                    :description,
                    :description_html_p,
		    'f',
		    't',
		    'f',
                    :type,
                    :display_type,
		    :user_id,
                    :package_id
                )
        
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/simple-survey/www/admin/survey-create-2-postgresql.xql}
dbqd.simple-survey.www.admin.survey-create-2.next_variable_id {dbqd.simple-survey.www.admin.survey-create-2.next_variable_id {
      select survsimp_variable_id_sequence.nextval 
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/simple-survey/www/admin/survey-create-2-postgresql.xql}
dbqd.simple-survey.www.admin.survey-create-2.next_logic_id {dbqd.simple-survey.www.admin.survey-create-2.next_logic_id {
      select survsimp_logic_id_sequence.nextval 
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/simple-survey/www/admin/survey-create-2-postgresql.xql}
dbqd.simple-survey.www.admin.survey-create-2.add_logic {dbqd.simple-survey.www.admin.survey-create-2.add_logic {
      insert into survsimp_logic
      (logic_id, logic)
      values
      (:logic_id, :logic)
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/simple-survey/www/admin/survey-create-2-postgresql.xql}
dbqd.simple-survey.www.admin.survey-create-2.short_name_uniqueness_check {dbqd.simple-survey.www.admin.survey-create-2.short_name_uniqueness_check {
      
select count(short_name)
from survsimp_surveys
where lower(short_name) = lower(:short_name)
      } {} {} {} c:/web/openacs-4/packages/simple-survey/www/admin/survey-create-2.xql}
dbqd.simple-survey.www.admin.survey-create-2.add_variable_name {dbqd.simple-survey.www.admin.survey-create-2.add_variable_name {
      insert into survsimp_variables
                  (variable_id, variable_name)
                  values
                  (:variable_id, :variable_name)
      } {} {} {} c:/web/openacs-4/packages/simple-survey/www/admin/survey-create-2.xql}
dbqd.simple-survey.www.admin.survey-create-2.map_variable_name {dbqd.simple-survey.www.admin.survey-create-2.map_variable_name {
      insert into survsimp_variables_surveys_map
                  (variable_id, survey_id)
                  values
                  (:variable_id, :survey_id)
      } {} {} {} c:/web/openacs-4/packages/simple-survey/www/admin/survey-create-2.xql}
dbqd.simple-survey.www.admin.survey-create-2.map_logic {dbqd.simple-survey.www.admin.survey-create-2.map_logic {
      insert into survsimp_logic_surveys_map
              (logic_id, survey_id)
              values
              (:logic_id, :survey_id)
      } {} {} {} c:/web/openacs-4/packages/simple-survey/www/admin/survey-create-2.xql}
dbqd.simple-survey.www.admin.survey-toggle.survey_active_toggle {dbqd.simple-survey.www.admin.survey-toggle.survey_active_toggle {
      update survsimp_surveys 
    set enabled_p = :enabled_p 
    where survey_id = :survey_id
      } {} {} {} c:/web/openacs-4/packages/simple-survey/www/admin/survey-toggle.xql}
dbqd.simple-survey.www.admin.view-text-responses-oracle.all_responses_to_question {dbqd.simple-survey.www.admin.view-text-responses-oracle.all_responses_to_question {
      
select
  $column_name as response,
  person.name(o.creation_user) as respondent_name,
  o.creation_date as submission_date,
  o.creation_ip as ip_address
from
  survsimp_responses r,
  survsimp_question_responses qr,
  acs_objects o
where
  qr.response_id = r.response_id
  and qr.question_id = :question_id
  and o.object_id = qr.response_id
  order by submission_date

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/simple-survey/www/admin/view-text-responses-oracle.xql}
dbqd.simple-survey.www.admin.view-text-responses.all_responses_to_question {dbqd.simple-survey.www.admin.view-text-responses.all_responses_to_question {
      
select
  $column_name as response,
  person__name(acs_object__get_attribute(r.response_id,'creation_user')::text::integer) as respondent_name,
  acs_object__get_attribute(r.response_id,'creation_date') as submission_date,
  acs_object__get_attribute(r.response_id,'creation_ip') as ip_address
from
  survsimp_responses r,
  survsimp_question_responses qr
where
  qr.response_id = r.response_id
  and qr.question_id = :question_id
  order by submission_date

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/simple-survey/www/admin/view-text-responses-postgresql.xql}
dbqd.simple-survey.www.admin.view-text-responses.one_question {dbqd.simple-survey.www.admin.view-text-responses.one_question {
      
  select question_text, survey_id
  from survsimp_questions
  where question_id = :question_id
      } {} {} {} c:/web/openacs-4/packages/simple-survey/www/admin/view-text-responses.xql}
dbqd.simple-survey.www.admin.view-text-responses.abstract_data_type {dbqd.simple-survey.www.admin.view-text-responses.abstract_data_type {
      select abstract_data_type
from survsimp_questions q
where question_id = :question_id
      } {} {} {} c:/web/openacs-4/packages/simple-survey/www/admin/view-text-responses.xql}
dbqd.simple-survey.www.index-oracle.survey_select {dbqd.simple-survey.www.index-oracle.survey_select {
      
    select survey_id, name
    from survsimp_surveys, acs_objects
    where object_id = survey_id
    and context_id = :package_id
    and acs_permission.permission_p(object_id, :user_id, 'survsimp_take_survey') = 't'
    and enabled_p = 't'
    order by upper(name)

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/simple-survey/www/index-oracle.xql}
dbqd.simple-survey.www.index.survey_select {dbqd.simple-survey.www.index.survey_select {
      
    select survey_id, name
    from survsimp_surveys, acs_objects
    where object_id = survey_id
    and context_id = :package_id
    and acs_permission__permission_p(object_id, :user_id, 'survsimp_take_survey') = 't'
    and enabled_p = 't'
    order by upper(name)

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/simple-survey/www/index-postgresql.xql}
dbqd.simple-survey.www.one-respondent-oracle.response_ids_select {dbqd.simple-survey.www.one-respondent-oracle.response_ids_select {
      
    select response_id, creation_date, to_char(creation_date, 'DD MONTH YYYY') as pretty_submission_date
    from survsimp_responses, acs_objects
    where survey_id = :survey_id
    and response_id = object_id
    and creation_user = :user_id
    order by creation_date desc

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/simple-survey/www/one-respondent-oracle.xql}
dbqd.simple-survey.www.one-respondent.response_ids_select {dbqd.simple-survey.www.one-respondent.response_ids_select {
    select response_id, creation_date, to_char(creation_date, 'YYYY-MM-DD HH24:MI:SS') as submission_date_ansi
    from survsimp_responses, acs_objects
    where survey_id = :survey_id
    and response_id = object_id
    and creation_user = :user_id
    order by creation_date desc

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/simple-survey/www/one-respondent-postgresql.xql}
dbqd.simple-survey.www.one-respondent.survey_exists {dbqd.simple-survey.www.one-respondent.survey_exists {
      
		select 1 from survsimp_surveys where survey_id = :survey_id
	    
      } {} {} {} c:/web/openacs-4/packages/simple-survey/www/one-respondent.xql}
dbqd.simple-survey.www.one-respondent.survey_info {dbqd.simple-survey.www.one-respondent.survey_info {
       select name, description
    from survsimp_surveys
    where survey_id = :survey_id

      } {} {} {} c:/web/openacs-4/packages/simple-survey/www/one-respondent.xql}
dbqd.simple-survey.www.one.survey_exists {dbqd.simple-survey.www.one.survey_exists {
      
	    select 1 from survsimp_surveys where survey_id = :survey_id
	
      } {} {} {} c:/web/openacs-4/packages/simple-survey/www/one.xql}
dbqd.simple-survey.www.one.survey_info {dbqd.simple-survey.www.one.survey_info {
      select name, description, single_response_p, single_editable_p, display_type
    from survsimp_surveys where survey_id = :survey_id
      } {} {} {} c:/web/openacs-4/packages/simple-survey/www/one.xql}
dbqd.simple-survey.www.one.responses_count {dbqd.simple-survey.www.one.responses_count {
      
    select count(response_id)
    from survsimp_responses, acs_objects
    where response_id = object_id
    and creation_user = :user_id
    and survey_id = :survey_id

      } {} {} {} c:/web/openacs-4/packages/simple-survey/www/one.xql}
dbqd.simple-survey.www.one.question_ids_select {dbqd.simple-survey.www.one.question_ids_select {
      
    select question_id
    from survsimp_questions  
    where survey_id = :survey_id
    and active_p = 't'
    order by sort_key

      } {} {} {} c:/web/openacs-4/packages/simple-survey/www/one.xql}
dbqd.simple-survey.www.process-response-oracle.create_response {dbqd.simple-survey.www.process-response-oracle.create_response {
      
	begin
	    :1 := survsimp_response.new (
		response_id => :response_id,
		survey_id => :survey_id,		
		context_id => :survey_id,
		creation_user => :user_id
	    );
	end;
    
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/simple-survey/www/process-response-oracle.xql}
dbqd.simple-survey.www.process-response-oracle.survsimp_question_response_text_insert {dbqd.simple-survey.www.process-response-oracle.survsimp_question_response_text_insert {

      insert into survsimp_question_responses
      (response_id, question_id, clob_answer)
      values 
      (:response_id, :question_id, empty_clob())
      returning clob_answer into :1

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/simple-survey/www/process-response-oracle.xql}
dbqd.simple-survey.www.process-response-oracle.create_item {dbqd.simple-survey.www.process-response-oracle.create_item {

       begin
           :1 := content_item.new (
           name => :name,
           creation_ip => :creation_ip
	   );
       end;

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/simple-survey/www/process-response-oracle.xql}
dbqd.simple-survey.www.process-response-oracle.create_rel {dbqd.simple-survey.www.process-response-oracle.create_rel {

      begin
 	  :1 := acs_rel.new (
 	  rel_type => 'user_blob_response_rel',
 	  object_id_one => :user_id,
 	  object_id_two => :item_id);
      end;

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/simple-survey/www/process-response-oracle.xql}
dbqd.simple-survey.www.process-response-oracle.create_revision {dbqd.simple-survey.www.process-response-oracle.create_revision {

      begin
	  :1 := content_revision.new (
	  title => 'A Blob Response',
	  item_id => :item_id,
	  text => 'not_important',
	  mime_type => :guessed_file_type,
	  creation_date => sysdate,
	  creation_user => :user_id,
	  creation_ip => :creation_ip
	  );

          update cr_items
          set live_revision = :1
          where item_id = :item_id;

      end;

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/simple-survey/www/process-response-oracle.xql}
dbqd.simple-survey.www.process-response-oracle.update_response {dbqd.simple-survey.www.process-response-oracle.update_response {

      update cr_revisions
      set content = empty_blob()
      where revision_id = :revision_id
      returning content into :1

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/simple-survey/www/process-response-oracle.xql}
dbqd.simple-survey.www.process-response.create_response {dbqd.simple-survey.www.process-response.create_response {
	select survsimp_response__new (
		:response_id,
		:survey_id,		
		null,
		'f',
		:user_id,
		:creation_ip,
		:survey_id
	    )
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/simple-survey/www/process-response-postgresql.xql}
dbqd.simple-survey.www.process-response.survsimp_question_response_text_insert {dbqd.simple-survey.www.process-response.survsimp_question_response_text_insert {

      insert into survsimp_question_responses
      (response_id, question_id, clob_answer)
      values 
      (:response_id, :question_id, :clob_answer)

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/simple-survey/www/process-response-postgresql.xql}
dbqd.simple-survey.www.process-response.create_item {dbqd.simple-survey.www.process-response.create_item {

      select content_item__new (
	   varchar :name,
	   null,
	   null,
	   null,
	   now(),
	   :user_id,
	   null,
           :creation_ip,
	   'content_item',
	   'content_revision',
	   null,
	   null,
	   'text/plain',
	   null,
	   null,
	   'file'
           )

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/simple-survey/www/process-response-postgresql.xql}
dbqd.simple-survey.www.process-response.create_rel {dbqd.simple-survey.www.process-response.create_rel {

      select acs_rel__new (
	  null,
          'user_blob_response_rel',
          :user_id,
          :item_id,
	  null,
	  null,
	  null
      )

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/simple-survey/www/process-response-postgresql.xql}
dbqd.simple-survey.www.process-response.create_revision {dbqd.simple-survey.www.process-response.create_revision {

      declare
	  v_revision_id		integer;
      begin
          v_revision_id := content_revision__new (
          'A Blob Response',
	  null,
	  now(),
          :guessed_file_type,
	  null,
          'not_important',
          :item_id,
	  null,
          now(),
          :user_id,
          :creation_ip
          );

          update cr_items
          set live_revision = v_revision_id
          where item_id = :item_id;

	  return v_revision_id;

      end;

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/simple-survey/www/process-response-postgresql.xql}
dbqd.simple-survey.www.process-response.update_response {dbqd.simple-survey.www.process-response.update_response {

      update cr_revisions
      set content = '[cr_create_content_file $item_id $revision_id $tmp_filename]'
      where revision_id = :revision_id

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/simple-survey/www/process-response-postgresql.xql}
dbqd.simple-survey.www.process-response.survey_exists {dbqd.simple-survey.www.process-response.survey_exists {
      
	    select 1 from survsimp_surveys where survey_id = :survey_id
	
      } {} {} {} c:/web/openacs-4/packages/simple-survey/www/process-response.xql}
dbqd.simple-survey.www.process-response.survsimp_question_info_list {dbqd.simple-survey.www.process-response.survsimp_question_info_list {
      
	    select question_id, question_text, abstract_data_type, presentation_type, required_p
	    from survsimp_questions
	    where survey_id = :survey_id
	    and active_p = 't'
	    order by sort_key
	
      } {} {} {} c:/web/openacs-4/packages/simple-survey/www/process-response.xql}
dbqd.simple-survey.www.process-response.survsimp_question_info_list {dbqd.simple-survey.www.process-response.survsimp_question_info_list {
      
	    select question_id, question_text, abstract_data_type, presentation_type, required_p
	    from survsimp_questions
	    where survey_id = :survey_id
	    and active_p = 't'
	    order by sort_key
	
      } {} {} {} c:/web/openacs-4/packages/simple-survey/www/process-response.xql}
dbqd.simple-survey.www.process-response.survsimp_question_response_checkbox_insert {dbqd.simple-survey.www.process-response.survsimp_question_response_checkbox_insert {
      insert into survsimp_question_responses (response_id, question_id, choice_id)
 values (:response_id, :question_id, :response_value)
      } {} {} {} c:/web/openacs-4/packages/simple-survey/www/process-response.xql}
dbqd.simple-survey.www.process-response.survsimp_question_response_choice_insert {dbqd.simple-survey.www.process-response.survsimp_question_response_choice_insert {
      insert into survsimp_question_responses (response_id, question_id, choice_id)
 values (:response_id, :question_id, :response_value)
      } {} {} {} c:/web/openacs-4/packages/simple-survey/www/process-response.xql}
dbqd.simple-survey.www.process-response.survsimp_question_choice_shorttext_insert {dbqd.simple-survey.www.process-response.survsimp_question_choice_shorttext_insert {
      insert into survsimp_question_responses (response_id, question_id, varchar_answer)
 values (:response_id, :question_id, :response_value)
      } {} {} {} c:/web/openacs-4/packages/simple-survey/www/process-response.xql}
dbqd.simple-survey.www.process-response.survsimp_question_response_boolean_insert {dbqd.simple-survey.www.process-response.survsimp_question_response_boolean_insert {
      insert into survsimp_question_responses (response_id, question_id, boolean_answer)
 values (:response_id, :question_id, :response_value)
      } {} {} {} c:/web/openacs-4/packages/simple-survey/www/process-response.xql}
dbqd.simple-survey.www.process-response.survsimp_question_response_integer_insert {dbqd.simple-survey.www.process-response.survsimp_question_response_integer_insert {
      insert into survsimp_question_responses (response_id, question_id, number_answer)
 values (:response_id, :question_id, :response_value)
      } {} {} {} c:/web/openacs-4/packages/simple-survey/www/process-response.xql}
dbqd.simple-survey.www.process-response.survsimp_question_response_date_insert {dbqd.simple-survey.www.process-response.survsimp_question_response_date_insert {
      insert into survsimp_question_responses (response_id, question_id, date_answer)
 values (:response_id, :question_id, :response_value)
      } {} {} {} c:/web/openacs-4/packages/simple-survey/www/process-response.xql}
dbqd.simple-survey.www.process-response.get_type {dbqd.simple-survey.www.process-response.get_type {
      select type from survsimp_surveys where survey_id = :survey_id
      } {} {} {} c:/web/openacs-4/packages/simple-survey/www/process-response.xql}
dbqd.simple-survey.www.process-response.survsimp_name_from_id {dbqd.simple-survey.www.process-response.survsimp_name_from_id {
      select name from survsimp_surveys where survey_id = :survey_id
      } {} {} {} c:/web/openacs-4/packages/simple-survey/www/process-response.xql}
dbqd.simple-survey.www.process-response.get_score {dbqd.simple-survey.www.process-response.get_score {
      select variable_name, sum(score) as sum_of_scores
                           from survsimp_choice_scores, survsimp_question_responses, survsimp_variables
                           where survsimp_choice_scores.choice_id = survsimp_question_responses.choice_id
                           and survsimp_choice_scores.variable_id = survsimp_variables.variable_id
                           and survsimp_question_responses.response_id = :response_id
                           group by variable_name
      } {} {} {} c:/web/openacs-4/packages/simple-survey/www/process-response.xql}
dbqd.simple-survey.www.process-response.get_logic {dbqd.simple-survey.www.process-response.get_logic {
      select logic from survsimp_logic, survsimp_logic_surveys_map
          where survsimp_logic.logic_id = survsimp_logic_surveys_map.logic_id
          and survey_id = :survey_id
      } {} {} {} c:/web/openacs-4/packages/simple-survey/www/process-response.xql}
dbqd.simple-survey.www.process-response.survsimp_question_response_blob_insert {dbqd.simple-survey.www.process-response.survsimp_question_response_blob_insert {

      insert into survsimp_question_responses
      (response_id, question_id, item_id,
      content_length,
      attachment_file_name, attachment_file_type,
      attachment_file_extension)
      values
      (:response_id, :question_id, :item_id,
      :content_length,
      :response_value, :guessed_file_type,
      :file_extension)

      } {} {} {} c:/web/openacs-4/packages/simple-survey/www/process-response.xql}
dbqd.simple-survey.www.view-attachment-oracle.return_attachment {dbqd.simple-survey.www.view-attachment-oracle.return_attachment {
      select attachment_answer  
    from survsimp_question_responses
    where response_id = $response_id and question_id = $question_id

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/simple-survey/www/view-attachment-oracle.xql}
dbqd.simple-survey.www.view-attachment.return_attachment {dbqd.simple-survey.www.view-attachment.return_attachment {
      FIX ME LOB
select attachment_answer  
    from survsimp_question_responses
    where response_id = $response_id and question_id = $question_id

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/simple-survey/www/view-attachment-postgresql.xql}
dbqd.simple-survey.www.view-attachment.get_file_type {dbqd.simple-survey.www.view-attachment.get_file_type {
      select attachment_file_type
	    from survsimp_question_responses
	    where response_id = :response_id and question_id = :question_id
      } {} {} {} c:/web/openacs-4/packages/simple-survey/www/view-attachment.xql}
dbqd.spam.tcl.spam-procs-oracle.spam_base.spam_base_query {dbqd.spam.tcl.spam-procs-oracle.spam_base.spam_base_query {
      
	select
	 site_node.url(node_id) 
 	from 
	 site_nodes, apm_packages 
	where
	 object_id=package_id and package_key='[spam_package_key]'
	
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/spam/tcl/spam-procs-oracle.xql}
dbqd.spam.tcl.spam-procs-oracle.spam_new_message.spam_insert_message {dbqd.spam.tcl.spam-procs-oracle.spam_new_message.spam_insert_message {

    begin
      :1 := spam.new (
         spam_id => :spam_id,
         send_date => to_date(:send_date, 'yyyy-mm-dd hh:mi:ss AM'),
         title => :subject,
         sql_query => :sql,
         html_text => :html,
         plain_text => :plain,
         creation_user => [ad_get_user_id],
         creation_ip => '[ad_conn peeraddr]',
         context_id => :context_id,
         approved_p => :approved_p
     );
     end;

        } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/spam/tcl/spam-procs-oracle.xql}
dbqd.spam.tcl.spam-procs-oracle.spam_put_in_outgoing_queue.spam_insert_into_outgoing {dbqd.spam.tcl.spam-procs-oracle.spam_put_in_outgoing_queue.spam_insert_into_outgoing {
      
	    begin
		  :1 := acs_mail_queue_message.new (
		    body_id => :body_id,
		    context_id => :context_id,
		    creation_date => :creation_date,
		    creation_user => :creation_user,
		    creation_ip => :creation_ip
		);
	    end;
	
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/spam/tcl/spam-procs-oracle.xql}
dbqd.spam.tcl.spam-procs-oracle.spam_sweeper.spam_get_list_of_outgoing_messages {dbqd.spam.tcl.spam-procs-oracle.spam_sweeper.spam_get_list_of_outgoing_messages {
      
	select spam_id
	  from spam_messages
	where 
	    sysdate >= send_date
	and approved_p = 't'
	and sent_p = 'f'
    
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/spam/tcl/spam-procs-oracle.xql}
dbqd.spam.tcl.spam-procs.spam_base.spam_base_query {dbqd.spam.tcl.spam-procs.spam_base.spam_base_query {
      
	select
	 site_node__url(node_id) 
 	from 
	 site_nodes, apm_packages 
	where
	 object_id=package_id and package_key='[spam_package_key]'
	
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/spam/tcl/spam-procs-postgresql.xql}
dbqd.spam.tcl.spam-procs.spam_new_message.spam_insert_message {dbqd.spam.tcl.spam-procs.spam_new_message.spam_insert_message {

         select spam__new (
                :spam_id,       -- spam_id
                null,           -- reply_to
                null,           -- sent_date
                null,           -- sender
                null,           -- rfc822_id
                :subject,       -- title
                :html,          -- html_text
                :plain,         -- plain_text
                :context_id,    -- context_id
                now(),          -- creation_date
                :user_id,       -- creation_user
                :peeraddr,      -- creation_ip
                'spam_message', -- object_type
                :approved_p,    -- approved_p
                :sql,           -- sql_query
                to_timestamp(:send_date, 'yyyy-mm-dd hh:mi:ss AM') -- send_date
         );

        } {} {} {postgresql 7.1} c:/web/openacs-4/packages/spam/tcl/spam-procs-postgresql.xql}
dbqd.spam.tcl.spam-procs.spam_update_message.spam_update_message {dbqd.spam.tcl.spam-procs.spam_update_message.spam_update_message {

        select spam__edit (
                :spam_id,       -- spam_id
                :subject,       -- title
                :html,          -- html_text
                :plain,         -- plain_text
                :sql,           -- sql_query
                to_timestamp(:send_date, 'yyyy-mm-dd hh:mi:ss AM') -- send_date
        );                

        } {} {} {postgresql 7.1} c:/web/openacs-4/packages/spam/tcl/spam-procs-postgresql.xql}
dbqd.spam.tcl.spam-procs.spam_put_in_outgoing_queue.spam_insert_into_outgoing {dbqd.spam.tcl.spam-procs.spam_put_in_outgoing_queue.spam_insert_into_outgoing {
            select acs_mail_queue_message__new (
                    null,               -- p_mail_link_id
                    :body_id,           -- p_body_id       
                    :context_id,        -- p_context_id
                    :creation_date,     -- p_creation_date
                    :creation_user,     -- p_creation_user
                    :creation_ip,       -- p_creation_ip
                    'acs_mail_link'     -- p_object_type (default)
            );
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/spam/tcl/spam-procs-postgresql.xql}
dbqd.spam.tcl.spam-procs.spam_sweeper.spam_get_list_of_outgoing_messages {dbqd.spam.tcl.spam-procs.spam_sweeper.spam_get_list_of_outgoing_messages {
      
	select spam_id
	  from spam_messages
	where 
	    current_timestamp >= send_date
	and approved_p = 't'
	and sent_p = 'f'
    
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/spam/tcl/spam-procs-postgresql.xql}
dbqd.spam.tcl.spam-procs.spam_package_id.spam_get_package_id {dbqd.spam.tcl.spam-procs.spam_package_id.spam_get_package_id {
      
	select min(package_id) from apm_packages 
	  where package_key = '[spam_package_key]'
    
      } {} {} {} c:/web/openacs-4/packages/spam/tcl/spam-procs.xql}
dbqd.spam.tcl.spam-procs.spam_send_immediate.spam_update_for_immediate_send {dbqd.spam.tcl.spam-procs.spam_send_immediate.spam_update_for_immediate_send {
      
	spam_put_in_outgoing_queue $msg_id
	acs_mail_process_queue
    
      } {} {} {} c:/web/openacs-4/packages/spam/tcl/spam-procs.xql}
dbqd.spam.tcl.spam-procs.spam_put_in_outgoing_queue.spam_get_outgoing_message {dbqd.spam.tcl.spam-procs.spam_put_in_outgoing_queue.spam_get_outgoing_message {
      
	select body_id, send_date, sql_query, context_id, 
	    creation_date, creation_user, creation_ip
	from spam_messages, acs_objects, acs_mail_links
	where 
	    object_id = spam_id
	and mail_link_id = spam_id
	and spam_id = :spam_id
	and approved_p = 't'
    
      } {} {} {} c:/web/openacs-4/packages/spam/tcl/spam-procs.xql}
dbqd.spam.tcl.spam-procs.spam_put_in_outgoing_queue.spam_get_recipients {dbqd.spam.tcl.spam-procs.spam_put_in_outgoing_queue.spam_get_recipients {
      
	select email from parties, ($sql_query) p2
	where p2.party_id = parties.party_id
    
      } {} {} {} c:/web/openacs-4/packages/spam/tcl/spam-procs.xql}
dbqd.spam.tcl.spam-procs.spam_put_in_outgoing_queue.spam_set_outgoing_addresses {dbqd.spam.tcl.spam-procs.spam_put_in_outgoing_queue.spam_set_outgoing_addresses {
      
		insert into acs_mail_queue_outgoing 
		  (message_id, envelope_from, envelope_to)
		 values 
		  (:id, :spam_sender, :email)
	    
      } {} {} {} c:/web/openacs-4/packages/spam/tcl/spam-procs.xql}
dbqd.spam.tcl.spam-procs.spam_put_in_outgoing_queue.spam_set_sent_p {dbqd.spam.tcl.spam-procs.spam_put_in_outgoing_queue.spam_set_sent_p {
      
	    update spam_messages 
	    set sent_p = 't'
	    where spam_id = :spam_id
	
      } {} {} {} c:/web/openacs-4/packages/spam/tcl/spam-procs.xql}
dbqd.spam.tcl.spam-procs.spam_p.spam_p_count {dbqd.spam.tcl.spam-procs.spam_p.spam_p_count {
      select count(spam_id) from spam_messages where spam_id = :spam_id
      } {} {} {} c:/web/openacs-4/packages/spam/tcl/spam-procs.xql}
dbqd.spam.www.admin.index-oracle.get_recipient_count {dbqd.spam.www.admin.index-oracle.get_recipient_count {
      
	   select count(1) from ($__thisrow(sql_query))
    
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/spam/www/admin/index-oracle.xql}
dbqd.spam.www.admin.index-oracle.spam_queue {dbqd.spam.www.admin.index-oracle.spam_queue {
      
    select sm.spam_id, 
  	   to_char(sm.send_date, 'Mon DD, YYYY HH:MI:SS PM') wait_until,
           decode (sm.approved_p, 't', 'Approved', 
                                  'f', 'Not Approved', 'Error') pretty_approved,
           approved_p,
           sm.sql_query,
           sm.header_subject as title,
           acs_permission.permission_p(sm.spam_id, :user_id, 'admin') 
             as admin_p
      from spam_messages_all sm
     where sent_p = 'f'
           and acs_permission.permission_p(sm.spam_id, :user_id, 'write') = 't'
 
     order by sm.send_date

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/spam/www/admin/index-oracle.xql}
dbqd.spam.www.admin.index.get_recipient_count {dbqd.spam.www.admin.index.get_recipient_count {
      
	   select count(1) from ($__thisrow(sql_query)) as c
    
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/spam/www/admin/index-postgresql.xql}
dbqd.spam.www.admin.index.spam_queue {dbqd.spam.www.admin.index.spam_queue {
      
    select sm.spam_id, 
  	   to_char(sm.send_date, 'Mon DD, YYYY HH:MI:SS PM') as wait_until,
           case when sm.approved_p=TRUE then
                'Approved'
           else
                case when sm.approved_p=FALSE then
                        'Not Approved'
                else
                        'Error'
                end
           end
           as pretty_approved,
           approved_p,
           sm.sql_query,
           sm.header_subject as title,
           acs_permission__permission_p(sm.spam_id, :user_id, 'admin') 
             as admin_p
      from spam_messages_all sm
     where sent_p = 'f'
           and acs_permission__permission_p(sm.spam_id, :user_id, 'write') = 't'
 
     order by sm.send_date

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/spam/www/admin/index-postgresql.xql}
dbqd.spam.www.admin.index.spam_sent {dbqd.spam.www.admin.index.spam_sent {
      
    select sm.spam_id,
           sm.header_subject as title,
           sm.send_date
      from spam_messages_all sm
     where 
           sent_p = 't'
    order by sm.send_date

      } {} {} {} c:/web/openacs-4/packages/spam/www/admin/index.xql}
dbqd.spam.www.admin.spam-edit-oracle.spam_get_multipart_plain_text {dbqd.spam.www.admin.spam-edit-oracle.spam_get_multipart_plain_text {

        select cr.content as plain_text
        from acs_mail_multipart_parts mpp, cr_items ci,  cr_revisions cr
        where 
          mpp.content_item_id=ci.item_id and
          ci.live_revision=cr.revision_id and
          multipart_id=:content_item_id and cr.mime_type='text/plain'

        } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/spam/www/admin/spam-edit-oracle.xql}
dbqd.spam.www.admin.spam-edit-oracle.spam_get_multipart_html_text {dbqd.spam.www.admin.spam-edit-oracle.spam_get_multipart_html_text {

        select cr.content as html_text
        from acs_mail_multipart_parts mpp, cr_items ci, cr_revisions cr
        where
          mpp.content_item_id=ci.item_id and
          ci.live_revision=cr.revision_id and
          multipart_id=:content_item_id and cr.mime_type='text/html' 

        } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/spam/www/admin/spam-edit-oracle.xql}
dbqd.spam.www.admin.spam-edit-oracle.spam_get_num_recipients {dbqd.spam.www.admin.spam-edit-oracle.spam_get_num_recipients {
      
     select count(1) from ($sql_query)

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/spam/www/admin/spam-edit-oracle.xql}
dbqd.spam.www.admin.spam-edit-oracle.spam_get_message {dbqd.spam.www.admin.spam-edit-oracle.spam_get_message {
      
    select header_subject as title, 
      to_char(send_date, 'yyyy-mm-dd') as send_date, 
      to_char(send_date, 'hh24:mi:ss') as send_time, 
      sql_query, sent_p, content_item_id
    from spam_messages_all
    where spam_id = :spam_id

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/spam/www/admin/spam-edit-oracle.xql}
dbqd.spam.www.admin.spam-edit-oracle.spam_get_text {dbqd.spam.www.admin.spam-edit-oracle.spam_get_text {
      
	select content, mime_type
	  from cr_revisions
	where revision_id = content_item.get_live_revision(:content_item_id)
    
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/spam/www/admin/spam-edit-oracle.xql}
dbqd.spam.www.admin.spam-edit.spam_get_message {dbqd.spam.www.admin.spam-edit.spam_get_message {
      
    select header_subject as title, 
      to_char(send_date, 'yyyy-mm-dd') as send_date, 
      to_char(send_date, 'hh24:mi:ss') as send_time, 
      sql_query, sent_p, content_item_id
    from spam_messages_all
    where spam_id = :spam_id

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/spam/www/admin/spam-edit-postgresql.xql}
dbqd.spam.www.admin.spam-edit.spam_get_multipart_plain_text {dbqd.spam.www.admin.spam-edit.spam_get_multipart_plain_text {

        select cr.content as plain_text
        from acs_mail_multipart_parts mpp 
        join cr_items ci on mpp.content_item_id=ci.item_id
        join cr_revisions cr on ci.live_revision=cr.revision_id
        where multipart_id=:content_item_id and cr.mime_type='text/plain'; 

        } {} {} {postgresql 7.1} c:/web/openacs-4/packages/spam/www/admin/spam-edit-postgresql.xql}
dbqd.spam.www.admin.spam-edit.spam_get_multipart_html_text {dbqd.spam.www.admin.spam-edit.spam_get_multipart_html_text {

        select cr.content as html_text
        from acs_mail_multipart_parts mpp 
        join cr_items ci on mpp.content_item_id=ci.item_id
        join cr_revisions cr on ci.live_revision=cr.revision_id
        where multipart_id=:content_item_id and cr.mime_type='text/html'; 

        } {} {} {postgresql 7.1} c:/web/openacs-4/packages/spam/www/admin/spam-edit-postgresql.xql}
dbqd.spam.www.admin.spam-edit.spam_get_text {dbqd.spam.www.admin.spam-edit.spam_get_text {
      
	select content, mime_type
	  from cr_revisions
	where revision_id = content_item__get_live_revision(:content_item_id)
    
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/spam/www/admin/spam-edit-postgresql.xql}
dbqd.spam.www.admin.spam-edit.spam_get_num_recipients {dbqd.spam.www.admin.spam-edit.spam_get_num_recipients {
      
     select count(1) from ($sql_query) as c

      } {} {} {} c:/web/openacs-4/packages/spam/www/admin/spam-edit.xql}
dbqd.spam.www.admin.spam-edit.spam_get_multipart_plain_text {dbqd.spam.www.admin.spam-edit.spam_get_multipart_plain_text {

        select cr.content as plain_text
        from acs_mail_multipart_parts mpp 
        join cr_items ci on mpp.content_item_id=ci.item_id
        join cr_revisions cr on ci.live_revision=cr.revision_id
        where multipart_id=:content_item_id and cr.mime_type='text/plain'; 

        } {} {} {postgresql 7.1} c:/web/openacs-4/packages/spam/www/admin/spam-edit-postgresql.xql}
dbqd.spam.www.admin.spam-edit.spam_get_multipart_html_text {dbqd.spam.www.admin.spam-edit.spam_get_multipart_html_text {

        select cr.content as html_text
        from acs_mail_multipart_parts mpp 
        join cr_items ci on mpp.content_item_id=ci.item_id
        join cr_revisions cr on ci.live_revision=cr.revision_id
        where multipart_id=:content_item_id and cr.mime_type='text/html'; 

        } {} {} {postgresql 7.1} c:/web/openacs-4/packages/spam/www/admin/spam-edit-postgresql.xql}
dbqd.spam.www.admin.spam-show-users-oracle.spam_get_party_list {dbqd.spam.www.admin.spam-show-users-oracle.spam_get_party_list {
      
    select email, first_names || ' ' || last_name as name
      from parties, ($sql_query) p2, persons
    where parties.party_id = person_id(+) 
      and p2.party_id = parties.party_id

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/spam/www/admin/spam-show-users-oracle.xql}
dbqd.spam.www.admin.spam-show-users.spam_get_party_list {dbqd.spam.www.admin.spam-show-users.spam_get_party_list {

    select email, first_names || ' ' || last_name as name
      from parties
      left join persons on parties.party_id = person_id
      join ($sql_query) p2 on p2.party_id = parties.party_id

      } {} {} {} c:/web/openacs-4/packages/spam/www/admin/spam-show-users.xql}
dbqd.spam.www.admin.spam-view-oracle.spam_get_text {dbqd.spam.www.admin.spam-view-oracle.spam_get_text {
      
	select content, mime_type
	  from cr_revisions
	where revision_id = content_item.get_live_revision(:content_item_id)
    
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/spam/www/admin/spam-view-oracle.xql}
dbqd.spam.www.admin.spam-view-oracle.spam_get_message {dbqd.spam.www.admin.spam-view-oracle.spam_get_message {
      
    select header_subject as title, 
           to_char(send_date, 'Month DD, YYYY HH:MI:SS') as send_date,
           content_item_id 
     from spam_messages_all
     where spam_id = :spam_id

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/spam/www/admin/spam-view-oracle.xql}
dbqd.spam.www.admin.spam-view.spam_get_text {dbqd.spam.www.admin.spam-view.spam_get_text {
      
	select content, mime_type
	  from cr_revisions
	where revision_id = content_item__get_live_revision(:content_item_id)
    
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/spam/www/admin/spam-view-postgresql.xql}
dbqd.spam.www.admin.spam-view.spam_get_message {dbqd.spam.www.admin.spam-view.spam_get_message {
      
    select header_subject as title, 
           to_char(send_date, 'Month DD, YYYY HH:MI:SS') as send_date,
           content_item_id 
     from spam_messages_all
     where spam_id = :spam_id

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/spam/www/admin/spam-view-postgresql.xql}
dbqd.spam.www.admin.spam-view.spam_get_multipart_plain_text {dbqd.spam.www.admin.spam-view.spam_get_multipart_plain_text {

        select cr.content as plain_text
        from acs_mail_multipart_parts mpp 
        join cr_items ci on mpp.content_item_id=ci.item_id
        join cr_revisions cr on ci.live_revision=cr.revision_id
        where multipart_id=:content_item_id and cr.mime_type='text/plain'; 

        } {} {} {} c:/web/openacs-4/packages/spam/www/admin/spam-view.xql}
dbqd.spam.www.admin.spam-view.spam_get_multipart_html_text {dbqd.spam.www.admin.spam-view.spam_get_multipart_html_text {

        select cr.content as html_text
        from acs_mail_multipart_parts mpp 
        join cr_items ci on mpp.content_item_id=ci.item_id
        join cr_revisions cr on ci.live_revision=cr.revision_id
        where multipart_id=:content_item_id and cr.mime_type='text/html'; 

        } {} {} {} c:/web/openacs-4/packages/spam/www/admin/spam-view.xql}
dbqd.spam.www.admin.toggle-approval-oracle.toggle_approval {dbqd.spam.www.admin.toggle-approval-oracle.toggle_approval {
      
    update spam_messages
       set approved_p = util.logical_negation(approved_p)
     where spam_id = :spam_id

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/spam/www/admin/toggle-approval-oracle.xql}
dbqd.spam.www.admin.toggle-approval-oracle.spam_get_message_for_approval {dbqd.spam.www.admin.toggle-approval-oracle.spam_get_message_for_approval {
      
    select to_char(send_date, 'yyyy-mm-dd hh24:mi:ss') as sql_send_time,
      sql_query, approved_p
    from spam_messages
    where spam_id = :spam_id

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/spam/www/admin/toggle-approval-oracle.xql}
dbqd.spam.www.admin.toggle-approval.toggle_approval {dbqd.spam.www.admin.toggle-approval.toggle_approval {
      
    update spam_messages
       set approved_p = util__logical_negation(approved_p)
     where spam_id = :spam_id

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/spam/www/admin/toggle-approval-postgresql.xql}
dbqd.spam.www.admin.toggle-approval.spam_get_message_for_approval {dbqd.spam.www.admin.toggle-approval.spam_get_message_for_approval {
      
    select to_char(send_date, 'yyyy-mm-dd hh24:mi:ss') as sql_send_time,
      sql_query, approved_p
    from spam_messages
    where spam_id = :spam_id

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/spam/www/admin/toggle-approval-postgresql.xql}
dbqd.spam.www.index-oracle.get_recipient_count {dbqd.spam.www.index-oracle.get_recipient_count {
      
	   select count(1) from ($__thisrow(sql_query))
    
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/spam/www/index-oracle.xql}
dbqd.spam.www.index-oracle.spam_queue {dbqd.spam.www.index-oracle.spam_queue {
      
    select sm.spam_id, 
  	   to_char(sm.send_date, 'Mon DD, YYYY HH:MI:SS PM') wait_until,
           decode (sm.approved_p, 't', 'Approved', 
                                  'f', 'Not Approved', 'Error') pretty_approved,
           approved_p,
           sm.sql_query,
           sm.header_subject as title,
           acs_permission.permission_p(sm.spam_id, :user_id, 'admin') 
             as admin_p
      from spam_messages_all sm
     where sent_p = 'f'
           and acs_permission.permission_p(sm.spam_id, :user_id, 'write') = 't'
 
     order by sm.send_date

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/spam/www/index-oracle.xql}
dbqd.spam.www.index-oracle.spam_sent {dbqd.spam.www.index-oracle.spam_sent {
      
    select sm.spam_id,
           sm.header_subject as title,
           sm.send_date
      from spam_messages_all sm
     where 
           sent_p = 't'
           and acs_permission.permission_p(sm.spam_id, :user_id, 'read') = 't'
    order by sm.send_date

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/spam/www/index-oracle.xql}
dbqd.spam.www.index.get_recipient_count {dbqd.spam.www.index.get_recipient_count {
      
	   select count(1) from ($__thisrow(sql_query)) as c
    
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/spam/www/index-postgresql.xql}
dbqd.spam.www.index.spam_queue {dbqd.spam.www.index.spam_queue {
          select sm.spam_id, 
  	   to_char(sm.send_date, 'Mon DD, YYYY HH:MI:SS PM') as wait_until,
           case when sm.approved_p=TRUE then
                'Approved'
           else
                case when sm.approved_p=FALSE then
                        'Not Approved'
                else
                        'Error'
                end
           end
           as pretty_approved,

           approved_p,
           sm.sql_query,
           sm.header_subject as title,
           acs_permission__permission_p(sm.spam_id, :user_id, 'admin') 
             as admin_p
      from spam_messages_all sm
     where sent_p = 'f'
           and acs_permission__permission_p(sm.spam_id, :user_id, 'write') = 't'
 
     order by sm.send_date
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/spam/www/index-postgresql.xql}
dbqd.spam.www.index.spam_sent {dbqd.spam.www.index.spam_sent {
      
    select sm.spam_id,
           sm.header_subject as title,
           sm.send_date
      from spam_messages_all sm
     where 
           sent_p = 't'
           and acs_permission__permission_p(sm.spam_id, :user_id, 'read') = 't'
    order by sm.send_date

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/spam/www/index-postgresql.xql}
dbqd.spam.www.spam-add.get_num_recipients {dbqd.spam.www.spam-add.get_num_recipients {
      
    select count(*) from ($sql_query) user_query

      } {} {} {} c:/web/openacs-4/packages/spam/www/spam-add.xql}
dbqd.spam.www.spam-edit-oracle.spam_get_num_recipients {dbqd.spam.www.spam-edit-oracle.spam_get_num_recipients {
      
     select count(1) from ($sql_query)

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/spam/www/spam-edit-oracle.xql}
dbqd.spam.www.spam-edit-oracle.spam_get_multipart_plain_text {dbqd.spam.www.spam-edit-oracle.spam_get_multipart_plain_text {

        select cr.content as plain_text
        from acs_mail_multipart_parts mpp, cr_items ci,  cr_revisions cr
        where 
          mpp.content_item_id=ci.item_id and
          ci.live_revision=cr.revision_id and
          multipart_id=:content_item_id and cr.mime_type='text/plain'

        } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/spam/www/spam-edit-oracle.xql}
dbqd.spam.www.spam-edit-oracle.spam_get_multipart_html_text {dbqd.spam.www.spam-edit-oracle.spam_get_multipart_html_text {

        select cr.content as html_text
        from acs_mail_multipart_parts mpp, cr_items ci, cr_revisions cr
        where
          mpp.content_item_id=ci.item_id and
          ci.live_revision=cr.revision_id and
          multipart_id=:content_item_id and cr.mime_type='text/html' 

        } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/spam/www/spam-edit-oracle.xql}
dbqd.spam.www.spam-edit-oracle.spam_get_message {dbqd.spam.www.spam-edit-oracle.spam_get_message {
      
    select header_subject as title, 
      to_char(send_date, 'yyyy-mm-dd') as send_date, 
      to_char(send_date, 'hh24:mi:ss') as send_time, 
      sql_query, sent_p, content_item_id
    from spam_messages_all
    where spam_id = :spam_id

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/spam/www/spam-edit-oracle.xql}
dbqd.spam.www.spam-edit-oracle.spam_get_text {dbqd.spam.www.spam-edit-oracle.spam_get_text {
      
	select content, mime_type
	  from cr_revisions
	where revision_id = content_item.get_live_revision(:content_item_id)
    
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/spam/www/spam-edit-oracle.xql}
dbqd.spam.www.spam-edit.spam_get_num_recipients {dbqd.spam.www.spam-edit.spam_get_num_recipients {
      
     select count(1) from ($sql_query) as c

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/spam/www/spam-edit-postgresql.xql}
dbqd.spam.www.spam-edit.spam_get_message {dbqd.spam.www.spam-edit.spam_get_message {
      
    select header_subject as title, 
      to_char(send_date, 'yyyy-mm-dd') as send_date, 
      to_char(send_date, 'hh24:mi:ss') as send_time, 
      sql_query, sent_p, content_item_id
    from spam_messages_all
    where spam_id = :spam_id

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/spam/www/spam-edit-postgresql.xql}
dbqd.spam.www.spam-edit.spam_get_text {dbqd.spam.www.spam-edit.spam_get_text {
      
	select content, mime_type
	  from cr_revisions
	where revision_id = content_item__get_live_revision(:content_item_id)
    
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/spam/www/spam-edit-postgresql.xql}
dbqd.spam.www.spam-edit.spam_get_multipart_plain_text {dbqd.spam.www.spam-edit.spam_get_multipart_plain_text {

        select cr.content as plain_text
        from acs_mail_multipart_parts mpp 
        join cr_items ci on mpp.content_item_id=ci.item_id
        join cr_revisions cr on ci.live_revision=cr.revision_id
        where multipart_id=:content_item_id and cr.mime_type='text/plain'; 

        } {} {} {} c:/web/openacs-4/packages/spam/www/spam-edit.xql}
dbqd.spam.www.spam-edit.spam_get_multipart_html_text {dbqd.spam.www.spam-edit.spam_get_multipart_html_text {

        select cr.content as html_text
        from acs_mail_multipart_parts mpp 
        join cr_items ci on mpp.content_item_id=ci.item_id
        join cr_revisions cr on ci.live_revision=cr.revision_id
        where multipart_id=:content_item_id and cr.mime_type='text/html'; 

        } {} {} {} c:/web/openacs-4/packages/spam/www/spam-edit.xql}
dbqd.spam.www.spam-send.spam_check_double_click {dbqd.spam.www.spam-send.spam_check_double_click {
      
  select count(1) from spam_messages where spam_id=:spam_id
      } {} {} {} c:/web/openacs-4/packages/spam/www/spam-send.xql}
dbqd.spam.www.spam-show-users-oracle.spam_get_party_list {dbqd.spam.www.spam-show-users-oracle.spam_get_party_list {
      
    select email, first_names || ' ' || last_name as name
      from parties, ($sql_query) p2, persons
    where parties.party_id = person_id(+) 
      and p2.party_id = parties.party_id

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/spam/www/spam-show-users-oracle.xql}
dbqd.spam.www.spam-show-users.spam_get_party_list {dbqd.spam.www.spam-show-users.spam_get_party_list {

    select email, first_names || ' ' || last_name as name
      from parties
      left join persons on parties.party_id = person_id
      join ($sql_query) p2 on p2.party_id = parties.party_id

      } {} {} {} c:/web/openacs-4/packages/spam/www/spam-show-users.xql}
dbqd.spam.www.spam-view-oracle.spam_get_text {dbqd.spam.www.spam-view-oracle.spam_get_text {
      
	select content, mime_type
	  from cr_revisions
	where revision_id = content_item.get_live_revision(:content_item_id)
    
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/spam/www/spam-view-oracle.xql}
dbqd.spam.www.spam-view-oracle.spam_get_message {dbqd.spam.www.spam-view-oracle.spam_get_message {
      
    select header_subject as title, 
           to_char(send_date, 'Month DD, YYYY HH:MI:SS') as send_date,
           content_item_id 
     from spam_messages_all
     where spam_id = :spam_id

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/spam/www/spam-view-oracle.xql}
dbqd.spam.www.spam-view-oracle.spam_get_multipart_plain_text {dbqd.spam.www.spam-view-oracle.spam_get_multipart_plain_text {

        select cr.content as plain_text
        from acs_mail_multipart_parts mpp, cr_items ci, cr_revisions cr
        where
        mpp.content_item_id=ci.item_id and
        ci.live_revision=cr.revision_id and
        multipart_id=:content_item_id and cr.mime_type='text/plain'

        } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/spam/www/spam-view-oracle.xql}
dbqd.spam.www.spam-view-oracle.spam_get_multipart_html_text {dbqd.spam.www.spam-view-oracle.spam_get_multipart_html_text {

        select cr.content as html_text
        from acs_mail_multipart_parts mpp, cr_items ci, cr_revisions cr
        where
        mpp.content_item_id=ci.item_id and
        ci.live_revision=cr.revision_id and
        multipart_id=:content_item_id and cr.mime_type='text/html'

        } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/spam/www/spam-view-oracle.xql}
dbqd.spam.www.spam-view.spam_get_text {dbqd.spam.www.spam-view.spam_get_text {
      
	select content, mime_type
	  from cr_revisions
	where revision_id = content_item__get_live_revision(:content_item_id)
    
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/spam/www/spam-view-postgresql.xql}
dbqd.spam.www.spam-view.spam_get_message {dbqd.spam.www.spam-view.spam_get_message {
      
    select header_subject as title, 
           to_char(send_date, 'Month DD, YYYY HH:MI:SS') as send_date,
           content_item_id 
     from spam_messages_all
     where spam_id = :spam_id

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/spam/www/spam-view-postgresql.xql}
dbqd.spam.www.spam-view.spam_get_multipart_plain_text {dbqd.spam.www.spam-view.spam_get_multipart_plain_text {

        select cr.content as plain_text
        from acs_mail_multipart_parts mpp 
        join cr_items ci on mpp.content_item_id=ci.item_id
        join cr_revisions cr on ci.live_revision=cr.revision_id
        where multipart_id=:content_item_id and cr.mime_type='text/plain'; 

        } {} {} {} c:/web/openacs-4/packages/spam/www/spam-view.xql}
dbqd.spam.www.spam-view.spam_get_multipart_html_text {dbqd.spam.www.spam-view.spam_get_multipart_html_text {

        select cr.content as html_text
        from acs_mail_multipart_parts mpp 
        join cr_items ci on mpp.content_item_id=ci.item_id
        join cr_revisions cr on ci.live_revision=cr.revision_id
        where multipart_id=:content_item_id and cr.mime_type='text/html'; 

        } {} {} {} c:/web/openacs-4/packages/spam/www/spam-view.xql}
dbqd.spam.www.toggle-approval-oracle.toggle_approval {dbqd.spam.www.toggle-approval-oracle.toggle_approval {
      
    update spam_messages
       set approved_p = util.logical_negation(approved_p)
     where spam_id = :spam_id

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/spam/www/toggle-approval-oracle.xql}
dbqd.spam.www.toggle-approval-oracle.spam_get_message_for_approval {dbqd.spam.www.toggle-approval-oracle.spam_get_message_for_approval {
      
    select to_char(send_date, 'yyyy-mm-dd hh24:mi:ss') as sql_send_time,
      sql_query, approved_p
    from spam_messages
    where spam_id = :spam_id

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/spam/www/toggle-approval-oracle.xql}
dbqd.spam.www.toggle-approval.toggle_approval {dbqd.spam.www.toggle-approval.toggle_approval {
      
    update spam_messages
       set approved_p = util__logical_negation(approved_p)
     where spam_id = :spam_id

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/spam/www/toggle-approval-postgresql.xql}
dbqd.spam.www.toggle-approval.spam_get_message_for_approval {dbqd.spam.www.toggle-approval.spam_get_message_for_approval {
      
    select to_char(send_date, 'yyyy-mm-dd hh24:mi:ss') as sql_send_time,
      sql_query, approved_p
    from spam_messages
    where spam_id = :spam_id

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/spam/www/toggle-approval-postgresql.xql}
dbqd.static-pages.tcl.static-pages-procs-oracle.sp_sync_cr_with_filesystem_internal.create_new_folder {dbqd.static-pages.tcl.static-pages-procs-oracle.sp_sync_cr_with_filesystem_internal.create_new_folder {

			    begin
				    :1 := static_page.new_folder (
					    name	=> :cumulative_path,
					    label	=> :cumulative_path,
					    parent_id	=> :parent_folder_id,
					    description	=> 'Static pages folder'
				    );
			    end;

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/static-pages/tcl/static-pages-procs-oracle.xql}
dbqd.static-pages.tcl.static-pages-procs-oracle.sp_sync_cr_with_filesystem_internal.update_db_file {dbqd.static-pages.tcl.static-pages-procs-oracle.sp_sync_cr_with_filesystem_internal.update_db_file {

			update cr_revisions set content = empty_blob()
			where revision_id = content_item.get_live_revision(:static_page_id)
			returning content into :1

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/static-pages/tcl/static-pages-procs-oracle.xql}
dbqd.static-pages.tcl.static-pages-procs-oracle.sp_sync_cr_with_filesystem_internal.check_db_for_page {dbqd.static-pages.tcl.static-pages-procs-oracle.sp_sync_cr_with_filesystem_internal.check_db_for_page {

		select static_page_id from static_pages
		where filename = :sp_filename

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/static-pages/tcl/static-pages-procs-oracle.xql}
dbqd.static-pages.tcl.static-pages-procs-oracle.sp_sync_cr_with_filesystem_internal.do_sp_new {dbqd.static-pages.tcl.static-pages-procs-oracle.sp_sync_cr_with_filesystem_internal.do_sp_new {
begin
:1 := static_page.new(
  filename   => :sp_filename
  ,title     => :page_title
  ,folder_id => :parent_folder_id
  ,mime_type => :mime_type
);
end;
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/static-pages/tcl/static-pages-procs-oracle.xql}
dbqd.static-pages.tcl.static-pages-procs-oracle.sp_sync_cr_with_filesystem_internal.insert_file_contents {dbqd.static-pages.tcl.static-pages-procs-oracle.sp_sync_cr_with_filesystem_internal.insert_file_contents {
		    update cr_revisions set content = empty_blob()
		    where revision_id = content_item.get_live_revision(:static_page_id)
		    returning content into :1
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/static-pages/tcl/static-pages-procs-oracle.xql}
dbqd.static-pages.tcl.static-pages-procs-oracle.sp_sync_cr_with_filesystem_internal.delete_old_files {dbqd.static-pages.tcl.static-pages-procs-oracle.sp_sync_cr_with_filesystem_internal.delete_old_files {

	begin
	    static_page.delete_stale_items(:sync_session_id,:package_id);

	    delete from sp_extant_folders where session_id = :sync_session_id;
	    delete from sp_extant_files where session_id = :sync_session_id;
	end;

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/static-pages/tcl/static-pages-procs-oracle.xql}
dbqd.static-pages.tcl.static-pages-procs-oracle.sp_root_folder_id.get_root_folder_id {dbqd.static-pages.tcl.static-pages-procs-oracle.sp_root_folder_id.get_root_folder_id {

	begin
	    :1 := static_page.get_root_folder(:package_id);
	end;

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/static-pages/tcl/static-pages-procs-oracle.xql}
dbqd.static-pages.tcl.static-pages-procs-oracle.sp_sync_cr_with_filesystem_internal.get_db_page {dbqd.static-pages.tcl.static-pages-procs-oracle.sp_sync_cr_with_filesystem_internal.get_db_page {

		    select content as file_from_db from cr_revisions
		    where revision_id = content_item.get_live_revision(:static_page_id)

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/static-pages/tcl/static-pages-procs-oracle.xql}
dbqd.static-pages.tcl.static-pages-procs-oracle.sp_sync_cr_with_filesystem_internal.get_folder_id {dbqd.static-pages.tcl.static-pages-procs-oracle.sp_sync_cr_with_filesystem_internal.get_folder_id {

        select nvl((select item_id from cr_items where name=:cumulative_path),0)
        from dual

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/static-pages/tcl/static-pages-procs-oracle.xql}
dbqd.static-pages.tcl.static-pages-procs-oracle.sp_change_matching_display.show_or_summarize_comments_matching {dbqd.static-pages.tcl.static-pages-procs-oracle.sp_change_matching_display.show_or_summarize_comments_matching {

	    update static_pages set show_comments_p = :show_full_comments_p
                where static_page_id in (
		    select static_page_id from static_pages
		    where folder_id in (
			    select folder_id from sp_folders
			    start with folder_id = :root_folder_id
			    connect by parent_id = prior folder_id)
		    and filename like '%${contained_string}%'
	        )

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/static-pages/tcl/static-pages-procs-oracle.xql}
dbqd.static-pages.tcl.static-pages-procs-oracle.sp_change_matching_permissions.grant_or_revoke_matching_permissions {dbqd.static-pages.tcl.static-pages-procs-oracle.sp_change_matching_permissions.grant_or_revoke_matching_permissions {

	    begin
	    for file_row in (
		    select static_page_id from static_pages
		    where folder_id in (
			    select folder_id from sp_folders
			    start with folder_id = :root_folder_id
			    connect by parent_id = prior folder_id)
		    and filename like '%${contained_string}%'
	    ) loop
		    acs_permission.${grant_or_revoke}_permission(
			    object_id => file_row.static_page_id,
			    grantee_id => acs.magic_object_id('the_public'),
			    privilege => 'general_comments_create'
		    );
	    end loop;
	    end;

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/static-pages/tcl/static-pages-procs-oracle.xql}
dbqd.static-pages.tcl.static-pages-procs-oracle.sp_change_matching_display.matching_static_page {dbqd.static-pages.tcl.static-pages-procs-oracle.sp_change_matching_display.matching_static_page {

	select static_page_id from static_pages
	     where folder_id in (
		     select folder_id from sp_folders
		     start with folder_id = :root_folder_id
		     connect by parent_id = prior folder_id)
	     and filename like '%${contained_string}%'

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/static-pages/tcl/static-pages-procs-oracle.xql}
dbqd.static-pages.tcl.static-pages-procs-oracle.sp_get_page_info_query.get_page_info {dbqd.static-pages.tcl.static-pages-procs-oracle.sp_get_page_info_query.get_page_info {
select '{'||content_item.get_title($page_id)||'} '||decode(show_comments_p,'t',1,0) from static_pages where static_page_id = :page_id

} {} {} {oracle 8.1.6} c:/web/openacs-4/packages/static-pages/tcl/static-pages-procs-oracle.xql}
dbqd.static-pages.tcl.static-pages-procs-oracle.sp_get_page_id.page_and_package_ids {dbqd.static-pages.tcl.static-pages-procs-oracle.sp_get_page_id.page_and_package_ids {
select sp.static_page_id, f.package_id
from static_pages sp, sp_folders f
where sp.filename = :filename
and sp.folder_id = f.folder_id
-- Only want pages from the Static Pages package.
and f.package_id in (
  select package_id  from apm_packages
  where package_key = :package_key )
-- If the same page is in more than one instance of
-- Static Pages for some reason, we only want one of
-- them, and we don't care which.
-- Oracle
and rownum <= 1
-- PostgreSQL
--limit 1
} {} {} {oracle 8.1.6} c:/web/openacs-4/packages/static-pages/tcl/static-pages-procs-oracle.xql}
dbqd.static-pages.tcl.static-pages-procs-oracle.sp_package_url.get_mount_point {dbqd.static-pages.tcl.static-pages-procs-oracle.sp_package_url.get_mount_point {
select site_node.url(min(node_id)) as url
from site_nodes
where object_id = :package_id
} {} {} {oracle 8.1.6} c:/web/openacs-4/packages/static-pages/tcl/static-pages-procs-oracle.xql}
dbqd.static-pages.tcl.static-pages-procs.sp_sync_cr_with_filesystem_internal.get_db_page {dbqd.static-pages.tcl.static-pages-procs.sp_sync_cr_with_filesystem_internal.get_db_page {

		    select content as file_from_db from cr_revisions
		    where revision_id = content_item__get_live_revision(:static_page_id)

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/static-pages/tcl/static-pages-procs-postgresql.xql}
dbqd.static-pages.tcl.static-pages-procs.sp_sync_cr_with_filesystem_internal.get_folder_id {dbqd.static-pages.tcl.static-pages-procs.sp_sync_cr_with_filesystem_internal.get_folder_id {

        select coalesce((select item_id from cr_items where name=:cumulative_path),0)

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/static-pages/tcl/static-pages-procs-postgresql.xql}
dbqd.static-pages.tcl.static-pages-procs.sp_sync_cr_with_filesystem_internal.create_new_folder {dbqd.static-pages.tcl.static-pages-procs.sp_sync_cr_with_filesystem_internal.create_new_folder {
                select static_page__new_folder (
			NULL, 			-- folder_id	
			:cumulative_path,       -- name
                        :cumulative_path,       -- label
			'Static pages folder',  -- description
			:parent_folder_id,      -- parent_id
			current_timestamp,	-- creation_date
			NULL,			-- creation_user
			NULL,			-- creation_ip
			NULL			-- context_id
                                      );
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/static-pages/tcl/static-pages-procs-postgresql.xql}
dbqd.static-pages.tcl.static-pages-procs.sp_sync_cr_with_filesystem_internal.update_db_file {dbqd.static-pages.tcl.static-pages-procs.sp_sync_cr_with_filesystem_internal.update_db_file {
		update cr_revisions set content = :sp_filename
		where revision_id = content_item__get_live_revision(:static_page_id)
   
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/static-pages/tcl/static-pages-procs-postgresql.xql}
dbqd.static-pages.tcl.static-pages-procs.sp_sync_cr_with_filesystem_internal.check_db_for_page {dbqd.static-pages.tcl.static-pages-procs.sp_sync_cr_with_filesystem_internal.check_db_for_page {

		select static_page_id, mtime as mtime_from_db from static_pages
		where filename = :sp_filename

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/static-pages/tcl/static-pages-procs-postgresql.xql}
dbqd.static-pages.tcl.static-pages-procs.sp_sync_cr_with_filesystem_internal.do_sp_new {dbqd.static-pages.tcl.static-pages-procs.sp_sync_cr_with_filesystem_internal.do_sp_new {
select static_page__new(
  :parent_folder_id,  -- folder_id
  :sp_filename,       -- filename
  :page_title,        -- title
  :mtime_from_fs      -- mtime
  ,:mime_type         -- mime_type
);
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/static-pages/tcl/static-pages-procs-postgresql.xql}
dbqd.static-pages.tcl.static-pages-procs.sp_sync_cr_with_filesystem_internal.insert_file_contents {dbqd.static-pages.tcl.static-pages-procs.sp_sync_cr_with_filesystem_internal.insert_file_contents {
		update cr_revisions set content = :sp_filename
		where revision_id = content_item__get_live_revision(:static_page_id)
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/static-pages/tcl/static-pages-procs-postgresql.xql}
dbqd.static-pages.tcl.static-pages-procs.sp_sync_cr_with_filesystem_internal.delete_old_files {dbqd.static-pages.tcl.static-pages-procs.sp_sync_cr_with_filesystem_internal.delete_old_files {
	begin
	perform static_page__delete_stale_items(:sync_session_id,:package_id);
	 delete from sp_extant_files where session_id = :sync_session_id;
	return null;
	end;
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/static-pages/tcl/static-pages-procs-postgresql.xql}
dbqd.static-pages.tcl.static-pages-procs.sp_root_folder_id.get_root_folder_id {dbqd.static-pages.tcl.static-pages-procs.sp_root_folder_id.get_root_folder_id {
                select static_page__get_root_folder(:package_id);
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/static-pages/tcl/static-pages-procs-postgresql.xql}
dbqd.static-pages.tcl.static-pages-procs.sp_change_matching_display.show_or_summarize_comments_matching {dbqd.static-pages.tcl.static-pages-procs.sp_change_matching_display.show_or_summarize_comments_matching {

	    update static_pages set show_comments_p = :show_full_comments_p
                where static_page_id in (
		    select sp.static_page_id
                    from static_pages sp, sp_folders s1, sp_folders s2
		    where sp.folder_id = s1.folder_id
                      and s2.folder_id = :root_folder_id
                      and s1.tree_sortkey between s2.tree_sortkey and tree_right(s2.tree_sortkey)
		      and sp.filename like '%${contained_string}%'
	        )

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/static-pages/tcl/static-pages-procs-postgresql.xql}
dbqd.static-pages.tcl.static-pages-procs.sp_change_matching_permissions.grant_or_revoke_matching_permissions {dbqd.static-pages.tcl.static-pages-procs.sp_change_matching_permissions.grant_or_revoke_matching_permissions {
	declare file_row RECORD;
	begin
	
		for file_row in 
		    select sp.static_page_id
                    from static_pages sp, sp_folders s1, sp_folders s2
		    where sp.folder_id = s1.folder_id
                      and s2.folder_id = :root_folder_id
                      and s1.tree_sortkey between s2.tree_sortkey and tree_right(s2.tree_sortkey)
		      and sp.filename like '%${contained_string}%'
		loop

		    PERFORM acs_permission__${grant_or_revoke}_permission(
			    file_row.static_page_id,
			    acs__magic_object_id('the_public'),
			    'general_comments_create'
		    );
	    end loop;
return NULL;
end;

	} {} {} {postgresql 7.1} c:/web/openacs-4/packages/static-pages/tcl/static-pages-procs-postgresql.xql}
dbqd.static-pages.tcl.static-pages-procs.sp_change_matching_display.matching_static_page {dbqd.static-pages.tcl.static-pages-procs.sp_change_matching_display.matching_static_page {

	select sp.static_page_id
        from static_pages sp, sp_folders s1, sp_folders s2
        where sp.folder_id = s1.folder_id
          and s2.folder_id = :root_folder_id
          and s1.tree_sortkey between s2.tree_sortkey and tree_right(s2.tree_sortkey)
	  and sp.filename like '%${contained_string}%'

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/static-pages/tcl/static-pages-procs-postgresql.xql}
dbqd.static-pages.tcl.static-pages-procs.sp_get_page_info_query.get_page_info {dbqd.static-pages.tcl.static-pages-procs.sp_get_page_info_query.get_page_info {
select '{' || content_item__get_title(:page_id) || '} ' || CASE WHEN show_comments_p=TRUE then '1' else '0' END from static_pages where static_page_id = :page_id
	} {} {} {postgresql 7.1} c:/web/openacs-4/packages/static-pages/tcl/static-pages-procs-postgresql.xql}
dbqd.static-pages.tcl.static-pages-procs.sp_get_page_id.page_and_package_ids {dbqd.static-pages.tcl.static-pages-procs.sp_get_page_id.page_and_package_ids {
select sp.static_page_id, f.package_id
from static_pages sp, sp_folders f
where sp.filename = :filename
and sp.folder_id = f.folder_id
-- Only want pages from the Static Pages package.
and f.package_id in (
  select package_id  from apm_packages
  where package_key = :package_key )
-- If the same page is in more than one instance of
-- Static Pages for some reason, we only want one of
-- them, and we don't care which.
-- Oracle
--and rownum <= 1
-- PostgreSQL
limit 1
} {} {} {postgresql 7.1} c:/web/openacs-4/packages/static-pages/tcl/static-pages-procs-postgresql.xql}
dbqd.static-pages.tcl.static-pages-procs.sp_package_url.get_mount_point {dbqd.static-pages.tcl.static-pages-procs.sp_package_url.get_mount_point {
select site_node__url(min(node_id)) as url
from site_nodes
where object_id = :package_id
} {} {} {postgresql 7.1} c:/web/openacs-4/packages/static-pages/tcl/static-pages-procs-postgresql.xql}
dbqd.static-pages.tcl.static-pages-procs.sp_sync_cr_with_filesystem_internal.insert_path {dbqd.static-pages.tcl.static-pages-procs.sp_sync_cr_with_filesystem_internal.insert_path {

			insert into sp_extant_folders (session_id,folder_id)
			values (:sync_session_id,:folder_id)

      } {} {} {} c:/web/openacs-4/packages/static-pages/tcl/static-pages-procs.xql}
dbqd.static-pages.tcl.static-pages-procs.sp_sync_cr_with_filesystem_internal.get_storage_type {dbqd.static-pages.tcl.static-pages-procs.sp_sync_cr_with_filesystem_internal.get_storage_type {
		select storage_type from cr_items
			where item_id = :static_page_id
	} {} {} {} c:/web/openacs-4/packages/static-pages/tcl/static-pages-procs.xql}
dbqd.static-pages.tcl.static-pages-procs.sp_sync_cr_with_filesystem_internal.insert_file {dbqd.static-pages.tcl.static-pages-procs.sp_sync_cr_with_filesystem_internal.insert_file {

		    insert into sp_extant_files (session_id,static_page_id)
		    values (:sync_session_id,:static_page_id)

      } {} {} {} c:/web/openacs-4/packages/static-pages/tcl/static-pages-procs.xql}
dbqd.static-pages.tcl.static-pages-procs.sp_sync_cr_with_filesystem_internal.insert_file {dbqd.static-pages.tcl.static-pages-procs.sp_sync_cr_with_filesystem_internal.insert_file {

		    insert into sp_extant_files (session_id,static_page_id)
		    values (:sync_session_id,:static_page_id)

      } {} {} {} c:/web/openacs-4/packages/static-pages/tcl/static-pages-procs.xql}
dbqd.static-pages.tcl.static-pages-sc-procs.static_page__datasource.sp_datasource {dbqd.static-pages.tcl.static-pages-sc-procs.static_page__datasource.sp_datasource {
       	select r.revision_id as object_id,
	       r.title as title,
	       '$path_stub' || r.content as content,
	       'text/html' as mime,
	       '' as keywords,
	       'file' as storage_type
	from cr_revisions r
	       where revision_id = :object_id
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/static-pages/tcl/static-pages-sc-procs.xql}
dbqd.static-pages.tcl.static-pages-sc-procs.static_page__url.sp_url {dbqd.static-pages.tcl.static-pages-sc-procs.static_page__url.sp_url {
        select r.content as url
        from cr_revisions r
             where revision_id = :object_id
	} {} {} {postgresql 7.1} c:/web/openacs-4/packages/static-pages/tcl/static-pages-sc-procs.xql}
dbqd.static-pages.www.admin.commentability-oracle.select_static_page {dbqd.static-pages.www.admin.commentability-oracle.select_static_page {
	select spf.folder_id,
		decode(spf.folder_id,:root_folder_id,'[acs_root_dir]/www/',content_item.get_title(spf.folder_id)||'/') as folder_name,
		static_page.five_n_spaces(lev) as spaces,
		static_page_id,
                substr(filename,instr(filename,'/',-1)+1) as filename,
                decode(p_file.grantee_id,NULL,'not commentable','commentable') as file_permission,
		decode(show_comments_p,'t','comments displayed','comments summarized') as display_policy,
                decode(p_folder.grantee_id,NULL,'children not commentable','children commentable') as folder_permission
from static_pages sp,
   (select folder_id,level as lev from sp_folders
    start with folder_id = :root_folder_id
    connect by parent_id = prior folder_id) spf,
   acs_permissions p_file,
   acs_permissions p_folder
where spf.folder_id=sp.folder_id(+)
  and p_file.grantee_id(+) = acs.magic_object_id('the_public')
  and p_file.privilege(+) = 'general_comments_create'
  and p_file.object_id(+) = static_page_id
  and p_folder.grantee_id(+) = acs.magic_object_id('the_public')
  and p_folder.privilege(+) = 'general_comments_create'
  and p_folder.object_id(+) = spf.folder_id

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/static-pages/www/admin/commentability-oracle.xql}
dbqd.static-pages.www.admin.commentability.select_static_page {dbqd.static-pages.www.admin.commentability.select_static_page {

	select spf.folder_id,
case when spf.folder_id = :root_folder_id then '[acs_root_dir]/www/' else 
	content_item__get_title(spf.folder_id)||'/' end as folder_name,
		static_page__five_n_spaces(lev) as spaces,
		static_page_id,
                substr(filename,instr(filename,'/',-1)+1) as filename,
case when p_file.grantee_id is NULL then 'not commentable' else 'commentable' end as file_permission,

case when show_comments_p = 't' then 'comments displayed' else 'comments summarized' end as display_policy,

case when p_folder.grantee_id is NULL then 'children not commentable' else 'children commentable' end as folder_permission

FROM ((static_pages sp RIGHT OUTER JOIN
  (select s1.folder_id, tree_level(s1.tree_sortkey) as lev
   from sp_folders s1, sp_folders s2
   where s2.folder_id = :root_folder_id
     and s1.tree_sortkey between s2.tree_sortkey and tree_right(s2.tree_sortkey)
  ) as spf
 ON spf.folder_id = sp.folder_id)
  
 LEFT OUTER JOIN
acs_permissions p_file ON 
	(p_file.grantee_id = acs__magic_object_id('the_public') and 
	 p_file.privilege = 'general_comments_create' and
	 p_file.object_id = sp.static_page_id))

 LEFT OUTER JOIN
acs_permissions p_folder ON
	(p_folder.grantee_id = acs__magic_object_id('the_public') and 
	 p_folder.privilege = 'general_comments_create' and
      p_folder.object_id = spf.folder_id)

} {} {} {postgresql 7.1} c:/web/openacs-4/packages/static-pages/www/admin/commentability-postgresql.xql}
dbqd.static-pages.www.admin.commentability-toggle-oracle.revoke_commentability {dbqd.static-pages.www.admin.commentability-toggle-oracle.revoke_commentability {
      
	begin
	    static_page.revoke_permission(:item_id,acs.magic_object_id('the_public'),'general_comments_create',
	        :recurse);
	end;
    
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/static-pages/www/admin/commentability-toggle-oracle.xql}
dbqd.static-pages.www.admin.commentability-toggle-oracle.grant_commentability {dbqd.static-pages.www.admin.commentability-toggle-oracle.grant_commentability {
      
	begin
	    static_page.grant_permission(:item_id,acs.magic_object_id('the_public'),'general_comments_create',
                :recurse);
	end;
    
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/static-pages/www/admin/commentability-toggle-oracle.xql}
dbqd.static-pages.www.admin.commentability-toggle.revoke_commentability {dbqd.static-pages.www.admin.commentability-toggle.revoke_commentability {

	    select static_page__revoke_permission(:item_id,acs__magic_object_id('the_public'),
	    'general_comments_create', :recurse)
    
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/static-pages/www/admin/commentability-toggle-postgresql.xql}
dbqd.static-pages.www.admin.commentability-toggle.grant_commentability {dbqd.static-pages.www.admin.commentability-toggle.grant_commentability {

	    select static_page__grant_permission(:item_id,acs__magic_object_id('the_public'),
		'general_comments_create', :recurse)
    
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/static-pages/www/admin/commentability-toggle-postgresql.xql}
dbqd.static-pages.www.admin.display-policy-toggle-oracle.toggle_display_policy {dbqd.static-pages.www.admin.display-policy-toggle-oracle.toggle_display_policy {
      
    update static_pages
        set show_comments_p = decode(show_comments_p,'t','f','t')
        where static_page_id = :item_id
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/static-pages/www/admin/display-policy-toggle-oracle.xql}
dbqd.static-pages.www.admin.display-policy-toggle.toggle_display_policy {dbqd.static-pages.www.admin.display-policy-toggle.toggle_display_policy {
      
    update static_pages
        set show_comments_p = (CASE when show_comments_p=TRUE then FALSE else TRUE end)
        where static_page_id = :item_id
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/static-pages/www/admin/display-policy-toggle-postgresql.xql}
dbqd.static-pages.www.admin.index-oracle.count_static_pages {dbqd.static-pages.www.admin.index-oracle.count_static_pages {
      
    select count(*) as n_static_pages from static_pages
    where folder_id in (
	select folder_id from sp_folders
	start with folder_id = :root_folder_id
	connect by parent_id = prior folder_id
    )

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/static-pages/www/admin/index-oracle.xql}
dbqd.static-pages.www.admin.index.count_static_pages {dbqd.static-pages.www.admin.index.count_static_pages {
      
    select count(*) as n_static_pages
    from static_pages sp, sp_folders s1, sp_folders s2
    where sp.folder_id = s1.folder_id
      and s2.folder_id = :root_folder_id
      and s1.tree_sortkey between s2.tree_sortkey and tree_right(s2.tree_sortkey)

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/static-pages/www/admin/index-postgresql.xql}
dbqd.static-pages.www.admin.index.count_static_pages {dbqd.static-pages.www.admin.index.count_static_pages {
      
    select count(*) as n_static_pages
    from static_pages sp, sp_folders s1, sp_folders s2
    where sp.folder_id = s1.folder_id
      and s2.folder_id = :root_folder_id
      and s1.tree_sortkey between s2.tree_sortkey and tree_right(s2.tree_sortkey)

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/static-pages/www/admin/index-postgresql.xql}
dbqd.static-pages.www.page-visit.sp_path {dbqd.static-pages.www.page-visit.sp_path {
       select filename from static_pages where static_page_id = :page_id 
      } {} {} {} c:/web/openacs-4/packages/static-pages/www/page-visit.xql}
dbqd.survey.tcl.survey-notification-procs.survey::notification::get_url.get_package_id {dbqd.survey.tcl.survey-notification-procs.survey::notification::get_url.get_package_id {
	    select package_id from surveys
	    where survey_id=:object_id
	} {} {} {} c:/web/openacs-4/packages/survey/tcl/survey-notification-procs.xql}
dbqd.survey.tcl.survey-procs-oracle.survey_question_copy.create_question {dbqd.survey.tcl.survey-procs-oracle.survey_question_copy.create_question {
      
	    begin
		:1 := survey_question.new (
		    question_id => NULL,
		    section_id => :section_id,
                    sort_order => :new_sort_order,
                    question_text => empty_clob(),
                    abstract_data_type => :abstract_data_type,
                    presentation_type => :presentation_type,
                    presentation_alignment => :presentation_alignment,
		    presentation_options => :presentation_options,
                    active_p => :active_p,
                    required_p => :required_p,
		    context_id => :section_id,
		    creation_user => :user_id
		);
	    end;
	
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/survey/tcl/survey-procs-oracle.xql}
dbqd.survey.tcl.survey-procs-oracle.survey_question_copy.get_choice_id {dbqd.survey.tcl.survey-procs-oracle.survey_question_copy.get_choice_id {
select survey_choice_id_sequence.nextval as choice_id from dual
} {} {} {oracle 8.1.6} c:/web/openacs-4/packages/survey/tcl/survey-procs-oracle.xql}
dbqd.survey.tcl.survey-procs-oracle.get_survey_info.n_completed {dbqd.survey.tcl.survey-procs-oracle.get_survey_info.n_completed {
    		    select count(distinct survey_response.initial_user_id(response_id))
                    from 
		    survey_responses
		    where survey_id=:survey_id
} {} {} {oracle 8.1.6} c:/web/openacs-4/packages/survey/tcl/survey-procs-oracle.xql}
dbqd.survey.tcl.survey-procs-oracle.survey_copy.survey_create {dbqd.survey.tcl.survey-procs-oracle.survey_copy.survey_create {
	    begin
	        :1 := survey.new (
                    survey_id => NULL,
                    name => :name,
                    description => :description,
                    description_html_p => :description_html_p,
	            editable_p => :editable_p,
                    single_response_p => :single_response_p,
                    enabled_p => :enabled_p,
                    single_section_p => :single_section_p,
                    type => :type,
                    display_type => :display_type,
                    package_id => :package_id,
                    context_id => :package_id,
		    creation_user => :user_id
                );
    end;
} {} {} {oracle 8.1.6} c:/web/openacs-4/packages/survey/tcl/survey-procs-oracle.xql}
dbqd.survey.tcl.survey-procs-oracle.survey_copy.section_create {dbqd.survey.tcl.survey-procs-oracle.survey_copy.section_create {
	    begin
	    :1 := survey_section.new (
	              section_id=>NULL,
		      survey_id=>:new_survey_id,
		      name=>:name,
		      description=>empty_clob(),
		      description_html_p=>:description_html_p,
		      context_id =>:new_survey_id	
		      );
	    end;
} {} {} {oracle 8.1.6} c:/web/openacs-4/packages/survey/tcl/survey-procs-oracle.xql}
dbqd.survey.tcl.survey-procs-oracle.survey_do_notifications.get_response_info {dbqd.survey.tcl.survey-procs-oracle.survey_do_notifications.get_response_info {
        select r.initial_response_id, r.responding_user_id, r.response_id,
            u.first_names || ' ' || u.last_name as user_name,
            edit_p,
            o.creation_date as response_date
            from (select survey_response.initial_user_id(response_id) as responding_user_id,
                  survey_response.initial_response_id(response_id) as initial_response_id,
                  response_id, (case when initial_response_id is NULL then 'f' else 't' end) as edit_p
            from survey_responses) r, acs_objects o,
            cc_users u where r.response_id=:response_id
            and r.responding_user_id = u.user_id
            and r.response_id = o.object_id
    } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/survey/tcl/survey-procs-oracle.xql}
dbqd.survey.tcl.survey-procs.survey_question_copy.create_question {dbqd.survey.tcl.survey-procs.survey_question_copy.create_question {
	SELECT survey_question__new (
		    NULL,
		    :section_id,
                    :new_sort_order,
                    :question_text,
                    :abstract_data_type,
		    :required_p,
                    :active_p,
		    :presentation_type,
		    :presentation_options,
	            :presentation_alignment,
		    :user_id,
		    :section_id
		);
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/survey/tcl/survey-procs-postgresql.xql}
dbqd.survey.tcl.survey-procs.survey_question_copy.get_choice_id {dbqd.survey.tcl.survey-procs.survey_question_copy.get_choice_id {
select survey_choice_id_sequence.nextval as choice_id
} {} {} {postgresql 7.1} c:/web/openacs-4/packages/survey/tcl/survey-procs-postgresql.xql}
dbqd.survey.tcl.survey-procs.get_survey_info.n_completed {dbqd.survey.tcl.survey-procs.get_survey_info.n_completed {
    		    select count(distinct survey_response__initial_user_id(response_id))
                    from 
		    survey_responses
		    where survey_id=:survey_id
} {} {} {postgresql 7.1} c:/web/openacs-4/packages/survey/tcl/survey-procs-postgresql.xql}
dbqd.survey.tcl.survey-procs.survey_do_notifications.get_response_info {dbqd.survey.tcl.survey-procs.survey_do_notifications.get_response_info {
	select r.initial_response_id, r.responding_user_id, r.response_id,
	    u.first_names || ' ' || u.last_name as user_name,
	    edit_p,
	    o.creation_date as response_date
	    from (select survey_response__initial_user_id(response_id) as responding_user_id,
		  survey_response__initial_response_id(response_id) as initial_response_id,
		  response_id, (case when initial_response_id is NULL then 'f' else 't' end) as edit_p
	    from survey_responses) r, acs_objects o,
	    cc_users u where r.response_id=:response_id
	    and r.responding_user_id = u.user_id
	    and r.response_id = o.object_id
    } {} {} {postgresql 7.1} c:/web/openacs-4/packages/survey/tcl/survey-procs-postgresql.xql}
dbqd.survey.tcl.survey-procs.get_survey_info.n_completed {dbqd.survey.tcl.survey-procs.get_survey_info.n_completed {
    		    select count(distinct survey_response__initial_user_id(response_id))
                    from 
		    survey_responses
		    where survey_id=:survey_id
} {} {} {postgresql 7.1} c:/web/openacs-4/packages/survey/tcl/survey-procs-postgresql.xql}
dbqd.survey.tcl.survey-procs.survey_copy.survey_create {dbqd.survey.tcl.survey-procs.survey_copy.survey_create {
        select survey__new (
                    NULL,
                    :name,
                    :description,
                    :description_html_p,
		    :single_response_p,
                    :editable_p,
                    :enabled_p,
                    :single_section_p,
		    :type,
                    :display_type,
                    :package_id,
	            :user_id,
		    :package_id
                );
} {} {} {postgresql 7.1} c:/web/openacs-4/packages/survey/tcl/survey-procs-postgresql.xql}
dbqd.survey.tcl.survey-procs.survey_copy.section_create {dbqd.survey.tcl.survey-procs.survey_copy.section_create {
	    select survey_section__new (
	              NULL,
		      :new_survey_id,
		      :name,
		      :description,
		      :description_html_p,
		      :user_id,
	              :package_id
		      );
} {} {} {postgresql 7.1} c:/web/openacs-4/packages/survey/tcl/survey-procs-postgresql.xql}
dbqd.survey.tcl.survey-procs.get_survey_info.n_eligible {dbqd.survey.tcl.survey-procs.get_survey_info.n_eligible {
    select count(*) from dotlrn_member_rels_full
    where rel_type='dotlrn_member_rel'
    and community_id=:community_id
} {} {} {} c:/web/openacs-4/packages/survey/tcl/survey-procs.xql}
dbqd.survey.tcl.survey-procs.get_survey_info.lookup_single_section_id {dbqd.survey.tcl.survey-procs.get_survey_info.lookup_single_section_id {
	select min(section_id) as section_id
          from survey_sections
	 where survey_id = :survey_id
} {} {} {} c:/web/openacs-4/packages/survey/tcl/survey-procs.xql}
dbqd.survey.tcl.survey-procs.get_survey_info.lookup_survey_id {dbqd.survey.tcl.survey-procs.get_survey_info.lookup_survey_id {
	select survey_id
	  from survey_sections
	 where section_id = :section_id	
} {} {} {} c:/web/openacs-4/packages/survey/tcl/survey-procs.xql}
dbqd.survey.tcl.survey-procs.get_survey_info.get_info_by_survey_id {dbqd.survey.tcl.survey-procs.get_survey_info.get_info_by_survey_id {
	select s.*,
	       o.creation_user, o.creation_date, p.first_names || ' ' || p.last_name as creator_name, 
	       (case when enabled_p = 't' then '#survey.Enable#' else '#survey.Disable#' end) as enabled_display,
	       (case when single_response_p = 't' then '#survey.One_response#' else '#survey.Multiple_responses#' end) as single_response_display,
	       (case when editable_p = 'f' then '#survey.Non-Editable#' else '#survey.Editable#' end) as editable_display, 
	       (case when single_section_p = 'f' then '#survey.Multiple_sections#' else '#survey.Single_section#' end) as single_section_display
	  from surveys s, acs_objects o, persons p
	 where o.object_id = :survey_id	
	   and s.survey_id = o.object_id
	   and p.person_id = o.creation_user
} {} {} {} c:/web/openacs-4/packages/survey/tcl/survey-procs.xql}
dbqd.survey.tcl.survey-procs.survey_question_display.prev_response_query {dbqd.survey.tcl.survey-procs.survey_question_display.prev_response_query {
select	
  choice_id,
  boolean_answer,
  clob_answer,
  number_answer,
  varchar_answer,
  date_answer,
  attachment_answer
  from survey_question_responses
  where question_id = :question_id
       and response_id = :response_id
} {} {} {} c:/web/openacs-4/packages/survey/tcl/survey-procs.xql}
dbqd.survey.tcl.survey-procs.survey_question_display.prev_response_query {dbqd.survey.tcl.survey-procs.survey_question_display.prev_response_query {
select	
  choice_id,
  boolean_answer,
  clob_answer,
  number_answer,
  varchar_answer,
  date_answer,
  attachment_answer
  from survey_question_responses
  where question_id = :question_id
       and response_id = :response_id
} {} {} {} c:/web/openacs-4/packages/survey/tcl/survey-procs.xql}
dbqd.survey.tcl.survey-procs.survey_question_display.survey_question_properties {dbqd.survey.tcl.survey-procs.survey_question_display.survey_question_properties {
      
select
  section_id,
  sort_order,
  question_text,
  abstract_data_type,
  required_p,
  active_p,
  presentation_type,
  presentation_options,
  presentation_alignment,
  creation_user,
  creation_date
from
  survey_questions, acs_objects
where
  object_id = question_id
  and question_id = :question_id
      } {} {} {} c:/web/openacs-4/packages/survey/tcl/survey-procs.xql}
dbqd.survey.tcl.survey-procs.survey_question_display.question_choices {dbqd.survey.tcl.survey-procs.survey_question_display.question_choices {
      select choice_id, label
from survey_question_choices
where question_id = :question_id
order by sort_order
      } {} {} {} c:/web/openacs-4/packages/survey/tcl/survey-procs.xql}
dbqd.survey.tcl.survey-procs.survey_question_display.question_choices_2 {dbqd.survey.tcl.survey-procs.survey_question_display.question_choices_2 {
      select choice_id, label
from survey_question_choices
where question_id = :question_id
order by sort_order
      } {} {} {} c:/web/openacs-4/packages/survey/tcl/survey-procs.xql}
dbqd.survey.tcl.survey-procs.survey_question_display.question_choices_3 {dbqd.survey.tcl.survey-procs.survey_question_display.question_choices_3 {
      select * from survey_question_choices
where question_id = :question_id
order by sort_order
      } {} {} {} c:/web/openacs-4/packages/survey/tcl/survey-procs.xql}
dbqd.survey.tcl.survey-procs.survey_answer_summary_display.survey_label_list {dbqd.survey.tcl.survey-procs.survey_answer_summary_display.survey_label_list {
      select label
	    from survey_question_choices, survey_question_responses
	    where survey_question_responses.question_id = :question_id
	    and survey_question_responses.response_id = :response_id
	    and survey_question_choices.choice_id = survey_question_responses.choice_id
      } {} {} {} c:/web/openacs-4/packages/survey/tcl/survey-procs.xql}
dbqd.survey.tcl.survey-procs.survey_question_copy.get_question_details {dbqd.survey.tcl.survey-procs.survey_question_copy.get_question_details {
select * from survey_questions
where question_id=:question_id
} {} {} {} c:/web/openacs-4/packages/survey/tcl/survey-procs.xql}
dbqd.survey.tcl.survey-procs.survey_question_copy.insert_question_text {dbqd.survey.tcl.survey-procs.survey_question_copy.insert_question_text {
	    update survey_questions
	    set question_text = :question_text
	    where question_id = :new_question_id
} {} {} {} c:/web/openacs-4/packages/survey/tcl/survey-procs.xql}
dbqd.survey.tcl.survey-procs.survey_question_copy.renumber_sort_orders {dbqd.survey.tcl.survey-procs.survey_question_copy.renumber_sort_orders {
update survey_questions
   set sort_order = sort_order + 1
   where section_id = :section_id
   and sort_order > :after
} {} {} {} c:/web/openacs-4/packages/survey/tcl/survey-procs.xql}
dbqd.survey.tcl.survey-procs.survey_question_copy.get_survey_question_choices {dbqd.survey.tcl.survey-procs.survey_question_copy.get_survey_question_choices {
	select * from survey_question_choices
	where question_id=:old_question_id
} {} {} {} c:/web/openacs-4/packages/survey/tcl/survey-procs.xql}
dbqd.survey.tcl.survey-procs.survey_question_copy.insert_survey_question_choice {dbqd.survey.tcl.survey-procs.survey_question_copy.insert_survey_question_choice {
insert into survey_question_choices
                (choice_id, question_id, label, numeric_value, sort_order)
                values
                (:new_choice_id, :new_question_id, :label,
		 :numeric_value, :sort_order)
} {} {} {} c:/web/openacs-4/packages/survey/tcl/survey-procs.xql}
dbqd.survey.tcl.survey-procs.survey_do_notifications.get_survey_id_from_response {dbqd.survey.tcl.survey-procs.survey_do_notifications.get_survey_id_from_response {
	select survey_id from survey_responses
	where response_id=:response_id
} {} {} {} c:/web/openacs-4/packages/survey/tcl/survey-procs.xql}
dbqd.survey.tcl.survey-procs.survey_do_notifications.n_responses {dbqd.survey.tcl.survey-procs.survey_do_notifications.n_responses {
	select count(*) from survey_responses_latest
	where survey_id=:survey_id
    } {} {} {} c:/web/openacs-4/packages/survey/tcl/survey-procs.xql}
dbqd.survey.tcl.survey-procs.survey_do_notifications.n_members {dbqd.survey.tcl.survey-procs.survey_do_notifications.n_members {
	select count(*) from party_approved_member_map
	where party_id=:segment_id
    } {} {} {} c:/web/openacs-4/packages/survey/tcl/survey-procs.xql}
dbqd.survey.tcl.survey-procs.survey_do_notifications.get_questions {dbqd.survey.tcl.survey-procs.survey_do_notifications.get_questions {
	select sort_order, question_text, question_id
	from survey_questions
	where section_id in 
	(select section_id
	 from survey_sections
	 where survey_id=:survey_id)
    } {} {} {} c:/web/openacs-4/packages/survey/tcl/survey-procs.xql}
dbqd.survey.tcl.survey-procs.survey_copy.get_survey_info {dbqd.survey.tcl.survey-procs.survey_copy.get_survey_info {
	select
	    survey_id,
	    name,
  	    description,
	    description_html_p,
	    'f' as enabled_p,
	    single_response_p,
	    editable_p,
	    single_section_p,
	    type,
	    display_type 
	from surveys where survey_id=:survey_id
} {} {} {} c:/web/openacs-4/packages/survey/tcl/survey-procs.xql}
dbqd.survey.tcl.survey-procs.survey_copy.set_section_description {dbqd.survey.tcl.survey-procs.survey_copy.set_section_description {
	update survey_sections set description=:description
	where section_id=:new_section_id
} {} {} {} c:/web/openacs-4/packages/survey/tcl/survey-procs.xql}
dbqd.survey.tcl.survey-procs.survey_copy.get_sections {dbqd.survey.tcl.survey-procs.survey_copy.get_sections {
	select section_id from survey_sections where survey_id=:survey_id
    } {} {} {} c:/web/openacs-4/packages/survey/tcl/survey-procs.xql}
dbqd.survey.tcl.survey-procs.survey_copy.get_questions {dbqd.survey.tcl.survey-procs.survey_copy.get_questions {
select question_id from survey_questions
	where section_id in (select section_id from survey_sections
		where survey_id=:survey_id)
} {} {} {} c:/web/openacs-4/packages/survey/tcl/survey-procs.xql}
dbqd.survey.tcl.survey-procs.survey_answer_summary_display.summary {dbqd.survey.tcl.survey-procs.survey_answer_summary_display.summary {

select
  sq.question_id,
  sq.section_id,
  sq.sort_order,
  sq.question_text,
  sq.abstract_data_type,
  sq.required_p,
  sq.active_p,
  sq.presentation_type,
  sq.presentation_options,
  sq.presentation_alignment,
  sqr.response_id,
  sqr.question_id,
  sqr.choice_id,
  sqr.boolean_answer,
  sqr.clob_answer,
  sqr.number_answer,
  sqr.varchar_answer,
  sqr.date_answer,
  sqr.attachment_answer
from
  survey_questions sq,
  survey_question_responses sqr
where
  sqr.response_id = :response_id
  and sq.question_id = sqr.question_id
  and sq.active_p = 't'
order by sort_order

      } {} {} {} c:/web/openacs-4/packages/survey/tcl/survey-procs.xql}
dbqd.survey.tcl.survey-procs.survey_decode_boolean_answer.get_presentation_options {dbqd.survey.tcl.survey-procs.survey_decode_boolean_answer.get_presentation_options {
	select presentation_options 
	from survey_questions
	where question_id=:question_id
    } {} {} {} c:/web/openacs-4/packages/survey/tcl/survey-procs.xql}
dbqd.survey.tcl.survey-procs.survey_answer_summary_display.get_filename {dbqd.survey.tcl.survey-procs.survey_answer_summary_display.get_filename {
	select title from cr_revisions where
	revision_id=:attachment_answer
    } {} {} {} c:/web/openacs-4/packages/survey/tcl/survey-procs.xql}
dbqd.survey.www.admin.description-edit.survey_properties {dbqd.survey.www.admin.description-edit.survey_properties {
      select name as survey_name, description, description_html_p as desc_html
from surveys
where survey_id = :survey_id
      } {} {} {} c:/web/openacs-4/packages/survey/www/admin/description-edit.xql}
dbqd.survey.www.admin.description-edit.survey_update_description {dbqd.survey.www.admin.description-edit.survey_update_description {
      update surveys 
      set description = :description,
          description_html_p = :description_html_p
          where survey_id = :survey_id
      } {} {} {} c:/web/openacs-4/packages/survey/www/admin/description-edit.xql}
dbqd.survey.www.admin.index.select_surveys {dbqd.survey.www.admin.index.select_surveys {
      select survey_id, name, enabled_p
from surveys
where package_id= :package_id
order by enabled_p desc, upper(name)
      } {} {} {} c:/web/openacs-4/packages/survey/www/admin/index.xql}
dbqd.survey.www.admin.modify-responses-2.update_survey_question_choice {dbqd.survey.www.admin.modify-responses-2.update_survey_question_choice {
      update survey_question_choices
          set label = :trimmed_response
          where choice_id = :choice_id
      } {} {} {} c:/web/openacs-4/packages/survey/www/admin/modify-responses-2.xql}
dbqd.survey.www.admin.modify-responses-2.update_survey_scores {dbqd.survey.www.admin.modify-responses-2.update_survey_scores {
      update survey_choice_scores
                                           set score = :score
                                           where choice_id = :choice_id
                                           and variable_id = :variable_id
      } {} {} {} c:/web/openacs-4/packages/survey/www/admin/modify-responses-2.xql}
dbqd.survey.www.admin.modify-responses.survey_name_from_id {dbqd.survey.www.admin.modify-responses.survey_name_from_id {
      select name from survey_sections where section_id=:section_id
      } {} {} {} c:/web/openacs-4/packages/survey/www/admin/modify-responses.xql}
dbqd.survey.www.admin.modify-responses.survey_question_text_from_id {dbqd.survey.www.admin.modify-responses.survey_question_text_from_id {
      select question_text
from survey_questions
where question_id = :question_id
      } {} {} {} c:/web/openacs-4/packages/survey/www/admin/modify-responses.xql}
dbqd.survey.www.admin.modify-responses.get_variable_names {dbqd.survey.www.admin.modify-responses.get_variable_names {
      select variable_name, survey_variables.variable_id as variable_id
  from survey_variables, survey_variables_surveys_map
  where survey_variables.variable_id = survey_variables_surveys_map.variable_id
  and section_id = :section_id
  order by variable_name
      } {} {} {} c:/web/openacs-4/packages/survey/www/admin/modify-responses.xql}
dbqd.survey.www.admin.modify-responses.get_choices {dbqd.survey.www.admin.modify-responses.get_choices {
      select choice_id, label from survey_question_choices where question_id = :question_id order by choice_id
      } {} {} {} c:/web/openacs-4/packages/survey/www/admin/modify-responses.xql}
dbqd.survey.www.admin.modify-responses.get_scores {dbqd.survey.www.admin.modify-responses.get_scores {
      select score, survey_variables.variable_id as variable_id
      from survey_choice_scores, survey_variables
      where survey_choice_scores.choice_id = :choice_id
      and survey_choice_scores.variable_id = survey_variables.variable_id
      order by variable_name
      } {} {} {} c:/web/openacs-4/packages/survey/www/admin/modify-responses.xql}
dbqd.survey.www.admin.name-edit.survey_update {dbqd.survey.www.admin.name-edit.survey_update {
update surveys 
set name= :name,
    description= :description
where survey_id = :survey_id
} {} {} {} c:/web/openacs-4/packages/survey/www/admin/name-edit.xql}
dbqd.survey.www.admin.one-respondent-oracle.get_responses {dbqd.survey.www.admin.one-respondent-oracle.get_responses {
      select response_id, case when initial_response_id is NULL then 'T' else 'F' end as original_p, nvl(initial_response_id,response_id) as initial_response, creation_date 
from survey_responses, acs_objects
where response_id = object_id
and creation_user = :user_id
and survey_id=:survey_id
order by creation_date desc
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/survey/www/admin/one-respondent-oracle.xql}
dbqd.survey.www.admin.one-respondent.get_responses {dbqd.survey.www.admin.one-respondent.get_responses {
      select response_id, case when initial_response_id is NULL then 'T' else 'F' end as original_p, coalesce(initial_response_id,response_id) as initial_response, creation_date 
from survey_responses, acs_objects
where response_id = object_id
and creation_user = :user_id
and survey_id=:survey_id
order by creation_date desc
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/survey/www/admin/one-respondent-postgresql.xql}
dbqd.survey.www.admin.one-respondent.user_name_from_id {dbqd.survey.www.admin.one-respondent.user_name_from_id {
      select first_names, last_name from persons where person_id = :user_id
      } {} {} {} c:/web/openacs-4/packages/survey/www/admin/one-respondent.xql}
dbqd.survey.www.admin.one.survey_questions {dbqd.survey.www.admin.one.survey_questions {
select question_id, sort_order, active_p, required_p, section_id 
     from survey_questions
     where section_id in ( select section_id from survey_sections where survey_id=:survey_id)
     order by section_id, sort_order
      } {} {} {} c:/web/openacs-4/packages/survey/www/admin/one.xql}
dbqd.survey.www.admin.one.survey_sections {dbqd.survey.www.admin.one.survey_sections {
select section_id from survey_sections
where survey_id=:survey_id
	} {} {} {} c:/web/openacs-4/packages/survey/www/admin/one.xql}
dbqd.survey.www.admin.question-active-toggle-oracle.survey_question_required_toggle {dbqd.survey.www.admin.question-active-toggle-oracle.survey_question_required_toggle {
      update survey_questions set active_p = util.logical_negation(active_p)
where section_id = :section_id
and question_id = :question_id
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/survey/www/admin/question-active-toggle-oracle.xql}
dbqd.survey.www.admin.question-active-toggle.survey_question_required_toggle {dbqd.survey.www.admin.question-active-toggle.survey_question_required_toggle {
      update survey_questions set active_p = util__logical_negation(active_p)
where section_id = :section_id
and question_id = :question_id
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/survey/www/admin/question-active-toggle-postgresql.xql}
dbqd.survey.www.admin.question-add-2.count_variable_names {dbqd.survey.www.admin.question-add-2.count_variable_names {
      select count(variable_name) as n_variables
	from survey_variables, survey_variables_surveys_map
        where survey_variables.variable_id = survey_variables_surveys_map.variable_id
        and section_id = :section_id
      } {} {} {} c:/web/openacs-4/packages/survey/www/admin/question-add-2.xql}
dbqd.survey.www.admin.question-add-2.select_variable_names {dbqd.survey.www.admin.question-add-2.select_variable_names {
       select variable_name, survey_variables.variable_id as variable_id
               from survey_variables, survey_variables_surveys_map
               where survey_variables.variable_id = survey_variables_surveys_map.variable_id
               and section_id = :section_id order by survey_variables.variable_id
      } {} {} {} c:/web/openacs-4/packages/survey/www/admin/question-add-2.xql}
dbqd.survey.www.admin.question-add-3-oracle.create_question {dbqd.survey.www.admin.question-add-3-oracle.create_question {
      
	    begin
		:1 := survey_question.new (
		    question_id => :question_id,
		    section_id => :section_id,
                    sort_order => :sort_order,
                    question_text => empty_clob(),
                    abstract_data_type => :abstract_data_type,
                    presentation_type => :presentation_type,
                    presentation_alignment => :presentation_alignment,
		    presentation_options => :presentation_options,
                    active_p => :active_p,
                    required_p => :required_p,
		    context_id => :section_id,
		    creation_user => :user_id
		);
	    end;
	
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/survey/www/admin/question-add-3-oracle.xql}
dbqd.survey.www.admin.question-add-3-oracle.get_choice_id {dbqd.survey.www.admin.question-add-3-oracle.get_choice_id {
      select survey_choice_id_sequence.nextval as choice_id from dual
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/survey/www/admin/question-add-3-oracle.xql}
dbqd.survey.www.admin.question-add-3-oracle.already_inserted_p {dbqd.survey.www.admin.question-add-3-oracle.already_inserted_p {
	select decode(count(*),0,0,1) from survey_questions where question_id = :question_id
    } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/survey/www/admin/question-add-3-oracle.xql}
dbqd.survey.www.admin.question-add-3.create_question {dbqd.survey.www.admin.question-add-3.create_question {

	select survey_question__new (
		    :question_id,
		    :section_id,
                    :sort_order,
                    :question_text, 
                    :abstract_data_type,
                    :required_p,
                    :active_p,
                    :presentation_type,
		    :presentation_options,
                    :presentation_alignment,
		    :user_id,
		    :section_id
	)
	
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/survey/www/admin/question-add-3-postgresql.xql}
dbqd.survey.www.admin.question-add-3.get_choice_id {dbqd.survey.www.admin.question-add-3.get_choice_id {
      select survey_choice_id_sequence.nextval as choice_id 
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/survey/www/admin/question-add-3-postgresql.xql}
dbqd.survey.www.admin.question-add-3.already_inserted_p {dbqd.survey.www.admin.question-add-3.already_inserted_p {
	select case when count(*) = 0 then 0 else 1 end from survey_questions where question_id = :question_id
    } {} {} {postgresql 7.1} c:/web/openacs-4/packages/survey/www/admin/question-add-3-postgresql.xql}
dbqd.survey.www.admin.question-add-3.renumber_sort_orders {dbqd.survey.www.admin.question-add-3.renumber_sort_orders {
      update survey_questions
                                   set sort_order = sort_order + 1
                                   where section_id = :section_id
                                   and sort_order > :after
      } {} {} {} c:/web/openacs-4/packages/survey/www/admin/question-add-3.xql}
dbqd.survey.www.admin.question-add-3.add_question_text {dbqd.survey.www.admin.question-add-3.add_question_text {
      
	    update survey_questions
	    set question_text = :question_text
	    where question_id = :question_id
	
      } {} {} {} c:/web/openacs-4/packages/survey/www/admin/question-add-3.xql}
dbqd.survey.www.admin.question-add-3.insert_survey_question_choice {dbqd.survey.www.admin.question-add-3.insert_survey_question_choice {
      insert into survey_question_choices
      (choice_id, question_id, label, sort_order)
      values
      (:choice_id, :question_id, :trimmed_response, :count)
      } {} {} {} c:/web/openacs-4/packages/survey/www/admin/question-add-3.xql}
dbqd.survey.www.admin.question-add-3.insert_survey_scores {dbqd.survey.www.admin.question-add-3.insert_survey_scores {
      insert into survey_choice_scores
      (choice_id, variable_id, score)
      values
      (:choice_id, :variable_id, :score)
      } {} {} {} c:/web/openacs-4/packages/survey/www/admin/question-add-3.xql}
dbqd.survey.www.admin.question-add-3.already_inserted_p {dbqd.survey.www.admin.question-add-3.already_inserted_p {
	select case when count(*) = 0 then 0 else 1 end from survey_questions where question_id = :question_id
    } {} {} {postgresql 7.1} c:/web/openacs-4/packages/survey/www/admin/question-add-3-postgresql.xql}
dbqd.survey.www.admin.question-add-3.max_question {dbqd.survey.www.admin.question-add-3.max_question {
	select max(sort_order) from survey_questions
	where section_id=:section_id
    } {} {} {} c:/web/openacs-4/packages/survey/www/admin/question-add-3.xql}
dbqd.survey.www.admin.question-copy.get_section_id_from_question {dbqd.survey.www.admin.question-copy.get_section_id_from_question {
select section_id from survey_questions
    where question_id=:question_id
} {} {} {} c:/web/openacs-4/packages/survey/www/admin/question-copy.xql}
dbqd.survey.www.admin.question-delete-oracle.survey_delete_question {dbqd.survey.www.admin.question-delete-oracle.survey_delete_question {
	    begin
        	survey_question.remove (:question_id);
	    end;
} {} {} {oracle 8.1.6} c:/web/openacs-4/packages/survey/www/admin/question-delete-oracle.xql}
dbqd.survey.www.admin.question-delete.survey_delete_question {dbqd.survey.www.admin.question-delete.survey_delete_question {

            select survey_question__remove (:question_id);
	
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/survey/www/admin/question-delete-postgresql.xql}
dbqd.survey.www.admin.question-delete.section_id_from_question_id {dbqd.survey.www.admin.question-delete.section_id_from_question_id {
	select section_id
	  from survey_questions
	 where question_id = :question_id
      } {} {} {} c:/web/openacs-4/packages/survey/www/admin/question-delete.xql}
dbqd.survey.www.admin.question-delete.survey_number_responses {dbqd.survey.www.admin.question-delete.survey_number_responses {
      select count(*)
from survey_question_responses
where question_id = :question_id
      } {} {} {} c:/web/openacs-4/packages/survey/www/admin/question-delete.xql}
dbqd.survey.www.admin.question-delete.survey_question_responses_delete {dbqd.survey.www.admin.question-delete.survey_question_responses_delete {
	delete from survey_question_responses
	where question_id=:question_id
} {} {} {} c:/web/openacs-4/packages/survey/www/admin/question-delete.xql}
dbqd.survey.www.admin.question-delete.survey_question_choices_delete {dbqd.survey.www.admin.question-delete.survey_question_choices_delete {
      delete from survey_question_choices where
         question_id = :question_id
      } {} {} {} c:/web/openacs-4/packages/survey/www/admin/question-delete.xql}
dbqd.survey.www.admin.question-delete.get_question_details {dbqd.survey.www.admin.question-delete.get_question_details {
	select * from survey_questions where question_id=:question_id
} {} {} {} c:/web/openacs-4/packages/survey/www/admin/question-delete.xql}
dbqd.survey.www.admin.question-delete.survey_renumber_questions {dbqd.survey.www.admin.question-delete.survey_renumber_questions {
update survey_questions set sort_order=sort_order - 1 
where section_id = :section_id
and sort_order > :sort_order
} {} {} {} c:/web/openacs-4/packages/survey/www/admin/question-delete.xql}
dbqd.survey.www.admin.question-modify-text.survey_name_from_id {dbqd.survey.www.admin.question-modify-text.survey_name_from_id {
      select name from survey_sections where section_id=:section_id
      } {} {} {} c:/web/openacs-4/packages/survey/www/admin/question-modify-text.xql}
dbqd.survey.www.admin.question-modify-text.survey_question_text_from_id {dbqd.survey.www.admin.question-modify-text.survey_question_text_from_id {
select question_text
from survey_questions
where question_id = :question_id
      } {} {} {} c:/web/openacs-4/packages/survey/www/admin/question-modify-text.xql}
dbqd.survey.www.admin.question-modify.survey_number_responses {dbqd.survey.www.admin.question-modify.survey_number_responses {
	select count(*)
	from survey_question_responses
	where question_id=:question_id
} {} {} {} c:/web/openacs-4/packages/survey/www/admin/question-modify.xql}
dbqd.survey.www.admin.question-modify.survey_name_from_id {dbqd.survey.www.admin.question-modify.survey_name_from_id {
      select name from survey_sections where section_id=:section_id
      } {} {} {} c:/web/openacs-4/packages/survey/www/admin/question-modify.xql}
dbqd.survey.www.admin.question-modify.survey_question_details {dbqd.survey.www.admin.question-modify.survey_question_details {
select 
	question_id,
	question_text,
	abstract_data_type,
	presentation_alignment,
	presentation_options,
	sort_order as question_number,
	required_p,
	sort_order
from survey_questions
where question_id = :question_id
      } {} {} {} c:/web/openacs-4/packages/survey/www/admin/question-modify.xql}
dbqd.survey.www.admin.question-modify.survey_question_valid_responses {dbqd.survey.www.admin.question-modify.survey_question_valid_responses {
select label from survey_question_choices
where question_id=:question_id
order by sort_order
} {} {} {} c:/web/openacs-4/packages/survey/www/admin/question-modify.xql}
dbqd.survey.www.admin.question-modify.presentation {dbqd.survey.www.admin.question-modify.presentation {
select presentation_type, presentation_options, abstract_data_type,
sort_order as anchor
from survey_questions
where question_id=:question_id
} {} {} {} c:/web/openacs-4/packages/survey/www/admin/question-modify.xql}
dbqd.survey.www.admin.question-modify.survey_question_update {dbqd.survey.www.admin.question-modify.survey_question_update {
update survey_questions
     set question_text=:question_text,
         active_p=:active_p,
         required_p=:required_p,
	presentation_options=:presentation_options
     where question_id=:question_id
} {} {} {} c:/web/openacs-4/packages/survey/www/admin/question-modify.xql}
dbqd.survey.www.admin.question-modify.insert_new_choice {dbqd.survey.www.admin.question-modify.insert_new_choice {
insert into survey_question_choices
(choice_id, question_id, label, sort_order)
values (survey_choice_id_sequence.nextval, :question_id, :choice_name, :choice_value)
} {} {} {} c:/web/openacs-4/packages/survey/www/admin/question-modify.xql}
dbqd.survey.www.admin.question-modify.update_new_choice {dbqd.survey.www.admin.question-modify.update_new_choice {
update survey_question_choices
                set label=:choice_name where choice_id=:choice_id_to_update
} {} {} {} c:/web/openacs-4/packages/survey/www/admin/question-modify.xql}
dbqd.survey.www.admin.question-modify.delete_old_choice {dbqd.survey.www.admin.question-modify.delete_old_choice {
delete from survey_question_choices where choice_id = :choice_id_to_delete
} {} {} {} c:/web/openacs-4/packages/survey/www/admin/question-modify.xql}
dbqd.survey.www.admin.question-modify.get_choice_id {dbqd.survey.www.admin.question-modify.get_choice_id {
        select choice_id from survey_question_choices
        where question_id=:question_id
        order by sort_order
} {} {} {} c:/web/openacs-4/packages/survey/www/admin/question-modify.xql}
dbqd.survey.www.admin.question-required-toggle-oracle.survey_question_required_toggle {dbqd.survey.www.admin.question-required-toggle-oracle.survey_question_required_toggle {
      update survey_questions set required_p = util.logical_negation(required_p)
where section_id = :section_id
and question_id = :question_id
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/survey/www/admin/question-required-toggle-oracle.xql}
dbqd.survey.www.admin.question-required-toggle.survey_question_required_toggle {dbqd.survey.www.admin.question-required-toggle.survey_question_required_toggle {
      update survey_questions set required_p = util__logical_negation(required_p)
where section_id = :section_id
and question_id = :question_id
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/survey/www/admin/question-required-toggle-postgresql.xql}
dbqd.survey.www.admin.question-swap.swap_sort_orders {dbqd.survey.www.admin.question-swap.swap_sort_orders {
update survey_questions
set sort_order = (case when sort_order = :sort_order then :next_sort_order when sort_order = :next_sort_order then :sort_order end)
where section_id = :section_id
and sort_order in (:sort_order, :next_sort_order)
      } {} {} {} c:/web/openacs-4/packages/survey/www/admin/question-swap.xql}
dbqd.survey.www.admin.respondents.select_respondents {dbqd.survey.www.admin.respondents.select_respondents {
            select persons.first_names, persons.last_name,
                   acs_objects.creation_user as user_id,
                   parties.email
            from survey_responses_latest s,
                 persons,
                 parties,
                 acs_objects
            where s.survey_id=:survey_id
            and s.response_id = acs_objects.object_id
            and acs_objects.creation_user = persons.person_id
            and persons.person_id = parties.party_id
            group by acs_objects.creation_user,
                     parties.email,
                     persons.first_names,
                     persons.last_name
    [ad_order_by_from_sort_spec $orderby $table_def]
        } {} {} {} c:/web/openacs-4/packages/survey/www/admin/respondents.xql}
dbqd.survey.www.admin.response-delete-oracle.delete_response {dbqd.survey.www.admin.response-delete-oracle.delete_response {
begin
	survey_response.remove(:response_id);
end;
} {} {} {oracle 8.1.6} c:/web/openacs-4/packages/survey/www/admin/response-delete-oracle.xql}
dbqd.survey.www.admin.response-delete-oracle.get_response_info {dbqd.survey.www.admin.response-delete-oracle.get_response_info {
select survey_id, survey_response.initial_user_id(response_id) as user_id,
	u.first_names || ' ' || last_name as user_name, 
	o.creation_date as response_date
from survey_responses, cc_users u, acs_objects o
where response_id=:response_id
and o.object_id = response_id
and u.user_id = survey_response.initial_user_id(response_id)
} {} {} {oracle 8.1.6} c:/web/openacs-4/packages/survey/www/admin/response-delete-oracle.xql}
dbqd.survey.www.admin.response-delete.delete_response {dbqd.survey.www.admin.response-delete.delete_response {
begin
	perform survey_response__remove(:response_id);
end;
} {} {} {postgresql 7.1} c:/web/openacs-4/packages/survey/www/admin/response-delete-postgresql.xql}
dbqd.survey.www.admin.response-delete.get_response_info {dbqd.survey.www.admin.response-delete.get_response_info {
select survey_id, survey_response__initial_user_id(response_id) as user_id
from survey_responses
where response_id=:response_id
} {} {} {postgresql 7.1} c:/web/openacs-4/packages/survey/www/admin/response-delete-postgresql.xql}
dbqd.survey.www.admin.response-drill-down.get_question_text {dbqd.survey.www.admin.response-drill-down.get_question_text {
      
select section_id, question_text, section_id
from survey_questions
where question_id = :question_id

      } {} {} {} c:/web/openacs-4/packages/survey/www/admin/response-drill-down.xql}
dbqd.survey.www.admin.response-drill-down.get_response_text {dbqd.survey.www.admin.response-drill-down.get_response_text {
    
select label as response_text
from survey_question_choices
where choice_id = :choice_id
      } {} {} {} c:/web/openacs-4/packages/survey/www/admin/response-drill-down.xql}
dbqd.survey.www.admin.response-drill-down.all_users_for_response {dbqd.survey.www.admin.response-drill-down.all_users_for_response {
      
select
  first_names || ' ' || last_name as responder_name,
  person_id as user_id,
  creation_date
from
  acs_objects,
  survey_responses sr,
  persons u,
  survey_question_responses qr
where
  qr.response_id = sr.response_id
  and qr.response_id = object_id
  and creation_user = person_id
  and qr.question_id = :question_id
  and qr.choice_id = :choice_id
      } {} {} {} c:/web/openacs-4/packages/survey/www/admin/response-drill-down.xql}
dbqd.survey.www.admin.response-editable-toggle-oracle.survey_response_editable_toggle {dbqd.survey.www.admin.response-editable-toggle-oracle.survey_response_editable_toggle {
      update surveys set editable_p = util.logical_negation(editable_p)
where survey_id = :survey_id
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/survey/www/admin/response-editable-toggle-oracle.xql}
dbqd.survey.www.admin.response-editable-toggle.survey_response_editable_toggle {dbqd.survey.www.admin.response-editable-toggle.survey_response_editable_toggle {
      update surveys set editable_p = util__logical_negation(editable_p)
where survey_id = :survey_id
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/survey/www/admin/response-editable-toggle-postgresql.xql}
dbqd.survey.www.admin.response-limit-toggle-oracle.survey_reponse_toggle {dbqd.survey.www.admin.response-limit-toggle-oracle.survey_reponse_toggle {
      update surveys 
set single_response_p = util.logical_negation(single_response_p)
where survey_id = :survey_id
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/survey/www/admin/response-limit-toggle-oracle.xql}
dbqd.survey.www.admin.response-limit-toggle.survey_reponse_toggle {dbqd.survey.www.admin.response-limit-toggle.survey_reponse_toggle {
      update surveys 
set single_response_p = util__logical_negation(single_response_p)
where survey_id = :survey_id
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/survey/www/admin/response-limit-toggle-postgresql.xql}
dbqd.survey.www.admin.responses-export-oracle.get_question_data_types {dbqd.survey.www.admin.responses-export-oracle.get_question_data_types {
  select question_id, abstract_data_type, q.sort_order,
    question_text
  from survey_questions q, survey_sections s
  where s.survey_id = :survey_id
    and s.section_id=q.section_id
  order by q.sort_order,q.question_id
} {} {} {oracle 8.1.6} c:/web/openacs-4/packages/survey/www/admin/responses-export-oracle.xql}
dbqd.survey.www.admin.responses-export-oracle.get_all_survey_question_responses {dbqd.survey.www.admin.responses-export-oracle.get_all_survey_question_responses {
select
    sq.response_id,
    sq.question_id,
    sq.email,
    sq.first_names,
    sq.last_name,
    sq.user_id,
    to_char(sq.creation_date,'YYYY-MM-DD HH24:MI:SS') as creation_date_ansi,
    resp.boolean_answer,
    resp.number_answer,
    resp.date_answer,
    resp.varchar_answer,
    resp.clob_answer,
    resp.attachment_answer,
    resp.label
  from 
  (select
    sqr.response_id,
    sqr.question_id,
    sqr.boolean_answer,
    sqr.number_answer,
    sqr.date_answer,
    sqr.varchar_answer,
    sqr.clob_answer,
    sqr.attachment_answer,
    sqc.label,
    sqc.sort_order
  from
    survey_responses sr,
    survey_question_responses sqr,
    survey_question_choices sqc
  where
    sr.survey_id=:survey_id
    and sr.response_id = sqr.response_id
    and sqr.question_id = sqc.question_id (+)
    and sqr.choice_id = sqc.choice_id (+)) resp,
  (select r.response_id,
          q.question_id,
          u.email,
          u.first_names,
          u.last_name,
          r.user_id,
          r.creation_date,
          q.abstract_data_type,
          q.sort_order
     from survey_questions q, (select initial_user_id as user_id, creation_date, response_id from survey_responses_latest rt where survey_id=:survey_id) r, (select p.email, u.first_names, u.last_name, u.person_id as user_id from parties
p, persons u where p.party_id=u.person_id) u, survey_sections ss
     where ss.survey_id=:survey_id
     and q.section_id=ss.section_id
     and r.user_id = u.user_id) sq
  where sq.response_id = resp.response_id (+)
   and sq.question_id = resp.question_id (+)
  order by
    sq.response_id,
    sq.sort_order,
    sq.question_id,
    resp.sort_order
} {} {} {oracle 8.1.6} c:/web/openacs-4/packages/survey/www/admin/responses-export-oracle.xql}
dbqd.survey.www.admin.responses-export.get_all_survey_question_responses {dbqd.survey.www.admin.responses-export.get_all_survey_question_responses {
select
    sq.response_id,
    sq.question_id,
    sq.email,
    sq.first_names,
    sq.last_name,
    sq.user_id,
    to_char(sq.creation_date,'YYYY-MM-DD HH24:MI:SS') as creation_date_ansi,
    resp.boolean_answer,
    resp.number_answer,
    resp.date_answer,
    resp.varchar_answer,
    resp.clob_answer,
    resp.attachment_answer,
    resp.label
  from 
  (select
    sqr.response_id,
    sqr.question_id,
    sqr.boolean_answer,
    sqr.number_answer,
    sqr.date_answer,
    sqr.varchar_answer,
    sqr.clob_answer,
    sqr.attachment_answer,
    sqc.label,
    sqc.sort_order
  from
    survey_responses sr,
    survey_question_responses sqr left join
    survey_question_choices sqc using(question_id,choice_id)
  where
    sr.survey_id=:survey_id
    and sr.response_id=sqr.response_id) resp,
  (select r.response_id,
          q.question_id,
          u.email,
          u.first_names,
          u.last_name,
          r.user_id,
          r.creation_date,
          q.abstract_data_type,
          q.sort_order
     from survey_questions q, (select initial_user_id as user_id, creation_date, response_id from survey_responses_latest where survey_id=:survey_id) r, (select p.email, u.first_names, u.last_name, u.person_id as user_id from parties
p, persons u where p.party_id=u.person_id) u, survey_sections ss
     where ss.survey_id=:survey_id
     and q.section_id=ss.section_id
     and r.user_id=u.user_id) sq
  where sq.response_id = resp.response_id
   and sq.question_id = resp.question_id
  order by
    sq.response_id,
    sq.sort_order,
    sq.question_id,
    resp.sort_order
} {} {} {postgresql 7.1} c:/web/openacs-4/packages/survey/www/admin/responses-export-postgresql.xql}
dbqd.survey.www.admin.responses-export.get_question_data_types {dbqd.survey.www.admin.responses-export.get_question_data_types {
	  select question_id, abstract_data_type, q.sort_order,
	    question_text
	  from survey_questions q, survey_sections s
	  where s.survey_id = :survey_id
	    and s.section_id=q.section_id
	  order by q.sort_order,q.question_id
	} {} {} {} c:/web/openacs-4/packages/survey/www/admin/responses-export.xql}
dbqd.survey.www.admin.responses-export.get_n_responses {dbqd.survey.www.admin.responses-export.get_n_responses {
	    select count(*) from survey_responses_latest
	    where survey_id=:survey_id
	} {} {} {} c:/web/openacs-4/packages/survey/www/admin/responses-export.xql}
dbqd.survey.www.admin.responses-export.get_filename {dbqd.survey.www.admin.responses-export.get_filename {
	    select title from cr_revisions where
	    revision_id=:attachment_answer
	} {} {} {} c:/web/openacs-4/packages/survey/www/admin/responses-export.xql}
dbqd.survey.www.admin.responses.survey_question_list {dbqd.survey.www.admin.responses.survey_question_list {
      select question_id, question_text, abstract_data_type, sort_order
from survey_questions
where section_id in (select section_id from survey_sections
                     where survey_id=:survey_id)
order by sort_order
      } {} {} {} c:/web/openacs-4/packages/survey/www/admin/responses.xql}
dbqd.survey.www.admin.responses.survey_boolean_summary {dbqd.survey.www.admin.responses.survey_boolean_summary {
select count(*) as n_responses, (case when boolean_answer = 't' then 'True' when boolean_answer = 'f' then 'False' end) as boolean_answer
from survey_ques_responses_latest
where question_id = :question_id
group by boolean_answer
order by boolean_answer desc
      } {} {} {} c:/web/openacs-4/packages/survey/www/admin/responses.xql}
dbqd.survey.www.admin.responses.survey_number_summary {dbqd.survey.www.admin.responses.survey_number_summary {
      select count(*) as n_responses, number_answer
from survey_ques_responses_latest
where question_id = :question_id
group by number_answer
order by number_answer
      } {} {} {} c:/web/openacs-4/packages/survey/www/admin/responses.xql}
dbqd.survey.www.admin.responses.survey_number_average {dbqd.survey.www.admin.responses.survey_number_average {
      select avg(number_answer) as mean, stddev(number_answer) as standard_deviation
from survey_ques_responses_latest
where question_id = :question_id
      } {} {} {} c:/web/openacs-4/packages/survey/www/admin/responses.xql}
dbqd.survey.www.admin.responses.survey_section_question_choices {dbqd.survey.www.admin.responses.survey_section_question_choices {
      select count(*) as n_responses, label, qc.choice_id
from survey_ques_responses_latest qr, survey_question_choices qc
where qr.choice_id = qc.choice_id
  and qr.question_id = :question_id
group by label, sort_order, qc.choice_id
order by sort_order
      } {} {} {} c:/web/openacs-4/packages/survey/www/admin/responses.xql}
dbqd.survey.www.admin.responses.survey_attachment_summary {dbqd.survey.www.admin.responses.survey_attachment_summary {
	select cr.title, qr.question_id, qr.response_id
	from cr_revisions cr, survey_ques_responses_latest qr 
	where
	revision_id=attachment_answer
	and qr.question_id=question_id
      } {} {} {} c:/web/openacs-4/packages/survey/www/admin/responses.xql}
dbqd.survey.www.admin.responses.survey_number_responses {dbqd.survey.www.admin.responses.survey_number_responses {
      select count(*)
from survey_responses_latest
where survey_id=:survey_id
} {} {} {} c:/web/openacs-4/packages/survey/www/admin/responses.xql}
dbqd.survey.www.admin.send-mail-oracle.dotlrn_all {dbqd.survey.www.admin.send-mail-oracle.dotlrn_all {
            select '[db_quote $sender_email]' as from_addr,
               '[db_quote $sender_first_names]' as sender_first_names,
               '[db_quote $sender_last_name]' as sender_last_name,
               parties.email,
               decode(acs_objects.object_type,
                      'user',
                      (select first_names
                       from persons
                       where person_id = parties.party_id),
                      'group',
                      (select group_name
                       from groups
                       where group_id = parties.party_id),
                      'rel_segment',
                      (select segment_name
                       from rel_segments
                       where segment_id = parties.party_id),
                      '') as first_names,
               decode(acs_objects.object_type,
                      'user',
                      (select last_name
                       from persons
                       where person_id = parties.party_id),
                      '') as last_name,
               '[db_quote $community_name]' as community_name,
               '[db_quote $community_url]' as community_url
            from party_approved_member_map,
                 parties,
                 acs_objects
            where party_approved_member_map.party_id = $segment_id
            and party_approved_member_map.member_id <> $segment_id
            and party_approved_member_map.member_id = parties.party_id
            and parties.party_id = acs_objects.object_id
	} {} {} {oracle 8.1.6} c:/web/openacs-4/packages/survey/www/admin/send-mail-oracle.xql}
dbqd.survey.www.admin.send-mail-oracle.dotlrn_responded {dbqd.survey.www.admin.send-mail-oracle.dotlrn_responded {
 		select '[db_quote $sender_email]' as from_addr,
               '[db_quote $sender_first_names]' as sender_first_names,
               '[db_quote $sender_last_name]' as sender_last_name,
               parties.email,
               decode(acs_objects.object_type,
                      'user',
                      (select first_names
                       from persons
                       where person_id = parties.party_id),
                      'group',
                      (select group_name
                       from groups
                       where group_id = parties.party_id),
                      'rel_segment',
                      (select segment_name
                       from rel_segments
                       where segment_id = parties.party_id),
                      '') as first_names,
               decode(acs_objects.object_type,
                      'user',
                      (select last_name
                       from persons
                       where person_id = parties.party_id),
                      '') as last_name,
               '[db_quote $community_name]' as community_name,
               '[db-quote $community_url]' as community_url
            from party_approved_member_map,
                 parties,
                 acs_objects
            where party_approved_member_map.party_id = $segment_id
            and party_approved_member_map.member_id <> $segment_id
            and party_approved_member_map.member_id = parties.party_id
            and parties.party_id = acs_objects.object_id
	    and parties.party_id in (
		select survey_response.initial_user_id(response_id)
		from survey_responses_latest where survey_id=$survey_id)
	} {} {} {oracle 8.1.6} c:/web/openacs-4/packages/survey/www/admin/send-mail-oracle.xql}
dbqd.survey.www.admin.send-mail-oracle.dotlrn_not_responded {dbqd.survey.www.admin.send-mail-oracle.dotlrn_not_responded {
		select '[db_quote $sender_email]' as from_addr,
               '[db_quote $sender_first_names]' as sender_first_names,
               '[db_quote $sender_last_name]' as sender_last_name,
               parties.email,
               decode(acs_objects.object_type,
                      'user',
                      (select first_names
                       from persons
                       where person_id = parties.party_id),
                      'group',
                      (select group_name
                       from groups
                       where group_id = parties.party_id),
                      'rel_segment',
                      (select segment_name
                       from rel_segments
                       where segment_id = parties.party_id),
                      '') as first_names,
               decode(acs_objects.object_type,
                      'user',
                      (select last_name
                       from persons
                       where person_id = parties.party_id),
                      '') as last_name,
               '[db_quote $community_name]' as community_name,
               '[db_quote $community_url]' as community_url
            from party_approved_member_map,
                 parties,
                 acs_objects
            where party_approved_member_map.party_id = $segment_id
            and party_approved_member_map.member_id <> $segment_id
            and party_approved_member_map.member_id = parties.party_id
            and parties.party_id = acs_objects.object_id
	    and parties.party_id not in (
            select survey_response.initial_user_id(response_id)
            from survey_responses_latest where survey_id=$survey_id)
	} {} {} {oracle 8.1.6} c:/web/openacs-4/packages/survey/www/admin/send-mail-oracle.xql}
dbqd.survey.www.admin.send-mail-oracle.responded {dbqd.survey.www.admin.send-mail-oracle.responded {
 		select '[db_quote $sender_email]' as from_addr,
               '[db_quote $sender_first_names]' as sender_first_names,
               '[db_quote $sender_last_name]' as sender_last_name,
               parties.email,
            from parties
            where parties.party_id = acs_objects.object_id
	    and parties.party_id in (
		select survey_response.initial_user_id(response_id)
		from survey_responses_latest where survey_id=$survey_id)
	} {} {} {oracle 8.1.6} c:/web/openacs-4/packages/survey/www/admin/send-mail-oracle.xql}
dbqd.survey.www.admin.send-mail.dotlrn_all {dbqd.survey.www.admin.send-mail.dotlrn_all {
            select '[db_quote $sender_email]' as from_addr,
               '[db_quote $sender_first_names]' as sender_first_names,
               '[db_quote $sender_last_name]' as sender_last_name,
               parties.email,
               coalesce(acs_objects.object_type,
                      'user',
                      (select first_names
                       from persons
                       where person_id = parties.party_id),
                      'group',
                      (select group_name
                       from groups
                       where group_id = parties.party_id),
                      'rel_segment',
                      (select segment_name
                       from rel_segments
                       where segment_id = parties.party_id),
                      '') as first_names,
               coalesce(acs_objects.object_type,
                      'user',
                      (select last_name
                       from persons
                       where person_id = parties.party_id),
                      '') as last_name,
               '[db_quote $community_name]' as community_name,
               '[db_quote $community_url]' as community_url
            from party_approved_member_map,
                 parties,
                 acs_objects
            where party_approved_member_map.party_id = $segment_id
            and party_approved_member_map.member_id <> $segment_id
            and party_approved_member_map.member_id = parties.party_id
            and parties.party_id = acs_objects.object_id
	} {} {} {postgresql 7.1} c:/web/openacs-4/packages/survey/www/admin/send-mail-postgresql.xql}
dbqd.survey.www.admin.send-mail.dotlrn_responded {dbqd.survey.www.admin.send-mail.dotlrn_responded {
 		select '[db_quote $sender_email]' as from_addr,
               '[db_quote $sender_first_names]' as sender_first_names,
               '[db_quote $sender_last_name]' as sender_last_name,
               parties.email,
               coalesce(acs_objects.object_type,
                      'user',
                      (select first_names
                       from persons
                       where person_id = parties.party_id),
                      'group',
                      (select group_name
                       from groups
                       where group_id = parties.party_id),
                      'rel_segment',
                      (select segment_name
                       from rel_segments
                       where segment_id = parties.party_id),
                      '') as first_names,
               coalesce(acs_objects.object_type,
                      'user',
                      (select last_name
                       from persons
                       where person_id = parties.party_id),
                      '') as last_name,
               '[db_quote $community_name]' as community_name,
               '[db_quote $community_url]' as community_url
            from party_approved_member_map,
                 parties,
                 acs_objects
            where party_approved_member_map.party_id = $segment_id
            and party_approved_member_map.member_id <> $segment_id
            and party_approved_member_map.member_id = parties.party_id
            and parties.party_id = acs_objects.object_id
	    and parties.party_id in (
		select survey_response__initial_user_id(response_id)
		from survey_responses_latest where survey_id=$survey_id)
	} {} {} {postgresql 7.1} c:/web/openacs-4/packages/survey/www/admin/send-mail-postgresql.xql}
dbqd.survey.www.admin.send-mail.dotlrn_not_responded {dbqd.survey.www.admin.send-mail.dotlrn_not_responded {
		select '[db_quote $sender_email]' as from_addr,
               '[db_quote $sender_first_names]' as sender_first_names,
               '[db_quote $sender_last_name]' as sender_last_name,
               parties.email,
               coalesce(acs_objects.object_type,
                      'user',
                      (select first_names
                       from persons
                       where person_id = parties.party_id),
                      'group',
                      (select group_name
                       from groups
                       where group_id = parties.party_id),
                      'rel_segment',
                      (select segment_name
                       from rel_segments
                       where segment_id = parties.party_id),
                      '') as first_names,
               coalesce(acs_objects.object_type,
                      'user',
                      (select last_name
                       from persons
                       where person_id = parties.party_id),
                      '') as last_name,
               '[db_quote $community_name]' as community_name,
               '[db_quote $community_url]' as community_url
            from party_approved_member_map,
                 parties,
                 acs_objects
            where party_approved_member_map.party_id = $segment_id
            and party_approved_member_map.member_id <> $segment_id
            and party_approved_member_map.member_id = parties.party_id
            and parties.party_id = acs_objects.object_id
	    and parties.party_id not in (
            select survey_response__initial_user_id(response_id)
            from survey_responses_latest where survey_id=$survey_id)
	} {} {} {postgresql 7.1} c:/web/openacs-4/packages/survey/www/admin/send-mail-postgresql.xql}
dbqd.survey.www.admin.send-mail.responded {dbqd.survey.www.admin.send-mail.responded {
 		select '[db_quote $sender_email]' as from_addr,
               '[db_quote $sender_first_names]' as sender_first_names,
               '[db_quote $sender_last_name]' as sender_last_name,
               parties.email
            from parties
            where parties.party_id in (
		select survey_response__initial_user_id(response_id)
		from survey_responses_latest where survey_id=$survey_id)
	} {} {} {postgresql 7.1} c:/web/openacs-4/packages/survey/www/admin/send-mail-postgresql.xql}
dbqd.survey.www.admin.send-mail.select_sender_info {dbqd.survey.www.admin.send-mail.select_sender_info {
            select parties.email as sender_email,
                   persons.first_names as sender_first_names,
                   persons.last_name as sender_last_name
            from parties,
                 persons
            where parties.party_id = :sender_id
            and persons.person_id = :sender_id
        } {} {} {} c:/web/openacs-4/packages/survey/www/admin/send-mail.xql}
dbqd.survey.www.admin.send-mail.select_rel_segment_id {dbqd.survey.www.admin.send-mail.select_rel_segment_id {
            select rel_segments.segment_id
            from rel_segments
            where rel_segments.group_id = :community_id
            and rel_segments.rel_type = :rel_type
        } {} {} {} c:/web/openacs-4/packages/survey/www/admin/send-mail.xql}
dbqd.survey.www.admin.send-mail.n_responses {dbqd.survey.www.admin.send-mail.n_responses {
	    select count(*) from survey_responses_latest
		where survey_id=:survey_id
	} {} {} {} c:/web/openacs-4/packages/survey/www/admin/send-mail.xql}
{dbqd.survey.www.admin.site-wide-survey-oracle.select surveys} {{dbqd.survey.www.admin.site-wide-survey-oracle.select surveys} {
	select s.survey_id, s.name, s.editable_p, s.single_response_p,
       	  s.package_id,
          acs_object.name(apm_package.parent_id(s.package_id)) as parent_name,
      		(select site_node.url(site_nodes.node_id)
	          from site_nodes
	          where site_nodes.object_id = s.package_id) as url
	 from surveys s
	 where enabled_p='t'
	 order by
parent_name,
upper(s.name)
    } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/survey/www/admin/site-wide-survey-oracle.xql}
dbqd.survey.www.admin.survey-category-add-oracle.category_id_next_sequence {dbqd.survey.www.admin.survey-category-add-oracle.category_id_next_sequence {
      select 
  category_id_sequence.nextval from dual
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/survey/www/admin/survey-category-add-oracle.xql}
dbqd.survey.www.admin.survey-category-add-oracle.category_map_insert {dbqd.survey.www.admin.survey-category-add-oracle.category_map_insert {
      insert into site_wide_category_map 
  (map_id, category_id,
  on_which_table, on_what_id, mapping_date, one_line_item_desc) 
  values (site_wide_cat_map_id_seq.nextval, :category_id, 'survey_sections',
  :section_id, sysdate, :one_line_item_desc)
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/survey/www/admin/survey-category-add-oracle.xql}
dbqd.survey.www.admin.survey-category-add.category_id_next_sequence {dbqd.survey.www.admin.survey-category-add.category_id_next_sequence {
      select 
  category_id_sequence.nextval 
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/survey/www/admin/survey-category-add-postgresql.xql}
dbqd.survey.www.admin.survey-category-add.category_map_insert {dbqd.survey.www.admin.survey-category-add.category_map_insert {
      insert into site_wide_category_map 
  (map_id, category_id,
  on_which_table, on_what_id, mapping_date, one_line_item_desc) 
  values (site_wide_cat_map_id_seq.nextval, :category_id, 'survey_sections',
  :section_id, current_timestamp, :one_line_item_desc)
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/survey/www/admin/survey-category-add-postgresql.xql}
dbqd.survey.www.admin.survey-category-add.category_insert {dbqd.survey.www.admin.survey-category-add.category_insert {
      insert into categories 
  (category_id, category,category_type)
  values (:category_id, :category, 'survsimp')
      } {} {} {} c:/web/openacs-4/packages/survey/www/admin/survey-category-add.xql}
dbqd.survey.www.admin.survey-category-add.survey_name {dbqd.survey.www.admin.survey-category-add.survey_name {
      
  select name from survey_sections where section_id = :section_id
      } {} {} {} c:/web/openacs-4/packages/survey/www/admin/survey-category-add.xql}
dbqd.survey.www.admin.survey-copy.survey_create {dbqd.survey.www.admin.survey-copy.survey_create {
        :1 := survey__new (
                    NULL,
                    :name,
                    :description,
                    :description_html_p,
		    :single_response_p,
                    :editable_p,
                    :enabled_p,
                    :single_section_p,
		    :type,
                    :display_type,
                    :package_id,
	            :user_id,
		    :package_id,
                );
} {} {} {postgresql 7.1} c:/web/openacs-4/packages/survey/www/admin/survey-copy-postgresql.xql}
dbqd.survey.www.admin.survey-copy.section_create {dbqd.survey.www.admin.survey-copy.section_create {
	    :1 := survey_section__new (
	              NULL,
		      :new_survey_id,
		      :name,
		      :description,
		      :description_html_p,
		      :user_id,
	              :package_id
		      );
} {} {} {postgresql 7.1} c:/web/openacs-4/packages/survey/www/admin/survey-copy-postgresql.xql}
dbqd.survey.www.admin.survey-copy.get_survey_info {dbqd.survey.www.admin.survey-copy.get_survey_info {
select * from surveys where survey_id=:survey_id
} {} {} {} c:/web/openacs-4/packages/survey/www/admin/survey-copy.xql}
dbqd.survey.www.admin.survey-create-oracle.create_survey {dbqd.survey.www.admin.survey-create-oracle.create_survey {
	    begin
	        :1 := survey.new (
                    survey_id => :survey_id,
                    name => :name,
                    description => :description,
                    description_html_p => :description_html_p,
                    type => :type,
                    display_type => :display_type,
                    package_id => :package_id,
                    context_id => :package_id,
		    creation_user => :user_id,
		    enabled_p => :enabled_p
                );
            end;
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/survey/www/admin/survey-create-oracle.xql}
dbqd.survey.www.admin.survey-create-oracle.create_section {dbqd.survey.www.admin.survey-create-oracle.create_section {
	    begin
	    :1 := survey_section.new (
	              section_id=>:section_id,
		      survey_id=>:survey_id,
		      name=>:name,
		      description=>empty_clob(),
		      description_html_p=>:description_html_p,
		      context_id=>:survey_id
		      );
	    end;
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/survey/www/admin/survey-create-oracle.xql}
dbqd.survey.www.admin.survey-create-oracle.add_logic {dbqd.survey.www.admin.survey-create-oracle.add_logic {
      insert into survey_logic
      (logic_id, logic)
      values
      (:logic_id, empty_clob()) returning logic into :1
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/survey/www/admin/survey-create-oracle.xql}
dbqd.survey.www.admin.survey-create.create_survey {dbqd.survey.www.admin.survey-create.create_survey {
	        select survey__new (
                    :survey_id,
                    :name,
                    :description,
                    :description_html_p,
		    'f',
		    't',
		    'f',
	            't',
                    :type,
                    :display_type,
                    :package_id,
		    :user_id,
                    :package_id
                )
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/survey/www/admin/survey-create-postgresql.xql}
dbqd.survey.www.admin.survey-create.create_section {dbqd.survey.www.admin.survey-create.create_section {
	    select survey_section__new (
	              :section_id,
		      :survey_id,
		      :name,
		      :description,
		      :description_html_p,
	              :user_id,
	              :package_id
            )
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/survey/www/admin/survey-create-postgresql.xql}
dbqd.survey.www.admin.survey-create.add_logic {dbqd.survey.www.admin.survey-create.add_logic {
      insert into survey_logic
      (logic_id, logic)
      values
      (:logic_id, :logic)
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/survey/www/admin/survey-create-postgresql.xql}
dbqd.survey.www.admin.survey-create.add_variable_name {dbqd.survey.www.admin.survey-create.add_variable_name {
      insert into survey_variables
                  (variable_id, variable_name)
                  values
                  (:variable_id, :variable_name)
      } {} {} {} c:/web/openacs-4/packages/survey/www/admin/survey-create.xql}
dbqd.survey.www.admin.survey-create.map_variable_name {dbqd.survey.www.admin.survey-create.map_variable_name {
      insert into survey_variables_surveys_map
                  (variable_id, section_id)
                  values
                  (:variable_id, :section_id)
      } {} {} {} c:/web/openacs-4/packages/survey/www/admin/survey-create.xql}
dbqd.survey.www.admin.survey-create.map_logic {dbqd.survey.www.admin.survey-create.map_logic {
      insert into survey_logic_surveys_map
              (logic_id, section_id)
              values
              (:logic_id, :section_id)
      } {} {} {} c:/web/openacs-4/packages/survey/www/admin/survey-create.xql}
dbqd.survey.www.admin.survey-delete-oracle.delete_survey {dbqd.survey.www.admin.survey-delete-oracle.delete_survey {
begin
	survey.remove(:survey_id);
end;
} {} {} {oracle 8.1.6} c:/web/openacs-4/packages/survey/www/admin/survey-delete-oracle.xql}
dbqd.survey.www.admin.survey-delete.delete_survey {dbqd.survey.www.admin.survey-delete.delete_survey {
begin
	perform survey__remove(:survey_id);
return NULL;
end;
} {} {} {postgresql 7.1} c:/web/openacs-4/packages/survey/www/admin/survey-delete-postgresql.xql}
dbqd.survey.www.admin.survey-display-type-edit.survey_display_type_edit {dbqd.survey.www.admin.survey-display-type-edit.survey_display_type_edit {
update surveys 
 set display_type= :display_type
 where survey_id = :survey_id
} {} {} {} c:/web/openacs-4/packages/survey/www/admin/survey-display-type-edit.xql}
dbqd.survey.www.admin.survey-preview.survey_exists {dbqd.survey.www.admin.survey-preview.survey_exists {
	select 1 from surveys where survey_id = :survey_id
    } {} {} {} c:/web/openacs-4/packages/survey/www/admin/survey-preview.xql}
dbqd.survey.www.admin.survey-preview.question_ids_select {dbqd.survey.www.admin.survey-preview.question_ids_select {
	select question_id
	from survey_questions  
	where section_id = :section_id
	and active_p = 't'
	order by sort_order
    } {} {} {} c:/web/openacs-4/packages/survey/www/admin/survey-preview.xql}
dbqd.survey.www.admin.survey-preview.survey_sections {dbqd.survey.www.admin.survey-preview.survey_sections {
	select section_id from survey_sections
	where survey_id=:survey_id
    } {} {} {} c:/web/openacs-4/packages/survey/www/admin/survey-preview.xql}
dbqd.survey.www.admin.survey-toggle.survey_active_toggle {dbqd.survey.www.admin.survey-toggle.survey_active_toggle {
	update surveys 
	set enabled_p = :enabled_p 
	where survey_id = :survey_id
    } {} {} {} c:/web/openacs-4/packages/survey/www/admin/survey-toggle.xql}
dbqd.survey.www.admin.user-responses-delete-oracle.delete_response {dbqd.survey.www.admin.user-responses-delete-oracle.delete_response {
	begin
	  survey_response.remove(:response_id);
	end;
    } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/survey/www/admin/user-responses-delete-oracle.xql}
dbqd.survey.www.admin.user-responses-delete-oracle.get_response_info {dbqd.survey.www.admin.user-responses-delete-oracle.get_response_info {
	select survey_id, survey_response.initial_user_id(response_id) as user_id, response_id, initial_response_id
	from survey_responses
	where survey_id=:survey_id
	and survey_response.initial_user_id(response_id)=:user_id
    } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/survey/www/admin/user-responses-delete-oracle.xql}
dbqd.survey.www.admin.user-responses-delete.delete_response {dbqd.survey.www.admin.user-responses-delete.delete_response {
	begin
	  survey_response__remove(:response_id);
	end;
    } {} {} {postgresql 7.1} c:/web/openacs-4/packages/survey/www/admin/user-responses-delete-postgresql.xql}
dbqd.survey.www.admin.user-responses-delete.get_response_info {dbqd.survey.www.admin.user-responses-delete.get_response_info {
	select survey_id, survey_response__initial_user_id(response_id) as user_id, response_id, initial_response_id
	from survey_responses
	where survey_id=:survey_id
	  and survey_response__initial_user_id(response_id)=:user_id
    } {} {} {postgresql 7.1} c:/web/openacs-4/packages/survey/www/admin/user-responses-delete-postgresql.xql}
dbqd.survey.www.admin.view-text-responses-oracle.all_responses_to_question {dbqd.survey.www.admin.view-text-responses-oracle.all_responses_to_question {
	select
	  $column_name as response,
	  person.name(o.creation_user) as respondent_name,
	  o.creation_date as submission_date,
	  o.creation_user,
	  o.creation_ip as ip_address
	from
	  survey_responses r,
	  survey_question_responses qr,
	  acs_objects o
	where
	  qr.response_id = r.response_id
	  and qr.question_id = :question_id
	  and o.object_id = qr.response_id
	order by submission_date
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/survey/www/admin/view-text-responses-oracle.xql}
dbqd.survey.www.admin.view-text-responses.all_responses_to_question {dbqd.survey.www.admin.view-text-responses.all_responses_to_question {
      
	select
	  $column_name as response,
	  person__name(acs_object__get_attribute(r.response_id,'creation_user')::text::integer) as respondent_name,
	  acs_object__get_attribute(r.response_id,'creation_date') as submission_date,
	  acs_object__get_attribute(r.response_id,'creation_user') as creation_user,
	  acs_object__get_attribute(r.response_id,'creation_ip') as ip_address
	from
	  survey_responses r,
	  survey_question_responses qr
	where
	  qr.response_id = r.response_id
	  and qr.question_id = :question_id
	  order by submission_date
    } {} {} {postgresql 7.1} c:/web/openacs-4/packages/survey/www/admin/view-text-responses-postgresql.xql}
dbqd.survey.www.admin.view-text-responses.one_question {dbqd.survey.www.admin.view-text-responses.one_question {
	select sq.question_text, sq.section_id
	from survey_questions sq, survey_sections sec
	where sq.question_id = :question_id
	and sq.section_id = sec.section_id
      } {} {} {} c:/web/openacs-4/packages/survey/www/admin/view-text-responses.xql}
dbqd.survey.www.admin.view-text-responses.abstract_data_type {dbqd.survey.www.admin.view-text-responses.abstract_data_type {
	select abstract_data_type
	from survey_questions q
	where question_id = :question_id
    } {} {} {} c:/web/openacs-4/packages/survey/www/admin/view-text-responses.xql}
dbqd.survey.www.index-oracle.survey_select {dbqd.survey.www.index-oracle.survey_select {

select s.survey_id, s.name, s.editable_p, s.single_response_p,
       sr.response_id, to_char(sr.creation_date,'Month FMDD, YYYY') as creation_date
  from surveys s ,(select survey_id, response_id, creation_date
          from survey_responses_latest
	 where initial_user_id = :user_id) sr
 where s.package_id=:package_id
and s.survey_id = sr.survey_id(+)
and s.enabled_p='t'
 order by upper(s.name)

    	} {} {} {oracle 8.1.6} c:/web/openacs-4/packages/survey/www/index-oracle.xql}
dbqd.survey.www.index.survey_select {dbqd.survey.www.index.survey_select {

select s.survey_id, s.name, s.editable_p, s.single_response_p,
       sr.response_id, to_char(sr.creation_date, 'Month FMDD, YYYY') as creation_date
  from surveys s left outer join 
       (select survey_id, response_id, creation_date
          from survey_responses_latest
	 where initial_user_id = :user_id) sr
    on (s.survey_id = sr.survey_id)
 where s.package_id=:package_id
   and s.enabled_p='t'
 order by upper(s.name)

    	} {} {} {postgresql 7.1} c:/web/openacs-4/packages/survey/www/index-postgresql.xql}
dbqd.survey.www.one-respondent.survey_exists {dbqd.survey.www.one-respondent.survey_exists {
      
		select 1 from surveys where survey_id = :survey_id
	    
      } {} {} {} c:/web/openacs-4/packages/survey/www/one-respondent.xql}
dbqd.survey.www.one-respondent.responses_select {dbqd.survey.www.one-respondent.responses_select {

    select response_id, creation_date, 
           to_char(creation_date, 'YYYY-MM-DD') as pretty_submission_date_ansi
    from survey_responses_latest
    where survey_id=:survey_id
    and initial_user_id = :user_id
    order by creation_date desc

      } {} {} {} c:/web/openacs-4/packages/survey/www/one-respondent.xql}
dbqd.survey.www.one-survey-oracle.get_survey_details {dbqd.survey.www.one-survey-oracle.get_survey_details {

select s.survey_id, s.name, s.editable_p, s.single_response_p,
       sr.response_id, sr.creation_date
  from surveys s ,(select survey_id, response_id, creation_date
          from survey_responses_latest
	 where initial_user_id = :user_id) sr
 where s.survey_id=:survey_id
and s.package_id=:package_id
and s.survey_id = sr.survey_id(+)
and s.enabled_p='t'
order by sr.creation_date desc

    	} {} {} {oracle 8.1.6} c:/web/openacs-4/packages/survey/www/one-survey-oracle.xql}
dbqd.survey.www.one-survey.get_survey_details {dbqd.survey.www.one-survey.get_survey_details {

select s.survey_id, s.name, s.editable_p, s.single_response_p,
       sr.response_id, sr.creation_date
  from surveys s left outer join 
       (select survey_id, response_id, creation_date
          from survey_responses_latest
	 where initial_user_id = :user_id) sr
    on (s.survey_id = sr.survey_id)
 where s.survey_id=:survey_id
   and s.package_id=:package_id
   and s.enabled_p='t'
 order by upper(s.name)

    	} {} {} {postgresql 7.1} c:/web/openacs-4/packages/survey/www/one-survey-postgresql.xql}
dbqd.survey.www.process-response-oracle.create_response {dbqd.survey.www.process-response-oracle.create_response {
      
	begin
	    :1 := survey_response.new (
		response_id => :response_id,
		survey_id => :survey_id,		
		context_id => :survey_id,
		creation_user => :user_id,
		initial_response_id => :initial_response_id
	    );
	end;
    
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/survey/www/process-response-oracle.xql}
dbqd.survey.www.process-response-oracle.survey_question_response_text_insert {dbqd.survey.www.process-response-oracle.survey_question_response_text_insert {

      insert into survey_question_responses
      (response_id, question_id, clob_answer)
      values 
      (:response_id, :question_id, empty_clob())
      returning clob_answer into :1

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/survey/www/process-response-oracle.xql}
dbqd.survey.www.process-response-oracle.create_item {dbqd.survey.www.process-response-oracle.create_item {

       begin
           :1 := content_item.new (
           name => :name,
           creation_ip => :creation_ip
	   );
       end;

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/survey/www/process-response-oracle.xql}
dbqd.survey.www.process-response.create_response {dbqd.survey.www.process-response.create_response {
	select survey_response__new (
		:response_id,
		:survey_id,		
		null,
		'f',
		:user_id,
		:creation_ip,
		:survey_id,
		:initial_response_id
	    )
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/survey/www/process-response-postgresql.xql}
dbqd.survey.www.process-response.survey_question_response_text_insert {dbqd.survey.www.process-response.survey_question_response_text_insert {

      insert into survey_question_responses
      (response_id, question_id, clob_answer)
      values 
      (:response_id, :question_id, :response_value)

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/survey/www/process-response-postgresql.xql}
dbqd.survey.www.process-response.get_response_count {dbqd.survey.www.process-response.get_response_count {
	select count(*) from survey_responses
	where response_id=:new_response_id
    } {} {} {} c:/web/openacs-4/packages/survey/www/process-response.xql}
dbqd.survey.www.process-response.section_exists {dbqd.survey.www.process-response.section_exists {
      
	    select 1 from survey_sections where section_id = :section_id
	
      } {} {} {} c:/web/openacs-4/packages/survey/www/process-response.xql}
dbqd.survey.www.process-response.survey_question_info_list {dbqd.survey.www.process-response.survey_question_info_list {
      
	    select question_id, question_text, abstract_data_type, presentation_type, required_p
	    from survey_questions
	    where section_id = :section_id
	    and active_p = 't'
	    order by sort_order
	
      } {} {} {} c:/web/openacs-4/packages/survey/www/process-response.xql}
dbqd.survey.www.process-response.survey_question_info_list {dbqd.survey.www.process-response.survey_question_info_list {
      
	    select question_id, question_text, abstract_data_type, presentation_type, required_p
	    from survey_questions
	    where section_id = :section_id
	    and active_p = 't'
	    order by sort_order
	
      } {} {} {} c:/web/openacs-4/packages/survey/www/process-response.xql}
dbqd.survey.www.process-response.survey_question_response_checkbox_insert {dbqd.survey.www.process-response.survey_question_response_checkbox_insert {
      insert into survey_question_responses (response_id, question_id, choice_id)
 values (:response_id, :question_id, :response_value)
      } {} {} {} c:/web/openacs-4/packages/survey/www/process-response.xql}
dbqd.survey.www.process-response.survey_question_response_choice_insert {dbqd.survey.www.process-response.survey_question_response_choice_insert {
      insert into survey_question_responses (response_id, question_id, choice_id)
 values (:response_id, :question_id, :response_value)
      } {} {} {} c:/web/openacs-4/packages/survey/www/process-response.xql}
dbqd.survey.www.process-response.survey_question_choice_shorttext_insert {dbqd.survey.www.process-response.survey_question_choice_shorttext_insert {
      insert into survey_question_responses (response_id, question_id, varchar_answer)
 values (:response_id, :question_id, :response_value)
      } {} {} {} c:/web/openacs-4/packages/survey/www/process-response.xql}
dbqd.survey.www.process-response.survey_question_response_boolean_insert {dbqd.survey.www.process-response.survey_question_response_boolean_insert {
      insert into survey_question_responses (response_id, question_id, boolean_answer)
 values (:response_id, :question_id, :response_value)
      } {} {} {} c:/web/openacs-4/packages/survey/www/process-response.xql}
dbqd.survey.www.process-response.survey_question_response_integer_insert {dbqd.survey.www.process-response.survey_question_response_integer_insert {
      insert into survey_question_responses (response_id, question_id, number_answer)
 values (:response_id, :question_id, :response_value)
      } {} {} {} c:/web/openacs-4/packages/survey/www/process-response.xql}
dbqd.survey.www.process-response.survey_question_response_date_insert {dbqd.survey.www.process-response.survey_question_response_date_insert {
      insert into survey_question_responses (response_id, question_id, date_answer)
 values (:response_id, :question_id, :response_value)
      } {} {} {} c:/web/openacs-4/packages/survey/www/process-response.xql}
dbqd.survey.www.process-response.get_type {dbqd.survey.www.process-response.get_type {
      select type from survey_sections where section_id = :section_id
      } {} {} {} c:/web/openacs-4/packages/survey/www/process-response.xql}
dbqd.survey.www.process-response.survey_name_from_id {dbqd.survey.www.process-response.survey_name_from_id {
      select name from survey_sections where section_id = :section_id
      } {} {} {} c:/web/openacs-4/packages/survey/www/process-response.xql}
dbqd.survey.www.process-response.survey_question_response_file_attachment_insert {dbqd.survey.www.process-response.survey_question_response_file_attachment_insert {
      insert into survey_question_responses
      (response_id, question_id, attachment_file)
       values
      (:response_id, :question_id, :revision_id)
      } {} {} {} c:/web/openacs-4/packages/survey/www/process-response.xql}
dbqd.survey.www.respond-oracle.get_initial_response {dbqd.survey.www.respond-oracle.get_initial_response {
      
	select nvl(initial_response_id,response_id) as initial_response_id from survey_responses where response_id=:response_id

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/survey/www/respond-oracle.xql}
dbqd.survey.www.respond.get_initial_response {dbqd.survey.www.respond.get_initial_response {
      
	select coalesce(initial_response_id,response_id) as initial_response_id  from survey_responses where reponse_id=:response_id

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/survey/www/respond-postgresql.xql}
dbqd.survey.www.respond.survey_exists {dbqd.survey.www.respond.survey_exists {
     
	    select 1 from surveys where survey_id = :survey_id
	
      } {} {} {} c:/web/openacs-4/packages/survey/www/respond.xql}
dbqd.survey.www.respond.question_ids_select {dbqd.survey.www.respond.question_ids_select {
      
    select question_id
    from survey_questions  
    where section_id = :section_id
    and active_p = 't'
    order by sort_order

      } {} {} {} c:/web/openacs-4/packages/survey/www/respond.xql}
dbqd.survey.www.respond.survey_sections {dbqd.survey.www.respond.survey_sections {
select section_id from survey_sections
where survey_id=:survey_id
} {} {} {} c:/web/openacs-4/packages/survey/www/respond.xql}
dbqd.survey.www.respond.count_responses {dbqd.survey.www.respond.count_responses {
      select count(*) from survey_responses, 
	acs_objects
	where survey_id=:survey_id
	and survey_responses.response_id=acs_objects.object_id
	and acs_objects.creation_user=:user_id
	and initial_response_id is null
      } {} {} {} c:/web/openacs-4/packages/survey/www/respond.xql}
dbqd.survey.www.response.get_initial_response {dbqd.survey.www.response.get_initial_response {
	select survey_response__initial_response_id(:response_id) as initial_response_id
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/survey/www/response-postgresql.xql}
dbqd.survey.www.response.count_responses {dbqd.survey.www.response.count_responses {
      select count(*) from survey_responses
	where survey_id=:survey_id
	and survey_response__initial_user_id(response_id)=:user_id
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/survey/www/response-postgresql.xql}
dbqd.survey.www.view-attachment.get_file_info {dbqd.survey.www.view-attachment.get_file_info {
	select r.revision_id, r.mime_type as file_type
	from cr_revisions r
	where revision_id=(
		select attachment_answer from survey_question_responses
		where question_id=:question_id
                and   response_id=:response_id
			  )
      } {} {} {} c:/web/openacs-4/packages/survey/www/view-attachment.xql}
dbqd.trackback.tcl.trackback-procs.trackback::new.add_trackback {dbqd.trackback.tcl.trackback-procs.trackback::new.add_trackback {
            insert into trackback_pings
	    (tb_url, comment_id, name)
	    values
	    (:tb_url, :comment_id, :blog_name)
	} {} {} {} c:/web/openacs-4/packages/trackback/tcl/trackback-procs.xql}
dbqd.user-preferences.tcl.preference-procs-oracle.preference::set_package_default.set_package_default {dbqd.user-preferences.tcl.preference-procs-oracle.preference::set_package_default.set_package_default {
declare begin
  user_pref_type.set_package_default(
       preference_type_id => :preference_type_id,
       package_id => :package_id,
       default_value => :default_value
  );
end;
} {} {} {oracle 8.1.6} c:/web/openacs-4/packages/user-preferences/tcl/preference-procs-oracle.xql}
dbqd.user-preferences.tcl.preference-procs-oracle.preference::set_user_pref.set_user_pref {dbqd.user-preferences.tcl.preference-procs-oracle.preference::set_user_pref.set_user_pref {
declare begin
   user_pref_type.set_user_pref(
        preference_type_id => :preference_type_id,
        package_id => :package_id,
        user_id => :user_id,
        value => :value
   );
end;
} {} {} {oracle 8.1.6} c:/web/openacs-4/packages/user-preferences/tcl/preference-procs-oracle.xql}
dbqd.user-preferences.tcl.preference-procs-oracle.preference::get_user_pref.get_user_pref {dbqd.user-preferences.tcl.preference-procs-oracle.preference::get_user_pref.get_user_pref {
declare begin
:1 := user_pref_type.get_user_pref (
           preference_type_id => :preference_type_id,
           package_id => :package_id,
           user_id => :user_id
      );
end;
} {} {} {oracle 8.1.6} c:/web/openacs-4/packages/user-preferences/tcl/preference-procs-oracle.xql}
dbqd.user-preferences.tcl.preference-procs.preference::set_package_default.set_package_default {dbqd.user-preferences.tcl.preference-procs.preference::set_package_default.set_package_default {
select user_pref_type__set_package_default(
       :preference_type_id,
       :package_id,
       :default_value
);
} {} {} {postgresql 7.1} c:/web/openacs-4/packages/user-preferences/tcl/preference-procs-postgresql.xql}
dbqd.user-preferences.tcl.preference-procs.preference::set_user_pref__set_user_pref {dbqd.user-preferences.tcl.preference-procs.preference::set_user_pref__set_user_pref {
select user_pref_type.set_user_pref(
        :preference_type_id,
        :package_id,
        :user_id,
        :value
);
} {} {} {postgresql 7.1} c:/web/openacs-4/packages/user-preferences/tcl/preference-procs-postgresql.xql}
dbqd.user-preferences.tcl.preference-procs.preference::get_user_pref.get_user_pref {dbqd.user-preferences.tcl.preference-procs.preference::get_user_pref.get_user_pref {
select user_pref_type__get_user_pref (
           :preference_type_id,
           :package_id,
           :user_id
      );
} {} {} {postgresql 7.1} c:/web/openacs-4/packages/user-preferences/tcl/preference-procs-postgresql.xql}
dbqd.user-preferences.tcl.preference-procs.preference::get_preference_type_id.select_preference_type_id {dbqd.user-preferences.tcl.preference-procs.preference::get_preference_type_id.select_preference_type_id {
select preference_type_id from user_preference_types
where short_name= :preference_type
} {} {} {} c:/web/openacs-4/packages/user-preferences/tcl/preference-procs.xql}
dbqd.value-based-shipping.tcl.value-based-shipping-procs.get_rates_and_services {dbqd.value-based-shipping.tcl.value-based-shipping-procs.get_rates_and_services {
	select s.service_level_code, round(r.shipping_rate, 2) as shipping_rate
	from vbs_rates r, vbs_service_levels s
	where r.shipping_rate is not null
	and r.service_level_id = s.service_level_id
	and :dest_country_iso = r.country_iso
	and (:dest_zip_code >= r.from_zip_code
	     and :dest_zip_code <= r.to_zip_code
	     and :shipment_value >= r.from_value
	     and (:shipment_value <= r.to_value
		  or (r.to_value is null
		      and not exists (select service_level_id
				      from vbs_rates
				      where :dest_country_iso = country_iso
				      and :dest_zip_code >= from_zip_code
				      and :dest_zip_code <= to_zip_code
				      and :shipment_value >= from_value
				      and :shipment_value <= to_value)))
	     or (r.from_zip_code is null
		 and r.to_zip_code is null
		 and :shipment_value >= r.from_value
		 and (:shipment_value <= r.to_value
		      or (r.to_value is null
			  and not exists (select service_level_id
					  from vbs_rates
					  where :dest_country_iso = country_iso
					  and from_zip_code is null
					  and to_zip_code is null
					  and :shipment_value >= from_value
					  and :shipment_value <= to_value)))
		 and not exists (select service_level_id
				 from vbs_rates
				 where :dest_country_iso = country_iso
				 and :dest_zip_code >= from_zip_code
				 and :dest_zip_code <= to_zip_code)))
	or (r.country_iso is null
	    and r.from_zip_code is null
	    and r.to_zip_code is null
	    and :shipment_value >= r.from_value
	    and (:shipment_value <= r.to_value
		 or (r.to_value is null
		     and not exists (select service_level_id
				     from vbs_rates
				     where :dest_country_iso is null
				     and from_zip_code is null
				     and to_zip_code is null
				     and :shipment_value >= from_value
				     and :shipment_value <= to_value)))
	    and not exists (select service_level_id
			    from vbs_rates
			    where :dest_country_iso = country_iso))
    } {} {} {} c:/web/openacs-4/packages/value-based-shipping/tcl/value-based-shipping-procs.xql}
dbqd.value-based-shipping.tcl.value-based-shipping-procs.get_service_description {dbqd.value-based-shipping.tcl.value-based-shipping-procs.get_service_description {
      select service_level_description
      from vbs_service_levels
      where service_level_code = :service_code
    } {} {} {} c:/web/openacs-4/packages/value-based-shipping/tcl/value-based-shipping-procs.xql}
dbqd.value-based-shipping.www.admin.index.get_package_name {dbqd.value-based-shipping.www.admin.index.get_package_name {
      select p.instance_name 
      from apm_packages p, apm_package_versions v
      where p.package_id = :package_id
      and p.package_key = v.package_key
      and v.enabled_p = 't'
    } {} {} {} c:/web/openacs-4/packages/value-based-shipping/www/admin/index.xql}
dbqd.value-based-shipping.www.admin.level-delete.get_package_name {dbqd.value-based-shipping.www.admin.level-delete.get_package_name {
      select p.instance_name 
      from apm_packages p, apm_package_versions v
      where p.package_id = :package_id
      and p.package_key = v.package_key
      and v.enabled_p = 't'
    } {} {} {} c:/web/openacs-4/packages/value-based-shipping/www/admin/level-delete.xql}
dbqd.value-based-shipping.www.admin.level-delete.get_service_level {dbqd.value-based-shipping.www.admin.level-delete.get_service_level {
      select service_level_id, service_level_code, service_level_description
      from vbs_service_levels
      where service_level_id = :service_level_id
    } {} {} {} c:/web/openacs-4/packages/value-based-shipping/www/admin/level-delete.xql}
dbqd.value-based-shipping.www.admin.level-delete.check_shipping_rates {dbqd.value-based-shipping.www.admin.level-delete.check_shipping_rates {
      select service_level_id 
      from vbs_rates
      where service_level_id = :service_level_id
      limit 1
    } {} {} {} c:/web/openacs-4/packages/value-based-shipping/www/admin/level-delete.xql}
dbqd.value-based-shipping.www.admin.level-delete.delete_service_level {dbqd.value-based-shipping.www.admin.level-delete.delete_service_level {
      delete from vbs_service_levels
      where service_level_id = :service_level_id
    } {} {} {} c:/web/openacs-4/packages/value-based-shipping/www/admin/level-delete.xql}
dbqd.value-based-shipping.www.admin.level-edit.get_package_name {dbqd.value-based-shipping.www.admin.level-edit.get_package_name {
      select p.instance_name 
      from apm_packages p, apm_package_versions v
      where p.package_id = :package_id
      and p.package_key = v.package_key
      and v.enabled_p = 't'
    } {} {} {} c:/web/openacs-4/packages/value-based-shipping/www/admin/level-edit.xql}
dbqd.value-based-shipping.www.admin.level-edit.get_service_level {dbqd.value-based-shipping.www.admin.level-edit.get_service_level {
      select service_level_id, service_level_code, service_level_description
      from vbs_service_levels
      where service_level_id = :service_level_id
    } {} {} {} c:/web/openacs-4/packages/value-based-shipping/www/admin/level-edit.xql}
dbqd.value-based-shipping.www.admin.level-edit.check_service_level {dbqd.value-based-shipping.www.admin.level-edit.check_service_level {
      select service_level_code as orig_service_level_code
      from vbs_service_levels
      where service_level_id = :service_level_id
    } {} {} {} c:/web/openacs-4/packages/value-based-shipping/www/admin/level-edit.xql}
dbqd.value-based-shipping.www.admin.level-edit.update_service_level {dbqd.value-based-shipping.www.admin.level-edit.update_service_level {
      update vbs_service_levels
      set service_level_code = :service_level_code, service_level_description = :service_level_description
      where service_level_id = :service_level_id
    } {} {} {} c:/web/openacs-4/packages/value-based-shipping/www/admin/level-edit.xql}
dbqd.value-based-shipping.www.admin.level-edit.insert_service_level {dbqd.value-based-shipping.www.admin.level-edit.insert_service_level {
      insert into vbs_service_levels
      (service_level_id, service_level_code, service_level_description)
      values
      (:service_level_id, :service_level_code, :service_level_description)
    } {} {} {} c:/web/openacs-4/packages/value-based-shipping/www/admin/level-edit.xql}
dbqd.value-based-shipping.www.admin.levels.get_package_name {dbqd.value-based-shipping.www.admin.levels.get_package_name {
      select p.instance_name 
      from apm_packages p, apm_package_versions v
      where p.package_id = :package_id
      and p.package_key = v.package_key
      and v.enabled_p = 't'
    } {} {} {} c:/web/openacs-4/packages/value-based-shipping/www/admin/levels.xql}
dbqd.value-based-shipping.www.admin.levels.get_service_levels {dbqd.value-based-shipping.www.admin.levels.get_service_levels {
      select *
      from vbs_service_levels
      order by service_level_code
    } {} {} {} c:/web/openacs-4/packages/value-based-shipping/www/admin/levels.xql}
dbqd.value-based-shipping.www.admin.rate-delete-oracle.get_shipping_rate {dbqd.value-based-shipping.www.admin.rate-delete-oracle.get_shipping_rate {
      select l.service_level_description, c.default_name as country, round(r.from_value, 2) as from_value, round(r.to_value, 2) as to_value,  
          r.from_zip_code, r.to_zip_code, round(r.shipping_rate, 2) as shipping_rate
      from vbs_rates r, countries c, vbs_service_levels l
      where r.country_iso = c.iso(+) and r.shipping_rate_id = :shipping_rate_id
      and r.service_level_id = l.service_level_id
    } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/value-based-shipping/www/admin/rate-delete-oracle.xql}
dbqd.value-based-shipping.www.admin.rate-delete.get_shipping_rate {dbqd.value-based-shipping.www.admin.rate-delete.get_shipping_rate {
      select l.service_level_description, c.default_name as country, round(r.from_value, 2) as from_value, round(r.to_value, 2) as to_value,  
	  r.from_zip_code, r.to_zip_code, round(r.shipping_rate, 2) as shipping_rate
      from vbs_rates r left join countries c on (r.country_iso = c.iso), vbs_service_levels l
      where r.shipping_rate_id = :shipping_rate_id
      and r.service_level_id = l.service_level_id
    } {} {} {postgresql 7.1} c:/web/openacs-4/packages/value-based-shipping/www/admin/rate-delete-postgresql.xql}
dbqd.value-based-shipping.www.admin.rate-delete.get_package_name {dbqd.value-based-shipping.www.admin.rate-delete.get_package_name {
      select p.instance_name 
      from apm_packages p, apm_package_versions v
      where p.package_id = :package_id
      and p.package_key = v.package_key
      and v.enabled_p = 't'
    } {} {} {} c:/web/openacs-4/packages/value-based-shipping/www/admin/rate-delete.xql}
dbqd.value-based-shipping.www.admin.rate-delete.delete_shipping_rate {dbqd.value-based-shipping.www.admin.rate-delete.delete_shipping_rate {
      delete from vbs_rates
      where shipping_rate_id = :shipping_rate_id
    } {} {} {} c:/web/openacs-4/packages/value-based-shipping/www/admin/rate-delete.xql}
dbqd.value-based-shipping.www.admin.rate-edit.get_package_name {dbqd.value-based-shipping.www.admin.rate-edit.get_package_name {
      select p.instance_name 
      from apm_packages p, apm_package_versions v
      where p.package_id = :package_id
      and p.package_key = v.package_key
      and v.enabled_p = 't'
    } {} {} {} c:/web/openacs-4/packages/value-based-shipping/www/admin/rate-edit.xql}
dbqd.value-based-shipping.www.admin.rate-edit.get_service_levels {dbqd.value-based-shipping.www.admin.rate-edit.get_service_levels {
      select service_level_description, service_level_id 
      from vbs_service_levels
    } {} {} {} c:/web/openacs-4/packages/value-based-shipping/www/admin/rate-edit.xql}
dbqd.value-based-shipping.www.admin.rate-edit.get_countries {dbqd.value-based-shipping.www.admin.rate-edit.get_countries {
      select default_name, iso 
      from countries
    } {} {} {} c:/web/openacs-4/packages/value-based-shipping/www/admin/rate-edit.xql}
dbqd.value-based-shipping.www.admin.rate-edit.check_shipping_rate {dbqd.value-based-shipping.www.admin.rate-edit.check_shipping_rate {
      select shipping_rate_id
      from vbs_rates
      where shipping_rate_id = :shipping_rate_id
    } {} {} {} c:/web/openacs-4/packages/value-based-shipping/www/admin/rate-edit.xql}
dbqd.value-based-shipping.www.admin.rate-edit.update_shipping_rate {dbqd.value-based-shipping.www.admin.rate-edit.update_shipping_rate {
      update vbs_rates
      set shipping_rate_id = :shipping_rate_id, service_level_id = :service_level_id, country_iso = :country_iso, from_value = :from_value,
      to_value = :to_value, from_zip_code = :from_zip_code, to_zip_code = :to_zip_code, shipping_rate = :shipping_rate
      where shipping_rate_id = :shipping_rate_id
    } {} {} {} c:/web/openacs-4/packages/value-based-shipping/www/admin/rate-edit.xql}
dbqd.value-based-shipping.www.admin.rate-edit.get_shipping_rate {dbqd.value-based-shipping.www.admin.rate-edit.get_shipping_rate {
      select shipping_rate_id, service_level_id, country_iso, round(from_value, 2) as from_value, round(to_value, 2) as to_value, from_zip_code, to_zip_code, 
      round(shipping_rate, 2) as shipping_rate 
      from vbs_rates
      where shipping_rate_id = :shipping_rate_id
    } {} {} {} c:/web/openacs-4/packages/value-based-shipping/www/admin/rate-edit.xql}
dbqd.value-based-shipping.www.admin.rate-edit.double_entry {dbqd.value-based-shipping.www.admin.rate-edit.double_entry {
      select shipping_rate_id
      from vbs_rates
      where service_level_id = :service_level_id 
      and country_iso = :country_iso 
      and from_value = :from_value
      and to_value = :to_value 
      and from_zip_code = :from_zip_code
      and to_zip_code = :to_zip_code
    } {} {} {} c:/web/openacs-4/packages/value-based-shipping/www/admin/rate-edit.xql}
dbqd.value-based-shipping.www.admin.rate-edit.insert_shipping_rate {dbqd.value-based-shipping.www.admin.rate-edit.insert_shipping_rate {
      insert into vbs_rates
      (shipping_rate_id, service_level_id, country_iso, from_value, to_value, from_zip_code, to_zip_code, shipping_rate)
      values
      (:shipping_rate_id, :service_level_id, :country_iso, :from_value, :to_value, :from_zip_code, :to_zip_code, :shipping_rate)
    } {} {} {} c:/web/openacs-4/packages/value-based-shipping/www/admin/rate-edit.xql}
dbqd.value-based-shipping.www.admin.rates-oracle.get_shipping_rates {dbqd.value-based-shipping.www.admin.rates-oracle.get_shipping_rates {
      select r.shipping_rate_id, l.service_level_description, c.default_name as country, round(r.from_value, 2) as from_value, round(r.to_value, 2) as to_value,
          r.from_zip_code, r.to_zip_code, round(r.shipping_rate, 2) as shipping_rate
      from vbs_rates r, countries c, vbs_service_levels l
      where r.country_iso = c.iso(+) and r.service_level_id = l.service_level_id
      order by l.service_level_description, c.default_name, r.from_value, nvl(r.to_value, 0), nvl(r.from_zip_code, '0')
    } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/value-based-shipping/www/admin/rates-oracle.xql}
dbqd.value-based-shipping.www.admin.rates.get_shipping_rates {dbqd.value-based-shipping.www.admin.rates.get_shipping_rates {
      select r.shipping_rate_id, l.service_level_description, c.default_name as country, round(r.from_value, 2) as from_value, round(r.to_value, 2) as to_value,
	  r.from_zip_code, r.to_zip_code, round(r.shipping_rate, 2) as shipping_rate
      from vbs_rates r left join countries c on (r.country_iso = c.iso), vbs_service_levels l
      where r.service_level_id = l.service_level_id
      order by l.service_level_description, c.default_name, r.from_value, coalesce(r.to_value, 0), coalesce(r.from_zip_code, '0')
    } {} {} {postgresql 7.1} c:/web/openacs-4/packages/value-based-shipping/www/admin/rates-postgresql.xql}
dbqd.value-based-shipping.www.admin.rates.get_package_name {dbqd.value-based-shipping.www.admin.rates.get_package_name {
      select p.instance_name 
      from apm_packages p, apm_package_versions v
      where p.package_id = :package_id
      and p.package_key = v.package_key
      and v.enabled_p = 't'
    } {} {} {} c:/web/openacs-4/packages/value-based-shipping/www/admin/rates.xql}
dbqd.value-based-shipping.www.index.get_package_name {dbqd.value-based-shipping.www.index.get_package_name {
      select p.instance_name 
      from apm_packages p, apm_package_versions v
      where p.package_id = :package_id
      and p.package_key = v.package_key
      and v.enabled_p = 't'
    } {} {} {} c:/web/openacs-4/packages/value-based-shipping/www/index.xql}
dbqd.weblogger-portlet.www.weblogger-portlet-oracle.entries {dbqd.weblogger-portlet.www.weblogger-portlet-oracle.entries {
		    select entry_id,
                           acs_object.name(apm_package.parent_id(e.package_id)) as parent_name,
                           (select site_node.url(site_nodes.node_id)
                            from site_nodes
                            where site_nodes.object_id = e.package_id) as base_url,
		           title,
                           content,
		           p.first_names as poster_first_names,
		           p.last_name as poster_last_name,
		           to_char(posted_date , 'HH24:MI') as posted_time_pretty,
		    from   pinds_blog_entries e,
		           acs_objects o,
		           persons p
		    where  e.entry_id = o.object_id
		    and    p.person_id = o.creation_user
		    and    package_id = :package_id
		    and    $date_clause
		    and    draft_p = 'f'
		    and    deleted_p = 'f'
		    order  by entry_date desc, posted_date desc
        } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/weblogger-portlet/www/weblogger-portlet-oracle.xql}
dbqd.weblogger-portlet.www.weblogger-portlet-oracle.delete_item {dbqd.weblogger-portlet.www.weblogger-portlet-oracle.delete_item {
            update na_items set deleted_p = '1' where item_id = :delete_id
          } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/weblogger-portlet/www/weblogger-portlet-oracle.xql}
dbqd.weblogger-portlet.www.weblogger-portlet.entries {dbqd.weblogger-portlet.www.weblogger-portlet.entries {
		    select entry_id,
                           acs_object__name(apm_package__parent_id(e.package_id)) as parent_name,
                           (select site_node__url(site_nodes.node_id)
                               from site_nodes
                               where site_nodes.object_id = e.package_id) as base_url,
		           title,
		           content,
                           p.first_names as poster_first_names,
		           p.last_name as poster_last_name,
			   to_char(posted_date , 'HH24:MI') as posted_time_pretty,
                           package_id
		    from   pinds_blog_entries e join 
		           acs_objects o on (o.object_id = e.entry_id) join 
		           persons p on (p.person_id = o.creation_user)
		    where  package_id in ([join $list_of_package_ids ", "])
		    and    entry_date > current_timestamp - interval '30 days'
		    and    draft_p = 'f'
		    and    deleted_p = 'f'
		    order  by entry_date desc, posted_date desc
        } {} {} {postgresql 7.1} c:/web/openacs-4/packages/weblogger-portlet/www/weblogger-portlet-postgresql.xql}
dbqd.weblogger-portlet.www.weblogger-portlet.delete_item {dbqd.weblogger-portlet.www.weblogger-portlet.delete_item {
            update na_items set deleted_p = '1' where item_id = :delete_id
          } {} {} {postgresql 7.1} c:/web/openacs-4/packages/weblogger-portlet/www/weblogger-portlet-postgresql.xql}
dbqd.workflow.tcl.action-procs-oracle.workflow::action::get_all_info_not_cached.action_info {dbqd.workflow.tcl.action-procs-oracle.workflow::action::get_all_info_not_cached.action_info {
        select a.action_id,
               a.workflow_id,
               a.sort_order,
               a.short_name,
               a.pretty_name,
               a.pretty_past_tense,
               a.edit_fields,
               a.assigned_role,
               (select short_name from workflow_roles where role_id = a.assigned_role) as assigned_role_short_name,
               a.always_enabled_p,
               (select case when count(*) = 1 then 't' else 'f' end 
                from   workflow_initial_action 
                where  workflow_id = a.workflow_id 
                and    action_id = a.action_id
               ) as initial_action_p,
               fa.new_state as new_state_id,
               (select short_name from workflow_fsm_states where state_id = fa.new_state) as new_state
        from   workflow_actions a,
               workflow_fsm_actions fa
        where  a.workflow_id = :workflow_id
          and  fa.action_id = a.action_id
          and  a.action_id = fa.action_id (+)
        order by a.sort_order
    } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/workflow/tcl/action-procs-oracle.xql}
dbqd.workflow.tcl.action-procs-oracle.workflow::action::callback_insert.select_sort_order {dbqd.workflow.tcl.action-procs-oracle.workflow::action::callback_insert.select_sort_order {
        select nvl(max(sort_order),0) + 1
        from   workflow_action_callbacks
        where  action_id = :action_id
    } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/workflow/tcl/action-procs-oracle.xql}
dbqd.workflow.tcl.action-procs-oracle.workflow::action::new.insert_allowed_role {dbqd.workflow.tcl.action-procs-oracle.workflow::action::new.insert_allowed_role {
        insert into workflow_action_allowed_roles
        select :action_id,
                (select role_id
                from workflow_roles
                where workflow_id = :workflow_id
                and short_name = :allowed_role) as role_id
        from dual
    } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/workflow/tcl/action-procs-oracle.xql}
dbqd.workflow.tcl.action-procs.workflow::action::get_all_info_not_cached.action_info {dbqd.workflow.tcl.action-procs.workflow::action::get_all_info_not_cached.action_info {
        select a.action_id,
               a.workflow_id,
               a.sort_order,
               a.short_name,
               a.pretty_name,
               a.pretty_past_tense,
               a.edit_fields,
               a.assigned_role,
               (select short_name from workflow_roles where role_id = a.assigned_role) as assigned_role_short_name,
               a.always_enabled_p,
               (select case when count(*) = 1 then 't' else 'f' end 
                from   workflow_initial_action 
                where  workflow_id = a.workflow_id 
                and    action_id = a.action_id
               ) as initial_action_p,
               fa.new_state as new_state_id,
               (select short_name from workflow_fsm_states where state_id = fa.new_state) as new_state
        from   workflow_actions a left outer join 
               workflow_fsm_actions fa on (a.action_id = fa.action_id) 
        where  a.workflow_id = :workflow_id
          and  fa.action_id = a.action_id
        order by a.sort_order
    } {} {} {postgresql 7.2} c:/web/openacs-4/packages/workflow/tcl/action-procs-postgresql.xql}
dbqd.workflow.tcl.action-procs.workflow::action::callback_insert.select_sort_order {dbqd.workflow.tcl.action-procs.workflow::action::callback_insert.select_sort_order {
        select coalesce(max(sort_order),0) + 1
        from   workflow_action_callbacks
        where  action_id = :action_id
    } {} {} {postgresql 7.2} c:/web/openacs-4/packages/workflow/tcl/action-procs-postgresql.xql}
dbqd.workflow.tcl.action-procs.workflow::action::new.insert_allowed_role {dbqd.workflow.tcl.action-procs.workflow::action::new.insert_allowed_role {
        insert into workflow_action_allowed_roles
        select :action_id,
                (select role_id
                from workflow_roles
                where workflow_id = :workflow_id
                and short_name = :allowed_role) as role_id
    } {} {} {postgresql 7.2} c:/web/openacs-4/packages/workflow/tcl/action-procs-postgresql.xql}
dbqd.workflow.tcl.action-procs.workflow::action::new.select_sort_order_p {dbqd.workflow.tcl.action-procs.workflow::action::new.select_sort_order_p {
        select count(*)
        from   workflow_actions
        where  workflow_id = :workflow_id
        and    sort_order = :sort_order
    } {} {} {} c:/web/openacs-4/packages/workflow/tcl/action-procs.xql}
dbqd.workflow.tcl.action-procs.workflow::action::new.update_sort_order {dbqd.workflow.tcl.action-procs.workflow::action::new.update_sort_order {
        update workflow_actions
        set    sort_order = sort_order + 1
        where  workflow_id = :workflow_id
        and    sort_order >= :sort_order
    } {} {} {} c:/web/openacs-4/packages/workflow/tcl/action-procs.xql}
dbqd.workflow.tcl.action-procs.workflow::action::new.insert_privilege {dbqd.workflow.tcl.action-procs.workflow::action::new.insert_privilege {
        insert into workflow_action_privileges
                (action_id, privilege)
         values (:action_id, :privilege)
    } {} {} {} c:/web/openacs-4/packages/workflow/tcl/action-procs.xql}
dbqd.workflow.tcl.action-procs.workflow::action::new.insert_action {dbqd.workflow.tcl.action-procs.workflow::action::new.insert_action {
        insert into workflow_actions
            (action_id, workflow_id, sort_order, short_name, pretty_name, pretty_past_tense, 
             edit_fields, assigned_role, always_enabled_p)
      values (:action_id, :workflow_id, :sort_order, :short_name, :pretty_name, :pretty_past_tense, 
              :edit_fields, :assigned_role_id, :always_enabled_p)
    } {} {} {} c:/web/openacs-4/packages/workflow/tcl/action-procs.xql}
dbqd.workflow.tcl.action-procs.workflow::action::new.insert_initial_action {dbqd.workflow.tcl.action-procs.workflow::action::new.insert_initial_action { 
        insert into workflow_initial_action
                (workflow_id, action_id)
         values (:workflow_id, :action_id)
    } {} {} {} c:/web/openacs-4/packages/workflow/tcl/action-procs.xql}
dbqd.workflow.tcl.action-procs.workflow::action::get_all_info_not_cached.select_privileges {dbqd.workflow.tcl.action-procs.workflow::action::get_all_info_not_cached.select_privileges {
      select p.privilege,
             p.action_id
      from   workflow_action_privileges p,
             workflow_actions a
      where  a.action_id = p.action_id
        and  a.workflow_id = :workflow_id
      order  by privilege
    } {} {} {} c:/web/openacs-4/packages/workflow/tcl/action-procs.xql}
dbqd.workflow.tcl.action-procs.workflow::action::get_workflow_id_not_cached.select_workflow_id {dbqd.workflow.tcl.action-procs.workflow::action::get_workflow_id_not_cached.select_workflow_id {
        select workflow_id
        from workflow_actions
        where action_id = :action_id
    } {} {} {} c:/web/openacs-4/packages/workflow/tcl/action-procs.xql}
dbqd.workflow.tcl.action-procs.workflow::action::get_all_info_not_cached.action_callbacks {dbqd.workflow.tcl.action-procs.workflow::action::get_all_info_not_cached.action_callbacks {
      select impl.impl_id,
             impl.impl_name,
             impl.impl_owner_name,
             ctr.contract_name,
             a.action_id
      from   workflow_action_callbacks ac,
             workflow_actions a,
             acs_sc_impls impl,
             acs_sc_bindings bind,
             acs_sc_contracts ctr
      where  ac.action_id = a.action_id
      and    a.workflow_id = :workflow_id
      and    impl.impl_id = ac.acs_sc_impl_id
      and    impl.impl_id = bind.impl_id
      and    bind.contract_id = ctr.contract_id
      order  by a.action_id, ac.sort_order
    } {} {} {} c:/web/openacs-4/packages/workflow/tcl/action-procs.xql}
dbqd.workflow.tcl.action-procs.workflow::action::get_all_info_not_cached.action_allowed_roles {dbqd.workflow.tcl.action-procs.workflow::action::get_all_info_not_cached.action_allowed_roles {
      select r.short_name,
             r.role_id,
             aar.action_id
      from   workflow_roles r,
             workflow_action_allowed_roles aar
      where  r.workflow_id = :workflow_id
      and    r.role_id = aar.role_id
      order  by r.sort_order
    } {} {} {} c:/web/openacs-4/packages/workflow/tcl/action-procs.xql}
dbqd.workflow.tcl.action-procs.workflow::action::get_all_info_not_cached.action_enabled_short_name {dbqd.workflow.tcl.action-procs.workflow::action::get_all_info_not_cached.action_enabled_short_name {
        select s.short_name,
               waeis.action_id,
               waeis.assigned_p
        from   workflow_fsm_action_en_in_st waeis,
               workflow_actions a,
               workflow_fsm_states s
        where  waeis.action_id = a.action_id
        and    a.workflow_id = :workflow_id
        and    s.state_id = waeis.state_id
        order  by s.sort_order
    } {} {} {} c:/web/openacs-4/packages/workflow/tcl/action-procs.xql}
dbqd.workflow.tcl.action-procs.workflow::action::callback_insert.insert_callback {dbqd.workflow.tcl.action-procs.workflow::action::callback_insert.insert_callback {
        insert into workflow_action_callbacks (action_id, acs_sc_impl_id, sort_order)
        values (:action_id, :acs_sc_impl_id, :sort_order)
    } {} {} {} c:/web/openacs-4/packages/workflow/tcl/action-procs.xql}
dbqd.workflow.tcl.action-procs.workflow::action::fsm::new.insert_fsm_action {dbqd.workflow.tcl.action-procs.workflow::action::fsm::new.insert_fsm_action {
        insert into workflow_fsm_actions
                (action_id, new_state)
            values
                (:action_id, :new_state_id)        
    } {} {} {} c:/web/openacs-4/packages/workflow/tcl/action-procs.xql}
dbqd.workflow.tcl.action-procs.workflow::action::fsm::new.insert_enabled_state {dbqd.workflow.tcl.action-procs.workflow::action::fsm::new.insert_enabled_state {
        insert into workflow_fsm_action_en_in_st
                (action_id, state_id, assigned_p)
         values (:action_id, :enabled_state_id, :assigned_p)
    } {} {} {} c:/web/openacs-4/packages/workflow/tcl/action-procs.xql}
dbqd.workflow.tcl.case-procs-oracle.workflow::case::fsm::get_info_not_cached.select_case_info {dbqd.workflow.tcl.case-procs-oracle.workflow::case::fsm::get_info_not_cached.select_case_info {
      select c.case_id,
             c.workflow_id,
             c.object_id,
             s.state_id,
             s.short_name as state_short_name,
             s.pretty_name as pretty_state,
             s.hide_fields as state_hide_fields
      from   workflow_cases c,
             workflow_case_fsm cfsm,
             workflow_fsm_states s
      where  c.case_id = :case_id
      and    cfsm.case_id = c.case_id
      and    s.state_id (+) = cfsm.current_state
    } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/workflow/tcl/case-procs-oracle.xql}
dbqd.workflow.tcl.case-procs-oracle.workflow::case::role::get_assignees_not_cached.select_assignees {dbqd.workflow.tcl.case-procs-oracle.workflow::case::role::get_assignees_not_cached.select_assignees {
        select m.party_id, 
               p.email,
               acs_object.name(m.party_id) as name
        from   workflow_case_role_party_map m,
               parties p
        where  m.case_id = :case_id
        and    m.role_id = :role_id
        and    p.party_id = m.party_id
    } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/workflow/tcl/case-procs-oracle.xql}
dbqd.workflow.tcl.case-procs-oracle.workflow::case::get_activity_log_info_not_cached.select_log {dbqd.workflow.tcl.case-procs-oracle.workflow::case::get_activity_log_info_not_cached.select_log {
        select l.entry_id,
               l.case_id,
               l.action_id,
               a.short_name as action_short_name,
               a.pretty_past_tense as action_pretty_past_tense,
               io.creation_user,
               iou.first_names as user_first_names,
               iou.last_name as user_last_name,
               iou.email as user_email,
               io.creation_date,
               to_char(io.creation_date, 'fmMM/DDfm/YYYY') as creation_date_pretty,
               blob_to_string(r.content) as comment_string, -- needs il8-ing...
               r.mime_type as comment_mime_type,
               d.key,
               d.value
        from   workflow_case_log l,
               workflow_actions a,
               cr_items i,
               acs_objects io,
               cc_users iou,
               cr_revisions r,
               workflow_case_log_data d
        where  l.case_id = :case_id
          and  l.action_id = a.action_id
          and  i.item_id = l.entry_id
          and  io.object_id = i.item_id
          and  iou.user_id = io.creation_user
          and  r.revision_id = i.live_revision
          and  d.entry_id (+) = l.entry_id
        order  by creation_date
    } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/workflow/tcl/case-procs-oracle.xql}
dbqd.workflow.tcl.case-procs-oracle.workflow::case::role::get_search_query.select_search_results {dbqd.workflow.tcl.case-procs-oracle.workflow::case::role::get_search_query.select_search_results {
        select distinct acs_object.name(p.party_id) || ' (' || p.email || ')' as label, p.party_id
        from   [ad_decode $subquery "" "cc_users" $subquery] p
        where  upper(nvl(acs_object.name(p.party_id) || ' ', '')  || p.email) like upper('%'||:value||'%')
        order  by label
    } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/workflow/tcl/case-procs-oracle.xql}
dbqd.workflow.tcl.case-procs-oracle.workflow::case::role::get_picklist.select_options {dbqd.workflow.tcl.case-procs-oracle.workflow::case::role::get_picklist.select_options {
        select acs_object.name(p.party_id) || ' (' || p.email || ')'  as label, p.party_id
        from   parties p
        where  p.party_id in ([join $party_id_list ", "])
        order  by label
    } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/workflow/tcl/case-procs-oracle.xql}
dbqd.workflow.tcl.case-procs-oracle.workflow::case::action::notify.select_object_name {dbqd.workflow.tcl.case-procs-oracle.workflow::case::action::notify.select_object_name {
        select acs_object.name(:object_id) as name from dual
    } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/workflow/tcl/case-procs-oracle.xql}
dbqd.workflow.tcl.case-procs-oracle.workflow::case::delete.delete_case {dbqd.workflow.tcl.case-procs-oracle.workflow::case::delete.delete_case {
        begin
            :1 := workflow_case.del(:case_id);
        end;
    } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/workflow/tcl/case-procs-oracle.xql}
dbqd.workflow.tcl.case-procs.workflow::case::fsm::get_info_not_cached.select_case_info {dbqd.workflow.tcl.case-procs.workflow::case::fsm::get_info_not_cached.select_case_info {
      select c.case_id,
             c.workflow_id,
             c.object_id,
             s.state_id,
             s.short_name as state_short_name,
             s.pretty_name as pretty_state,
             s.hide_fields as state_hide_fields
      from   workflow_cases c,
             workflow_case_fsm cfsm left outer join
             workflow_fsm_states s on (s.state_id = cfsm.current_state)
      where  c.case_id = :case_id
      and    cfsm.case_id = c.case_id
    } {} {} {postgresql 7.2} c:/web/openacs-4/packages/workflow/tcl/case-procs-postgresql.xql}
dbqd.workflow.tcl.case-procs.workflow::case::role::get_assignees_not_cached.select_assignees {dbqd.workflow.tcl.case-procs.workflow::case::role::get_assignees_not_cached.select_assignees {
        select m.party_id, 
               p.email,
               acs_object__name(m.party_id) as name
        from   workflow_case_role_party_map m,
               parties p
        where  m.case_id = :case_id
        and    m.role_id = :role_id
        and    p.party_id = m.party_id
    } {} {} {postgresql 7.2} c:/web/openacs-4/packages/workflow/tcl/case-procs-postgresql.xql}
dbqd.workflow.tcl.case-procs.workflow::case::get_activity_log_info_not_cached.select_log {dbqd.workflow.tcl.case-procs.workflow::case::get_activity_log_info_not_cached.select_log {
        select l.entry_id,
               l.case_id,
               l.action_id,
               a.short_name as action_short_name,
               a.pretty_past_tense as action_pretty_past_tense,
               io.creation_user,
               iou.first_names as user_first_names,
               iou.last_name as user_last_name,
               iou.email as user_email,
               io.creation_date,
               to_char(io.creation_date, 'fmMM/DDfm/YYYY') as creation_date_pretty,
               r.content as comment_string,
               r.mime_type as comment_mime_type,
               d.key,
               d.value
        from   workflow_case_log l join 
               workflow_actions a using (action_id) join 
               cr_items i on (i.item_id = l.entry_id) join 
               acs_objects io on (io.object_id = i.item_id) join 
               cc_users iou on (iou.user_id = io.creation_user) join
               cr_revisions r on (r.revision_id = i.live_revision) left outer join 
               workflow_case_log_data d using (entry_id)
        where  l.case_id = :case_id
        order  by creation_date
    } {} {} {postgresql 7.2} c:/web/openacs-4/packages/workflow/tcl/case-procs-postgresql.xql}
dbqd.workflow.tcl.case-procs.workflow::case::action::notify.select_object_name {dbqd.workflow.tcl.case-procs.workflow::case::action::notify.select_object_name {
        select acs_object__name(:object_id) as name
    } {} {} {postgresql 7.2} c:/web/openacs-4/packages/workflow/tcl/case-procs-postgresql.xql}
dbqd.workflow.tcl.case-procs.workflow::case::role::get_search_query.select_search_results {dbqd.workflow.tcl.case-procs.workflow::case::role::get_search_query.select_search_results {
        select distinct acs_object__name(p.party_id) || ' (' || p.email || ')' as label, p.party_id
        from   [ad_decode $subquery "" "cc_users" $subquery] p
        where  upper(coalesce(acs_object__name(p.party_id) || ' ', '')  || p.email) like upper('%'||:value||'%')
        order  by label
    } {} {} {postgresql 7.2} c:/web/openacs-4/packages/workflow/tcl/case-procs-postgresql.xql}
dbqd.workflow.tcl.case-procs.workflow::case::role::get_picklist.select_options {dbqd.workflow.tcl.case-procs.workflow::case::role::get_picklist.select_options {
        select acs_object__name(p.party_id) || ' (' || p.email || ')'  as label, p.party_id
        from   parties p
        where  p.party_id in ([join $party_id_list ", "])
        order  by label
    } {} {} {postgresql 7.2} c:/web/openacs-4/packages/workflow/tcl/case-procs-postgresql.xql}
dbqd.workflow.tcl.case-procs.workflow::case::delete.delete_case {dbqd.workflow.tcl.case-procs.workflow::case::delete.delete_case {
	select workflow_case_pkg__delete(:case_id)
    } {} {} {postgresql 7.2} c:/web/openacs-4/packages/workflow/tcl/case-procs-postgresql.xql}
dbqd.workflow.tcl.case-procs.workflow::case::insert.select_initial_state {dbqd.workflow.tcl.case-procs.workflow::case::insert.select_initial_state {
      select state_id
      from   workflow_fsm_states
      where  workflow_id = :workflow_id
      order  by sort_order
      limit  1
    } {} {} {} c:/web/openacs-4/packages/workflow/tcl/case-procs.xql}
dbqd.workflow.tcl.case-procs.workflow::case::insert.insert_case {dbqd.workflow.tcl.case-procs.workflow::case::insert.insert_case {
      insert into workflow_cases (
        case_id, workflow_id, object_id
      ) values (
        :case_id, :workflow_id, :object_id
      )      
    } {} {} {} c:/web/openacs-4/packages/workflow/tcl/case-procs.xql}
dbqd.workflow.tcl.case-procs.workflow::case::insert.insert_case_fsm {dbqd.workflow.tcl.case-procs.workflow::case::insert.insert_case_fsm {
      insert into workflow_case_fsm (
        case_id, current_state
      ) values (
        :case_id, null
      )
    } {} {} {} c:/web/openacs-4/packages/workflow/tcl/case-procs.xql}
dbqd.workflow.tcl.case-procs.workflow::case::get_id.select_case_id {dbqd.workflow.tcl.case-procs.workflow::case::get_id.select_case_id {
      select case_id
      from   workflow_cases c, 
             workflows w
      where  c.object_id = :object_id
      and    w.workflow_id = c.workflow_id
      and    w.short_name = :workflow_short_name
    } {} {} {} c:/web/openacs-4/packages/workflow/tcl/case-procs.xql}
dbqd.workflow.tcl.case-procs.workflow::case::get_user_roles_not_cached.select_user_roles {dbqd.workflow.tcl.case-procs.workflow::case::get_user_roles_not_cached.select_user_roles {
      select distinct role_id
      from   workflow_case_role_user_map
      where  case_id = :case_id
      and    user_id = :user_id
    } {} {} {} c:/web/openacs-4/packages/workflow/tcl/case-procs.xql}
dbqd.workflow.tcl.case-procs.workflow::case::get_enabled_actions_not_cached.select_enabled_actions {dbqd.workflow.tcl.case-procs.workflow::case::get_enabled_actions_not_cached.select_enabled_actions {
      select a.action_id
      from   workflow_cases c,
             workflow_actions a
      where  c.case_id = :case_id
      and    a.workflow_id = c.workflow_id
      and    not exists (select 1 
                         from   workflow_initial_action wia
                         where  wia.workflow_id = c.workflow_id
                         and    wia.action_id = a.action_id)
      and    (a.always_enabled_p = 't' 
             or exists (select 1 
                        from   workflow_case_fsm cfsm,
                               workflow_fsm_action_en_in_st waeis
                        where  cfsm.case_id = c.case_id
                        and    waeis.state_id = cfsm.current_state
                        and    waeis.action_id = a.action_id))
      order by a.sort_order
    } {} {} {} c:/web/openacs-4/packages/workflow/tcl/case-procs.xql}
dbqd.workflow.tcl.case-procs.workflow::case::assign_roles.select_num_assignees {dbqd.workflow.tcl.case-procs.workflow::case::assign_roles.select_num_assignees {
      select count(*)
      from   workflow_case_role_user_map
      where  case_id = :case_id
      and    role_id = :role_id
    } {} {} {} c:/web/openacs-4/packages/workflow/tcl/case-procs.xql}
dbqd.workflow.tcl.case-procs.workflow::case::add_log_data.insert_log_data {dbqd.workflow.tcl.case-procs.workflow::case::add_log_data.insert_log_data {
      insert into workflow_case_log_data
        (entry_id, key, value)
      values
        (:entry_id, :key, :value)
    } {} {} {} c:/web/openacs-4/packages/workflow/tcl/case-procs.xql}
dbqd.workflow.tcl.case-procs.workflow::case::get_log_data_by_key.select_log_data {dbqd.workflow.tcl.case-procs.workflow::case::get_log_data_by_key.select_log_data {
      select value
      from   workflow_case_log_data
      where  entry_id = :entry_id
      and    key = :key
    } {} {} {} c:/web/openacs-4/packages/workflow/tcl/case-procs.xql}
dbqd.workflow.tcl.case-procs.workflow::case::get_log_data.select_log_data {dbqd.workflow.tcl.case-procs.workflow::case::get_log_data.select_log_data {
      select key, value
      from   workflow_case_log_data
      where  entry_id = :entry_id
      order  by key
    } {} {} {} c:/web/openacs-4/packages/workflow/tcl/case-procs.xql}
dbqd.workflow.tcl.case-procs.workflow::case::role::get_callbacks.select_callbacks {dbqd.workflow.tcl.case-procs.workflow::case::role::get_callbacks.select_callbacks {
      select impl.impl_name
      from   workflow_role_callbacks r,
             acs_sc_impls impl,
             acs_sc_bindings bind,
             acs_sc_contracts ctr
      where  r.role_id = :role_id
      and    impl.impl_id = r.acs_sc_impl_id
      and    impl.impl_id = bind.impl_id
      and    bind.contract_id = ctr.contract_id
      and    ctr.contract_name = :contract_name
      order  by r.sort_order
    } {} {} {} c:/web/openacs-4/packages/workflow/tcl/case-procs.xql}
dbqd.workflow.tcl.case-procs.workflow::case::role::assignee_insert.delete_assignees {dbqd.workflow.tcl.case-procs.workflow::case::role::assignee_insert.delete_assignees {
        delete from workflow_case_role_party_map
        where  case_id = :case_id
        and    role_id = :role_id
    } {} {} {} c:/web/openacs-4/packages/workflow/tcl/case-procs.xql}
dbqd.workflow.tcl.case-procs.workflow::case::role::assignee_insert.insert_assignee {dbqd.workflow.tcl.case-procs.workflow::case::role::assignee_insert.insert_assignee {
      insert into workflow_case_role_party_map
        (case_id, role_id, party_id)
      values
        (:case_id, :role_id, :party_id)
    } {} {} {} c:/web/openacs-4/packages/workflow/tcl/case-procs.xql}
dbqd.workflow.tcl.case-procs.workflow::case::role::assignee_insert.already_assigned_p {dbqd.workflow.tcl.case-procs.workflow::case::role::assignee_insert.already_assigned_p {
      select count(*)
      from   workflow_case_role_party_map
      where  case_id = :case_id
      and    role_id = :role_id
      and    party_id = :party_id
    } {} {} {} c:/web/openacs-4/packages/workflow/tcl/case-procs.xql}
dbqd.workflow.tcl.case-procs.workflow::case::fsm::get_current_state.select_current_state {dbqd.workflow.tcl.case-procs.workflow::case::fsm::get_current_state.select_current_state {
      select current_state
      from   workflow_case_fsm c
      where  c.case_id = :case_id
    } {} {} {} c:/web/openacs-4/packages/workflow/tcl/case-procs.xql}
dbqd.workflow.tcl.case-procs.workflow::case::fsm::get.select_case_info_after_action {dbqd.workflow.tcl.case-procs.workflow::case::fsm::get.select_case_info_after_action {
      select c.case_id,
             c.workflow_id,
             c.object_id,
             s.state_id,
             s.short_name as state_short_name,
             s.pretty_name as pretty_state,
             s.hide_fields as state_hide_fields
      from   workflow_cases c,
             workflow_case_fsm cfsm,
             workflow_fsm_states s,
             workflow_fsm_actions a
      where  c.case_id = :case_id
      and    cfsm.case_id = c.case_id
      and    a.action_id = :action_id
      and    ((a.new_state is null and s.state_id = cfsm.current_state)  or (s.state_id = a.new_state))
    } {} {} {} c:/web/openacs-4/packages/workflow/tcl/case-procs.xql}
dbqd.workflow.tcl.case-procs.workflow::case::action::enabled_p.select_enabled_p {dbqd.workflow.tcl.case-procs.workflow::case::action::enabled_p.select_enabled_p {
      select 1
      from   workflow_actions a
      where  a.action_id = :action_id
      and    (a.always_enabled_p = 't' or 
             exists (select 1 
                     from   workflow_fsm_action_en_in_st waeis,
                            workflow_case_fsm c_fsm
                     where  waeis.action_id = a.action_id
                     and    c_fsm.case_id = :case_id
                     and    waeis.state_id = c_fsm.current_state)
             )
    } {} {} {} c:/web/openacs-4/packages/workflow/tcl/case-procs.xql}
dbqd.workflow.tcl.case-procs.workflow::case::action::execute.update_fsm_state {dbqd.workflow.tcl.case-procs.workflow::case::action::execute.update_fsm_state {
      update workflow_case_fsm
      set    current_state = :new_state_id
      where  case_id = :case_id
    } {} {} {} c:/web/openacs-4/packages/workflow/tcl/case-procs.xql}
dbqd.workflow.tcl.case-procs.workflow::case::action::execute.log_entry_exists_p {dbqd.workflow.tcl.case-procs.workflow::case::action::execute.log_entry_exists_p {
        select count(*)
        from   cr_items
        where  item_id = :entry_id
    } {} {} {} c:/web/openacs-4/packages/workflow/tcl/case-procs.xql}
dbqd.workflow.tcl.case-procs.workflow::case::action::notify.enabled_action_assignees {dbqd.workflow.tcl.case-procs.workflow::case::action::notify.enabled_action_assignees {
        select distinct rum.user_id
        from   workflow_cases c,
               workflow_actions a,
               workflow_case_role_user_map rum 
        where  c.case_id = :case_id
        and    a.workflow_id = c.workflow_id
        and    (a.always_enabled_p = 't' or 
                exists (select 1 
                        from   workflow_fsm_action_en_in_st waeis,
                               workflow_case_fsm c_fsm
                        where  waeis.action_id = a.action_id
                        and    c_fsm.case_id = c.case_id
                        and    waeis.state_id = c_fsm.current_state)
               )
        and    rum.case_id = c.case_id
        and    rum.role_id = a.assigned_role
    } {} {} {} c:/web/openacs-4/packages/workflow/tcl/case-procs.xql}
dbqd.workflow.tcl.case-procs.workflow::case::action::notify.case_players {dbqd.workflow.tcl.case-procs.workflow::case::action::notify.case_players {
        select distinct user_id
        from   workflow_case_role_user_map
        where  case_id = :case_id
    } {} {} {} c:/web/openacs-4/packages/workflow/tcl/case-procs.xql}
dbqd.workflow.tcl.case-procs.workflow::case::action::notify.select_object_type_info {dbqd.workflow.tcl.case-procs.workflow::case::action::notify.select_object_type_info {
        select lower(pretty_name) as pretty_name,
               lower(pretty_plural) as pretty_plural
        from   acs_object_types ot,
               acs_objects o
        where  o.object_id = :object_id
        and    ot.object_type = o.object_type
    } {} {} {} c:/web/openacs-4/packages/workflow/tcl/case-procs.xql}
dbqd.workflow.tcl.implementation-procs.workflow::impl::role_default_assignees::creation_user::get_assignees.select_creation_user {dbqd.workflow.tcl.implementation-procs.workflow::impl::role_default_assignees::creation_user::get_assignees.select_creation_user {
      select creation_user
      from   acs_objects
      where  object_id = :object_id
    } {} {} {} c:/web/openacs-4/packages/workflow/tcl/implementation-procs.xql}
dbqd.workflow.tcl.implementation-procs.workflow::impl::role_default_assignees::creation_user::get_assignees.select_static_asignees {dbqd.workflow.tcl.implementation-procs.workflow::impl::role_default_assignees::creation_user::get_assignees.select_static_asignees {
      select party_id
      from   workflow_role_default_parties
      where  role_id = :role_id
    } {} {} {} c:/web/openacs-4/packages/workflow/tcl/implementation-procs.xql}
dbqd.workflow.tcl.implementation-procs.workflow::impl::role_assignee_pick_list::current_assignees::get_pick_list.select_current_assignees {dbqd.workflow.tcl.implementation-procs.workflow::impl::role_assignee_pick_list::current_assignees::get_pick_list.select_current_assignees {
        select m.party_id
        from   workflow_case_role_party_map m, 
               workflow_cases c
        where  m.role_id = :role_id 
        and    m.case_id = c.case_id
        and    c.workflow_id = (select workflow_id from workflow_cases where case_id = :case_id)
    } {} {} {} c:/web/openacs-4/packages/workflow/tcl/implementation-procs.xql}
dbqd.workflow.tcl.implementation-procs.workflow::impl::role_assignee_subquery::registered_users::get_subquery.cc_users {dbqd.workflow.tcl.implementation-procs.workflow::impl::role_assignee_subquery::registered_users::get_subquery.cc_users {
        cc_users
    } {} {} {} c:/web/openacs-4/packages/workflow/tcl/implementation-procs.xql}
dbqd.workflow.tcl.install-procs.workflow::install::register_notification_types.enable_all_intervals {dbqd.workflow.tcl.install-procs.workflow::install::register_notification_types.enable_all_intervals {
        insert into notification_types_intervals
        (type_id, interval_id)
        select :type_id, interval_id
        from   notification_intervals
    } {} {} {} c:/web/openacs-4/packages/workflow/tcl/install-procs.xql}
dbqd.workflow.tcl.install-procs.workflow::install::register_notification_types.enable_all_delivery_methods {dbqd.workflow.tcl.install-procs.workflow::install::register_notification_types.enable_all_delivery_methods {
        insert into notification_types_del_methods
        (type_id, delivery_method_id)
        select :type_id, delivery_method_id
        from   notification_delivery_methods
    } {} {} {} c:/web/openacs-4/packages/workflow/tcl/install-procs.xql}
dbqd.workflow.tcl.role-procs-oracle.workflow::role::callback_insert.select_sort_order {dbqd.workflow.tcl.role-procs-oracle.workflow::role::callback_insert.select_sort_order {
        select nvl(max(sort_order),0) + 1
        from   workflow_role_callbacks
        where  role_id = :role_id
    } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/workflow/tcl/role-procs-oracle.xql}
dbqd.workflow.tcl.role-procs.workflow::role::callback_insert.select_sort_order {dbqd.workflow.tcl.role-procs.workflow::role::callback_insert.select_sort_order {
        select coalesce(max(sort_order),0) + 1
        from   workflow_role_callbacks
        where  role_id = :role_id
    } {} {} {postgresql 7.2} c:/web/openacs-4/packages/workflow/tcl/role-procs-postgresql.xql}
dbqd.workflow.tcl.role-procs.workflow::role::new.select_sort_order_p {dbqd.workflow.tcl.role-procs.workflow::role::new.select_sort_order_p {
        select count(*)
        from   workflow_roles
        where  workflow_id = :workflow_id
        and    sort_order = :sort_order
    } {} {} {} c:/web/openacs-4/packages/workflow/tcl/role-procs.xql}
dbqd.workflow.tcl.role-procs.workflow::role::new.update_sort_order {dbqd.workflow.tcl.role-procs.workflow::role::new.update_sort_order {
        update workflow_roles
        set    sort_order = sort_order + 1
        where  workflow_id = :workflow_id
        and    sort_order >= :sort_order
    } {} {} {} c:/web/openacs-4/packages/workflow/tcl/role-procs.xql}
dbqd.workflow.tcl.role-procs.workflow::role::insert.do_insert {dbqd.workflow.tcl.role-procs.workflow::role::insert.do_insert {
        insert into workflow_roles
                (role_id, workflow_id, short_name, pretty_name, sort_order)
             values
                (:role_id, :workflow_id, :short_name, :pretty_name, :sort_order)
    } {} {} {} c:/web/openacs-4/packages/workflow/tcl/role-procs.xql}
dbqd.workflow.tcl.role-procs.workflow::role::get_workflow_id_not_cached.select_workflow_id {dbqd.workflow.tcl.role-procs.workflow::role::get_workflow_id_not_cached.select_workflow_id {
        select workflow_id
        from workflow_roles
        where role_id = :role_id
    } {} {} {} c:/web/openacs-4/packages/workflow/tcl/role-procs.xql}
dbqd.workflow.tcl.role-procs.workflow::role::get_all_info_not_cached.role_info {dbqd.workflow.tcl.role-procs.workflow::role::get_all_info_not_cached.role_info {
        select role_id,
               workflow_id,
               short_name,
               pretty_name,
               sort_order
        from   workflow_roles
        where  workflow_id = :workflow_id
        order by sort_order
    } {} {} {} c:/web/openacs-4/packages/workflow/tcl/role-procs.xql}
dbqd.workflow.tcl.role-procs.workflow::role::get_all_info_not_cached.role_callbacks {dbqd.workflow.tcl.role-procs.workflow::role::get_all_info_not_cached.role_callbacks {
        select c.role_id,
               impl.impl_id,
               impl.impl_owner_name,
               impl.impl_name,  
               ctr.contract_name,
               c.sort_order
        from   workflow_roles r,
               workflow_role_callbacks c,
               acs_sc_impls impl,
               acs_sc_bindings bind,
               acs_sc_contracts ctr
        where  r.workflow_id = :workflow_id
        and    c.role_id = r.role_id
        and    impl.impl_id = c.acs_sc_impl_id
        and    bind.impl_id = impl.impl_id
        and    ctr.contract_id = bind.contract_id
        order  by r.role_id, c.sort_order
    } {} {} {} c:/web/openacs-4/packages/workflow/tcl/role-procs.xql}
dbqd.workflow.tcl.role-procs.workflow::role::callback_insert.insert_callback {dbqd.workflow.tcl.role-procs.workflow::role::callback_insert.insert_callback {
        insert into workflow_role_callbacks (role_id, acs_sc_impl_id, sort_order)
        values (:role_id, :acs_sc_impl_id, :sort_order)
    } {} {} {} c:/web/openacs-4/packages/workflow/tcl/role-procs.xql}
dbqd.workflow.tcl.state-procs.workflow::state::fsm::new.select_sort_order_p {dbqd.workflow.tcl.state-procs.workflow::state::fsm::new.select_sort_order_p {
        select count(*)
        from   workflow_fsm_states
        where  workflow_id = :workflow_id
        and    sort_order = :sort_order
    } {} {} {} c:/web/openacs-4/packages/workflow/tcl/state-procs.xql}
dbqd.workflow.tcl.state-procs.workflow::state::fsm::new.update_sort_order {dbqd.workflow.tcl.state-procs.workflow::state::fsm::new.update_sort_order {
        update workflow_fsm_states
        set    sort_order = sort_order + 1
        where  workflow_id = :workflow_id
        and    sort_order >= :sort_order
    } {} {} {} c:/web/openacs-4/packages/workflow/tcl/state-procs.xql}
dbqd.workflow.tcl.state-procs.workflow::state::fsm::new.do_insert {dbqd.workflow.tcl.state-procs.workflow::state::fsm::new.do_insert {
        insert into workflow_fsm_states
                (state_id, workflow_id, sort_order, short_name, pretty_name, hide_fields)
         values (:state_id, :workflow_id, :sort_order, :short_name, :pretty_name, :hide_fields)
    } {} {} {} c:/web/openacs-4/packages/workflow/tcl/state-procs.xql}
dbqd.workflow.tcl.state-procs.workflow::state::fsm::get_id.select_id {dbqd.workflow.tcl.state-procs.workflow::state::fsm::get_id.select_id {
        select state_id 
        from   workflow_fsm_states
        where  short_name = :short_name
        and    workflow_id = :workflow_id
    } {} {} {} c:/web/openacs-4/packages/workflow/tcl/state-procs.xql}
dbqd.workflow.tcl.state-procs.workflow::state::fsm::get_all_info_not_cached.select_states {dbqd.workflow.tcl.state-procs.workflow::state::fsm::get_all_info_not_cached.select_states {
      select state_id,
             sort_order,
             short_name,
             pretty_name,
             hide_fields
      from   workflow_fsm_states
      where  workflow_id = :workflow_id
      order by sort_order
    } {} {} {} c:/web/openacs-4/packages/workflow/tcl/state-procs.xql}
dbqd.workflow.tcl.state-procs.workflow::state::fsm::get_workflow_id_not_cached.select_workflow_id {dbqd.workflow.tcl.state-procs.workflow::state::fsm::get_workflow_id_not_cached.select_workflow_id {
        select workflow_id
        from   workflow_fsm_states
        where  state_id = :state_id
    } {} {} {} c:/web/openacs-4/packages/workflow/tcl/state-procs.xql}
dbqd.workflow.tcl.workflow-procs-oracle.workflow::new.do_insert {dbqd.workflow.tcl.workflow-procs-oracle.workflow::new.do_insert {
        begin
        :1 := workflow.new (
            short_name => :short_name,
            pretty_name => :pretty_name,
            package_key => :package_key,            
            object_id => :object_id,
            object_type => :object_type,
            creation_user => :creation_user,
            creation_ip => :creation_ip,
            context_id => :context_id
        );
        end;
    } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/workflow/tcl/workflow-procs-oracle.xql}
dbqd.workflow.tcl.workflow-procs-oracle.workflow::delete.do_delete {dbqd.workflow.tcl.workflow-procs-oracle.workflow::delete.do_delete {
        begin
            :1 := workflow.del(:workflow_id);
        end;
    } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/workflow/tcl/workflow-procs-oracle.xql}
dbqd.workflow.tcl.workflow-procs-oracle.workflow::callback_insert.select_sort_order {dbqd.workflow.tcl.workflow-procs-oracle.workflow::callback_insert.select_sort_order {
        select nvl(max(sort_order),0) + 1
        from   workflow_callbacks
        where  workflow_id = :workflow_id
    } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/workflow/tcl/workflow-procs-oracle.xql}
dbqd.workflow.tcl.workflow-procs.workflow::new.do_insert {dbqd.workflow.tcl.workflow-procs.workflow::new.do_insert {
        select workflow__new (
            :short_name,
            :pretty_name,
            :package_key,            
            :object_id,
            :object_type,
            :creation_user,
            :creation_ip,
            :context_id
        );
    } {} {} {postgresql 7.2} c:/web/openacs-4/packages/workflow/tcl/workflow-procs-postgresql.xql}
dbqd.workflow.tcl.workflow-procs.workflow::delete.do_delete {dbqd.workflow.tcl.workflow-procs.workflow::delete.do_delete {
        select workflow__delete(:workflow_id);
    } {} {} {postgresql 7.2} c:/web/openacs-4/packages/workflow/tcl/workflow-procs-postgresql.xql}
dbqd.workflow.tcl.workflow-procs.workflow::callback_insert.select_sort_order {dbqd.workflow.tcl.workflow-procs.workflow::callback_insert.select_sort_order {
        select coalesce(max(sort_order),0) + 1
        from   workflow_callbacks
        where  workflow_id = :workflow_id
    } {} {} {postgresql 7.2} c:/web/openacs-4/packages/workflow/tcl/workflow-procs-postgresql.xql}
dbqd.workflow.tcl.workflow-procs.workflow::get_id_not_cached.select_workflow_id_by_object_id {dbqd.workflow.tcl.workflow-procs.workflow::get_id_not_cached.select_workflow_id_by_object_id {
      select workflow_id
      from   workflows
      where  object_id = :object_id
      and    short_name = :short_name                        
    } {} {} {} c:/web/openacs-4/packages/workflow/tcl/workflow-procs.xql}
dbqd.workflow.tcl.workflow-procs.workflow::exists_p.do_select {dbqd.workflow.tcl.workflow-procs.workflow::exists_p.do_select {
        select count(*) from workflows where workflow_id = :workflow_id
    } {} {} {} c:/web/openacs-4/packages/workflow/tcl/workflow-procs.xql}
dbqd.workflow.tcl.workflow-procs.workflow::get_not_cached.workflow_info {dbqd.workflow.tcl.workflow-procs.workflow::get_not_cached.workflow_info {
      select w.workflow_id,
             w.short_name,
             w.pretty_name,
             w.object_id,
             w.package_key,
             w.object_type,
             a.short_name as initial_action,
             a.action_id as initial_action_id
      from   workflows w,
             workflow_initial_action wia,
             workflow_actions a
      where  w.workflow_id = :workflow_id
        and  w.workflow_id = wia.workflow_id
        and  a.action_id = wia.action_id
    } {} {} {} c:/web/openacs-4/packages/workflow/tcl/workflow-procs.xql}
dbqd.workflow.tcl.workflow-procs.workflow::get_not_cached.workflow_callbacks {dbqd.workflow.tcl.workflow-procs.workflow::get_not_cached.workflow_callbacks {
      select impl.impl_id,
             impl.impl_name,
             impl.impl_owner_name,
             ctr.contract_name,
             wc.sort_order
      from   workflow_callbacks wc,
             acs_sc_impls impl,
             acs_sc_bindings bind,
             acs_sc_contracts ctr
      where  wc.workflow_id = :workflow_id
      and    impl.impl_id = wc.acs_sc_impl_id
      and    impl.impl_id = bind.impl_id
      and    bind.contract_id = ctr.contract_id
      order  by wc.sort_order
    } {} {} {} c:/web/openacs-4/packages/workflow/tcl/workflow-procs.xql}
dbqd.workflow.tcl.workflow-procs.workflow::get_id_not_cached.select_workflow_id_by_package_key {dbqd.workflow.tcl.workflow-procs.workflow::get_id_not_cached.select_workflow_id_by_package_key {
      select workflow_id
      from   workflows
      where  package_key = :package_key
      and    short_name = :short_name                        
      and    object_id is null
    } {} {} {} c:/web/openacs-4/packages/workflow/tcl/workflow-procs.xql}
dbqd.workflow.tcl.workflow-procs.workflow::default_sort_order.max_sort_order {dbqd.workflow.tcl.workflow-procs.workflow::default_sort_order.max_sort_order {
        select max(sort_order)
        from   $table_name
        where  workflow_id = :workflow_id
    } {} {} {} c:/web/openacs-4/packages/workflow/tcl/workflow-procs.xql}
dbqd.workflow.tcl.workflow-procs.workflow::callback_insert.insert_callback {dbqd.workflow.tcl.workflow-procs.workflow::callback_insert.insert_callback {
        insert into workflow_callbacks (workflow_id, acs_sc_impl_id, sort_order)
        values (:workflow_id, :acs_sc_impl_id, :sort_order)
    } {} {} {} c:/web/openacs-4/packages/workflow/tcl/workflow-procs.xql}
dbqd.wp-slim.tcl.printer-view-procs-oracle.get_attach_list.get_attachments {dbqd.wp-slim.tcl.printer-view-procs-oracle.get_attach_list.get_attachments {
    select live_revision as attach_id, display, name as file_name
    from (select live_revision, name
          from cr_items
          where parent_id = :slide_item_id and
                content_type in ('cr_wp_image_attachment', 'cr_wp_file_attachment')
          ) a,
    cr_wp_image_attachments
    where a.live_revision = attach_id(+)
  } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/wp-slim/tcl/printer-view-procs-oracle.xql}
dbqd.wp-slim.tcl.printer-view-procs.get_attach_list.get_attachments {dbqd.wp-slim.tcl.printer-view-procs.get_attach_list.get_attachments {
    select live_revision as attach_id, display, name as file_name
    from (select live_revision, name
          from cr_items
          where parent_id = :slide_item_id and
                content_type in ('cr_wp_image_attachment', 'cr_wp_file_attachment')
          ) a
    left join cr_wp_image_attachments on (a.live_revision = attach_id)
  } {} {} {postgresql 7.2} c:/web/openacs-4/packages/wp-slim/tcl/printer-view-procs-postgresql.xql}
dbqd.wp-slim.tcl.printer-view-procs.get_attachments {dbqd.wp-slim.tcl.printer-view-procs.get_attachments {
    select live_revision as attach_id, display, name as file_name
    from (select live_revision, name
          from cr_items
          where parent_id = :slide_item_id and
                content_type in ('cr_wp_image_attachment', 'cr_wp_file_attachment')
          ) a
    left join cr_wp_image_attachments on (a.live_revision = attach_id)
  } {} {} {} c:/web/openacs-4/packages/wp-slim/tcl/printer-view-procs.xql}
dbqd.wp-slim.tcl.wp-slim-procs.wp_header.get_style_data {dbqd.wp-slim.tcl.wp-slim-procs.wp_header.get_style_data {

	select * from wp_styles where style_id = :style_id      

      } {} {} {} c:/web/openacs-4/packages/wp-slim/tcl/wp-slim-procs.xql}
dbqd.wp-slim.tcl.wp-slim-procs.wp_check_style_authorization.wp_style_owner_select {dbqd.wp-slim.tcl.wp-slim-procs.wp_check_style_authorization.wp_style_owner_select {

	select owner from wp_styles where style_id = :style_id

      } {} {} {} c:/web/openacs-4/packages/wp-slim/tcl/wp-slim-procs.xql}
dbqd.wp-slim.www.attach-del-oracle.revisions_and_item_delete {dbqd.wp-slim.www.attach-del-oracle.revisions_and_item_delete {
      
    begin
        wp_attachment.del(:attach_item_id);
    end;

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/wp-slim/www/attach-del-oracle.xql}
dbqd.wp-slim.www.attach-del.revisions_and_item_delete {dbqd.wp-slim.www.attach-del.revisions_and_item_delete {


        select wp_attachment__delete(:attach_item_id);

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/wp-slim/www/attach-del-postgresql.xql}
dbqd.wp-slim.www.attach-detail-oracle.info_get {dbqd.wp-slim.www.attach-detail-oracle.info_get {
         select r.revision_id, a.display, r.mime_type
         from cr_items i, cr_wp_image_attachments a, cr_revisions r
         where i.item_id = :attach_item_id and
             i.live_revision = r.revision_id and
             r.revision_id = a.attach_id(+)
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/wp-slim/www/attach-detail-oracle.xql}
dbqd.wp-slim.www.attach-detail.info_get {dbqd.wp-slim.www.attach-detail.info_get {
         select revision_id, display, mime_type
         from (select r.revision_id, r.mime_type
               from cr_items i, cr_revisions r
               where i.item_id = :attach_item_id and i.live_revision = r.revision_id) current
              left join cr_wp_image_attachments on (current.revision_id = attach_id)
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/wp-slim/www/attach-detail-postgresql.xql}
dbqd.wp-slim.www.attach-detail.pres_item_id_get {dbqd.wp-slim.www.attach-detail.pres_item_id_get {
      
    select parent_id
    from cr_items
    where content_type = 'cr_wp_slide'
    and   item_id = :slide_item_id

      } {} {} {} c:/web/openacs-4/packages/wp-slim/www/attach-detail.xql}
dbqd.wp-slim.www.attach-list.pres_item_id_get {dbqd.wp-slim.www.attach-list.pres_item_id_get {
      
    select parent_id
    from cr_items
    where content_type = 'cr_wp_slide'
    and   item_id = :slide_item_id

      } {} {} {} c:/web/openacs-4/packages/wp-slim/www/attach-list.xql}
dbqd.wp-slim.www.attach-list.attachments_get {dbqd.wp-slim.www.attach-list.attachments_get {
      
    select name, item_id
    from cr_items
    where content_type in ('cr_wp_image_attachment', 'cr_wp_file_attachment')
    and   parent_id = :slide_item_id

      } {} {} {} c:/web/openacs-4/packages/wp-slim/www/attach-list.xql}
dbqd.wp-slim.www.attach.image_data {dbqd.wp-slim.www.attach.image_data {
      insert into cr_wp_image_attachments
        (attach_id, display)
      values
        (:revision_id, :display)
   } {} {} {} c:/web/openacs-4/packages/wp-slim/www/attach.xql}
dbqd.wp-slim.www.attach.file_data {dbqd.wp-slim.www.attach.file_data {
      insert into cr_wp_file_attachments
        (attach_id)
      values
        (:revision_id)
   } {} {} {} c:/web/openacs-4/packages/wp-slim/www/attach.xql}
dbqd.wp-slim.www.create-presentation-2-oracle.wp_presentation_insert {dbqd.wp-slim.www.create-presentation-2-oracle.wp_presentation_insert {
      
    begin        
      :1 := wp_presentation.new(
      creation_user    => :user_id,
      creation_ip      => :creation_ip,
      creation_date    => sysdate,
      pres_title       => :pres_title,
      page_signature   => :page_signature,
      copyright_notice => :copyright_notice,
      style            => :style,
      public_p         => :public_p,
      show_modified_p  => :show_modified_p,
      audience         => :audience,
      background       => :background,
      parent_id       => :package_id
      );
    end;

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/wp-slim/www/create-presentation-2-oracle.xql}
dbqd.wp-slim.www.create-presentation-2-oracle.grant_owner_access {dbqd.wp-slim.www.create-presentation-2-oracle.grant_owner_access {
      
    begin
      acs_permission.grant_permission(:pres_item_id,:user_id,'wp_admin_presentation');
      acs_permission.grant_permission(:pres_item_id,:user_id,'wp_view_presentation');
      acs_permission.grant_permission(:pres_item_id,:user_id,'wp_edit_presentation');
      acs_permission.grant_permission(:pres_item_id,:user_id,'wp_delete_presentation');
    end;

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/wp-slim/www/create-presentation-2-oracle.xql}
dbqd.wp-slim.www.create-presentation-2-oracle.make_wp_presentation_public {dbqd.wp-slim.www.create-presentation-2-oracle.make_wp_presentation_public {
      
        begin
          acs_permission.grant_permission(:pres_item_id,acs.magic_object_id('the_public'),'wp_view_presentation');
        end;
    
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/wp-slim/www/create-presentation-2-oracle.xql}
dbqd.wp-slim.www.create-presentation-2.wp_presentation_insert {dbqd.wp-slim.www.create-presentation-2.wp_presentation_insert {

  select wp_presentation__new(
       	now(),  	
    	:user_id,
      	:creation_ip,
      	:pres_title,
     	:page_signature,
	:copyright_notice,
      	:style,
      	:public_p,
      	:show_modified_p,
      	:audience,
      	:background,
	:package_id
      );

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/wp-slim/www/create-presentation-2-postgresql.xql}
dbqd.wp-slim.www.create-presentation-2.grant_owner_access {dbqd.wp-slim.www.create-presentation-2.grant_owner_access {
         begin
           perform acs_permission__grant_permission(:pres_item_id,:user_id,'wp_admin_presentation');
           perform acs_permission__grant_permission(:pres_item_id,:user_id,'wp_view_presentation');
           perform acs_permission__grant_permission(:pres_item_id,:user_id,'wp_edit_presentation');
           perform acs_permission__grant_permission(:pres_item_id,:user_id,'wp_delete_presentation');
           return 0;
         end;
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/wp-slim/www/create-presentation-2-postgresql.xql}
dbqd.wp-slim.www.create-presentation-2.make_wp_presentation_public {dbqd.wp-slim.www.create-presentation-2.make_wp_presentation_public {
         select acs_permission__grant_permission(:pres_item_id,acs__magic_object_id('the_public'),'wp_view_presentation');
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/wp-slim/www/create-presentation-2-postgresql.xql}
dbqd.wp-slim.www.create-presentation.wp_styles {dbqd.wp-slim.www.create-presentation.wp_styles {

    select style_id, (case when owner = :user_id then name || ' (yours)' else name end) as name
    from wp_styles
    where owner = :user_id
    or public_p = 't'
    order by name

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/wp-slim/www/create-presentation-postgresql.xql}
dbqd.wp-slim.www.create-presentation.wp_styles {dbqd.wp-slim.www.create-presentation.wp_styles {

    select style_id, (case when owner = :user_id then name || ' (yours)' else name end) as name
    from wp_styles
    where owner = :user_id
    or public_p = 't'
    order by name

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/wp-slim/www/create-presentation-postgresql.xql}
dbqd.wp-slim.www.create-slide-2-oracle.wp_slide_insert {dbqd.wp-slim.www.create-slide-2-oracle.wp_slide_insert {
      
    begin
      :1 := wp_slide.new(
      pres_item_id      => :pres_item_id,
      creation_user     => :user_id,
      creation_ip       => :creation_ip,
      creation_date     => sysdate,
      slide_title       => :slide_title,
      original_slide_id => -100,
      sort_key          => :sort_key,
      preamble          => :preamble,
      postamble         => :postamble,
      bullet_items      => :bullet_list
      );
    end;

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/wp-slim/www/create-slide-2-oracle.xql}
dbqd.wp-slim.www.create-slide-2.wp_slide_insert {dbqd.wp-slim.www.create-slide-2.wp_slide_insert {

  select wp_slide__new(
    	:pres_item_id,
	now(),
	:user_id,
      	:creation_ip,
 	:slide_title,
	'-1',      	
	'-100',
      	:sort_key,
      	:preamble,
	:bullet_list,
	:postamble,
	't',
	'f',
	NULL
      );

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/wp-slim/www/create-slide-2-postgresql.xql}
dbqd.wp-slim.www.create-slide.get_presentation {dbqd.wp-slim.www.create-slide.get_presentation {
      
select pres_title
from cr_wp_presentations p,
     cr_items i
where i.item_id = :pres_item_id
and   i.live_revision = p.presentation_id

      } {} {} {} c:/web/openacs-4/packages/wp-slim/www/create-slide.xql}
dbqd.wp-slim.www.create-slide.get_sort_key {dbqd.wp-slim.www.create-slide.get_sort_key {
      
	select 1+max(sort_key)
        from cr_wp_slides s,
	     cr_items i,
             cr_revisions r
	where i.parent_id = :pres_item_id
	and   s.slide_id = i.live_revision
    
      } {} {} {} c:/web/openacs-4/packages/wp-slim/www/create-slide.xql}
dbqd.wp-slim.www.delete-presentation-2-oracle.delete_presentation {dbqd.wp-slim.www.delete-presentation-2-oracle.delete_presentation {
      
	begin
  	  wp_presentation.del(:pres_item_id);
	end;
    
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/wp-slim/www/delete-presentation-2-oracle.xql}
dbqd.wp-slim.www.delete-presentation-2.delete_presentation {dbqd.wp-slim.www.delete-presentation-2.delete_presentation {
  
	select wp_presentation__delete(:pres_item_id);
        
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/wp-slim/www/delete-presentation-2-postgresql.xql}
dbqd.wp-slim.www.delete-slide-2-oracle.delete_slide {dbqd.wp-slim.www.delete-slide-2-oracle.delete_slide {
      
    begin
      wp_slide.del(:slide_item_id);
    end;

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/wp-slim/www/delete-slide-2-oracle.xql}
dbqd.wp-slim.www.delete-slide-2.delete_slide {dbqd.wp-slim.www.delete-slide-2.delete_slide {
	select wp_slide__delete(:slide_item_id);
 

    } {} {} {postgresql 7.1} c:/web/openacs-4/packages/wp-slim/www/delete-slide-2-postgresql.xql}
dbqd.wp-slim.www.display-change.get_mime_type {dbqd.wp-slim.www.display-change.get_mime_type {
      
    select mime_type
    from cr_revisions
    where revision_id = :revision_id

      } {} {} {} c:/web/openacs-4/packages/wp-slim/www/display-change.xql}
dbqd.wp-slim.www.display-change.display_change {dbqd.wp-slim.www.display-change.display_change {
      
    update cr_wp_image_attachments
    set display = :display
    where attach_id = :revision_id

      } {} {} {} c:/web/openacs-4/packages/wp-slim/www/display-change.xql}
dbqd.wp-slim.www.edit-presentation-2-oracle.update_wp_presentation {dbqd.wp-slim.www.edit-presentation-2-oracle.update_wp_presentation {
      
    begin
      wp_presentation.new_revision(
      creation_user    => :user_id,
      creation_ip      => :creation_ip,
      creation_date    => sysdate,
      pres_item_id     => :pres_item_id,
      pres_title       => :pres_title,
      page_signature   => :page_signature,
      copyright_notice => :copyright_notice,
      public_p         => :public_p,
      show_modified_p  => :show_modified_p,
      style            => :style,
      audience         => :audience,
      background       => :background
      );
    end;

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/wp-slim/www/edit-presentation-2-oracle.xql}
dbqd.wp-slim.www.edit-presentation-2-oracle.grant_public_read {dbqd.wp-slim.www.edit-presentation-2-oracle.grant_public_read {
      
        begin
          acs_permission.grant_permission(:pres_item_id,acs.magic_object_id('the_public'),'wp_view_presentation');
        end;
    
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/wp-slim/www/edit-presentation-2-oracle.xql}
dbqd.wp-slim.www.edit-presentation-2-oracle.grant_public_read {dbqd.wp-slim.www.edit-presentation-2-oracle.grant_public_read {
      
        begin
          acs_permission.grant_permission(:pres_item_id,acs.magic_object_id('the_public'),'wp_view_presentation');
        end;
    
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/wp-slim/www/edit-presentation-2-oracle.xql}
dbqd.wp-slim.www.edit-presentation-2.update_wp_presentation {dbqd.wp-slim.www.edit-presentation-2.update_wp_presentation {

	select wp_presentation__new_revision(
		now(),
		:user_id,
      		:creation_ip,
		:pres_item_id,
      		:pres_title,
		:page_signature,
		:copyright_notice,
		:style,
		:public_p,
		:show_modified_p,
		:audience,
		:background
      	);
    
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/wp-slim/www/edit-presentation-2-postgresql.xql}
dbqd.wp-slim.www.edit-presentation-2.grant_public_read {dbqd.wp-slim.www.edit-presentation-2.grant_public_read {

	select
acs_permission__grant_permission(:pres_item_id,acs__magic_object_id('the_public'),'wp_view_presentation');
    
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/wp-slim/www/edit-presentation-2-postgresql.xql}
dbqd.wp-slim.www.edit-presentation-2.grant_public_read {dbqd.wp-slim.www.edit-presentation-2.grant_public_read {
  
	select
acs_permission__grant_permission(:pres_item_id,acs__magic_object_id('the_public'),'wp_view_presentation');  

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/wp-slim/www/edit-presentation-2-postgresql.xql}
dbqd.wp-slim.www.edit-presentation-oracle.get_presentation_data {dbqd.wp-slim.www.edit-presentation-oracle.get_presentation_data {
      
    select p.pres_title, p.page_signature, p.copyright_notice, p.public_p, p.show_modified_p, wp_presentation.get_audience(:pres_item_id) as audience, wp_presentation.get_background(:pres_item_id) as background, style
    from cr_wp_presentations p, cr_items i
    where i.item_id = :pres_item_id
    and   i.live_revision = p.presentation_id

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/wp-slim/www/edit-presentation-oracle.xql}
dbqd.wp-slim.www.edit-presentation.get_presentation_data {dbqd.wp-slim.www.edit-presentation.get_presentation_data {
      
    select p.pres_title, p.page_signature, p.copyright_notice, p.public_p, style,
p.show_modified_p
    from cr_wp_presentations p, cr_items i
    where i.item_id = :pres_item_id
    and   i.live_revision = p.presentation_id

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/wp-slim/www/edit-presentation-postgresql.xql}
dbqd.wp-slim.www.edit-presentation.get_aud_data {dbqd.wp-slim.www.edit-presentation.get_aud_data {
    select name as audience
    from cr_revisions, cr_items
    where cr_items.content_type = 'cr_wp_presentation_aud' 
    and cr_items.parent_id = :pres_item_id
    and cr_revisions.revision_id = cr_items.live_revision
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/wp-slim/www/edit-presentation-postgresql.xql}
dbqd.wp-slim.www.edit-presentation.get_back_data {dbqd.wp-slim.www.edit-presentation.get_back_data {
    select name as background   
    from cr_revisions r, cr_items i
    where i.content_type = 'cr_wp_presentation_back' 
    and i.parent_id = :pres_item_id
    and r.revision_id = i.live_revision 
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/wp-slim/www/edit-presentation-postgresql.xql}
dbqd.wp-slim.www.edit-presentation.get_presentation_data {dbqd.wp-slim.www.edit-presentation.get_presentation_data {
      
    select p.pres_title, p.page_signature, p.copyright_notice, p.public_p, style,
p.show_modified_p
    from cr_wp_presentations p, cr_items i
    where i.item_id = :pres_item_id
    and   i.live_revision = p.presentation_id

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/wp-slim/www/edit-presentation-postgresql.xql}
dbqd.wp-slim.www.edit-presentation.get_aud_data {dbqd.wp-slim.www.edit-presentation.get_aud_data {
    select name as audience
    from cr_revisions, cr_items
    where cr_items.content_type = 'cr_wp_presentation_aud' 
    and cr_items.parent_id = :pres_item_id
    and cr_revisions.revision_id = cr_items.live_revision
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/wp-slim/www/edit-presentation-postgresql.xql}
dbqd.wp-slim.www.edit-presentation.get_back_data {dbqd.wp-slim.www.edit-presentation.get_back_data {
    select name as background   
    from cr_revisions r, cr_items i
    where i.content_type = 'cr_wp_presentation_back' 
    and i.parent_id = :pres_item_id
    and r.revision_id = i.live_revision 
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/wp-slim/www/edit-presentation-postgresql.xql}
dbqd.wp-slim.www.edit-presentation.wp_styles {dbqd.wp-slim.www.edit-presentation.wp_styles {

    select style_id, (case when owner = :user_id then name || ' (yours)' else name end) as name
    from wp_styles
    where owner = :user_id
    or public_p = 't'
    order by name

      } {} {} {} c:/web/openacs-4/packages/wp-slim/www/edit-presentation.xql}
dbqd.wp-slim.www.edit-slide-2-oracle.update_slide {dbqd.wp-slim.www.edit-slide-2-oracle.update_slide {
      
    begin
      wp_slide.new_revision (
      creation_user     => :user_id,
      creation_ip       => :creation_ip,
      creation_date     => sysdate,
      slide_item_id     => :slide_item_id,
      slide_title       => :slide_title,
      preamble          => :preamble,
      postamble         => :postamble,
      bullet_items      => :bullet_items,
      original_slide_id => :original_slide_id,
      sort_key          => :sort_key
      );
    end;

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/wp-slim/www/edit-slide-2-oracle.xql}
dbqd.wp-slim.www.edit-slide-2.update_slide {dbqd.wp-slim.www.edit-slide-2.update_slide {
    select wp_slide__new_revision (
	now(),
	:user_id,
	:creation_ip,
	:slide_item_id,
	:slide_title,
      	:preamble,
	:bullet_items,
	:postamble,
	'-1',
	:original_slide_id,
	:sort_key,
	't',
	'f'
      );

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/wp-slim/www/edit-slide-2-postgresql.xql}
dbqd.wp-slim.www.edit-slide-2.get_number_of_attachments {dbqd.wp-slim.www.edit-slide-2.get_number_of_attachments {
      
	select count(1) 
	from cr_items
        where content_type in ('cr_wp_image_attachment', 'cr_wp_file_attachment')
	and   parent_id = :slide_item_id
    
      } {} {} {} c:/web/openacs-4/packages/wp-slim/www/edit-slide-2.xql}
dbqd.wp-slim.www.edit-slide-2.get_presentation {dbqd.wp-slim.www.edit-slide-2.get_presentation {
      
select pres_title
from cr_wp_presentations p,
     cr_items i
where i.item_id = :pres_item_id
and   i.live_revision = p.presentation_id

      } {} {} {} c:/web/openacs-4/packages/wp-slim/www/edit-slide-2.xql}
dbqd.wp-slim.www.edit-slide-oracle.get_slide_info {dbqd.wp-slim.www.edit-slide-oracle.get_slide_info {
      
select s.slide_title,
       s.sort_key,
       s.original_slide_id,
       wp_slide.get_preamble(:slide_item_id) as preamble,
       wp_slide.get_postamble(:slide_item_id) as postamble,
       wp_slide.get_bullet_items(:slide_item_id) as bullet_items
from cr_wp_slides s, cr_items i
where i.item_id = :slide_item_id
and   i.live_revision = s.slide_id

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/wp-slim/www/edit-slide-oracle.xql}
dbqd.wp-slim.www.edit-slide.get_slide_info {dbqd.wp-slim.www.edit-slide.get_slide_info {
      
select s.slide_title,
       s.sort_key,
       s.original_slide_id,
       wp_slide__get_preamble(:slide_item_id) as preamble,
       wp_slide__get_postamble(:slide_item_id) as postamble,
       wp_slide__get_bullet_items(:slide_item_id) as bullet_items
from cr_wp_slides s, cr_items i
where i.item_id = :slide_item_id
and   i.live_revision = s.slide_id

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/wp-slim/www/edit-slide-postgresql.xql}
dbqd.wp-slim.www.edit-slide.get_presentation {dbqd.wp-slim.www.edit-slide.get_presentation {
      
select pres_title
from cr_wp_presentations p,
     cr_items i
where i.item_id = :pres_item_id
and   i.live_revision = p.presentation_id

      } {} {} {} c:/web/openacs-4/packages/wp-slim/www/edit-slide.xql}
dbqd.wp-slim.www.index-oracle.get_all_public_presentations {dbqd.wp-slim.www.index-oracle.get_all_public_presentations {
       
	select i.item_id as pres_item_id,
	pres.pres_title,
	ao.creation_date as creation_date,
	ao.creation_user,
	p.first_names || ' ' || p.last_name as full_name
	from cr_items i, cr_wp_presentations pres, persons p, acs_objects ao
	where i.live_revision = pres.presentation_id
	and   ao.object_id = i.item_id
	and   ao.creation_user = p.person_id
	and   pres.public_p = 't'
	and   ao.context_id = :package_id
	$extra_where_clauses
    
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/wp-slim/www/index-oracle.xql}
dbqd.wp-slim.www.index-oracle.get_my_presentations {dbqd.wp-slim.www.index-oracle.get_my_presentations {
       
	select i.item_id as pres_item_id,
	p.pres_title,
	ao.creation_date as creation_date
	from cr_items i, cr_wp_presentations p, acs_objects ao
	where i.live_revision = p.presentation_id
	and   ao.object_id = i.item_id
	and   ao.creation_user = :user_id
	and   ao.context_id = :package_id
        $extra_where_clauses
    
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/wp-slim/www/index-oracle.xql}
dbqd.wp-slim.www.index-oracle.get_all_visible_presentations {dbqd.wp-slim.www.index-oracle.get_all_visible_presentations {
       
	select i.item_id as pres_item_id,
	pres.pres_title,
	ao.creation_date as creation_date,
	ao.creation_user,
	p.first_names || ' ' || p.last_name as full_name,
	acs_permission.permission_p(i.item_id, :user_id, 'wp_edit_presentation') as edit_p
	from cr_items i, cr_wp_presentations pres, persons p, acs_objects ao
	where i.live_revision = pres.presentation_id
	and   ao.object_id = i.item_id
	and   ao.creation_user <> :user_id
	and   ao.creation_user = p.person_id
	and   ao.context_id = :package_id
	$extra_where_clauses
	and exists (select 1
        from acs_object_party_privilege_map m
        where m.object_id = i.item_id
        and m.party_id = :user_id
        and m.privilege = 'wp_view_presentation')
        $extra_where_clauses
    
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/wp-slim/www/index-oracle.xql}
dbqd.wp-slim.www.index.get_all_public_presentations {dbqd.wp-slim.www.index.get_all_public_presentations {
       
	select i.item_id as pres_item_id,
	pres.pres_title,
	ao.creation_date as creation_date,
	ao.creation_user,
	p.first_names || ' ' || p.last_name as full_name
	from cr_items i, cr_wp_presentations pres, persons p, acs_objects ao
	where i.live_revision = pres.presentation_id
	and   ao.object_id = i.item_id
	and   ao.creation_user = p.person_id
	and   pres.public_p = 't'
	and   ao.context_id = :package_id
        $extra_where_clauses
    
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/wp-slim/www/index-postgresql.xql}
dbqd.wp-slim.www.index.get_my_presentations {dbqd.wp-slim.www.index.get_my_presentations {
       
	select i.item_id as pres_item_id,
	p.pres_title,
	ao.creation_date as creation_date
	from cr_items i, cr_wp_presentations p, acs_objects ao
	where i.live_revision = p.presentation_id
	and   ao.object_id = i.item_id
	and   ao.creation_user = :user_id
	and   ao.context_id = :package_id
        $extra_where_clauses
    
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/wp-slim/www/index-postgresql.xql}
dbqd.wp-slim.www.index.get_all_visible_presentations {dbqd.wp-slim.www.index.get_all_visible_presentations {
       
        select i.item_id as pres_item_id,
        pres.pres_title,
        ao.creation_date as creation_date,
        ao.creation_user,
        p.first_names || ' ' || p.last_name as full_name,
	acs_permission__permission_p(i.item_id, :user_id, 'wp_edit_presentation') as edit_p
        from cr_items i, cr_wp_presentations pres, persons p, acs_objects ao
        where i.live_revision = pres.presentation_id
        and   ao.object_id = i.item_id
        and   ao.creation_user <> :user_id
        and   ao.creation_user = p.person_id
        and   ao.context_id =  :package_id
        $extra_where_clauses
	and exists (select 1
        from acs_object_party_privilege_map m
        where m.object_id = i.item_id
        and m.party_id = :user_id
        and m.privilege = 'wp_view_presentation')
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/wp-slim/www/index-postgresql.xql}
dbqd.wp-slim.www.invite-2.user_info_get {dbqd.wp-slim.www.invite-2.user_info_get {
      
    select persons.first_names || ' ' || persons.last_name as user_name,
           parties.email as user_email
    from persons, parties
    where persons.person_id = :user_id
    and   parties.party_id = :user_id

      } {} {} {} c:/web/openacs-4/packages/wp-slim/www/invite-2.xql}
dbqd.wp-slim.www.live-revision-set-oracle.live_revision_set {dbqd.wp-slim.www.live-revision-set-oracle.live_revision_set {
      
    begin
      content_item.set_live_revision(:revision_id);
    end;

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/wp-slim/www/live-revision-set-oracle.xql}
dbqd.wp-slim.www.live-revision-set.live_revision_set {dbqd.wp-slim.www.live-revision-set.live_revision_set {

	select content_item__set_live_revision(:revision_id);

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/wp-slim/www/live-revision-set-postgresql.xql}
dbqd.wp-slim.www.presentation-acl-add-2.privilege_check {dbqd.wp-slim.www.presentation-acl-add-2.privilege_check {
      
    select 1
    from acs_permissions
    where object_id = :pres_item_id
    and   grantee_id = :user_id_from_search
    and   privilege = :privilege

      } {} {} {} c:/web/openacs-4/packages/wp-slim/www/presentation-acl-add-2.xql}
dbqd.wp-slim.www.presentation-acl-add-3-oracle.grant_privilege {dbqd.wp-slim.www.presentation-acl-add-3-oracle.grant_privilege {
      
	    begin
	        acs_permission.grant_permission(:pres_item_id, :user_id_from_search, :privilege);
	    end;
	
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/wp-slim/www/presentation-acl-add-3-oracle.xql}
dbqd.wp-slim.www.presentation-acl-add-3.grant_privilege {dbqd.wp-slim.www.presentation-acl-add-3.grant_privilege {
	select acs_permission__grant_permission(:pres_item_id, :user_id_from_search, :privilege);
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/wp-slim/www/presentation-acl-add-3-postgresql.xql}
dbqd.wp-slim.www.presentation-acl-add-3.email_get {dbqd.wp-slim.www.presentation-acl-add-3.email_get {
      
	select email as sender_email
	from parties
	where party_id = :user_id
    
      } {} {} {} c:/web/openacs-4/packages/wp-slim/www/presentation-acl-add-3.xql}
dbqd.wp-slim.www.presentation-acl-add-group-2.users_get {dbqd.wp-slim.www.presentation-acl-add-group-2.users_get {
      
    select p.first_names,
           p.last_name
    from persons p,
         group_member_map m
    where m.group_id = :group_id
    and   m.member_id = p.person_id
    order by p.last_name

      } {} {} {} c:/web/openacs-4/packages/wp-slim/www/presentation-acl-add-group-2.xql}
dbqd.wp-slim.www.presentation-acl-add-group-3-oracle.permission_grant {dbqd.wp-slim.www.presentation-acl-add-group-3-oracle.permission_grant {
	begin
		acs_permission.grant_permission(:pres_item_id, :member_id, :permission);
	end;
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/wp-slim/www/presentation-acl-add-group-3-oracle.xql}
dbqd.wp-slim.www.presentation-acl-add-group-3.permission_grant {dbqd.wp-slim.www.presentation-acl-add-group-3.permission_grant {
	begin
		perform acs_permission__grant_permission(:pres_item_id, :member_id, :permission);
		return 0;
	end;
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/wp-slim/www/presentation-acl-add-group-3-postgresql.xql}
dbqd.wp-slim.www.presentation-acl-add-group-3.group_grant {dbqd.wp-slim.www.presentation-acl-add-group-3.group_grant {
	select member_id
        from group_member_map
        where group_id = :group_id
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/wp-slim/www/presentation-acl-add-group-3.xql}
dbqd.wp-slim.www.presentation-acl-add-group.groups_get {dbqd.wp-slim.www.presentation-acl-add-group.groups_get {
      
    select group_id, group_name
    from groups
    order by group_name

      } {} {} {} c:/web/openacs-4/packages/wp-slim/www/presentation-acl-add-group.xql}
dbqd.wp-slim.www.presentation-acl-delete-oracle.revoke_privilege {dbqd.wp-slim.www.presentation-acl-delete-oracle.revoke_privilege {
      
    declare
      owner_id  acs_objects.creation_user%TYPE;
    begin
      select creation_user into owner_id
      from acs_objects
      where object_id = :pres_item_id;
 
      if (owner_id <> :user_id) then
        acs_permission.revoke_permission(:pres_item_id, :user_id, :privilege);
      end if;
    end;

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/wp-slim/www/presentation-acl-delete-oracle.xql}
dbqd.wp-slim.www.presentation-acl-delete.revoke_privilege {dbqd.wp-slim.www.presentation-acl-delete.revoke_privilege {
      declare  
       owner_id  integer;

begin
      select creation_user into owner_id
      from acs_objects
      where object_id = :pres_item_id;
 
      if (owner_id != :user_id) then
         PERFORM acs_permission__revoke_permission(:pres_item_id, :user_id, :privilege);
      end if;

      return 0;
end;
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/wp-slim/www/presentation-acl-delete-postgresql.xql}
dbqd.wp-slim.www.presentation-acl.get_presentaiton {dbqd.wp-slim.www.presentation-acl.get_presentaiton {
      
select p.pres_title as title,
       p.public_p,
       ao.creation_user
from cr_wp_presentations p,
     cr_items i,
     acs_objects ao
where i.item_id = :pres_item_id
and   i.live_revision = p.presentation_id
and   ao.object_id = i.item_id

      } {} {} {} c:/web/openacs-4/packages/wp-slim/www/presentation-acl.xql}
dbqd.wp-slim.www.presentation-acl.read_users_get {dbqd.wp-slim.www.presentation-acl.read_users_get {
      
    select p.person_id,
           p.first_names,
           p.last_name
    from persons p,
         acs_permissions perm
    where perm.object_id = :pres_item_id
    and   perm.grantee_id = p.person_id
    and   perm.privilege = 'wp_view_presentation'

      } {} {} {} c:/web/openacs-4/packages/wp-slim/www/presentation-acl.xql}
dbqd.wp-slim.www.presentation-acl.write_users_get {dbqd.wp-slim.www.presentation-acl.write_users_get {
      
    select p.person_id,
           p.first_names,
           p.last_name
    from persons p,
         acs_permissions perm
    where perm.object_id = :pres_item_id
    and   perm.grantee_id = p.person_id
    and   perm.privilege = 'wp_edit_presentation'

      } {} {} {} c:/web/openacs-4/packages/wp-slim/www/presentation-acl.xql}
dbqd.wp-slim.www.presentation-acl.admin_users_get {dbqd.wp-slim.www.presentation-acl.admin_users_get {
      
    select p.person_id,
           p.first_names,
           p.last_name
    from persons p,
         acs_permissions perm
    where perm.object_id = :pres_item_id
    and   perm.grantee_id = p.person_id
    and   perm.privilege = 'wp_admin_presentation'

      } {} {} {} c:/web/openacs-4/packages/wp-slim/www/presentation-acl.xql}
dbqd.wp-slim.www.presentation-print-view-oracle.get_slide_info {dbqd.wp-slim.www.presentation-print-view-oracle.get_slide_info {
    select s.slide_title as title ,
     	i.item_id as slide_id , 
	s.sort_key,wp_slide.get_preamble(i.item_id) as preamble,
    	wp_slide.get_postamble(i.item_id) as postamble,
    	wp_slide.get_bullet_items(i.item_id) as bullet_list
    from cr_wp_slides s, cr_items i
    where i.parent_id = :pres_item_id
   	and   i.live_revision = s.slide_id
    order by s.sort_key
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/wp-slim/www/presentation-print-view-oracle.xql}
dbqd.wp-slim.www.presentation-print-view.get_slide_info {dbqd.wp-slim.www.presentation-print-view.get_slide_info {
    select s.slide_title as title ,
     	i.item_id as slide_id ,
	s.sort_key,wp_slide__get_preamble(i.item_id) as preamble,
    	wp_slide__get_postamble(i.item_id) as postamble,
    	wp_slide__get_bullet_items(i.item_id) as bullet_list
    from cr_wp_slides s, cr_items i
    where i.parent_id = :pres_item_id
   	and   i.live_revision = s.slide_id
    order by s.sort_key
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/wp-slim/www/presentation-print-view-postgresql.xql}
dbqd.wp-slim.www.presentation-print-view.get_first_slide_item_id {dbqd.wp-slim.www.presentation-print-view.get_first_slide_item_id {
      
    select item_id as first_slide_item_id
    from cr_items
    where content_type = 'cr_wp_slide'
    and   parent_id    = :pres_item_id
    and   exists (select 1 from cr_wp_slides s where s.slide_id=cr_items.live_revision and s.sort_key=1)

      } {} {} {} c:/web/openacs-4/packages/wp-slim/www/presentation-print-view.xql}
dbqd.wp-slim.www.presentation-print-view.get_owner_name {dbqd.wp-slim.www.presentation-print-view.get_owner_name {
    select first_names || ' ' || last_name as owner_name, person_id as owner_id
    from persons, acs_objects
    where persons.person_id = acs_objects.creation_user
    and acs_objects.object_id = :pres_item_id
  } {} {} {} c:/web/openacs-4/packages/wp-slim/www/presentation-print-view.xql}
dbqd.wp-slim.www.presentation-print-view.get_presentation_data {dbqd.wp-slim.www.presentation-print-view.get_presentation_data {
    select p.pres_title, p.page_signature, p.style, p.copyright_notice, p.public_p, p.show_modified_p 
    from cr_wp_presentations p, cr_items i
    where i.item_id = :pres_item_id
    and   i.live_revision = p.presentation_id
  } {} {} {} c:/web/openacs-4/packages/wp-slim/www/presentation-print-view.xql}
dbqd.wp-slim.www.presentation-print-view.get_aud_data {dbqd.wp-slim.www.presentation-print-view.get_aud_data {
    select name as audience
    from cr_revisions, cr_items
    where cr_items.content_type = 'cr_wp_presentation_aud'
    and cr_items.parent_id = :pres_item_id
    and cr_revisions.revision_id = cr_items.live_revision
  } {} {} {} c:/web/openacs-4/packages/wp-slim/www/presentation-print-view.xql}
dbqd.wp-slim.www.presentation-print-view.get_back_data {dbqd.wp-slim.www.presentation-print-view.get_back_data {
    select name as background
    from cr_revisions r, cr_items i
    where i.content_type = 'cr_wp_presentation_back'
    and i.parent_id = :pres_item_id
    and r.revision_id = i.live_revision
  } {} {} {} c:/web/openacs-4/packages/wp-slim/www/presentation-print-view.xql}
dbqd.wp-slim.www.presentation-public-oracle.grant_public_read {dbqd.wp-slim.www.presentation-public-oracle.grant_public_read {
      
        begin
          acs_permission.grant_permission(:pres_item_id,acs.magic_object_id('the_public'),'wp_view_presentation');
        end;
    
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/wp-slim/www/presentation-public-oracle.xql}
dbqd.wp-slim.www.presentation-public-oracle.grant_public_read {dbqd.wp-slim.www.presentation-public-oracle.grant_public_read {
      
        begin
          acs_permission.grant_permission(:pres_item_id,acs.magic_object_id('the_public'),'wp_view_presentation');
        end;
    
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/wp-slim/www/presentation-public-oracle.xql}
dbqd.wp-slim.www.presentation-public.grant_public_read {dbqd.wp-slim.www.presentation-public.grant_public_read {
	select
acs_permission__grant_permission(:pres_item_id,acs__magic_object_id('the_public'),'wp_view_presentation');
  
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/wp-slim/www/presentation-public-postgresql.xql}
dbqd.wp-slim.www.presentation-public.grant_public_read {dbqd.wp-slim.www.presentation-public.grant_public_read {
  
	select
acs_permission__grant_permission(:pres_item_id,acs__magic_object_id('the_public'),'wp_view_presentation');
  
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/wp-slim/www/presentation-public-postgresql.xql}
dbqd.wp-slim.www.presentation-public.public_p_change {dbqd.wp-slim.www.presentation-public.public_p_change {
      
    update cr_wp_presentations
    set public_p = :public_p
    where presentation_id = (select live_revision
                             from cr_items
                             where item_id = :pres_item_id)

      } {} {} {} c:/web/openacs-4/packages/wp-slim/www/presentation-public.xql}
dbqd.wp-slim.www.presentation-publish-oracle.live_revision_set {dbqd.wp-slim.www.presentation-publish-oracle.live_revision_set {
      
    declare
      v_revision_id  cr_revisions.revision_id%TYPE;
    begin
      content_item.set_live_revision(:revision_id);

      select id into v_revision_id
      from cr_wp_presentations_aud
      where presentation_id = :revision_id;
      content_item.set_live_revision(v_revision_id);

      select id into v_revision_id
      from cr_wp_presentations_back
      where presentation_id = :revision_id;
      content_item.set_live_revision(v_revision_id);
    end;

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/wp-slim/www/presentation-publish-oracle.xql}
dbqd.wp-slim.www.presentation-publish.live_revision_set {dbqd.wp-slim.www.presentation-publish.live_revision_set {

      select wp_presentation__set_live_revision(:revision_id);

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/wp-slim/www/presentation-publish-postgresql.xql}
dbqd.wp-slim.www.presentation-revisions-oracle.revisions_get {dbqd.wp-slim.www.presentation-revisions-oracle.revisions_get {
      
    select r.revision_id,
           ao.creation_date as creation_date,
           ao.creation_ip,
           i.live_revision,
           p.first_names || ' ' || p.last_name as full_name
    from cr_revisions r,
         cr_items i,
         acs_objects ao,
         persons p
    where r.item_id = :pres_item_id
    and   ao.object_id = r.revision_id
    and   i.item_id = r.item_id
    and   p.person_id = ao.creation_user
    order by creation_date

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/wp-slim/www/presentation-revisions-oracle.xql}
dbqd.wp-slim.www.presentation-revisions.revisions_get {dbqd.wp-slim.www.presentation-revisions.revisions_get {
      
    select r.revision_id,
           ao.creation_date as creation_date,
           ao.creation_ip,
           i.live_revision,
           p.first_names || ' ' || p.last_name as full_name
    from cr_revisions r,
         cr_items i,
         acs_objects ao,
         persons p
    where r.item_id = :pres_item_id
    and   ao.object_id = r.revision_id
    and   i.item_id = r.item_id
    and   p.person_id = ao.creation_user
    order by creation_date

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/wp-slim/www/presentation-revisions-postgresql.xql}
dbqd.wp-slim.www.presentation-revisions.get_presentation {dbqd.wp-slim.www.presentation-revisions.get_presentation {
      
select pres_title
from cr_wp_presentations p,
     cr_items i
where i.item_id = :pres_item_id
and   i.live_revision = p.presentation_id

      } {} {} {} c:/web/openacs-4/packages/wp-slim/www/presentation-revisions.xql}
dbqd.wp-slim.www.presentation-top-oracle.get_presentation {dbqd.wp-slim.www.presentation-top-oracle.get_presentation {
      
select p.public_p,
       p.pres_title as presentation_title,
       acs_permission.permission_p(:pres_item_id, :user_id, 'wp_admin_presentation') as admin_p,
       acs_permission.permission_p(:pres_item_id, :user_id, 'wp_delete_presentation') as delete_p,
       ao.creation_user,
       p.show_comments_p,
       p.presentation_id
from cr_wp_presentations p,
     cr_items i,
     acs_objects ao
where i.item_id = :pres_item_id
and   i.live_revision = p.presentation_id
and   ao.object_id = :pres_item_id

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/wp-slim/www/presentation-top-oracle.xql}
dbqd.wp-slim.www.presentation-top-oracle.get_users {dbqd.wp-slim.www.presentation-top-oracle.get_users {
      
    select distinct (p.person_id),
           p.first_names || ' ' || p.last_name as full_name,
           perm.privilege
    from persons p,
         acs_permissions perm
    where perm.object_id = :pres_item_id
    and   perm.grantee_id = p.person_id
    and
    (perm.privilege = 'wp_view_presentation'
     or perm.privilege = 'wp_edit_presentation'
     or perm.privilege = 'wp_admin_presentation'
    )
    order by p.person_id, perm.privilege ASC

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/wp-slim/www/presentation-top-oracle.xql}
dbqd.wp-slim.www.presentation-top.get_presentation {dbqd.wp-slim.www.presentation-top.get_presentation {
      
select p.public_p,
       p.pres_title as presentation_title,
       acs_permission__permission_p(:pres_item_id, :user_id, 'wp_admin_presentation') as admin_p,
       acs_permission__permission_p(:pres_item_id, :user_id, 'wp_delete_presentation') as delete_p,
       ao.creation_user,
       p.show_comments_p,
       p.presentation_id
from cr_wp_presentations p,
     cr_items i,
     acs_objects ao
where i.item_id = :pres_item_id
and   i.live_revision = p.presentation_id
and   ao.object_id = :pres_item_id

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/wp-slim/www/presentation-top-postgresql.xql}
dbqd.wp-slim.www.presentation-top.get_users {dbqd.wp-slim.www.presentation-top.get_users {
      
    select distinct on (p.person_id) p.person_id,
           p.first_names || ' ' || p.last_name as full_name,
           perm.privilege
    from persons p,
         acs_permissions perm
    where perm.object_id = :pres_item_id
    and   perm.grantee_id = p.person_id
    and
    (perm.privilege = 'wp_view_presentation'
     or perm.privilege = 'wp_edit_presentation'
     or perm.privilege = 'wp_admin_presentation'
    )
    order by p.person_id, perm.privilege ASC

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/wp-slim/www/presentation-top-postgresql.xql}
dbqd.wp-slim.www.presentation-top.get_slides {dbqd.wp-slim.www.presentation-top.get_slides {
      
select s.sort_key, s.slide_title, i.item_id as slide_item_id
from cr_wp_slides s,
     cr_items i
where i.parent_id = :pres_item_id
and   i.live_revision = s.slide_id
order by s.sort_key

      } {} {} {} c:/web/openacs-4/packages/wp-slim/www/presentation-top.xql}
dbqd.wp-slim.www.search.user_group_name_from_id {dbqd.wp-slim.www.search.user_group_name_from_id {
      select group_name from user_groups where group_id = :limit_to_users_in_group_id
      } {} {} {} c:/web/openacs-4/packages/wp-slim/www/search.xql}
dbqd.wp-slim.www.serve-presentation-revision-oracle.get_presentation_data {dbqd.wp-slim.www.serve-presentation-revision-oracle.get_presentation_data {
      
    select p.pres_title,
           p.page_signature,
           p.copyright_notice,
           p.public_p,
           p.show_modified_p, 
           wp_presentation.get_audience_revision(:pres_revision_id) as audience,
           wp_presentation.get_background_revision(:pres_revision_id) as background,
	   p.style
    from cr_wp_presentations p, cr_items i
    where i.item_id = :pres_item_id
    and   p.presentation_id = :pres_revision_id

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/wp-slim/www/serve-presentation-revision-oracle.xql}
dbqd.wp-slim.www.serve-presentation-revision.get_presentation_data {dbqd.wp-slim.www.serve-presentation-revision.get_presentation_data {
      
    select p.pres_title,
           p.page_signature,
           p.copyright_notice,
           p.public_p,
           p.show_modified_p,
	   p.style
    from cr_wp_presentations p, cr_items i
    where i.item_id = :pres_item_id
    and   p.presentation_id = :pres_revision_id
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/wp-slim/www/serve-presentation-revision-postgresql.xql}
dbqd.wp-slim.www.serve-presentation-revision.get_aud_data {dbqd.wp-slim.www.serve-presentation-revision.get_aud_data {
    select content as audience
    from cr_revisions r, cr_wp_presentations_aud pa
    where pa.presentation_id = :pres_revision_id
    and r.revision_id = pa.id;
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/wp-slim/www/serve-presentation-revision-postgresql.xql}
dbqd.wp-slim.www.serve-presentation-revision.get_aud_data {dbqd.wp-slim.www.serve-presentation-revision.get_aud_data {
    select content as background
    from cr_revisions r, cr_wp_presentations_back pb
    where pb.presentation_id = :pres_revision_id
    and r.revision_id = pb.id;
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/wp-slim/www/serve-presentation-revision-postgresql.xql}
dbqd.wp-slim.www.serve-presentation-revision.get_presentation_data {dbqd.wp-slim.www.serve-presentation-revision.get_presentation_data {
      
    select p.pres_title,
           p.page_signature,
           p.copyright_notice,
           p.public_p,
           p.show_modified_p,
	   p.style
    from cr_wp_presentations p, cr_items i
    where i.item_id = :pres_item_id
    and   p.presentation_id = :pres_revision_id
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/wp-slim/www/serve-presentation-revision-postgresql.xql}
dbqd.wp-slim.www.serve-presentation-revision.get_audience_data {dbqd.wp-slim.www.serve-presentation-revision.get_audience_data {
    select content as audience
    from cr_revisions r, cr_wp_presentations_aud pa
    where pa.presentation_id = :pres_revision_id
    and r.revision_id = pa.id
      } {} {} {} c:/web/openacs-4/packages/wp-slim/www/serve-presentation-revision.xql}
dbqd.wp-slim.www.serve-presentation-revision.get_background_data {dbqd.wp-slim.www.serve-presentation-revision.get_background_data {
    select content as background
    from cr_revisions r, cr_wp_presentations_back pb
    where pb.presentation_id = :pres_revision_id
    and r.revision_id = pb.id
      } {} {} {} c:/web/openacs-4/packages/wp-slim/www/serve-presentation-revision.xql}
dbqd.wp-slim.www.serve-presentation.get_first_slide_item_id {dbqd.wp-slim.www.serve-presentation.get_first_slide_item_id {
      
    select item_id as first_slide_item_id
    from cr_items
    where content_type = 'cr_wp_slide'
    and   parent_id    = :pres_item_id
    and   exists (select 1 from cr_wp_slides s where s.slide_id=cr_items.live_revision and s.sort_key=1)

      } {} {} {} c:/web/openacs-4/packages/wp-slim/www/serve-presentation.xql}
dbqd.wp-slim.www.serve-presentation.get_presentation_info {dbqd.wp-slim.www.serve-presentation.get_presentation_info {
      
    select p.pres_title, p.page_signature, p.style, p.copyright_notice
    from cr_wp_presentations p, cr_items i
    where i.item_id = :pres_item_id
    and   i.live_revision = p.presentation_id

      } {} {} {} c:/web/openacs-4/packages/wp-slim/www/serve-presentation.xql}
dbqd.wp-slim.www.serve-presentation.get_owner_name {dbqd.wp-slim.www.serve-presentation.get_owner_name {
      
    select first_names || ' ' || last_name as owner_name, person_id as owner_id
    from persons, acs_objects
    where persons.person_id = acs_objects.creation_user
    and acs_objects.object_id = :pres_item_id

      } {} {} {} c:/web/openacs-4/packages/wp-slim/www/serve-presentation.xql}
dbqd.wp-slim.www.serve-presentation.get_slides {dbqd.wp-slim.www.serve-presentation.get_slides {
      
select s.slide_title, '$subsite_name/display/$pres_item_id/' || i.item_id || '.wimpy' as url
from cr_wp_slides s, cr_items i
where i.parent_id = :pres_item_id
and   i.live_revision = s.slide_id
order by s.sort_key

      } {} {} {} c:/web/openacs-4/packages/wp-slim/www/serve-presentation.xql}
dbqd.wp-slim.www.serve-presentation.get_collaborators {dbqd.wp-slim.www.serve-presentation.get_collaborators {
      
    select p.person_id,
           p.first_names || ' ' || p.last_name as full_name,
           perm.privilege
    from persons p,
         acs_permissions perm
    where perm.object_id = :pres_item_id
    and   perm.grantee_id <> :owner_id
    and   perm.grantee_id = p.person_id
    and
    ( perm.privilege = 'wp_edit_presentation'
     or perm.privilege = 'wp_admin_presentation'
    ) 
    order by p.person_id, perm.privilege ASC


      } {} {} {} c:/web/openacs-4/packages/wp-slim/www/serve-presentation.xql}
dbqd.wp-slim.www.serve-slide-oracle.get_slide_info {dbqd.wp-slim.www.serve-slide-oracle.get_slide_info {
      
    select s.slide_title,
    s.sort_key,
    wp_slide.get_preamble(:slide_item_id) as preamble,
    wp_slide.get_postamble(:slide_item_id) as postamble,
    wp_slide.get_bullet_items(:slide_item_id) as bullet_items,
    ao.creation_date as modified_date
    from cr_wp_slides s, cr_items i, acs_objects ao
    where i.item_id = :slide_item_id
    and   i.live_revision = s.slide_id
    and   ao.object_id = s.slide_id

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/wp-slim/www/serve-slide-oracle.xql}
dbqd.wp-slim.www.serve-slide-oracle.get_attachments {dbqd.wp-slim.www.serve-slide-oracle.get_attachments {
          select i.live_revision as attach_id, a.display, i.name as file_name
          from cr_items i, cr_wp_image_attachments a
          where i.parent_id = :slide_item_id and
              i.content_type in ('cr_wp_image_attachment', 'cr_wp_file_attachment') and
              i.live_revision = a.attach_id(+)
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/wp-slim/www/serve-slide-oracle.xql}
dbqd.wp-slim.www.serve-slide.get_slide_info {dbqd.wp-slim.www.serve-slide.get_slide_info {

    select s.slide_title,
    s.sort_key,
    wp_slide__get_preamble(:slide_item_id) as preamble,
    wp_slide__get_postamble(:slide_item_id) as postamble,
    wp_slide__get_bullet_items(:slide_item_id) as bullet_items,
    ao.creation_date as modified_date
    from cr_wp_slides s, cr_items i, acs_objects ao
    where i.item_id = :slide_item_id
    and   i.live_revision = s.slide_id
    and   ao.object_id = s.slide_id

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/wp-slim/www/serve-slide-postgresql.xql}
dbqd.wp-slim.www.serve-slide.get_attachments {dbqd.wp-slim.www.serve-slide.get_attachments {
          select live_revision as attach_id, display, name as file_name
          from (select live_revision, name
                from cr_items
                where parent_id = :slide_item_id and
                   content_type in ('cr_wp_image_attachment', 'cr_wp_file_attachment')) a
              left join cr_wp_image_attachments on (a.live_revision = attach_id)
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/wp-slim/www/serve-slide-postgresql.xql}
dbqd.wp-slim.www.serve-slide-revision-oracle.get_slide_info {dbqd.wp-slim.www.serve-slide-revision-oracle.get_slide_info {
      
    select s.slide_title,
    s.sort_key,
    wp_slide.get_preamble_revision(:slide_revision_id) as preamble,
    wp_slide.get_postamble_revision(:slide_revision_id) as postamble,
    wp_slide.get_bullet_items_revision(:slide_revision_id) as bullet_items,
    ao.creation_date as modified_date
    from cr_wp_slides s,
         cr_items i,
         acs_objects ao
    where i.item_id    = :slide_item_id
    and   s.slide_id   = :slide_revision_id
    and   ao.object_id = s.slide_id

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/wp-slim/www/serve-slide-revision-oracle.xql}
dbqd.wp-slim.www.serve-slide-revision-oracle.get_attachments {dbqd.wp-slim.www.serve-slide-revision-oracle.get_attachments {
          select i.live_revision as attach_id, a.display, i.name as file_name
          from cr_items i, cr_wp_image_attachments a
          where i.parent_id = :slide_item_id and
              i.content_type in ('cr_wp_image_attachment', 'cr_wp_file_attachment') and
              i.live_revision = a.attach_id(+)
      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/wp-slim/www/serve-slide-revision-oracle.xql}
dbqd.wp-slim.www.serve-slide-revision.get_slide_info {dbqd.wp-slim.www.serve-slide-revision.get_slide_info {
      
    select s.slide_title,
    s.sort_key,
    wp_slide__get_preamble_revision(:slide_revision_id) as preamble,
    wp_slide__get_postamble_revision(:slide_revision_id) as postamble,
    wp_slide__get_bullet_items_revision(:slide_revision_id) as bullet_items,
    ao.creation_date as modified_date
    from cr_wp_slides s,
         cr_items i,
         acs_objects ao
    where i.item_id    = :slide_item_id
    and   s.slide_id   = :slide_revision_id
    and   ao.object_id = s.slide_id

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/wp-slim/www/serve-slide-revision-postgresql.xql}
dbqd.wp-slim.www.serve-slide-revision.get_attachments {dbqd.wp-slim.www.serve-slide-revision.get_attachments {
          select live_revision as attach_id, display, name as file_name
          from (select live_revision, name
                from cr_items
                where parent_id = :slide_item_id and
                   content_type in ('cr_wp_image_attachment', 'cr_wp_file_attachment')) a
              left join cr_wp_image_attachments on (a.live_revision = attach_id)
      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/wp-slim/www/serve-slide-revision-postgresql.xql}
dbqd.wp-slim.www.serve-slide-revision.get_presentation_page_signature {dbqd.wp-slim.www.serve-slide-revision.get_presentation_page_signature {
      
    select p.page_signature,
    p.copyright_notice,    
    p.show_modified_p,
    p.style
    from cr_wp_presentations p, cr_items i
    where i.item_id = :pres_item_id
    and   i.live_revision = p.presentation_id

      } {} {} {} c:/web/openacs-4/packages/wp-slim/www/serve-slide-revision.xql}
dbqd.wp-slim.www.serve-slide.get_presentation_page_signature {dbqd.wp-slim.www.serve-slide.get_presentation_page_signature {
      
    select p.page_signature,
    p.copyright_notice,
    p.show_modified_p,
    p.style,
    p.show_comments_p
    from cr_wp_presentations p, cr_items i
    where i.item_id = :pres_item_id
    and   i.live_revision = p.presentation_id

      } {} {} {} c:/web/openacs-4/packages/wp-slim/www/serve-slide.xql}
dbqd.wp-slim.www.serve-slide.get_previous_slide_item_id {dbqd.wp-slim.www.serve-slide.get_previous_slide_item_id {
      
	select i.item_id
	from cr_wp_slides s, cr_items i
	where i.parent_id = :pres_item_id
        and   i.live_revision = s.slide_id
	and   s.sort_key = (:sort_key - 1)
    
      } {} {} {} c:/web/openacs-4/packages/wp-slim/www/serve-slide.xql}
dbqd.wp-slim.www.serve-slide.get_next_slide {dbqd.wp-slim.www.serve-slide.get_next_slide {
      
    select i.item_id as next_slide_item_id 
    from cr_wp_slides s, cr_items i 
    where i.parent_id = :pres_item_id
    and   i.live_revision = s.slide_id
    and   s.sort_key = :next_sort_key

      } {} {} {} c:/web/openacs-4/packages/wp-slim/www/serve-slide.xql}
dbqd.wp-slim.www.slide-publish-oracle.live_revision_set {dbqd.wp-slim.www.slide-publish-oracle.live_revision_set {
      
    declare
      v_revision_id  cr_revisions.revision_id%TYPE;
    begin
      content_item.set_live_revision(:revision_id);

      select id into v_revision_id
      from cr_wp_slides_preamble
      where slide_id = :revision_id;
      content_item.set_live_revision(v_revision_id);

      select id into v_revision_id
      from cr_wp_slides_postamble
      where slide_id = :revision_id;
      content_item.set_live_revision(v_revision_id);

      select id into v_revision_id
      from cr_wp_slides_bullet_items
      where slide_id = :revision_id;
      content_item.set_live_revision(v_revision_id);
    end;

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/wp-slim/www/slide-publish-oracle.xql}
dbqd.wp-slim.www.slide-publish.live_revision_set {dbqd.wp-slim.www.slide-publish.live_revision_set {
      select content_item__set_live_revision(:revision_id);

      select content_item__set_live_revision(preamble.id)
      from cr_wp_slides_preamble preamble
      where preamble.slide_id = :revision_id;

      select content_item__set_live_revision(postamble.id)
      from cr_wp_slides_postamble postamble
      where postamble.slide_id = :revision_id;

      select content_item__set_live_revision(bullets.id)
      from cr_wp_slides_bullet_items bullets
      where bullets.slide_id = :revision_id;

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/wp-slim/www/slide-publish-postgresql.xql}
dbqd.wp-slim.www.slide-revisions-oracle.revisions_get {dbqd.wp-slim.www.slide-revisions-oracle.revisions_get {
      
    select r.revision_id,
           ao.creation_date as creation_date,
           ao.creation_ip,
           i.live_revision,
           p.first_names || ' ' || p.last_name as full_name
    from cr_revisions r,
         cr_items i,
         acs_objects ao,
         persons p
    where r.item_id = :slide_item_id
    and   ao.object_id = r.revision_id
    and   i.item_id = r.item_id
    and   p.person_id = ao.creation_user
    order by creation_date

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/wp-slim/www/slide-revisions-oracle.xql}
dbqd.wp-slim.www.slide-revisions.revisions_get {dbqd.wp-slim.www.slide-revisions.revisions_get {
      
    select r.revision_id,
           ao.creation_date as creation_date,
           ao.creation_ip,
           i.live_revision,
           p.first_names || ' ' || p.last_name as full_name
    from cr_revisions r,
         cr_items i,
         acs_objects ao,
         persons p
    where r.item_id = :slide_item_id
    and   ao.object_id = r.revision_id
    and   i.item_id = r.item_id
    and   p.person_id = ao.creation_user
    order by creation_date

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/wp-slim/www/slide-revisions-postgresql.xql}
dbqd.wp-slim.www.slides-reorder-2.wp_slide_order_update {dbqd.wp-slim.www.slides-reorder-2.wp_slide_order_update {
      
	update cr_wp_slides
        set    sort_key = :counter
        where  exists (select 1 from cr_revisions where cr_wp_slides.slide_id = cr_revisions.revision_id and cr_revisions.item_id = :id)
    
      } {} {} {} c:/web/openacs-4/packages/wp-slim/www/slides-reorder-2.xql}
dbqd.wp-slim.www.slides-reorder.slides_sel {dbqd.wp-slim.www.slides-reorder.slides_sel {
      
    select s.sort_key, s.slide_title, i.item_id as slide_item_id
    from cr_wp_slides s, cr_items i
    where i.parent_id = :pres_item_id
    and   i.live_revision = s.slide_id
    order by s.sort_key

      } {} {} {} c:/web/openacs-4/packages/wp-slim/www/slides-reorder.xql}
dbqd.wp-slim.www.slides-reorder.get_presentation {dbqd.wp-slim.www.slides-reorder.get_presentation {
      
select pres_title
from cr_wp_presentations p,
     cr_items i
where i.item_id = :pres_item_id
and   i.live_revision = p.presentation_id

      } {} {} {} c:/web/openacs-4/packages/wp-slim/www/slides-reorder.xql}
dbqd.wp-slim.www.style-delete-2-oracle.revisions_and_item_delete {dbqd.wp-slim.www.style-delete-2-oracle.revisions_and_item_delete {

	begin
	 wp_style.del( p_style_id => :style_id );
	end;

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/wp-slim/www/style-delete-2-oracle.xql}
dbqd.wp-slim.www.style-delete-2.revisions_and_item_delete {dbqd.wp-slim.www.style-delete-2.revisions_and_item_delete {

	select wp_style__delete(:style_id)

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/wp-slim/www/style-delete-2-postgresql.xql}
dbqd.wp-slim.www.style-delete.wp_style_name_select {dbqd.wp-slim.www.style-delete.wp_style_name_select {
      
	select name from wp_styles where style_id = :style_id

      } {} {} {} c:/web/openacs-4/packages/wp-slim/www/style-delete.xql}
dbqd.wp-slim.www.style-delete.wp_image_count_select {dbqd.wp-slim.www.style-delete.wp_image_count_select {
      
	select count(*) from wp_style_images where style_id = :style_id

      } {} {} {} c:/web/openacs-4/packages/wp-slim/www/style-delete.xql}
dbqd.wp-slim.www.style-edit-2.update_style {dbqd.wp-slim.www.style-edit-2.update_style {
      
	update wp_styles set name = :name, css = :css, text_color = :text_color, 
	background_color = :background_color, background_image = :background_image, 
	link_color = :link_color, alink_color = :alink_color, 
	vlink_color = :vlink_color, public_p = :public_p 
	where style_id = :style_id 

      } {} {} {} c:/web/openacs-4/packages/wp-slim/www/style-edit-2.xql}
dbqd.wp-slim.www.style-edit-2.insert_style {dbqd.wp-slim.www.style-edit-2.insert_style {
      
	insert into wp_styles 
	(style_id, name, css, text_color, background_color, background_image, 
	link_color, alink_color, vlink_color, public_p, owner) 
	values (:style_id, :name, :css, :text_color, :background_color, :background_image, 
	:link_color, :alink_color, :vlink_color, :public_p, :user_id) 

      } {} {} {} c:/web/openacs-4/packages/wp-slim/www/style-edit-2.xql}
dbqd.wp-slim.www.style-edit-2.pres_update {dbqd.wp-slim.www.style-edit-2.pres_update {
      
	update cr_wp_presentations set style = :style_id where presentation_id = :presentation_id

      } {} {} {} c:/web/openacs-4/packages/wp-slim/www/style-edit-2.xql}
dbqd.wp-slim.www.style-edit.style_select {dbqd.wp-slim.www.style-edit.style_select {
      
    select  name,
	    css, 
	    text_color, 
	    background_color,
	    background_image,
	    link_color,
	    alink_color,
	    vlink_color,
            public_p
    from wp_styles where style_id = :style_id

      } {} {} {} c:/web/openacs-4/packages/wp-slim/www/style-edit.xql}
dbqd.wp-slim.www.style-edit.wp_file_names_select {dbqd.wp-slim.www.style-edit.wp_file_names_select {
      
        select wp_style_images_id, file_name
        from wp_style_images
        where style_id = :style_id
        order by file_name

      } {} {} {} c:/web/openacs-4/packages/wp-slim/www/style-edit.xql}
dbqd.wp-slim.www.style-image-add.wp_style_img_insert {dbqd.wp-slim.www.style-image-add.wp_style_img_insert {

    insert into wp_style_images(style_id, file_size, file_name, wp_style_images_id)
    values(:style_id, :n_bytes, :client_filename, :revision_id)

      } {} {} {} c:/web/openacs-4/packages/wp-slim/www/style-image-add.xql}
dbqd.wp-slim.www.style-image-add.get_bg_image_id {dbqd.wp-slim.www.style-image-add.get_bg_image_id {

	select background_image from wp_styles where style_id = :style_id

      } {} {} {} c:/web/openacs-4/packages/wp-slim/www/style-image-add.xql}
dbqd.wp-slim.www.style-image-add.update_bg_image {dbqd.wp-slim.www.style-image-add.update_bg_image {

	update wp_styles set background_image = :revision_id where style_id = :style_id

      } {} {} {} c:/web/openacs-4/packages/wp-slim/www/style-image-add.xql}
dbqd.wp-slim.www.style-image-delete-oracle.revisions_and_item_delete {dbqd.wp-slim.www.style-image-delete-oracle.revisions_and_item_delete {

      	begin
	 wp_style.image_delete( p_revision_id => :revision_id);
	end;

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/wp-slim/www/style-image-delete-oracle.xql}
dbqd.wp-slim.www.style-image-delete.revisions_and_item_delete {dbqd.wp-slim.www.style-image-delete.revisions_and_item_delete {
      
	select wp_style__image_delete(:revision_id)

      } {} {} {postgresql 7.1} c:/web/openacs-4/packages/wp-slim/www/style-image-delete-postgresql.xql}
dbqd.wp-slim.www.style-list-oracle.style_select_data {dbqd.wp-slim.www.style-list-oracle.style_select_data {

    select s.style_id, s.name, count(file_size) as images, sum(file_size) as total_size
    from wp_styles s, wp_style_images i 
    where s.style_id = i.style_id(+)
    and s.owner = :user_id
    group by s.style_id, s.name
    order by lower(s.name)

      } {} {} {oracle 8.1.6} c:/web/openacs-4/packages/wp-slim/www/style-list-oracle.xql}
dbqd.wp-slim.www.style-list.style_select_data {dbqd.wp-slim.www.style-list.style_select_data {

    select s.style_id, s.name, count(file_size) as images, sum(file_size) as total_size
    from wp_styles s left join wp_style_images i on (s.style_id = i.style_id) 
    where 
    s.owner = :user_id
    group by s.style_id, s.name
    order by lower(s.name)

      } {} {} {} c:/web/openacs-4/packages/wp-slim/www/style-list-postgresql.xql}
dbqd.wp-slim.www.style-list.style_select_data {dbqd.wp-slim.www.style-list.style_select_data {

    select s.style_id, s.name, count(file_size) as images, sum(file_size) as total_size
    from wp_styles s left join wp_style_images i on (s.style_id = i.style_id) 
    where 
    s.owner = :user_id
    group by s.style_id, s.name
    order by lower(s.name)

      } {} {} {} c:/web/openacs-4/packages/wp-slim/www/style-list.xql}
dbqd.wp-slim.www.style-view.style_select {dbqd.wp-slim.www.style-view.style_select {
      
    select  name,
	    css, 
	    text_color, 
	    background_color,
	    background_image,
	    link_color,
	    alink_color,
	    vlink_color
    from wp_styles where style_id = :style_id

      } {} {} {} c:/web/openacs-4/packages/wp-slim/www/style-view.xql}
dbqd.wp-slim.www.style-view.style_image_select {dbqd.wp-slim.www.style-view.style_image_select {

    select wp_style_images_id, file_size, file_name
    from   wp_style_images
    where  style_id = :style_id
    order by file_name      

      } {} {} {} c:/web/openacs-4/packages/wp-slim/www/style-view.xql}
dbqd.wp-slim.www.toggle-comments-view.toggle_comments {dbqd.wp-slim.www.toggle-comments-view.toggle_comments {

	update cr_wp_presentations set show_comments_p = :view where presentation_id = :presentation_id

      } {} {} {} c:/web/openacs-4/packages/wp-slim/www/toggle-comments-view.xql}
dbqd.wp-slim.www.users.get_wp_users {dbqd.wp-slim.www.users.get_wp_users {
      
    select p.person_id, p.first_names, p.last_name, parties.email, count(i.item_id) as num_presentations
    from persons p, cr_items i, acs_objects o, parties
    where i.content_type = 'cr_wp_presentation'
    and   o.object_id = i.item_id
    and   p.person_id = o.creation_user
    and   parties.party_id = p.person_id
    and   o.context_id = :package_id
    group by p.person_id, p.first_names, p.last_name, parties.email

      } {} {} {} c:/web/openacs-4/packages/wp-slim/www/users.xql}
